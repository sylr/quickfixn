// This is a generated file.  Don't edit it directly!

using QuickFix.Fields;
namespace QuickFix
{
    namespace FIX50SP2
    {
        public class DerivativeSecurityListRequest : Message
        {
            public const string MsgType = "z";

            public DerivativeSecurityListRequest() : base()
            {
                this.Header.SetField(new QuickFix.Fields.MsgType("z"));
            }

            public DerivativeSecurityListRequest(
                    QuickFix.Fields.SecurityReqID aSecurityReqID,
                    QuickFix.Fields.SecurityListRequestType aSecurityListRequestType
                ) : this()
            {
                this.SecurityReqID = aSecurityReqID;
                this.SecurityListRequestType = aSecurityListRequestType;
            }

            public QuickFix.Fields.SecurityReqID SecurityReqID
            {
                get
                {
                    QuickFix.Fields.SecurityReqID val = new QuickFix.Fields.SecurityReqID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityReqID val)
            {
                this.SecurityReqID = val;
            }

            public QuickFix.Fields.SecurityReqID Get(QuickFix.Fields.SecurityReqID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityReqID val)
            {
                return IsSetSecurityReqID();
            }

            public bool IsSetSecurityReqID()
            {
                return IsSetField(Tags.SecurityReqID);
            }
            public QuickFix.Fields.SecurityListRequestType SecurityListRequestType
            {
                get
                {
                    QuickFix.Fields.SecurityListRequestType val = new QuickFix.Fields.SecurityListRequestType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityListRequestType val)
            {
                this.SecurityListRequestType = val;
            }

            public QuickFix.Fields.SecurityListRequestType Get(QuickFix.Fields.SecurityListRequestType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityListRequestType val)
            {
                return IsSetSecurityListRequestType();
            }

            public bool IsSetSecurityListRequestType()
            {
                return IsSetField(Tags.SecurityListRequestType);
            }
            public QuickFix.Fields.MarketID MarketID
            {
                get
                {
                    QuickFix.Fields.MarketID val = new QuickFix.Fields.MarketID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketID val)
            {
                this.MarketID = val;
            }

            public QuickFix.Fields.MarketID Get(QuickFix.Fields.MarketID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketID val)
            {
                return IsSetMarketID();
            }

            public bool IsSetMarketID()
            {
                return IsSetField(Tags.MarketID);
            }
            public QuickFix.Fields.MarketSegmentID MarketSegmentID
            {
                get
                {
                    QuickFix.Fields.MarketSegmentID val = new QuickFix.Fields.MarketSegmentID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketSegmentID val)
            {
                this.MarketSegmentID = val;
            }

            public QuickFix.Fields.MarketSegmentID Get(QuickFix.Fields.MarketSegmentID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketSegmentID val)
            {
                return IsSetMarketSegmentID();
            }

            public bool IsSetMarketSegmentID()
            {
                return IsSetField(Tags.MarketSegmentID);
            }
            public QuickFix.Fields.UnderlyingSymbol UnderlyingSymbol
            {
                get
                {
                    QuickFix.Fields.UnderlyingSymbol val = new QuickFix.Fields.UnderlyingSymbol();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSymbol val)
            {
                this.UnderlyingSymbol = val;
            }

            public QuickFix.Fields.UnderlyingSymbol Get(QuickFix.Fields.UnderlyingSymbol val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSymbol val)
            {
                return IsSetUnderlyingSymbol();
            }

            public bool IsSetUnderlyingSymbol()
            {
                return IsSetField(Tags.UnderlyingSymbol);
            }
            public QuickFix.Fields.UnderlyingSymbolSfx UnderlyingSymbolSfx
            {
                get
                {
                    QuickFix.Fields.UnderlyingSymbolSfx val = new QuickFix.Fields.UnderlyingSymbolSfx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                this.UnderlyingSymbolSfx = val;
            }

            public QuickFix.Fields.UnderlyingSymbolSfx Get(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                return IsSetUnderlyingSymbolSfx();
            }

            public bool IsSetUnderlyingSymbolSfx()
            {
                return IsSetField(Tags.UnderlyingSymbolSfx);
            }
            public QuickFix.Fields.UnderlyingSecurityID UnderlyingSecurityID
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityID val = new QuickFix.Fields.UnderlyingSecurityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityID val)
            {
                this.UnderlyingSecurityID = val;
            }

            public QuickFix.Fields.UnderlyingSecurityID Get(QuickFix.Fields.UnderlyingSecurityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityID val)
            {
                return IsSetUnderlyingSecurityID();
            }

            public bool IsSetUnderlyingSecurityID()
            {
                return IsSetField(Tags.UnderlyingSecurityID);
            }
            public QuickFix.Fields.UnderlyingSecurityIDSource UnderlyingSecurityIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityIDSource val = new QuickFix.Fields.UnderlyingSecurityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                this.UnderlyingSecurityIDSource = val;
            }

            public QuickFix.Fields.UnderlyingSecurityIDSource Get(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                return IsSetUnderlyingSecurityIDSource();
            }

            public bool IsSetUnderlyingSecurityIDSource()
            {
                return IsSetField(Tags.UnderlyingSecurityIDSource);
            }
            public QuickFix.Fields.NoUnderlyingSecurityAltID NoUnderlyingSecurityAltID
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSecurityAltID val = new QuickFix.Fields.NoUnderlyingSecurityAltID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                this.NoUnderlyingSecurityAltID = val;
            }

            public QuickFix.Fields.NoUnderlyingSecurityAltID Get(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                return IsSetNoUnderlyingSecurityAltID();
            }

            public bool IsSetNoUnderlyingSecurityAltID()
            {
                return IsSetField(Tags.NoUnderlyingSecurityAltID);
            }
            public QuickFix.Fields.UnderlyingProduct UnderlyingProduct
            {
                get
                {
                    QuickFix.Fields.UnderlyingProduct val = new QuickFix.Fields.UnderlyingProduct();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProduct val)
            {
                this.UnderlyingProduct = val;
            }

            public QuickFix.Fields.UnderlyingProduct Get(QuickFix.Fields.UnderlyingProduct val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProduct val)
            {
                return IsSetUnderlyingProduct();
            }

            public bool IsSetUnderlyingProduct()
            {
                return IsSetField(Tags.UnderlyingProduct);
            }
            public QuickFix.Fields.UnderlyingCFICode UnderlyingCFICode
            {
                get
                {
                    QuickFix.Fields.UnderlyingCFICode val = new QuickFix.Fields.UnderlyingCFICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCFICode val)
            {
                this.UnderlyingCFICode = val;
            }

            public QuickFix.Fields.UnderlyingCFICode Get(QuickFix.Fields.UnderlyingCFICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCFICode val)
            {
                return IsSetUnderlyingCFICode();
            }

            public bool IsSetUnderlyingCFICode()
            {
                return IsSetField(Tags.UnderlyingCFICode);
            }
            public QuickFix.Fields.UnderlyingSecurityType UnderlyingSecurityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityType val = new QuickFix.Fields.UnderlyingSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityType val)
            {
                this.UnderlyingSecurityType = val;
            }

            public QuickFix.Fields.UnderlyingSecurityType Get(QuickFix.Fields.UnderlyingSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityType val)
            {
                return IsSetUnderlyingSecurityType();
            }

            public bool IsSetUnderlyingSecurityType()
            {
                return IsSetField(Tags.UnderlyingSecurityType);
            }
            public QuickFix.Fields.UnderlyingSecuritySubType UnderlyingSecuritySubType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecuritySubType val = new QuickFix.Fields.UnderlyingSecuritySubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                this.UnderlyingSecuritySubType = val;
            }

            public QuickFix.Fields.UnderlyingSecuritySubType Get(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                return IsSetUnderlyingSecuritySubType();
            }

            public bool IsSetUnderlyingSecuritySubType()
            {
                return IsSetField(Tags.UnderlyingSecuritySubType);
            }
            public QuickFix.Fields.UnderlyingMaturityMonthYear UnderlyingMaturityMonthYear
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityMonthYear val = new QuickFix.Fields.UnderlyingMaturityMonthYear();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                this.UnderlyingMaturityMonthYear = val;
            }

            public QuickFix.Fields.UnderlyingMaturityMonthYear Get(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                return IsSetUnderlyingMaturityMonthYear();
            }

            public bool IsSetUnderlyingMaturityMonthYear()
            {
                return IsSetField(Tags.UnderlyingMaturityMonthYear);
            }
            public QuickFix.Fields.UnderlyingMaturityDate UnderlyingMaturityDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityDate val = new QuickFix.Fields.UnderlyingMaturityDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                this.UnderlyingMaturityDate = val;
            }

            public QuickFix.Fields.UnderlyingMaturityDate Get(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                return IsSetUnderlyingMaturityDate();
            }

            public bool IsSetUnderlyingMaturityDate()
            {
                return IsSetField(Tags.UnderlyingMaturityDate);
            }
            public QuickFix.Fields.UnderlyingMaturityTime UnderlyingMaturityTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityTime val = new QuickFix.Fields.UnderlyingMaturityTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                this.UnderlyingMaturityTime = val;
            }

            public QuickFix.Fields.UnderlyingMaturityTime Get(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                return IsSetUnderlyingMaturityTime();
            }

            public bool IsSetUnderlyingMaturityTime()
            {
                return IsSetField(Tags.UnderlyingMaturityTime);
            }
            public QuickFix.Fields.UnderlyingCouponPaymentDate UnderlyingCouponPaymentDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponPaymentDate val = new QuickFix.Fields.UnderlyingCouponPaymentDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                this.UnderlyingCouponPaymentDate = val;
            }

            public QuickFix.Fields.UnderlyingCouponPaymentDate Get(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                return IsSetUnderlyingCouponPaymentDate();
            }

            public bool IsSetUnderlyingCouponPaymentDate()
            {
                return IsSetField(Tags.UnderlyingCouponPaymentDate);
            }
            public QuickFix.Fields.UnderlyingIssueDate UnderlyingIssueDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingIssueDate val = new QuickFix.Fields.UnderlyingIssueDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIssueDate val)
            {
                this.UnderlyingIssueDate = val;
            }

            public QuickFix.Fields.UnderlyingIssueDate Get(QuickFix.Fields.UnderlyingIssueDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIssueDate val)
            {
                return IsSetUnderlyingIssueDate();
            }

            public bool IsSetUnderlyingIssueDate()
            {
                return IsSetField(Tags.UnderlyingIssueDate);
            }
            public QuickFix.Fields.UnderlyingRepoCollateralSecurityType UnderlyingRepoCollateralSecurityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepoCollateralSecurityType val = new QuickFix.Fields.UnderlyingRepoCollateralSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                this.UnderlyingRepoCollateralSecurityType = val;
            }

            public QuickFix.Fields.UnderlyingRepoCollateralSecurityType Get(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                return IsSetUnderlyingRepoCollateralSecurityType();
            }

            public bool IsSetUnderlyingRepoCollateralSecurityType()
            {
                return IsSetField(Tags.UnderlyingRepoCollateralSecurityType);
            }
            public QuickFix.Fields.UnderlyingRepurchaseTerm UnderlyingRepurchaseTerm
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepurchaseTerm val = new QuickFix.Fields.UnderlyingRepurchaseTerm();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                this.UnderlyingRepurchaseTerm = val;
            }

            public QuickFix.Fields.UnderlyingRepurchaseTerm Get(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                return IsSetUnderlyingRepurchaseTerm();
            }

            public bool IsSetUnderlyingRepurchaseTerm()
            {
                return IsSetField(Tags.UnderlyingRepurchaseTerm);
            }
            public QuickFix.Fields.UnderlyingRepurchaseRate UnderlyingRepurchaseRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepurchaseRate val = new QuickFix.Fields.UnderlyingRepurchaseRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                this.UnderlyingRepurchaseRate = val;
            }

            public QuickFix.Fields.UnderlyingRepurchaseRate Get(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                return IsSetUnderlyingRepurchaseRate();
            }

            public bool IsSetUnderlyingRepurchaseRate()
            {
                return IsSetField(Tags.UnderlyingRepurchaseRate);
            }
            public QuickFix.Fields.UnderlyingFactor UnderlyingFactor
            {
                get
                {
                    QuickFix.Fields.UnderlyingFactor val = new QuickFix.Fields.UnderlyingFactor();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFactor val)
            {
                this.UnderlyingFactor = val;
            }

            public QuickFix.Fields.UnderlyingFactor Get(QuickFix.Fields.UnderlyingFactor val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFactor val)
            {
                return IsSetUnderlyingFactor();
            }

            public bool IsSetUnderlyingFactor()
            {
                return IsSetField(Tags.UnderlyingFactor);
            }
            public QuickFix.Fields.UnderlyingCreditRating UnderlyingCreditRating
            {
                get
                {
                    QuickFix.Fields.UnderlyingCreditRating val = new QuickFix.Fields.UnderlyingCreditRating();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCreditRating val)
            {
                this.UnderlyingCreditRating = val;
            }

            public QuickFix.Fields.UnderlyingCreditRating Get(QuickFix.Fields.UnderlyingCreditRating val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCreditRating val)
            {
                return IsSetUnderlyingCreditRating();
            }

            public bool IsSetUnderlyingCreditRating()
            {
                return IsSetField(Tags.UnderlyingCreditRating);
            }
            public QuickFix.Fields.UnderlyingInstrRegistry UnderlyingInstrRegistry
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrRegistry val = new QuickFix.Fields.UnderlyingInstrRegistry();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                this.UnderlyingInstrRegistry = val;
            }

            public QuickFix.Fields.UnderlyingInstrRegistry Get(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                return IsSetUnderlyingInstrRegistry();
            }

            public bool IsSetUnderlyingInstrRegistry()
            {
                return IsSetField(Tags.UnderlyingInstrRegistry);
            }
            public QuickFix.Fields.UnderlyingCountryOfIssue UnderlyingCountryOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCountryOfIssue val = new QuickFix.Fields.UnderlyingCountryOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                this.UnderlyingCountryOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingCountryOfIssue Get(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                return IsSetUnderlyingCountryOfIssue();
            }

            public bool IsSetUnderlyingCountryOfIssue()
            {
                return IsSetField(Tags.UnderlyingCountryOfIssue);
            }
            public QuickFix.Fields.UnderlyingStateOrProvinceOfIssue UnderlyingStateOrProvinceOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val = new QuickFix.Fields.UnderlyingStateOrProvinceOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                this.UnderlyingStateOrProvinceOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingStateOrProvinceOfIssue Get(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                return IsSetUnderlyingStateOrProvinceOfIssue();
            }

            public bool IsSetUnderlyingStateOrProvinceOfIssue()
            {
                return IsSetField(Tags.UnderlyingStateOrProvinceOfIssue);
            }
            public QuickFix.Fields.UnderlyingLocaleOfIssue UnderlyingLocaleOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingLocaleOfIssue val = new QuickFix.Fields.UnderlyingLocaleOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                this.UnderlyingLocaleOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingLocaleOfIssue Get(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                return IsSetUnderlyingLocaleOfIssue();
            }

            public bool IsSetUnderlyingLocaleOfIssue()
            {
                return IsSetField(Tags.UnderlyingLocaleOfIssue);
            }
            public QuickFix.Fields.UnderlyingRedemptionDate UnderlyingRedemptionDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingRedemptionDate val = new QuickFix.Fields.UnderlyingRedemptionDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                this.UnderlyingRedemptionDate = val;
            }

            public QuickFix.Fields.UnderlyingRedemptionDate Get(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                return IsSetUnderlyingRedemptionDate();
            }

            public bool IsSetUnderlyingRedemptionDate()
            {
                return IsSetField(Tags.UnderlyingRedemptionDate);
            }
            public QuickFix.Fields.UnderlyingStrikePrice UnderlyingStrikePrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePrice val = new QuickFix.Fields.UnderlyingStrikePrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                this.UnderlyingStrikePrice = val;
            }

            public QuickFix.Fields.UnderlyingStrikePrice Get(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                return IsSetUnderlyingStrikePrice();
            }

            public bool IsSetUnderlyingStrikePrice()
            {
                return IsSetField(Tags.UnderlyingStrikePrice);
            }
            public QuickFix.Fields.UnderlyingStrikeCurrency UnderlyingStrikeCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeCurrency val = new QuickFix.Fields.UnderlyingStrikeCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                this.UnderlyingStrikeCurrency = val;
            }

            public QuickFix.Fields.UnderlyingStrikeCurrency Get(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                return IsSetUnderlyingStrikeCurrency();
            }

            public bool IsSetUnderlyingStrikeCurrency()
            {
                return IsSetField(Tags.UnderlyingStrikeCurrency);
            }
            public QuickFix.Fields.UnderlyingOptAttribute UnderlyingOptAttribute
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptAttribute val = new QuickFix.Fields.UnderlyingOptAttribute();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                this.UnderlyingOptAttribute = val;
            }

            public QuickFix.Fields.UnderlyingOptAttribute Get(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                return IsSetUnderlyingOptAttribute();
            }

            public bool IsSetUnderlyingOptAttribute()
            {
                return IsSetField(Tags.UnderlyingOptAttribute);
            }
            public QuickFix.Fields.UnderlyingContractMultiplier UnderlyingContractMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractMultiplier val = new QuickFix.Fields.UnderlyingContractMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                this.UnderlyingContractMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingContractMultiplier Get(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                return IsSetUnderlyingContractMultiplier();
            }

            public bool IsSetUnderlyingContractMultiplier()
            {
                return IsSetField(Tags.UnderlyingContractMultiplier);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasure UnderlyingUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasure val = new QuickFix.Fields.UnderlyingUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                this.UnderlyingUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasure Get(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                return IsSetUnderlyingUnitOfMeasure();
            }

            public bool IsSetUnderlyingUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasureQty UnderlyingUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasureQty val = new QuickFix.Fields.UnderlyingUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                this.UnderlyingUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasureQty Get(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                return IsSetUnderlyingUnitOfMeasureQty();
            }

            public bool IsSetUnderlyingUnitOfMeasureQty()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasureQty);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasure UnderlyingPriceUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                this.UnderlyingPriceUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                return IsSetUnderlyingPriceUnitOfMeasure();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty UnderlyingPriceUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                this.UnderlyingPriceUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                return IsSetUnderlyingPriceUnitOfMeasureQty();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasureQty()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasureQty);
            }
            public QuickFix.Fields.UnderlyingTimeUnit UnderlyingTimeUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingTimeUnit val = new QuickFix.Fields.UnderlyingTimeUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                this.UnderlyingTimeUnit = val;
            }

            public QuickFix.Fields.UnderlyingTimeUnit Get(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                return IsSetUnderlyingTimeUnit();
            }

            public bool IsSetUnderlyingTimeUnit()
            {
                return IsSetField(Tags.UnderlyingTimeUnit);
            }
            public QuickFix.Fields.UnderlyingExerciseStyle UnderlyingExerciseStyle
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseStyle val = new QuickFix.Fields.UnderlyingExerciseStyle();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                this.UnderlyingExerciseStyle = val;
            }

            public QuickFix.Fields.UnderlyingExerciseStyle Get(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                return IsSetUnderlyingExerciseStyle();
            }

            public bool IsSetUnderlyingExerciseStyle()
            {
                return IsSetField(Tags.UnderlyingExerciseStyle);
            }
            public QuickFix.Fields.UnderlyingCouponRate UnderlyingCouponRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponRate val = new QuickFix.Fields.UnderlyingCouponRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponRate val)
            {
                this.UnderlyingCouponRate = val;
            }

            public QuickFix.Fields.UnderlyingCouponRate Get(QuickFix.Fields.UnderlyingCouponRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponRate val)
            {
                return IsSetUnderlyingCouponRate();
            }

            public bool IsSetUnderlyingCouponRate()
            {
                return IsSetField(Tags.UnderlyingCouponRate);
            }
            public QuickFix.Fields.UnderlyingSecurityExchange UnderlyingSecurityExchange
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityExchange val = new QuickFix.Fields.UnderlyingSecurityExchange();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                this.UnderlyingSecurityExchange = val;
            }

            public QuickFix.Fields.UnderlyingSecurityExchange Get(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                return IsSetUnderlyingSecurityExchange();
            }

            public bool IsSetUnderlyingSecurityExchange()
            {
                return IsSetField(Tags.UnderlyingSecurityExchange);
            }
            public QuickFix.Fields.UnderlyingIssuer UnderlyingIssuer
            {
                get
                {
                    QuickFix.Fields.UnderlyingIssuer val = new QuickFix.Fields.UnderlyingIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIssuer val)
            {
                this.UnderlyingIssuer = val;
            }

            public QuickFix.Fields.UnderlyingIssuer Get(QuickFix.Fields.UnderlyingIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIssuer val)
            {
                return IsSetUnderlyingIssuer();
            }

            public bool IsSetUnderlyingIssuer()
            {
                return IsSetField(Tags.UnderlyingIssuer);
            }
            public QuickFix.Fields.EncodedUnderlyingIssuerLen EncodedUnderlyingIssuerLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingIssuerLen val = new QuickFix.Fields.EncodedUnderlyingIssuerLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                this.EncodedUnderlyingIssuerLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingIssuerLen Get(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                return IsSetEncodedUnderlyingIssuerLen();
            }

            public bool IsSetEncodedUnderlyingIssuerLen()
            {
                return IsSetField(Tags.EncodedUnderlyingIssuerLen);
            }
            public QuickFix.Fields.EncodedUnderlyingIssuer EncodedUnderlyingIssuer
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingIssuer val = new QuickFix.Fields.EncodedUnderlyingIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                this.EncodedUnderlyingIssuer = val;
            }

            public QuickFix.Fields.EncodedUnderlyingIssuer Get(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                return IsSetEncodedUnderlyingIssuer();
            }

            public bool IsSetEncodedUnderlyingIssuer()
            {
                return IsSetField(Tags.EncodedUnderlyingIssuer);
            }
            public QuickFix.Fields.UnderlyingSecurityDesc UnderlyingSecurityDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityDesc val = new QuickFix.Fields.UnderlyingSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                this.UnderlyingSecurityDesc = val;
            }

            public QuickFix.Fields.UnderlyingSecurityDesc Get(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                return IsSetUnderlyingSecurityDesc();
            }

            public bool IsSetUnderlyingSecurityDesc()
            {
                return IsSetField(Tags.UnderlyingSecurityDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingSecurityDescLen EncodedUnderlyingSecurityDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingSecurityDescLen val = new QuickFix.Fields.EncodedUnderlyingSecurityDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                this.EncodedUnderlyingSecurityDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingSecurityDescLen Get(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                return IsSetEncodedUnderlyingSecurityDescLen();
            }

            public bool IsSetEncodedUnderlyingSecurityDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingSecurityDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingSecurityDesc EncodedUnderlyingSecurityDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingSecurityDesc val = new QuickFix.Fields.EncodedUnderlyingSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                this.EncodedUnderlyingSecurityDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingSecurityDesc Get(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                return IsSetEncodedUnderlyingSecurityDesc();
            }

            public bool IsSetEncodedUnderlyingSecurityDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingSecurityDesc);
            }
            public QuickFix.Fields.UnderlyingCPProgram UnderlyingCPProgram
            {
                get
                {
                    QuickFix.Fields.UnderlyingCPProgram val = new QuickFix.Fields.UnderlyingCPProgram();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCPProgram val)
            {
                this.UnderlyingCPProgram = val;
            }

            public QuickFix.Fields.UnderlyingCPProgram Get(QuickFix.Fields.UnderlyingCPProgram val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCPProgram val)
            {
                return IsSetUnderlyingCPProgram();
            }

            public bool IsSetUnderlyingCPProgram()
            {
                return IsSetField(Tags.UnderlyingCPProgram);
            }
            public QuickFix.Fields.UnderlyingCPRegType UnderlyingCPRegType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCPRegType val = new QuickFix.Fields.UnderlyingCPRegType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCPRegType val)
            {
                this.UnderlyingCPRegType = val;
            }

            public QuickFix.Fields.UnderlyingCPRegType Get(QuickFix.Fields.UnderlyingCPRegType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCPRegType val)
            {
                return IsSetUnderlyingCPRegType();
            }

            public bool IsSetUnderlyingCPRegType()
            {
                return IsSetField(Tags.UnderlyingCPRegType);
            }
            public QuickFix.Fields.UnderlyingAllocationPercent UnderlyingAllocationPercent
            {
                get
                {
                    QuickFix.Fields.UnderlyingAllocationPercent val = new QuickFix.Fields.UnderlyingAllocationPercent();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                this.UnderlyingAllocationPercent = val;
            }

            public QuickFix.Fields.UnderlyingAllocationPercent Get(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                return IsSetUnderlyingAllocationPercent();
            }

            public bool IsSetUnderlyingAllocationPercent()
            {
                return IsSetField(Tags.UnderlyingAllocationPercent);
            }
            public QuickFix.Fields.UnderlyingCurrency UnderlyingCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingCurrency val = new QuickFix.Fields.UnderlyingCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCurrency val)
            {
                this.UnderlyingCurrency = val;
            }

            public QuickFix.Fields.UnderlyingCurrency Get(QuickFix.Fields.UnderlyingCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCurrency val)
            {
                return IsSetUnderlyingCurrency();
            }

            public bool IsSetUnderlyingCurrency()
            {
                return IsSetField(Tags.UnderlyingCurrency);
            }
            public QuickFix.Fields.UnderlyingQty UnderlyingQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingQty val = new QuickFix.Fields.UnderlyingQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingQty val)
            {
                this.UnderlyingQty = val;
            }

            public QuickFix.Fields.UnderlyingQty Get(QuickFix.Fields.UnderlyingQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingQty val)
            {
                return IsSetUnderlyingQty();
            }

            public bool IsSetUnderlyingQty()
            {
                return IsSetField(Tags.UnderlyingQty);
            }
            public QuickFix.Fields.UnderlyingSettlementType UnderlyingSettlementType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlementType val = new QuickFix.Fields.UnderlyingSettlementType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlementType val)
            {
                this.UnderlyingSettlementType = val;
            }

            public QuickFix.Fields.UnderlyingSettlementType Get(QuickFix.Fields.UnderlyingSettlementType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlementType val)
            {
                return IsSetUnderlyingSettlementType();
            }

            public bool IsSetUnderlyingSettlementType()
            {
                return IsSetField(Tags.UnderlyingSettlementType);
            }
            public QuickFix.Fields.UnderlyingCashAmount UnderlyingCashAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCashAmount val = new QuickFix.Fields.UnderlyingCashAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCashAmount val)
            {
                this.UnderlyingCashAmount = val;
            }

            public QuickFix.Fields.UnderlyingCashAmount Get(QuickFix.Fields.UnderlyingCashAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCashAmount val)
            {
                return IsSetUnderlyingCashAmount();
            }

            public bool IsSetUnderlyingCashAmount()
            {
                return IsSetField(Tags.UnderlyingCashAmount);
            }
            public QuickFix.Fields.UnderlyingCashType UnderlyingCashType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCashType val = new QuickFix.Fields.UnderlyingCashType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCashType val)
            {
                this.UnderlyingCashType = val;
            }

            public QuickFix.Fields.UnderlyingCashType Get(QuickFix.Fields.UnderlyingCashType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCashType val)
            {
                return IsSetUnderlyingCashType();
            }

            public bool IsSetUnderlyingCashType()
            {
                return IsSetField(Tags.UnderlyingCashType);
            }
            public QuickFix.Fields.UnderlyingPx UnderlyingPx
            {
                get
                {
                    QuickFix.Fields.UnderlyingPx val = new QuickFix.Fields.UnderlyingPx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPx val)
            {
                this.UnderlyingPx = val;
            }

            public QuickFix.Fields.UnderlyingPx Get(QuickFix.Fields.UnderlyingPx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPx val)
            {
                return IsSetUnderlyingPx();
            }

            public bool IsSetUnderlyingPx()
            {
                return IsSetField(Tags.UnderlyingPx);
            }
            public QuickFix.Fields.UnderlyingDirtyPrice UnderlyingDirtyPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingDirtyPrice val = new QuickFix.Fields.UnderlyingDirtyPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                this.UnderlyingDirtyPrice = val;
            }

            public QuickFix.Fields.UnderlyingDirtyPrice Get(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                return IsSetUnderlyingDirtyPrice();
            }

            public bool IsSetUnderlyingDirtyPrice()
            {
                return IsSetField(Tags.UnderlyingDirtyPrice);
            }
            public QuickFix.Fields.UnderlyingEndPrice UnderlyingEndPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingEndPrice val = new QuickFix.Fields.UnderlyingEndPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEndPrice val)
            {
                this.UnderlyingEndPrice = val;
            }

            public QuickFix.Fields.UnderlyingEndPrice Get(QuickFix.Fields.UnderlyingEndPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEndPrice val)
            {
                return IsSetUnderlyingEndPrice();
            }

            public bool IsSetUnderlyingEndPrice()
            {
                return IsSetField(Tags.UnderlyingEndPrice);
            }
            public QuickFix.Fields.UnderlyingStartValue UnderlyingStartValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStartValue val = new QuickFix.Fields.UnderlyingStartValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStartValue val)
            {
                this.UnderlyingStartValue = val;
            }

            public QuickFix.Fields.UnderlyingStartValue Get(QuickFix.Fields.UnderlyingStartValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStartValue val)
            {
                return IsSetUnderlyingStartValue();
            }

            public bool IsSetUnderlyingStartValue()
            {
                return IsSetField(Tags.UnderlyingStartValue);
            }
            public QuickFix.Fields.UnderlyingCurrentValue UnderlyingCurrentValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCurrentValue val = new QuickFix.Fields.UnderlyingCurrentValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                this.UnderlyingCurrentValue = val;
            }

            public QuickFix.Fields.UnderlyingCurrentValue Get(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                return IsSetUnderlyingCurrentValue();
            }

            public bool IsSetUnderlyingCurrentValue()
            {
                return IsSetField(Tags.UnderlyingCurrentValue);
            }
            public QuickFix.Fields.UnderlyingEndValue UnderlyingEndValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingEndValue val = new QuickFix.Fields.UnderlyingEndValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEndValue val)
            {
                this.UnderlyingEndValue = val;
            }

            public QuickFix.Fields.UnderlyingEndValue Get(QuickFix.Fields.UnderlyingEndValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEndValue val)
            {
                return IsSetUnderlyingEndValue();
            }

            public bool IsSetUnderlyingEndValue()
            {
                return IsSetField(Tags.UnderlyingEndValue);
            }
            public QuickFix.Fields.NoUnderlyingStips NoUnderlyingStips
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingStips val = new QuickFix.Fields.NoUnderlyingStips();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingStips val)
            {
                this.NoUnderlyingStips = val;
            }

            public QuickFix.Fields.NoUnderlyingStips Get(QuickFix.Fields.NoUnderlyingStips val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingStips val)
            {
                return IsSetNoUnderlyingStips();
            }

            public bool IsSetNoUnderlyingStips()
            {
                return IsSetField(Tags.NoUnderlyingStips);
            }
            public QuickFix.Fields.UnderlyingAdjustedQuantity UnderlyingAdjustedQuantity
            {
                get
                {
                    QuickFix.Fields.UnderlyingAdjustedQuantity val = new QuickFix.Fields.UnderlyingAdjustedQuantity();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                this.UnderlyingAdjustedQuantity = val;
            }

            public QuickFix.Fields.UnderlyingAdjustedQuantity Get(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                return IsSetUnderlyingAdjustedQuantity();
            }

            public bool IsSetUnderlyingAdjustedQuantity()
            {
                return IsSetField(Tags.UnderlyingAdjustedQuantity);
            }
            public QuickFix.Fields.UnderlyingFXRate UnderlyingFXRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingFXRate val = new QuickFix.Fields.UnderlyingFXRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFXRate val)
            {
                this.UnderlyingFXRate = val;
            }

            public QuickFix.Fields.UnderlyingFXRate Get(QuickFix.Fields.UnderlyingFXRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFXRate val)
            {
                return IsSetUnderlyingFXRate();
            }

            public bool IsSetUnderlyingFXRate()
            {
                return IsSetField(Tags.UnderlyingFXRate);
            }
            public QuickFix.Fields.UnderlyingFXRateCalc UnderlyingFXRateCalc
            {
                get
                {
                    QuickFix.Fields.UnderlyingFXRateCalc val = new QuickFix.Fields.UnderlyingFXRateCalc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                this.UnderlyingFXRateCalc = val;
            }

            public QuickFix.Fields.UnderlyingFXRateCalc Get(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                return IsSetUnderlyingFXRateCalc();
            }

            public bool IsSetUnderlyingFXRateCalc()
            {
                return IsSetField(Tags.UnderlyingFXRateCalc);
            }
            public QuickFix.Fields.UnderlyingCapValue UnderlyingCapValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCapValue val = new QuickFix.Fields.UnderlyingCapValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCapValue val)
            {
                this.UnderlyingCapValue = val;
            }

            public QuickFix.Fields.UnderlyingCapValue Get(QuickFix.Fields.UnderlyingCapValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCapValue val)
            {
                return IsSetUnderlyingCapValue();
            }

            public bool IsSetUnderlyingCapValue()
            {
                return IsSetField(Tags.UnderlyingCapValue);
            }
            public QuickFix.Fields.NoUndlyInstrumentParties NoUndlyInstrumentParties
            {
                get
                {
                    QuickFix.Fields.NoUndlyInstrumentParties val = new QuickFix.Fields.NoUndlyInstrumentParties();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                this.NoUndlyInstrumentParties = val;
            }

            public QuickFix.Fields.NoUndlyInstrumentParties Get(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                return IsSetNoUndlyInstrumentParties();
            }

            public bool IsSetNoUndlyInstrumentParties()
            {
                return IsSetField(Tags.NoUndlyInstrumentParties);
            }
            public QuickFix.Fields.UnderlyingSettlMethod UnderlyingSettlMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethod val = new QuickFix.Fields.UnderlyingSettlMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                this.UnderlyingSettlMethod = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethod Get(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                return IsSetUnderlyingSettlMethod();
            }

            public bool IsSetUnderlyingSettlMethod()
            {
                return IsSetField(Tags.UnderlyingSettlMethod);
            }
            public QuickFix.Fields.UnderlyingPutOrCall UnderlyingPutOrCall
            {
                get
                {
                    QuickFix.Fields.UnderlyingPutOrCall val = new QuickFix.Fields.UnderlyingPutOrCall();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                this.UnderlyingPutOrCall = val;
            }

            public QuickFix.Fields.UnderlyingPutOrCall Get(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                return IsSetUnderlyingPutOrCall();
            }

            public bool IsSetUnderlyingPutOrCall()
            {
                return IsSetField(Tags.UnderlyingPutOrCall);
            }
            public QuickFix.Fields.UnderlyingContractMultiplierUnit UnderlyingContractMultiplierUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractMultiplierUnit val = new QuickFix.Fields.UnderlyingContractMultiplierUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                this.UnderlyingContractMultiplierUnit = val;
            }

            public QuickFix.Fields.UnderlyingContractMultiplierUnit Get(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                return IsSetUnderlyingContractMultiplierUnit();
            }

            public bool IsSetUnderlyingContractMultiplierUnit()
            {
                return IsSetField(Tags.UnderlyingContractMultiplierUnit);
            }
            public QuickFix.Fields.UnderlyingFlowScheduleType UnderlyingFlowScheduleType
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlowScheduleType val = new QuickFix.Fields.UnderlyingFlowScheduleType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                this.UnderlyingFlowScheduleType = val;
            }

            public QuickFix.Fields.UnderlyingFlowScheduleType Get(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                return IsSetUnderlyingFlowScheduleType();
            }

            public bool IsSetUnderlyingFlowScheduleType()
            {
                return IsSetField(Tags.UnderlyingFlowScheduleType);
            }
            public QuickFix.Fields.UnderlyingRestructuringType UnderlyingRestructuringType
            {
                get
                {
                    QuickFix.Fields.UnderlyingRestructuringType val = new QuickFix.Fields.UnderlyingRestructuringType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                this.UnderlyingRestructuringType = val;
            }

            public QuickFix.Fields.UnderlyingRestructuringType Get(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                return IsSetUnderlyingRestructuringType();
            }

            public bool IsSetUnderlyingRestructuringType()
            {
                return IsSetField(Tags.UnderlyingRestructuringType);
            }
            public QuickFix.Fields.UnderlyingSeniority UnderlyingSeniority
            {
                get
                {
                    QuickFix.Fields.UnderlyingSeniority val = new QuickFix.Fields.UnderlyingSeniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSeniority val)
            {
                this.UnderlyingSeniority = val;
            }

            public QuickFix.Fields.UnderlyingSeniority Get(QuickFix.Fields.UnderlyingSeniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSeniority val)
            {
                return IsSetUnderlyingSeniority();
            }

            public bool IsSetUnderlyingSeniority()
            {
                return IsSetField(Tags.UnderlyingSeniority);
            }
            public QuickFix.Fields.UnderlyingNotionalPercentageOutstanding UnderlyingNotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val = new QuickFix.Fields.UnderlyingNotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                this.UnderlyingNotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.UnderlyingNotionalPercentageOutstanding Get(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                return IsSetUnderlyingNotionalPercentageOutstanding();
            }

            public bool IsSetUnderlyingNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.UnderlyingNotionalPercentageOutstanding);
            }
            public QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding UnderlyingOriginalNotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val = new QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                this.UnderlyingOriginalNotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding Get(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                return IsSetUnderlyingOriginalNotionalPercentageOutstanding();
            }

            public bool IsSetUnderlyingOriginalNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.UnderlyingOriginalNotionalPercentageOutstanding);
            }
            public QuickFix.Fields.UnderlyingAttachmentPoint UnderlyingAttachmentPoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingAttachmentPoint val = new QuickFix.Fields.UnderlyingAttachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                this.UnderlyingAttachmentPoint = val;
            }

            public QuickFix.Fields.UnderlyingAttachmentPoint Get(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                return IsSetUnderlyingAttachmentPoint();
            }

            public bool IsSetUnderlyingAttachmentPoint()
            {
                return IsSetField(Tags.UnderlyingAttachmentPoint);
            }
            public QuickFix.Fields.UnderlyingDetachmentPoint UnderlyingDetachmentPoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingDetachmentPoint val = new QuickFix.Fields.UnderlyingDetachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                this.UnderlyingDetachmentPoint = val;
            }

            public QuickFix.Fields.UnderlyingDetachmentPoint Get(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                return IsSetUnderlyingDetachmentPoint();
            }

            public bool IsSetUnderlyingDetachmentPoint()
            {
                return IsSetField(Tags.UnderlyingDetachmentPoint);
            }
            public QuickFix.Fields.UnderlyingPriceQuoteCurrency UnderlyingPriceQuoteCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceQuoteCurrency val = new QuickFix.Fields.UnderlyingPriceQuoteCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                this.UnderlyingPriceQuoteCurrency = val;
            }

            public QuickFix.Fields.UnderlyingPriceQuoteCurrency Get(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                return IsSetUnderlyingPriceQuoteCurrency();
            }

            public bool IsSetUnderlyingPriceQuoteCurrency()
            {
                return IsSetField(Tags.UnderlyingPriceQuoteCurrency);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasureCurrency UnderlyingUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val = new QuickFix.Fields.UnderlyingUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                this.UnderlyingUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasureCurrency Get(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                return IsSetUnderlyingUnitOfMeasureCurrency();
            }

            public bool IsSetUnderlyingUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency UnderlyingPriceUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                this.UnderlyingPriceUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                return IsSetUnderlyingPriceUnitOfMeasureCurrency();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.UnderlyingContractPriceRefMonth UnderlyingContractPriceRefMonth
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractPriceRefMonth val = new QuickFix.Fields.UnderlyingContractPriceRefMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                this.UnderlyingContractPriceRefMonth = val;
            }

            public QuickFix.Fields.UnderlyingContractPriceRefMonth Get(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                return IsSetUnderlyingContractPriceRefMonth();
            }

            public bool IsSetUnderlyingContractPriceRefMonth()
            {
                return IsSetField(Tags.UnderlyingContractPriceRefMonth);
            }
            public QuickFix.Fields.UnderlyingSecurityXMLLen UnderlyingSecurityXMLLen
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXMLLen val = new QuickFix.Fields.UnderlyingSecurityXMLLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                this.UnderlyingSecurityXMLLen = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXMLLen Get(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                return IsSetUnderlyingSecurityXMLLen();
            }

            public bool IsSetUnderlyingSecurityXMLLen()
            {
                return IsSetField(Tags.UnderlyingSecurityXMLLen);
            }
            public QuickFix.Fields.UnderlyingSecurityXML UnderlyingSecurityXML
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXML val = new QuickFix.Fields.UnderlyingSecurityXML();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                this.UnderlyingSecurityXML = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXML Get(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                return IsSetUnderlyingSecurityXML();
            }

            public bool IsSetUnderlyingSecurityXML()
            {
                return IsSetField(Tags.UnderlyingSecurityXML);
            }
            public QuickFix.Fields.UnderlyingSecurityXMLSchema UnderlyingSecurityXMLSchema
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXMLSchema val = new QuickFix.Fields.UnderlyingSecurityXMLSchema();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                this.UnderlyingSecurityXMLSchema = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXMLSchema Get(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                return IsSetUnderlyingSecurityXMLSchema();
            }

            public bool IsSetUnderlyingSecurityXMLSchema()
            {
                return IsSetField(Tags.UnderlyingSecurityXMLSchema);
            }
            public QuickFix.Fields.UnderlyingConstituentWeight UnderlyingConstituentWeight
            {
                get
                {
                    QuickFix.Fields.UnderlyingConstituentWeight val = new QuickFix.Fields.UnderlyingConstituentWeight();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                this.UnderlyingConstituentWeight = val;
            }

            public QuickFix.Fields.UnderlyingConstituentWeight Get(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                return IsSetUnderlyingConstituentWeight();
            }

            public bool IsSetUnderlyingConstituentWeight()
            {
                return IsSetField(Tags.UnderlyingConstituentWeight);
            }
            public QuickFix.Fields.UnderlyingCouponType UnderlyingCouponType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponType val = new QuickFix.Fields.UnderlyingCouponType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponType val)
            {
                this.UnderlyingCouponType = val;
            }

            public QuickFix.Fields.UnderlyingCouponType Get(QuickFix.Fields.UnderlyingCouponType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponType val)
            {
                return IsSetUnderlyingCouponType();
            }

            public bool IsSetUnderlyingCouponType()
            {
                return IsSetField(Tags.UnderlyingCouponType);
            }
            public QuickFix.Fields.UnderlyingTotalIssuedAmount UnderlyingTotalIssuedAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingTotalIssuedAmount val = new QuickFix.Fields.UnderlyingTotalIssuedAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                this.UnderlyingTotalIssuedAmount = val;
            }

            public QuickFix.Fields.UnderlyingTotalIssuedAmount Get(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                return IsSetUnderlyingTotalIssuedAmount();
            }

            public bool IsSetUnderlyingTotalIssuedAmount()
            {
                return IsSetField(Tags.UnderlyingTotalIssuedAmount);
            }
            public QuickFix.Fields.UnderlyingCouponFrequencyPeriod UnderlyingCouponFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponFrequencyPeriod val = new QuickFix.Fields.UnderlyingCouponFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                this.UnderlyingCouponFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingCouponFrequencyPeriod Get(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                return IsSetUnderlyingCouponFrequencyPeriod();
            }

            public bool IsSetUnderlyingCouponFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingCouponFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingCouponFrequencyUnit UnderlyingCouponFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponFrequencyUnit val = new QuickFix.Fields.UnderlyingCouponFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                this.UnderlyingCouponFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingCouponFrequencyUnit Get(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                return IsSetUnderlyingCouponFrequencyUnit();
            }

            public bool IsSetUnderlyingCouponFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingCouponFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingCouponDayCount UnderlyingCouponDayCount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponDayCount val = new QuickFix.Fields.UnderlyingCouponDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                this.UnderlyingCouponDayCount = val;
            }

            public QuickFix.Fields.UnderlyingCouponDayCount Get(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                return IsSetUnderlyingCouponDayCount();
            }

            public bool IsSetUnderlyingCouponDayCount()
            {
                return IsSetField(Tags.UnderlyingCouponDayCount);
            }
            public QuickFix.Fields.UnderlyingObligationID UnderlyingObligationID
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationID val = new QuickFix.Fields.UnderlyingObligationID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationID val)
            {
                this.UnderlyingObligationID = val;
            }

            public QuickFix.Fields.UnderlyingObligationID Get(QuickFix.Fields.UnderlyingObligationID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationID val)
            {
                return IsSetUnderlyingObligationID();
            }

            public bool IsSetUnderlyingObligationID()
            {
                return IsSetField(Tags.UnderlyingObligationID);
            }
            public QuickFix.Fields.UnderlyingObligationIDSource UnderlyingObligationIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationIDSource val = new QuickFix.Fields.UnderlyingObligationIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                this.UnderlyingObligationIDSource = val;
            }

            public QuickFix.Fields.UnderlyingObligationIDSource Get(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                return IsSetUnderlyingObligationIDSource();
            }

            public bool IsSetUnderlyingObligationIDSource()
            {
                return IsSetField(Tags.UnderlyingObligationIDSource);
            }
            public QuickFix.Fields.UnderlyingEquityID UnderlyingEquityID
            {
                get
                {
                    QuickFix.Fields.UnderlyingEquityID val = new QuickFix.Fields.UnderlyingEquityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEquityID val)
            {
                this.UnderlyingEquityID = val;
            }

            public QuickFix.Fields.UnderlyingEquityID Get(QuickFix.Fields.UnderlyingEquityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEquityID val)
            {
                return IsSetUnderlyingEquityID();
            }

            public bool IsSetUnderlyingEquityID()
            {
                return IsSetField(Tags.UnderlyingEquityID);
            }
            public QuickFix.Fields.UnderlyingEquityIDSource UnderlyingEquityIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingEquityIDSource val = new QuickFix.Fields.UnderlyingEquityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                this.UnderlyingEquityIDSource = val;
            }

            public QuickFix.Fields.UnderlyingEquityIDSource Get(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                return IsSetUnderlyingEquityIDSource();
            }

            public bool IsSetUnderlyingEquityIDSource()
            {
                return IsSetField(Tags.UnderlyingEquityIDSource);
            }
            public QuickFix.Fields.NoUnderlyingEvents NoUnderlyingEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingEvents val = new QuickFix.Fields.NoUnderlyingEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingEvents val)
            {
                this.NoUnderlyingEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingEvents Get(QuickFix.Fields.NoUnderlyingEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingEvents val)
            {
                return IsSetNoUnderlyingEvents();
            }

            public bool IsSetNoUnderlyingEvents()
            {
                return IsSetField(Tags.NoUnderlyingEvents);
            }
            public QuickFix.Fields.UnderlyingLienSeniority UnderlyingLienSeniority
            {
                get
                {
                    QuickFix.Fields.UnderlyingLienSeniority val = new QuickFix.Fields.UnderlyingLienSeniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                this.UnderlyingLienSeniority = val;
            }

            public QuickFix.Fields.UnderlyingLienSeniority Get(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                return IsSetUnderlyingLienSeniority();
            }

            public bool IsSetUnderlyingLienSeniority()
            {
                return IsSetField(Tags.UnderlyingLienSeniority);
            }
            public QuickFix.Fields.UnderlyingLoanFacility UnderlyingLoanFacility
            {
                get
                {
                    QuickFix.Fields.UnderlyingLoanFacility val = new QuickFix.Fields.UnderlyingLoanFacility();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                this.UnderlyingLoanFacility = val;
            }

            public QuickFix.Fields.UnderlyingLoanFacility Get(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                return IsSetUnderlyingLoanFacility();
            }

            public bool IsSetUnderlyingLoanFacility()
            {
                return IsSetField(Tags.UnderlyingLoanFacility);
            }
            public QuickFix.Fields.UnderlyingReferenceEntityType UnderlyingReferenceEntityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingReferenceEntityType val = new QuickFix.Fields.UnderlyingReferenceEntityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                this.UnderlyingReferenceEntityType = val;
            }

            public QuickFix.Fields.UnderlyingReferenceEntityType Get(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                return IsSetUnderlyingReferenceEntityType();
            }

            public bool IsSetUnderlyingReferenceEntityType()
            {
                return IsSetField(Tags.UnderlyingReferenceEntityType);
            }
            public QuickFix.Fields.UnderlyingIndexSeries UnderlyingIndexSeries
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexSeries val = new QuickFix.Fields.UnderlyingIndexSeries();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                this.UnderlyingIndexSeries = val;
            }

            public QuickFix.Fields.UnderlyingIndexSeries Get(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                return IsSetUnderlyingIndexSeries();
            }

            public bool IsSetUnderlyingIndexSeries()
            {
                return IsSetField(Tags.UnderlyingIndexSeries);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexVersion UnderlyingIndexAnnexVersion
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexVersion val = new QuickFix.Fields.UnderlyingIndexAnnexVersion();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                this.UnderlyingIndexAnnexVersion = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexVersion Get(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                return IsSetUnderlyingIndexAnnexVersion();
            }

            public bool IsSetUnderlyingIndexAnnexVersion()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexVersion);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexDate UnderlyingIndexAnnexDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexDate val = new QuickFix.Fields.UnderlyingIndexAnnexDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                this.UnderlyingIndexAnnexDate = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexDate Get(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                return IsSetUnderlyingIndexAnnexDate();
            }

            public bool IsSetUnderlyingIndexAnnexDate()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexDate);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexSource UnderlyingIndexAnnexSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexSource val = new QuickFix.Fields.UnderlyingIndexAnnexSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                this.UnderlyingIndexAnnexSource = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexSource Get(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                return IsSetUnderlyingIndexAnnexSource();
            }

            public bool IsSetUnderlyingIndexAnnexSource()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexSource);
            }
            public QuickFix.Fields.UnderlyingProductComplex UnderlyingProductComplex
            {
                get
                {
                    QuickFix.Fields.UnderlyingProductComplex val = new QuickFix.Fields.UnderlyingProductComplex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProductComplex val)
            {
                this.UnderlyingProductComplex = val;
            }

            public QuickFix.Fields.UnderlyingProductComplex Get(QuickFix.Fields.UnderlyingProductComplex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProductComplex val)
            {
                return IsSetUnderlyingProductComplex();
            }

            public bool IsSetUnderlyingProductComplex()
            {
                return IsSetField(Tags.UnderlyingProductComplex);
            }
            public QuickFix.Fields.UnderlyingSecurityGroup UnderlyingSecurityGroup
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityGroup val = new QuickFix.Fields.UnderlyingSecurityGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                this.UnderlyingSecurityGroup = val;
            }

            public QuickFix.Fields.UnderlyingSecurityGroup Get(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                return IsSetUnderlyingSecurityGroup();
            }

            public bool IsSetUnderlyingSecurityGroup()
            {
                return IsSetField(Tags.UnderlyingSecurityGroup);
            }
            public QuickFix.Fields.UnderlyingSettleOnOpenFlag UnderlyingSettleOnOpenFlag
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettleOnOpenFlag val = new QuickFix.Fields.UnderlyingSettleOnOpenFlag();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                this.UnderlyingSettleOnOpenFlag = val;
            }

            public QuickFix.Fields.UnderlyingSettleOnOpenFlag Get(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                return IsSetUnderlyingSettleOnOpenFlag();
            }

            public bool IsSetUnderlyingSettleOnOpenFlag()
            {
                return IsSetField(Tags.UnderlyingSettleOnOpenFlag);
            }
            public QuickFix.Fields.UnderlyingAssignmentMethod UnderlyingAssignmentMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssignmentMethod val = new QuickFix.Fields.UnderlyingAssignmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                this.UnderlyingAssignmentMethod = val;
            }

            public QuickFix.Fields.UnderlyingAssignmentMethod Get(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                return IsSetUnderlyingAssignmentMethod();
            }

            public bool IsSetUnderlyingAssignmentMethod()
            {
                return IsSetField(Tags.UnderlyingAssignmentMethod);
            }
            public QuickFix.Fields.UnderlyingSecurityStatus UnderlyingSecurityStatus
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityStatus val = new QuickFix.Fields.UnderlyingSecurityStatus();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                this.UnderlyingSecurityStatus = val;
            }

            public QuickFix.Fields.UnderlyingSecurityStatus Get(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                return IsSetUnderlyingSecurityStatus();
            }

            public bool IsSetUnderlyingSecurityStatus()
            {
                return IsSetField(Tags.UnderlyingSecurityStatus);
            }
            public QuickFix.Fields.UnderlyingObligationType UnderlyingObligationType
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationType val = new QuickFix.Fields.UnderlyingObligationType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationType val)
            {
                this.UnderlyingObligationType = val;
            }

            public QuickFix.Fields.UnderlyingObligationType Get(QuickFix.Fields.UnderlyingObligationType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationType val)
            {
                return IsSetUnderlyingObligationType();
            }

            public bool IsSetUnderlyingObligationType()
            {
                return IsSetField(Tags.UnderlyingObligationType);
            }
            public QuickFix.Fields.UnderlyingAssetClass UnderlyingAssetClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetClass val = new QuickFix.Fields.UnderlyingAssetClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetClass val)
            {
                this.UnderlyingAssetClass = val;
            }

            public QuickFix.Fields.UnderlyingAssetClass Get(QuickFix.Fields.UnderlyingAssetClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetClass val)
            {
                return IsSetUnderlyingAssetClass();
            }

            public bool IsSetUnderlyingAssetClass()
            {
                return IsSetField(Tags.UnderlyingAssetClass);
            }
            public QuickFix.Fields.UnderlyingAssetSubClass UnderlyingAssetSubClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetSubClass val = new QuickFix.Fields.UnderlyingAssetSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                this.UnderlyingAssetSubClass = val;
            }

            public QuickFix.Fields.UnderlyingAssetSubClass Get(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                return IsSetUnderlyingAssetSubClass();
            }

            public bool IsSetUnderlyingAssetSubClass()
            {
                return IsSetField(Tags.UnderlyingAssetSubClass);
            }
            public QuickFix.Fields.UnderlyingAssetType UnderlyingAssetType
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetType val = new QuickFix.Fields.UnderlyingAssetType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetType val)
            {
                this.UnderlyingAssetType = val;
            }

            public QuickFix.Fields.UnderlyingAssetType Get(QuickFix.Fields.UnderlyingAssetType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetType val)
            {
                return IsSetUnderlyingAssetType();
            }

            public bool IsSetUnderlyingAssetType()
            {
                return IsSetField(Tags.UnderlyingAssetType);
            }
            public QuickFix.Fields.NoUnderlyingSecondaryAssetClasses NoUnderlyingSecondaryAssetClasses
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val = new QuickFix.Fields.NoUnderlyingSecondaryAssetClasses();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                this.NoUnderlyingSecondaryAssetClasses = val;
            }

            public QuickFix.Fields.NoUnderlyingSecondaryAssetClasses Get(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                return IsSetNoUnderlyingSecondaryAssetClasses();
            }

            public bool IsSetNoUnderlyingSecondaryAssetClasses()
            {
                return IsSetField(Tags.NoUnderlyingSecondaryAssetClasses);
            }
            public QuickFix.Fields.UnderlyingSwapClass UnderlyingSwapClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingSwapClass val = new QuickFix.Fields.UnderlyingSwapClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSwapClass val)
            {
                this.UnderlyingSwapClass = val;
            }

            public QuickFix.Fields.UnderlyingSwapClass Get(QuickFix.Fields.UnderlyingSwapClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSwapClass val)
            {
                return IsSetUnderlyingSwapClass();
            }

            public bool IsSetUnderlyingSwapClass()
            {
                return IsSetField(Tags.UnderlyingSwapClass);
            }
            public QuickFix.Fields.UnderlyingNthToDefault UnderlyingNthToDefault
            {
                get
                {
                    QuickFix.Fields.UnderlyingNthToDefault val = new QuickFix.Fields.UnderlyingNthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                this.UnderlyingNthToDefault = val;
            }

            public QuickFix.Fields.UnderlyingNthToDefault Get(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                return IsSetUnderlyingNthToDefault();
            }

            public bool IsSetUnderlyingNthToDefault()
            {
                return IsSetField(Tags.UnderlyingNthToDefault);
            }
            public QuickFix.Fields.UnderlyingMthToDefault UnderlyingMthToDefault
            {
                get
                {
                    QuickFix.Fields.UnderlyingMthToDefault val = new QuickFix.Fields.UnderlyingMthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                this.UnderlyingMthToDefault = val;
            }

            public QuickFix.Fields.UnderlyingMthToDefault Get(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                return IsSetUnderlyingMthToDefault();
            }

            public bool IsSetUnderlyingMthToDefault()
            {
                return IsSetField(Tags.UnderlyingMthToDefault);
            }
            public QuickFix.Fields.UnderlyingSettledEntityMatrixSource UnderlyingSettledEntityMatrixSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettledEntityMatrixSource val = new QuickFix.Fields.UnderlyingSettledEntityMatrixSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                this.UnderlyingSettledEntityMatrixSource = val;
            }

            public QuickFix.Fields.UnderlyingSettledEntityMatrixSource Get(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                return IsSetUnderlyingSettledEntityMatrixSource();
            }

            public bool IsSetUnderlyingSettledEntityMatrixSource()
            {
                return IsSetField(Tags.UnderlyingSettledEntityMatrixSource);
            }
            public QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate UnderlyingSettledEntityMatrixPublicationDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val = new QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                this.UnderlyingSettledEntityMatrixPublicationDate = val;
            }

            public QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate Get(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                return IsSetUnderlyingSettledEntityMatrixPublicationDate();
            }

            public bool IsSetUnderlyingSettledEntityMatrixPublicationDate()
            {
                return IsSetField(Tags.UnderlyingSettledEntityMatrixPublicationDate);
            }
            public QuickFix.Fields.UnderlyingStrikeMultiplier UnderlyingStrikeMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeMultiplier val = new QuickFix.Fields.UnderlyingStrikeMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                this.UnderlyingStrikeMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingStrikeMultiplier Get(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                return IsSetUnderlyingStrikeMultiplier();
            }

            public bool IsSetUnderlyingStrikeMultiplier()
            {
                return IsSetField(Tags.UnderlyingStrikeMultiplier);
            }
            public QuickFix.Fields.UnderlyingStrikeValue UnderlyingStrikeValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeValue val = new QuickFix.Fields.UnderlyingStrikeValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                this.UnderlyingStrikeValue = val;
            }

            public QuickFix.Fields.UnderlyingStrikeValue Get(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                return IsSetUnderlyingStrikeValue();
            }

            public bool IsSetUnderlyingStrikeValue()
            {
                return IsSetField(Tags.UnderlyingStrikeValue);
            }
            public QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod UnderlyingStrikePriceDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val = new QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                this.UnderlyingStrikePriceDeterminationMethod = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod Get(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                return IsSetUnderlyingStrikePriceDeterminationMethod();
            }

            public bool IsSetUnderlyingStrikePriceDeterminationMethod()
            {
                return IsSetField(Tags.UnderlyingStrikePriceDeterminationMethod);
            }
            public QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod UnderlyingStrikePriceBoundaryMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val = new QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                this.UnderlyingStrikePriceBoundaryMethod = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod Get(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                return IsSetUnderlyingStrikePriceBoundaryMethod();
            }

            public bool IsSetUnderlyingStrikePriceBoundaryMethod()
            {
                return IsSetField(Tags.UnderlyingStrikePriceBoundaryMethod);
            }
            public QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision UnderlyingStrikePriceBoundaryPrecision
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val = new QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                this.UnderlyingStrikePriceBoundaryPrecision = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision Get(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                return IsSetUnderlyingStrikePriceBoundaryPrecision();
            }

            public bool IsSetUnderlyingStrikePriceBoundaryPrecision()
            {
                return IsSetField(Tags.UnderlyingStrikePriceBoundaryPrecision);
            }
            public QuickFix.Fields.UnderlyingMinPriceIncrement UnderlyingMinPriceIncrement
            {
                get
                {
                    QuickFix.Fields.UnderlyingMinPriceIncrement val = new QuickFix.Fields.UnderlyingMinPriceIncrement();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                this.UnderlyingMinPriceIncrement = val;
            }

            public QuickFix.Fields.UnderlyingMinPriceIncrement Get(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                return IsSetUnderlyingMinPriceIncrement();
            }

            public bool IsSetUnderlyingMinPriceIncrement()
            {
                return IsSetField(Tags.UnderlyingMinPriceIncrement);
            }
            public QuickFix.Fields.UnderlyingMinPriceIncrementAmount UnderlyingMinPriceIncrementAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingMinPriceIncrementAmount val = new QuickFix.Fields.UnderlyingMinPriceIncrementAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                this.UnderlyingMinPriceIncrementAmount = val;
            }

            public QuickFix.Fields.UnderlyingMinPriceIncrementAmount Get(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                return IsSetUnderlyingMinPriceIncrementAmount();
            }

            public bool IsSetUnderlyingMinPriceIncrementAmount()
            {
                return IsSetField(Tags.UnderlyingMinPriceIncrementAmount);
            }
            public QuickFix.Fields.UnderlyingOptPayoutType UnderlyingOptPayoutType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptPayoutType val = new QuickFix.Fields.UnderlyingOptPayoutType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                this.UnderlyingOptPayoutType = val;
            }

            public QuickFix.Fields.UnderlyingOptPayoutType Get(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                return IsSetUnderlyingOptPayoutType();
            }

            public bool IsSetUnderlyingOptPayoutType()
            {
                return IsSetField(Tags.UnderlyingOptPayoutType);
            }
            public QuickFix.Fields.UnderlyingOptPayoutAmount UnderlyingOptPayoutAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptPayoutAmount val = new QuickFix.Fields.UnderlyingOptPayoutAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                this.UnderlyingOptPayoutAmount = val;
            }

            public QuickFix.Fields.UnderlyingOptPayoutAmount Get(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                return IsSetUnderlyingOptPayoutAmount();
            }

            public bool IsSetUnderlyingOptPayoutAmount()
            {
                return IsSetField(Tags.UnderlyingOptPayoutAmount);
            }
            public QuickFix.Fields.UnderlyingPriceQuoteMethod UnderlyingPriceQuoteMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceQuoteMethod val = new QuickFix.Fields.UnderlyingPriceQuoteMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                this.UnderlyingPriceQuoteMethod = val;
            }

            public QuickFix.Fields.UnderlyingPriceQuoteMethod Get(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                return IsSetUnderlyingPriceQuoteMethod();
            }

            public bool IsSetUnderlyingPriceQuoteMethod()
            {
                return IsSetField(Tags.UnderlyingPriceQuoteMethod);
            }
            public QuickFix.Fields.UnderlyingValuationMethod UnderlyingValuationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationMethod val = new QuickFix.Fields.UnderlyingValuationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                this.UnderlyingValuationMethod = val;
            }

            public QuickFix.Fields.UnderlyingValuationMethod Get(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                return IsSetUnderlyingValuationMethod();
            }

            public bool IsSetUnderlyingValuationMethod()
            {
                return IsSetField(Tags.UnderlyingValuationMethod);
            }
            public QuickFix.Fields.UnderlyingListMethod UnderlyingListMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingListMethod val = new QuickFix.Fields.UnderlyingListMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingListMethod val)
            {
                this.UnderlyingListMethod = val;
            }

            public QuickFix.Fields.UnderlyingListMethod Get(QuickFix.Fields.UnderlyingListMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingListMethod val)
            {
                return IsSetUnderlyingListMethod();
            }

            public bool IsSetUnderlyingListMethod()
            {
                return IsSetField(Tags.UnderlyingListMethod);
            }
            public QuickFix.Fields.UnderlyingCapPrice UnderlyingCapPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingCapPrice val = new QuickFix.Fields.UnderlyingCapPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCapPrice val)
            {
                this.UnderlyingCapPrice = val;
            }

            public QuickFix.Fields.UnderlyingCapPrice Get(QuickFix.Fields.UnderlyingCapPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCapPrice val)
            {
                return IsSetUnderlyingCapPrice();
            }

            public bool IsSetUnderlyingCapPrice()
            {
                return IsSetField(Tags.UnderlyingCapPrice);
            }
            public QuickFix.Fields.UnderlyingFloorPrice UnderlyingFloorPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingFloorPrice val = new QuickFix.Fields.UnderlyingFloorPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                this.UnderlyingFloorPrice = val;
            }

            public QuickFix.Fields.UnderlyingFloorPrice Get(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                return IsSetUnderlyingFloorPrice();
            }

            public bool IsSetUnderlyingFloorPrice()
            {
                return IsSetField(Tags.UnderlyingFloorPrice);
            }
            public QuickFix.Fields.UnderlyingFlexibleIndicator UnderlyingFlexibleIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlexibleIndicator val = new QuickFix.Fields.UnderlyingFlexibleIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                this.UnderlyingFlexibleIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFlexibleIndicator Get(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                return IsSetUnderlyingFlexibleIndicator();
            }

            public bool IsSetUnderlyingFlexibleIndicator()
            {
                return IsSetField(Tags.UnderlyingFlexibleIndicator);
            }
            public QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator UnderlyingFlexProductEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val = new QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                this.UnderlyingFlexProductEligibilityIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator Get(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                return IsSetUnderlyingFlexProductEligibilityIndicator();
            }

            public bool IsSetUnderlyingFlexProductEligibilityIndicator()
            {
                return IsSetField(Tags.UnderlyingFlexProductEligibilityIndicator);
            }
            public QuickFix.Fields.UnderlyingPositionLimit UnderlyingPositionLimit
            {
                get
                {
                    QuickFix.Fields.UnderlyingPositionLimit val = new QuickFix.Fields.UnderlyingPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                this.UnderlyingPositionLimit = val;
            }

            public QuickFix.Fields.UnderlyingPositionLimit Get(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                return IsSetUnderlyingPositionLimit();
            }

            public bool IsSetUnderlyingPositionLimit()
            {
                return IsSetField(Tags.UnderlyingPositionLimit);
            }
            public QuickFix.Fields.UnderlyingNTPositionLimit UnderlyingNTPositionLimit
            {
                get
                {
                    QuickFix.Fields.UnderlyingNTPositionLimit val = new QuickFix.Fields.UnderlyingNTPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                this.UnderlyingNTPositionLimit = val;
            }

            public QuickFix.Fields.UnderlyingNTPositionLimit Get(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                return IsSetUnderlyingNTPositionLimit();
            }

            public bool IsSetUnderlyingNTPositionLimit()
            {
                return IsSetField(Tags.UnderlyingNTPositionLimit);
            }
            public QuickFix.Fields.UnderlyingPool UnderlyingPool
            {
                get
                {
                    QuickFix.Fields.UnderlyingPool val = new QuickFix.Fields.UnderlyingPool();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPool val)
            {
                this.UnderlyingPool = val;
            }

            public QuickFix.Fields.UnderlyingPool Get(QuickFix.Fields.UnderlyingPool val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPool val)
            {
                return IsSetUnderlyingPool();
            }

            public bool IsSetUnderlyingPool()
            {
                return IsSetField(Tags.UnderlyingPool);
            }
            public QuickFix.Fields.UnderlyingContractSettlMonth UnderlyingContractSettlMonth
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractSettlMonth val = new QuickFix.Fields.UnderlyingContractSettlMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                this.UnderlyingContractSettlMonth = val;
            }

            public QuickFix.Fields.UnderlyingContractSettlMonth Get(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                return IsSetUnderlyingContractSettlMonth();
            }

            public bool IsSetUnderlyingContractSettlMonth()
            {
                return IsSetField(Tags.UnderlyingContractSettlMonth);
            }
            public QuickFix.Fields.UnderlyingDatedDate UnderlyingDatedDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingDatedDate val = new QuickFix.Fields.UnderlyingDatedDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDatedDate val)
            {
                this.UnderlyingDatedDate = val;
            }

            public QuickFix.Fields.UnderlyingDatedDate Get(QuickFix.Fields.UnderlyingDatedDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDatedDate val)
            {
                return IsSetUnderlyingDatedDate();
            }

            public bool IsSetUnderlyingDatedDate()
            {
                return IsSetField(Tags.UnderlyingDatedDate);
            }
            public QuickFix.Fields.UnderlyingInterestAccrualDate UnderlyingInterestAccrualDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingInterestAccrualDate val = new QuickFix.Fields.UnderlyingInterestAccrualDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                this.UnderlyingInterestAccrualDate = val;
            }

            public QuickFix.Fields.UnderlyingInterestAccrualDate Get(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                return IsSetUnderlyingInterestAccrualDate();
            }

            public bool IsSetUnderlyingInterestAccrualDate()
            {
                return IsSetField(Tags.UnderlyingInterestAccrualDate);
            }
            public QuickFix.Fields.UnderlyingShortSaleRestriction UnderlyingShortSaleRestriction
            {
                get
                {
                    QuickFix.Fields.UnderlyingShortSaleRestriction val = new QuickFix.Fields.UnderlyingShortSaleRestriction();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                this.UnderlyingShortSaleRestriction = val;
            }

            public QuickFix.Fields.UnderlyingShortSaleRestriction Get(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                return IsSetUnderlyingShortSaleRestriction();
            }

            public bool IsSetUnderlyingShortSaleRestriction()
            {
                return IsSetField(Tags.UnderlyingShortSaleRestriction);
            }
            public QuickFix.Fields.UnderlyingRefTickTableID UnderlyingRefTickTableID
            {
                get
                {
                    QuickFix.Fields.UnderlyingRefTickTableID val = new QuickFix.Fields.UnderlyingRefTickTableID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                this.UnderlyingRefTickTableID = val;
            }

            public QuickFix.Fields.UnderlyingRefTickTableID Get(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                return IsSetUnderlyingRefTickTableID();
            }

            public bool IsSetUnderlyingRefTickTableID()
            {
                return IsSetField(Tags.UnderlyingRefTickTableID);
            }
            public QuickFix.Fields.UnderlyingProtectionTermXIDRef UnderlyingProtectionTermXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingProtectionTermXIDRef val = new QuickFix.Fields.UnderlyingProtectionTermXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                this.UnderlyingProtectionTermXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingProtectionTermXIDRef Get(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                return IsSetUnderlyingProtectionTermXIDRef();
            }

            public bool IsSetUnderlyingProtectionTermXIDRef()
            {
                return IsSetField(Tags.UnderlyingProtectionTermXIDRef);
            }
            public QuickFix.Fields.UnderlyingSettlTermXIDRef UnderlyingSettlTermXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlTermXIDRef val = new QuickFix.Fields.UnderlyingSettlTermXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                this.UnderlyingSettlTermXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingSettlTermXIDRef Get(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                return IsSetUnderlyingSettlTermXIDRef();
            }

            public bool IsSetUnderlyingSettlTermXIDRef()
            {
                return IsSetField(Tags.UnderlyingSettlTermXIDRef);
            }
            public QuickFix.Fields.NoUnderlyingComplexEvents NoUnderlyingComplexEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingComplexEvents val = new QuickFix.Fields.NoUnderlyingComplexEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                this.NoUnderlyingComplexEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingComplexEvents Get(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                return IsSetNoUnderlyingComplexEvents();
            }

            public bool IsSetNoUnderlyingComplexEvents()
            {
                return IsSetField(Tags.NoUnderlyingComplexEvents);
            }
            public QuickFix.Fields.UnderlyingBusinessDayConvention UnderlyingBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingBusinessDayConvention val = new QuickFix.Fields.UnderlyingBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                this.UnderlyingBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingBusinessDayConvention Get(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                return IsSetUnderlyingBusinessDayConvention();
            }

            public bool IsSetUnderlyingBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingBusinessCenters NoUnderlyingBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingBusinessCenters val = new QuickFix.Fields.NoUnderlyingBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                this.NoUnderlyingBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingBusinessCenters Get(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                return IsSetNoUnderlyingBusinessCenters();
            }

            public bool IsSetNoUnderlyingBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingDateRollConvention UnderlyingDateRollConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingDateRollConvention val = new QuickFix.Fields.UnderlyingDateRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                this.UnderlyingDateRollConvention = val;
            }

            public QuickFix.Fields.UnderlyingDateRollConvention Get(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                return IsSetUnderlyingDateRollConvention();
            }

            public bool IsSetUnderlyingDateRollConvention()
            {
                return IsSetField(Tags.UnderlyingDateRollConvention);
            }
            public QuickFix.Fields.NoUnderlyingStreams NoUnderlyingStreams
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingStreams val = new QuickFix.Fields.NoUnderlyingStreams();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingStreams val)
            {
                this.NoUnderlyingStreams = val;
            }

            public QuickFix.Fields.NoUnderlyingStreams Get(QuickFix.Fields.NoUnderlyingStreams val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingStreams val)
            {
                return IsSetNoUnderlyingStreams();
            }

            public bool IsSetNoUnderlyingStreams()
            {
                return IsSetField(Tags.NoUnderlyingStreams);
            }
            public QuickFix.Fields.UnderlyingSettlRateIndex UnderlyingSettlRateIndex
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlRateIndex val = new QuickFix.Fields.UnderlyingSettlRateIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                this.UnderlyingSettlRateIndex = val;
            }

            public QuickFix.Fields.UnderlyingSettlRateIndex Get(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                return IsSetUnderlyingSettlRateIndex();
            }

            public bool IsSetUnderlyingSettlRateIndex()
            {
                return IsSetField(Tags.UnderlyingSettlRateIndex);
            }
            public QuickFix.Fields.UnderlyingSettlRateIndexLocation UnderlyingSettlRateIndexLocation
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlRateIndexLocation val = new QuickFix.Fields.UnderlyingSettlRateIndexLocation();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                this.UnderlyingSettlRateIndexLocation = val;
            }

            public QuickFix.Fields.UnderlyingSettlRateIndexLocation Get(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                return IsSetUnderlyingSettlRateIndexLocation();
            }

            public bool IsSetUnderlyingSettlRateIndexLocation()
            {
                return IsSetField(Tags.UnderlyingSettlRateIndexLocation);
            }
            public QuickFix.Fields.UnderlyingOptionExpirationDesc UnderlyingOptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExpirationDesc val = new QuickFix.Fields.UnderlyingOptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                this.UnderlyingOptionExpirationDesc = val;
            }

            public QuickFix.Fields.UnderlyingOptionExpirationDesc Get(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                return IsSetUnderlyingOptionExpirationDesc();
            }

            public bool IsSetUnderlyingOptionExpirationDesc()
            {
                return IsSetField(Tags.UnderlyingOptionExpirationDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen EncodedUnderlyingOptionExpirationDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val = new QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                this.EncodedUnderlyingOptionExpirationDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen Get(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                return IsSetEncodedUnderlyingOptionExpirationDescLen();
            }

            public bool IsSetEncodedUnderlyingOptionExpirationDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingOptionExpirationDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc EncodedUnderlyingOptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val = new QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                this.EncodedUnderlyingOptionExpirationDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc Get(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                return IsSetEncodedUnderlyingOptionExpirationDesc();
            }

            public bool IsSetEncodedUnderlyingOptionExpirationDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingOptionExpirationDesc);
            }
            public QuickFix.Fields.NoUnderlyingAssetAttributes NoUnderlyingAssetAttributes
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingAssetAttributes val = new QuickFix.Fields.NoUnderlyingAssetAttributes();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                this.NoUnderlyingAssetAttributes = val;
            }

            public QuickFix.Fields.NoUnderlyingAssetAttributes Get(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                return IsSetNoUnderlyingAssetAttributes();
            }

            public bool IsSetNoUnderlyingAssetAttributes()
            {
                return IsSetField(Tags.NoUnderlyingAssetAttributes);
            }
            public QuickFix.Fields.UnderlyingSwapSubClass UnderlyingSwapSubClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingSwapSubClass val = new QuickFix.Fields.UnderlyingSwapSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                this.UnderlyingSwapSubClass = val;
            }

            public QuickFix.Fields.UnderlyingSwapSubClass Get(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                return IsSetUnderlyingSwapSubClass();
            }

            public bool IsSetUnderlyingSwapSubClass()
            {
                return IsSetField(Tags.UnderlyingSwapSubClass);
            }
            public QuickFix.Fields.UnderlyingStrikeUnitOfMeasure UnderlyingStrikeUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val = new QuickFix.Fields.UnderlyingStrikeUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                this.UnderlyingStrikeUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingStrikeUnitOfMeasure Get(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                return IsSetUnderlyingStrikeUnitOfMeasure();
            }

            public bool IsSetUnderlyingStrikeUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingStrikeUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingStrikeIndex UnderlyingStrikeIndex
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndex val = new QuickFix.Fields.UnderlyingStrikeIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                this.UnderlyingStrikeIndex = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndex Get(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                return IsSetUnderlyingStrikeIndex();
            }

            public bool IsSetUnderlyingStrikeIndex()
            {
                return IsSetField(Tags.UnderlyingStrikeIndex);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexSpread UnderlyingStrikeIndexSpread
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexSpread val = new QuickFix.Fields.UnderlyingStrikeIndexSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                this.UnderlyingStrikeIndexSpread = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexSpread Get(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                return IsSetUnderlyingStrikeIndexSpread();
            }

            public bool IsSetUnderlyingStrikeIndexSpread()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexSpread);
            }
            public QuickFix.Fields.UnderlyingValuationSource UnderlyingValuationSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationSource val = new QuickFix.Fields.UnderlyingValuationSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationSource val)
            {
                this.UnderlyingValuationSource = val;
            }

            public QuickFix.Fields.UnderlyingValuationSource Get(QuickFix.Fields.UnderlyingValuationSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationSource val)
            {
                return IsSetUnderlyingValuationSource();
            }

            public bool IsSetUnderlyingValuationSource()
            {
                return IsSetField(Tags.UnderlyingValuationSource);
            }
            public QuickFix.Fields.UnderlyingValuationReferenceModel UnderlyingValuationReferenceModel
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationReferenceModel val = new QuickFix.Fields.UnderlyingValuationReferenceModel();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                this.UnderlyingValuationReferenceModel = val;
            }

            public QuickFix.Fields.UnderlyingValuationReferenceModel Get(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                return IsSetUnderlyingValuationReferenceModel();
            }

            public bool IsSetUnderlyingValuationReferenceModel()
            {
                return IsSetField(Tags.UnderlyingValuationReferenceModel);
            }
            public QuickFix.Fields.UnderlyingStrategyType UnderlyingStrategyType
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrategyType val = new QuickFix.Fields.UnderlyingStrategyType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrategyType val)
            {
                this.UnderlyingStrategyType = val;
            }

            public QuickFix.Fields.UnderlyingStrategyType Get(QuickFix.Fields.UnderlyingStrategyType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrategyType val)
            {
                return IsSetUnderlyingStrategyType();
            }

            public bool IsSetUnderlyingStrategyType()
            {
                return IsSetField(Tags.UnderlyingStrategyType);
            }
            public QuickFix.Fields.UnderlyingCommonPricingIndicator UnderlyingCommonPricingIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingCommonPricingIndicator val = new QuickFix.Fields.UnderlyingCommonPricingIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                this.UnderlyingCommonPricingIndicator = val;
            }

            public QuickFix.Fields.UnderlyingCommonPricingIndicator Get(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                return IsSetUnderlyingCommonPricingIndicator();
            }

            public bool IsSetUnderlyingCommonPricingIndicator()
            {
                return IsSetField(Tags.UnderlyingCommonPricingIndicator);
            }
            public QuickFix.Fields.UnderlyingSettlDisruptionProvision UnderlyingSettlDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlDisruptionProvision val = new QuickFix.Fields.UnderlyingSettlDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                this.UnderlyingSettlDisruptionProvision = val;
            }

            public QuickFix.Fields.UnderlyingSettlDisruptionProvision Get(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                return IsSetUnderlyingSettlDisruptionProvision();
            }

            public bool IsSetUnderlyingSettlDisruptionProvision()
            {
                return IsSetField(Tags.UnderlyingSettlDisruptionProvision);
            }
            public QuickFix.Fields.UnderlyingInstrumentRoundingDirection UnderlyingInstrumentRoundingDirection
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentRoundingDirection val = new QuickFix.Fields.UnderlyingInstrumentRoundingDirection();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                this.UnderlyingInstrumentRoundingDirection = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentRoundingDirection Get(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                return IsSetUnderlyingInstrumentRoundingDirection();
            }

            public bool IsSetUnderlyingInstrumentRoundingDirection()
            {
                return IsSetField(Tags.UnderlyingInstrumentRoundingDirection);
            }
            public QuickFix.Fields.UnderlyingInstrumentRoundingPrecision UnderlyingInstrumentRoundingPrecision
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val = new QuickFix.Fields.UnderlyingInstrumentRoundingPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                this.UnderlyingInstrumentRoundingPrecision = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentRoundingPrecision Get(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                return IsSetUnderlyingInstrumentRoundingPrecision();
            }

            public bool IsSetUnderlyingInstrumentRoundingPrecision()
            {
                return IsSetField(Tags.UnderlyingInstrumentRoundingPrecision);
            }
            public QuickFix.Fields.UnderlyingPricingDateUnadjusted UnderlyingPricingDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateUnadjusted val = new QuickFix.Fields.UnderlyingPricingDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                this.UnderlyingPricingDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateUnadjusted Get(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                return IsSetUnderlyingPricingDateUnadjusted();
            }

            public bool IsSetUnderlyingPricingDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingPricingDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention UnderlyingPricingDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                this.UnderlyingPricingDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                return IsSetUnderlyingPricingDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingPricingDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingPricingDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters NoUnderlyingPricingDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                this.NoUnderlyingPricingDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                return IsSetNoUnderlyingPricingDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingPricingDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingPricingDateBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingPricingDateAdjusted UnderlyingPricingDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateAdjusted val = new QuickFix.Fields.UnderlyingPricingDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                this.UnderlyingPricingDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateAdjusted Get(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                return IsSetUnderlyingPricingDateAdjusted();
            }

            public bool IsSetUnderlyingPricingDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingPricingDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingPricingTime UnderlyingPricingTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingTime val = new QuickFix.Fields.UnderlyingPricingTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingTime val)
            {
                this.UnderlyingPricingTime = val;
            }

            public QuickFix.Fields.UnderlyingPricingTime Get(QuickFix.Fields.UnderlyingPricingTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingTime val)
            {
                return IsSetUnderlyingPricingTime();
            }

            public bool IsSetUnderlyingPricingTime()
            {
                return IsSetField(Tags.UnderlyingPricingTime);
            }
            public QuickFix.Fields.UnderlyingPricingTimeBusinessCenter UnderlyingPricingTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingPricingTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                this.UnderlyingPricingTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingPricingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                return IsSetUnderlyingPricingTimeBusinessCenter();
            }

            public bool IsSetUnderlyingPricingTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingPricingTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionProvision UnderlyingMarketDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionProvision val = new QuickFix.Fields.UnderlyingMarketDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                this.UnderlyingMarketDisruptionProvision = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionProvision Get(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                return IsSetUnderlyingMarketDisruptionProvision();
            }

            public bool IsSetUnderlyingMarketDisruptionProvision()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionProvision);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionEvents NoUnderlyingMarketDisruptionEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val = new QuickFix.Fields.NoUnderlyingMarketDisruptionEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                this.NoUnderlyingMarketDisruptionEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionEvents Get(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                return IsSetNoUnderlyingMarketDisruptionEvents();
            }

            public bool IsSetNoUnderlyingMarketDisruptionEvents()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionEvents);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision UnderlyingMarketDisruptionFallbackProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                this.UnderlyingMarketDisruptionFallbackProvision = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                return IsSetUnderlyingMarketDisruptionFallbackProvision();
            }

            public bool IsSetUnderlyingMarketDisruptionFallbackProvision()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionFallbackProvision);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks NoUnderlyingMarketDisruptionFallbacks
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val = new QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                this.NoUnderlyingMarketDisruptionFallbacks = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks Get(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                return IsSetNoUnderlyingMarketDisruptionFallbacks();
            }

            public bool IsSetNoUnderlyingMarketDisruptionFallbacks()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionFallbacks);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices NoUnderlyingMarketDisruptionFallbackReferencePrices
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val = new QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                this.NoUnderlyingMarketDisruptionFallbackReferencePrices = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices Get(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                return IsSetNoUnderlyingMarketDisruptionFallbackReferencePrices();
            }

            public bool IsSetNoUnderlyingMarketDisruptionFallbackReferencePrices()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays UnderlyingMarketDisruptionMaximumDays
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val = new QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                this.UnderlyingMarketDisruptionMaximumDays = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays Get(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                return IsSetUnderlyingMarketDisruptionMaximumDays();
            }

            public bool IsSetUnderlyingMarketDisruptionMaximumDays()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMaximumDays);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage UnderlyingMarketDisruptionMaterialityPercentage
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val = new QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                this.UnderlyingMarketDisruptionMaterialityPercentage = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage Get(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                return IsSetUnderlyingMarketDisruptionMaterialityPercentage();
            }

            public bool IsSetUnderlyingMarketDisruptionMaterialityPercentage()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMaterialityPercentage);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts UnderlyingMarketDisruptionMinimumFuturesContracts
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val = new QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                this.UnderlyingMarketDisruptionMinimumFuturesContracts = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts Get(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                return IsSetUnderlyingMarketDisruptionMinimumFuturesContracts();
            }

            public bool IsSetUnderlyingMarketDisruptionMinimumFuturesContracts()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMinimumFuturesContracts);
            }
            public QuickFix.Fields.UnderlyingExerciseDesc UnderlyingExerciseDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseDesc val = new QuickFix.Fields.UnderlyingExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                this.UnderlyingExerciseDesc = val;
            }

            public QuickFix.Fields.UnderlyingExerciseDesc Get(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                return IsSetUnderlyingExerciseDesc();
            }

            public bool IsSetUnderlyingExerciseDesc()
            {
                return IsSetField(Tags.UnderlyingExerciseDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingExerciseDescLen EncodedUnderlyingExerciseDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingExerciseDescLen val = new QuickFix.Fields.EncodedUnderlyingExerciseDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                this.EncodedUnderlyingExerciseDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingExerciseDescLen Get(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                return IsSetEncodedUnderlyingExerciseDescLen();
            }

            public bool IsSetEncodedUnderlyingExerciseDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingExerciseDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingExerciseDesc EncodedUnderlyingExerciseDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingExerciseDesc val = new QuickFix.Fields.EncodedUnderlyingExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                this.EncodedUnderlyingExerciseDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingExerciseDesc Get(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                return IsSetEncodedUnderlyingExerciseDesc();
            }

            public bool IsSetEncodedUnderlyingExerciseDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingExerciseDesc);
            }
            public QuickFix.Fields.UnderlyingAutomaticExerciseIndicator UnderlyingAutomaticExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val = new QuickFix.Fields.UnderlyingAutomaticExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                this.UnderlyingAutomaticExerciseIndicator = val;
            }

            public QuickFix.Fields.UnderlyingAutomaticExerciseIndicator Get(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                return IsSetUnderlyingAutomaticExerciseIndicator();
            }

            public bool IsSetUnderlyingAutomaticExerciseIndicator()
            {
                return IsSetField(Tags.UnderlyingAutomaticExerciseIndicator);
            }
            public QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate UnderlyingAutomaticExerciseThresholdRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val = new QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                this.UnderlyingAutomaticExerciseThresholdRate = val;
            }

            public QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate Get(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                return IsSetUnderlyingAutomaticExerciseThresholdRate();
            }

            public bool IsSetUnderlyingAutomaticExerciseThresholdRate()
            {
                return IsSetField(Tags.UnderlyingAutomaticExerciseThresholdRate);
            }
            public QuickFix.Fields.UnderlyingExerciseConfirmationMethod UnderlyingExerciseConfirmationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseConfirmationMethod val = new QuickFix.Fields.UnderlyingExerciseConfirmationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                this.UnderlyingExerciseConfirmationMethod = val;
            }

            public QuickFix.Fields.UnderlyingExerciseConfirmationMethod Get(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                return IsSetUnderlyingExerciseConfirmationMethod();
            }

            public bool IsSetUnderlyingExerciseConfirmationMethod()
            {
                return IsSetField(Tags.UnderlyingExerciseConfirmationMethod);
            }
            public QuickFix.Fields.UnderlyingManualNoticeBusinessCenter UnderlyingManualNoticeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val = new QuickFix.Fields.UnderlyingManualNoticeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                this.UnderlyingManualNoticeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingManualNoticeBusinessCenter Get(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                return IsSetUnderlyingManualNoticeBusinessCenter();
            }

            public bool IsSetUnderlyingManualNoticeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingManualNoticeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingFallbackExerciseIndicator UnderlyingFallbackExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFallbackExerciseIndicator val = new QuickFix.Fields.UnderlyingFallbackExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                this.UnderlyingFallbackExerciseIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFallbackExerciseIndicator Get(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                return IsSetUnderlyingFallbackExerciseIndicator();
            }

            public bool IsSetUnderlyingFallbackExerciseIndicator()
            {
                return IsSetField(Tags.UnderlyingFallbackExerciseIndicator);
            }
            public QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator UnderlyingLimitedRightToConfirmIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val = new QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                this.UnderlyingLimitedRightToConfirmIndicator = val;
            }

            public QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator Get(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                return IsSetUnderlyingLimitedRightToConfirmIndicator();
            }

            public bool IsSetUnderlyingLimitedRightToConfirmIndicator()
            {
                return IsSetField(Tags.UnderlyingLimitedRightToConfirmIndicator);
            }
            public QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator UnderlyingExerciseSplitTicketIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val = new QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                this.UnderlyingExerciseSplitTicketIndicator = val;
            }

            public QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator Get(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                return IsSetUnderlyingExerciseSplitTicketIndicator();
            }

            public bool IsSetUnderlyingExerciseSplitTicketIndicator()
            {
                return IsSetField(Tags.UnderlyingExerciseSplitTicketIndicator);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention UnderlyingOptionExerciseBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val = new QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                this.UnderlyingOptionExerciseBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention Get(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                return IsSetUnderlyingOptionExerciseBusinessDayConvention();
            }

            public bool IsSetUnderlyingOptionExerciseBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters NoUnderlyingOptionExerciseBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val = new QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                this.NoUnderlyingOptionExerciseBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters Get(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                return IsSetNoUnderlyingOptionExerciseBusinessCenters();
            }

            public bool IsSetNoUnderlyingOptionExerciseBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseBusinessCenters);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseDates NoUnderlyingOptionExerciseDates
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseDates val = new QuickFix.Fields.NoUnderlyingOptionExerciseDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                this.NoUnderlyingOptionExerciseDates = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseDates Get(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                return IsSetNoUnderlyingOptionExerciseDates();
            }

            public bool IsSetNoUnderlyingOptionExerciseDates()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseDates);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType UnderlyingOptionExerciseEarliestDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod UnderlyingOptionExerciseEarliestDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit UnderlyingOptionExerciseEarliestDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod UnderlyingOptionExerciseFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                this.UnderlyingOptionExerciseFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                return IsSetUnderlyingOptionExerciseFrequencyPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit UnderlyingOptionExerciseFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val = new QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                this.UnderlyingOptionExerciseFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit Get(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                return IsSetUnderlyingOptionExerciseFrequencyUnit();
            }

            public bool IsSetUnderlyingOptionExerciseFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted UnderlyingOptionExerciseStartDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseStartDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseStartDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo UnderlyingOptionExerciseStartDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                this.UnderlyingOptionExerciseStartDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                return IsSetUnderlyingOptionExerciseStartDateRelativeTo();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod UnderlyingOptionExerciseStartDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit UnderlyingOptionExerciseStartDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType UnderlyingOptionExerciseStartDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted UnderlyingOptionExerciseStartDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                this.UnderlyingOptionExerciseStartDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                return IsSetUnderlyingOptionExerciseStartDateAdjusted();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseSkip UnderlyingOptionExerciseSkip
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseSkip val = new QuickFix.Fields.UnderlyingOptionExerciseSkip();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                this.UnderlyingOptionExerciseSkip = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseSkip Get(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                return IsSetUnderlyingOptionExerciseSkip();
            }

            public bool IsSetUnderlyingOptionExerciseSkip()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseSkip);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline UnderlyingOptionExerciseNominationDeadline
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val = new QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                this.UnderlyingOptionExerciseNominationDeadline = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline Get(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                return IsSetUnderlyingOptionExerciseNominationDeadline();
            }

            public bool IsSetUnderlyingOptionExerciseNominationDeadline()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseNominationDeadline);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted UnderlyingOptionExerciseFirstDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseFirstDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseFirstDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseFirstDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFirstDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted UnderlyingOptionExerciseLastDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseLastDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseLastDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseLastDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseLastDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestTime UnderlyingOptionExerciseEarliestTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                this.UnderlyingOptionExerciseEarliestTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestTime Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                return IsSetUnderlyingOptionExerciseEarliestTime();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseLatestTime UnderlyingOptionExerciseLatestTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseLatestTime val = new QuickFix.Fields.UnderlyingOptionExerciseLatestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                this.UnderlyingOptionExerciseLatestTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseLatestTime Get(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                return IsSetUnderlyingOptionExerciseLatestTime();
            }

            public bool IsSetUnderlyingOptionExerciseLatestTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseLatestTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter UnderlyingOptionExerciseTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                this.UnderlyingOptionExerciseTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                return IsSetUnderlyingOptionExerciseTimeBusinessCenter();
            }

            public bool IsSetUnderlyingOptionExerciseTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention UnderlyingOptionExerciseExpirationDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                this.UnderlyingOptionExerciseExpirationDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters NoUnderlyingOptionExerciseExpirationDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                this.NoUnderlyingOptionExerciseExpirationDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                return IsSetNoUnderlyingOptionExerciseExpirationDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingOptionExerciseExpirationDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates NoUnderlyingOptionExerciseExpirationDates
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val = new QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                this.NoUnderlyingOptionExerciseExpirationDates = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates Get(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                return IsSetNoUnderlyingOptionExerciseExpirationDates();
            }

            public bool IsSetNoUnderlyingOptionExerciseExpirationDates()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseExpirationDates);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo UnderlyingOptionExerciseExpirationDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                this.UnderlyingOptionExerciseExpirationDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateRelativeTo();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod UnderlyingOptionExerciseExpirationDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit UnderlyingOptionExerciseExpirationDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod UnderlyingOptionExerciseExpirationFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                this.UnderlyingOptionExerciseExpirationFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                return IsSetUnderlyingOptionExerciseExpirationFrequencyPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit UnderlyingOptionExerciseExpirationFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                this.UnderlyingOptionExerciseExpirationFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                return IsSetUnderlyingOptionExerciseExpirationFrequencyUnit();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention UnderlyingOptionExerciseExpirationRollConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                this.UnderlyingOptionExerciseExpirationRollConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                return IsSetUnderlyingOptionExerciseExpirationRollConvention();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationRollConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationRollConvention);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType UnderlyingOptionExerciseExpirationDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTime UnderlyingOptionExerciseExpirationTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                this.UnderlyingOptionExerciseExpirationTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTime Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                return IsSetUnderlyingOptionExerciseExpirationTime();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter UnderlyingOptionExerciseExpirationTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                this.UnderlyingOptionExerciseExpirationTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                return IsSetUnderlyingOptionExerciseExpirationTimeBusinessCenter();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectingPartySide UnderlyingSettlMethodElectingPartySide
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val = new QuickFix.Fields.UnderlyingSettlMethodElectingPartySide();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                this.UnderlyingSettlMethodElectingPartySide = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectingPartySide Get(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                return IsSetUnderlyingSettlMethodElectingPartySide();
            }

            public bool IsSetUnderlyingSettlMethodElectingPartySide()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectingPartySide);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted UnderlyingSettlMethodElectionDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                this.UnderlyingSettlMethodElectionDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                return IsSetUnderlyingSettlMethodElectionDateUnadjusted();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention UnderlyingSettlMethodElectionDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                this.UnderlyingSettlMethodElectionDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                return IsSetUnderlyingSettlMethodElectionDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters NoUnderlyingSettlMethodElectionDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                this.NoUnderlyingSettlMethodElectionDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                return IsSetNoUnderlyingSettlMethodElectionDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingSettlMethodElectionDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo UnderlyingSettlMethodElectionDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                this.UnderlyingSettlMethodElectionDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                return IsSetUnderlyingSettlMethodElectionDateRelativeTo();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod UnderlyingSettlMethodElectionDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetPeriod();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit UnderlyingSettlMethodElectionDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetUnit();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType UnderlyingSettlMethodElectionDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetDayType();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted UnderlyingSettlMethodElectionDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                this.UnderlyingSettlMethodElectionDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                return IsSetUnderlyingSettlMethodElectionDateAdjusted();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingMakeWholeDate UnderlyingMakeWholeDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeDate val = new QuickFix.Fields.UnderlyingMakeWholeDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                this.UnderlyingMakeWholeDate = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeDate Get(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                return IsSetUnderlyingMakeWholeDate();
            }

            public bool IsSetUnderlyingMakeWholeDate()
            {
                return IsSetField(Tags.UnderlyingMakeWholeDate);
            }
            public QuickFix.Fields.UnderlyingMakeWholeAmount UnderlyingMakeWholeAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeAmount val = new QuickFix.Fields.UnderlyingMakeWholeAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                this.UnderlyingMakeWholeAmount = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeAmount Get(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                return IsSetUnderlyingMakeWholeAmount();
            }

            public bool IsSetUnderlyingMakeWholeAmount()
            {
                return IsSetField(Tags.UnderlyingMakeWholeAmount);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName UnderlyingMakeWholeBenchmarkCurveName
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                this.UnderlyingMakeWholeBenchmarkCurveName = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkCurveName();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkCurveName()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkCurveName);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint UnderlyingMakeWholeBenchmarkCurvePoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                this.UnderlyingMakeWholeBenchmarkCurvePoint = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkCurvePoint();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkCurvePoint()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkCurvePoint);
            }
            public QuickFix.Fields.UnderlyingMakeWholeRecallSpread UnderlyingMakeWholeRecallSpread
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeRecallSpread val = new QuickFix.Fields.UnderlyingMakeWholeRecallSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                this.UnderlyingMakeWholeRecallSpread = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeRecallSpread Get(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                return IsSetUnderlyingMakeWholeRecallSpread();
            }

            public bool IsSetUnderlyingMakeWholeRecallSpread()
            {
                return IsSetField(Tags.UnderlyingMakeWholeRecallSpread);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote UnderlyingMakeWholeBenchmarkQuote
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                this.UnderlyingMakeWholeBenchmarkQuote = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkQuote();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkQuote()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkQuote);
            }
            public QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod UnderlyingMakeWholeInterpolationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val = new QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                this.UnderlyingMakeWholeInterpolationMethod = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod Get(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                return IsSetUnderlyingMakeWholeInterpolationMethod();
            }

            public bool IsSetUnderlyingMakeWholeInterpolationMethod()
            {
                return IsSetField(Tags.UnderlyingMakeWholeInterpolationMethod);
            }
            public QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier UnderlyingTradingUnitPeriodMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val = new QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                this.UnderlyingTradingUnitPeriodMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier Get(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                return IsSetUnderlyingTradingUnitPeriodMultiplier();
            }

            public bool IsSetUnderlyingTradingUnitPeriodMultiplier()
            {
                return IsSetField(Tags.UnderlyingTradingUnitPeriodMultiplier);
            }
            public QuickFix.Fields.NoUnderlyingProvisions NoUnderlyingProvisions
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingProvisions val = new QuickFix.Fields.NoUnderlyingProvisions();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                this.NoUnderlyingProvisions = val;
            }

            public QuickFix.Fields.NoUnderlyingProvisions Get(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                return IsSetNoUnderlyingProvisions();
            }

            public bool IsSetNoUnderlyingProvisions()
            {
                return IsSetField(Tags.NoUnderlyingProvisions);
            }
            public QuickFix.Fields.NoUnderlyingAdditionalTerms NoUnderlyingAdditionalTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingAdditionalTerms val = new QuickFix.Fields.NoUnderlyingAdditionalTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                this.NoUnderlyingAdditionalTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingAdditionalTerms Get(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                return IsSetNoUnderlyingAdditionalTerms();
            }

            public bool IsSetNoUnderlyingAdditionalTerms()
            {
                return IsSetField(Tags.NoUnderlyingAdditionalTerms);
            }
            public QuickFix.Fields.NoUnderlyingProtectionTerms NoUnderlyingProtectionTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingProtectionTerms val = new QuickFix.Fields.NoUnderlyingProtectionTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                this.NoUnderlyingProtectionTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingProtectionTerms Get(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                return IsSetNoUnderlyingProtectionTerms();
            }

            public bool IsSetNoUnderlyingProtectionTerms()
            {
                return IsSetField(Tags.NoUnderlyingProtectionTerms);
            }
            public QuickFix.Fields.NoUnderlyingCashSettlTerms NoUnderlyingCashSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingCashSettlTerms val = new QuickFix.Fields.NoUnderlyingCashSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                this.NoUnderlyingCashSettlTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingCashSettlTerms Get(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                return IsSetNoUnderlyingCashSettlTerms();
            }

            public bool IsSetNoUnderlyingCashSettlTerms()
            {
                return IsSetField(Tags.NoUnderlyingCashSettlTerms);
            }
            public QuickFix.Fields.NoUnderlyingPhysicalSettlTerms NoUnderlyingPhysicalSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val = new QuickFix.Fields.NoUnderlyingPhysicalSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                this.NoUnderlyingPhysicalSettlTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingPhysicalSettlTerms Get(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                return IsSetNoUnderlyingPhysicalSettlTerms();
            }

            public bool IsSetNoUnderlyingPhysicalSettlTerms()
            {
                return IsSetField(Tags.NoUnderlyingPhysicalSettlTerms);
            }
            public QuickFix.Fields.UnderlyingAssetGroup UnderlyingAssetGroup
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetGroup val = new QuickFix.Fields.UnderlyingAssetGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                this.UnderlyingAssetGroup = val;
            }

            public QuickFix.Fields.UnderlyingAssetGroup Get(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                return IsSetUnderlyingAssetGroup();
            }

            public bool IsSetUnderlyingAssetGroup()
            {
                return IsSetField(Tags.UnderlyingAssetGroup);
            }
            public QuickFix.Fields.UnderlyingNotional UnderlyingNotional
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotional val = new QuickFix.Fields.UnderlyingNotional();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotional val)
            {
                this.UnderlyingNotional = val;
            }

            public QuickFix.Fields.UnderlyingNotional Get(QuickFix.Fields.UnderlyingNotional val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotional val)
            {
                return IsSetUnderlyingNotional();
            }

            public bool IsSetUnderlyingNotional()
            {
                return IsSetField(Tags.UnderlyingNotional);
            }
            public QuickFix.Fields.UnderlyingNotionalCurrency UnderlyingNotionalCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalCurrency val = new QuickFix.Fields.UnderlyingNotionalCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                this.UnderlyingNotionalCurrency = val;
            }

            public QuickFix.Fields.UnderlyingNotionalCurrency Get(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                return IsSetUnderlyingNotionalCurrency();
            }

            public bool IsSetUnderlyingNotionalCurrency()
            {
                return IsSetField(Tags.UnderlyingNotionalCurrency);
            }
            public QuickFix.Fields.UnderlyingNotionalDeterminationMethod UnderlyingNotionalDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalDeterminationMethod val = new QuickFix.Fields.UnderlyingNotionalDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                this.UnderlyingNotionalDeterminationMethod = val;
            }

            public QuickFix.Fields.UnderlyingNotionalDeterminationMethod Get(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                return IsSetUnderlyingNotionalDeterminationMethod();
            }

            public bool IsSetUnderlyingNotionalDeterminationMethod()
            {
                return IsSetField(Tags.UnderlyingNotionalDeterminationMethod);
            }
            public QuickFix.Fields.UnderlyingNotionalAdjustments UnderlyingNotionalAdjustments
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalAdjustments val = new QuickFix.Fields.UnderlyingNotionalAdjustments();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                this.UnderlyingNotionalAdjustments = val;
            }

            public QuickFix.Fields.UnderlyingNotionalAdjustments Get(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                return IsSetUnderlyingNotionalAdjustments();
            }

            public bool IsSetUnderlyingNotionalAdjustments()
            {
                return IsSetField(Tags.UnderlyingNotionalAdjustments);
            }
            public QuickFix.Fields.UnderlyingNotionalXIDRef UnderlyingNotionalXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalXIDRef val = new QuickFix.Fields.UnderlyingNotionalXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                this.UnderlyingNotionalXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingNotionalXIDRef Get(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                return IsSetUnderlyingNotionalXIDRef();
            }

            public bool IsSetUnderlyingNotionalXIDRef()
            {
                return IsSetField(Tags.UnderlyingNotionalXIDRef);
            }
            public QuickFix.Fields.UnderlyingFutureID UnderlyingFutureID
            {
                get
                {
                    QuickFix.Fields.UnderlyingFutureID val = new QuickFix.Fields.UnderlyingFutureID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFutureID val)
            {
                this.UnderlyingFutureID = val;
            }

            public QuickFix.Fields.UnderlyingFutureID Get(QuickFix.Fields.UnderlyingFutureID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFutureID val)
            {
                return IsSetUnderlyingFutureID();
            }

            public bool IsSetUnderlyingFutureID()
            {
                return IsSetField(Tags.UnderlyingFutureID);
            }
            public QuickFix.Fields.UnderlyingFutureIDSource UnderlyingFutureIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingFutureIDSource val = new QuickFix.Fields.UnderlyingFutureIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                this.UnderlyingFutureIDSource = val;
            }

            public QuickFix.Fields.UnderlyingFutureIDSource Get(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                return IsSetUnderlyingFutureIDSource();
            }

            public bool IsSetUnderlyingFutureIDSource()
            {
                return IsSetField(Tags.UnderlyingFutureIDSource);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexCurvePoint UnderlyingStrikeIndexCurvePoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val = new QuickFix.Fields.UnderlyingStrikeIndexCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                this.UnderlyingStrikeIndexCurvePoint = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexCurvePoint Get(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                return IsSetUnderlyingStrikeIndexCurvePoint();
            }

            public bool IsSetUnderlyingStrikeIndexCurvePoint()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexCurvePoint);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexQuote UnderlyingStrikeIndexQuote
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexQuote val = new QuickFix.Fields.UnderlyingStrikeIndexQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                this.UnderlyingStrikeIndexQuote = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexQuote Get(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                return IsSetUnderlyingStrikeIndexQuote();
            }

            public bool IsSetUnderlyingStrikeIndexQuote()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexQuote);
            }
            public QuickFix.Fields.UnderlyingRateSpreadInitialValue UnderlyingRateSpreadInitialValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingRateSpreadInitialValue val = new QuickFix.Fields.UnderlyingRateSpreadInitialValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                this.UnderlyingRateSpreadInitialValue = val;
            }

            public QuickFix.Fields.UnderlyingRateSpreadInitialValue Get(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                return IsSetUnderlyingRateSpreadInitialValue();
            }

            public bool IsSetUnderlyingRateSpreadInitialValue()
            {
                return IsSetField(Tags.UnderlyingRateSpreadInitialValue);
            }
            public QuickFix.Fields.NoUnderlyingRateSpreadSteps NoUnderlyingRateSpreadSteps
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingRateSpreadSteps val = new QuickFix.Fields.NoUnderlyingRateSpreadSteps();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                this.NoUnderlyingRateSpreadSteps = val;
            }

            public QuickFix.Fields.NoUnderlyingRateSpreadSteps Get(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                return IsSetNoUnderlyingRateSpreadSteps();
            }

            public bool IsSetNoUnderlyingRateSpreadSteps()
            {
                return IsSetField(Tags.NoUnderlyingRateSpreadSteps);
            }
            public QuickFix.Fields.UnderlyingDividendPayoutRatio UnderlyingDividendPayoutRatio
            {
                get
                {
                    QuickFix.Fields.UnderlyingDividendPayoutRatio val = new QuickFix.Fields.UnderlyingDividendPayoutRatio();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                this.UnderlyingDividendPayoutRatio = val;
            }

            public QuickFix.Fields.UnderlyingDividendPayoutRatio Get(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                return IsSetUnderlyingDividendPayoutRatio();
            }

            public bool IsSetUnderlyingDividendPayoutRatio()
            {
                return IsSetField(Tags.UnderlyingDividendPayoutRatio);
            }
            public QuickFix.Fields.UnderlyingDividendPayoutConditions UnderlyingDividendPayoutConditions
            {
                get
                {
                    QuickFix.Fields.UnderlyingDividendPayoutConditions val = new QuickFix.Fields.UnderlyingDividendPayoutConditions();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                this.UnderlyingDividendPayoutConditions = val;
            }

            public QuickFix.Fields.UnderlyingDividendPayoutConditions Get(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                return IsSetUnderlyingDividendPayoutConditions();
            }

            public bool IsSetUnderlyingDividendPayoutConditions()
            {
                return IsSetField(Tags.UnderlyingDividendPayoutConditions);
            }
            public QuickFix.Fields.NoUnderlyingDividendPayments NoUnderlyingDividendPayments
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingDividendPayments val = new QuickFix.Fields.NoUnderlyingDividendPayments();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                this.NoUnderlyingDividendPayments = val;
            }

            public QuickFix.Fields.NoUnderlyingDividendPayments Get(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                return IsSetNoUnderlyingDividendPayments();
            }

            public bool IsSetNoUnderlyingDividendPayments()
            {
                return IsSetField(Tags.NoUnderlyingDividendPayments);
            }
            public QuickFix.Fields.NoUnderlyingExtraordinaryEvents NoUnderlyingExtraordinaryEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingExtraordinaryEvents val = new QuickFix.Fields.NoUnderlyingExtraordinaryEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                this.NoUnderlyingExtraordinaryEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingExtraordinaryEvents Get(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                return IsSetNoUnderlyingExtraordinaryEvents();
            }

            public bool IsSetNoUnderlyingExtraordinaryEvents()
            {
                return IsSetField(Tags.NoUnderlyingExtraordinaryEvents);
            }
            public QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod UnderlyingExtraordinaryEventAdjustmentMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val = new QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                this.UnderlyingExtraordinaryEventAdjustmentMethod = val;
            }

            public QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod Get(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                return IsSetUnderlyingExtraordinaryEventAdjustmentMethod();
            }

            public bool IsSetUnderlyingExtraordinaryEventAdjustmentMethod()
            {
                return IsSetField(Tags.UnderlyingExtraordinaryEventAdjustmentMethod);
            }
            public QuickFix.Fields.UnderlyingExchangeLookAlike UnderlyingExchangeLookAlike
            {
                get
                {
                    QuickFix.Fields.UnderlyingExchangeLookAlike val = new QuickFix.Fields.UnderlyingExchangeLookAlike();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                this.UnderlyingExchangeLookAlike = val;
            }

            public QuickFix.Fields.UnderlyingExchangeLookAlike Get(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                return IsSetUnderlyingExchangeLookAlike();
            }

            public bool IsSetUnderlyingExchangeLookAlike()
            {
                return IsSetField(Tags.UnderlyingExchangeLookAlike);
            }
            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage UnderlyingAverageVolumeLimitationPercentage
            {
                get
                {
                    QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val = new QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                this.UnderlyingAverageVolumeLimitationPercentage = val;
            }

            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage Get(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                return IsSetUnderlyingAverageVolumeLimitationPercentage();
            }

            public bool IsSetUnderlyingAverageVolumeLimitationPercentage()
            {
                return IsSetField(Tags.UnderlyingAverageVolumeLimitationPercentage);
            }
            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays UnderlyingAverageVolumeLimitationPeriodDays
            {
                get
                {
                    QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val = new QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                this.UnderlyingAverageVolumeLimitationPeriodDays = val;
            }

            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays Get(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                return IsSetUnderlyingAverageVolumeLimitationPeriodDays();
            }

            public bool IsSetUnderlyingAverageVolumeLimitationPeriodDays()
            {
                return IsSetField(Tags.UnderlyingAverageVolumeLimitationPeriodDays);
            }
            public QuickFix.Fields.UnderlyingDepositoryReceiptIndicator UnderlyingDepositoryReceiptIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val = new QuickFix.Fields.UnderlyingDepositoryReceiptIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                this.UnderlyingDepositoryReceiptIndicator = val;
            }

            public QuickFix.Fields.UnderlyingDepositoryReceiptIndicator Get(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                return IsSetUnderlyingDepositoryReceiptIndicator();
            }

            public bool IsSetUnderlyingDepositoryReceiptIndicator()
            {
                return IsSetField(Tags.UnderlyingDepositoryReceiptIndicator);
            }
            public QuickFix.Fields.UnderlyingOpenUnits UnderlyingOpenUnits
            {
                get
                {
                    QuickFix.Fields.UnderlyingOpenUnits val = new QuickFix.Fields.UnderlyingOpenUnits();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                this.UnderlyingOpenUnits = val;
            }

            public QuickFix.Fields.UnderlyingOpenUnits Get(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                return IsSetUnderlyingOpenUnits();
            }

            public bool IsSetUnderlyingOpenUnits()
            {
                return IsSetField(Tags.UnderlyingOpenUnits);
            }
            public QuickFix.Fields.UnderlyingBasketDivisor UnderlyingBasketDivisor
            {
                get
                {
                    QuickFix.Fields.UnderlyingBasketDivisor val = new QuickFix.Fields.UnderlyingBasketDivisor();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                this.UnderlyingBasketDivisor = val;
            }

            public QuickFix.Fields.UnderlyingBasketDivisor Get(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                return IsSetUnderlyingBasketDivisor();
            }

            public bool IsSetUnderlyingBasketDivisor()
            {
                return IsSetField(Tags.UnderlyingBasketDivisor);
            }
            public QuickFix.Fields.UnderlyingInstrumentXID UnderlyingInstrumentXID
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentXID val = new QuickFix.Fields.UnderlyingInstrumentXID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                this.UnderlyingInstrumentXID = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentXID Get(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                return IsSetUnderlyingInstrumentXID();
            }

            public bool IsSetUnderlyingInstrumentXID()
            {
                return IsSetField(Tags.UnderlyingInstrumentXID);
            }
            public QuickFix.Fields.UnderlyingInTheMoneyCondition UnderlyingInTheMoneyCondition
            {
                get
                {
                    QuickFix.Fields.UnderlyingInTheMoneyCondition val = new QuickFix.Fields.UnderlyingInTheMoneyCondition();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                this.UnderlyingInTheMoneyCondition = val;
            }

            public QuickFix.Fields.UnderlyingInTheMoneyCondition Get(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                return IsSetUnderlyingInTheMoneyCondition();
            }

            public bool IsSetUnderlyingInTheMoneyCondition()
            {
                return IsSetField(Tags.UnderlyingInTheMoneyCondition);
            }
            public QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator UnderlyingContraryInstructionEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val = new QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                this.UnderlyingContraryInstructionEligibilityIndicator = val;
            }

            public QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator Get(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                return IsSetUnderlyingContraryInstructionEligibilityIndicator();
            }

            public bool IsSetUnderlyingContraryInstructionEligibilityIndicator()
            {
                return IsSetField(Tags.UnderlyingContraryInstructionEligibilityIndicator);
            }
            public QuickFix.Fields.UnderlyingFinancialInstrumentFullName UnderlyingFinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.UnderlyingFinancialInstrumentFullName val = new QuickFix.Fields.UnderlyingFinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                this.UnderlyingFinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.UnderlyingFinancialInstrumentFullName Get(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                return IsSetUnderlyingFinancialInstrumentFullName();
            }

            public bool IsSetUnderlyingFinancialInstrumentFullName()
            {
                return IsSetField(Tags.UnderlyingFinancialInstrumentFullName);
            }
            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen EncodedUnderlyingFinancialInstrumentFullNameLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val = new QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                this.EncodedUnderlyingFinancialInstrumentFullNameLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen Get(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                return IsSetEncodedUnderlyingFinancialInstrumentFullNameLen();
            }

            public bool IsSetEncodedUnderlyingFinancialInstrumentFullNameLen()
            {
                return IsSetField(Tags.EncodedUnderlyingFinancialInstrumentFullNameLen);
            }
            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName EncodedUnderlyingFinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val = new QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                this.EncodedUnderlyingFinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName Get(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                return IsSetEncodedUnderlyingFinancialInstrumentFullName();
            }

            public bool IsSetEncodedUnderlyingFinancialInstrumentFullName()
            {
                return IsSetField(Tags.EncodedUnderlyingFinancialInstrumentFullName);
            }
            public QuickFix.Fields.UnderlyingIndexCurveUnit UnderlyingIndexCurveUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexCurveUnit val = new QuickFix.Fields.UnderlyingIndexCurveUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                this.UnderlyingIndexCurveUnit = val;
            }

            public QuickFix.Fields.UnderlyingIndexCurveUnit Get(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                return IsSetUnderlyingIndexCurveUnit();
            }

            public bool IsSetUnderlyingIndexCurveUnit()
            {
                return IsSetField(Tags.UnderlyingIndexCurveUnit);
            }
            public QuickFix.Fields.UnderlyingIndexCurvePeriod UnderlyingIndexCurvePeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexCurvePeriod val = new QuickFix.Fields.UnderlyingIndexCurvePeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                this.UnderlyingIndexCurvePeriod = val;
            }

            public QuickFix.Fields.UnderlyingIndexCurvePeriod Get(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                return IsSetUnderlyingIndexCurvePeriod();
            }

            public bool IsSetUnderlyingIndexCurvePeriod()
            {
                return IsSetField(Tags.UnderlyingIndexCurvePeriod);
            }
            public QuickFix.Fields.UnderlyingAssetSubType UnderlyingAssetSubType
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetSubType val = new QuickFix.Fields.UnderlyingAssetSubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                this.UnderlyingAssetSubType = val;
            }

            public QuickFix.Fields.UnderlyingAssetSubType Get(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                return IsSetUnderlyingAssetSubType();
            }

            public bool IsSetUnderlyingAssetSubType()
            {
                return IsSetField(Tags.UnderlyingAssetSubType);
            }
            public QuickFix.Fields.UnderlyingFinancialInstrumentShortName UnderlyingFinancialInstrumentShortName
            {
                get
                {
                    QuickFix.Fields.UnderlyingFinancialInstrumentShortName val = new QuickFix.Fields.UnderlyingFinancialInstrumentShortName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                this.UnderlyingFinancialInstrumentShortName = val;
            }

            public QuickFix.Fields.UnderlyingFinancialInstrumentShortName Get(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                return IsSetUnderlyingFinancialInstrumentShortName();
            }

            public bool IsSetUnderlyingFinancialInstrumentShortName()
            {
                return IsSetField(Tags.UnderlyingFinancialInstrumentShortName);
            }
            public QuickFix.Fields.UnderlyingReturnTrigger UnderlyingReturnTrigger
            {
                get
                {
                    QuickFix.Fields.UnderlyingReturnTrigger val = new QuickFix.Fields.UnderlyingReturnTrigger();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                this.UnderlyingReturnTrigger = val;
            }

            public QuickFix.Fields.UnderlyingReturnTrigger Get(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                return IsSetUnderlyingReturnTrigger();
            }

            public bool IsSetUnderlyingReturnTrigger()
            {
                return IsSetField(Tags.UnderlyingReturnTrigger);
            }
            public QuickFix.Fields.UnderlyingDeliveryRouteOrCharter UnderlyingDeliveryRouteOrCharter
            {
                get
                {
                    QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val = new QuickFix.Fields.UnderlyingDeliveryRouteOrCharter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                this.UnderlyingDeliveryRouteOrCharter = val;
            }

            public QuickFix.Fields.UnderlyingDeliveryRouteOrCharter Get(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                return IsSetUnderlyingDeliveryRouteOrCharter();
            }

            public bool IsSetUnderlyingDeliveryRouteOrCharter()
            {
                return IsSetField(Tags.UnderlyingDeliveryRouteOrCharter);
            }
            public QuickFix.Fields.UnderlyingID UnderlyingID
            {
                get
                {
                    QuickFix.Fields.UnderlyingID val = new QuickFix.Fields.UnderlyingID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingID val)
            {
                this.UnderlyingID = val;
            }

            public QuickFix.Fields.UnderlyingID Get(QuickFix.Fields.UnderlyingID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingID val)
            {
                return IsSetUnderlyingID();
            }

            public bool IsSetUnderlyingID()
            {
                return IsSetField(Tags.UnderlyingID);
            }
            public QuickFix.Fields.UnderlyingCouponOtherDayCount UnderlyingCouponOtherDayCount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponOtherDayCount val = new QuickFix.Fields.UnderlyingCouponOtherDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                this.UnderlyingCouponOtherDayCount = val;
            }

            public QuickFix.Fields.UnderlyingCouponOtherDayCount Get(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                return IsSetUnderlyingCouponOtherDayCount();
            }

            public bool IsSetUnderlyingCouponOtherDayCount()
            {
                return IsSetField(Tags.UnderlyingCouponOtherDayCount);
            }
            public QuickFix.Fields.UnderlyingAccruedInterestAmt UnderlyingAccruedInterestAmt
            {
                get
                {
                    QuickFix.Fields.UnderlyingAccruedInterestAmt val = new QuickFix.Fields.UnderlyingAccruedInterestAmt();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                this.UnderlyingAccruedInterestAmt = val;
            }

            public QuickFix.Fields.UnderlyingAccruedInterestAmt Get(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                return IsSetUnderlyingAccruedInterestAmt();
            }

            public bool IsSetUnderlyingAccruedInterestAmt()
            {
                return IsSetField(Tags.UnderlyingAccruedInterestAmt);
            }
            public QuickFix.Fields.UnderlyingNumDaysInterest UnderlyingNumDaysInterest
            {
                get
                {
                    QuickFix.Fields.UnderlyingNumDaysInterest val = new QuickFix.Fields.UnderlyingNumDaysInterest();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                this.UnderlyingNumDaysInterest = val;
            }

            public QuickFix.Fields.UnderlyingNumDaysInterest Get(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                return IsSetUnderlyingNumDaysInterest();
            }

            public bool IsSetUnderlyingNumDaysInterest()
            {
                return IsSetField(Tags.UnderlyingNumDaysInterest);
            }
            public QuickFix.Fields.UnderlyingUPICode UnderlyingUPICode
            {
                get
                {
                    QuickFix.Fields.UnderlyingUPICode val = new QuickFix.Fields.UnderlyingUPICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUPICode val)
            {
                this.UnderlyingUPICode = val;
            }

            public QuickFix.Fields.UnderlyingUPICode Get(QuickFix.Fields.UnderlyingUPICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUPICode val)
            {
                return IsSetUnderlyingUPICode();
            }

            public bool IsSetUnderlyingUPICode()
            {
                return IsSetField(Tags.UnderlyingUPICode);
            }
            public QuickFix.Fields.DerivativeSymbol DerivativeSymbol
            {
                get
                {
                    QuickFix.Fields.DerivativeSymbol val = new QuickFix.Fields.DerivativeSymbol();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSymbol val)
            {
                this.DerivativeSymbol = val;
            }

            public QuickFix.Fields.DerivativeSymbol Get(QuickFix.Fields.DerivativeSymbol val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSymbol val)
            {
                return IsSetDerivativeSymbol();
            }

            public bool IsSetDerivativeSymbol()
            {
                return IsSetField(Tags.DerivativeSymbol);
            }
            public QuickFix.Fields.DerivativeSymbolSfx DerivativeSymbolSfx
            {
                get
                {
                    QuickFix.Fields.DerivativeSymbolSfx val = new QuickFix.Fields.DerivativeSymbolSfx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSymbolSfx val)
            {
                this.DerivativeSymbolSfx = val;
            }

            public QuickFix.Fields.DerivativeSymbolSfx Get(QuickFix.Fields.DerivativeSymbolSfx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSymbolSfx val)
            {
                return IsSetDerivativeSymbolSfx();
            }

            public bool IsSetDerivativeSymbolSfx()
            {
                return IsSetField(Tags.DerivativeSymbolSfx);
            }
            public QuickFix.Fields.DerivativeSecurityID DerivativeSecurityID
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityID val = new QuickFix.Fields.DerivativeSecurityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityID val)
            {
                this.DerivativeSecurityID = val;
            }

            public QuickFix.Fields.DerivativeSecurityID Get(QuickFix.Fields.DerivativeSecurityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityID val)
            {
                return IsSetDerivativeSecurityID();
            }

            public bool IsSetDerivativeSecurityID()
            {
                return IsSetField(Tags.DerivativeSecurityID);
            }
            public QuickFix.Fields.DerivativeSecurityIDSource DerivativeSecurityIDSource
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityIDSource val = new QuickFix.Fields.DerivativeSecurityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityIDSource val)
            {
                this.DerivativeSecurityIDSource = val;
            }

            public QuickFix.Fields.DerivativeSecurityIDSource Get(QuickFix.Fields.DerivativeSecurityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityIDSource val)
            {
                return IsSetDerivativeSecurityIDSource();
            }

            public bool IsSetDerivativeSecurityIDSource()
            {
                return IsSetField(Tags.DerivativeSecurityIDSource);
            }
            public QuickFix.Fields.NoDerivativeSecurityAltID NoDerivativeSecurityAltID
            {
                get
                {
                    QuickFix.Fields.NoDerivativeSecurityAltID val = new QuickFix.Fields.NoDerivativeSecurityAltID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoDerivativeSecurityAltID val)
            {
                this.NoDerivativeSecurityAltID = val;
            }

            public QuickFix.Fields.NoDerivativeSecurityAltID Get(QuickFix.Fields.NoDerivativeSecurityAltID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoDerivativeSecurityAltID val)
            {
                return IsSetNoDerivativeSecurityAltID();
            }

            public bool IsSetNoDerivativeSecurityAltID()
            {
                return IsSetField(Tags.NoDerivativeSecurityAltID);
            }
            public QuickFix.Fields.DerivativeProduct DerivativeProduct
            {
                get
                {
                    QuickFix.Fields.DerivativeProduct val = new QuickFix.Fields.DerivativeProduct();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeProduct val)
            {
                this.DerivativeProduct = val;
            }

            public QuickFix.Fields.DerivativeProduct Get(QuickFix.Fields.DerivativeProduct val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeProduct val)
            {
                return IsSetDerivativeProduct();
            }

            public bool IsSetDerivativeProduct()
            {
                return IsSetField(Tags.DerivativeProduct);
            }
            public QuickFix.Fields.DerivativeProductComplex DerivativeProductComplex
            {
                get
                {
                    QuickFix.Fields.DerivativeProductComplex val = new QuickFix.Fields.DerivativeProductComplex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeProductComplex val)
            {
                this.DerivativeProductComplex = val;
            }

            public QuickFix.Fields.DerivativeProductComplex Get(QuickFix.Fields.DerivativeProductComplex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeProductComplex val)
            {
                return IsSetDerivativeProductComplex();
            }

            public bool IsSetDerivativeProductComplex()
            {
                return IsSetField(Tags.DerivativeProductComplex);
            }
            public QuickFix.Fields.DerivFlexProductEligibilityIndicator DerivFlexProductEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.DerivFlexProductEligibilityIndicator val = new QuickFix.Fields.DerivFlexProductEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivFlexProductEligibilityIndicator val)
            {
                this.DerivFlexProductEligibilityIndicator = val;
            }

            public QuickFix.Fields.DerivFlexProductEligibilityIndicator Get(QuickFix.Fields.DerivFlexProductEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivFlexProductEligibilityIndicator val)
            {
                return IsSetDerivFlexProductEligibilityIndicator();
            }

            public bool IsSetDerivFlexProductEligibilityIndicator()
            {
                return IsSetField(Tags.DerivFlexProductEligibilityIndicator);
            }
            public QuickFix.Fields.DerivativeSecurityGroup DerivativeSecurityGroup
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityGroup val = new QuickFix.Fields.DerivativeSecurityGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityGroup val)
            {
                this.DerivativeSecurityGroup = val;
            }

            public QuickFix.Fields.DerivativeSecurityGroup Get(QuickFix.Fields.DerivativeSecurityGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityGroup val)
            {
                return IsSetDerivativeSecurityGroup();
            }

            public bool IsSetDerivativeSecurityGroup()
            {
                return IsSetField(Tags.DerivativeSecurityGroup);
            }
            public QuickFix.Fields.DerivativeCFICode DerivativeCFICode
            {
                get
                {
                    QuickFix.Fields.DerivativeCFICode val = new QuickFix.Fields.DerivativeCFICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeCFICode val)
            {
                this.DerivativeCFICode = val;
            }

            public QuickFix.Fields.DerivativeCFICode Get(QuickFix.Fields.DerivativeCFICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeCFICode val)
            {
                return IsSetDerivativeCFICode();
            }

            public bool IsSetDerivativeCFICode()
            {
                return IsSetField(Tags.DerivativeCFICode);
            }
            public QuickFix.Fields.DerivativeSecurityType DerivativeSecurityType
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityType val = new QuickFix.Fields.DerivativeSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityType val)
            {
                this.DerivativeSecurityType = val;
            }

            public QuickFix.Fields.DerivativeSecurityType Get(QuickFix.Fields.DerivativeSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityType val)
            {
                return IsSetDerivativeSecurityType();
            }

            public bool IsSetDerivativeSecurityType()
            {
                return IsSetField(Tags.DerivativeSecurityType);
            }
            public QuickFix.Fields.DerivativeSecuritySubType DerivativeSecuritySubType
            {
                get
                {
                    QuickFix.Fields.DerivativeSecuritySubType val = new QuickFix.Fields.DerivativeSecuritySubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecuritySubType val)
            {
                this.DerivativeSecuritySubType = val;
            }

            public QuickFix.Fields.DerivativeSecuritySubType Get(QuickFix.Fields.DerivativeSecuritySubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecuritySubType val)
            {
                return IsSetDerivativeSecuritySubType();
            }

            public bool IsSetDerivativeSecuritySubType()
            {
                return IsSetField(Tags.DerivativeSecuritySubType);
            }
            public QuickFix.Fields.DerivativeMaturityMonthYear DerivativeMaturityMonthYear
            {
                get
                {
                    QuickFix.Fields.DerivativeMaturityMonthYear val = new QuickFix.Fields.DerivativeMaturityMonthYear();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeMaturityMonthYear val)
            {
                this.DerivativeMaturityMonthYear = val;
            }

            public QuickFix.Fields.DerivativeMaturityMonthYear Get(QuickFix.Fields.DerivativeMaturityMonthYear val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeMaturityMonthYear val)
            {
                return IsSetDerivativeMaturityMonthYear();
            }

            public bool IsSetDerivativeMaturityMonthYear()
            {
                return IsSetField(Tags.DerivativeMaturityMonthYear);
            }
            public QuickFix.Fields.DerivativeMaturityDate DerivativeMaturityDate
            {
                get
                {
                    QuickFix.Fields.DerivativeMaturityDate val = new QuickFix.Fields.DerivativeMaturityDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeMaturityDate val)
            {
                this.DerivativeMaturityDate = val;
            }

            public QuickFix.Fields.DerivativeMaturityDate Get(QuickFix.Fields.DerivativeMaturityDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeMaturityDate val)
            {
                return IsSetDerivativeMaturityDate();
            }

            public bool IsSetDerivativeMaturityDate()
            {
                return IsSetField(Tags.DerivativeMaturityDate);
            }
            public QuickFix.Fields.DerivativeMaturityTime DerivativeMaturityTime
            {
                get
                {
                    QuickFix.Fields.DerivativeMaturityTime val = new QuickFix.Fields.DerivativeMaturityTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeMaturityTime val)
            {
                this.DerivativeMaturityTime = val;
            }

            public QuickFix.Fields.DerivativeMaturityTime Get(QuickFix.Fields.DerivativeMaturityTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeMaturityTime val)
            {
                return IsSetDerivativeMaturityTime();
            }

            public bool IsSetDerivativeMaturityTime()
            {
                return IsSetField(Tags.DerivativeMaturityTime);
            }
            public QuickFix.Fields.DerivativeSettleOnOpenFlag DerivativeSettleOnOpenFlag
            {
                get
                {
                    QuickFix.Fields.DerivativeSettleOnOpenFlag val = new QuickFix.Fields.DerivativeSettleOnOpenFlag();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSettleOnOpenFlag val)
            {
                this.DerivativeSettleOnOpenFlag = val;
            }

            public QuickFix.Fields.DerivativeSettleOnOpenFlag Get(QuickFix.Fields.DerivativeSettleOnOpenFlag val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSettleOnOpenFlag val)
            {
                return IsSetDerivativeSettleOnOpenFlag();
            }

            public bool IsSetDerivativeSettleOnOpenFlag()
            {
                return IsSetField(Tags.DerivativeSettleOnOpenFlag);
            }
            public QuickFix.Fields.DerivativeInstrmtAssignmentMethod DerivativeInstrmtAssignmentMethod
            {
                get
                {
                    QuickFix.Fields.DerivativeInstrmtAssignmentMethod val = new QuickFix.Fields.DerivativeInstrmtAssignmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeInstrmtAssignmentMethod val)
            {
                this.DerivativeInstrmtAssignmentMethod = val;
            }

            public QuickFix.Fields.DerivativeInstrmtAssignmentMethod Get(QuickFix.Fields.DerivativeInstrmtAssignmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeInstrmtAssignmentMethod val)
            {
                return IsSetDerivativeInstrmtAssignmentMethod();
            }

            public bool IsSetDerivativeInstrmtAssignmentMethod()
            {
                return IsSetField(Tags.DerivativeInstrmtAssignmentMethod);
            }
            public QuickFix.Fields.DerivativeSecurityStatus DerivativeSecurityStatus
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityStatus val = new QuickFix.Fields.DerivativeSecurityStatus();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityStatus val)
            {
                this.DerivativeSecurityStatus = val;
            }

            public QuickFix.Fields.DerivativeSecurityStatus Get(QuickFix.Fields.DerivativeSecurityStatus val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityStatus val)
            {
                return IsSetDerivativeSecurityStatus();
            }

            public bool IsSetDerivativeSecurityStatus()
            {
                return IsSetField(Tags.DerivativeSecurityStatus);
            }
            public QuickFix.Fields.DerivativeIssueDate DerivativeIssueDate
            {
                get
                {
                    QuickFix.Fields.DerivativeIssueDate val = new QuickFix.Fields.DerivativeIssueDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeIssueDate val)
            {
                this.DerivativeIssueDate = val;
            }

            public QuickFix.Fields.DerivativeIssueDate Get(QuickFix.Fields.DerivativeIssueDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeIssueDate val)
            {
                return IsSetDerivativeIssueDate();
            }

            public bool IsSetDerivativeIssueDate()
            {
                return IsSetField(Tags.DerivativeIssueDate);
            }
            public QuickFix.Fields.DerivativeInstrRegistry DerivativeInstrRegistry
            {
                get
                {
                    QuickFix.Fields.DerivativeInstrRegistry val = new QuickFix.Fields.DerivativeInstrRegistry();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeInstrRegistry val)
            {
                this.DerivativeInstrRegistry = val;
            }

            public QuickFix.Fields.DerivativeInstrRegistry Get(QuickFix.Fields.DerivativeInstrRegistry val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeInstrRegistry val)
            {
                return IsSetDerivativeInstrRegistry();
            }

            public bool IsSetDerivativeInstrRegistry()
            {
                return IsSetField(Tags.DerivativeInstrRegistry);
            }
            public QuickFix.Fields.DerivativeCountryOfIssue DerivativeCountryOfIssue
            {
                get
                {
                    QuickFix.Fields.DerivativeCountryOfIssue val = new QuickFix.Fields.DerivativeCountryOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeCountryOfIssue val)
            {
                this.DerivativeCountryOfIssue = val;
            }

            public QuickFix.Fields.DerivativeCountryOfIssue Get(QuickFix.Fields.DerivativeCountryOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeCountryOfIssue val)
            {
                return IsSetDerivativeCountryOfIssue();
            }

            public bool IsSetDerivativeCountryOfIssue()
            {
                return IsSetField(Tags.DerivativeCountryOfIssue);
            }
            public QuickFix.Fields.DerivativeStateOrProvinceOfIssue DerivativeStateOrProvinceOfIssue
            {
                get
                {
                    QuickFix.Fields.DerivativeStateOrProvinceOfIssue val = new QuickFix.Fields.DerivativeStateOrProvinceOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeStateOrProvinceOfIssue val)
            {
                this.DerivativeStateOrProvinceOfIssue = val;
            }

            public QuickFix.Fields.DerivativeStateOrProvinceOfIssue Get(QuickFix.Fields.DerivativeStateOrProvinceOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeStateOrProvinceOfIssue val)
            {
                return IsSetDerivativeStateOrProvinceOfIssue();
            }

            public bool IsSetDerivativeStateOrProvinceOfIssue()
            {
                return IsSetField(Tags.DerivativeStateOrProvinceOfIssue);
            }
            public QuickFix.Fields.DerivativeLocaleOfIssue DerivativeLocaleOfIssue
            {
                get
                {
                    QuickFix.Fields.DerivativeLocaleOfIssue val = new QuickFix.Fields.DerivativeLocaleOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeLocaleOfIssue val)
            {
                this.DerivativeLocaleOfIssue = val;
            }

            public QuickFix.Fields.DerivativeLocaleOfIssue Get(QuickFix.Fields.DerivativeLocaleOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeLocaleOfIssue val)
            {
                return IsSetDerivativeLocaleOfIssue();
            }

            public bool IsSetDerivativeLocaleOfIssue()
            {
                return IsSetField(Tags.DerivativeLocaleOfIssue);
            }
            public QuickFix.Fields.DerivativeStrikePrice DerivativeStrikePrice
            {
                get
                {
                    QuickFix.Fields.DerivativeStrikePrice val = new QuickFix.Fields.DerivativeStrikePrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeStrikePrice val)
            {
                this.DerivativeStrikePrice = val;
            }

            public QuickFix.Fields.DerivativeStrikePrice Get(QuickFix.Fields.DerivativeStrikePrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeStrikePrice val)
            {
                return IsSetDerivativeStrikePrice();
            }

            public bool IsSetDerivativeStrikePrice()
            {
                return IsSetField(Tags.DerivativeStrikePrice);
            }
            public QuickFix.Fields.DerivativeStrikeCurrency DerivativeStrikeCurrency
            {
                get
                {
                    QuickFix.Fields.DerivativeStrikeCurrency val = new QuickFix.Fields.DerivativeStrikeCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeStrikeCurrency val)
            {
                this.DerivativeStrikeCurrency = val;
            }

            public QuickFix.Fields.DerivativeStrikeCurrency Get(QuickFix.Fields.DerivativeStrikeCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeStrikeCurrency val)
            {
                return IsSetDerivativeStrikeCurrency();
            }

            public bool IsSetDerivativeStrikeCurrency()
            {
                return IsSetField(Tags.DerivativeStrikeCurrency);
            }
            public QuickFix.Fields.DerivativeStrikeMultiplier DerivativeStrikeMultiplier
            {
                get
                {
                    QuickFix.Fields.DerivativeStrikeMultiplier val = new QuickFix.Fields.DerivativeStrikeMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeStrikeMultiplier val)
            {
                this.DerivativeStrikeMultiplier = val;
            }

            public QuickFix.Fields.DerivativeStrikeMultiplier Get(QuickFix.Fields.DerivativeStrikeMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeStrikeMultiplier val)
            {
                return IsSetDerivativeStrikeMultiplier();
            }

            public bool IsSetDerivativeStrikeMultiplier()
            {
                return IsSetField(Tags.DerivativeStrikeMultiplier);
            }
            public QuickFix.Fields.DerivativeStrikeValue DerivativeStrikeValue
            {
                get
                {
                    QuickFix.Fields.DerivativeStrikeValue val = new QuickFix.Fields.DerivativeStrikeValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeStrikeValue val)
            {
                this.DerivativeStrikeValue = val;
            }

            public QuickFix.Fields.DerivativeStrikeValue Get(QuickFix.Fields.DerivativeStrikeValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeStrikeValue val)
            {
                return IsSetDerivativeStrikeValue();
            }

            public bool IsSetDerivativeStrikeValue()
            {
                return IsSetField(Tags.DerivativeStrikeValue);
            }
            public QuickFix.Fields.DerivativeOptAttribute DerivativeOptAttribute
            {
                get
                {
                    QuickFix.Fields.DerivativeOptAttribute val = new QuickFix.Fields.DerivativeOptAttribute();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeOptAttribute val)
            {
                this.DerivativeOptAttribute = val;
            }

            public QuickFix.Fields.DerivativeOptAttribute Get(QuickFix.Fields.DerivativeOptAttribute val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeOptAttribute val)
            {
                return IsSetDerivativeOptAttribute();
            }

            public bool IsSetDerivativeOptAttribute()
            {
                return IsSetField(Tags.DerivativeOptAttribute);
            }
            public QuickFix.Fields.DerivativeContractMultiplier DerivativeContractMultiplier
            {
                get
                {
                    QuickFix.Fields.DerivativeContractMultiplier val = new QuickFix.Fields.DerivativeContractMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeContractMultiplier val)
            {
                this.DerivativeContractMultiplier = val;
            }

            public QuickFix.Fields.DerivativeContractMultiplier Get(QuickFix.Fields.DerivativeContractMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeContractMultiplier val)
            {
                return IsSetDerivativeContractMultiplier();
            }

            public bool IsSetDerivativeContractMultiplier()
            {
                return IsSetField(Tags.DerivativeContractMultiplier);
            }
            public QuickFix.Fields.DerivativeMinPriceIncrement DerivativeMinPriceIncrement
            {
                get
                {
                    QuickFix.Fields.DerivativeMinPriceIncrement val = new QuickFix.Fields.DerivativeMinPriceIncrement();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeMinPriceIncrement val)
            {
                this.DerivativeMinPriceIncrement = val;
            }

            public QuickFix.Fields.DerivativeMinPriceIncrement Get(QuickFix.Fields.DerivativeMinPriceIncrement val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeMinPriceIncrement val)
            {
                return IsSetDerivativeMinPriceIncrement();
            }

            public bool IsSetDerivativeMinPriceIncrement()
            {
                return IsSetField(Tags.DerivativeMinPriceIncrement);
            }
            public QuickFix.Fields.DerivativeMinPriceIncrementAmount DerivativeMinPriceIncrementAmount
            {
                get
                {
                    QuickFix.Fields.DerivativeMinPriceIncrementAmount val = new QuickFix.Fields.DerivativeMinPriceIncrementAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeMinPriceIncrementAmount val)
            {
                this.DerivativeMinPriceIncrementAmount = val;
            }

            public QuickFix.Fields.DerivativeMinPriceIncrementAmount Get(QuickFix.Fields.DerivativeMinPriceIncrementAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeMinPriceIncrementAmount val)
            {
                return IsSetDerivativeMinPriceIncrementAmount();
            }

            public bool IsSetDerivativeMinPriceIncrementAmount()
            {
                return IsSetField(Tags.DerivativeMinPriceIncrementAmount);
            }
            public QuickFix.Fields.DerivativeUnitOfMeasure DerivativeUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.DerivativeUnitOfMeasure val = new QuickFix.Fields.DerivativeUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeUnitOfMeasure val)
            {
                this.DerivativeUnitOfMeasure = val;
            }

            public QuickFix.Fields.DerivativeUnitOfMeasure Get(QuickFix.Fields.DerivativeUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeUnitOfMeasure val)
            {
                return IsSetDerivativeUnitOfMeasure();
            }

            public bool IsSetDerivativeUnitOfMeasure()
            {
                return IsSetField(Tags.DerivativeUnitOfMeasure);
            }
            public QuickFix.Fields.DerivativeUnitOfMeasureQty DerivativeUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.DerivativeUnitOfMeasureQty val = new QuickFix.Fields.DerivativeUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeUnitOfMeasureQty val)
            {
                this.DerivativeUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.DerivativeUnitOfMeasureQty Get(QuickFix.Fields.DerivativeUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeUnitOfMeasureQty val)
            {
                return IsSetDerivativeUnitOfMeasureQty();
            }

            public bool IsSetDerivativeUnitOfMeasureQty()
            {
                return IsSetField(Tags.DerivativeUnitOfMeasureQty);
            }
            public QuickFix.Fields.DerivativePriceUnitOfMeasure DerivativePriceUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.DerivativePriceUnitOfMeasure val = new QuickFix.Fields.DerivativePriceUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePriceUnitOfMeasure val)
            {
                this.DerivativePriceUnitOfMeasure = val;
            }

            public QuickFix.Fields.DerivativePriceUnitOfMeasure Get(QuickFix.Fields.DerivativePriceUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePriceUnitOfMeasure val)
            {
                return IsSetDerivativePriceUnitOfMeasure();
            }

            public bool IsSetDerivativePriceUnitOfMeasure()
            {
                return IsSetField(Tags.DerivativePriceUnitOfMeasure);
            }
            public QuickFix.Fields.DerivativePriceUnitOfMeasureQty DerivativePriceUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.DerivativePriceUnitOfMeasureQty val = new QuickFix.Fields.DerivativePriceUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePriceUnitOfMeasureQty val)
            {
                this.DerivativePriceUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.DerivativePriceUnitOfMeasureQty Get(QuickFix.Fields.DerivativePriceUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePriceUnitOfMeasureQty val)
            {
                return IsSetDerivativePriceUnitOfMeasureQty();
            }

            public bool IsSetDerivativePriceUnitOfMeasureQty()
            {
                return IsSetField(Tags.DerivativePriceUnitOfMeasureQty);
            }
            public QuickFix.Fields.DerivativeSettlMethod DerivativeSettlMethod
            {
                get
                {
                    QuickFix.Fields.DerivativeSettlMethod val = new QuickFix.Fields.DerivativeSettlMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSettlMethod val)
            {
                this.DerivativeSettlMethod = val;
            }

            public QuickFix.Fields.DerivativeSettlMethod Get(QuickFix.Fields.DerivativeSettlMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSettlMethod val)
            {
                return IsSetDerivativeSettlMethod();
            }

            public bool IsSetDerivativeSettlMethod()
            {
                return IsSetField(Tags.DerivativeSettlMethod);
            }
            public QuickFix.Fields.DerivativePriceQuoteMethod DerivativePriceQuoteMethod
            {
                get
                {
                    QuickFix.Fields.DerivativePriceQuoteMethod val = new QuickFix.Fields.DerivativePriceQuoteMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePriceQuoteMethod val)
            {
                this.DerivativePriceQuoteMethod = val;
            }

            public QuickFix.Fields.DerivativePriceQuoteMethod Get(QuickFix.Fields.DerivativePriceQuoteMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePriceQuoteMethod val)
            {
                return IsSetDerivativePriceQuoteMethod();
            }

            public bool IsSetDerivativePriceQuoteMethod()
            {
                return IsSetField(Tags.DerivativePriceQuoteMethod);
            }
            public QuickFix.Fields.DerivativeValuationMethod DerivativeValuationMethod
            {
                get
                {
                    QuickFix.Fields.DerivativeValuationMethod val = new QuickFix.Fields.DerivativeValuationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeValuationMethod val)
            {
                this.DerivativeValuationMethod = val;
            }

            public QuickFix.Fields.DerivativeValuationMethod Get(QuickFix.Fields.DerivativeValuationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeValuationMethod val)
            {
                return IsSetDerivativeValuationMethod();
            }

            public bool IsSetDerivativeValuationMethod()
            {
                return IsSetField(Tags.DerivativeValuationMethod);
            }
            public QuickFix.Fields.DerivativeListMethod DerivativeListMethod
            {
                get
                {
                    QuickFix.Fields.DerivativeListMethod val = new QuickFix.Fields.DerivativeListMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeListMethod val)
            {
                this.DerivativeListMethod = val;
            }

            public QuickFix.Fields.DerivativeListMethod Get(QuickFix.Fields.DerivativeListMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeListMethod val)
            {
                return IsSetDerivativeListMethod();
            }

            public bool IsSetDerivativeListMethod()
            {
                return IsSetField(Tags.DerivativeListMethod);
            }
            public QuickFix.Fields.DerivativeCapPrice DerivativeCapPrice
            {
                get
                {
                    QuickFix.Fields.DerivativeCapPrice val = new QuickFix.Fields.DerivativeCapPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeCapPrice val)
            {
                this.DerivativeCapPrice = val;
            }

            public QuickFix.Fields.DerivativeCapPrice Get(QuickFix.Fields.DerivativeCapPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeCapPrice val)
            {
                return IsSetDerivativeCapPrice();
            }

            public bool IsSetDerivativeCapPrice()
            {
                return IsSetField(Tags.DerivativeCapPrice);
            }
            public QuickFix.Fields.DerivativeFloorPrice DerivativeFloorPrice
            {
                get
                {
                    QuickFix.Fields.DerivativeFloorPrice val = new QuickFix.Fields.DerivativeFloorPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeFloorPrice val)
            {
                this.DerivativeFloorPrice = val;
            }

            public QuickFix.Fields.DerivativeFloorPrice Get(QuickFix.Fields.DerivativeFloorPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeFloorPrice val)
            {
                return IsSetDerivativeFloorPrice();
            }

            public bool IsSetDerivativeFloorPrice()
            {
                return IsSetField(Tags.DerivativeFloorPrice);
            }
            public QuickFix.Fields.DerivativePutOrCall DerivativePutOrCall
            {
                get
                {
                    QuickFix.Fields.DerivativePutOrCall val = new QuickFix.Fields.DerivativePutOrCall();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePutOrCall val)
            {
                this.DerivativePutOrCall = val;
            }

            public QuickFix.Fields.DerivativePutOrCall Get(QuickFix.Fields.DerivativePutOrCall val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePutOrCall val)
            {
                return IsSetDerivativePutOrCall();
            }

            public bool IsSetDerivativePutOrCall()
            {
                return IsSetField(Tags.DerivativePutOrCall);
            }
            public QuickFix.Fields.DerivativeExerciseStyle DerivativeExerciseStyle
            {
                get
                {
                    QuickFix.Fields.DerivativeExerciseStyle val = new QuickFix.Fields.DerivativeExerciseStyle();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeExerciseStyle val)
            {
                this.DerivativeExerciseStyle = val;
            }

            public QuickFix.Fields.DerivativeExerciseStyle Get(QuickFix.Fields.DerivativeExerciseStyle val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeExerciseStyle val)
            {
                return IsSetDerivativeExerciseStyle();
            }

            public bool IsSetDerivativeExerciseStyle()
            {
                return IsSetField(Tags.DerivativeExerciseStyle);
            }
            public QuickFix.Fields.DerivativeOptPayAmount DerivativeOptPayAmount
            {
                get
                {
                    QuickFix.Fields.DerivativeOptPayAmount val = new QuickFix.Fields.DerivativeOptPayAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeOptPayAmount val)
            {
                this.DerivativeOptPayAmount = val;
            }

            public QuickFix.Fields.DerivativeOptPayAmount Get(QuickFix.Fields.DerivativeOptPayAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeOptPayAmount val)
            {
                return IsSetDerivativeOptPayAmount();
            }

            public bool IsSetDerivativeOptPayAmount()
            {
                return IsSetField(Tags.DerivativeOptPayAmount);
            }
            public QuickFix.Fields.DerivativeTimeUnit DerivativeTimeUnit
            {
                get
                {
                    QuickFix.Fields.DerivativeTimeUnit val = new QuickFix.Fields.DerivativeTimeUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeTimeUnit val)
            {
                this.DerivativeTimeUnit = val;
            }

            public QuickFix.Fields.DerivativeTimeUnit Get(QuickFix.Fields.DerivativeTimeUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeTimeUnit val)
            {
                return IsSetDerivativeTimeUnit();
            }

            public bool IsSetDerivativeTimeUnit()
            {
                return IsSetField(Tags.DerivativeTimeUnit);
            }
            public QuickFix.Fields.DerivativeSecurityExchange DerivativeSecurityExchange
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityExchange val = new QuickFix.Fields.DerivativeSecurityExchange();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityExchange val)
            {
                this.DerivativeSecurityExchange = val;
            }

            public QuickFix.Fields.DerivativeSecurityExchange Get(QuickFix.Fields.DerivativeSecurityExchange val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityExchange val)
            {
                return IsSetDerivativeSecurityExchange();
            }

            public bool IsSetDerivativeSecurityExchange()
            {
                return IsSetField(Tags.DerivativeSecurityExchange);
            }
            public QuickFix.Fields.DerivativePositionLimit DerivativePositionLimit
            {
                get
                {
                    QuickFix.Fields.DerivativePositionLimit val = new QuickFix.Fields.DerivativePositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePositionLimit val)
            {
                this.DerivativePositionLimit = val;
            }

            public QuickFix.Fields.DerivativePositionLimit Get(QuickFix.Fields.DerivativePositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePositionLimit val)
            {
                return IsSetDerivativePositionLimit();
            }

            public bool IsSetDerivativePositionLimit()
            {
                return IsSetField(Tags.DerivativePositionLimit);
            }
            public QuickFix.Fields.DerivativeNTPositionLimit DerivativeNTPositionLimit
            {
                get
                {
                    QuickFix.Fields.DerivativeNTPositionLimit val = new QuickFix.Fields.DerivativeNTPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeNTPositionLimit val)
            {
                this.DerivativeNTPositionLimit = val;
            }

            public QuickFix.Fields.DerivativeNTPositionLimit Get(QuickFix.Fields.DerivativeNTPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeNTPositionLimit val)
            {
                return IsSetDerivativeNTPositionLimit();
            }

            public bool IsSetDerivativeNTPositionLimit()
            {
                return IsSetField(Tags.DerivativeNTPositionLimit);
            }
            public QuickFix.Fields.DerivativeIssuer DerivativeIssuer
            {
                get
                {
                    QuickFix.Fields.DerivativeIssuer val = new QuickFix.Fields.DerivativeIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeIssuer val)
            {
                this.DerivativeIssuer = val;
            }

            public QuickFix.Fields.DerivativeIssuer Get(QuickFix.Fields.DerivativeIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeIssuer val)
            {
                return IsSetDerivativeIssuer();
            }

            public bool IsSetDerivativeIssuer()
            {
                return IsSetField(Tags.DerivativeIssuer);
            }
            public QuickFix.Fields.DerivativeEncodedIssuerLen DerivativeEncodedIssuerLen
            {
                get
                {
                    QuickFix.Fields.DerivativeEncodedIssuerLen val = new QuickFix.Fields.DerivativeEncodedIssuerLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeEncodedIssuerLen val)
            {
                this.DerivativeEncodedIssuerLen = val;
            }

            public QuickFix.Fields.DerivativeEncodedIssuerLen Get(QuickFix.Fields.DerivativeEncodedIssuerLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeEncodedIssuerLen val)
            {
                return IsSetDerivativeEncodedIssuerLen();
            }

            public bool IsSetDerivativeEncodedIssuerLen()
            {
                return IsSetField(Tags.DerivativeEncodedIssuerLen);
            }
            public QuickFix.Fields.DerivativeEncodedIssuer DerivativeEncodedIssuer
            {
                get
                {
                    QuickFix.Fields.DerivativeEncodedIssuer val = new QuickFix.Fields.DerivativeEncodedIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeEncodedIssuer val)
            {
                this.DerivativeEncodedIssuer = val;
            }

            public QuickFix.Fields.DerivativeEncodedIssuer Get(QuickFix.Fields.DerivativeEncodedIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeEncodedIssuer val)
            {
                return IsSetDerivativeEncodedIssuer();
            }

            public bool IsSetDerivativeEncodedIssuer()
            {
                return IsSetField(Tags.DerivativeEncodedIssuer);
            }
            public QuickFix.Fields.DerivativeSecurityDesc DerivativeSecurityDesc
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityDesc val = new QuickFix.Fields.DerivativeSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityDesc val)
            {
                this.DerivativeSecurityDesc = val;
            }

            public QuickFix.Fields.DerivativeSecurityDesc Get(QuickFix.Fields.DerivativeSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityDesc val)
            {
                return IsSetDerivativeSecurityDesc();
            }

            public bool IsSetDerivativeSecurityDesc()
            {
                return IsSetField(Tags.DerivativeSecurityDesc);
            }
            public QuickFix.Fields.DerivativeEncodedSecurityDescLen DerivativeEncodedSecurityDescLen
            {
                get
                {
                    QuickFix.Fields.DerivativeEncodedSecurityDescLen val = new QuickFix.Fields.DerivativeEncodedSecurityDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeEncodedSecurityDescLen val)
            {
                this.DerivativeEncodedSecurityDescLen = val;
            }

            public QuickFix.Fields.DerivativeEncodedSecurityDescLen Get(QuickFix.Fields.DerivativeEncodedSecurityDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeEncodedSecurityDescLen val)
            {
                return IsSetDerivativeEncodedSecurityDescLen();
            }

            public bool IsSetDerivativeEncodedSecurityDescLen()
            {
                return IsSetField(Tags.DerivativeEncodedSecurityDescLen);
            }
            public QuickFix.Fields.DerivativeEncodedSecurityDesc DerivativeEncodedSecurityDesc
            {
                get
                {
                    QuickFix.Fields.DerivativeEncodedSecurityDesc val = new QuickFix.Fields.DerivativeEncodedSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeEncodedSecurityDesc val)
            {
                this.DerivativeEncodedSecurityDesc = val;
            }

            public QuickFix.Fields.DerivativeEncodedSecurityDesc Get(QuickFix.Fields.DerivativeEncodedSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeEncodedSecurityDesc val)
            {
                return IsSetDerivativeEncodedSecurityDesc();
            }

            public bool IsSetDerivativeEncodedSecurityDesc()
            {
                return IsSetField(Tags.DerivativeEncodedSecurityDesc);
            }
            public QuickFix.Fields.DerivativeSecurityXMLLen DerivativeSecurityXMLLen
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityXMLLen val = new QuickFix.Fields.DerivativeSecurityXMLLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityXMLLen val)
            {
                this.DerivativeSecurityXMLLen = val;
            }

            public QuickFix.Fields.DerivativeSecurityXMLLen Get(QuickFix.Fields.DerivativeSecurityXMLLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityXMLLen val)
            {
                return IsSetDerivativeSecurityXMLLen();
            }

            public bool IsSetDerivativeSecurityXMLLen()
            {
                return IsSetField(Tags.DerivativeSecurityXMLLen);
            }
            public QuickFix.Fields.DerivativeSecurityXML DerivativeSecurityXML
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityXML val = new QuickFix.Fields.DerivativeSecurityXML();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityXML val)
            {
                this.DerivativeSecurityXML = val;
            }

            public QuickFix.Fields.DerivativeSecurityXML Get(QuickFix.Fields.DerivativeSecurityXML val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityXML val)
            {
                return IsSetDerivativeSecurityXML();
            }

            public bool IsSetDerivativeSecurityXML()
            {
                return IsSetField(Tags.DerivativeSecurityXML);
            }
            public QuickFix.Fields.DerivativeSecurityXMLSchema DerivativeSecurityXMLSchema
            {
                get
                {
                    QuickFix.Fields.DerivativeSecurityXMLSchema val = new QuickFix.Fields.DerivativeSecurityXMLSchema();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeSecurityXMLSchema val)
            {
                this.DerivativeSecurityXMLSchema = val;
            }

            public QuickFix.Fields.DerivativeSecurityXMLSchema Get(QuickFix.Fields.DerivativeSecurityXMLSchema val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeSecurityXMLSchema val)
            {
                return IsSetDerivativeSecurityXMLSchema();
            }

            public bool IsSetDerivativeSecurityXMLSchema()
            {
                return IsSetField(Tags.DerivativeSecurityXMLSchema);
            }
            public QuickFix.Fields.DerivativeContractSettlMonth DerivativeContractSettlMonth
            {
                get
                {
                    QuickFix.Fields.DerivativeContractSettlMonth val = new QuickFix.Fields.DerivativeContractSettlMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeContractSettlMonth val)
            {
                this.DerivativeContractSettlMonth = val;
            }

            public QuickFix.Fields.DerivativeContractSettlMonth Get(QuickFix.Fields.DerivativeContractSettlMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeContractSettlMonth val)
            {
                return IsSetDerivativeContractSettlMonth();
            }

            public bool IsSetDerivativeContractSettlMonth()
            {
                return IsSetField(Tags.DerivativeContractSettlMonth);
            }
            public QuickFix.Fields.NoDerivativeEvents NoDerivativeEvents
            {
                get
                {
                    QuickFix.Fields.NoDerivativeEvents val = new QuickFix.Fields.NoDerivativeEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoDerivativeEvents val)
            {
                this.NoDerivativeEvents = val;
            }

            public QuickFix.Fields.NoDerivativeEvents Get(QuickFix.Fields.NoDerivativeEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoDerivativeEvents val)
            {
                return IsSetNoDerivativeEvents();
            }

            public bool IsSetNoDerivativeEvents()
            {
                return IsSetField(Tags.NoDerivativeEvents);
            }
            public QuickFix.Fields.NoDerivativeInstrumentParties NoDerivativeInstrumentParties
            {
                get
                {
                    QuickFix.Fields.NoDerivativeInstrumentParties val = new QuickFix.Fields.NoDerivativeInstrumentParties();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoDerivativeInstrumentParties val)
            {
                this.NoDerivativeInstrumentParties = val;
            }

            public QuickFix.Fields.NoDerivativeInstrumentParties Get(QuickFix.Fields.NoDerivativeInstrumentParties val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoDerivativeInstrumentParties val)
            {
                return IsSetNoDerivativeInstrumentParties();
            }

            public bool IsSetNoDerivativeInstrumentParties()
            {
                return IsSetField(Tags.NoDerivativeInstrumentParties);
            }
            public QuickFix.Fields.DerivativeContractMultiplierUnit DerivativeContractMultiplierUnit
            {
                get
                {
                    QuickFix.Fields.DerivativeContractMultiplierUnit val = new QuickFix.Fields.DerivativeContractMultiplierUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeContractMultiplierUnit val)
            {
                this.DerivativeContractMultiplierUnit = val;
            }

            public QuickFix.Fields.DerivativeContractMultiplierUnit Get(QuickFix.Fields.DerivativeContractMultiplierUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeContractMultiplierUnit val)
            {
                return IsSetDerivativeContractMultiplierUnit();
            }

            public bool IsSetDerivativeContractMultiplierUnit()
            {
                return IsSetField(Tags.DerivativeContractMultiplierUnit);
            }
            public QuickFix.Fields.DerivativeFlowScheduleType DerivativeFlowScheduleType
            {
                get
                {
                    QuickFix.Fields.DerivativeFlowScheduleType val = new QuickFix.Fields.DerivativeFlowScheduleType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeFlowScheduleType val)
            {
                this.DerivativeFlowScheduleType = val;
            }

            public QuickFix.Fields.DerivativeFlowScheduleType Get(QuickFix.Fields.DerivativeFlowScheduleType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeFlowScheduleType val)
            {
                return IsSetDerivativeFlowScheduleType();
            }

            public bool IsSetDerivativeFlowScheduleType()
            {
                return IsSetField(Tags.DerivativeFlowScheduleType);
            }
            public QuickFix.Fields.DerivativePriceQuoteCurrency DerivativePriceQuoteCurrency
            {
                get
                {
                    QuickFix.Fields.DerivativePriceQuoteCurrency val = new QuickFix.Fields.DerivativePriceQuoteCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePriceQuoteCurrency val)
            {
                this.DerivativePriceQuoteCurrency = val;
            }

            public QuickFix.Fields.DerivativePriceQuoteCurrency Get(QuickFix.Fields.DerivativePriceQuoteCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePriceQuoteCurrency val)
            {
                return IsSetDerivativePriceQuoteCurrency();
            }

            public bool IsSetDerivativePriceQuoteCurrency()
            {
                return IsSetField(Tags.DerivativePriceQuoteCurrency);
            }
            public QuickFix.Fields.DerivativeUnitOfMeasureCurrency DerivativeUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.DerivativeUnitOfMeasureCurrency val = new QuickFix.Fields.DerivativeUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeUnitOfMeasureCurrency val)
            {
                this.DerivativeUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.DerivativeUnitOfMeasureCurrency Get(QuickFix.Fields.DerivativeUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeUnitOfMeasureCurrency val)
            {
                return IsSetDerivativeUnitOfMeasureCurrency();
            }

            public bool IsSetDerivativeUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.DerivativeUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency DerivativePriceUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency val = new QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency val)
            {
                this.DerivativePriceUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency Get(QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativePriceUnitOfMeasureCurrency val)
            {
                return IsSetDerivativePriceUnitOfMeasureCurrency();
            }

            public bool IsSetDerivativePriceUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.DerivativePriceUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.DerivativeInTheMoneyCondition DerivativeInTheMoneyCondition
            {
                get
                {
                    QuickFix.Fields.DerivativeInTheMoneyCondition val = new QuickFix.Fields.DerivativeInTheMoneyCondition();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeInTheMoneyCondition val)
            {
                this.DerivativeInTheMoneyCondition = val;
            }

            public QuickFix.Fields.DerivativeInTheMoneyCondition Get(QuickFix.Fields.DerivativeInTheMoneyCondition val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeInTheMoneyCondition val)
            {
                return IsSetDerivativeInTheMoneyCondition();
            }

            public bool IsSetDerivativeInTheMoneyCondition()
            {
                return IsSetField(Tags.DerivativeInTheMoneyCondition);
            }
            public QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator DerivativeContraryInstructionEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator val = new QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator val)
            {
                this.DerivativeContraryInstructionEligibilityIndicator = val;
            }

            public QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator Get(QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeContraryInstructionEligibilityIndicator val)
            {
                return IsSetDerivativeContraryInstructionEligibilityIndicator();
            }

            public bool IsSetDerivativeContraryInstructionEligibilityIndicator()
            {
                return IsSetField(Tags.DerivativeContraryInstructionEligibilityIndicator);
            }
            public QuickFix.Fields.DerivativeUPICode DerivativeUPICode
            {
                get
                {
                    QuickFix.Fields.DerivativeUPICode val = new QuickFix.Fields.DerivativeUPICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DerivativeUPICode val)
            {
                this.DerivativeUPICode = val;
            }

            public QuickFix.Fields.DerivativeUPICode Get(QuickFix.Fields.DerivativeUPICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DerivativeUPICode val)
            {
                return IsSetDerivativeUPICode();
            }

            public bool IsSetDerivativeUPICode()
            {
                return IsSetField(Tags.DerivativeUPICode);
            }
            public QuickFix.Fields.SecuritySubType SecuritySubType
            {
                get
                {
                    QuickFix.Fields.SecuritySubType val = new QuickFix.Fields.SecuritySubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecuritySubType val)
            {
                this.SecuritySubType = val;
            }

            public QuickFix.Fields.SecuritySubType Get(QuickFix.Fields.SecuritySubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecuritySubType val)
            {
                return IsSetSecuritySubType();
            }

            public bool IsSetSecuritySubType()
            {
                return IsSetField(Tags.SecuritySubType);
            }
            public QuickFix.Fields.Currency Currency
            {
                get
                {
                    QuickFix.Fields.Currency val = new QuickFix.Fields.Currency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Currency val)
            {
                this.Currency = val;
            }

            public QuickFix.Fields.Currency Get(QuickFix.Fields.Currency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Currency val)
            {
                return IsSetCurrency();
            }

            public bool IsSetCurrency()
            {
                return IsSetField(Tags.Currency);
            }
            public QuickFix.Fields.Text Text
            {
                get
                {
                    QuickFix.Fields.Text val = new QuickFix.Fields.Text();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Text val)
            {
                this.Text = val;
            }

            public QuickFix.Fields.Text Get(QuickFix.Fields.Text val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Text val)
            {
                return IsSetText();
            }

            public bool IsSetText()
            {
                return IsSetField(Tags.Text);
            }
            public QuickFix.Fields.EncodedTextLen EncodedTextLen
            {
                get
                {
                    QuickFix.Fields.EncodedTextLen val = new QuickFix.Fields.EncodedTextLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedTextLen val)
            {
                this.EncodedTextLen = val;
            }

            public QuickFix.Fields.EncodedTextLen Get(QuickFix.Fields.EncodedTextLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedTextLen val)
            {
                return IsSetEncodedTextLen();
            }

            public bool IsSetEncodedTextLen()
            {
                return IsSetField(Tags.EncodedTextLen);
            }
            public QuickFix.Fields.EncodedText EncodedText
            {
                get
                {
                    QuickFix.Fields.EncodedText val = new QuickFix.Fields.EncodedText();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedText val)
            {
                this.EncodedText = val;
            }

            public QuickFix.Fields.EncodedText Get(QuickFix.Fields.EncodedText val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedText val)
            {
                return IsSetEncodedText();
            }

            public bool IsSetEncodedText()
            {
                return IsSetField(Tags.EncodedText);
            }
            public QuickFix.Fields.TradingSessionID TradingSessionID
            {
                get
                {
                    QuickFix.Fields.TradingSessionID val = new QuickFix.Fields.TradingSessionID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TradingSessionID val)
            {
                this.TradingSessionID = val;
            }

            public QuickFix.Fields.TradingSessionID Get(QuickFix.Fields.TradingSessionID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TradingSessionID val)
            {
                return IsSetTradingSessionID();
            }

            public bool IsSetTradingSessionID()
            {
                return IsSetField(Tags.TradingSessionID);
            }
            public QuickFix.Fields.TradingSessionSubID TradingSessionSubID
            {
                get
                {
                    QuickFix.Fields.TradingSessionSubID val = new QuickFix.Fields.TradingSessionSubID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TradingSessionSubID val)
            {
                this.TradingSessionSubID = val;
            }

            public QuickFix.Fields.TradingSessionSubID Get(QuickFix.Fields.TradingSessionSubID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TradingSessionSubID val)
            {
                return IsSetTradingSessionSubID();
            }

            public bool IsSetTradingSessionSubID()
            {
                return IsSetField(Tags.TradingSessionSubID);
            }
            public QuickFix.Fields.SubscriptionRequestType SubscriptionRequestType
            {
                get
                {
                    QuickFix.Fields.SubscriptionRequestType val = new QuickFix.Fields.SubscriptionRequestType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SubscriptionRequestType val)
            {
                this.SubscriptionRequestType = val;
            }

            public QuickFix.Fields.SubscriptionRequestType Get(QuickFix.Fields.SubscriptionRequestType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SubscriptionRequestType val)
            {
                return IsSetSubscriptionRequestType();
            }

            public bool IsSetSubscriptionRequestType()
            {
                return IsSetField(Tags.SubscriptionRequestType);
            }
            public class NoUnderlyingSecurityAltIDGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSecurityAltID, Tags.UnderlyingSecurityAltIDSource, 0 };

                public NoUnderlyingSecurityAltIDGroup()
                  : base(Tags.NoUnderlyingSecurityAltID, Tags.UnderlyingSecurityAltID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSecurityAltIDGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSecurityAltID UnderlyingSecurityAltID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecurityAltID val = new QuickFix.Fields.UnderlyingSecurityAltID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    this.UnderlyingSecurityAltID = val;
                }

                public QuickFix.Fields.UnderlyingSecurityAltID Get(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    return IsSetUnderlyingSecurityAltID();
                }

                public bool IsSetUnderlyingSecurityAltID()
                {
                    return IsSetField(Tags.UnderlyingSecurityAltID);
                }
                public QuickFix.Fields.UnderlyingSecurityAltIDSource UnderlyingSecurityAltIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecurityAltIDSource val = new QuickFix.Fields.UnderlyingSecurityAltIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    this.UnderlyingSecurityAltIDSource = val;
                }

                public QuickFix.Fields.UnderlyingSecurityAltIDSource Get(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    return IsSetUnderlyingSecurityAltIDSource();
                }

                public bool IsSetUnderlyingSecurityAltIDSource()
                {
                    return IsSetField(Tags.UnderlyingSecurityAltIDSource);
                }

            }
            public class NoUnderlyingStipsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingStipType, Tags.UnderlyingStipValue, 0 };

                public NoUnderlyingStipsGroup()
                  : base(Tags.NoUnderlyingStips, Tags.UnderlyingStipType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingStipsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingStipType UnderlyingStipType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStipType val = new QuickFix.Fields.UnderlyingStipType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStipType val)
                {
                    this.UnderlyingStipType = val;
                }

                public QuickFix.Fields.UnderlyingStipType Get(QuickFix.Fields.UnderlyingStipType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStipType val)
                {
                    return IsSetUnderlyingStipType();
                }

                public bool IsSetUnderlyingStipType()
                {
                    return IsSetField(Tags.UnderlyingStipType);
                }
                public QuickFix.Fields.UnderlyingStipValue UnderlyingStipValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStipValue val = new QuickFix.Fields.UnderlyingStipValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStipValue val)
                {
                    this.UnderlyingStipValue = val;
                }

                public QuickFix.Fields.UnderlyingStipValue Get(QuickFix.Fields.UnderlyingStipValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStipValue val)
                {
                    return IsSetUnderlyingStipValue();
                }

                public bool IsSetUnderlyingStipValue()
                {
                    return IsSetField(Tags.UnderlyingStipValue);
                }

            }
            public class NoUndlyInstrumentPartiesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingInstrumentPartyID, Tags.UnderlyingInstrumentPartyIDSource, Tags.UnderlyingInstrumentPartyRole, Tags.NoUndlyInstrumentPartySubIDs, Tags.UnderlyingInstrumentPartyRoleQualifier, 0 };

                public NoUndlyInstrumentPartiesGroup()
                  : base(Tags.NoUndlyInstrumentParties, Tags.UnderlyingInstrumentPartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUndlyInstrumentPartiesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyID UnderlyingInstrumentPartyID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyID val = new QuickFix.Fields.UnderlyingInstrumentPartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    this.UnderlyingInstrumentPartyID = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyID Get(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    return IsSetUnderlyingInstrumentPartyID();
                }

                public bool IsSetUnderlyingInstrumentPartyID()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyID);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyIDSource UnderlyingInstrumentPartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyIDSource val = new QuickFix.Fields.UnderlyingInstrumentPartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    this.UnderlyingInstrumentPartyIDSource = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyIDSource Get(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    return IsSetUnderlyingInstrumentPartyIDSource();
                }

                public bool IsSetUnderlyingInstrumentPartyIDSource()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyIDSource);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyRole UnderlyingInstrumentPartyRole
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyRole val = new QuickFix.Fields.UnderlyingInstrumentPartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    this.UnderlyingInstrumentPartyRole = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyRole Get(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    return IsSetUnderlyingInstrumentPartyRole();
                }

                public bool IsSetUnderlyingInstrumentPartyRole()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyRole);
                }
                public QuickFix.Fields.NoUndlyInstrumentPartySubIDs NoUndlyInstrumentPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUndlyInstrumentPartySubIDs val = new QuickFix.Fields.NoUndlyInstrumentPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    this.NoUndlyInstrumentPartySubIDs = val;
                }

                public QuickFix.Fields.NoUndlyInstrumentPartySubIDs Get(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    return IsSetNoUndlyInstrumentPartySubIDs();
                }

                public bool IsSetNoUndlyInstrumentPartySubIDs()
                {
                    return IsSetField(Tags.NoUndlyInstrumentPartySubIDs);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier UnderlyingInstrumentPartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val = new QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    this.UnderlyingInstrumentPartyRoleQualifier = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier Get(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    return IsSetUnderlyingInstrumentPartyRoleQualifier();
                }

                public bool IsSetUnderlyingInstrumentPartyRoleQualifier()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyRoleQualifier);
                }
                public class NoUndlyInstrumentPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingInstrumentPartySubID, Tags.UnderlyingInstrumentPartySubIDType, 0 };

                    public NoUndlyInstrumentPartySubIDsGroup()
                      : base(Tags.NoUndlyInstrumentPartySubIDs, Tags.UnderlyingInstrumentPartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUndlyInstrumentPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubID UnderlyingInstrumentPartySubID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingInstrumentPartySubID val = new QuickFix.Fields.UnderlyingInstrumentPartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        this.UnderlyingInstrumentPartySubID = val;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubID Get(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        return IsSetUnderlyingInstrumentPartySubID();
                    }

                    public bool IsSetUnderlyingInstrumentPartySubID()
                    {
                        return IsSetField(Tags.UnderlyingInstrumentPartySubID);
                    }
                    public QuickFix.Fields.UnderlyingInstrumentPartySubIDType UnderlyingInstrumentPartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingInstrumentPartySubIDType val = new QuickFix.Fields.UnderlyingInstrumentPartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        this.UnderlyingInstrumentPartySubIDType = val;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubIDType Get(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        return IsSetUnderlyingInstrumentPartySubIDType();
                    }

                    public bool IsSetUnderlyingInstrumentPartySubIDType()
                    {
                        return IsSetField(Tags.UnderlyingInstrumentPartySubIDType);
                    }

                }
            }
            public class NoUnderlyingEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingEventType, Tags.UnderlyingEventDate, Tags.UnderlyingEventTime, Tags.UnderlyingEventTimeUnit, Tags.UnderlyingEventTimePeriod, Tags.UnderlyingEventMonthYear, Tags.UnderlyingEventPx, Tags.UnderlyingEventText, Tags.EncodedUnderlyingEventTextLen, Tags.EncodedUnderlyingEventText, 0 };

                public NoUnderlyingEventsGroup()
                  : base(Tags.NoUnderlyingEvents, Tags.UnderlyingEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingEventType UnderlyingEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventType val = new QuickFix.Fields.UnderlyingEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventType val)
                {
                    this.UnderlyingEventType = val;
                }

                public QuickFix.Fields.UnderlyingEventType Get(QuickFix.Fields.UnderlyingEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventType val)
                {
                    return IsSetUnderlyingEventType();
                }

                public bool IsSetUnderlyingEventType()
                {
                    return IsSetField(Tags.UnderlyingEventType);
                }
                public QuickFix.Fields.UnderlyingEventDate UnderlyingEventDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventDate val = new QuickFix.Fields.UnderlyingEventDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventDate val)
                {
                    this.UnderlyingEventDate = val;
                }

                public QuickFix.Fields.UnderlyingEventDate Get(QuickFix.Fields.UnderlyingEventDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventDate val)
                {
                    return IsSetUnderlyingEventDate();
                }

                public bool IsSetUnderlyingEventDate()
                {
                    return IsSetField(Tags.UnderlyingEventDate);
                }
                public QuickFix.Fields.UnderlyingEventTime UnderlyingEventTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTime val = new QuickFix.Fields.UnderlyingEventTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTime val)
                {
                    this.UnderlyingEventTime = val;
                }

                public QuickFix.Fields.UnderlyingEventTime Get(QuickFix.Fields.UnderlyingEventTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTime val)
                {
                    return IsSetUnderlyingEventTime();
                }

                public bool IsSetUnderlyingEventTime()
                {
                    return IsSetField(Tags.UnderlyingEventTime);
                }
                public QuickFix.Fields.UnderlyingEventTimeUnit UnderlyingEventTimeUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTimeUnit val = new QuickFix.Fields.UnderlyingEventTimeUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    this.UnderlyingEventTimeUnit = val;
                }

                public QuickFix.Fields.UnderlyingEventTimeUnit Get(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    return IsSetUnderlyingEventTimeUnit();
                }

                public bool IsSetUnderlyingEventTimeUnit()
                {
                    return IsSetField(Tags.UnderlyingEventTimeUnit);
                }
                public QuickFix.Fields.UnderlyingEventTimePeriod UnderlyingEventTimePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTimePeriod val = new QuickFix.Fields.UnderlyingEventTimePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    this.UnderlyingEventTimePeriod = val;
                }

                public QuickFix.Fields.UnderlyingEventTimePeriod Get(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    return IsSetUnderlyingEventTimePeriod();
                }

                public bool IsSetUnderlyingEventTimePeriod()
                {
                    return IsSetField(Tags.UnderlyingEventTimePeriod);
                }
                public QuickFix.Fields.UnderlyingEventMonthYear UnderlyingEventMonthYear
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventMonthYear val = new QuickFix.Fields.UnderlyingEventMonthYear();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    this.UnderlyingEventMonthYear = val;
                }

                public QuickFix.Fields.UnderlyingEventMonthYear Get(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    return IsSetUnderlyingEventMonthYear();
                }

                public bool IsSetUnderlyingEventMonthYear()
                {
                    return IsSetField(Tags.UnderlyingEventMonthYear);
                }
                public QuickFix.Fields.UnderlyingEventPx UnderlyingEventPx
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventPx val = new QuickFix.Fields.UnderlyingEventPx();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventPx val)
                {
                    this.UnderlyingEventPx = val;
                }

                public QuickFix.Fields.UnderlyingEventPx Get(QuickFix.Fields.UnderlyingEventPx val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventPx val)
                {
                    return IsSetUnderlyingEventPx();
                }

                public bool IsSetUnderlyingEventPx()
                {
                    return IsSetField(Tags.UnderlyingEventPx);
                }
                public QuickFix.Fields.UnderlyingEventText UnderlyingEventText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventText val = new QuickFix.Fields.UnderlyingEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventText val)
                {
                    this.UnderlyingEventText = val;
                }

                public QuickFix.Fields.UnderlyingEventText Get(QuickFix.Fields.UnderlyingEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventText val)
                {
                    return IsSetUnderlyingEventText();
                }

                public bool IsSetUnderlyingEventText()
                {
                    return IsSetField(Tags.UnderlyingEventText);
                }
                public QuickFix.Fields.EncodedUnderlyingEventTextLen EncodedUnderlyingEventTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingEventTextLen val = new QuickFix.Fields.EncodedUnderlyingEventTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    this.EncodedUnderlyingEventTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingEventTextLen Get(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    return IsSetEncodedUnderlyingEventTextLen();
                }

                public bool IsSetEncodedUnderlyingEventTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingEventTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingEventText EncodedUnderlyingEventText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingEventText val = new QuickFix.Fields.EncodedUnderlyingEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    this.EncodedUnderlyingEventText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingEventText Get(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    return IsSetEncodedUnderlyingEventText();
                }

                public bool IsSetEncodedUnderlyingEventText()
                {
                    return IsSetField(Tags.EncodedUnderlyingEventText);
                }

            }
            public class NoUnderlyingSecondaryAssetClassesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSecondaryAssetClass, Tags.UnderlyingSecondaryAssetSubClass, Tags.UnderlyingSecondaryAssetType, Tags.UnderlyingSecondaryAssetSubType, 0 };

                public NoUnderlyingSecondaryAssetClassesGroup()
                  : base(Tags.NoUnderlyingSecondaryAssetClasses, Tags.UnderlyingSecondaryAssetClass, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSecondaryAssetClassesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetClass UnderlyingSecondaryAssetClass
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetClass val = new QuickFix.Fields.UnderlyingSecondaryAssetClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    this.UnderlyingSecondaryAssetClass = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetClass Get(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    return IsSetUnderlyingSecondaryAssetClass();
                }

                public bool IsSetUnderlyingSecondaryAssetClass()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetClass);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetSubClass UnderlyingSecondaryAssetSubClass
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetSubClass val = new QuickFix.Fields.UnderlyingSecondaryAssetSubClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    this.UnderlyingSecondaryAssetSubClass = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetSubClass Get(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    return IsSetUnderlyingSecondaryAssetSubClass();
                }

                public bool IsSetUnderlyingSecondaryAssetSubClass()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetSubClass);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetType UnderlyingSecondaryAssetType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetType val = new QuickFix.Fields.UnderlyingSecondaryAssetType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    this.UnderlyingSecondaryAssetType = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetType Get(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    return IsSetUnderlyingSecondaryAssetType();
                }

                public bool IsSetUnderlyingSecondaryAssetType()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetType);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetSubType UnderlyingSecondaryAssetSubType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetSubType val = new QuickFix.Fields.UnderlyingSecondaryAssetSubType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    this.UnderlyingSecondaryAssetSubType = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetSubType Get(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    return IsSetUnderlyingSecondaryAssetSubType();
                }

                public bool IsSetUnderlyingSecondaryAssetSubType()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetSubType);
                }

            }
            public class NoUnderlyingComplexEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingComplexEventType, Tags.UnderlyingComplexOptPayoutAmount, Tags.UnderlyingComplexEventPrice, Tags.UnderlyingComplexEventPriceBoundaryMethod, Tags.UnderlyingComplexEventPriceBoundaryPrecision, Tags.UnderlyingComplexEventPriceTimeType, Tags.UnderlyingComplexEventCondition, Tags.NoUnderlyingComplexEventDates, Tags.UnderlyingComplexOptPayoutPaySide, Tags.UnderlyingComplexOptPayoutReceiveSide, Tags.UnderlyingComplexOptPayoutUnderlier, Tags.UnderlyingComplexOptPayoutPercentage, Tags.UnderlyingComplexOptPayoutTime, Tags.UnderlyingComplexOptPayoutCurrency, Tags.UnderlyingComplexEventPricePercentage, Tags.UnderlyingComplexEventCurrencyOne, Tags.UnderlyingComplexEventCurrencyTwo, Tags.UnderlyingComplexEventQuoteBasis, Tags.UnderlyingComplexEventFixedFXRate, Tags.UnderlyingComplexEventDeterminationMethod, Tags.UnderlyingComplexEventCalculationAgent, Tags.UnderlyingComplexEventStrikePrice, Tags.UnderlyingComplexEventStrikeFactor, Tags.UnderlyingComplexEventStrikeNumberOfOptions, Tags.NoUnderlyingComplexEventRateSources, Tags.UnderlyingComplexEventDateUnadjusted, Tags.UnderlyingComplexEventDateRelativeTo, Tags.UnderlyingComplexEventDateOffsetPeriod, Tags.UnderlyingComplexEventDateOffsetUnit, Tags.UnderlyingComplexEventDateOffsetDayType, Tags.UnderlyingComplexEventDateBusinessDayConvention, Tags.NoUnderlyingComplexEventDateBusinessCenters, Tags.UnderlyingComplexEventDateAdjusted, Tags.UnderlyingComplexEventFixingTime, Tags.UnderlyingComplexEventFixingTimeBusinessCenter, Tags.NoUnderlyingComplexEventPeriods, Tags.UnderlyingComplexEventCreditEventsXIDRef, Tags.UnderlyingComplexEventCreditEventNotifyingParty, Tags.UnderlyingComplexEventCreditEventBusinessCenter, Tags.UnderlyingComplexEventCreditEventStandardSources, Tags.UnderlyingComplexEventCreditEventMinimumSources, Tags.NoUnderlyingComplexEventCreditEventSources, Tags.NoUnderlyingComplexEventCreditEvents, Tags.UnderlyingComplexEventXID, Tags.UnderlyingComplexEventXIDRef, Tags.UnderlyingComplexEventSpotRate, Tags.UnderlyingComplexEventForwardPoints, Tags.UnderlyingComplexEventFuturesPriceValuation, Tags.UnderlyingComplexEventOptionsPriceValuation, Tags.UnderlyingComplexEventPVFinalPriceElectionFallback, 0 };

                public NoUnderlyingComplexEventsGroup()
                  : base(Tags.NoUnderlyingComplexEvents, Tags.UnderlyingComplexEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingComplexEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingComplexEventType UnderlyingComplexEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventType val = new QuickFix.Fields.UnderlyingComplexEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    this.UnderlyingComplexEventType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventType Get(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    return IsSetUnderlyingComplexEventType();
                }

                public bool IsSetUnderlyingComplexEventType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventType);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutAmount UnderlyingComplexOptPayoutAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutAmount val = new QuickFix.Fields.UnderlyingComplexOptPayoutAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    this.UnderlyingComplexOptPayoutAmount = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutAmount Get(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    return IsSetUnderlyingComplexOptPayoutAmount();
                }

                public bool IsSetUnderlyingComplexOptPayoutAmount()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutAmount);
                }
                public QuickFix.Fields.UnderlyingComplexEventPrice UnderlyingComplexEventPrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPrice val = new QuickFix.Fields.UnderlyingComplexEventPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    this.UnderlyingComplexEventPrice = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPrice Get(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    return IsSetUnderlyingComplexEventPrice();
                }

                public bool IsSetUnderlyingComplexEventPrice()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPrice);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod UnderlyingComplexEventPriceBoundaryMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val = new QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    this.UnderlyingComplexEventPriceBoundaryMethod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod Get(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    return IsSetUnderlyingComplexEventPriceBoundaryMethod();
                }

                public bool IsSetUnderlyingComplexEventPriceBoundaryMethod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceBoundaryMethod);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision UnderlyingComplexEventPriceBoundaryPrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val = new QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    this.UnderlyingComplexEventPriceBoundaryPrecision = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision Get(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    return IsSetUnderlyingComplexEventPriceBoundaryPrecision();
                }

                public bool IsSetUnderlyingComplexEventPriceBoundaryPrecision()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceBoundaryPrecision);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceTimeType UnderlyingComplexEventPriceTimeType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceTimeType val = new QuickFix.Fields.UnderlyingComplexEventPriceTimeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    this.UnderlyingComplexEventPriceTimeType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceTimeType Get(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    return IsSetUnderlyingComplexEventPriceTimeType();
                }

                public bool IsSetUnderlyingComplexEventPriceTimeType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceTimeType);
                }
                public QuickFix.Fields.UnderlyingComplexEventCondition UnderlyingComplexEventCondition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCondition val = new QuickFix.Fields.UnderlyingComplexEventCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    this.UnderlyingComplexEventCondition = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCondition Get(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    return IsSetUnderlyingComplexEventCondition();
                }

                public bool IsSetUnderlyingComplexEventCondition()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCondition);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventDates NoUnderlyingComplexEventDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventDates val = new QuickFix.Fields.NoUnderlyingComplexEventDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    this.NoUnderlyingComplexEventDates = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventDates Get(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    return IsSetNoUnderlyingComplexEventDates();
                }

                public bool IsSetNoUnderlyingComplexEventDates()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventDates);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutPaySide UnderlyingComplexOptPayoutPaySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val = new QuickFix.Fields.UnderlyingComplexOptPayoutPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    this.UnderlyingComplexOptPayoutPaySide = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutPaySide Get(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    return IsSetUnderlyingComplexOptPayoutPaySide();
                }

                public bool IsSetUnderlyingComplexOptPayoutPaySide()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutPaySide);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide UnderlyingComplexOptPayoutReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val = new QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    this.UnderlyingComplexOptPayoutReceiveSide = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide Get(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    return IsSetUnderlyingComplexOptPayoutReceiveSide();
                }

                public bool IsSetUnderlyingComplexOptPayoutReceiveSide()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutReceiveSide);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier UnderlyingComplexOptPayoutUnderlier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val = new QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    this.UnderlyingComplexOptPayoutUnderlier = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier Get(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    return IsSetUnderlyingComplexOptPayoutUnderlier();
                }

                public bool IsSetUnderlyingComplexOptPayoutUnderlier()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutUnderlier);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutPercentage UnderlyingComplexOptPayoutPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val = new QuickFix.Fields.UnderlyingComplexOptPayoutPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    this.UnderlyingComplexOptPayoutPercentage = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutPercentage Get(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    return IsSetUnderlyingComplexOptPayoutPercentage();
                }

                public bool IsSetUnderlyingComplexOptPayoutPercentage()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutPercentage);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutTime UnderlyingComplexOptPayoutTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutTime val = new QuickFix.Fields.UnderlyingComplexOptPayoutTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    this.UnderlyingComplexOptPayoutTime = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutTime Get(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    return IsSetUnderlyingComplexOptPayoutTime();
                }

                public bool IsSetUnderlyingComplexOptPayoutTime()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutTime);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutCurrency UnderlyingComplexOptPayoutCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val = new QuickFix.Fields.UnderlyingComplexOptPayoutCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    this.UnderlyingComplexOptPayoutCurrency = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutCurrency Get(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    return IsSetUnderlyingComplexOptPayoutCurrency();
                }

                public bool IsSetUnderlyingComplexOptPayoutCurrency()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutCurrency);
                }
                public QuickFix.Fields.UnderlyingComplexEventPricePercentage UnderlyingComplexEventPricePercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPricePercentage val = new QuickFix.Fields.UnderlyingComplexEventPricePercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    this.UnderlyingComplexEventPricePercentage = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPricePercentage Get(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    return IsSetUnderlyingComplexEventPricePercentage();
                }

                public bool IsSetUnderlyingComplexEventPricePercentage()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPricePercentage);
                }
                public QuickFix.Fields.UnderlyingComplexEventCurrencyOne UnderlyingComplexEventCurrencyOne
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCurrencyOne val = new QuickFix.Fields.UnderlyingComplexEventCurrencyOne();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    this.UnderlyingComplexEventCurrencyOne = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCurrencyOne Get(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    return IsSetUnderlyingComplexEventCurrencyOne();
                }

                public bool IsSetUnderlyingComplexEventCurrencyOne()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCurrencyOne);
                }
                public QuickFix.Fields.UnderlyingComplexEventCurrencyTwo UnderlyingComplexEventCurrencyTwo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val = new QuickFix.Fields.UnderlyingComplexEventCurrencyTwo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    this.UnderlyingComplexEventCurrencyTwo = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCurrencyTwo Get(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    return IsSetUnderlyingComplexEventCurrencyTwo();
                }

                public bool IsSetUnderlyingComplexEventCurrencyTwo()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCurrencyTwo);
                }
                public QuickFix.Fields.UnderlyingComplexEventQuoteBasis UnderlyingComplexEventQuoteBasis
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventQuoteBasis val = new QuickFix.Fields.UnderlyingComplexEventQuoteBasis();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    this.UnderlyingComplexEventQuoteBasis = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventQuoteBasis Get(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    return IsSetUnderlyingComplexEventQuoteBasis();
                }

                public bool IsSetUnderlyingComplexEventQuoteBasis()
                {
                    return IsSetField(Tags.UnderlyingComplexEventQuoteBasis);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixedFXRate UnderlyingComplexEventFixedFXRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixedFXRate val = new QuickFix.Fields.UnderlyingComplexEventFixedFXRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    this.UnderlyingComplexEventFixedFXRate = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixedFXRate Get(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    return IsSetUnderlyingComplexEventFixedFXRate();
                }

                public bool IsSetUnderlyingComplexEventFixedFXRate()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixedFXRate);
                }
                public QuickFix.Fields.UnderlyingComplexEventDeterminationMethod UnderlyingComplexEventDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val = new QuickFix.Fields.UnderlyingComplexEventDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    this.UnderlyingComplexEventDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDeterminationMethod Get(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    return IsSetUnderlyingComplexEventDeterminationMethod();
                }

                public bool IsSetUnderlyingComplexEventDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingComplexEventCalculationAgent UnderlyingComplexEventCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCalculationAgent val = new QuickFix.Fields.UnderlyingComplexEventCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    this.UnderlyingComplexEventCalculationAgent = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCalculationAgent Get(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    return IsSetUnderlyingComplexEventCalculationAgent();
                }

                public bool IsSetUnderlyingComplexEventCalculationAgent()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCalculationAgent);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikePrice UnderlyingComplexEventStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikePrice val = new QuickFix.Fields.UnderlyingComplexEventStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    this.UnderlyingComplexEventStrikePrice = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikePrice Get(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    return IsSetUnderlyingComplexEventStrikePrice();
                }

                public bool IsSetUnderlyingComplexEventStrikePrice()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikePrice);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikeFactor UnderlyingComplexEventStrikeFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikeFactor val = new QuickFix.Fields.UnderlyingComplexEventStrikeFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    this.UnderlyingComplexEventStrikeFactor = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikeFactor Get(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    return IsSetUnderlyingComplexEventStrikeFactor();
                }

                public bool IsSetUnderlyingComplexEventStrikeFactor()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikeFactor);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions UnderlyingComplexEventStrikeNumberOfOptions
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val = new QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    this.UnderlyingComplexEventStrikeNumberOfOptions = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions Get(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    return IsSetUnderlyingComplexEventStrikeNumberOfOptions();
                }

                public bool IsSetUnderlyingComplexEventStrikeNumberOfOptions()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikeNumberOfOptions);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventRateSources NoUnderlyingComplexEventRateSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventRateSources val = new QuickFix.Fields.NoUnderlyingComplexEventRateSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    this.NoUnderlyingComplexEventRateSources = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventRateSources Get(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    return IsSetNoUnderlyingComplexEventRateSources();
                }

                public bool IsSetNoUnderlyingComplexEventRateSources()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventRateSources);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateUnadjusted UnderlyingComplexEventDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val = new QuickFix.Fields.UnderlyingComplexEventDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    this.UnderlyingComplexEventDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateUnadjusted Get(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    return IsSetUnderlyingComplexEventDateUnadjusted();
                }

                public bool IsSetUnderlyingComplexEventDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateRelativeTo UnderlyingComplexEventDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val = new QuickFix.Fields.UnderlyingComplexEventDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    this.UnderlyingComplexEventDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateRelativeTo Get(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    return IsSetUnderlyingComplexEventDateRelativeTo();
                }

                public bool IsSetUnderlyingComplexEventDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod UnderlyingComplexEventDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    this.UnderlyingComplexEventDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetPeriod();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit UnderlyingComplexEventDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    this.UnderlyingComplexEventDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetUnit();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType UnderlyingComplexEventDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    this.UnderlyingComplexEventDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetDayType();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention UnderlyingComplexEventDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    this.UnderlyingComplexEventDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingComplexEventDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingComplexEventDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters NoUnderlyingComplexEventDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    this.NoUnderlyingComplexEventDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingComplexEventDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingComplexEventDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateAdjusted UnderlyingComplexEventDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateAdjusted val = new QuickFix.Fields.UnderlyingComplexEventDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    this.UnderlyingComplexEventDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateAdjusted Get(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    return IsSetUnderlyingComplexEventDateAdjusted();
                }

                public bool IsSetUnderlyingComplexEventDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixingTime UnderlyingComplexEventFixingTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixingTime val = new QuickFix.Fields.UnderlyingComplexEventFixingTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    this.UnderlyingComplexEventFixingTime = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixingTime Get(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    return IsSetUnderlyingComplexEventFixingTime();
                }

                public bool IsSetUnderlyingComplexEventFixingTime()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixingTime);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter UnderlyingComplexEventFixingTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    this.UnderlyingComplexEventFixingTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    return IsSetUnderlyingComplexEventFixingTimeBusinessCenter();
                }

                public bool IsSetUnderlyingComplexEventFixingTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixingTimeBusinessCenter);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventPeriods NoUnderlyingComplexEventPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventPeriods val = new QuickFix.Fields.NoUnderlyingComplexEventPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    this.NoUnderlyingComplexEventPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventPeriods Get(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    return IsSetNoUnderlyingComplexEventPeriods();
                }

                public bool IsSetNoUnderlyingComplexEventPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventPeriods);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef UnderlyingComplexEventCreditEventsXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val = new QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    this.UnderlyingComplexEventCreditEventsXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef Get(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    return IsSetUnderlyingComplexEventCreditEventsXIDRef();
                }

                public bool IsSetUnderlyingComplexEventCreditEventsXIDRef()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventsXIDRef);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty UnderlyingComplexEventCreditEventNotifyingParty
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val = new QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    this.UnderlyingComplexEventCreditEventNotifyingParty = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty Get(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    return IsSetUnderlyingComplexEventCreditEventNotifyingParty();
                }

                public bool IsSetUnderlyingComplexEventCreditEventNotifyingParty()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventNotifyingParty);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter UnderlyingComplexEventCreditEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    this.UnderlyingComplexEventCreditEventBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    return IsSetUnderlyingComplexEventCreditEventBusinessCenter();
                }

                public bool IsSetUnderlyingComplexEventCreditEventBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources UnderlyingComplexEventCreditEventStandardSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val = new QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    this.UnderlyingComplexEventCreditEventStandardSources = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources Get(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    return IsSetUnderlyingComplexEventCreditEventStandardSources();
                }

                public bool IsSetUnderlyingComplexEventCreditEventStandardSources()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventStandardSources);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources UnderlyingComplexEventCreditEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val = new QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    this.UnderlyingComplexEventCreditEventMinimumSources = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources Get(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    return IsSetUnderlyingComplexEventCreditEventMinimumSources();
                }

                public bool IsSetUnderlyingComplexEventCreditEventMinimumSources()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventMinimumSources);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources NoUnderlyingComplexEventCreditEventSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    this.NoUnderlyingComplexEventCreditEventSources = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    return IsSetNoUnderlyingComplexEventCreditEventSources();
                }

                public bool IsSetNoUnderlyingComplexEventCreditEventSources()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventCreditEventSources);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventCreditEvents NoUnderlyingComplexEventCreditEvents
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    this.NoUnderlyingComplexEventCreditEvents = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventCreditEvents Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    return IsSetNoUnderlyingComplexEventCreditEvents();
                }

                public bool IsSetNoUnderlyingComplexEventCreditEvents()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventCreditEvents);
                }
                public QuickFix.Fields.UnderlyingComplexEventXID UnderlyingComplexEventXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventXID val = new QuickFix.Fields.UnderlyingComplexEventXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    this.UnderlyingComplexEventXID = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventXID Get(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    return IsSetUnderlyingComplexEventXID();
                }

                public bool IsSetUnderlyingComplexEventXID()
                {
                    return IsSetField(Tags.UnderlyingComplexEventXID);
                }
                public QuickFix.Fields.UnderlyingComplexEventXIDRef UnderlyingComplexEventXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventXIDRef val = new QuickFix.Fields.UnderlyingComplexEventXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    this.UnderlyingComplexEventXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventXIDRef Get(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    return IsSetUnderlyingComplexEventXIDRef();
                }

                public bool IsSetUnderlyingComplexEventXIDRef()
                {
                    return IsSetField(Tags.UnderlyingComplexEventXIDRef);
                }
                public QuickFix.Fields.UnderlyingComplexEventSpotRate UnderlyingComplexEventSpotRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventSpotRate val = new QuickFix.Fields.UnderlyingComplexEventSpotRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    this.UnderlyingComplexEventSpotRate = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventSpotRate Get(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    return IsSetUnderlyingComplexEventSpotRate();
                }

                public bool IsSetUnderlyingComplexEventSpotRate()
                {
                    return IsSetField(Tags.UnderlyingComplexEventSpotRate);
                }
                public QuickFix.Fields.UnderlyingComplexEventForwardPoints UnderlyingComplexEventForwardPoints
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventForwardPoints val = new QuickFix.Fields.UnderlyingComplexEventForwardPoints();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    this.UnderlyingComplexEventForwardPoints = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventForwardPoints Get(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    return IsSetUnderlyingComplexEventForwardPoints();
                }

                public bool IsSetUnderlyingComplexEventForwardPoints()
                {
                    return IsSetField(Tags.UnderlyingComplexEventForwardPoints);
                }
                public QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation UnderlyingComplexEventFuturesPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val = new QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    this.UnderlyingComplexEventFuturesPriceValuation = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation Get(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    return IsSetUnderlyingComplexEventFuturesPriceValuation();
                }

                public bool IsSetUnderlyingComplexEventFuturesPriceValuation()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFuturesPriceValuation);
                }
                public QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation UnderlyingComplexEventOptionsPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val = new QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    this.UnderlyingComplexEventOptionsPriceValuation = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation Get(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    return IsSetUnderlyingComplexEventOptionsPriceValuation();
                }

                public bool IsSetUnderlyingComplexEventOptionsPriceValuation()
                {
                    return IsSetField(Tags.UnderlyingComplexEventOptionsPriceValuation);
                }
                public QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback UnderlyingComplexEventPVFinalPriceElectionFallback
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val = new QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    this.UnderlyingComplexEventPVFinalPriceElectionFallback = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback Get(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    return IsSetUnderlyingComplexEventPVFinalPriceElectionFallback();
                }

                public bool IsSetUnderlyingComplexEventPVFinalPriceElectionFallback()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPVFinalPriceElectionFallback);
                }
                public class NoUnderlyingComplexEventDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventStartDate, Tags.UnderlyingComplexEventEndDate, Tags.NoUnderlyingComplexEventTimes, 0 };

                    public NoUnderlyingComplexEventDatesGroup()
                      : base(Tags.NoUnderlyingComplexEventDates, Tags.UnderlyingComplexEventStartDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventStartDate UnderlyingComplexEventStartDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventStartDate val = new QuickFix.Fields.UnderlyingComplexEventStartDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        this.UnderlyingComplexEventStartDate = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventStartDate Get(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        return IsSetUnderlyingComplexEventStartDate();
                    }

                    public bool IsSetUnderlyingComplexEventStartDate()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventStartDate);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventEndDate UnderlyingComplexEventEndDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventEndDate val = new QuickFix.Fields.UnderlyingComplexEventEndDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        this.UnderlyingComplexEventEndDate = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventEndDate Get(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        return IsSetUnderlyingComplexEventEndDate();
                    }

                    public bool IsSetUnderlyingComplexEventEndDate()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventEndDate);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventTimes NoUnderlyingComplexEventTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventTimes val = new QuickFix.Fields.NoUnderlyingComplexEventTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        this.NoUnderlyingComplexEventTimes = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventTimes Get(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        return IsSetNoUnderlyingComplexEventTimes();
                    }

                    public bool IsSetNoUnderlyingComplexEventTimes()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventTimes);
                    }
                    public class NoUnderlyingComplexEventTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventStartTime, Tags.UnderlyingComplexEventEndTime, 0 };

                        public NoUnderlyingComplexEventTimesGroup()
                          : base(Tags.NoUnderlyingComplexEventTimes, Tags.UnderlyingComplexEventStartTime, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventStartTime UnderlyingComplexEventStartTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventStartTime val = new QuickFix.Fields.UnderlyingComplexEventStartTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            this.UnderlyingComplexEventStartTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventStartTime Get(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            return IsSetUnderlyingComplexEventStartTime();
                        }

                        public bool IsSetUnderlyingComplexEventStartTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventStartTime);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventEndTime UnderlyingComplexEventEndTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventEndTime val = new QuickFix.Fields.UnderlyingComplexEventEndTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            this.UnderlyingComplexEventEndTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventEndTime Get(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            return IsSetUnderlyingComplexEventEndTime();
                        }

                        public bool IsSetUnderlyingComplexEventEndTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventEndTime);
                        }

                    }
                }
                public class NoUnderlyingComplexEventRateSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventRateSource, Tags.UnderlyingComplexEventRateSourceType, Tags.UnderlyingComplexEventReferencePage, Tags.UnderlyingComplexEventReferencePageHeading, 0 };

                    public NoUnderlyingComplexEventRateSourcesGroup()
                      : base(Tags.NoUnderlyingComplexEventRateSources, Tags.UnderlyingComplexEventRateSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventRateSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSource UnderlyingComplexEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventRateSource val = new QuickFix.Fields.UnderlyingComplexEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        this.UnderlyingComplexEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSource Get(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        return IsSetUnderlyingComplexEventRateSource();
                    }

                    public bool IsSetUnderlyingComplexEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventRateSource);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventRateSourceType UnderlyingComplexEventRateSourceType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventRateSourceType val = new QuickFix.Fields.UnderlyingComplexEventRateSourceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        this.UnderlyingComplexEventRateSourceType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSourceType Get(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        return IsSetUnderlyingComplexEventRateSourceType();
                    }

                    public bool IsSetUnderlyingComplexEventRateSourceType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventRateSourceType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventReferencePage UnderlyingComplexEventReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventReferencePage val = new QuickFix.Fields.UnderlyingComplexEventReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        this.UnderlyingComplexEventReferencePage = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventReferencePage Get(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        return IsSetUnderlyingComplexEventReferencePage();
                    }

                    public bool IsSetUnderlyingComplexEventReferencePage()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventReferencePage);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventReferencePageHeading UnderlyingComplexEventReferencePageHeading
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val = new QuickFix.Fields.UnderlyingComplexEventReferencePageHeading();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        this.UnderlyingComplexEventReferencePageHeading = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventReferencePageHeading Get(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        return IsSetUnderlyingComplexEventReferencePageHeading();
                    }

                    public bool IsSetUnderlyingComplexEventReferencePageHeading()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventReferencePageHeading);
                    }

                }
                public class NoUnderlyingComplexEventDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventDateBusinessCenter, 0 };

                    public NoUnderlyingComplexEventDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingComplexEventDateBusinessCenters, Tags.UnderlyingComplexEventDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter UnderlyingComplexEventDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        this.UnderlyingComplexEventDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        return IsSetUnderlyingComplexEventDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingComplexEventDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventDateBusinessCenter);
                    }

                }
                public class NoUnderlyingComplexEventPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventPeriodType, Tags.UnderlyingComplexEventBusinessCenter, Tags.NoUnderlyingComplexEventSchedules, Tags.NoUnderlyingComplexEventPeriodDateTimes, Tags.NoUnderlyingComplexEventAveragingObservations, 0 };

                    public NoUnderlyingComplexEventPeriodsGroup()
                      : base(Tags.NoUnderlyingComplexEventPeriods, Tags.UnderlyingComplexEventPeriodType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventPeriodType UnderlyingComplexEventPeriodType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventPeriodType val = new QuickFix.Fields.UnderlyingComplexEventPeriodType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        this.UnderlyingComplexEventPeriodType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventPeriodType Get(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        return IsSetUnderlyingComplexEventPeriodType();
                    }

                    public bool IsSetUnderlyingComplexEventPeriodType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventPeriodType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventBusinessCenter UnderlyingComplexEventBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        this.UnderlyingComplexEventBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        return IsSetUnderlyingComplexEventBusinessCenter();
                    }

                    public bool IsSetUnderlyingComplexEventBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventBusinessCenter);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventSchedules NoUnderlyingComplexEventSchedules
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventSchedules val = new QuickFix.Fields.NoUnderlyingComplexEventSchedules();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        this.NoUnderlyingComplexEventSchedules = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventSchedules Get(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        return IsSetNoUnderlyingComplexEventSchedules();
                    }

                    public bool IsSetNoUnderlyingComplexEventSchedules()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventSchedules);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes NoUnderlyingComplexEventPeriodDateTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val = new QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        this.NoUnderlyingComplexEventPeriodDateTimes = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes Get(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        return IsSetNoUnderlyingComplexEventPeriodDateTimes();
                    }

                    public bool IsSetNoUnderlyingComplexEventPeriodDateTimes()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventPeriodDateTimes);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations NoUnderlyingComplexEventAveragingObservations
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val = new QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        this.NoUnderlyingComplexEventAveragingObservations = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations Get(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        return IsSetNoUnderlyingComplexEventAveragingObservations();
                    }

                    public bool IsSetNoUnderlyingComplexEventAveragingObservations()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventAveragingObservations);
                    }
                    public class NoUnderlyingComplexEventSchedulesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventScheduleStartDate, Tags.UnderlyingComplexEventScheduleEndDate, Tags.UnderlyingComplexEventScheduleFrequencyPeriod, Tags.UnderlyingComplexEventScheduleFrequencyUnit, Tags.UnderlyingComplexEventScheduleRollConvention, 0 };

                        public NoUnderlyingComplexEventSchedulesGroup()
                          : base(Tags.NoUnderlyingComplexEventSchedules, Tags.UnderlyingComplexEventScheduleStartDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventSchedulesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleStartDate UnderlyingComplexEventScheduleStartDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val = new QuickFix.Fields.UnderlyingComplexEventScheduleStartDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            this.UnderlyingComplexEventScheduleStartDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleStartDate Get(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            return IsSetUnderlyingComplexEventScheduleStartDate();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleStartDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleStartDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleEndDate UnderlyingComplexEventScheduleEndDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val = new QuickFix.Fields.UnderlyingComplexEventScheduleEndDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            this.UnderlyingComplexEventScheduleEndDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleEndDate Get(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            return IsSetUnderlyingComplexEventScheduleEndDate();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleEndDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleEndDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod UnderlyingComplexEventScheduleFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val = new QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            this.UnderlyingComplexEventScheduleFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod Get(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            return IsSetUnderlyingComplexEventScheduleFrequencyPeriod();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleFrequencyPeriod()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleFrequencyPeriod);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit UnderlyingComplexEventScheduleFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val = new QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            this.UnderlyingComplexEventScheduleFrequencyUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit Get(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            return IsSetUnderlyingComplexEventScheduleFrequencyUnit();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleFrequencyUnit()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleFrequencyUnit);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention UnderlyingComplexEventScheduleRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val = new QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            this.UnderlyingComplexEventScheduleRollConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention Get(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            return IsSetUnderlyingComplexEventScheduleRollConvention();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleRollConvention()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleRollConvention);
                        }

                    }
                    public class NoUnderlyingComplexEventPeriodDateTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventPeriodDate, Tags.UnderlyingComplexEventPeriodTime, 0 };

                        public NoUnderlyingComplexEventPeriodDateTimesGroup()
                          : base(Tags.NoUnderlyingComplexEventPeriodDateTimes, Tags.UnderlyingComplexEventPeriodDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventPeriodDateTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodDate UnderlyingComplexEventPeriodDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventPeriodDate val = new QuickFix.Fields.UnderlyingComplexEventPeriodDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            this.UnderlyingComplexEventPeriodDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodDate Get(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            return IsSetUnderlyingComplexEventPeriodDate();
                        }

                        public bool IsSetUnderlyingComplexEventPeriodDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventPeriodDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventPeriodTime UnderlyingComplexEventPeriodTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventPeriodTime val = new QuickFix.Fields.UnderlyingComplexEventPeriodTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            this.UnderlyingComplexEventPeriodTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodTime Get(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            return IsSetUnderlyingComplexEventPeriodTime();
                        }

                        public bool IsSetUnderlyingComplexEventPeriodTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventPeriodTime);
                        }

                    }
                    public class NoUnderlyingComplexEventAveragingObservationsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventAveragingObservationNumber, Tags.UnderlyingComplexEventAveragingWeight, 0 };

                        public NoUnderlyingComplexEventAveragingObservationsGroup()
                          : base(Tags.NoUnderlyingComplexEventAveragingObservations, Tags.UnderlyingComplexEventAveragingObservationNumber, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventAveragingObservationsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber UnderlyingComplexEventAveragingObservationNumber
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val = new QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            this.UnderlyingComplexEventAveragingObservationNumber = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber Get(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            return IsSetUnderlyingComplexEventAveragingObservationNumber();
                        }

                        public bool IsSetUnderlyingComplexEventAveragingObservationNumber()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventAveragingObservationNumber);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventAveragingWeight UnderlyingComplexEventAveragingWeight
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventAveragingWeight val = new QuickFix.Fields.UnderlyingComplexEventAveragingWeight();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            this.UnderlyingComplexEventAveragingWeight = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingWeight Get(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            return IsSetUnderlyingComplexEventAveragingWeight();
                        }

                        public bool IsSetUnderlyingComplexEventAveragingWeight()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventAveragingWeight);
                        }

                    }
                }
                public class NoUnderlyingComplexEventCreditEventSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventSource, 0 };

                    public NoUnderlyingComplexEventCreditEventSourcesGroup()
                      : base(Tags.NoUnderlyingComplexEventCreditEventSources, Tags.UnderlyingComplexEventCreditEventSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventCreditEventSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventSource UnderlyingComplexEventCreditEventSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventSource val = new QuickFix.Fields.UnderlyingComplexEventCreditEventSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        this.UnderlyingComplexEventCreditEventSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventSource Get(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventSource();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventSource);
                    }

                }
                public class NoUnderlyingComplexEventCreditEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventType, Tags.UnderlyingComplexEventCreditEventValue, Tags.UnderlyingComplexEventCreditEventCurrency, Tags.UnderlyingComplexEventCreditEventPeriod, Tags.UnderlyingComplexEventCreditEventUnit, Tags.UnderlyingComplexEventCreditEventDayType, Tags.UnderlyingComplexEventCreditEventRateSource, Tags.NoUnderlyingComplexEventCreditEventQualifiers, 0 };

                    public NoUnderlyingComplexEventCreditEventsGroup()
                      : base(Tags.NoUnderlyingComplexEventCreditEvents, Tags.UnderlyingComplexEventCreditEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventCreditEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventType UnderlyingComplexEventCreditEventType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventType val = new QuickFix.Fields.UnderlyingComplexEventCreditEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        this.UnderlyingComplexEventCreditEventType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventType Get(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventType();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventValue UnderlyingComplexEventCreditEventValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventValue val = new QuickFix.Fields.UnderlyingComplexEventCreditEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        this.UnderlyingComplexEventCreditEventValue = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventValue Get(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventValue();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventValue()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventValue);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency UnderlyingComplexEventCreditEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val = new QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        this.UnderlyingComplexEventCreditEventCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency Get(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventCurrency();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventCurrency()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventCurrency);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod UnderlyingComplexEventCreditEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val = new QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        this.UnderlyingComplexEventCreditEventPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod Get(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventPeriod();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventPeriod()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventPeriod);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventUnit UnderlyingComplexEventCreditEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val = new QuickFix.Fields.UnderlyingComplexEventCreditEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        this.UnderlyingComplexEventCreditEventUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventUnit Get(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventUnit();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventUnit()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventUnit);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventDayType UnderlyingComplexEventCreditEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val = new QuickFix.Fields.UnderlyingComplexEventCreditEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        this.UnderlyingComplexEventCreditEventDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventDayType Get(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventDayType();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventDayType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventDayType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource UnderlyingComplexEventCreditEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val = new QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        this.UnderlyingComplexEventCreditEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource Get(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventRateSource();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventRateSource);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers NoUnderlyingComplexEventCreditEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        this.NoUnderlyingComplexEventCreditEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        return IsSetNoUnderlyingComplexEventCreditEventQualifiers();
                    }

                    public bool IsSetNoUnderlyingComplexEventCreditEventQualifiers()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventCreditEventQualifiers);
                    }
                    public class NoUnderlyingComplexEventCreditEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventQualifier, 0 };

                        public NoUnderlyingComplexEventCreditEventQualifiersGroup()
                          : base(Tags.NoUnderlyingComplexEventCreditEventQualifiers, Tags.UnderlyingComplexEventCreditEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventCreditEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier UnderlyingComplexEventCreditEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val = new QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            this.UnderlyingComplexEventCreditEventQualifier = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier Get(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            return IsSetUnderlyingComplexEventCreditEventQualifier();
                        }

                        public bool IsSetUnderlyingComplexEventCreditEventQualifier()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventCreditEventQualifier);
                        }

                    }
                }
            }
            public class NoUnderlyingBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingBusinessCenter, 0 };

                public NoUnderlyingBusinessCentersGroup()
                  : base(Tags.NoUnderlyingBusinessCenters, Tags.UnderlyingBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingBusinessCenter UnderlyingBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingBusinessCenter val = new QuickFix.Fields.UnderlyingBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    this.UnderlyingBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingBusinessCenter Get(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    return IsSetUnderlyingBusinessCenter();
                }

                public bool IsSetUnderlyingBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingBusinessCenter);
                }

            }
            public class NoUnderlyingStreamsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingStreamType, Tags.UnderlyingStreamDesc, Tags.UnderlyingStreamPaySide, Tags.UnderlyingStreamReceiveSide, Tags.UnderlyingStreamNotional, Tags.UnderlyingStreamCurrency, Tags.UnderlyingStreamEffectiveDateUnadjusted, Tags.UnderlyingStreamEffectiveDateBusinessDayConvention, Tags.NoUnderlyingStreamEffectiveDateBusinessCenters, Tags.UnderlyingStreamEffectiveDateRelativeTo, Tags.UnderlyingStreamEffectiveDateOffsetPeriod, Tags.UnderlyingStreamEffectiveDateOffsetUnit, Tags.UnderlyingStreamEffectiveDateOffsetDayType, Tags.UnderlyingStreamEffectiveDateAdjusted, Tags.UnderlyingStreamTerminationDateUnadjusted, Tags.UnderlyingStreamTerminationDateBusinessDayConvention, Tags.NoUnderlyingStreamTerminationDateBusinessCenters, Tags.UnderlyingStreamTerminationDateRelativeTo, Tags.UnderlyingStreamTerminationDateOffsetPeriod, Tags.UnderlyingStreamTerminationDateOffsetUnit, Tags.UnderlyingStreamTerminationDateOffsetDayType, Tags.UnderlyingStreamTerminationDateAdjusted, Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention, Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted, Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention, Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateAdjusted, Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted, Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted, Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted, Tags.UnderlyingStreamCalculationFrequencyPeriod, Tags.UnderlyingStreamCalculationFrequencyUnit, Tags.UnderlyingStreamCalculationRollConvention, Tags.UnderlyingStreamCalculationPeriodDatesXID, Tags.UnderlyingStreamCalculationPeriodDatesXIDRef, Tags.NoUnderlyingStreamCalculationPeriodDates, Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod, Tags.UnderlyingStreamCalculationCorrectionPeriod, Tags.UnderlyingStreamCalculationCorrectionUnit, Tags.UnderlyingPaymentStreamType, Tags.UnderlyingPaymentStreamMarketRate, Tags.UnderlyingPaymentStreamDelayIndicator, Tags.UnderlyingPaymentStreamSettlCurrency, Tags.UnderlyingPaymentStreamDayCount, Tags.UnderlyingPaymentStreamAccrualDays, Tags.UnderlyingPaymentStreamDiscountType, Tags.UnderlyingPaymentStreamDiscountRate, Tags.UnderlyingPaymentStreamDiscountRateDayCount, Tags.UnderlyingPaymentStreamCompoundingMethod, Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters, Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod, Tags.UnderlyingPaymentStreamPaymentFrequencyUnit, Tags.UnderlyingPaymentStreamPaymentRollConvention, Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted, Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted, Tags.UnderlyingPaymentStreamPaymentDateRelativeTo, Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod, Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit, Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType, Tags.NoUnderlyingPaymentStreamPaymentDates, Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator, Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted, Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType, Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted, Tags.UnderlyingPaymentStreamResetDateRelativeTo, Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters, Tags.UnderlyingPaymentStreamResetFrequencyPeriod, Tags.UnderlyingPaymentStreamResetFrequencyUnit, Tags.UnderlyingPaymentStreamResetWeeklyRollConvention, Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo, Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType, Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted, Tags.UnderlyingPaymentStreamFixingDateRelativeTo, Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod, Tags.UnderlyingPaymentStreamFixingDateOffsetUnit, Tags.UnderlyingPaymentStreamFixingDateOffsetDayType, Tags.UnderlyingPaymentStreamFixingDateAdjusted, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType, Tags.NoUnderlyingPaymentStreamFixingDates, Tags.UnderlyingPaymentStreamRate, Tags.UnderlyingPaymentStreamFixedAmount, Tags.UnderlyingPaymentStreamRateOrAmountCurrency, Tags.UnderlyingPaymentStreamFutureValueNotional, Tags.UnderlyingPaymentStreamFutureValueDateAdjusted, Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure, Tags.UnderlyingPaymentStreamTotalFixedAmount, Tags.UnderlyingPaymentStreamWorldScaleRate, Tags.UnderlyingPaymentStreamContractPrice, Tags.UnderlyingPaymentStreamContractPriceCurrency, Tags.UnderlyingPaymentStreamRateIndex, Tags.UnderlyingPaymentStreamRateIndexSource, Tags.UnderlyingPaymentStreamRateIndexCurveUnit, Tags.UnderlyingPaymentStreamRateIndexCurvePeriod, Tags.UnderlyingPaymentStreamRateMultiplier, Tags.UnderlyingPaymentStreamRateSpread, Tags.UnderlyingPaymentStreamRateSpreadPositionType, Tags.UnderlyingPaymentStreamRateTreatment, Tags.UnderlyingPaymentStreamCapRate, Tags.UnderlyingPaymentStreamCapRateBuySide, Tags.UnderlyingPaymentStreamCapRateSellSide, Tags.UnderlyingPaymentStreamFloorRate, Tags.UnderlyingPaymentStreamFloorRateBuySide, Tags.UnderlyingPaymentStreamFloorRateSellSide, Tags.UnderlyingPaymentStreamInitialRate, Tags.UnderlyingPaymentStreamFinalRateRoundingDirection, Tags.UnderlyingPaymentStreamFinalRatePrecision, Tags.UnderlyingPaymentStreamAveragingMethod, Tags.UnderlyingPaymentStreamNegativeRateTreatment, Tags.UnderlyingPaymentStreamInflationLagPeriod, Tags.UnderlyingPaymentStreamInflationLagUnit, Tags.UnderlyingPaymentStreamInflationLagDayType, Tags.UnderlyingPaymentStreamInflationInterpolationMethod, Tags.UnderlyingPaymentStreamInflationIndexSource, Tags.UnderlyingPaymentStreamInflationPublicationSource, Tags.UnderlyingPaymentStreamInflationInitialIndexLevel, Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable, Tags.UnderlyingPaymentStreamFRADiscounting, Tags.UnderlyingPaymentStreamRateIndex2CurveUnit, Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod, Tags.UnderlyingPaymentStreamRateIndexLocation, Tags.UnderlyingPaymentStreamRateIndexLevel, Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure, Tags.UnderlyingPaymentStreamSettlLevel, Tags.UnderlyingPaymentStreamReferenceLevel, Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure, Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator, Tags.UnderlyingPaymentStreamRateSpreadCurrency, Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure, Tags.UnderlyingPaymentStreamRateConversionFactor, Tags.UnderlyingPaymentStreamRateSpreadType, Tags.UnderlyingPaymentStreamLastResetRate, Tags.UnderlyingPaymentStreamFinalRate, Tags.UnderlyingPaymentStreamCalculationLagPeriod, Tags.UnderlyingPaymentStreamCalculationLagUnit, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit, Tags.UnderlyingPaymentStreamPricingDayType, Tags.UnderlyingPaymentStreamPricingDayDistribution, Tags.UnderlyingPaymentStreamPricingDayCount, Tags.UnderlyingPaymentStreamPricingBusinessCalendar, Tags.UnderlyingPaymentStreamPricingBusinessDayConvention, Tags.NoUnderlyingPaymentStreamPricingBusinessCenters, Tags.NoUnderlyingPaymentStreamPricingDays, Tags.NoUnderlyingPaymentStreamPricingDates, Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted, Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType, Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted, Tags.UnderlyingPaymentStreamUnderlierRefID, Tags.UnderlyingPaymentStreamFormulaCurrency, Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod, Tags.UnderlyingPaymentStreamFormulaReferenceAmount, Tags.NoUnderlyingPaymentStreamFormulas, Tags.UnderlyingPaymentStreamFormulaImageLength, Tags.UnderlyingPaymentStreamFormulaImage, Tags.UnderlyingDividendReinvestmentIndicator, Tags.UnderlyingDividendEntitlementEvent, Tags.UnderlyingDividendAmountType, Tags.UnderlyingDividendUnderlierRefID, Tags.NoUnderlyingDividendPeriods, Tags.UnderlyingExtraordinaryDividendPartySide, Tags.UnderlyingExtraordinaryDividendAmountType, Tags.UnderlyingExtraordinaryDividendCurrency, Tags.UnderlyingExtraordinaryDividendDeterminationMethod, Tags.UnderlyingDividendFXTriggerDateRelativeTo, Tags.UnderlyingDividendFXTriggerDateOffsetPeriod, Tags.UnderlyingDividendFXTriggerDateOffsetUnit, Tags.UnderlyingDividendFXTriggerDateOffsetDayType, Tags.UnderlyingDividendFXTriggerDateUnadjusted, Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention, Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters, Tags.UnderlyingDividendFXTriggerDateAdjusted, Tags.UnderlyingDividendFloatingRateIndex, Tags.UnderlyingDividendFloatingRateIndexCurvePeriod, Tags.UnderlyingDividendFloatingRateIndexCurveUnit, Tags.UnderlyingDividendFloatingRateMultiplier, Tags.UnderlyingDividendFloatingRateSpread, Tags.UnderlyingDividendFloatingRateSpreadPositionType, Tags.UnderlyingDividendFloatingRateTreatment, Tags.UnderlyingDividendCapRate, Tags.UnderlyingDividendCapRateBuySide, Tags.UnderlyingDividendCapRateSellSide, Tags.UnderlyingDividendFloorRate, Tags.UnderlyingDividendFloorRateBuySide, Tags.UnderlyingDividendFloorRateSellSide, Tags.UnderlyingDividendInitialRate, Tags.UnderlyingDividendFinalRateRoundingDirection, Tags.UnderlyingDividendFinalRatePrecision, Tags.UnderlyingDividendAveragingMethod, Tags.UnderlyingDividendNegativeRateTreatment, Tags.UnderlyingDividendAccrualFixedRate, Tags.UnderlyingDividendAccrualPaymentDateRelativeTo, Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod, Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit, Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType, Tags.UnderlyingDividendAccrualPaymentDateUnadjusted, Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention, Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters, Tags.UnderlyingDividendAccrualPaymentDateAdjusted, Tags.UnderlyingDividendCompoundingMethod, Tags.UnderlyingDividendNumOfIndexUnits, Tags.UnderlyingDividendCashPercentage, Tags.UnderlyingDividendCashEquivalentPercentage, Tags.UnderlyingNonCashDividendTreatment, Tags.UnderlyingDividendComposition, Tags.UnderlyingSpecialDividendsIndicator, Tags.UnderlyingMaterialDividendsIndicator, Tags.UnderlyingOptionsExchangeDividendsIndicator, Tags.UnderlyingAdditionalDividendsIndicator, Tags.UnderlyingAllDividendsIndicator, Tags.UnderlyingReturnRateNotionalReset, Tags.NoUnderlyingReturnRates, Tags.UnderlyingPaymentStreamLinkInitialLevel, Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator, Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator, Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays, Tags.UnderlyingPaymentStreamLinkStrikePrice, Tags.UnderlyingPaymentStreamLinkStrikePriceType, Tags.UnderlyingPaymentStreamLinkMaximumBoundary, Tags.UnderlyingPaymentStreamLinkMinimumBoundary, Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries, Tags.UnderlyingPaymentStreamVarianceUnadjustedCap, Tags.UnderlyingPaymentStreamRealizedVarianceMethod, Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator, Tags.UnderlyingPaymentStreamNearestExchangeContractRefID, Tags.UnderlyingPaymentStreamVegaNotionalAmount, Tags.UnderlyingPaymentStreamRateIndexID, Tags.UnderlyingPaymentStreamRateIndexIDSource, Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention, Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType, Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource, Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage, Tags.NoUnderlyingNonDeliverableFixingDates, Tags.NoUnderlyingSettlRateFallbacks, Tags.UnderlyingPaymentStreamFlatRateIndicator, Tags.UnderlyingPaymentStreamFlatRateAmount, Tags.UnderlyingPaymentStreamFlatRateCurrency, Tags.UnderlyingPaymentStreamMaximumPaymentAmount, Tags.UnderlyingPaymentStreamMaximumPaymentCurrency, Tags.UnderlyingPaymentStreamMaximumTransactionAmount, Tags.UnderlyingPaymentStreamMaximumTransactionCurrency, Tags.UnderlyingPaymentStreamCashSettlIndicator, Tags.UnderlyingPaymentStreamCompoundingXIDRef, Tags.UnderlyingPaymentStreamCompoundingSpread, Tags.UnderlyingPaymentStreamInterpolationMethod, Tags.UnderlyingPaymentStreamInterpolationPeriod, Tags.UnderlyingPaymentStreamCompoundingFixedRate, Tags.UnderlyingPaymentStreamCompoundingRateIndex, Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod, Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit, Tags.UnderlyingPaymentStreamCompoundingRateMultiplier, Tags.UnderlyingPaymentStreamCompoundingRateSpread, Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType, Tags.UnderlyingPaymentStreamCompoundingRateTreatment, Tags.UnderlyingPaymentStreamCompoundingCapRate, Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide, Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide, Tags.UnderlyingPaymentStreamCompoundingFloorRate, Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide, Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide, Tags.UnderlyingPaymentStreamCompoundingInitialRate, Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection, Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision, Tags.UnderlyingPaymentStreamCompoundingAveragingMethod, Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment, Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention, Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters, Tags.NoUnderlyingPaymentStreamCompoundingDates, Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingPeriodSkip, Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted, Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted, Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted, Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted, Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod, Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit, Tags.UnderlyingPaymentStreamCompoundingRollConvention, Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted, Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted, Tags.UnderlyingPaymentStreamOtherDayCount, Tags.NoUnderlyingPaymentSchedules, Tags.NoUnderlyingPaymentStubs, Tags.UnderlyingStreamText, Tags.EncodedUnderlyingStreamTextLen, Tags.EncodedUnderlyingStreamText, Tags.UnderlyingStreamXID, Tags.UnderlyingStreamNotionalXIDRef, Tags.UnderlyingStreamNotionalFrequencyPeriod, Tags.UnderlyingStreamNotionalFrequencyUnit, Tags.UnderlyingStreamNotionalCommodityFrequency, Tags.UnderlyingStreamNotionalUnitOfMeasure, Tags.UnderlyingStreamTotalNotional, Tags.UnderlyingStreamTotalNotionalUnitOfMeasure, Tags.UnderlyingStreamCommodityBase, Tags.UnderlyingStreamCommodityType, Tags.UnderlyingStreamCommoditySecurityID, Tags.UnderlyingStreamCommoditySecurityIDSource, Tags.NoUnderlyingStreamCommodityAltIDs, Tags.UnderlyingStreamCommodityDesc, Tags.EncodedUnderlyingStreamCommodityDescLen, Tags.EncodedUnderlyingStreamCommodityDesc, Tags.NoUnderlyingStreamAssetAttributes, Tags.UnderlyingStreamCommodityUnitOfMeasure, Tags.UnderlyingStreamCommodityCurrency, Tags.UnderlyingStreamCommodityExchange, Tags.UnderlyingStreamCommodityRateSource, Tags.UnderlyingStreamCommodityRateReferencePage, Tags.UnderlyingStreamCommodityRateReferencePageHeading, Tags.UnderlyingStreamDataProvider, Tags.NoUnderlyingStreamCommodityDataSources, Tags.UnderlyingStreamCommodityPricingType, Tags.UnderlyingStreamCommodityNearbySettlDayPeriod, Tags.UnderlyingStreamCommodityNearbySettlDayUnit, Tags.UnderlyingStreamCommoditySettlDateUnadjusted, Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention, Tags.NoUnderlyingStreamCommoditySettlBusinessCenters, Tags.UnderlyingStreamCommoditySettlDateAdjusted, Tags.UnderlyingStreamCommoditySettlMonth, Tags.UnderlyingStreamCommoditySettlDateRollPeriod, Tags.UnderlyingStreamCommoditySettlDateRollUnit, Tags.UnderlyingStreamCommoditySettlDayType, Tags.NoUnderlyingStreamCommoditySettlPeriods, Tags.UnderlyingStreamCommodityXID, Tags.UnderlyingStreamCommodityXIDRef, Tags.UnderlyingStreamCommodityDeliveryPricingRegion, Tags.UnderlyingDeliveryStreamType, Tags.NoUnderlyingDeliveryStreamCommoditySources, Tags.UnderlyingDeliveryStreamPipeline, Tags.UnderlyingDeliveryStreamEntryPoint, Tags.UnderlyingDeliveryStreamWithdrawalPoint, Tags.UnderlyingDeliveryStreamDeliveryPoint, Tags.UnderlyingDeliveryStreamDeliveryRestriction, Tags.UnderlyingDeliveryStreamDeliveryContingency, Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide, Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator, Tags.UnderlyingDeliveryStreamRiskApportionment, Tags.UnderlyingDeliveryStreamRiskApportionmentSource, Tags.NoUnderlyingDeliveryStreamCycles, Tags.UnderlyingDeliveryStreamTitleTransferLocation, Tags.UnderlyingDeliveryStreamTitleTransferCondition, Tags.UnderlyingDeliveryStreamImporterOfRecord, Tags.UnderlyingDeliveryStreamNegativeTolerance, Tags.UnderlyingDeliveryStreamPositiveTolerance, Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure, Tags.UnderlyingDeliveryStreamToleranceType, Tags.UnderlyingDeliveryStreamToleranceOptionSide, Tags.UnderlyingDeliveryStreamTotalPositiveTolerance, Tags.UnderlyingDeliveryStreamTotalNegativeTolerance, Tags.UnderlyingDeliveryStreamNotionalConversionFactor, Tags.UnderlyingDeliveryStreamTransportEquipment, Tags.UnderlyingDeliveryStreamElectingPartySide, Tags.UnderlyingDeliveryStreamDeliveryPointSource, Tags.UnderlyingDeliveryStreamDeliveryPointDesc, Tags.UnderlyingDeliveryStreamRouteOrCharter, Tags.NoUnderlyingDeliverySchedules, Tags.UnderlyingStreamVersion, Tags.UnderlyingStreamVersionEffectiveDate, Tags.UnderlyingStreamNotionalDeterminationMethod, Tags.UnderlyingStreamNotionalAdjustments, 0 };

                public NoUnderlyingStreamsGroup()
                  : base(Tags.NoUnderlyingStreams, Tags.UnderlyingStreamType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingStreamsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingStreamType UnderlyingStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamType val = new QuickFix.Fields.UnderlyingStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamType val)
                {
                    this.UnderlyingStreamType = val;
                }

                public QuickFix.Fields.UnderlyingStreamType Get(QuickFix.Fields.UnderlyingStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamType val)
                {
                    return IsSetUnderlyingStreamType();
                }

                public bool IsSetUnderlyingStreamType()
                {
                    return IsSetField(Tags.UnderlyingStreamType);
                }
                public QuickFix.Fields.UnderlyingStreamDesc UnderlyingStreamDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamDesc val = new QuickFix.Fields.UnderlyingStreamDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    this.UnderlyingStreamDesc = val;
                }

                public QuickFix.Fields.UnderlyingStreamDesc Get(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    return IsSetUnderlyingStreamDesc();
                }

                public bool IsSetUnderlyingStreamDesc()
                {
                    return IsSetField(Tags.UnderlyingStreamDesc);
                }
                public QuickFix.Fields.UnderlyingStreamPaySide UnderlyingStreamPaySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamPaySide val = new QuickFix.Fields.UnderlyingStreamPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    this.UnderlyingStreamPaySide = val;
                }

                public QuickFix.Fields.UnderlyingStreamPaySide Get(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    return IsSetUnderlyingStreamPaySide();
                }

                public bool IsSetUnderlyingStreamPaySide()
                {
                    return IsSetField(Tags.UnderlyingStreamPaySide);
                }
                public QuickFix.Fields.UnderlyingStreamReceiveSide UnderlyingStreamReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamReceiveSide val = new QuickFix.Fields.UnderlyingStreamReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    this.UnderlyingStreamReceiveSide = val;
                }

                public QuickFix.Fields.UnderlyingStreamReceiveSide Get(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    return IsSetUnderlyingStreamReceiveSide();
                }

                public bool IsSetUnderlyingStreamReceiveSide()
                {
                    return IsSetField(Tags.UnderlyingStreamReceiveSide);
                }
                public QuickFix.Fields.UnderlyingStreamNotional UnderlyingStreamNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotional val = new QuickFix.Fields.UnderlyingStreamNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    this.UnderlyingStreamNotional = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotional Get(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    return IsSetUnderlyingStreamNotional();
                }

                public bool IsSetUnderlyingStreamNotional()
                {
                    return IsSetField(Tags.UnderlyingStreamNotional);
                }
                public QuickFix.Fields.UnderlyingStreamCurrency UnderlyingStreamCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCurrency val = new QuickFix.Fields.UnderlyingStreamCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    this.UnderlyingStreamCurrency = val;
                }

                public QuickFix.Fields.UnderlyingStreamCurrency Get(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    return IsSetUnderlyingStreamCurrency();
                }

                public bool IsSetUnderlyingStreamCurrency()
                {
                    return IsSetField(Tags.UnderlyingStreamCurrency);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted UnderlyingStreamEffectiveDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    this.UnderlyingStreamEffectiveDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamEffectiveDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamEffectiveDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention UnderlyingStreamEffectiveDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamEffectiveDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamEffectiveDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamEffectiveDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters NoUnderlyingStreamEffectiveDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamEffectiveDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamEffectiveDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamEffectiveDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo UnderlyingStreamEffectiveDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val = new QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    this.UnderlyingStreamEffectiveDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo Get(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    return IsSetUnderlyingStreamEffectiveDateRelativeTo();
                }

                public bool IsSetUnderlyingStreamEffectiveDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod UnderlyingStreamEffectiveDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetPeriod();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit UnderlyingStreamEffectiveDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetUnit();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType UnderlyingStreamEffectiveDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetDayType();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted UnderlyingStreamEffectiveDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val = new QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    this.UnderlyingStreamEffectiveDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted Get(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    return IsSetUnderlyingStreamEffectiveDateAdjusted();
                }

                public bool IsSetUnderlyingStreamEffectiveDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted UnderlyingStreamTerminationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    this.UnderlyingStreamTerminationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamTerminationDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamTerminationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention UnderlyingStreamTerminationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamTerminationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamTerminationDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamTerminationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters NoUnderlyingStreamTerminationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamTerminationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamTerminationDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamTerminationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamTerminationDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo UnderlyingStreamTerminationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val = new QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    this.UnderlyingStreamTerminationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo Get(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    return IsSetUnderlyingStreamTerminationDateRelativeTo();
                }

                public bool IsSetUnderlyingStreamTerminationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod UnderlyingStreamTerminationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    this.UnderlyingStreamTerminationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit UnderlyingStreamTerminationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    this.UnderlyingStreamTerminationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetUnit();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType UnderlyingStreamTerminationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    this.UnderlyingStreamTerminationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetDayType();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted UnderlyingStreamTerminationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val = new QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    this.UnderlyingStreamTerminationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted Get(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    return IsSetUnderlyingStreamTerminationDateAdjusted();
                }

                public bool IsSetUnderlyingStreamTerminationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention UnderlyingStreamCalculationPeriodBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    this.UnderlyingStreamCalculationPeriodBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters NoUnderlyingStreamCalculationPeriodBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    this.NoUnderlyingStreamCalculationPeriodBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamCalculationPeriodBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamCalculationPeriodBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted UnderlyingStreamFirstPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention UnderlyingStreamFirstPeriodStartDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters NoUnderlyingStreamFirstPeriodStartDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamFirstPeriodStartDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamFirstPeriodStartDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted UnderlyingStreamFirstPeriodStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateAdjusted();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted UnderlyingStreamFirstRegularPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstRegularPeriodStartDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstRegularPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted UnderlyingStreamLastRegularPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    this.UnderlyingStreamLastRegularPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamLastRegularPeriodEndDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamLastRegularPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod UnderlyingStreamCalculationFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    this.UnderlyingStreamCalculationFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationFrequencyPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit UnderlyingStreamCalculationFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    this.UnderlyingStreamCalculationFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    return IsSetUnderlyingStreamCalculationFrequencyUnit();
                }

                public bool IsSetUnderlyingStreamCalculationFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationRollConvention UnderlyingStreamCalculationRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationRollConvention val = new QuickFix.Fields.UnderlyingStreamCalculationRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    this.UnderlyingStreamCalculationRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationRollConvention Get(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    return IsSetUnderlyingStreamCalculationRollConvention();
                }

                public bool IsSetUnderlyingStreamCalculationRollConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationRollConvention);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID UnderlyingStreamCalculationPeriodDatesXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    this.UnderlyingStreamCalculationPeriodDatesXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodDatesXID();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodDatesXID()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodDatesXID);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef UnderlyingStreamCalculationPeriodDatesXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    this.UnderlyingStreamCalculationPeriodDatesXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodDatesXIDRef();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodDatesXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodDatesXIDRef);
                }
                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates NoUnderlyingStreamCalculationPeriodDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val = new QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    this.NoUnderlyingStreamCalculationPeriodDates = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates Get(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    return IsSetNoUnderlyingStreamCalculationPeriodDates();
                }

                public bool IsSetNoUnderlyingStreamCalculationPeriodDates()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCalculationPeriodDates);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod UnderlyingStreamCalculationBalanceOfFirstPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    this.UnderlyingStreamCalculationBalanceOfFirstPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationBalanceOfFirstPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationBalanceOfFirstPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod UnderlyingStreamCalculationCorrectionPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    this.UnderlyingStreamCalculationCorrectionPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationCorrectionPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationCorrectionPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationCorrectionPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit UnderlyingStreamCalculationCorrectionUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val = new QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    this.UnderlyingStreamCalculationCorrectionUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit Get(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    return IsSetUnderlyingStreamCalculationCorrectionUnit();
                }

                public bool IsSetUnderlyingStreamCalculationCorrectionUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationCorrectionUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamType UnderlyingPaymentStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamType val = new QuickFix.Fields.UnderlyingPaymentStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    this.UnderlyingPaymentStreamType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamType Get(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    return IsSetUnderlyingPaymentStreamType();
                }

                public bool IsSetUnderlyingPaymentStreamType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMarketRate UnderlyingPaymentStreamMarketRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMarketRate val = new QuickFix.Fields.UnderlyingPaymentStreamMarketRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    this.UnderlyingPaymentStreamMarketRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMarketRate Get(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    return IsSetUnderlyingPaymentStreamMarketRate();
                }

                public bool IsSetUnderlyingPaymentStreamMarketRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMarketRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator UnderlyingPaymentStreamDelayIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    this.UnderlyingPaymentStreamDelayIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamDelayIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamDelayIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDelayIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency UnderlyingPaymentStreamSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    this.UnderlyingPaymentStreamSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamSettlCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDayCount UnderlyingPaymentStreamDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    this.UnderlyingPaymentStreamDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamAccrualDays UnderlyingPaymentStreamAccrualDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val = new QuickFix.Fields.UnderlyingPaymentStreamAccrualDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    this.UnderlyingPaymentStreamAccrualDays = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamAccrualDays Get(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    return IsSetUnderlyingPaymentStreamAccrualDays();
                }

                public bool IsSetUnderlyingPaymentStreamAccrualDays()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamAccrualDays);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountType UnderlyingPaymentStreamDiscountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountType val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    this.UnderlyingPaymentStreamDiscountType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountType Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountType();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRate UnderlyingPaymentStreamDiscountRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    this.UnderlyingPaymentStreamDiscountRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRate Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountRate();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount UnderlyingPaymentStreamDiscountRateDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    this.UnderlyingPaymentStreamDiscountRateDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountRateDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountRateDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountRateDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod UnderlyingPaymentStreamCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    this.UnderlyingPaymentStreamCompoundingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator UnderlyingPaymentStreamInitialPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamInitialPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamInitialPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator UnderlyingPaymentStreamInterimPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamInterimPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamInterimPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator UnderlyingPaymentStreamFinalPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention UnderlyingPaymentStreamPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters NoUnderlyingPaymentStreamPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod UnderlyingPaymentStreamPaymentFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamPaymentFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit UnderlyingPaymentStreamPaymentFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamPaymentFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention UnderlyingPaymentStreamPaymentRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    this.UnderlyingPaymentStreamPaymentRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted UnderlyingPaymentStreamFirstPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFirstPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamLastRegularPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamLastRegularPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo UnderlyingPaymentStreamPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod UnderlyingPaymentStreamPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit UnderlyingPaymentStreamPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType UnderlyingPaymentStreamPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates NoUnderlyingPaymentStreamPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    this.NoUnderlyingPaymentStreamPaymentDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamPaymentDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamPaymentDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPaymentDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    this.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted UnderlyingPaymentStreamFinalPricePaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo UnderlyingPaymentStreamResetDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamResetDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamResetDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamResetDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention UnderlyingPaymentStreamResetDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamResetDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamResetDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamResetDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters NoUnderlyingPaymentStreamResetDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamResetDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamResetDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamResetDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod UnderlyingPaymentStreamResetFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamResetFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamResetFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamResetFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit UnderlyingPaymentStreamResetFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamResetFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamResetFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamResetFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention UnderlyingPaymentStreamResetWeeklyRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    this.UnderlyingPaymentStreamResetWeeklyRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamResetWeeklyRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamResetWeeklyRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetWeeklyRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo UnderlyingPaymentStreamInitialFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamInitialFixingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamInitialFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod UnderlyingPaymentStreamInitialFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit UnderlyingPaymentStreamInitialFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType UnderlyingPaymentStreamInitialFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted UnderlyingPaymentStreamInitialFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo UnderlyingPaymentStreamFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention UnderlyingPaymentStreamFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters NoUnderlyingPaymentStreamFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamFixingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod UnderlyingPaymentStreamFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit UnderlyingPaymentStreamFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType UnderlyingPaymentStreamFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted UnderlyingPaymentStreamFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFixingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod UnderlyingPaymentStreamRateCutoffDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit UnderlyingPaymentStreamRateCutoffDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType UnderlyingPaymentStreamRateCutoffDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates NoUnderlyingPaymentStreamFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    this.NoUnderlyingPaymentStreamFixingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamFixingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamFixingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFixingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRate UnderlyingPaymentStreamRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRate val = new QuickFix.Fields.UnderlyingPaymentStreamRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    this.UnderlyingPaymentStreamRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRate Get(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    return IsSetUnderlyingPaymentStreamRate();
                }

                public bool IsSetUnderlyingPaymentStreamRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmount UnderlyingPaymentStreamFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    this.UnderlyingPaymentStreamFixedAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFixedAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFixedAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixedAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency UnderlyingPaymentStreamRateOrAmountCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    this.UnderlyingPaymentStreamRateOrAmountCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamRateOrAmountCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamRateOrAmountCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateOrAmountCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional UnderlyingPaymentStreamFutureValueNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val = new QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    this.UnderlyingPaymentStreamFutureValueNotional = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional Get(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    return IsSetUnderlyingPaymentStreamFutureValueNotional();
                }

                public bool IsSetUnderlyingPaymentStreamFutureValueNotional()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFutureValueNotional);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted UnderlyingPaymentStreamFutureValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFutureValueDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFutureValueDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFutureValueDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFutureValueDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure UnderlyingPaymentStreamFixedAmountUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamFixedAmountUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamFixedAmountUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamFixedAmountUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount UnderlyingPaymentStreamTotalFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    this.UnderlyingPaymentStreamTotalFixedAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    return IsSetUnderlyingPaymentStreamTotalFixedAmount();
                }

                public bool IsSetUnderlyingPaymentStreamTotalFixedAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamTotalFixedAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate UnderlyingPaymentStreamWorldScaleRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val = new QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    this.UnderlyingPaymentStreamWorldScaleRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate Get(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    return IsSetUnderlyingPaymentStreamWorldScaleRate();
                }

                public bool IsSetUnderlyingPaymentStreamWorldScaleRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamWorldScaleRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamContractPrice UnderlyingPaymentStreamContractPrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamContractPrice val = new QuickFix.Fields.UnderlyingPaymentStreamContractPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    this.UnderlyingPaymentStreamContractPrice = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamContractPrice Get(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    return IsSetUnderlyingPaymentStreamContractPrice();
                }

                public bool IsSetUnderlyingPaymentStreamContractPrice()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamContractPrice);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency UnderlyingPaymentStreamContractPriceCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    this.UnderlyingPaymentStreamContractPriceCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamContractPriceCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamContractPriceCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamContractPriceCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex UnderlyingPaymentStreamRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    this.UnderlyingPaymentStreamRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource UnderlyingPaymentStreamRateIndexSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    this.UnderlyingPaymentStreamRateIndexSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexSource();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit UnderlyingPaymentStreamRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    this.UnderlyingPaymentStreamRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod UnderlyingPaymentStreamRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    this.UnderlyingPaymentStreamRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier UnderlyingPaymentStreamRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    this.UnderlyingPaymentStreamRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    return IsSetUnderlyingPaymentStreamRateMultiplier();
                }

                public bool IsSetUnderlyingPaymentStreamRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpread UnderlyingPaymentStreamRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpread val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    this.UnderlyingPaymentStreamRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpread Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpread();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType UnderlyingPaymentStreamRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    this.UnderlyingPaymentStreamRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadPositionType();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateTreatment UnderlyingPaymentStreamRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    this.UnderlyingPaymentStreamRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRate UnderlyingPaymentStreamCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRate val = new QuickFix.Fields.UnderlyingPaymentStreamCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    this.UnderlyingPaymentStreamCapRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRate Get(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    return IsSetUnderlyingPaymentStreamCapRate();
                }

                public bool IsSetUnderlyingPaymentStreamCapRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide UnderlyingPaymentStreamCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCapRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide UnderlyingPaymentStreamCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCapRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRate UnderlyingPaymentStreamFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRate val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    this.UnderlyingPaymentStreamFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRate Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRate();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide UnderlyingPaymentStreamFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    this.UnderlyingPaymentStreamFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide UnderlyingPaymentStreamFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    this.UnderlyingPaymentStreamFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialRate UnderlyingPaymentStreamInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialRate val = new QuickFix.Fields.UnderlyingPaymentStreamInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    this.UnderlyingPaymentStreamInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialRate Get(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    return IsSetUnderlyingPaymentStreamInitialRate();
                }

                public bool IsSetUnderlyingPaymentStreamInitialRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection UnderlyingPaymentStreamFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    this.UnderlyingPaymentStreamFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision UnderlyingPaymentStreamFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    this.UnderlyingPaymentStreamFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRatePrecision();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod UnderlyingPaymentStreamAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    this.UnderlyingPaymentStreamAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamAveragingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment UnderlyingPaymentStreamNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    this.UnderlyingPaymentStreamNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamNegativeRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod UnderlyingPaymentStreamInflationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    this.UnderlyingPaymentStreamInflationLagPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit UnderlyingPaymentStreamInflationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    this.UnderlyingPaymentStreamInflationLagUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagUnit();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType UnderlyingPaymentStreamInflationLagDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    this.UnderlyingPaymentStreamInflationLagDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagDayType();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod UnderlyingPaymentStreamInflationInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    this.UnderlyingPaymentStreamInflationInterpolationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamInflationInterpolationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamInflationInterpolationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationInterpolationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource UnderlyingPaymentStreamInflationIndexSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val = new QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    this.UnderlyingPaymentStreamInflationIndexSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource Get(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    return IsSetUnderlyingPaymentStreamInflationIndexSource();
                }

                public bool IsSetUnderlyingPaymentStreamInflationIndexSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationIndexSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource UnderlyingPaymentStreamInflationPublicationSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val = new QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    this.UnderlyingPaymentStreamInflationPublicationSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource Get(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    return IsSetUnderlyingPaymentStreamInflationPublicationSource();
                }

                public bool IsSetUnderlyingPaymentStreamInflationPublicationSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationPublicationSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel UnderlyingPaymentStreamInflationInitialIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val = new QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    this.UnderlyingPaymentStreamInflationInitialIndexLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel Get(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    return IsSetUnderlyingPaymentStreamInflationInitialIndexLevel();
                }

                public bool IsSetUnderlyingPaymentStreamInflationInitialIndexLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationInitialIndexLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable UnderlyingPaymentStreamInflationFallbackBondApplicable
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val = new QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    this.UnderlyingPaymentStreamInflationFallbackBondApplicable = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable Get(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    return IsSetUnderlyingPaymentStreamInflationFallbackBondApplicable();
                }

                public bool IsSetUnderlyingPaymentStreamInflationFallbackBondApplicable()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting UnderlyingPaymentStreamFRADiscounting
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val = new QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    this.UnderlyingPaymentStreamFRADiscounting = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting Get(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    return IsSetUnderlyingPaymentStreamFRADiscounting();
                }

                public bool IsSetUnderlyingPaymentStreamFRADiscounting()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFRADiscounting);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit UnderlyingPaymentStreamRateIndex2CurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    this.UnderlyingPaymentStreamRateIndex2CurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex2CurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex2CurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex2CurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod UnderlyingPaymentStreamRateIndex2CurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    this.UnderlyingPaymentStreamRateIndex2CurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex2CurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex2CurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation UnderlyingPaymentStreamRateIndexLocation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    this.UnderlyingPaymentStreamRateIndexLocation = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexLocation();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexLocation()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexLocation);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel UnderlyingPaymentStreamRateIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    this.UnderlyingPaymentStreamRateIndexLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexLevel();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure UnderlyingPaymentStreamRateIndexUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamRateIndexUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamSettlLevel UnderlyingPaymentStreamSettlLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val = new QuickFix.Fields.UnderlyingPaymentStreamSettlLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    this.UnderlyingPaymentStreamSettlLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamSettlLevel Get(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    return IsSetUnderlyingPaymentStreamSettlLevel();
                }

                public bool IsSetUnderlyingPaymentStreamSettlLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamSettlLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel UnderlyingPaymentStreamReferenceLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    this.UnderlyingPaymentStreamReferenceLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevel();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure UnderlyingPaymentStreamReferenceLevelUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevelUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevelUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    this.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency UnderlyingPaymentStreamRateSpreadCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    this.UnderlyingPaymentStreamRateSpreadCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure UnderlyingPaymentStreamRateSpreadUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamRateSpreadUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor UnderlyingPaymentStreamRateConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val = new QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    this.UnderlyingPaymentStreamRateConversionFactor = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor Get(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    return IsSetUnderlyingPaymentStreamRateConversionFactor();
                }

                public bool IsSetUnderlyingPaymentStreamRateConversionFactor()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateConversionFactor);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType UnderlyingPaymentStreamRateSpreadType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    this.UnderlyingPaymentStreamRateSpreadType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadType();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLastResetRate UnderlyingPaymentStreamLastResetRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val = new QuickFix.Fields.UnderlyingPaymentStreamLastResetRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    this.UnderlyingPaymentStreamLastResetRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLastResetRate Get(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    return IsSetUnderlyingPaymentStreamLastResetRate();
                }

                public bool IsSetUnderlyingPaymentStreamLastResetRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLastResetRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRate UnderlyingPaymentStreamFinalRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRate val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    this.UnderlyingPaymentStreamFinalRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRate Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRate();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod UnderlyingPaymentStreamCalculationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    this.UnderlyingPaymentStreamCalculationLagPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCalculationLagPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCalculationLagPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCalculationLagPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit UnderlyingPaymentStreamCalculationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    this.UnderlyingPaymentStreamCalculationLagUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCalculationLagUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCalculationLagUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCalculationLagUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod UnderlyingPaymentStreamFirstObservationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit UnderlyingPaymentStreamFirstObservationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayType UnderlyingPaymentStreamPricingDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    this.UnderlyingPaymentStreamPricingDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayType Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayType();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution UnderlyingPaymentStreamPricingDayDistribution
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    this.UnderlyingPaymentStreamPricingDayDistribution = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayDistribution();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayDistribution()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayDistribution);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount UnderlyingPaymentStreamPricingDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    this.UnderlyingPaymentStreamPricingDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar UnderlyingPaymentStreamPricingBusinessCalendar
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    this.UnderlyingPaymentStreamPricingBusinessCalendar = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    return IsSetUnderlyingPaymentStreamPricingBusinessCalendar();
                }

                public bool IsSetUnderlyingPaymentStreamPricingBusinessCalendar()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessCalendar);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention UnderlyingPaymentStreamPricingBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamPricingBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPricingBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPricingBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters NoUnderlyingPaymentStreamPricingBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamPricingBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays NoUnderlyingPaymentStreamPricingDays
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    this.NoUnderlyingPaymentStreamPricingDays = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingDays();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingDays()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingDays);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates NoUnderlyingPaymentStreamPricingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    this.NoUnderlyingPaymentStreamPricingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted UnderlyingPaymentStreamFirstObservationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo UnderlyingPaymentStreamFirstObservationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType UnderlyingPaymentStreamFirstObservationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted UnderlyingPaymentStreamFirstObservationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID UnderlyingPaymentStreamUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val = new QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    this.UnderlyingPaymentStreamUnderlierRefID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID Get(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    return IsSetUnderlyingPaymentStreamUnderlierRefID();
                }

                public bool IsSetUnderlyingPaymentStreamUnderlierRefID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamUnderlierRefID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency UnderlyingPaymentStreamFormulaCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    this.UnderlyingPaymentStreamFormulaCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    this.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaCurrencyDeterminationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaCurrencyDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount UnderlyingPaymentStreamFormulaReferenceAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    this.UnderlyingPaymentStreamFormulaReferenceAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaReferenceAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaReferenceAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaReferenceAmount);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFormulas NoUnderlyingPaymentStreamFormulas
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val = new QuickFix.Fields.NoUnderlyingPaymentStreamFormulas();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    this.NoUnderlyingPaymentStreamFormulas = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFormulas Get(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    return IsSetNoUnderlyingPaymentStreamFormulas();
                }

                public bool IsSetNoUnderlyingPaymentStreamFormulas()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFormulas);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength UnderlyingPaymentStreamFormulaImageLength
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    this.UnderlyingPaymentStreamFormulaImageLength = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaImageLength();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaImageLength()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaImageLength);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImage UnderlyingPaymentStreamFormulaImage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaImage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    this.UnderlyingPaymentStreamFormulaImage = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImage Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaImage();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaImage()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaImage);
                }
                public QuickFix.Fields.UnderlyingDividendReinvestmentIndicator UnderlyingDividendReinvestmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val = new QuickFix.Fields.UnderlyingDividendReinvestmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    this.UnderlyingDividendReinvestmentIndicator = val;
                }

                public QuickFix.Fields.UnderlyingDividendReinvestmentIndicator Get(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    return IsSetUnderlyingDividendReinvestmentIndicator();
                }

                public bool IsSetUnderlyingDividendReinvestmentIndicator()
                {
                    return IsSetField(Tags.UnderlyingDividendReinvestmentIndicator);
                }
                public QuickFix.Fields.UnderlyingDividendEntitlementEvent UnderlyingDividendEntitlementEvent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendEntitlementEvent val = new QuickFix.Fields.UnderlyingDividendEntitlementEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    this.UnderlyingDividendEntitlementEvent = val;
                }

                public QuickFix.Fields.UnderlyingDividendEntitlementEvent Get(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    return IsSetUnderlyingDividendEntitlementEvent();
                }

                public bool IsSetUnderlyingDividendEntitlementEvent()
                {
                    return IsSetField(Tags.UnderlyingDividendEntitlementEvent);
                }
                public QuickFix.Fields.UnderlyingDividendAmountType UnderlyingDividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAmountType val = new QuickFix.Fields.UnderlyingDividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    this.UnderlyingDividendAmountType = val;
                }

                public QuickFix.Fields.UnderlyingDividendAmountType Get(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    return IsSetUnderlyingDividendAmountType();
                }

                public bool IsSetUnderlyingDividendAmountType()
                {
                    return IsSetField(Tags.UnderlyingDividendAmountType);
                }
                public QuickFix.Fields.UnderlyingDividendUnderlierRefID UnderlyingDividendUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendUnderlierRefID val = new QuickFix.Fields.UnderlyingDividendUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    this.UnderlyingDividendUnderlierRefID = val;
                }

                public QuickFix.Fields.UnderlyingDividendUnderlierRefID Get(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    return IsSetUnderlyingDividendUnderlierRefID();
                }

                public bool IsSetUnderlyingDividendUnderlierRefID()
                {
                    return IsSetField(Tags.UnderlyingDividendUnderlierRefID);
                }
                public QuickFix.Fields.NoUnderlyingDividendPeriods NoUnderlyingDividendPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendPeriods val = new QuickFix.Fields.NoUnderlyingDividendPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    this.NoUnderlyingDividendPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendPeriods Get(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    return IsSetNoUnderlyingDividendPeriods();
                }

                public bool IsSetNoUnderlyingDividendPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingDividendPeriods);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide UnderlyingExtraordinaryDividendPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val = new QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    this.UnderlyingExtraordinaryDividendPartySide = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide Get(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    return IsSetUnderlyingExtraordinaryDividendPartySide();
                }

                public bool IsSetUnderlyingExtraordinaryDividendPartySide()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendPartySide);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType UnderlyingExtraordinaryDividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val = new QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    this.UnderlyingExtraordinaryDividendAmountType = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType Get(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    return IsSetUnderlyingExtraordinaryDividendAmountType();
                }

                public bool IsSetUnderlyingExtraordinaryDividendAmountType()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendAmountType);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency UnderlyingExtraordinaryDividendCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val = new QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    this.UnderlyingExtraordinaryDividendCurrency = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency Get(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    return IsSetUnderlyingExtraordinaryDividendCurrency();
                }

                public bool IsSetUnderlyingExtraordinaryDividendCurrency()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendCurrency);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod UnderlyingExtraordinaryDividendDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val = new QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    this.UnderlyingExtraordinaryDividendDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod Get(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    return IsSetUnderlyingExtraordinaryDividendDeterminationMethod();
                }

                public bool IsSetUnderlyingExtraordinaryDividendDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo UnderlyingDividendFXTriggerDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    this.UnderlyingDividendFXTriggerDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateRelativeTo();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod UnderlyingDividendFXTriggerDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetPeriod();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit UnderlyingDividendFXTriggerDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetUnit();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType UnderlyingDividendFXTriggerDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetDayType();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted UnderlyingDividendFXTriggerDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    this.UnderlyingDividendFXTriggerDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateUnadjusted();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention UnderlyingDividendFXTriggerDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    this.UnderlyingDividendFXTriggerDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters NoUnderlyingDividendFXTriggerDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    this.NoUnderlyingDividendFXTriggerDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingDividendFXTriggerDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingDividendFXTriggerDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted UnderlyingDividendFXTriggerDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    this.UnderlyingDividendFXTriggerDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateAdjusted();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndex UnderlyingDividendFloatingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndex val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    this.UnderlyingDividendFloatingRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndex Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndex();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndex()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndex);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod UnderlyingDividendFloatingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    this.UnderlyingDividendFloatingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit UnderlyingDividendFloatingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    this.UnderlyingDividendFloatingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier UnderlyingDividendFloatingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val = new QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    this.UnderlyingDividendFloatingRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier Get(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    return IsSetUnderlyingDividendFloatingRateMultiplier();
                }

                public bool IsSetUnderlyingDividendFloatingRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateSpread UnderlyingDividendFloatingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateSpread val = new QuickFix.Fields.UnderlyingDividendFloatingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    this.UnderlyingDividendFloatingRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateSpread Get(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    return IsSetUnderlyingDividendFloatingRateSpread();
                }

                public bool IsSetUnderlyingDividendFloatingRateSpread()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateSpread);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType UnderlyingDividendFloatingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val = new QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    this.UnderlyingDividendFloatingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType Get(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    return IsSetUnderlyingDividendFloatingRateSpreadPositionType();
                }

                public bool IsSetUnderlyingDividendFloatingRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateTreatment UnderlyingDividendFloatingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val = new QuickFix.Fields.UnderlyingDividendFloatingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    this.UnderlyingDividendFloatingRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateTreatment Get(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    return IsSetUnderlyingDividendFloatingRateTreatment();
                }

                public bool IsSetUnderlyingDividendFloatingRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendCapRate UnderlyingDividendCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRate val = new QuickFix.Fields.UnderlyingDividendCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    this.UnderlyingDividendCapRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRate Get(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    return IsSetUnderlyingDividendCapRate();
                }

                public bool IsSetUnderlyingDividendCapRate()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRate);
                }
                public QuickFix.Fields.UnderlyingDividendCapRateBuySide UnderlyingDividendCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRateBuySide val = new QuickFix.Fields.UnderlyingDividendCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    this.UnderlyingDividendCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRateBuySide Get(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    return IsSetUnderlyingDividendCapRateBuySide();
                }

                public bool IsSetUnderlyingDividendCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingDividendCapRateSellSide UnderlyingDividendCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRateSellSide val = new QuickFix.Fields.UnderlyingDividendCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    this.UnderlyingDividendCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRateSellSide Get(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    return IsSetUnderlyingDividendCapRateSellSide();
                }

                public bool IsSetUnderlyingDividendCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRate UnderlyingDividendFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRate val = new QuickFix.Fields.UnderlyingDividendFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    this.UnderlyingDividendFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRate Get(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    return IsSetUnderlyingDividendFloorRate();
                }

                public bool IsSetUnderlyingDividendFloorRate()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRate);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRateBuySide UnderlyingDividendFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRateBuySide val = new QuickFix.Fields.UnderlyingDividendFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    this.UnderlyingDividendFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRateBuySide Get(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    return IsSetUnderlyingDividendFloorRateBuySide();
                }

                public bool IsSetUnderlyingDividendFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRateSellSide UnderlyingDividendFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRateSellSide val = new QuickFix.Fields.UnderlyingDividendFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    this.UnderlyingDividendFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRateSellSide Get(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    return IsSetUnderlyingDividendFloorRateSellSide();
                }

                public bool IsSetUnderlyingDividendFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingDividendInitialRate UnderlyingDividendInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendInitialRate val = new QuickFix.Fields.UnderlyingDividendInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    this.UnderlyingDividendInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendInitialRate Get(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    return IsSetUnderlyingDividendInitialRate();
                }

                public bool IsSetUnderlyingDividendInitialRate()
                {
                    return IsSetField(Tags.UnderlyingDividendInitialRate);
                }
                public QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection UnderlyingDividendFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    this.UnderlyingDividendFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingDividendFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingDividendFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingDividendFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingDividendFinalRatePrecision UnderlyingDividendFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFinalRatePrecision val = new QuickFix.Fields.UnderlyingDividendFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    this.UnderlyingDividendFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingDividendFinalRatePrecision Get(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    return IsSetUnderlyingDividendFinalRatePrecision();
                }

                public bool IsSetUnderlyingDividendFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingDividendFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingDividendAveragingMethod UnderlyingDividendAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAveragingMethod val = new QuickFix.Fields.UnderlyingDividendAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    this.UnderlyingDividendAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingDividendAveragingMethod Get(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    return IsSetUnderlyingDividendAveragingMethod();
                }

                public bool IsSetUnderlyingDividendAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingDividendAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingDividendNegativeRateTreatment UnderlyingDividendNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val = new QuickFix.Fields.UnderlyingDividendNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    this.UnderlyingDividendNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingDividendNegativeRateTreatment Get(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    return IsSetUnderlyingDividendNegativeRateTreatment();
                }

                public bool IsSetUnderlyingDividendNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingDividendNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualFixedRate UnderlyingDividendAccrualFixedRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualFixedRate val = new QuickFix.Fields.UnderlyingDividendAccrualFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    this.UnderlyingDividendAccrualFixedRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualFixedRate Get(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    return IsSetUnderlyingDividendAccrualFixedRate();
                }

                public bool IsSetUnderlyingDividendAccrualFixedRate()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualFixedRate);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo UnderlyingDividendAccrualPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    this.UnderlyingDividendAccrualPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod UnderlyingDividendAccrualPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit UnderlyingDividendAccrualPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType UnderlyingDividendAccrualPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted UnderlyingDividendAccrualPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    this.UnderlyingDividendAccrualPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention UnderlyingDividendAccrualPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingDividendAccrualPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters NoUnderlyingDividendAccrualPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingDividendAccrualPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingDividendAccrualPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingDividendAccrualPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted UnderlyingDividendAccrualPaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    this.UnderlyingDividendAccrualPaymentDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateAdjusted();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingDividendCompoundingMethod UnderlyingDividendCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCompoundingMethod val = new QuickFix.Fields.UnderlyingDividendCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    this.UnderlyingDividendCompoundingMethod = val;
                }

                public QuickFix.Fields.UnderlyingDividendCompoundingMethod Get(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    return IsSetUnderlyingDividendCompoundingMethod();
                }

                public bool IsSetUnderlyingDividendCompoundingMethod()
                {
                    return IsSetField(Tags.UnderlyingDividendCompoundingMethod);
                }
                public QuickFix.Fields.UnderlyingDividendNumOfIndexUnits UnderlyingDividendNumOfIndexUnits
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val = new QuickFix.Fields.UnderlyingDividendNumOfIndexUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    this.UnderlyingDividendNumOfIndexUnits = val;
                }

                public QuickFix.Fields.UnderlyingDividendNumOfIndexUnits Get(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    return IsSetUnderlyingDividendNumOfIndexUnits();
                }

                public bool IsSetUnderlyingDividendNumOfIndexUnits()
                {
                    return IsSetField(Tags.UnderlyingDividendNumOfIndexUnits);
                }
                public QuickFix.Fields.UnderlyingDividendCashPercentage UnderlyingDividendCashPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCashPercentage val = new QuickFix.Fields.UnderlyingDividendCashPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    this.UnderlyingDividendCashPercentage = val;
                }

                public QuickFix.Fields.UnderlyingDividendCashPercentage Get(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    return IsSetUnderlyingDividendCashPercentage();
                }

                public bool IsSetUnderlyingDividendCashPercentage()
                {
                    return IsSetField(Tags.UnderlyingDividendCashPercentage);
                }
                public QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage UnderlyingDividendCashEquivalentPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val = new QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    this.UnderlyingDividendCashEquivalentPercentage = val;
                }

                public QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage Get(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    return IsSetUnderlyingDividendCashEquivalentPercentage();
                }

                public bool IsSetUnderlyingDividendCashEquivalentPercentage()
                {
                    return IsSetField(Tags.UnderlyingDividendCashEquivalentPercentage);
                }
                public QuickFix.Fields.UnderlyingNonCashDividendTreatment UnderlyingNonCashDividendTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingNonCashDividendTreatment val = new QuickFix.Fields.UnderlyingNonCashDividendTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    this.UnderlyingNonCashDividendTreatment = val;
                }

                public QuickFix.Fields.UnderlyingNonCashDividendTreatment Get(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    return IsSetUnderlyingNonCashDividendTreatment();
                }

                public bool IsSetUnderlyingNonCashDividendTreatment()
                {
                    return IsSetField(Tags.UnderlyingNonCashDividendTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendComposition UnderlyingDividendComposition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendComposition val = new QuickFix.Fields.UnderlyingDividendComposition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    this.UnderlyingDividendComposition = val;
                }

                public QuickFix.Fields.UnderlyingDividendComposition Get(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    return IsSetUnderlyingDividendComposition();
                }

                public bool IsSetUnderlyingDividendComposition()
                {
                    return IsSetField(Tags.UnderlyingDividendComposition);
                }
                public QuickFix.Fields.UnderlyingSpecialDividendsIndicator UnderlyingSpecialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSpecialDividendsIndicator val = new QuickFix.Fields.UnderlyingSpecialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    this.UnderlyingSpecialDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingSpecialDividendsIndicator Get(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    return IsSetUnderlyingSpecialDividendsIndicator();
                }

                public bool IsSetUnderlyingSpecialDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingSpecialDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingMaterialDividendsIndicator UnderlyingMaterialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMaterialDividendsIndicator val = new QuickFix.Fields.UnderlyingMaterialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    this.UnderlyingMaterialDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingMaterialDividendsIndicator Get(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    return IsSetUnderlyingMaterialDividendsIndicator();
                }

                public bool IsSetUnderlyingMaterialDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingMaterialDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator UnderlyingOptionsExchangeDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val = new QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    this.UnderlyingOptionsExchangeDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator Get(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    return IsSetUnderlyingOptionsExchangeDividendsIndicator();
                }

                public bool IsSetUnderlyingOptionsExchangeDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingOptionsExchangeDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingAdditionalDividendsIndicator UnderlyingAdditionalDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val = new QuickFix.Fields.UnderlyingAdditionalDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    this.UnderlyingAdditionalDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalDividendsIndicator Get(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    return IsSetUnderlyingAdditionalDividendsIndicator();
                }

                public bool IsSetUnderlyingAdditionalDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingAllDividendsIndicator UnderlyingAllDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAllDividendsIndicator val = new QuickFix.Fields.UnderlyingAllDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    this.UnderlyingAllDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAllDividendsIndicator Get(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    return IsSetUnderlyingAllDividendsIndicator();
                }

                public bool IsSetUnderlyingAllDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingAllDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingReturnRateNotionalReset UnderlyingReturnRateNotionalReset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingReturnRateNotionalReset val = new QuickFix.Fields.UnderlyingReturnRateNotionalReset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    this.UnderlyingReturnRateNotionalReset = val;
                }

                public QuickFix.Fields.UnderlyingReturnRateNotionalReset Get(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    return IsSetUnderlyingReturnRateNotionalReset();
                }

                public bool IsSetUnderlyingReturnRateNotionalReset()
                {
                    return IsSetField(Tags.UnderlyingReturnRateNotionalReset);
                }
                public QuickFix.Fields.NoUnderlyingReturnRates NoUnderlyingReturnRates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingReturnRates val = new QuickFix.Fields.NoUnderlyingReturnRates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    this.NoUnderlyingReturnRates = val;
                }

                public QuickFix.Fields.NoUnderlyingReturnRates Get(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    return IsSetNoUnderlyingReturnRates();
                }

                public bool IsSetNoUnderlyingReturnRates()
                {
                    return IsSetField(Tags.NoUnderlyingReturnRates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel UnderlyingPaymentStreamLinkInitialLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val = new QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    this.UnderlyingPaymentStreamLinkInitialLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel Get(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    return IsSetUnderlyingPaymentStreamLinkInitialLevel();
                }

                public bool IsSetUnderlyingPaymentStreamLinkInitialLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkInitialLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator UnderlyingPaymentStreamLinkClosingLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    this.UnderlyingPaymentStreamLinkClosingLevelIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamLinkClosingLevelIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamLinkClosingLevelIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator UnderlyingPaymentStreamLinkExpiringLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    this.UnderlyingPaymentStreamLinkExpiringLevelIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamLinkExpiringLevelIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamLinkExpiringLevelIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays UnderlyingPaymentStreamLinkEstimatedTradingDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val = new QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    this.UnderlyingPaymentStreamLinkEstimatedTradingDays = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays Get(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    return IsSetUnderlyingPaymentStreamLinkEstimatedTradingDays();
                }

                public bool IsSetUnderlyingPaymentStreamLinkEstimatedTradingDays()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice UnderlyingPaymentStreamLinkStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val = new QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    this.UnderlyingPaymentStreamLinkStrikePrice = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice Get(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    return IsSetUnderlyingPaymentStreamLinkStrikePrice();
                }

                public bool IsSetUnderlyingPaymentStreamLinkStrikePrice()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkStrikePrice);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType UnderlyingPaymentStreamLinkStrikePriceType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val = new QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    this.UnderlyingPaymentStreamLinkStrikePriceType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType Get(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    return IsSetUnderlyingPaymentStreamLinkStrikePriceType();
                }

                public bool IsSetUnderlyingPaymentStreamLinkStrikePriceType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkStrikePriceType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary UnderlyingPaymentStreamLinkMaximumBoundary
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val = new QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    this.UnderlyingPaymentStreamLinkMaximumBoundary = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary Get(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    return IsSetUnderlyingPaymentStreamLinkMaximumBoundary();
                }

                public bool IsSetUnderlyingPaymentStreamLinkMaximumBoundary()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkMaximumBoundary);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary UnderlyingPaymentStreamLinkMinimumBoundary
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val = new QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    this.UnderlyingPaymentStreamLinkMinimumBoundary = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary Get(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    return IsSetUnderlyingPaymentStreamLinkMinimumBoundary();
                }

                public bool IsSetUnderlyingPaymentStreamLinkMinimumBoundary()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkMinimumBoundary);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries UnderlyingPaymentStreamLinkNumberOfDataSeries
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val = new QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    this.UnderlyingPaymentStreamLinkNumberOfDataSeries = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries Get(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    return IsSetUnderlyingPaymentStreamLinkNumberOfDataSeries();
                }

                public bool IsSetUnderlyingPaymentStreamLinkNumberOfDataSeries()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap UnderlyingPaymentStreamVarianceUnadjustedCap
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val = new QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    this.UnderlyingPaymentStreamVarianceUnadjustedCap = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap Get(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    return IsSetUnderlyingPaymentStreamVarianceUnadjustedCap();
                }

                public bool IsSetUnderlyingPaymentStreamVarianceUnadjustedCap()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamVarianceUnadjustedCap);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod UnderlyingPaymentStreamRealizedVarianceMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val = new QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    this.UnderlyingPaymentStreamRealizedVarianceMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod Get(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    return IsSetUnderlyingPaymentStreamRealizedVarianceMethod();
                }

                public bool IsSetUnderlyingPaymentStreamRealizedVarianceMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRealizedVarianceMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator UnderlyingPaymentStreamDaysAdjustmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    this.UnderlyingPaymentStreamDaysAdjustmentIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamDaysAdjustmentIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamDaysAdjustmentIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID UnderlyingPaymentStreamNearestExchangeContractRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val = new QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    this.UnderlyingPaymentStreamNearestExchangeContractRefID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID Get(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    return IsSetUnderlyingPaymentStreamNearestExchangeContractRefID();
                }

                public bool IsSetUnderlyingPaymentStreamNearestExchangeContractRefID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNearestExchangeContractRefID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount UnderlyingPaymentStreamVegaNotionalAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val = new QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    this.UnderlyingPaymentStreamVegaNotionalAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount Get(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    return IsSetUnderlyingPaymentStreamVegaNotionalAmount();
                }

                public bool IsSetUnderlyingPaymentStreamVegaNotionalAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamVegaNotionalAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexID UnderlyingPaymentStreamRateIndexID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    this.UnderlyingPaymentStreamRateIndexID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexID Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexID();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource UnderlyingPaymentStreamRateIndexIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    this.UnderlyingPaymentStreamRateIndexIDSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexIDSource();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexIDSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexIDSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency UnderlyingPaymentStreamNonDeliverableRefCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableRefCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableRefCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableRefCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource UnderlyingPaymentStreamNonDeliverableSettlRateSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableSettlRateSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableSettlRateSource();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableSettlRateSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage UnderlyingPaymentStreamNonDeliverableSettlReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableSettlReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableSettlReferencePage();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableSettlReferencePage()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage);
                }
                public QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates NoUnderlyingNonDeliverableFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val = new QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    this.NoUnderlyingNonDeliverableFixingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates Get(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    return IsSetNoUnderlyingNonDeliverableFixingDates();
                }

                public bool IsSetNoUnderlyingNonDeliverableFixingDates()
                {
                    return IsSetField(Tags.NoUnderlyingNonDeliverableFixingDates);
                }
                public QuickFix.Fields.NoUnderlyingSettlRateFallbacks NoUnderlyingSettlRateFallbacks
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingSettlRateFallbacks val = new QuickFix.Fields.NoUnderlyingSettlRateFallbacks();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    this.NoUnderlyingSettlRateFallbacks = val;
                }

                public QuickFix.Fields.NoUnderlyingSettlRateFallbacks Get(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    return IsSetNoUnderlyingSettlRateFallbacks();
                }

                public bool IsSetNoUnderlyingSettlRateFallbacks()
                {
                    return IsSetField(Tags.NoUnderlyingSettlRateFallbacks);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator UnderlyingPaymentStreamFlatRateIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    this.UnderlyingPaymentStreamFlatRateIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount UnderlyingPaymentStreamFlatRateAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    this.UnderlyingPaymentStreamFlatRateAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency UnderlyingPaymentStreamFlatRateCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    this.UnderlyingPaymentStreamFlatRateCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount UnderlyingPaymentStreamMaximumPaymentAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    this.UnderlyingPaymentStreamMaximumPaymentAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumPaymentAmount();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumPaymentAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumPaymentAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency UnderlyingPaymentStreamMaximumPaymentCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    this.UnderlyingPaymentStreamMaximumPaymentCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumPaymentCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumPaymentCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumPaymentCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount UnderlyingPaymentStreamMaximumTransactionAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    this.UnderlyingPaymentStreamMaximumTransactionAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumTransactionAmount();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumTransactionAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumTransactionAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency UnderlyingPaymentStreamMaximumTransactionCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    this.UnderlyingPaymentStreamMaximumTransactionCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumTransactionCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumTransactionCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumTransactionCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator UnderlyingPaymentStreamCashSettlIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    this.UnderlyingPaymentStreamCashSettlIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamCashSettlIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamCashSettlIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCashSettlIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef UnderlyingPaymentStreamCompoundingXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    this.UnderlyingPaymentStreamCompoundingXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingXIDRef();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingXIDRef()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingXIDRef);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread UnderlyingPaymentStreamCompoundingSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    this.UnderlyingPaymentStreamCompoundingSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingSpread();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod UnderlyingPaymentStreamInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    this.UnderlyingPaymentStreamInterpolationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamInterpolationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamInterpolationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterpolationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod UnderlyingPaymentStreamInterpolationPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    this.UnderlyingPaymentStreamInterpolationPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInterpolationPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInterpolationPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterpolationPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate UnderlyingPaymentStreamCompoundingFixedRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingFixedRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFixedRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFixedRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFixedRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex UnderlyingPaymentStreamCompoundingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndex();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndex()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndex);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit UnderlyingPaymentStreamCompoundingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier UnderlyingPaymentStreamCompoundingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateMultiplier();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread UnderlyingPaymentStreamCompoundingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateSpread();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType UnderlyingPaymentStreamCompoundingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateSpreadPositionType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment UnderlyingPaymentStreamCompoundingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate UnderlyingPaymentStreamCompoundingCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide UnderlyingPaymentStreamCompoundingCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide UnderlyingPaymentStreamCompoundingCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate UnderlyingPaymentStreamCompoundingFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide UnderlyingPaymentStreamCompoundingFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide UnderlyingPaymentStreamCompoundingFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate UnderlyingPaymentStreamCompoundingInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingInitialRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingInitialRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingInitialRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    this.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision UnderlyingPaymentStreamCompoundingFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    this.UnderlyingPaymentStreamCompoundingFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFinalRatePrecision();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod UnderlyingPaymentStreamCompoundingAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    this.UnderlyingPaymentStreamCompoundingAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingAveragingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment UnderlyingPaymentStreamCompoundingNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    this.UnderlyingPaymentStreamCompoundingNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingNegativeRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamCompoundingDatesBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamCompoundingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates NoUnderlyingPaymentStreamCompoundingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    this.NoUnderlyingPaymentStreamCompoundingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamCompoundingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamCompoundingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamCompoundingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo UnderlyingPaymentStreamCompoundingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod UnderlyingPaymentStreamCompoundingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit UnderlyingPaymentStreamCompoundingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType UnderlyingPaymentStreamCompoundingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip UnderlyingPaymentStreamCompoundingPeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    this.UnderlyingPaymentStreamCompoundingPeriodSkip = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingPeriodSkip();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingPeriodSkip()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingPeriodSkip);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted UnderlyingPaymentStreamCompoundingStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo UnderlyingPaymentStreamCompoundingStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit UnderlyingPaymentStreamCompoundingStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType UnderlyingPaymentStreamCompoundingStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted UnderlyingPaymentStreamCompoundingStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted UnderlyingPaymentStreamCompoundingEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo UnderlyingPaymentStreamCompoundingEndDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit UnderlyingPaymentStreamCompoundingEndDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType UnderlyingPaymentStreamCompoundingEndDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted UnderlyingPaymentStreamCompoundingEndDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod UnderlyingPaymentStreamCompoundingFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit UnderlyingPaymentStreamCompoundingFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention UnderlyingPaymentStreamCompoundingRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    this.UnderlyingPaymentStreamCompoundingRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted UnderlyingPaymentStreamBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamBoundsFirstDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted UnderlyingPaymentStreamBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamBoundsLastDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount UnderlyingPaymentStreamOtherDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    this.UnderlyingPaymentStreamOtherDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamOtherDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamOtherDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamOtherDayCount);
                }
                public QuickFix.Fields.NoUnderlyingPaymentSchedules NoUnderlyingPaymentSchedules
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentSchedules val = new QuickFix.Fields.NoUnderlyingPaymentSchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    this.NoUnderlyingPaymentSchedules = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentSchedules Get(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    return IsSetNoUnderlyingPaymentSchedules();
                }

                public bool IsSetNoUnderlyingPaymentSchedules()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentSchedules);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStubs NoUnderlyingPaymentStubs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStubs val = new QuickFix.Fields.NoUnderlyingPaymentStubs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    this.NoUnderlyingPaymentStubs = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStubs Get(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    return IsSetNoUnderlyingPaymentStubs();
                }

                public bool IsSetNoUnderlyingPaymentStubs()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStubs);
                }
                public QuickFix.Fields.UnderlyingStreamText UnderlyingStreamText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamText val = new QuickFix.Fields.UnderlyingStreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamText val)
                {
                    this.UnderlyingStreamText = val;
                }

                public QuickFix.Fields.UnderlyingStreamText Get(QuickFix.Fields.UnderlyingStreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamText val)
                {
                    return IsSetUnderlyingStreamText();
                }

                public bool IsSetUnderlyingStreamText()
                {
                    return IsSetField(Tags.UnderlyingStreamText);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamTextLen EncodedUnderlyingStreamTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamTextLen val = new QuickFix.Fields.EncodedUnderlyingStreamTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    this.EncodedUnderlyingStreamTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamTextLen Get(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    return IsSetEncodedUnderlyingStreamTextLen();
                }

                public bool IsSetEncodedUnderlyingStreamTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamText EncodedUnderlyingStreamText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamText val = new QuickFix.Fields.EncodedUnderlyingStreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    this.EncodedUnderlyingStreamText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamText Get(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    return IsSetEncodedUnderlyingStreamText();
                }

                public bool IsSetEncodedUnderlyingStreamText()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamText);
                }
                public QuickFix.Fields.UnderlyingStreamXID UnderlyingStreamXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamXID val = new QuickFix.Fields.UnderlyingStreamXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    this.UnderlyingStreamXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamXID Get(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    return IsSetUnderlyingStreamXID();
                }

                public bool IsSetUnderlyingStreamXID()
                {
                    return IsSetField(Tags.UnderlyingStreamXID);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalXIDRef UnderlyingStreamNotionalXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalXIDRef val = new QuickFix.Fields.UnderlyingStreamNotionalXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    this.UnderlyingStreamNotionalXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalXIDRef Get(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    return IsSetUnderlyingStreamNotionalXIDRef();
                }

                public bool IsSetUnderlyingStreamNotionalXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalXIDRef);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod UnderlyingStreamNotionalFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    this.UnderlyingStreamNotionalFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    return IsSetUnderlyingStreamNotionalFrequencyPeriod();
                }

                public bool IsSetUnderlyingStreamNotionalFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit UnderlyingStreamNotionalFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    this.UnderlyingStreamNotionalFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    return IsSetUnderlyingStreamNotionalFrequencyUnit();
                }

                public bool IsSetUnderlyingStreamNotionalFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency UnderlyingStreamNotionalCommodityFrequency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val = new QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    this.UnderlyingStreamNotionalCommodityFrequency = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency Get(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    return IsSetUnderlyingStreamNotionalCommodityFrequency();
                }

                public bool IsSetUnderlyingStreamNotionalCommodityFrequency()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalCommodityFrequency);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure UnderlyingStreamNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    this.UnderlyingStreamNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamNotionalUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamTotalNotional UnderlyingStreamTotalNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTotalNotional val = new QuickFix.Fields.UnderlyingStreamTotalNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    this.UnderlyingStreamTotalNotional = val;
                }

                public QuickFix.Fields.UnderlyingStreamTotalNotional Get(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    return IsSetUnderlyingStreamTotalNotional();
                }

                public bool IsSetUnderlyingStreamTotalNotional()
                {
                    return IsSetField(Tags.UnderlyingStreamTotalNotional);
                }
                public QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure UnderlyingStreamTotalNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    this.UnderlyingStreamTotalNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamTotalNotionalUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamTotalNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamTotalNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityBase UnderlyingStreamCommodityBase
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityBase val = new QuickFix.Fields.UnderlyingStreamCommodityBase();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    this.UnderlyingStreamCommodityBase = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityBase Get(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    return IsSetUnderlyingStreamCommodityBase();
                }

                public bool IsSetUnderlyingStreamCommodityBase()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityBase);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityType UnderlyingStreamCommodityType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityType val = new QuickFix.Fields.UnderlyingStreamCommodityType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    this.UnderlyingStreamCommodityType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityType Get(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    return IsSetUnderlyingStreamCommodityType();
                }

                public bool IsSetUnderlyingStreamCommodityType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityType);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySecurityID UnderlyingStreamCommoditySecurityID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySecurityID val = new QuickFix.Fields.UnderlyingStreamCommoditySecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    this.UnderlyingStreamCommoditySecurityID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySecurityID Get(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    return IsSetUnderlyingStreamCommoditySecurityID();
                }

                public bool IsSetUnderlyingStreamCommoditySecurityID()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySecurityID);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource UnderlyingStreamCommoditySecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val = new QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    this.UnderlyingStreamCommoditySecurityIDSource = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource Get(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    return IsSetUnderlyingStreamCommoditySecurityIDSource();
                }

                public bool IsSetUnderlyingStreamCommoditySecurityIDSource()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySecurityIDSource);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs NoUnderlyingStreamCommodityAltIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val = new QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    this.NoUnderlyingStreamCommodityAltIDs = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs Get(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    return IsSetNoUnderlyingStreamCommodityAltIDs();
                }

                public bool IsSetNoUnderlyingStreamCommodityAltIDs()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommodityAltIDs);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityDesc UnderlyingStreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityDesc val = new QuickFix.Fields.UnderlyingStreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    this.UnderlyingStreamCommodityDesc = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityDesc Get(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    return IsSetUnderlyingStreamCommodityDesc();
                }

                public bool IsSetUnderlyingStreamCommodityDesc()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityDesc);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen EncodedUnderlyingStreamCommodityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val = new QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    this.EncodedUnderlyingStreamCommodityDescLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen Get(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    return IsSetEncodedUnderlyingStreamCommodityDescLen();
                }

                public bool IsSetEncodedUnderlyingStreamCommodityDescLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamCommodityDescLen);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc EncodedUnderlyingStreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val = new QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    this.EncodedUnderlyingStreamCommodityDesc = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc Get(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    return IsSetEncodedUnderlyingStreamCommodityDesc();
                }

                public bool IsSetEncodedUnderlyingStreamCommodityDesc()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamCommodityDesc);
                }
                public QuickFix.Fields.NoUnderlyingStreamAssetAttributes NoUnderlyingStreamAssetAttributes
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamAssetAttributes val = new QuickFix.Fields.NoUnderlyingStreamAssetAttributes();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    this.NoUnderlyingStreamAssetAttributes = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamAssetAttributes Get(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    return IsSetNoUnderlyingStreamAssetAttributes();
                }

                public bool IsSetNoUnderlyingStreamAssetAttributes()
                {
                    return IsSetField(Tags.NoUnderlyingStreamAssetAttributes);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure UnderlyingStreamCommodityUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    this.UnderlyingStreamCommodityUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamCommodityUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamCommodityUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityCurrency UnderlyingStreamCommodityCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityCurrency val = new QuickFix.Fields.UnderlyingStreamCommodityCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    this.UnderlyingStreamCommodityCurrency = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityCurrency Get(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    return IsSetUnderlyingStreamCommodityCurrency();
                }

                public bool IsSetUnderlyingStreamCommodityCurrency()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityCurrency);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityExchange UnderlyingStreamCommodityExchange
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityExchange val = new QuickFix.Fields.UnderlyingStreamCommodityExchange();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    this.UnderlyingStreamCommodityExchange = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityExchange Get(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    return IsSetUnderlyingStreamCommodityExchange();
                }

                public bool IsSetUnderlyingStreamCommodityExchange()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityExchange);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateSource UnderlyingStreamCommodityRateSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateSource val = new QuickFix.Fields.UnderlyingStreamCommodityRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    this.UnderlyingStreamCommodityRateSource = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateSource Get(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    return IsSetUnderlyingStreamCommodityRateSource();
                }

                public bool IsSetUnderlyingStreamCommodityRateSource()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateSource);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage UnderlyingStreamCommodityRateReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val = new QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    this.UnderlyingStreamCommodityRateReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage Get(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    return IsSetUnderlyingStreamCommodityRateReferencePage();
                }

                public bool IsSetUnderlyingStreamCommodityRateReferencePage()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateReferencePage);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading UnderlyingStreamCommodityRateReferencePageHeading
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val = new QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    this.UnderlyingStreamCommodityRateReferencePageHeading = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading Get(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    return IsSetUnderlyingStreamCommodityRateReferencePageHeading();
                }

                public bool IsSetUnderlyingStreamCommodityRateReferencePageHeading()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateReferencePageHeading);
                }
                public QuickFix.Fields.UnderlyingStreamDataProvider UnderlyingStreamDataProvider
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamDataProvider val = new QuickFix.Fields.UnderlyingStreamDataProvider();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    this.UnderlyingStreamDataProvider = val;
                }

                public QuickFix.Fields.UnderlyingStreamDataProvider Get(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    return IsSetUnderlyingStreamDataProvider();
                }

                public bool IsSetUnderlyingStreamDataProvider()
                {
                    return IsSetField(Tags.UnderlyingStreamDataProvider);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommodityDataSources NoUnderlyingStreamCommodityDataSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val = new QuickFix.Fields.NoUnderlyingStreamCommodityDataSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    this.NoUnderlyingStreamCommodityDataSources = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommodityDataSources Get(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    return IsSetNoUnderlyingStreamCommodityDataSources();
                }

                public bool IsSetNoUnderlyingStreamCommodityDataSources()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommodityDataSources);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityPricingType UnderlyingStreamCommodityPricingType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityPricingType val = new QuickFix.Fields.UnderlyingStreamCommodityPricingType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    this.UnderlyingStreamCommodityPricingType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityPricingType Get(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    return IsSetUnderlyingStreamCommodityPricingType();
                }

                public bool IsSetUnderlyingStreamCommodityPricingType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityPricingType);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod UnderlyingStreamCommodityNearbySettlDayPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val = new QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    this.UnderlyingStreamCommodityNearbySettlDayPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod Get(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    return IsSetUnderlyingStreamCommodityNearbySettlDayPeriod();
                }

                public bool IsSetUnderlyingStreamCommodityNearbySettlDayPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityNearbySettlDayPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit UnderlyingStreamCommodityNearbySettlDayUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val = new QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    this.UnderlyingStreamCommodityNearbySettlDayUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit Get(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    return IsSetUnderlyingStreamCommodityNearbySettlDayUnit();
                }

                public bool IsSetUnderlyingStreamCommodityNearbySettlDayUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityNearbySettlDayUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted UnderlyingStreamCommoditySettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    this.UnderlyingStreamCommoditySettlDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention UnderlyingStreamCommoditySettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamCommoditySettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters NoUnderlyingStreamCommoditySettlBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    this.NoUnderlyingStreamCommoditySettlBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamCommoditySettlBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamCommoditySettlBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted UnderlyingStreamCommoditySettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    this.UnderlyingStreamCommoditySettlDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateAdjusted();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlMonth UnderlyingStreamCommoditySettlMonth
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val = new QuickFix.Fields.UnderlyingStreamCommoditySettlMonth();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    this.UnderlyingStreamCommoditySettlMonth = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlMonth Get(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    return IsSetUnderlyingStreamCommoditySettlMonth();
                }

                public bool IsSetUnderlyingStreamCommoditySettlMonth()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlMonth);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod UnderlyingStreamCommoditySettlDateRollPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    this.UnderlyingStreamCommoditySettlDateRollPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateRollPeriod();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateRollPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateRollPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit UnderlyingStreamCommoditySettlDateRollUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    this.UnderlyingStreamCommoditySettlDateRollUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateRollUnit();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateRollUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateRollUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDayType UnderlyingStreamCommoditySettlDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    this.UnderlyingStreamCommoditySettlDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDayType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDayType();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDayType);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods NoUnderlyingStreamCommoditySettlPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    this.NoUnderlyingStreamCommoditySettlPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    return IsSetNoUnderlyingStreamCommoditySettlPeriods();
                }

                public bool IsSetNoUnderlyingStreamCommoditySettlPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommoditySettlPeriods);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityXID UnderlyingStreamCommodityXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityXID val = new QuickFix.Fields.UnderlyingStreamCommodityXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    this.UnderlyingStreamCommodityXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityXID Get(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    return IsSetUnderlyingStreamCommodityXID();
                }

                public bool IsSetUnderlyingStreamCommodityXID()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityXID);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityXIDRef UnderlyingStreamCommodityXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityXIDRef val = new QuickFix.Fields.UnderlyingStreamCommodityXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    this.UnderlyingStreamCommodityXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityXIDRef Get(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    return IsSetUnderlyingStreamCommodityXIDRef();
                }

                public bool IsSetUnderlyingStreamCommodityXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityXIDRef);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion UnderlyingStreamCommodityDeliveryPricingRegion
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val = new QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    this.UnderlyingStreamCommodityDeliveryPricingRegion = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion Get(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    return IsSetUnderlyingStreamCommodityDeliveryPricingRegion();
                }

                public bool IsSetUnderlyingStreamCommodityDeliveryPricingRegion()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityDeliveryPricingRegion);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamType UnderlyingDeliveryStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamType val = new QuickFix.Fields.UnderlyingDeliveryStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    this.UnderlyingDeliveryStreamType = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamType Get(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    return IsSetUnderlyingDeliveryStreamType();
                }

                public bool IsSetUnderlyingDeliveryStreamType()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamType);
                }
                public QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources NoUnderlyingDeliveryStreamCommoditySources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val = new QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    this.NoUnderlyingDeliveryStreamCommoditySources = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources Get(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    return IsSetNoUnderlyingDeliveryStreamCommoditySources();
                }

                public bool IsSetNoUnderlyingDeliveryStreamCommoditySources()
                {
                    return IsSetField(Tags.NoUnderlyingDeliveryStreamCommoditySources);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamPipeline UnderlyingDeliveryStreamPipeline
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamPipeline val = new QuickFix.Fields.UnderlyingDeliveryStreamPipeline();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    this.UnderlyingDeliveryStreamPipeline = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamPipeline Get(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    return IsSetUnderlyingDeliveryStreamPipeline();
                }

                public bool IsSetUnderlyingDeliveryStreamPipeline()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamPipeline);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint UnderlyingDeliveryStreamEntryPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    this.UnderlyingDeliveryStreamEntryPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamEntryPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamEntryPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamEntryPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint UnderlyingDeliveryStreamWithdrawalPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    this.UnderlyingDeliveryStreamWithdrawalPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamWithdrawalPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamWithdrawalPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamWithdrawalPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint UnderlyingDeliveryStreamDeliveryPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction UnderlyingDeliveryStreamDeliveryRestriction
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    this.UnderlyingDeliveryStreamDeliveryRestriction = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryRestriction();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryRestriction()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryRestriction);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency UnderlyingDeliveryStreamDeliveryContingency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    this.UnderlyingDeliveryStreamDeliveryContingency = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryContingency();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryContingency()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryContingency);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide UnderlyingDeliveryStreamDeliveryContingentPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    this.UnderlyingDeliveryStreamDeliveryContingentPartySide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryContingentPartySide();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryContingentPartySide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator UnderlyingDeliveryStreamDeliverAtSourceIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    this.UnderlyingDeliveryStreamDeliverAtSourceIndicator = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliverAtSourceIndicator();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliverAtSourceIndicator()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment UnderlyingDeliveryStreamRiskApportionment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val = new QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    this.UnderlyingDeliveryStreamRiskApportionment = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment Get(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    return IsSetUnderlyingDeliveryStreamRiskApportionment();
                }

                public bool IsSetUnderlyingDeliveryStreamRiskApportionment()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRiskApportionment);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource UnderlyingDeliveryStreamRiskApportionmentSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val = new QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    this.UnderlyingDeliveryStreamRiskApportionmentSource = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource Get(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    return IsSetUnderlyingDeliveryStreamRiskApportionmentSource();
                }

                public bool IsSetUnderlyingDeliveryStreamRiskApportionmentSource()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRiskApportionmentSource);
                }
                public QuickFix.Fields.NoUnderlyingDeliveryStreamCycles NoUnderlyingDeliveryStreamCycles
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val = new QuickFix.Fields.NoUnderlyingDeliveryStreamCycles();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    this.NoUnderlyingDeliveryStreamCycles = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliveryStreamCycles Get(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    return IsSetNoUnderlyingDeliveryStreamCycles();
                }

                public bool IsSetNoUnderlyingDeliveryStreamCycles()
                {
                    return IsSetField(Tags.NoUnderlyingDeliveryStreamCycles);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation UnderlyingDeliveryStreamTitleTransferLocation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val = new QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    this.UnderlyingDeliveryStreamTitleTransferLocation = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation Get(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    return IsSetUnderlyingDeliveryStreamTitleTransferLocation();
                }

                public bool IsSetUnderlyingDeliveryStreamTitleTransferLocation()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTitleTransferLocation);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition UnderlyingDeliveryStreamTitleTransferCondition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val = new QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    this.UnderlyingDeliveryStreamTitleTransferCondition = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition Get(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    return IsSetUnderlyingDeliveryStreamTitleTransferCondition();
                }

                public bool IsSetUnderlyingDeliveryStreamTitleTransferCondition()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTitleTransferCondition);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord UnderlyingDeliveryStreamImporterOfRecord
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val = new QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    this.UnderlyingDeliveryStreamImporterOfRecord = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord Get(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    return IsSetUnderlyingDeliveryStreamImporterOfRecord();
                }

                public bool IsSetUnderlyingDeliveryStreamImporterOfRecord()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamImporterOfRecord);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance UnderlyingDeliveryStreamNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    this.UnderlyingDeliveryStreamNegativeTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamNegativeTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamNegativeTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamNegativeTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance UnderlyingDeliveryStreamPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    this.UnderlyingDeliveryStreamPositiveTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamPositiveTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamPositiveTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamPositiveTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure UnderlyingDeliveryStreamToleranceUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    this.UnderlyingDeliveryStreamToleranceUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceUnitOfMeasure();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceType UnderlyingDeliveryStreamToleranceType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    this.UnderlyingDeliveryStreamToleranceType = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceType Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceType();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceType()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceType);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide UnderlyingDeliveryStreamToleranceOptionSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    this.UnderlyingDeliveryStreamToleranceOptionSide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceOptionSide();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceOptionSide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceOptionSide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance UnderlyingDeliveryStreamTotalPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    this.UnderlyingDeliveryStreamTotalPositiveTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamTotalPositiveTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamTotalPositiveTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTotalPositiveTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance UnderlyingDeliveryStreamTotalNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    this.UnderlyingDeliveryStreamTotalNegativeTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamTotalNegativeTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamTotalNegativeTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTotalNegativeTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor UnderlyingDeliveryStreamNotionalConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val = new QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    this.UnderlyingDeliveryStreamNotionalConversionFactor = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor Get(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    return IsSetUnderlyingDeliveryStreamNotionalConversionFactor();
                }

                public bool IsSetUnderlyingDeliveryStreamNotionalConversionFactor()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamNotionalConversionFactor);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment UnderlyingDeliveryStreamTransportEquipment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val = new QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    this.UnderlyingDeliveryStreamTransportEquipment = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment Get(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    return IsSetUnderlyingDeliveryStreamTransportEquipment();
                }

                public bool IsSetUnderlyingDeliveryStreamTransportEquipment()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTransportEquipment);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide UnderlyingDeliveryStreamElectingPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val = new QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    this.UnderlyingDeliveryStreamElectingPartySide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide Get(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    return IsSetUnderlyingDeliveryStreamElectingPartySide();
                }

                public bool IsSetUnderlyingDeliveryStreamElectingPartySide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamElectingPartySide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource UnderlyingDeliveryStreamDeliveryPointSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPointSource = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPointSource();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPointSource()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPointSource);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc UnderlyingDeliveryStreamDeliveryPointDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPointDesc = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPointDesc();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPointDesc()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPointDesc);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter UnderlyingDeliveryStreamRouteOrCharter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val = new QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    this.UnderlyingDeliveryStreamRouteOrCharter = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter Get(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    return IsSetUnderlyingDeliveryStreamRouteOrCharter();
                }

                public bool IsSetUnderlyingDeliveryStreamRouteOrCharter()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRouteOrCharter);
                }
                public QuickFix.Fields.NoUnderlyingDeliverySchedules NoUnderlyingDeliverySchedules
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliverySchedules val = new QuickFix.Fields.NoUnderlyingDeliverySchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    this.NoUnderlyingDeliverySchedules = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliverySchedules Get(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    return IsSetNoUnderlyingDeliverySchedules();
                }

                public bool IsSetNoUnderlyingDeliverySchedules()
                {
                    return IsSetField(Tags.NoUnderlyingDeliverySchedules);
                }
                public QuickFix.Fields.UnderlyingStreamVersion UnderlyingStreamVersion
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamVersion val = new QuickFix.Fields.UnderlyingStreamVersion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    this.UnderlyingStreamVersion = val;
                }

                public QuickFix.Fields.UnderlyingStreamVersion Get(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    return IsSetUnderlyingStreamVersion();
                }

                public bool IsSetUnderlyingStreamVersion()
                {
                    return IsSetField(Tags.UnderlyingStreamVersion);
                }
                public QuickFix.Fields.UnderlyingStreamVersionEffectiveDate UnderlyingStreamVersionEffectiveDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val = new QuickFix.Fields.UnderlyingStreamVersionEffectiveDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    this.UnderlyingStreamVersionEffectiveDate = val;
                }

                public QuickFix.Fields.UnderlyingStreamVersionEffectiveDate Get(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    return IsSetUnderlyingStreamVersionEffectiveDate();
                }

                public bool IsSetUnderlyingStreamVersionEffectiveDate()
                {
                    return IsSetField(Tags.UnderlyingStreamVersionEffectiveDate);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod UnderlyingStreamNotionalDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val = new QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    this.UnderlyingStreamNotionalDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod Get(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    return IsSetUnderlyingStreamNotionalDeterminationMethod();
                }

                public bool IsSetUnderlyingStreamNotionalDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalAdjustments UnderlyingStreamNotionalAdjustments
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalAdjustments val = new QuickFix.Fields.UnderlyingStreamNotionalAdjustments();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    this.UnderlyingStreamNotionalAdjustments = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalAdjustments Get(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    return IsSetUnderlyingStreamNotionalAdjustments();
                }

                public bool IsSetUnderlyingStreamNotionalAdjustments()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalAdjustments);
                }
                public class NoUnderlyingStreamEffectiveDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamEffectiveDateBusinessCenter, 0 };

                    public NoUnderlyingStreamEffectiveDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters, Tags.UnderlyingStreamEffectiveDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamEffectiveDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter UnderlyingStreamEffectiveDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        this.UnderlyingStreamEffectiveDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamEffectiveDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamEffectiveDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamEffectiveDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamTerminationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamTerminationDateBusinessCenter, 0 };

                    public NoUnderlyingStreamTerminationDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamTerminationDateBusinessCenters, Tags.UnderlyingStreamTerminationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamTerminationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter UnderlyingStreamTerminationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        this.UnderlyingStreamTerminationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamTerminationDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamTerminationDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamTerminationDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCalculationPeriodBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCalculationPeriodBusinessCenter, 0 };

                    public NoUnderlyingStreamCalculationPeriodBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters, Tags.UnderlyingStreamCalculationPeriodBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCalculationPeriodBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter UnderlyingStreamCalculationPeriodBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        this.UnderlyingStreamCalculationPeriodBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter, 0 };

                    public NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter UnderlyingStreamFirstPeriodStartDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        this.UnderlyingStreamFirstPeriodStartDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamFirstPeriodStartDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamFirstPeriodStartDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCalculationPeriodDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCalculationPeriodDate, Tags.UnderlyingStreamCalculationPeriodDateType, 0 };

                    public NoUnderlyingStreamCalculationPeriodDatesGroup()
                      : base(Tags.NoUnderlyingStreamCalculationPeriodDates, Tags.UnderlyingStreamCalculationPeriodDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCalculationPeriodDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDate UnderlyingStreamCalculationPeriodDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        this.UnderlyingStreamCalculationPeriodDate = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDate Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodDate();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodDate()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodDate);
                    }
                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType UnderlyingStreamCalculationPeriodDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        this.UnderlyingStreamCalculationPeriodDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodDateType();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodDateType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters, Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter UnderlyingPaymentStreamPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPaymentDate, Tags.UnderlyingPaymentStreamPaymentDateType, 0 };

                    public NoUnderlyingPaymentStreamPaymentDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPaymentDates, Tags.UnderlyingPaymentStreamPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDate UnderlyingPaymentStreamPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        this.UnderlyingPaymentStreamPaymentDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDate Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType UnderlyingPaymentStreamPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        this.UnderlyingPaymentStreamPaymentDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamResetDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamResetDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamResetDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters, Tags.UnderlyingPaymentStreamResetDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamResetDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter UnderlyingPaymentStreamResetDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamResetDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamResetDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamResetDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamResetDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter UnderlyingPaymentStreamInitialFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamInitialFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamInitialFixingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamInitialFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFixingDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter UnderlyingPaymentStreamFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFixingDate, Tags.UnderlyingPaymentStreamFixingDateType, 0 };

                    public NoUnderlyingPaymentStreamFixingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFixingDates, Tags.UnderlyingPaymentStreamFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDate UnderlyingPaymentStreamFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDate val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        this.UnderlyingPaymentStreamFixingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDate Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateType UnderlyingPaymentStreamFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        this.UnderlyingPaymentStreamFixingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamPricingBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters, Tags.UnderlyingPaymentStreamPricingBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter UnderlyingPaymentStreamPricingBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamPricingBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingDaysGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingDayOfWeek, Tags.UnderlyingPaymentStreamPricingDayNumber, 0 };

                    public NoUnderlyingPaymentStreamPricingDaysGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingDays, Tags.UnderlyingPaymentStreamPricingDayOfWeek, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingDaysGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek UnderlyingPaymentStreamPricingDayOfWeek
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        this.UnderlyingPaymentStreamPricingDayOfWeek = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDayOfWeek();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDayOfWeek()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDayOfWeek);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber UnderlyingPaymentStreamPricingDayNumber
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        this.UnderlyingPaymentStreamPricingDayNumber = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDayNumber();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDayNumber()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDayNumber);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingDate, Tags.UnderlyingPaymentStreamPricingDateType, 0 };

                    public NoUnderlyingPaymentStreamPricingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingDates, Tags.UnderlyingPaymentStreamPricingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDate UnderlyingPaymentStreamPricingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDate val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        this.UnderlyingPaymentStreamPricingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDate Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDateType UnderlyingPaymentStreamPricingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        this.UnderlyingPaymentStreamPricingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamFormulasGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFormula, Tags.UnderlyingPaymentStreamFormulaDesc, Tags.UnderlyingPaymentStreamFormulaLength, 0 };

                    public NoUnderlyingPaymentStreamFormulasGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFormulas, Tags.UnderlyingPaymentStreamFormula, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFormulasGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormula UnderlyingPaymentStreamFormula
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormula val = new QuickFix.Fields.UnderlyingPaymentStreamFormula();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        this.UnderlyingPaymentStreamFormula = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormula Get(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        return IsSetUnderlyingPaymentStreamFormula();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormula()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormula);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc UnderlyingPaymentStreamFormulaDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        this.UnderlyingPaymentStreamFormulaDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        return IsSetUnderlyingPaymentStreamFormulaDesc();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormulaDesc()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormulaDesc);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaLength UnderlyingPaymentStreamFormulaLength
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        this.UnderlyingPaymentStreamFormulaLength = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaLength Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        return IsSetUnderlyingPaymentStreamFormulaLength();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormulaLength()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormulaLength);
                    }

                }
                public class NoUnderlyingDividendPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendPeriodSequence, Tags.UnderlyingDividendPeriodStartDateUnadjusted, Tags.UnderlyingDividendPeriodEndDateUnadjusted, Tags.UnderlyingDividendPeriodUnderlierRefID, Tags.UnderlyingDividendPeriodStrikePrice, Tags.UnderlyingDividendPeriodBusinessDayConvention, Tags.NoUnderlyingDividendPeriodBusinessCenters, Tags.UnderlyingDividendPeriodValuationDateUnadjusted, Tags.UnderlyingDividendPeriodValuationDateRelativeTo, Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod, Tags.UnderlyingDividendPeriodValuationDateOffsetUnit, Tags.UnderlyingDividendPeriodValuationDateOffsetDayType, Tags.UnderlyingDividendPeriodValuationDateAdjusted, Tags.UnderlyingDividendPeriodPaymentDateUnadjusted, Tags.UnderlyingDividendPeriodPaymentDateRelativeTo, Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod, Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit, Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType, Tags.UnderlyingDividendPeriodPaymentDateAdjusted, Tags.UnderlyingDividendPeriodXID, 0 };

                    public NoUnderlyingDividendPeriodsGroup()
                      : base(Tags.NoUnderlyingDividendPeriods, Tags.UnderlyingDividendPeriodSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodSequence UnderlyingDividendPeriodSequence
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodSequence val = new QuickFix.Fields.UnderlyingDividendPeriodSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        this.UnderlyingDividendPeriodSequence = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodSequence Get(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        return IsSetUnderlyingDividendPeriodSequence();
                    }

                    public bool IsSetUnderlyingDividendPeriodSequence()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodSequence);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted UnderlyingDividendPeriodStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted UnderlyingDividendPeriodEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID UnderlyingDividendPeriodUnderlierRefID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val = new QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        this.UnderlyingDividendPeriodUnderlierRefID = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID Get(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        return IsSetUnderlyingDividendPeriodUnderlierRefID();
                    }

                    public bool IsSetUnderlyingDividendPeriodUnderlierRefID()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodUnderlierRefID);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodStrikePrice UnderlyingDividendPeriodStrikePrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val = new QuickFix.Fields.UnderlyingDividendPeriodStrikePrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        this.UnderlyingDividendPeriodStrikePrice = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodStrikePrice Get(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        return IsSetUnderlyingDividendPeriodStrikePrice();
                    }

                    public bool IsSetUnderlyingDividendPeriodStrikePrice()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodStrikePrice);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention UnderlyingDividendPeriodBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        this.UnderlyingDividendPeriodBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        return IsSetUnderlyingDividendPeriodBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingDividendPeriodBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters NoUnderlyingDividendPeriodBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        this.NoUnderlyingDividendPeriodBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        return IsSetNoUnderlyingDividendPeriodBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingDividendPeriodBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingDividendPeriodBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted UnderlyingDividendPeriodValuationDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodValuationDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo UnderlyingDividendPeriodValuationDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        this.UnderlyingDividendPeriodValuationDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateRelativeTo();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod UnderlyingDividendPeriodValuationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit UnderlyingDividendPeriodValuationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType UnderlyingDividendPeriodValuationDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted UnderlyingDividendPeriodValuationDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        this.UnderlyingDividendPeriodValuationDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateAdjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted UnderlyingDividendPeriodPaymentDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo UnderlyingDividendPeriodPaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateRelativeTo();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod UnderlyingDividendPeriodPaymentDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit UnderlyingDividendPeriodPaymentDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType UnderlyingDividendPeriodPaymentDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted UnderlyingDividendPeriodPaymentDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateAdjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodXID UnderlyingDividendPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodXID val = new QuickFix.Fields.UnderlyingDividendPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        this.UnderlyingDividendPeriodXID = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodXID Get(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        return IsSetUnderlyingDividendPeriodXID();
                    }

                    public bool IsSetUnderlyingDividendPeriodXID()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodXID);
                    }
                    public class NoUnderlyingDividendPeriodBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingDividendPeriodBusinessCenter, 0 };

                        public NoUnderlyingDividendPeriodBusinessCentersGroup()
                          : base(Tags.NoUnderlyingDividendPeriodBusinessCenters, Tags.UnderlyingDividendPeriodBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingDividendPeriodBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter UnderlyingDividendPeriodBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val = new QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            this.UnderlyingDividendPeriodBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter Get(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            return IsSetUnderlyingDividendPeriodBusinessCenter();
                        }

                        public bool IsSetUnderlyingDividendPeriodBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingDividendPeriodBusinessCenter);
                        }

                    }
                }
                public class NoUnderlyingDividendFXTriggerDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendFXTriggerDateBusinessCenter, 0 };

                    public NoUnderlyingDividendFXTriggerDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters, Tags.UnderlyingDividendFXTriggerDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendFXTriggerDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter UnderlyingDividendFXTriggerDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        this.UnderlyingDividendFXTriggerDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        return IsSetUnderlyingDividendFXTriggerDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingDividendFXTriggerDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingDividendFXTriggerDateBusinessCenter);
                    }

                }
                public class NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters, Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter UnderlyingDividendAccrualPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingDividendAccrualPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingDividendAccrualPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingDividendAccrualPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingReturnRatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingReturnRatePriceSequence, Tags.UnderlyingReturnRateCommissionBasis, Tags.UnderlyingReturnRateCommissionAmount, Tags.UnderlyingReturnRateCommissionCurrency, Tags.UnderlyingReturnRateTotalCommissionPerTrade, Tags.UnderlyingReturnRateDeterminationMethod, Tags.NoUnderlyingReturnRatePrices, Tags.NoUnderlyingReturnRateFXConversions, Tags.UnderlyingReturnRateAmountRelativeTo, Tags.UnderlyingReturnRateQuoteMeasureType, Tags.UnderlyingReturnRateQuoteUnits, Tags.UnderlyingReturnRateQuoteMethod, Tags.UnderlyingReturnRateQuoteCurrency, Tags.UnderlyingReturnRateQuoteCurrencyType, Tags.UnderlyingReturnRateQuoteTimeType, Tags.UnderlyingReturnRateQuoteTime, Tags.UnderlyingReturnRateQuoteDate, Tags.UnderlyingReturnRateQuoteExpirationTime, Tags.UnderlyingReturnRateQuoteBusinessCenter, Tags.UnderlyingReturnRateQuoteExchange, Tags.NoUnderlyingReturnRateInformationSources, Tags.UnderlyingReturnRateQuotePricingModel, Tags.UnderlyingReturnRateCashFlowType, Tags.NoUnderlyingReturnRateDates, Tags.UnderlyingReturnRateValuationTimeType, Tags.UnderlyingReturnRateValuationTime, Tags.UnderlyingReturnRateValuationTimeBusinessCenter, Tags.UnderlyingReturnRateValuationPriceOption, Tags.UnderlyingReturnRateFinalPriceFallback, 0 };

                    public NoUnderlyingReturnRatesGroup()
                      : base(Tags.NoUnderlyingReturnRates, Tags.UnderlyingReturnRatePriceSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingReturnRatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingReturnRatePriceSequence UnderlyingReturnRatePriceSequence
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRatePriceSequence val = new QuickFix.Fields.UnderlyingReturnRatePriceSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        this.UnderlyingReturnRatePriceSequence = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRatePriceSequence Get(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        return IsSetUnderlyingReturnRatePriceSequence();
                    }

                    public bool IsSetUnderlyingReturnRatePriceSequence()
                    {
                        return IsSetField(Tags.UnderlyingReturnRatePriceSequence);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionBasis UnderlyingReturnRateCommissionBasis
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionBasis val = new QuickFix.Fields.UnderlyingReturnRateCommissionBasis();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        this.UnderlyingReturnRateCommissionBasis = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionBasis Get(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        return IsSetUnderlyingReturnRateCommissionBasis();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionBasis()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionBasis);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionAmount UnderlyingReturnRateCommissionAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionAmount val = new QuickFix.Fields.UnderlyingReturnRateCommissionAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        this.UnderlyingReturnRateCommissionAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionAmount Get(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        return IsSetUnderlyingReturnRateCommissionAmount();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionAmount()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionAmount);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionCurrency UnderlyingReturnRateCommissionCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val = new QuickFix.Fields.UnderlyingReturnRateCommissionCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        this.UnderlyingReturnRateCommissionCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionCurrency Get(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        return IsSetUnderlyingReturnRateCommissionCurrency();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionCurrency()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionCurrency);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade UnderlyingReturnRateTotalCommissionPerTrade
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val = new QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        this.UnderlyingReturnRateTotalCommissionPerTrade = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade Get(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        return IsSetUnderlyingReturnRateTotalCommissionPerTrade();
                    }

                    public bool IsSetUnderlyingReturnRateTotalCommissionPerTrade()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateTotalCommissionPerTrade);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateDeterminationMethod UnderlyingReturnRateDeterminationMethod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val = new QuickFix.Fields.UnderlyingReturnRateDeterminationMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        this.UnderlyingReturnRateDeterminationMethod = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateDeterminationMethod Get(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        return IsSetUnderlyingReturnRateDeterminationMethod();
                    }

                    public bool IsSetUnderlyingReturnRateDeterminationMethod()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateDeterminationMethod);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRatePrices NoUnderlyingReturnRatePrices
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRatePrices val = new QuickFix.Fields.NoUnderlyingReturnRatePrices();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        this.NoUnderlyingReturnRatePrices = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRatePrices Get(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        return IsSetNoUnderlyingReturnRatePrices();
                    }

                    public bool IsSetNoUnderlyingReturnRatePrices()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRatePrices);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateFXConversions NoUnderlyingReturnRateFXConversions
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateFXConversions val = new QuickFix.Fields.NoUnderlyingReturnRateFXConversions();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        this.NoUnderlyingReturnRateFXConversions = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateFXConversions Get(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        return IsSetNoUnderlyingReturnRateFXConversions();
                    }

                    public bool IsSetNoUnderlyingReturnRateFXConversions()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateFXConversions);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo UnderlyingReturnRateAmountRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        this.UnderlyingReturnRateAmountRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        return IsSetUnderlyingReturnRateAmountRelativeTo();
                    }

                    public bool IsSetUnderlyingReturnRateAmountRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateAmountRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType UnderlyingReturnRateQuoteMeasureType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val = new QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        this.UnderlyingReturnRateQuoteMeasureType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType Get(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteMeasureType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteMeasureType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteMeasureType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteUnits UnderlyingReturnRateQuoteUnits
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteUnits val = new QuickFix.Fields.UnderlyingReturnRateQuoteUnits();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        this.UnderlyingReturnRateQuoteUnits = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteUnits Get(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        return IsSetUnderlyingReturnRateQuoteUnits();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteUnits()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteUnits);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteMethod UnderlyingReturnRateQuoteMethod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteMethod val = new QuickFix.Fields.UnderlyingReturnRateQuoteMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        this.UnderlyingReturnRateQuoteMethod = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteMethod Get(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        return IsSetUnderlyingReturnRateQuoteMethod();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteMethod()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteMethod);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrency UnderlyingReturnRateQuoteCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val = new QuickFix.Fields.UnderlyingReturnRateQuoteCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        this.UnderlyingReturnRateQuoteCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrency Get(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        return IsSetUnderlyingReturnRateQuoteCurrency();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteCurrency()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteCurrency);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType UnderlyingReturnRateQuoteCurrencyType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val = new QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        this.UnderlyingReturnRateQuoteCurrencyType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType Get(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteCurrencyType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteCurrencyType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteCurrencyType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteTimeType UnderlyingReturnRateQuoteTimeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val = new QuickFix.Fields.UnderlyingReturnRateQuoteTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        this.UnderlyingReturnRateQuoteTimeType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteTimeType Get(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteTimeType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteTimeType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteTimeType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteTime UnderlyingReturnRateQuoteTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteTime val = new QuickFix.Fields.UnderlyingReturnRateQuoteTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        this.UnderlyingReturnRateQuoteTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteTime Get(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        return IsSetUnderlyingReturnRateQuoteTime();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteDate UnderlyingReturnRateQuoteDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteDate val = new QuickFix.Fields.UnderlyingReturnRateQuoteDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        this.UnderlyingReturnRateQuoteDate = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteDate Get(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        return IsSetUnderlyingReturnRateQuoteDate();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteDate()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteDate);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime UnderlyingReturnRateQuoteExpirationTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val = new QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        this.UnderlyingReturnRateQuoteExpirationTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime Get(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        return IsSetUnderlyingReturnRateQuoteExpirationTime();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteExpirationTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteExpirationTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter UnderlyingReturnRateQuoteBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        this.UnderlyingReturnRateQuoteBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        return IsSetUnderlyingReturnRateQuoteBusinessCenter();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteExchange UnderlyingReturnRateQuoteExchange
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteExchange val = new QuickFix.Fields.UnderlyingReturnRateQuoteExchange();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        this.UnderlyingReturnRateQuoteExchange = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteExchange Get(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        return IsSetUnderlyingReturnRateQuoteExchange();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteExchange()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteExchange);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateInformationSources NoUnderlyingReturnRateInformationSources
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateInformationSources val = new QuickFix.Fields.NoUnderlyingReturnRateInformationSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        this.NoUnderlyingReturnRateInformationSources = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateInformationSources Get(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        return IsSetNoUnderlyingReturnRateInformationSources();
                    }

                    public bool IsSetNoUnderlyingReturnRateInformationSources()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateInformationSources);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuotePricingModel UnderlyingReturnRateQuotePricingModel
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val = new QuickFix.Fields.UnderlyingReturnRateQuotePricingModel();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        this.UnderlyingReturnRateQuotePricingModel = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuotePricingModel Get(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        return IsSetUnderlyingReturnRateQuotePricingModel();
                    }

                    public bool IsSetUnderlyingReturnRateQuotePricingModel()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuotePricingModel);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCashFlowType UnderlyingReturnRateCashFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCashFlowType val = new QuickFix.Fields.UnderlyingReturnRateCashFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        this.UnderlyingReturnRateCashFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCashFlowType Get(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        return IsSetUnderlyingReturnRateCashFlowType();
                    }

                    public bool IsSetUnderlyingReturnRateCashFlowType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCashFlowType);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateDates NoUnderlyingReturnRateDates
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateDates val = new QuickFix.Fields.NoUnderlyingReturnRateDates();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        this.NoUnderlyingReturnRateDates = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateDates Get(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        return IsSetNoUnderlyingReturnRateDates();
                    }

                    public bool IsSetNoUnderlyingReturnRateDates()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateDates);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeType UnderlyingReturnRateValuationTimeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTimeType val = new QuickFix.Fields.UnderlyingReturnRateValuationTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        this.UnderlyingReturnRateValuationTimeType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeType Get(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        return IsSetUnderlyingReturnRateValuationTimeType();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTimeType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTimeType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTime UnderlyingReturnRateValuationTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTime val = new QuickFix.Fields.UnderlyingReturnRateValuationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        this.UnderlyingReturnRateValuationTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTime Get(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        return IsSetUnderlyingReturnRateValuationTime();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter UnderlyingReturnRateValuationTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        this.UnderlyingReturnRateValuationTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        return IsSetUnderlyingReturnRateValuationTimeBusinessCenter();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTimeBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTimeBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationPriceOption UnderlyingReturnRateValuationPriceOption
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val = new QuickFix.Fields.UnderlyingReturnRateValuationPriceOption();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        this.UnderlyingReturnRateValuationPriceOption = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationPriceOption Get(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        return IsSetUnderlyingReturnRateValuationPriceOption();
                    }

                    public bool IsSetUnderlyingReturnRateValuationPriceOption()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationPriceOption);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback UnderlyingReturnRateFinalPriceFallback
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val = new QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        this.UnderlyingReturnRateFinalPriceFallback = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback Get(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        return IsSetUnderlyingReturnRateFinalPriceFallback();
                    }

                    public bool IsSetUnderlyingReturnRateFinalPriceFallback()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateFinalPriceFallback);
                    }
                    public class NoUnderlyingReturnRatePricesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRatePriceBasis, Tags.UnderlyingReturnRatePrice, Tags.UnderlyingReturnRatePriceCurrency, Tags.UnderlyingReturnRatePriceType, 0 };

                        public NoUnderlyingReturnRatePricesGroup()
                          : base(Tags.NoUnderlyingReturnRatePrices, Tags.UnderlyingReturnRatePriceBasis, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRatePricesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceBasis UnderlyingReturnRatePriceBasis
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceBasis val = new QuickFix.Fields.UnderlyingReturnRatePriceBasis();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            this.UnderlyingReturnRatePriceBasis = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceBasis Get(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            return IsSetUnderlyingReturnRatePriceBasis();
                        }

                        public bool IsSetUnderlyingReturnRatePriceBasis()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceBasis);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePrice UnderlyingReturnRatePrice
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePrice val = new QuickFix.Fields.UnderlyingReturnRatePrice();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            this.UnderlyingReturnRatePrice = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePrice Get(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            return IsSetUnderlyingReturnRatePrice();
                        }

                        public bool IsSetUnderlyingReturnRatePrice()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePrice);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePriceCurrency UnderlyingReturnRatePriceCurrency
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceCurrency val = new QuickFix.Fields.UnderlyingReturnRatePriceCurrency();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            this.UnderlyingReturnRatePriceCurrency = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceCurrency Get(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            return IsSetUnderlyingReturnRatePriceCurrency();
                        }

                        public bool IsSetUnderlyingReturnRatePriceCurrency()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceCurrency);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePriceType UnderlyingReturnRatePriceType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceType val = new QuickFix.Fields.UnderlyingReturnRatePriceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            this.UnderlyingReturnRatePriceType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceType Get(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            return IsSetUnderlyingReturnRatePriceType();
                        }

                        public bool IsSetUnderlyingReturnRatePriceType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceType);
                        }

                    }
                    public class NoUnderlyingReturnRateFXConversionsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateFXCurrencySymbol, Tags.UnderlyingReturnRateFXRate, Tags.UnderlyingReturnRateFXRateCalc, 0 };

                        public NoUnderlyingReturnRateFXConversionsGroup()
                          : base(Tags.NoUnderlyingReturnRateFXConversions, Tags.UnderlyingReturnRateFXCurrencySymbol, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateFXConversionsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol UnderlyingReturnRateFXCurrencySymbol
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val = new QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            this.UnderlyingReturnRateFXCurrencySymbol = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol Get(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            return IsSetUnderlyingReturnRateFXCurrencySymbol();
                        }

                        public bool IsSetUnderlyingReturnRateFXCurrencySymbol()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXCurrencySymbol);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateFXRate UnderlyingReturnRateFXRate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXRate val = new QuickFix.Fields.UnderlyingReturnRateFXRate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            this.UnderlyingReturnRateFXRate = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXRate Get(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            return IsSetUnderlyingReturnRateFXRate();
                        }

                        public bool IsSetUnderlyingReturnRateFXRate()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXRate);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateFXRateCalc UnderlyingReturnRateFXRateCalc
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXRateCalc val = new QuickFix.Fields.UnderlyingReturnRateFXRateCalc();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            this.UnderlyingReturnRateFXRateCalc = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXRateCalc Get(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            return IsSetUnderlyingReturnRateFXRateCalc();
                        }

                        public bool IsSetUnderlyingReturnRateFXRateCalc()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXRateCalc);
                        }

                    }
                    public class NoUnderlyingReturnRateInformationSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateInformationSource, Tags.UnderlyingReturnRateReferencePage, Tags.UnderlyingReturnRateReferencePageHeading, 0 };

                        public NoUnderlyingReturnRateInformationSourcesGroup()
                          : base(Tags.NoUnderlyingReturnRateInformationSources, Tags.UnderlyingReturnRateInformationSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateInformationSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateInformationSource UnderlyingReturnRateInformationSource
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateInformationSource val = new QuickFix.Fields.UnderlyingReturnRateInformationSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            this.UnderlyingReturnRateInformationSource = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateInformationSource Get(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            return IsSetUnderlyingReturnRateInformationSource();
                        }

                        public bool IsSetUnderlyingReturnRateInformationSource()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateInformationSource);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateReferencePage UnderlyingReturnRateReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateReferencePage val = new QuickFix.Fields.UnderlyingReturnRateReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            this.UnderlyingReturnRateReferencePage = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateReferencePage Get(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            return IsSetUnderlyingReturnRateReferencePage();
                        }

                        public bool IsSetUnderlyingReturnRateReferencePage()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateReferencePage);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateReferencePageHeading UnderlyingReturnRateReferencePageHeading
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val = new QuickFix.Fields.UnderlyingReturnRateReferencePageHeading();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            this.UnderlyingReturnRateReferencePageHeading = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateReferencePageHeading Get(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            return IsSetUnderlyingReturnRateReferencePageHeading();
                        }

                        public bool IsSetUnderlyingReturnRateReferencePageHeading()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateReferencePageHeading);
                        }

                    }
                    public class NoUnderlyingReturnRateDatesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateDateMode, Tags.NoUnderlyingReturnRateValuationDates, Tags.UnderlyingReturnRateValuationDateRelativeTo, Tags.UnderlyingReturnRateValuationDateOffsetPeriod, Tags.UnderlyingReturnRateValuationDateOffsetUnit, Tags.UnderlyingReturnRateValuationDateOffsetDayType, Tags.UnderlyingReturnRateValuationStartDateUnadjusted, Tags.UnderlyingReturnRateValuationStartDateRelativeTo, Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod, Tags.UnderlyingReturnRateValuationStartDateOffsetUnit, Tags.UnderlyingReturnRateValuationStartDateOffsetDayType, Tags.UnderlyingReturnRateValuationStartDateAdjusted, Tags.UnderlyingReturnRateValuationEndDateUnadjusted, Tags.UnderlyingReturnRateValuationEndDateRelativeTo, Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod, Tags.UnderlyingReturnRateValuationEndDateOffsetUnit, Tags.UnderlyingReturnRateValuationEndDateOffsetDayType, Tags.UnderlyingReturnRateValuationEndDateAdjusted, Tags.UnderlyingReturnRateValuationFrequencyPeriod, Tags.UnderlyingReturnRateValuationFrequencyUnit, Tags.UnderlyingReturnRateValuationFrequencyRollConvention, Tags.UnderlyingReturnRateValuationDateBusinessDayConvention, Tags.NoUnderlyingReturnRateValuationDateBusinessCenters, 0 };

                        public NoUnderlyingReturnRateDatesGroup()
                          : base(Tags.NoUnderlyingReturnRateDates, Tags.UnderlyingReturnRateDateMode, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateDatesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateDateMode UnderlyingReturnRateDateMode
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateDateMode val = new QuickFix.Fields.UnderlyingReturnRateDateMode();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            this.UnderlyingReturnRateDateMode = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateDateMode Get(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            return IsSetUnderlyingReturnRateDateMode();
                        }

                        public bool IsSetUnderlyingReturnRateDateMode()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateDateMode);
                        }
                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDates NoUnderlyingReturnRateValuationDates
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingReturnRateValuationDates val = new QuickFix.Fields.NoUnderlyingReturnRateValuationDates();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            this.NoUnderlyingReturnRateValuationDates = val;
                        }

                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDates Get(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            return IsSetNoUnderlyingReturnRateValuationDates();
                        }

                        public bool IsSetNoUnderlyingReturnRateValuationDates()
                        {
                            return IsSetField(Tags.NoUnderlyingReturnRateValuationDates);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo UnderlyingReturnRateValuationDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod UnderlyingReturnRateValuationDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit UnderlyingReturnRateValuationDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType UnderlyingReturnRateValuationDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted UnderlyingReturnRateValuationStartDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            this.UnderlyingReturnRateValuationStartDateUnadjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateUnadjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateUnadjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateUnadjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo UnderlyingReturnRateValuationStartDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationStartDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod UnderlyingReturnRateValuationStartDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit UnderlyingReturnRateValuationStartDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType UnderlyingReturnRateValuationStartDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted UnderlyingReturnRateValuationStartDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            this.UnderlyingReturnRateValuationStartDateAdjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateAdjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateAdjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateAdjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted UnderlyingReturnRateValuationEndDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            this.UnderlyingReturnRateValuationEndDateUnadjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateUnadjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateUnadjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateUnadjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo UnderlyingReturnRateValuationEndDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationEndDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod UnderlyingReturnRateValuationEndDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit UnderlyingReturnRateValuationEndDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType UnderlyingReturnRateValuationEndDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted UnderlyingReturnRateValuationEndDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            this.UnderlyingReturnRateValuationEndDateAdjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateAdjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateAdjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateAdjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod UnderlyingReturnRateValuationFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit UnderlyingReturnRateValuationFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention UnderlyingReturnRateValuationFrequencyRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyRollConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyRollConvention();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyRollConvention()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyRollConvention);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention UnderlyingReturnRateValuationDateBusinessDayConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            this.UnderlyingReturnRateValuationDateBusinessDayConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateBusinessDayConvention();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateBusinessDayConvention()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateBusinessDayConvention);
                        }
                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters NoUnderlyingReturnRateValuationDateBusinessCenters
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            this.NoUnderlyingReturnRateValuationDateBusinessCenters = val;
                        }

                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            return IsSetNoUnderlyingReturnRateValuationDateBusinessCenters();
                        }

                        public bool IsSetNoUnderlyingReturnRateValuationDateBusinessCenters()
                        {
                            return IsSetField(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters);
                        }
                        public class NoUnderlyingReturnRateValuationDatesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingReturnRateValuationDate, Tags.UnderlyingReturnRateValuationDateType, 0 };

                            public NoUnderlyingReturnRateValuationDatesGroup()
                              : base(Tags.NoUnderlyingReturnRateValuationDates, Tags.UnderlyingReturnRateValuationDate, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingReturnRateValuationDatesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDate UnderlyingReturnRateValuationDate
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDate val = new QuickFix.Fields.UnderlyingReturnRateValuationDate();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                this.UnderlyingReturnRateValuationDate = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDate Get(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                return IsSetUnderlyingReturnRateValuationDate();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDate()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDate);
                            }
                            public QuickFix.Fields.UnderlyingReturnRateValuationDateType UnderlyingReturnRateValuationDateType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDateType val = new QuickFix.Fields.UnderlyingReturnRateValuationDateType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                this.UnderlyingReturnRateValuationDateType = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateType Get(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                return IsSetUnderlyingReturnRateValuationDateType();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDateType()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDateType);
                            }

                        }
                        public class NoUnderlyingReturnRateValuationDateBusinessCentersGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingReturnRateValuationDateBusinessCenter, 0 };

                            public NoUnderlyingReturnRateValuationDateBusinessCentersGroup()
                              : base(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters, Tags.UnderlyingReturnRateValuationDateBusinessCenter, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingReturnRateValuationDateBusinessCentersGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter UnderlyingReturnRateValuationDateBusinessCenter
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                this.UnderlyingReturnRateValuationDateBusinessCenter = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                return IsSetUnderlyingReturnRateValuationDateBusinessCenter();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDateBusinessCenter()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDateBusinessCenter);
                            }

                        }
                    }
                }
                public class NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter);
                    }

                }
                public class NoUnderlyingNonDeliverableFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingNonDeliverableFixingDate, Tags.UnderlyingNonDeliverableFixingDateType, 0 };

                    public NoUnderlyingNonDeliverableFixingDatesGroup()
                      : base(Tags.NoUnderlyingNonDeliverableFixingDates, Tags.UnderlyingNonDeliverableFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingNonDeliverableFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDate UnderlyingNonDeliverableFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingNonDeliverableFixingDate val = new QuickFix.Fields.UnderlyingNonDeliverableFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        this.UnderlyingNonDeliverableFixingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDate Get(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        return IsSetUnderlyingNonDeliverableFixingDate();
                    }

                    public bool IsSetUnderlyingNonDeliverableFixingDate()
                    {
                        return IsSetField(Tags.UnderlyingNonDeliverableFixingDate);
                    }
                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDateType UnderlyingNonDeliverableFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val = new QuickFix.Fields.UnderlyingNonDeliverableFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        this.UnderlyingNonDeliverableFixingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDateType Get(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        return IsSetUnderlyingNonDeliverableFixingDateType();
                    }

                    public bool IsSetUnderlyingNonDeliverableFixingDateType()
                    {
                        return IsSetField(Tags.UnderlyingNonDeliverableFixingDateType);
                    }

                }
                public class NoUnderlyingSettlRateFallbacksGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingSettlRatePostponementMaximumDays, Tags.UnderlyingSettlRateFallbackRateSource, Tags.UnderlyingSettlRateFallbackReferencePage, Tags.UnderlyingSettlRatePostponementSurvey, Tags.UnderlyingSettlRatePostponementCalculationAgent, 0 };

                    public NoUnderlyingSettlRateFallbacksGroup()
                      : base(Tags.NoUnderlyingSettlRateFallbacks, Tags.UnderlyingSettlRatePostponementMaximumDays, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingSettlRateFallbacksGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays UnderlyingSettlRatePostponementMaximumDays
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val = new QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        this.UnderlyingSettlRatePostponementMaximumDays = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays Get(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        return IsSetUnderlyingSettlRatePostponementMaximumDays();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementMaximumDays()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementMaximumDays);
                    }
                    public QuickFix.Fields.UnderlyingSettlRateFallbackRateSource UnderlyingSettlRateFallbackRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val = new QuickFix.Fields.UnderlyingSettlRateFallbackRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        this.UnderlyingSettlRateFallbackRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRateFallbackRateSource Get(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        return IsSetUnderlyingSettlRateFallbackRateSource();
                    }

                    public bool IsSetUnderlyingSettlRateFallbackRateSource()
                    {
                        return IsSetField(Tags.UnderlyingSettlRateFallbackRateSource);
                    }
                    public QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage UnderlyingSettlRateFallbackReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val = new QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        this.UnderlyingSettlRateFallbackReferencePage = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage Get(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        return IsSetUnderlyingSettlRateFallbackReferencePage();
                    }

                    public bool IsSetUnderlyingSettlRateFallbackReferencePage()
                    {
                        return IsSetField(Tags.UnderlyingSettlRateFallbackReferencePage);
                    }
                    public QuickFix.Fields.UnderlyingSettlRatePostponementSurvey UnderlyingSettlRatePostponementSurvey
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val = new QuickFix.Fields.UnderlyingSettlRatePostponementSurvey();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        this.UnderlyingSettlRatePostponementSurvey = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementSurvey Get(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        return IsSetUnderlyingSettlRatePostponementSurvey();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementSurvey()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementSurvey);
                    }
                    public QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent UnderlyingSettlRatePostponementCalculationAgent
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val = new QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        this.UnderlyingSettlRatePostponementCalculationAgent = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent Get(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        return IsSetUnderlyingSettlRatePostponementCalculationAgent();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementCalculationAgent()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementCalculationAgent);
                    }

                }
                public class NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters, Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter UnderlyingPaymentStreamCompoundingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDatesBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamCompoundingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamCompoundingDate, Tags.UnderlyingPaymentStreamCompoundingDateType, 0 };

                    public NoUnderlyingPaymentStreamCompoundingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamCompoundingDates, Tags.UnderlyingPaymentStreamCompoundingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamCompoundingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate UnderlyingPaymentStreamCompoundingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType UnderlyingPaymentStreamCompoundingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDateType);
                    }

                }
                public class NoUnderlyingPaymentSchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleType, Tags.UnderlyingPaymentScheduleStubType, Tags.UnderlyingPaymentScheduleStartDateUnadjusted, Tags.UnderlyingPaymentScheduleEndDateUnadjusted, Tags.UnderlyingPaymentSchedulePaySide, Tags.UnderlyingPaymentScheduleReceiveSide, Tags.UnderlyingPaymentScheduleNotional, Tags.UnderlyingPaymentScheduleCurrency, Tags.UnderlyingPaymentScheduleRate, Tags.UnderlyingPaymentScheduleRateMultiplier, Tags.UnderlyingPaymentScheduleRateSpread, Tags.UnderlyingPaymentScheduleRateSpreadPositionType, Tags.UnderlyingPaymentScheduleFixedAmount, Tags.UnderlyingPaymentScheduleFixedCurrency, Tags.UnderlyingPaymentScheduleStepFrequencyPeriod, Tags.UnderlyingPaymentScheduleStepFrequencyUnit, Tags.UnderlyingPaymentScheduleStepOffsetValue, Tags.UnderlyingPaymentScheduleStepRate, Tags.UnderlyingPaymentScheduleStepOffsetRate, Tags.UnderlyingPaymentScheduleStepRelativeTo, Tags.NoUnderlyingPaymentScheduleRateSources, Tags.UnderlyingPaymentScheduleFixingDateUnadjusted, Tags.UnderlyingPaymentScheduleWeight, Tags.UnderlyingPaymentScheduleFixingDateRelativeTo, Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn, Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters, Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod, Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit, Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType, Tags.UnderlyingPaymentScheduleFixingDateAdjusted, Tags.UnderlyingPaymentScheduleFixingTime, Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter, Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo, Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention, Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType, Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted, Tags.UnderlyingPaymentScheduleXID, Tags.UnderlyingPaymentScheduleXIDRef, Tags.UnderlyingPaymentScheduleRateCurrency, Tags.UnderlyingPaymentScheduleRateUnitOfMeasure, Tags.UnderlyingPaymentScheduleRateConversionFactor, Tags.UnderlyingPaymentScheduleRateSpreadType, Tags.UnderlyingPaymentScheduleSettlPeriodPrice, Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency, Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure, Tags.UnderlyingPaymentScheduleStepUnitOfMeasure, Tags.UnderlyingPaymentScheduleFixingDayDistribution, Tags.UnderlyingPaymentScheduleFixingDayCount, Tags.NoUnderlyingPaymentScheduleFixingDays, Tags.UnderlyingPaymentScheduleFixingLagPeriod, Tags.UnderlyingPaymentScheduleFixingLagUnit, Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod, Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit, Tags.UnderlyingPaymentScheduleRateTreatment, 0 };

                    public NoUnderlyingPaymentSchedulesGroup()
                      : base(Tags.NoUnderlyingPaymentSchedules, Tags.UnderlyingPaymentScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentSchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleType UnderlyingPaymentScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleType val = new QuickFix.Fields.UnderlyingPaymentScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        this.UnderlyingPaymentScheduleType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleType Get(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        return IsSetUnderlyingPaymentScheduleType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStubType UnderlyingPaymentScheduleStubType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStubType val = new QuickFix.Fields.UnderlyingPaymentScheduleStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        this.UnderlyingPaymentScheduleStubType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStubType Get(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        return IsSetUnderlyingPaymentScheduleStubType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStubType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStubType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted UnderlyingPaymentScheduleStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted UnderlyingPaymentScheduleEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentSchedulePaySide UnderlyingPaymentSchedulePaySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentSchedulePaySide val = new QuickFix.Fields.UnderlyingPaymentSchedulePaySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        this.UnderlyingPaymentSchedulePaySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentSchedulePaySide Get(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        return IsSetUnderlyingPaymentSchedulePaySide();
                    }

                    public bool IsSetUnderlyingPaymentSchedulePaySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentSchedulePaySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide UnderlyingPaymentScheduleReceiveSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val = new QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        this.UnderlyingPaymentScheduleReceiveSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide Get(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        return IsSetUnderlyingPaymentScheduleReceiveSide();
                    }

                    public bool IsSetUnderlyingPaymentScheduleReceiveSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleReceiveSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleNotional UnderlyingPaymentScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleNotional val = new QuickFix.Fields.UnderlyingPaymentScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        this.UnderlyingPaymentScheduleNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleNotional Get(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        return IsSetUnderlyingPaymentScheduleNotional();
                    }

                    public bool IsSetUnderlyingPaymentScheduleNotional()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleNotional);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleCurrency UnderlyingPaymentScheduleCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        this.UnderlyingPaymentScheduleCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRate UnderlyingPaymentScheduleRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRate val = new QuickFix.Fields.UnderlyingPaymentScheduleRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        this.UnderlyingPaymentScheduleRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRate Get(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier UnderlyingPaymentScheduleRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        this.UnderlyingPaymentScheduleRateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpread UnderlyingPaymentScheduleRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        this.UnderlyingPaymentScheduleRateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpread Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpread();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType UnderlyingPaymentScheduleRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentScheduleRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount UnderlyingPaymentScheduleFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val = new QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        this.UnderlyingPaymentScheduleFixedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount Get(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixedAmount();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixedAmount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixedAmount);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency UnderlyingPaymentScheduleFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        this.UnderlyingPaymentScheduleFixedCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixedCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixedCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixedCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod UnderlyingPaymentScheduleStepFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        this.UnderlyingPaymentScheduleStepFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit UnderlyingPaymentScheduleStepFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        this.UnderlyingPaymentScheduleStepFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepFrequencyUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue UnderlyingPaymentScheduleStepOffsetValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val = new QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        this.UnderlyingPaymentScheduleStepOffsetValue = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue Get(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepOffsetValue();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepOffsetValue()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepOffsetValue);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRate UnderlyingPaymentScheduleStepRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepRate val = new QuickFix.Fields.UnderlyingPaymentScheduleStepRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        this.UnderlyingPaymentScheduleStepRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRate Get(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate UnderlyingPaymentScheduleStepOffsetRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val = new QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        this.UnderlyingPaymentScheduleStepOffsetRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate Get(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepOffsetRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepOffsetRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepOffsetRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo UnderlyingPaymentScheduleStepRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleStepRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepRelativeTo);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources NoUnderlyingPaymentScheduleRateSources
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val = new QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        this.NoUnderlyingPaymentScheduleRateSources = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources Get(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleRateSources();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleRateSources()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleRateSources);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted UnderlyingPaymentScheduleFixingDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleWeight UnderlyingPaymentScheduleWeight
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleWeight val = new QuickFix.Fields.UnderlyingPaymentScheduleWeight();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        this.UnderlyingPaymentScheduleWeight = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleWeight Get(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        return IsSetUnderlyingPaymentScheduleWeight();
                    }

                    public bool IsSetUnderlyingPaymentScheduleWeight()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleWeight);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo UnderlyingPaymentScheduleFixingDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateBusinessDayCnvtn();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateBusinessDayCnvtn()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters NoUnderlyingPaymentScheduleFixingDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentScheduleFixingDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleFixingDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleFixingDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod UnderlyingPaymentScheduleFixingDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit UnderlyingPaymentScheduleFixingDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType UnderlyingPaymentScheduleFixingDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted UnderlyingPaymentScheduleFixingDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTime UnderlyingPaymentScheduleFixingTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        this.UnderlyingPaymentScheduleFixingTime = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTime Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingTime();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingTime()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingTime);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter UnderlyingPaymentScheduleFixingTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        this.UnderlyingPaymentScheduleFixingTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingTimeBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingTimeBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted UnderlyingPaymentScheduleInterimExchangeDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleXID UnderlyingPaymentScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleXID val = new QuickFix.Fields.UnderlyingPaymentScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        this.UnderlyingPaymentScheduleXID = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleXID Get(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        return IsSetUnderlyingPaymentScheduleXID();
                    }

                    public bool IsSetUnderlyingPaymentScheduleXID()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleXID);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleXIDRef UnderlyingPaymentScheduleXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val = new QuickFix.Fields.UnderlyingPaymentScheduleXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        this.UnderlyingPaymentScheduleXIDRef = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleXIDRef Get(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        return IsSetUnderlyingPaymentScheduleXIDRef();
                    }

                    public bool IsSetUnderlyingPaymentScheduleXIDRef()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleXIDRef);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency UnderlyingPaymentScheduleRateCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        this.UnderlyingPaymentScheduleRateCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure UnderlyingPaymentScheduleRateUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleRateUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor UnderlyingPaymentScheduleRateConversionFactor
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val = new QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        this.UnderlyingPaymentScheduleRateConversionFactor = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor Get(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateConversionFactor();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateConversionFactor()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateConversionFactor);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType UnderlyingPaymentScheduleRateSpreadType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        this.UnderlyingPaymentScheduleRateSpreadType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpreadType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpreadType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpreadType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice UnderlyingPaymentScheduleSettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPrice();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPrice()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPrice);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency UnderlyingPaymentScheduleSettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPriceCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure UnderlyingPaymentScheduleStepUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleStepUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution UnderlyingPaymentScheduleFixingDayDistribution
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        this.UnderlyingPaymentScheduleFixingDayDistribution = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDayDistribution();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDayDistribution()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayDistribution);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount UnderlyingPaymentScheduleFixingDayCount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        this.UnderlyingPaymentScheduleFixingDayCount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDayCount();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDayCount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayCount);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays NoUnderlyingPaymentScheduleFixingDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val = new QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        this.NoUnderlyingPaymentScheduleFixingDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays Get(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleFixingDays();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleFixingDays()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleFixingDays);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod UnderlyingPaymentScheduleFixingLagPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingLagPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingLagPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingLagPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingLagPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit UnderlyingPaymentScheduleFixingLagUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingLagUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingLagUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingLagUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingLagUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment UnderlyingPaymentScheduleRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val = new QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        this.UnderlyingPaymentScheduleRateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment Get(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateTreatment);
                    }
                    public class NoUnderlyingPaymentScheduleRateSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleRateSource, Tags.UnderlyingPaymentScheduleRateSourceType, Tags.UnderlyingPaymentScheduleReferencePage, 0 };

                        public NoUnderlyingPaymentScheduleRateSourcesGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleRateSources, Tags.UnderlyingPaymentScheduleRateSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleRateSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSource UnderlyingPaymentScheduleRateSource
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleRateSource val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            this.UnderlyingPaymentScheduleRateSource = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSource Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            return IsSetUnderlyingPaymentScheduleRateSource();
                        }

                        public bool IsSetUnderlyingPaymentScheduleRateSource()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleRateSource);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType UnderlyingPaymentScheduleRateSourceType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            this.UnderlyingPaymentScheduleRateSourceType = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            return IsSetUnderlyingPaymentScheduleRateSourceType();
                        }

                        public bool IsSetUnderlyingPaymentScheduleRateSourceType()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleRateSourceType);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleReferencePage UnderlyingPaymentScheduleReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val = new QuickFix.Fields.UnderlyingPaymentScheduleReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            this.UnderlyingPaymentScheduleReferencePage = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleReferencePage Get(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            return IsSetUnderlyingPaymentScheduleReferencePage();
                        }

                        public bool IsSetUnderlyingPaymentScheduleReferencePage()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleReferencePage);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters, Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter UnderlyingPaymentScheduleFixingDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentScheduleFixingDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter, 0 };

                        public NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters, Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            this.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleFixingDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleFixingDayOfWeek, Tags.UnderlyingPaymentScheduleFixingDayNumber, 0 };

                        public NoUnderlyingPaymentScheduleFixingDaysGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleFixingDays, Tags.UnderlyingPaymentScheduleFixingDayOfWeek, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleFixingDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek UnderlyingPaymentScheduleFixingDayOfWeek
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            this.UnderlyingPaymentScheduleFixingDayOfWeek = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDayOfWeek();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDayOfWeek()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayOfWeek);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber UnderlyingPaymentScheduleFixingDayNumber
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            this.UnderlyingPaymentScheduleFixingDayNumber = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDayNumber();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDayNumber()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayNumber);
                        }

                    }
                }
                public class NoUnderlyingPaymentStubsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStubType, Tags.UnderlyingPaymentStubLength, Tags.UnderlyingPaymentStubRate, Tags.UnderlyingPaymentStubFixedAmount, Tags.UnderlyingPaymentStubFixedCurrency, Tags.UnderlyingPaymentStubIndex, Tags.UnderlyingPaymentStubIndexSource, Tags.UnderlyingPaymentStubIndexCurvePeriod, Tags.UnderlyingPaymentStubIndexCurveUnit, Tags.UnderlyingPaymentStubIndexRateMultiplier, Tags.UnderlyingPaymentStubIndexRateSpread, Tags.UnderlyingPaymentStubIndexRateSpreadPositionType, Tags.UnderlyingPaymentStubIndexRateTreatment, Tags.UnderlyingPaymentStubIndexCapRate, Tags.UnderlyingPaymentStubIndexCapRateBuySide, Tags.UnderlyingPaymentStubIndexCapRateSellSide, Tags.UnderlyingPaymentStubIndexFloorRate, Tags.UnderlyingPaymentStubIndexFloorRateBuySide, Tags.UnderlyingPaymentStubIndexFloorRateSellSide, Tags.UnderlyingPaymentStubIndex2, Tags.UnderlyingPaymentStubIndex2Source, Tags.UnderlyingPaymentStubIndex2CurvePeriod, Tags.UnderlyingPaymentStubIndex2CurveUnit, Tags.UnderlyingPaymentStubIndex2RateMultiplier, Tags.UnderlyingPaymentStubIndex2RateSpread, Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType, Tags.UnderlyingPaymentStubIndex2RateTreatment, Tags.UnderlyingPaymentStubIndex2CapRate, Tags.UnderlyingPaymentStubIndex2FloorRate, Tags.UnderlyingPaymentStubStartDateUnadjusted, Tags.UnderlyingPaymentStubStartDateBusinessDayConvention, Tags.NoUnderlyingPaymentStubStartDateBusinessCenters, Tags.UnderlyingPaymentStubStartDateRelativeTo, Tags.UnderlyingPaymentStubStartDateOffsetPeriod, Tags.UnderlyingPaymentStubStartDateOffsetUnit, Tags.UnderlyingPaymentStubStartDateOffsetDayType, Tags.UnderlyingPaymentStubStartDateAdjusted, Tags.UnderlyingPaymentStubEndDateUnadjusted, Tags.UnderlyingPaymentStubEndDateBusinessDayConvention, Tags.NoUnderlyingPaymentStubEndDateBusinessCenters, Tags.UnderlyingPaymentStubEndDateRelativeTo, Tags.UnderlyingPaymentStubEndDateOffsetPeriod, Tags.UnderlyingPaymentStubEndDateOffsetUnit, Tags.UnderlyingPaymentStubEndDateOffsetDayType, Tags.UnderlyingPaymentStubEndDateAdjusted, 0 };

                    public NoUnderlyingPaymentStubsGroup()
                      : base(Tags.NoUnderlyingPaymentStubs, Tags.UnderlyingPaymentStubType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStubsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubType UnderlyingPaymentStubType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubType val = new QuickFix.Fields.UnderlyingPaymentStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        this.UnderlyingPaymentStubType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubType Get(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        return IsSetUnderlyingPaymentStubType();
                    }

                    public bool IsSetUnderlyingPaymentStubType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubLength UnderlyingPaymentStubLength
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubLength val = new QuickFix.Fields.UnderlyingPaymentStubLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        this.UnderlyingPaymentStubLength = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubLength Get(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        return IsSetUnderlyingPaymentStubLength();
                    }

                    public bool IsSetUnderlyingPaymentStubLength()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubLength);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubRate UnderlyingPaymentStubRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubRate val = new QuickFix.Fields.UnderlyingPaymentStubRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        this.UnderlyingPaymentStubRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubRate Get(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        return IsSetUnderlyingPaymentStubRate();
                    }

                    public bool IsSetUnderlyingPaymentStubRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubFixedAmount UnderlyingPaymentStubFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStubFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        this.UnderlyingPaymentStubFixedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        return IsSetUnderlyingPaymentStubFixedAmount();
                    }

                    public bool IsSetUnderlyingPaymentStubFixedAmount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubFixedAmount);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubFixedCurrency UnderlyingPaymentStubFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val = new QuickFix.Fields.UnderlyingPaymentStubFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        this.UnderlyingPaymentStubFixedCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubFixedCurrency Get(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        return IsSetUnderlyingPaymentStubFixedCurrency();
                    }

                    public bool IsSetUnderlyingPaymentStubFixedCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubFixedCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex UnderlyingPaymentStubIndex
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex val = new QuickFix.Fields.UnderlyingPaymentStubIndex();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        this.UnderlyingPaymentStubIndex = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex Get(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        return IsSetUnderlyingPaymentStubIndex();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexSource UnderlyingPaymentStubIndexSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexSource val = new QuickFix.Fields.UnderlyingPaymentStubIndexSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        this.UnderlyingPaymentStubIndexSource = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexSource Get(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        return IsSetUnderlyingPaymentStubIndexSource();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexSource()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexSource);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod UnderlyingPaymentStubIndexCurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        this.UnderlyingPaymentStubIndexCurvePeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCurvePeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCurvePeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCurvePeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit UnderlyingPaymentStubIndexCurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        this.UnderlyingPaymentStubIndexCurveUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCurveUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCurveUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCurveUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier UnderlyingPaymentStubIndexRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        this.UnderlyingPaymentStubIndexRateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread UnderlyingPaymentStubIndexRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        this.UnderlyingPaymentStubIndexRateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateSpread();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType UnderlyingPaymentStubIndexRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentStubIndexRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment UnderlyingPaymentStubIndexRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        this.UnderlyingPaymentStubIndexRateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateTreatment);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRate UnderlyingPaymentStubIndexCapRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        this.UnderlyingPaymentStubIndexCapRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRate Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide UnderlyingPaymentStubIndexCapRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        this.UnderlyingPaymentStubIndexCapRateBuySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRateBuySide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRateBuySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRateBuySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide UnderlyingPaymentStubIndexCapRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        this.UnderlyingPaymentStubIndexCapRateSellSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRateSellSide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRateSellSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRateSellSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate UnderlyingPaymentStubIndexFloorRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide UnderlyingPaymentStubIndexFloorRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRateBuySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRateBuySide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRateBuySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRateBuySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide UnderlyingPaymentStubIndexFloorRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRateSellSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRateSellSide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRateSellSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRateSellSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2 UnderlyingPaymentStubIndex2
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2 val = new QuickFix.Fields.UnderlyingPaymentStubIndex2();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        this.UnderlyingPaymentStubIndex2 = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2 Get(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2Source UnderlyingPaymentStubIndex2Source
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2Source val = new QuickFix.Fields.UnderlyingPaymentStubIndex2Source();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        this.UnderlyingPaymentStubIndex2Source = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2Source Get(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2Source();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2Source()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2Source);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod UnderlyingPaymentStubIndex2CurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        this.UnderlyingPaymentStubIndex2CurvePeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CurvePeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CurvePeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CurvePeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit UnderlyingPaymentStubIndex2CurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        this.UnderlyingPaymentStubIndex2CurveUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CurveUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CurveUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CurveUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier UnderlyingPaymentStubIndex2RateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        this.UnderlyingPaymentStubIndex2RateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread UnderlyingPaymentStubIndex2RateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        this.UnderlyingPaymentStubIndex2RateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateSpread();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType UnderlyingPaymentStubIndex2RateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentStubIndex2RateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment UnderlyingPaymentStubIndex2RateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        this.UnderlyingPaymentStubIndex2RateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateTreatment);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate UnderlyingPaymentStubIndex2CapRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        this.UnderlyingPaymentStubIndex2CapRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CapRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CapRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CapRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate UnderlyingPaymentStubIndex2FloorRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val = new QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        this.UnderlyingPaymentStubIndex2FloorRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate Get(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2FloorRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2FloorRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2FloorRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted UnderlyingPaymentStubStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        this.UnderlyingPaymentStubStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention UnderlyingPaymentStubStartDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentStubStartDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters NoUnderlyingPaymentStubStartDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentStubStartDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentStubStartDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentStubStartDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo UnderlyingPaymentStubStartDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        this.UnderlyingPaymentStubStartDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod UnderlyingPaymentStubStartDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit UnderlyingPaymentStubStartDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType UnderlyingPaymentStubStartDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted UnderlyingPaymentStubStartDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        this.UnderlyingPaymentStubStartDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted UnderlyingPaymentStubEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        this.UnderlyingPaymentStubEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention UnderlyingPaymentStubEndDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentStubEndDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters NoUnderlyingPaymentStubEndDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentStubEndDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentStubEndDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentStubEndDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo UnderlyingPaymentStubEndDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        this.UnderlyingPaymentStubEndDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod UnderlyingPaymentStubEndDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit UnderlyingPaymentStubEndDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType UnderlyingPaymentStubEndDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted UnderlyingPaymentStubEndDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        this.UnderlyingPaymentStubEndDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateAdjusted);
                    }
                    public class NoUnderlyingPaymentStubStartDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentStubStartDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentStubStartDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters, Tags.UnderlyingPaymentStubStartDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentStubStartDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter UnderlyingPaymentStubStartDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentStubStartDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentStubStartDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentStubStartDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentStubStartDateBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentStubEndDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentStubEndDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentStubEndDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters, Tags.UnderlyingPaymentStubEndDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentStubEndDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter UnderlyingPaymentStubEndDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentStubEndDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentStubEndDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentStubEndDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentStubEndDateBusinessCenter);
                        }

                    }
                }
                public class NoUnderlyingStreamCommodityAltIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommodityAltID, Tags.UnderlyingStreamCommodityAltIDSource, 0 };

                    public NoUnderlyingStreamCommodityAltIDsGroup()
                      : base(Tags.NoUnderlyingStreamCommodityAltIDs, Tags.UnderlyingStreamCommodityAltID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommodityAltIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltID UnderlyingStreamCommodityAltID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityAltID val = new QuickFix.Fields.UnderlyingStreamCommodityAltID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        this.UnderlyingStreamCommodityAltID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltID Get(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        return IsSetUnderlyingStreamCommodityAltID();
                    }

                    public bool IsSetUnderlyingStreamCommodityAltID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityAltID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommodityAltIDSource UnderlyingStreamCommodityAltIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val = new QuickFix.Fields.UnderlyingStreamCommodityAltIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        this.UnderlyingStreamCommodityAltIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltIDSource Get(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        return IsSetUnderlyingStreamCommodityAltIDSource();
                    }

                    public bool IsSetUnderlyingStreamCommodityAltIDSource()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityAltIDSource);
                    }

                }
                public class NoUnderlyingStreamAssetAttributesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamAssetAttributeType, Tags.UnderlyingStreamAssetAttributeValue, Tags.UnderlyingStreamAssetAttributeLimit, 0 };

                    public NoUnderlyingStreamAssetAttributesGroup()
                      : base(Tags.NoUnderlyingStreamAssetAttributes, Tags.UnderlyingStreamAssetAttributeType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamAssetAttributesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeType UnderlyingStreamAssetAttributeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeType val = new QuickFix.Fields.UnderlyingStreamAssetAttributeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        this.UnderlyingStreamAssetAttributeType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeType Get(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeType();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeType()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeType);
                    }
                    public QuickFix.Fields.UnderlyingStreamAssetAttributeValue UnderlyingStreamAssetAttributeValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeValue val = new QuickFix.Fields.UnderlyingStreamAssetAttributeValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        this.UnderlyingStreamAssetAttributeValue = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeValue Get(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeValue();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeValue()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeValue);
                    }
                    public QuickFix.Fields.UnderlyingStreamAssetAttributeLimit UnderlyingStreamAssetAttributeLimit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val = new QuickFix.Fields.UnderlyingStreamAssetAttributeLimit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        this.UnderlyingStreamAssetAttributeLimit = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeLimit Get(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeLimit();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeLimit()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeLimit);
                    }

                }
                public class NoUnderlyingStreamCommodityDataSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommodityDataSourceID, Tags.UnderlyingStreamCommodityDataSourceIDType, 0 };

                    public NoUnderlyingStreamCommodityDataSourcesGroup()
                      : base(Tags.NoUnderlyingStreamCommodityDataSources, Tags.UnderlyingStreamCommodityDataSourceID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommodityDataSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceID UnderlyingStreamCommodityDataSourceID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val = new QuickFix.Fields.UnderlyingStreamCommodityDataSourceID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        this.UnderlyingStreamCommodityDataSourceID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceID Get(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        return IsSetUnderlyingStreamCommodityDataSourceID();
                    }

                    public bool IsSetUnderlyingStreamCommodityDataSourceID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityDataSourceID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType UnderlyingStreamCommodityDataSourceIDType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val = new QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        this.UnderlyingStreamCommodityDataSourceIDType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType Get(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        return IsSetUnderlyingStreamCommodityDataSourceIDType();
                    }

                    public bool IsSetUnderlyingStreamCommodityDataSourceIDType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityDataSourceIDType);
                    }

                }
                public class NoUnderlyingStreamCommoditySettlBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlBusinessCenter, 0 };

                    public NoUnderlyingStreamCommoditySettlBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters, Tags.UnderlyingStreamCommoditySettlBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommoditySettlBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter UnderlyingStreamCommoditySettlBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val = new QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        this.UnderlyingStreamCommoditySettlBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter Get(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCommoditySettlPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlCountry, Tags.UnderlyingStreamCommoditySettlTimeZone, Tags.UnderlyingStreamCommoditySettlFlowType, Tags.UnderlyingStreamCommoditySettlPeriodNotional, Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure, Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod, Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit, Tags.UnderlyingStreamCommoditySettlPeriodPrice, Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure, Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency, Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction, Tags.NoUnderlyingStreamCommoditySettlDays, Tags.UnderlyingStreamCommoditySettlPeriodXID, Tags.UnderlyingStreamCommoditySettlPeriodXIDRef, 0 };

                    public NoUnderlyingStreamCommoditySettlPeriodsGroup()
                      : base(Tags.NoUnderlyingStreamCommoditySettlPeriods, Tags.UnderlyingStreamCommoditySettlCountry, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommoditySettlPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlCountry UnderlyingStreamCommoditySettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val = new QuickFix.Fields.UnderlyingStreamCommoditySettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        this.UnderlyingStreamCommoditySettlCountry = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlCountry Get(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlCountry();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlCountry()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlCountry);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone UnderlyingStreamCommoditySettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        this.UnderlyingStreamCommoditySettlTimeZone = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlTimeZone();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlTimeZone()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlTimeZone);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType UnderlyingStreamCommoditySettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        this.UnderlyingStreamCommoditySettlFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlFlowType();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlFlowType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlFlowType);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional UnderlyingStreamCommoditySettlPeriodNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodNotional();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodNotional()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodNotional);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod UnderlyingStreamCommoditySettlPeriodFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit UnderlyingStreamCommoditySettlPeriodFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodFrequencyUnit();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice UnderlyingStreamCommoditySettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPrice();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPrice()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPrice);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency UnderlyingStreamCommoditySettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPriceCurrency();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction UnderlyingStreamCommoditySettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val = new QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        this.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction Get(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays NoUnderlyingStreamCommoditySettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        this.NoUnderlyingStreamCommoditySettlDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        return IsSetNoUnderlyingStreamCommoditySettlDays();
                    }

                    public bool IsSetNoUnderlyingStreamCommoditySettlDays()
                    {
                        return IsSetField(Tags.NoUnderlyingStreamCommoditySettlDays);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID UnderlyingStreamCommoditySettlPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodXID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodXID();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodXID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodXID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef UnderlyingStreamCommoditySettlPeriodXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodXIDRef = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodXIDRef();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodXIDRef()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodXIDRef);
                    }
                    public class NoUnderlyingStreamCommoditySettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlDay, Tags.UnderlyingStreamCommoditySettlTotalHours, Tags.NoUnderlyingStreamCommoditySettlTimes, 0 };

                        public NoUnderlyingStreamCommoditySettlDaysGroup()
                          : base(Tags.NoUnderlyingStreamCommoditySettlDays, Tags.UnderlyingStreamCommoditySettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingStreamCommoditySettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlDay UnderlyingStreamCommoditySettlDay
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingStreamCommoditySettlDay val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            this.UnderlyingStreamCommoditySettlDay = val;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlDay Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            return IsSetUnderlyingStreamCommoditySettlDay();
                        }

                        public bool IsSetUnderlyingStreamCommoditySettlDay()
                        {
                            return IsSetField(Tags.UnderlyingStreamCommoditySettlDay);
                        }
                        public QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours UnderlyingStreamCommoditySettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            this.UnderlyingStreamCommoditySettlTotalHours = val;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            return IsSetUnderlyingStreamCommoditySettlTotalHours();
                        }

                        public bool IsSetUnderlyingStreamCommoditySettlTotalHours()
                        {
                            return IsSetField(Tags.UnderlyingStreamCommoditySettlTotalHours);
                        }
                        public QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes NoUnderlyingStreamCommoditySettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            this.NoUnderlyingStreamCommoditySettlTimes = val;
                        }

                        public QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            return IsSetNoUnderlyingStreamCommoditySettlTimes();
                        }

                        public bool IsSetNoUnderlyingStreamCommoditySettlTimes()
                        {
                            return IsSetField(Tags.NoUnderlyingStreamCommoditySettlTimes);
                        }
                        public class NoUnderlyingStreamCommoditySettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlStart, Tags.UnderlyingStreamCommoditySettlEnd, Tags.UnderlyingStreamCommoditySettlTimeType, 0 };

                            public NoUnderlyingStreamCommoditySettlTimesGroup()
                              : base(Tags.NoUnderlyingStreamCommoditySettlTimes, Tags.UnderlyingStreamCommoditySettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingStreamCommoditySettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlStart UnderlyingStreamCommoditySettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlStart val = new QuickFix.Fields.UnderlyingStreamCommoditySettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                this.UnderlyingStreamCommoditySettlStart = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlStart Get(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlStart();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlStart()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlStart);
                            }
                            public QuickFix.Fields.UnderlyingStreamCommoditySettlEnd UnderlyingStreamCommoditySettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val = new QuickFix.Fields.UnderlyingStreamCommoditySettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                this.UnderlyingStreamCommoditySettlEnd = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlEnd Get(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlEnd();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlEnd()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlEnd);
                            }
                            public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType UnderlyingStreamCommoditySettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                this.UnderlyingStreamCommoditySettlTimeType = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlTimeType();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlTimeType()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlTimeType);
                            }

                        }
                    }
                }
                public class NoUnderlyingDeliveryStreamCommoditySourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryStreamCommoditySource, 0 };

                    public NoUnderlyingDeliveryStreamCommoditySourcesGroup()
                      : base(Tags.NoUnderlyingDeliveryStreamCommoditySources, Tags.UnderlyingDeliveryStreamCommoditySource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliveryStreamCommoditySourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource UnderlyingDeliveryStreamCommoditySource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val = new QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        this.UnderlyingDeliveryStreamCommoditySource = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource Get(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        return IsSetUnderlyingDeliveryStreamCommoditySource();
                    }

                    public bool IsSetUnderlyingDeliveryStreamCommoditySource()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryStreamCommoditySource);
                    }

                }
                public class NoUnderlyingDeliveryStreamCyclesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryStreamCycleDesc, Tags.EncodedUnderlyingDeliveryStreamCycleDescLen, Tags.EncodedUnderlyingDeliveryStreamCycleDesc, 0 };

                    public NoUnderlyingDeliveryStreamCyclesGroup()
                      : base(Tags.NoUnderlyingDeliveryStreamCycles, Tags.UnderlyingDeliveryStreamCycleDesc, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliveryStreamCyclesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc UnderlyingDeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val = new QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        this.UnderlyingDeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc Get(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        return IsSetUnderlyingDeliveryStreamCycleDesc();
                    }

                    public bool IsSetUnderlyingDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryStreamCycleDesc);
                    }
                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen EncodedUnderlyingDeliveryStreamCycleDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val = new QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        this.EncodedUnderlyingDeliveryStreamCycleDescLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen Get(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        return IsSetEncodedUnderlyingDeliveryStreamCycleDescLen();
                    }

                    public bool IsSetEncodedUnderlyingDeliveryStreamCycleDescLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingDeliveryStreamCycleDescLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc EncodedUnderlyingDeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val = new QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        this.EncodedUnderlyingDeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc Get(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        return IsSetEncodedUnderlyingDeliveryStreamCycleDesc();
                    }

                    public bool IsSetEncodedUnderlyingDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.EncodedUnderlyingDeliveryStreamCycleDesc);
                    }

                }
                public class NoUnderlyingDeliverySchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleType, Tags.UnderlyingDeliveryScheduleXID, Tags.UnderlyingDeliveryScheduleNotional, Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure, Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency, Tags.UnderlyingDeliveryScheduleNegativeTolerance, Tags.UnderlyingDeliverySchedulePositiveTolerance, Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure, Tags.UnderlyingDeliveryScheduleToleranceType, Tags.UnderlyingDeliveryScheduleSettlCountry, Tags.UnderlyingDeliveryScheduleSettlTimeZone, Tags.UnderlyingDeliveryScheduleSettlFlowType, Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction, Tags.NoUnderlyingDeliveryScheduleSettlDays, 0 };

                    public NoUnderlyingDeliverySchedulesGroup()
                      : base(Tags.NoUnderlyingDeliverySchedules, Tags.UnderlyingDeliveryScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliverySchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleType UnderlyingDeliveryScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleType val = new QuickFix.Fields.UnderlyingDeliveryScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        this.UnderlyingDeliveryScheduleType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleType Get(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleXID UnderlyingDeliveryScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleXID val = new QuickFix.Fields.UnderlyingDeliveryScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        this.UnderlyingDeliveryScheduleXID = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleXID Get(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        return IsSetUnderlyingDeliveryScheduleXID();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleXID()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleXID);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotional UnderlyingDeliveryScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotional val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        this.UnderlyingDeliveryScheduleNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotional Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotional();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotional()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotional);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure UnderlyingDeliveryScheduleNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        this.UnderlyingDeliveryScheduleNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotionalUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency UnderlyingDeliveryScheduleNotionalCommodityFrequency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        this.UnderlyingDeliveryScheduleNotionalCommodityFrequency = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotionalCommodityFrequency();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotionalCommodityFrequency()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance UnderlyingDeliveryScheduleNegativeTolerance
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        this.UnderlyingDeliveryScheduleNegativeTolerance = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNegativeTolerance();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNegativeTolerance()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNegativeTolerance);
                    }
                    public QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance UnderlyingDeliverySchedulePositiveTolerance
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val = new QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        this.UnderlyingDeliverySchedulePositiveTolerance = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance Get(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        return IsSetUnderlyingDeliverySchedulePositiveTolerance();
                    }

                    public bool IsSetUnderlyingDeliverySchedulePositiveTolerance()
                    {
                        return IsSetField(Tags.UnderlyingDeliverySchedulePositiveTolerance);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure UnderlyingDeliveryScheduleToleranceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        this.UnderlyingDeliveryScheduleToleranceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingDeliveryScheduleToleranceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleToleranceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType UnderlyingDeliveryScheduleToleranceType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val = new QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        this.UnderlyingDeliveryScheduleToleranceType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType Get(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleToleranceType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleToleranceType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleToleranceType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry UnderlyingDeliveryScheduleSettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        this.UnderlyingDeliveryScheduleSettlCountry = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlCountry();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlCountry()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlCountry);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone UnderlyingDeliveryScheduleSettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        this.UnderlyingDeliveryScheduleSettlTimeZone = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlTimeZone();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlTimeZone()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTimeZone);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType UnderlyingDeliveryScheduleSettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        this.UnderlyingDeliveryScheduleSettlFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlFlowType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlFlowType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlFlowType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        this.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays NoUnderlyingDeliveryScheduleSettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val = new QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        this.NoUnderlyingDeliveryScheduleSettlDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays Get(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        return IsSetNoUnderlyingDeliveryScheduleSettlDays();
                    }

                    public bool IsSetNoUnderlyingDeliveryScheduleSettlDays()
                    {
                        return IsSetField(Tags.NoUnderlyingDeliveryScheduleSettlDays);
                    }
                    public class NoUnderlyingDeliveryScheduleSettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleSettlDay, Tags.UnderlyingDeliveryScheduleSettlTotalHours, Tags.NoUnderlyingDeliveryScheduleSettlTimes, 0 };

                        public NoUnderlyingDeliveryScheduleSettlDaysGroup()
                          : base(Tags.NoUnderlyingDeliveryScheduleSettlDays, Tags.UnderlyingDeliveryScheduleSettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingDeliveryScheduleSettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay UnderlyingDeliveryScheduleSettlDay
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            this.UnderlyingDeliveryScheduleSettlDay = val;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            return IsSetUnderlyingDeliveryScheduleSettlDay();
                        }

                        public bool IsSetUnderlyingDeliveryScheduleSettlDay()
                        {
                            return IsSetField(Tags.UnderlyingDeliveryScheduleSettlDay);
                        }
                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours UnderlyingDeliveryScheduleSettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            this.UnderlyingDeliveryScheduleSettlTotalHours = val;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            return IsSetUnderlyingDeliveryScheduleSettlTotalHours();
                        }

                        public bool IsSetUnderlyingDeliveryScheduleSettlTotalHours()
                        {
                            return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTotalHours);
                        }
                        public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes NoUnderlyingDeliveryScheduleSettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val = new QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            this.NoUnderlyingDeliveryScheduleSettlTimes = val;
                        }

                        public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes Get(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            return IsSetNoUnderlyingDeliveryScheduleSettlTimes();
                        }

                        public bool IsSetNoUnderlyingDeliveryScheduleSettlTimes()
                        {
                            return IsSetField(Tags.NoUnderlyingDeliveryScheduleSettlTimes);
                        }
                        public class NoUnderlyingDeliveryScheduleSettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleSettlStart, Tags.UnderlyingDeliveryScheduleSettlEnd, Tags.UnderlyingDeliveryScheduleSettlTimeType, 0 };

                            public NoUnderlyingDeliveryScheduleSettlTimesGroup()
                              : base(Tags.NoUnderlyingDeliveryScheduleSettlTimes, Tags.UnderlyingDeliveryScheduleSettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingDeliveryScheduleSettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart UnderlyingDeliveryScheduleSettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                this.UnderlyingDeliveryScheduleSettlStart = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlStart();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlStart()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlStart);
                            }
                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd UnderlyingDeliveryScheduleSettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                this.UnderlyingDeliveryScheduleSettlEnd = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlEnd();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlEnd()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlEnd);
                            }
                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType UnderlyingDeliveryScheduleSettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                this.UnderlyingDeliveryScheduleSettlTimeType = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlTimeType();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlTimeType()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTimeType);
                            }

                        }
                    }
                }
            }
            public class NoUnderlyingAssetAttributesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingAssetAttributeType, Tags.UnderlyingAssetAttributeValue, Tags.UnderlyingAssetAttributeLimit, 0 };

                public NoUnderlyingAssetAttributesGroup()
                  : base(Tags.NoUnderlyingAssetAttributes, Tags.UnderlyingAssetAttributeType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingAssetAttributesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeType UnderlyingAssetAttributeType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeType val = new QuickFix.Fields.UnderlyingAssetAttributeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    this.UnderlyingAssetAttributeType = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeType Get(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    return IsSetUnderlyingAssetAttributeType();
                }

                public bool IsSetUnderlyingAssetAttributeType()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeType);
                }
                public QuickFix.Fields.UnderlyingAssetAttributeValue UnderlyingAssetAttributeValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeValue val = new QuickFix.Fields.UnderlyingAssetAttributeValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    this.UnderlyingAssetAttributeValue = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeValue Get(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    return IsSetUnderlyingAssetAttributeValue();
                }

                public bool IsSetUnderlyingAssetAttributeValue()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeValue);
                }
                public QuickFix.Fields.UnderlyingAssetAttributeLimit UnderlyingAssetAttributeLimit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeLimit val = new QuickFix.Fields.UnderlyingAssetAttributeLimit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    this.UnderlyingAssetAttributeLimit = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeLimit Get(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    return IsSetUnderlyingAssetAttributeLimit();
                }

                public bool IsSetUnderlyingAssetAttributeLimit()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeLimit);
                }

            }
            public class NoUnderlyingPricingDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingPricingDateBusinessCenter, 0 };

                public NoUnderlyingPricingDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingPricingDateBusinessCenters, Tags.UnderlyingPricingDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingPricingDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingPricingDateBusinessCenter UnderlyingPricingDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPricingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPricingDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    this.UnderlyingPricingDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingPricingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    return IsSetUnderlyingPricingDateBusinessCenter();
                }

                public bool IsSetUnderlyingPricingDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingPricingDateBusinessCenter);
                }

            }
            public class NoUnderlyingMarketDisruptionEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionEvent, Tags.UnderlyingMarketDisruptionValue, 0 };

                public NoUnderlyingMarketDisruptionEventsGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionEvents, Tags.UnderlyingMarketDisruptionEvent, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionEvent UnderlyingMarketDisruptionEvent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionEvent val = new QuickFix.Fields.UnderlyingMarketDisruptionEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    this.UnderlyingMarketDisruptionEvent = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionEvent Get(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    return IsSetUnderlyingMarketDisruptionEvent();
                }

                public bool IsSetUnderlyingMarketDisruptionEvent()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionEvent);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionValue UnderlyingMarketDisruptionValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionValue val = new QuickFix.Fields.UnderlyingMarketDisruptionValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    this.UnderlyingMarketDisruptionValue = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionValue Get(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    return IsSetUnderlyingMarketDisruptionValue();
                }

                public bool IsSetUnderlyingMarketDisruptionValue()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionValue);
                }

            }
            public class NoUnderlyingMarketDisruptionFallbacksGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionFallbackType, Tags.UnderlyingMarketDisruptionFallbackValue, 0 };

                public NoUnderlyingMarketDisruptionFallbacksGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionFallbacks, Tags.UnderlyingMarketDisruptionFallbackType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionFallbacksGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackType UnderlyingMarketDisruptionFallbackType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    this.UnderlyingMarketDisruptionFallbackType = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackType Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackType();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackType()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackType);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue UnderlyingMarketDisruptionFallbackValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    this.UnderlyingMarketDisruptionFallbackValue = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackValue();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackValue()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackValue);
                }

            }
            public class NoUnderlyingMarketDisruptionFallbackReferencePricesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionFallbackUnderlierType, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen, Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, Tags.UnderlyingMarketDisruptionFallbackOpenUnits, Tags.UnderlyingMarketDisruptionFallbackBasketCurrency, Tags.UnderlyingMarketDisruptionFallbackBasketDivisor, 0 };

                public NoUnderlyingMarketDisruptionFallbackReferencePricesGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices, Tags.UnderlyingMarketDisruptionFallbackUnderlierType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionFallbackReferencePricesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType UnderlyingMarketDisruptionFallbackUnderlierType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierType = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierType();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierType()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierType);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID UnderlyingMarketDisruptionFallbackUnderlierSecurityID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityID = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityID();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityID()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val = new QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    this.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen Get(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    return IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen();
                }

                public bool IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen);
                }
                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits UnderlyingMarketDisruptionFallbackOpenUnits
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    this.UnderlyingMarketDisruptionFallbackOpenUnits = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackOpenUnits();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackOpenUnits()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackOpenUnits);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency UnderlyingMarketDisruptionFallbackBasketCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    this.UnderlyingMarketDisruptionFallbackBasketCurrency = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackBasketCurrency();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackBasketCurrency()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackBasketCurrency);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor UnderlyingMarketDisruptionFallbackBasketDivisor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    this.UnderlyingMarketDisruptionFallbackBasketDivisor = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackBasketDivisor();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackBasketDivisor()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackBasketDivisor);
                }

            }
            public class NoUnderlyingOptionExerciseBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseBusinessCenter, 0 };

                public NoUnderlyingOptionExerciseBusinessCentersGroup()
                  : base(Tags.NoUnderlyingOptionExerciseBusinessCenters, Tags.UnderlyingOptionExerciseBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter UnderlyingOptionExerciseBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    this.UnderlyingOptionExerciseBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    return IsSetUnderlyingOptionExerciseBusinessCenter();
                }

                public bool IsSetUnderlyingOptionExerciseBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseBusinessCenter);
                }

            }
            public class NoUnderlyingOptionExerciseDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseDate, Tags.UnderlyingOptionExerciseDateType, 0 };

                public NoUnderlyingOptionExerciseDatesGroup()
                  : base(Tags.NoUnderlyingOptionExerciseDates, Tags.UnderlyingOptionExerciseDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDate UnderlyingOptionExerciseDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseDate val = new QuickFix.Fields.UnderlyingOptionExerciseDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    this.UnderlyingOptionExerciseDate = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDate Get(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    return IsSetUnderlyingOptionExerciseDate();
                }

                public bool IsSetUnderlyingOptionExerciseDate()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseDate);
                }
                public QuickFix.Fields.UnderlyingOptionExerciseDateType UnderlyingOptionExerciseDateType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseDateType val = new QuickFix.Fields.UnderlyingOptionExerciseDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    this.UnderlyingOptionExerciseDateType = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDateType Get(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    return IsSetUnderlyingOptionExerciseDateType();
                }

                public bool IsSetUnderlyingOptionExerciseDateType()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseDateType);
                }

            }
            public class NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter, 0 };

                public NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters, Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter UnderlyingOptionExerciseExpirationDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    this.UnderlyingOptionExerciseExpirationDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDateBusinessCenter();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter);
                }

            }
            public class NoUnderlyingOptionExerciseExpirationDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseExpirationDate, Tags.UnderlyingOptionExerciseExpirationDateType, 0 };

                public NoUnderlyingOptionExerciseExpirationDatesGroup()
                  : base(Tags.NoUnderlyingOptionExerciseExpirationDates, Tags.UnderlyingOptionExerciseExpirationDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseExpirationDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDate UnderlyingOptionExerciseExpirationDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    this.UnderlyingOptionExerciseExpirationDate = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDate Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDate();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDate()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDate);
                }
                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType UnderlyingOptionExerciseExpirationDateType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    this.UnderlyingOptionExerciseExpirationDateType = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDateType();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDateType()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateType);
                }

            }
            public class NoUnderlyingSettlMethodElectionDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSettlMethodElectionDateBusinessCenter, 0 };

                public NoUnderlyingSettlMethodElectionDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters, Tags.UnderlyingSettlMethodElectionDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSettlMethodElectionDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter UnderlyingSettlMethodElectionDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    this.UnderlyingSettlMethodElectionDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    return IsSetUnderlyingSettlMethodElectionDateBusinessCenter();
                }

                public bool IsSetUnderlyingSettlMethodElectionDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingSettlMethodElectionDateBusinessCenter);
                }

            }
            public class NoUnderlyingProvisionsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingProvisionType, Tags.UnderlyingProvisionDateUnadjusted, Tags.UnderlyingProvisionDateBusinessDayConvention, Tags.NoUnderlyingProvisionDateBusinessCenters, Tags.UnderlyingProvisionDateAdjusted, Tags.UnderlyingProvisionDateTenorPeriod, Tags.UnderlyingProvisionDateTenorUnit, Tags.UnderlyingProvisionCalculationAgent, Tags.UnderlyingProvisionOptionSinglePartyBuyerSide, Tags.UnderlyingProvisionOptionSinglePartySellerSide, Tags.UnderlyingProvisionCashSettlValueTime, Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter, Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention, Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters, Tags.UnderlyingProvisionCashSettlValueDateRelativeTo, Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod, Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit, Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType, Tags.UnderlyingProvisionCashSettlValueDateAdjusted, Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention, Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters, Tags.NoUnderlyingProvisionOptionExerciseFixedDates, Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod, Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit, Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod, Tags.UnderlyingProvisionOptionExerciseFrequencyUnit, Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType, Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted, Tags.UnderlyingProvisionOptionExercisePeriodSkip, Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseEarliestTime, Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter, Tags.UnderlyingProvisionOptionExerciseLatestTime, Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter, Tags.UnderlyingProvisionOptionExpirationDateUnadjusted, Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention, Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters, Tags.UnderlyingProvisionOptionExpirationDateRelativeTo, Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod, Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit, Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType, Tags.UnderlyingProvisionOptionExpirationDateAdjusted, Tags.UnderlyingProvisionOptionExpirationTime, Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention, Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted, Tags.UnderlyingProvisionOptionExerciseStyle, Tags.UnderlyingProvisionOptionExerciseMultipleNotional, Tags.UnderlyingProvisionOptionExerciseMinimumNotional, Tags.UnderlyingProvisionOptionExerciseMaximumNotional, Tags.UnderlyingProvisionOptionMinimumNumber, Tags.UnderlyingProvisionOptionMaximumNumber, Tags.UnderlyingProvisionOptionExerciseConfirmation, Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention, Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters, Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType, Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst, Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast, Tags.NoUnderlyingProvisionCashSettlPaymentDates, Tags.UnderlyingProvisionCashSettlMethod, Tags.UnderlyingProvisionCashSettlCurrency, Tags.UnderlyingProvisionCashSettlCurrency2, Tags.UnderlyingProvisionCashSettlQuoteType, Tags.UnderlyingProvisionCashSettlQuoteSource, Tags.UnderlyingProvisionCashSettlQuoteReferencePage, Tags.UnderlyingProvisionText, Tags.EncodedUnderlyingProvisionTextLen, Tags.EncodedUnderlyingProvisionText, Tags.NoUnderlyingProvisionPartyIDs, Tags.UnderlyingProvisionBreakFeeElection, Tags.UnderlyingProvisionBreakFeeRate, 0 };

                public NoUnderlyingProvisionsGroup()
                  : base(Tags.NoUnderlyingProvisions, Tags.UnderlyingProvisionType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingProvisionsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingProvisionType UnderlyingProvisionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionType val = new QuickFix.Fields.UnderlyingProvisionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    this.UnderlyingProvisionType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionType Get(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    return IsSetUnderlyingProvisionType();
                }

                public bool IsSetUnderlyingProvisionType()
                {
                    return IsSetField(Tags.UnderlyingProvisionType);
                }
                public QuickFix.Fields.UnderlyingProvisionDateUnadjusted UnderlyingProvisionDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    this.UnderlyingProvisionDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention UnderlyingProvisionDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters NoUnderlyingProvisionDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionDateAdjusted UnderlyingProvisionDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    this.UnderlyingProvisionDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionDateTenorPeriod UnderlyingProvisionDateTenorPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val = new QuickFix.Fields.UnderlyingProvisionDateTenorPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    this.UnderlyingProvisionDateTenorPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateTenorPeriod Get(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    return IsSetUnderlyingProvisionDateTenorPeriod();
                }

                public bool IsSetUnderlyingProvisionDateTenorPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateTenorPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionDateTenorUnit UnderlyingProvisionDateTenorUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateTenorUnit val = new QuickFix.Fields.UnderlyingProvisionDateTenorUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    this.UnderlyingProvisionDateTenorUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateTenorUnit Get(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    return IsSetUnderlyingProvisionDateTenorUnit();
                }

                public bool IsSetUnderlyingProvisionDateTenorUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateTenorUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCalculationAgent UnderlyingProvisionCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCalculationAgent val = new QuickFix.Fields.UnderlyingProvisionCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    this.UnderlyingProvisionCalculationAgent = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCalculationAgent Get(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    return IsSetUnderlyingProvisionCalculationAgent();
                }

                public bool IsSetUnderlyingProvisionCalculationAgent()
                {
                    return IsSetField(Tags.UnderlyingProvisionCalculationAgent);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide UnderlyingProvisionOptionSinglePartyBuyerSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val = new QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    this.UnderlyingProvisionOptionSinglePartyBuyerSide = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide Get(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    return IsSetUnderlyingProvisionOptionSinglePartyBuyerSide();
                }

                public bool IsSetUnderlyingProvisionOptionSinglePartyBuyerSide()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionSinglePartyBuyerSide);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide UnderlyingProvisionOptionSinglePartySellerSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val = new QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    this.UnderlyingProvisionOptionSinglePartySellerSide = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide Get(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    return IsSetUnderlyingProvisionOptionSinglePartySellerSide();
                }

                public bool IsSetUnderlyingProvisionOptionSinglePartySellerSide()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionSinglePartySellerSide);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTime UnderlyingProvisionCashSettlValueTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    this.UnderlyingProvisionCashSettlValueTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTime Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueTime();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueTime);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter UnderlyingProvisionCashSettlValueTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionCashSettlValueTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention UnderlyingProvisionCashSettlValueDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionCashSettlValueDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters NoUnderlyingProvisionCashSettlValueDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionCashSettlValueDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlValueDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlValueDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo UnderlyingProvisionCashSettlValueDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    this.UnderlyingProvisionCashSettlValueDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod UnderlyingProvisionCashSettlValueDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit UnderlyingProvisionCashSettlValueDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType UnderlyingProvisionCashSettlValueDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted UnderlyingProvisionCashSettlValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    this.UnderlyingProvisionCashSettlValueDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention UnderlyingProvisionOptionExerciseBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionExerciseBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters NoUnderlyingProvisionOptionExerciseBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionExerciseBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionExerciseBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionExerciseBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates NoUnderlyingProvisionOptionExerciseFixedDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val = new QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    this.NoUnderlyingProvisionOptionExerciseFixedDates = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates Get(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    return IsSetNoUnderlyingProvisionOptionExerciseFixedDates();
                }

                public bool IsSetNoUnderlyingProvisionOptionExerciseFixedDates()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExerciseFixedDates);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod UnderlyingProvisionOptionExerciseFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseFrequencyPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit UnderlyingProvisionOptionExerciseFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseFrequencyUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted UnderlyingProvisionOptionExerciseStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo UnderlyingProvisionOptionExerciseStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod UnderlyingProvisionOptionExerciseStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit UnderlyingProvisionOptionExerciseStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType UnderlyingProvisionOptionExerciseStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted UnderlyingProvisionOptionExerciseStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip UnderlyingProvisionOptionExercisePeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val = new QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    this.UnderlyingProvisionOptionExercisePeriodSkip = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip Get(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    return IsSetUnderlyingProvisionOptionExercisePeriodSkip();
                }

                public bool IsSetUnderlyingProvisionOptionExercisePeriodSkip()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExercisePeriodSkip);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime UnderlyingProvisionOptionExerciseEarliestTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestTime();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime UnderlyingProvisionOptionExerciseLatestTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    this.UnderlyingProvisionOptionExerciseLatestTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseLatestTime();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseLatestTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseLatestTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseLatestTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseLatestTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted UnderlyingProvisionOptionExpirationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExpirationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention UnderlyingProvisionOptionExpirationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionExpirationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters NoUnderlyingProvisionOptionExpirationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionExpirationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionExpirationDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionExpirationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo UnderlyingProvisionOptionExpirationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionExpirationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod UnderlyingProvisionOptionExpirationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit UnderlyingProvisionOptionExpirationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType UnderlyingProvisionOptionExpirationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted UnderlyingProvisionOptionExpirationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionExpirationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTime UnderlyingProvisionOptionExpirationTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    this.UnderlyingProvisionOptionExpirationTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTime Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationTime();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter UnderlyingProvisionOptionExpirationTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExpirationTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle UnderlyingProvisionOptionExerciseStyle
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    this.UnderlyingProvisionOptionExerciseStyle = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStyle();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStyle()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStyle);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional UnderlyingProvisionOptionExerciseMultipleNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMultipleNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMultipleNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMultipleNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMultipleNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional UnderlyingProvisionOptionExerciseMinimumNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMinimumNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMinimumNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMinimumNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMinimumNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional UnderlyingProvisionOptionExerciseMaximumNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMaximumNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMaximumNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMaximumNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMaximumNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber UnderlyingProvisionOptionMinimumNumber
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val = new QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    this.UnderlyingProvisionOptionMinimumNumber = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber Get(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    return IsSetUnderlyingProvisionOptionMinimumNumber();
                }

                public bool IsSetUnderlyingProvisionOptionMinimumNumber()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionMinimumNumber);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber UnderlyingProvisionOptionMaximumNumber
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val = new QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    this.UnderlyingProvisionOptionMaximumNumber = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber Get(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    return IsSetUnderlyingProvisionOptionMaximumNumber();
                }

                public bool IsSetUnderlyingProvisionOptionMaximumNumber()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionMaximumNumber);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation UnderlyingProvisionOptionExerciseConfirmation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    this.UnderlyingProvisionOptionExerciseConfirmation = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseConfirmation();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseConfirmation()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseConfirmation);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo UnderlyingProvisionCashSettlPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod UnderlyingProvisionCashSettlPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit UnderlyingProvisionCashSettlPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType UnderlyingProvisionCashSettlPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst UnderlyingProvisionCashSettlPaymentDateRangeFirst
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRangeFirst = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRangeFirst();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRangeFirst()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast UnderlyingProvisionCashSettlPaymentDateRangeLast
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRangeLast = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRangeLast();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRangeLast()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates NoUnderlyingProvisionCashSettlPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    this.NoUnderlyingProvisionCashSettlPaymentDates = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlPaymentDates();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlPaymentDates()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlPaymentDates);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlMethod UnderlyingProvisionCashSettlMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlMethod val = new QuickFix.Fields.UnderlyingProvisionCashSettlMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    this.UnderlyingProvisionCashSettlMethod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlMethod Get(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    return IsSetUnderlyingProvisionCashSettlMethod();
                }

                public bool IsSetUnderlyingProvisionCashSettlMethod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlMethod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency UnderlyingProvisionCashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val = new QuickFix.Fields.UnderlyingProvisionCashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    this.UnderlyingProvisionCashSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency Get(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    return IsSetUnderlyingProvisionCashSettlCurrency();
                }

                public bool IsSetUnderlyingProvisionCashSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 UnderlyingProvisionCashSettlCurrency2
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val = new QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    this.UnderlyingProvisionCashSettlCurrency2 = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 Get(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    return IsSetUnderlyingProvisionCashSettlCurrency2();
                }

                public bool IsSetUnderlyingProvisionCashSettlCurrency2()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlCurrency2);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType UnderlyingProvisionCashSettlQuoteType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    this.UnderlyingProvisionCashSettlQuoteType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteType();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource UnderlyingProvisionCashSettlQuoteSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    this.UnderlyingProvisionCashSettlQuoteSource = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteSource();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteSource()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteSource);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage UnderlyingProvisionCashSettlQuoteReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    this.UnderlyingProvisionCashSettlQuoteReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteReferencePage();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteReferencePage()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteReferencePage);
                }
                public QuickFix.Fields.UnderlyingProvisionText UnderlyingProvisionText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionText val = new QuickFix.Fields.UnderlyingProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    this.UnderlyingProvisionText = val;
                }

                public QuickFix.Fields.UnderlyingProvisionText Get(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    return IsSetUnderlyingProvisionText();
                }

                public bool IsSetUnderlyingProvisionText()
                {
                    return IsSetField(Tags.UnderlyingProvisionText);
                }
                public QuickFix.Fields.EncodedUnderlyingProvisionTextLen EncodedUnderlyingProvisionTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingProvisionTextLen val = new QuickFix.Fields.EncodedUnderlyingProvisionTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    this.EncodedUnderlyingProvisionTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingProvisionTextLen Get(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    return IsSetEncodedUnderlyingProvisionTextLen();
                }

                public bool IsSetEncodedUnderlyingProvisionTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingProvisionTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingProvisionText EncodedUnderlyingProvisionText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingProvisionText val = new QuickFix.Fields.EncodedUnderlyingProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    this.EncodedUnderlyingProvisionText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingProvisionText Get(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    return IsSetEncodedUnderlyingProvisionText();
                }

                public bool IsSetEncodedUnderlyingProvisionText()
                {
                    return IsSetField(Tags.EncodedUnderlyingProvisionText);
                }
                public QuickFix.Fields.NoUnderlyingProvisionPartyIDs NoUnderlyingProvisionPartyIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionPartyIDs val = new QuickFix.Fields.NoUnderlyingProvisionPartyIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    this.NoUnderlyingProvisionPartyIDs = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionPartyIDs Get(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    return IsSetNoUnderlyingProvisionPartyIDs();
                }

                public bool IsSetNoUnderlyingProvisionPartyIDs()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionPartyIDs);
                }
                public QuickFix.Fields.UnderlyingProvisionBreakFeeElection UnderlyingProvisionBreakFeeElection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionBreakFeeElection val = new QuickFix.Fields.UnderlyingProvisionBreakFeeElection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    this.UnderlyingProvisionBreakFeeElection = val;
                }

                public QuickFix.Fields.UnderlyingProvisionBreakFeeElection Get(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    return IsSetUnderlyingProvisionBreakFeeElection();
                }

                public bool IsSetUnderlyingProvisionBreakFeeElection()
                {
                    return IsSetField(Tags.UnderlyingProvisionBreakFeeElection);
                }
                public QuickFix.Fields.UnderlyingProvisionBreakFeeRate UnderlyingProvisionBreakFeeRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionBreakFeeRate val = new QuickFix.Fields.UnderlyingProvisionBreakFeeRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    this.UnderlyingProvisionBreakFeeRate = val;
                }

                public QuickFix.Fields.UnderlyingProvisionBreakFeeRate Get(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    return IsSetUnderlyingProvisionBreakFeeRate();
                }

                public bool IsSetUnderlyingProvisionBreakFeeRate()
                {
                    return IsSetField(Tags.UnderlyingProvisionBreakFeeRate);
                }
                public class NoUnderlyingProvisionDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionDateBusinessCenters, Tags.UnderlyingProvisionDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionDateBusinessCenter UnderlyingProvisionDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters, Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter UnderlyingProvisionCashSettlValueDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionCashSettlValueDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionCashSettlValueDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlValueDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionExerciseBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExerciseBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionExerciseBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters, Tags.UnderlyingProvisionOptionExerciseBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExerciseBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter UnderlyingProvisionOptionExerciseBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionExerciseBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionExerciseFixedDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExerciseFixedDate, Tags.UnderlyingProvisionOptionExerciseFixedDateType, 0 };

                    public NoUnderlyingProvisionOptionExerciseFixedDatesGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExerciseFixedDates, Tags.UnderlyingProvisionOptionExerciseFixedDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExerciseFixedDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate UnderlyingProvisionOptionExerciseFixedDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        this.UnderlyingProvisionOptionExerciseFixedDate = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseFixedDate();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseFixedDate()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseFixedDate);
                    }
                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType UnderlyingProvisionOptionExerciseFixedDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        this.UnderlyingProvisionOptionExerciseFixedDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseFixedDateType();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseFixedDateType()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseFixedDateType);
                    }

                }
                public class NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters, Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter UnderlyingProvisionOptionExpirationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionExpirationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionExpirationDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionExpirationDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters, Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter UnderlyingProvisionCashSettlPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlPaymentDate, Tags.UnderlyingProvisionCashSettlPaymentDateType, 0 };

                    public NoUnderlyingProvisionCashSettlPaymentDatesGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlPaymentDates, Tags.UnderlyingProvisionCashSettlPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate UnderlyingProvisionCashSettlPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDate = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDate();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDate()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDate);
                    }
                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType UnderlyingProvisionCashSettlPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDateType();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDateType()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateType);
                    }

                }
                public class NoUnderlyingProvisionPartyIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionPartyID, Tags.UnderlyingProvisionPartyIDSource, Tags.UnderlyingProvisionPartyRole, Tags.UnderlyingProvisionPartyRoleQualifier, Tags.NoUnderlyingProvisionPartySubIDs, 0 };

                    public NoUnderlyingProvisionPartyIDsGroup()
                      : base(Tags.NoUnderlyingProvisionPartyIDs, Tags.UnderlyingProvisionPartyID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionPartyIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyID UnderlyingProvisionPartyID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyID val = new QuickFix.Fields.UnderlyingProvisionPartyID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        this.UnderlyingProvisionPartyID = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyID Get(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        return IsSetUnderlyingProvisionPartyID();
                    }

                    public bool IsSetUnderlyingProvisionPartyID()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyID);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyIDSource UnderlyingProvisionPartyIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyIDSource val = new QuickFix.Fields.UnderlyingProvisionPartyIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        this.UnderlyingProvisionPartyIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyIDSource Get(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        return IsSetUnderlyingProvisionPartyIDSource();
                    }

                    public bool IsSetUnderlyingProvisionPartyIDSource()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyIDSource);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyRole UnderlyingProvisionPartyRole
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyRole val = new QuickFix.Fields.UnderlyingProvisionPartyRole();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        this.UnderlyingProvisionPartyRole = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyRole Get(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        return IsSetUnderlyingProvisionPartyRole();
                    }

                    public bool IsSetUnderlyingProvisionPartyRole()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyRole);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier UnderlyingProvisionPartyRoleQualifier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val = new QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        this.UnderlyingProvisionPartyRoleQualifier = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier Get(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        return IsSetUnderlyingProvisionPartyRoleQualifier();
                    }

                    public bool IsSetUnderlyingProvisionPartyRoleQualifier()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyRoleQualifier);
                    }
                    public QuickFix.Fields.NoUnderlyingProvisionPartySubIDs NoUnderlyingProvisionPartySubIDs
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val = new QuickFix.Fields.NoUnderlyingProvisionPartySubIDs();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        this.NoUnderlyingProvisionPartySubIDs = val;
                    }

                    public QuickFix.Fields.NoUnderlyingProvisionPartySubIDs Get(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        return IsSetNoUnderlyingProvisionPartySubIDs();
                    }

                    public bool IsSetNoUnderlyingProvisionPartySubIDs()
                    {
                        return IsSetField(Tags.NoUnderlyingProvisionPartySubIDs);
                    }
                    public class NoUnderlyingProvisionPartySubIDsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingProvisionPartySubID, Tags.UnderlyingProvisionPartySubIDType, 0 };

                        public NoUnderlyingProvisionPartySubIDsGroup()
                          : base(Tags.NoUnderlyingProvisionPartySubIDs, Tags.UnderlyingProvisionPartySubID, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingProvisionPartySubIDsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubID UnderlyingProvisionPartySubID
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProvisionPartySubID val = new QuickFix.Fields.UnderlyingProvisionPartySubID();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            this.UnderlyingProvisionPartySubID = val;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubID Get(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            return IsSetUnderlyingProvisionPartySubID();
                        }

                        public bool IsSetUnderlyingProvisionPartySubID()
                        {
                            return IsSetField(Tags.UnderlyingProvisionPartySubID);
                        }
                        public QuickFix.Fields.UnderlyingProvisionPartySubIDType UnderlyingProvisionPartySubIDType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProvisionPartySubIDType val = new QuickFix.Fields.UnderlyingProvisionPartySubIDType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            this.UnderlyingProvisionPartySubIDType = val;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubIDType Get(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            return IsSetUnderlyingProvisionPartySubIDType();
                        }

                        public bool IsSetUnderlyingProvisionPartySubIDType()
                        {
                            return IsSetField(Tags.UnderlyingProvisionPartySubIDType);
                        }

                    }
                }
            }
            public class NoUnderlyingAdditionalTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator, Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator, Tags.NoUnderlyingAdditionalTermBondRefs, 0 };

                public NoUnderlyingAdditionalTermsGroup()
                  : base(Tags.NoUnderlyingAdditionalTerms, Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingAdditionalTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator UnderlyingAdditionalTermConditionPrecedentBondIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val = new QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    this.UnderlyingAdditionalTermConditionPrecedentBondIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator Get(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    return IsSetUnderlyingAdditionalTermConditionPrecedentBondIndicator();
                }

                public bool IsSetUnderlyingAdditionalTermConditionPrecedentBondIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator);
                }
                public QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator UnderlyingAdditionalTermDiscrepancyClauseIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val = new QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    this.UnderlyingAdditionalTermDiscrepancyClauseIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator Get(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    return IsSetUnderlyingAdditionalTermDiscrepancyClauseIndicator();
                }

                public bool IsSetUnderlyingAdditionalTermDiscrepancyClauseIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator);
                }
                public QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs NoUnderlyingAdditionalTermBondRefs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val = new QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    this.NoUnderlyingAdditionalTermBondRefs = val;
                }

                public QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs Get(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    return IsSetNoUnderlyingAdditionalTermBondRefs();
                }

                public bool IsSetNoUnderlyingAdditionalTermBondRefs()
                {
                    return IsSetField(Tags.NoUnderlyingAdditionalTermBondRefs);
                }
                public class NoUnderlyingAdditionalTermBondRefsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingAdditionalTermBondSecurityID, Tags.UnderlyingAdditionalTermBondSecurityIDSource, Tags.UnderlyingAdditionalTermBondDesc, Tags.EncodedUnderlyingAdditionalTermBondDescLen, Tags.EncodedUnderlyingAdditionalTermBondDesc, Tags.UnderlyingAdditionalTermBondCurrency, Tags.UnderlyingAdditionalTermBondIssuer, Tags.EncodedUnderlyingAdditionalTermBondIssuerLen, Tags.EncodedUnderlyingAdditionalTermBondIssuer, Tags.UnderlyingAdditionalTermBondSeniority, Tags.UnderlyingAdditionalTermBondCouponType, Tags.UnderlyingAdditionalTermBondCouponRate, Tags.UnderlyingAdditionalTermBondMaturityDate, Tags.UnderlyingAdditionalTermBondParValue, Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount, Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod, Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit, Tags.UnderlyingAdditionalTermBondDayCount, 0 };

                    public NoUnderlyingAdditionalTermBondRefsGroup()
                      : base(Tags.NoUnderlyingAdditionalTermBondRefs, Tags.UnderlyingAdditionalTermBondSecurityID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingAdditionalTermBondRefsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID UnderlyingAdditionalTermBondSecurityID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val = new QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        this.UnderlyingAdditionalTermBondSecurityID = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID Get(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSecurityID();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSecurityID()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSecurityID);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource UnderlyingAdditionalTermBondSecurityIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val = new QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        this.UnderlyingAdditionalTermBondSecurityIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource Get(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSecurityIDSource();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSecurityIDSource()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSecurityIDSource);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondDesc UnderlyingAdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondDesc val = new QuickFix.Fields.UnderlyingAdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        this.UnderlyingAdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondDesc Get(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        return IsSetUnderlyingAdditionalTermBondDesc();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen EncodedUnderlyingAdditionalTermBondDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondDescLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondDescLen();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondDescLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondDescLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc EncodedUnderlyingAdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondDesc();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrency UnderlyingAdditionalTermBondCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val = new QuickFix.Fields.UnderlyingAdditionalTermBondCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        this.UnderlyingAdditionalTermBondCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrency Get(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCurrency();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCurrency()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCurrency);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondIssuer UnderlyingAdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val = new QuickFix.Fields.UnderlyingAdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        this.UnderlyingAdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondIssuer Get(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        return IsSetUnderlyingAdditionalTermBondIssuer();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen EncodedUnderlyingAdditionalTermBondIssuerLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondIssuerLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondIssuerLen();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondIssuerLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondIssuerLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer EncodedUnderlyingAdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondIssuer();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondSeniority UnderlyingAdditionalTermBondSeniority
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val = new QuickFix.Fields.UnderlyingAdditionalTermBondSeniority();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        this.UnderlyingAdditionalTermBondSeniority = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSeniority Get(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSeniority();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSeniority()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSeniority);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponType UnderlyingAdditionalTermBondCouponType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        this.UnderlyingAdditionalTermBondCouponType = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponType Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponType();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponType()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponType);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate UnderlyingAdditionalTermBondCouponRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        this.UnderlyingAdditionalTermBondCouponRate = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponRate();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponRate()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponRate);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate UnderlyingAdditionalTermBondMaturityDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val = new QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        this.UnderlyingAdditionalTermBondMaturityDate = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate Get(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        return IsSetUnderlyingAdditionalTermBondMaturityDate();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondMaturityDate()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondMaturityDate);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondParValue UnderlyingAdditionalTermBondParValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondParValue val = new QuickFix.Fields.UnderlyingAdditionalTermBondParValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        this.UnderlyingAdditionalTermBondParValue = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondParValue Get(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        return IsSetUnderlyingAdditionalTermBondParValue();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondParValue()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondParValue);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount UnderlyingAdditionalTermBondCurrentTotalIssuedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val = new QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        this.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount Get(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCurrentTotalIssuedAmount();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCurrentTotalIssuedAmount()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod UnderlyingAdditionalTermBondCouponFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        this.UnderlyingAdditionalTermBondCouponFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit UnderlyingAdditionalTermBondCouponFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        this.UnderlyingAdditionalTermBondCouponFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponFrequencyUnit();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondDayCount UnderlyingAdditionalTermBondDayCount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val = new QuickFix.Fields.UnderlyingAdditionalTermBondDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        this.UnderlyingAdditionalTermBondDayCount = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondDayCount Get(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        return IsSetUnderlyingAdditionalTermBondDayCount();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondDayCount()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondDayCount);
                    }

                }
            }
            public class NoUnderlyingProtectionTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingProtectionTermNotional, Tags.UnderlyingProtectionTermCurrency, Tags.UnderlyingProtectionTermSellerNotifies, Tags.UnderlyingProtectionTermBuyerNotifies, Tags.UnderlyingProtectionTermEventBusinessCenter, Tags.UnderlyingProtectionTermStandardSources, Tags.UnderlyingProtectionTermEventMinimumSources, Tags.NoUnderlyingProtectionTermEventNewsSources, Tags.NoUnderlyingProtectionTermEvents, Tags.NoUnderlyingProtectionTermObligations, Tags.UnderlyingProtectionTermXID, 0 };

                public NoUnderlyingProtectionTermsGroup()
                  : base(Tags.NoUnderlyingProtectionTerms, Tags.UnderlyingProtectionTermNotional, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingProtectionTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingProtectionTermNotional UnderlyingProtectionTermNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermNotional val = new QuickFix.Fields.UnderlyingProtectionTermNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    this.UnderlyingProtectionTermNotional = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermNotional Get(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    return IsSetUnderlyingProtectionTermNotional();
                }

                public bool IsSetUnderlyingProtectionTermNotional()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermNotional);
                }
                public QuickFix.Fields.UnderlyingProtectionTermCurrency UnderlyingProtectionTermCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermCurrency val = new QuickFix.Fields.UnderlyingProtectionTermCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    this.UnderlyingProtectionTermCurrency = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermCurrency Get(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    return IsSetUnderlyingProtectionTermCurrency();
                }

                public bool IsSetUnderlyingProtectionTermCurrency()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermCurrency);
                }
                public QuickFix.Fields.UnderlyingProtectionTermSellerNotifies UnderlyingProtectionTermSellerNotifies
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val = new QuickFix.Fields.UnderlyingProtectionTermSellerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    this.UnderlyingProtectionTermSellerNotifies = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermSellerNotifies Get(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    return IsSetUnderlyingProtectionTermSellerNotifies();
                }

                public bool IsSetUnderlyingProtectionTermSellerNotifies()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermSellerNotifies);
                }
                public QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies UnderlyingProtectionTermBuyerNotifies
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val = new QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    this.UnderlyingProtectionTermBuyerNotifies = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies Get(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    return IsSetUnderlyingProtectionTermBuyerNotifies();
                }

                public bool IsSetUnderlyingProtectionTermBuyerNotifies()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermBuyerNotifies);
                }
                public QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter UnderlyingProtectionTermEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val = new QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    this.UnderlyingProtectionTermEventBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter Get(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    return IsSetUnderlyingProtectionTermEventBusinessCenter();
                }

                public bool IsSetUnderlyingProtectionTermEventBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermEventBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProtectionTermStandardSources UnderlyingProtectionTermStandardSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermStandardSources val = new QuickFix.Fields.UnderlyingProtectionTermStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    this.UnderlyingProtectionTermStandardSources = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermStandardSources Get(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    return IsSetUnderlyingProtectionTermStandardSources();
                }

                public bool IsSetUnderlyingProtectionTermStandardSources()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermStandardSources);
                }
                public QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources UnderlyingProtectionTermEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val = new QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    this.UnderlyingProtectionTermEventMinimumSources = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources Get(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    return IsSetUnderlyingProtectionTermEventMinimumSources();
                }

                public bool IsSetUnderlyingProtectionTermEventMinimumSources()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermEventMinimumSources);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources NoUnderlyingProtectionTermEventNewsSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val = new QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    this.NoUnderlyingProtectionTermEventNewsSources = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources Get(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    return IsSetNoUnderlyingProtectionTermEventNewsSources();
                }

                public bool IsSetNoUnderlyingProtectionTermEventNewsSources()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermEventNewsSources);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermEvents NoUnderlyingProtectionTermEvents
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermEvents val = new QuickFix.Fields.NoUnderlyingProtectionTermEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    this.NoUnderlyingProtectionTermEvents = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermEvents Get(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    return IsSetNoUnderlyingProtectionTermEvents();
                }

                public bool IsSetNoUnderlyingProtectionTermEvents()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermEvents);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermObligations NoUnderlyingProtectionTermObligations
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermObligations val = new QuickFix.Fields.NoUnderlyingProtectionTermObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    this.NoUnderlyingProtectionTermObligations = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermObligations Get(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    return IsSetNoUnderlyingProtectionTermObligations();
                }

                public bool IsSetNoUnderlyingProtectionTermObligations()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermObligations);
                }
                public QuickFix.Fields.UnderlyingProtectionTermXID UnderlyingProtectionTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermXID val = new QuickFix.Fields.UnderlyingProtectionTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    this.UnderlyingProtectionTermXID = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermXID Get(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    return IsSetUnderlyingProtectionTermXID();
                }

                public bool IsSetUnderlyingProtectionTermXID()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermXID);
                }
                public class NoUnderlyingProtectionTermEventNewsSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventNewsSource, 0 };

                    public NoUnderlyingProtectionTermEventNewsSourcesGroup()
                      : base(Tags.NoUnderlyingProtectionTermEventNewsSources, Tags.UnderlyingProtectionTermEventNewsSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermEventNewsSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventNewsSource UnderlyingProtectionTermEventNewsSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val = new QuickFix.Fields.UnderlyingProtectionTermEventNewsSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        this.UnderlyingProtectionTermEventNewsSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventNewsSource Get(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        return IsSetUnderlyingProtectionTermEventNewsSource();
                    }

                    public bool IsSetUnderlyingProtectionTermEventNewsSource()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventNewsSource);
                    }

                }
                public class NoUnderlyingProtectionTermEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventType, Tags.UnderlyingProtectionTermEventValue, Tags.UnderlyingProtectionTermEventCurrency, Tags.UnderlyingProtectionTermEventPeriod, Tags.UnderlyingProtectionTermEventUnit, Tags.UnderlyingProtectionTermEventDayType, Tags.UnderlyingProtectionTermEventRateSource, Tags.NoUnderlyingProtectionTermEventQualifiers, 0 };

                    public NoUnderlyingProtectionTermEventsGroup()
                      : base(Tags.NoUnderlyingProtectionTermEvents, Tags.UnderlyingProtectionTermEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventType UnderlyingProtectionTermEventType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventType val = new QuickFix.Fields.UnderlyingProtectionTermEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        this.UnderlyingProtectionTermEventType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventType Get(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        return IsSetUnderlyingProtectionTermEventType();
                    }

                    public bool IsSetUnderlyingProtectionTermEventType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventValue UnderlyingProtectionTermEventValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventValue val = new QuickFix.Fields.UnderlyingProtectionTermEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        this.UnderlyingProtectionTermEventValue = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventValue Get(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        return IsSetUnderlyingProtectionTermEventValue();
                    }

                    public bool IsSetUnderlyingProtectionTermEventValue()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventValue);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventCurrency UnderlyingProtectionTermEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventCurrency val = new QuickFix.Fields.UnderlyingProtectionTermEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        this.UnderlyingProtectionTermEventCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventCurrency Get(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        return IsSetUnderlyingProtectionTermEventCurrency();
                    }

                    public bool IsSetUnderlyingProtectionTermEventCurrency()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventCurrency);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventPeriod UnderlyingProtectionTermEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventPeriod val = new QuickFix.Fields.UnderlyingProtectionTermEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        this.UnderlyingProtectionTermEventPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventPeriod Get(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        return IsSetUnderlyingProtectionTermEventPeriod();
                    }

                    public bool IsSetUnderlyingProtectionTermEventPeriod()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventPeriod);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventUnit UnderlyingProtectionTermEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventUnit val = new QuickFix.Fields.UnderlyingProtectionTermEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        this.UnderlyingProtectionTermEventUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventUnit Get(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        return IsSetUnderlyingProtectionTermEventUnit();
                    }

                    public bool IsSetUnderlyingProtectionTermEventUnit()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventUnit);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventDayType UnderlyingProtectionTermEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventDayType val = new QuickFix.Fields.UnderlyingProtectionTermEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        this.UnderlyingProtectionTermEventDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventDayType Get(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        return IsSetUnderlyingProtectionTermEventDayType();
                    }

                    public bool IsSetUnderlyingProtectionTermEventDayType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventDayType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventRateSource UnderlyingProtectionTermEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventRateSource val = new QuickFix.Fields.UnderlyingProtectionTermEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        this.UnderlyingProtectionTermEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventRateSource Get(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        return IsSetUnderlyingProtectionTermEventRateSource();
                    }

                    public bool IsSetUnderlyingProtectionTermEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventRateSource);
                    }
                    public QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers NoUnderlyingProtectionTermEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val = new QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        this.NoUnderlyingProtectionTermEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers Get(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        return IsSetNoUnderlyingProtectionTermEventQualifiers();
                    }

                    public bool IsSetNoUnderlyingProtectionTermEventQualifiers()
                    {
                        return IsSetField(Tags.NoUnderlyingProtectionTermEventQualifiers);
                    }
                    public class NoUnderlyingProtectionTermEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventQualifier, 0 };

                        public NoUnderlyingProtectionTermEventQualifiersGroup()
                          : base(Tags.NoUnderlyingProtectionTermEventQualifiers, Tags.UnderlyingProtectionTermEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingProtectionTermEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingProtectionTermEventQualifier UnderlyingProtectionTermEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProtectionTermEventQualifier val = new QuickFix.Fields.UnderlyingProtectionTermEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            this.UnderlyingProtectionTermEventQualifier = val;
                        }

                        public QuickFix.Fields.UnderlyingProtectionTermEventQualifier Get(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            return IsSetUnderlyingProtectionTermEventQualifier();
                        }

                        public bool IsSetUnderlyingProtectionTermEventQualifier()
                        {
                            return IsSetField(Tags.UnderlyingProtectionTermEventQualifier);
                        }

                    }
                }
                public class NoUnderlyingProtectionTermObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermObligationType, Tags.UnderlyingProtectionTermObligationValue, 0 };

                    public NoUnderlyingProtectionTermObligationsGroup()
                      : base(Tags.NoUnderlyingProtectionTermObligations, Tags.UnderlyingProtectionTermObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationType UnderlyingProtectionTermObligationType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermObligationType val = new QuickFix.Fields.UnderlyingProtectionTermObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        this.UnderlyingProtectionTermObligationType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationType Get(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        return IsSetUnderlyingProtectionTermObligationType();
                    }

                    public bool IsSetUnderlyingProtectionTermObligationType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermObligationType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermObligationValue UnderlyingProtectionTermObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermObligationValue val = new QuickFix.Fields.UnderlyingProtectionTermObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        this.UnderlyingProtectionTermObligationValue = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationValue Get(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        return IsSetUnderlyingProtectionTermObligationValue();
                    }

                    public bool IsSetUnderlyingProtectionTermObligationValue()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermObligationValue);
                    }

                }
            }
            public class NoUnderlyingCashSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingCashSettlCurrency, Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset, Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset, Tags.UnderlyingCashSettlNumOfValuationDates, Tags.UnderlyingCashSettlValuationTime, Tags.UnderlyingCashSettlBusinessCenter, Tags.UnderlyingCashSettlQuoteMethod, Tags.UnderlyingCashSettlQuoteAmount, Tags.UnderlyingCashSettlQuoteCurrency, Tags.UnderlyingCashSettlMinimumQuoteAmount, Tags.UnderlyingCashSettlMinimumQuoteCurrency, Tags.NoUnderlyingCashSettlDealers, Tags.UnderlyingCashSettlBusinessDays, Tags.UnderlyingCashSettlAmount, Tags.UnderlyingCashSettlRecoveryFactor, Tags.UnderlyingCashSettlFixedTermIndicator, Tags.UnderlyingCashSettlAccruedInterestIndicator, Tags.UnderlyingCashSettlValuationMethod, Tags.UnderlyingCashSettlTermXID, Tags.UnderlyingCashSettlPriceSource, Tags.UnderlyingCashSettlPriceDefault, Tags.UnderlyingCashSettlDateUnadjusted, Tags.UnderlyingCashSettlDateBusinessDayConvention, Tags.NoUnderlyingCashSettlDateBusinessCenters, Tags.UnderlyingCashSettlDateRelativeTo, Tags.UnderlyingCashSettlDateOffsetPeriod, Tags.UnderlyingCashSettlDateOffsetUnit, Tags.UnderlyingCashSettlDateOffsetDayType, Tags.UnderlyingCashSettlDateAdjusted, 0 };

                public NoUnderlyingCashSettlTermsGroup()
                  : base(Tags.NoUnderlyingCashSettlTerms, Tags.UnderlyingCashSettlCurrency, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingCashSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingCashSettlCurrency UnderlyingCashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlCurrency val = new QuickFix.Fields.UnderlyingCashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    this.UnderlyingCashSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlCurrency Get(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    return IsSetUnderlyingCashSettlCurrency();
                }

                public bool IsSetUnderlyingCashSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset UnderlyingCashSettlValuationFirstBusinessDayOffset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val = new QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    this.UnderlyingCashSettlValuationFirstBusinessDayOffset = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset Get(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    return IsSetUnderlyingCashSettlValuationFirstBusinessDayOffset();
                }

                public bool IsSetUnderlyingCashSettlValuationFirstBusinessDayOffset()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset UnderlyingCashSettlValuationSubsequentBusinessDaysOffset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val = new QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    this.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset Get(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    return IsSetUnderlyingCashSettlValuationSubsequentBusinessDaysOffset();
                }

                public bool IsSetUnderlyingCashSettlValuationSubsequentBusinessDaysOffset()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset);
                }
                public QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates UnderlyingCashSettlNumOfValuationDates
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val = new QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    this.UnderlyingCashSettlNumOfValuationDates = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates Get(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    return IsSetUnderlyingCashSettlNumOfValuationDates();
                }

                public bool IsSetUnderlyingCashSettlNumOfValuationDates()
                {
                    return IsSetField(Tags.UnderlyingCashSettlNumOfValuationDates);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationTime UnderlyingCashSettlValuationTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationTime val = new QuickFix.Fields.UnderlyingCashSettlValuationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    this.UnderlyingCashSettlValuationTime = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationTime Get(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    return IsSetUnderlyingCashSettlValuationTime();
                }

                public bool IsSetUnderlyingCashSettlValuationTime()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationTime);
                }
                public QuickFix.Fields.UnderlyingCashSettlBusinessCenter UnderlyingCashSettlBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlBusinessCenter val = new QuickFix.Fields.UnderlyingCashSettlBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    this.UnderlyingCashSettlBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlBusinessCenter Get(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    return IsSetUnderlyingCashSettlBusinessCenter();
                }

                public bool IsSetUnderlyingCashSettlBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingCashSettlBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteMethod UnderlyingCashSettlQuoteMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteMethod val = new QuickFix.Fields.UnderlyingCashSettlQuoteMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    this.UnderlyingCashSettlQuoteMethod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteMethod Get(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    return IsSetUnderlyingCashSettlQuoteMethod();
                }

                public bool IsSetUnderlyingCashSettlQuoteMethod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteMethod);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteAmount UnderlyingCashSettlQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteAmount val = new QuickFix.Fields.UnderlyingCashSettlQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    this.UnderlyingCashSettlQuoteAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteAmount Get(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    return IsSetUnderlyingCashSettlQuoteAmount();
                }

                public bool IsSetUnderlyingCashSettlQuoteAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteCurrency UnderlyingCashSettlQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val = new QuickFix.Fields.UnderlyingCashSettlQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    this.UnderlyingCashSettlQuoteCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteCurrency Get(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    return IsSetUnderlyingCashSettlQuoteCurrency();
                }

                public bool IsSetUnderlyingCashSettlQuoteCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteCurrency);
                }
                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount UnderlyingCashSettlMinimumQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val = new QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    this.UnderlyingCashSettlMinimumQuoteAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount Get(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    return IsSetUnderlyingCashSettlMinimumQuoteAmount();
                }

                public bool IsSetUnderlyingCashSettlMinimumQuoteAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlMinimumQuoteAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency UnderlyingCashSettlMinimumQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val = new QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    this.UnderlyingCashSettlMinimumQuoteCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency Get(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    return IsSetUnderlyingCashSettlMinimumQuoteCurrency();
                }

                public bool IsSetUnderlyingCashSettlMinimumQuoteCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlMinimumQuoteCurrency);
                }
                public QuickFix.Fields.NoUnderlyingCashSettlDealers NoUnderlyingCashSettlDealers
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingCashSettlDealers val = new QuickFix.Fields.NoUnderlyingCashSettlDealers();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    this.NoUnderlyingCashSettlDealers = val;
                }

                public QuickFix.Fields.NoUnderlyingCashSettlDealers Get(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    return IsSetNoUnderlyingCashSettlDealers();
                }

                public bool IsSetNoUnderlyingCashSettlDealers()
                {
                    return IsSetField(Tags.NoUnderlyingCashSettlDealers);
                }
                public QuickFix.Fields.UnderlyingCashSettlBusinessDays UnderlyingCashSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlBusinessDays val = new QuickFix.Fields.UnderlyingCashSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    this.UnderlyingCashSettlBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlBusinessDays Get(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    return IsSetUnderlyingCashSettlBusinessDays();
                }

                public bool IsSetUnderlyingCashSettlBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingCashSettlBusinessDays);
                }
                public QuickFix.Fields.UnderlyingCashSettlAmount UnderlyingCashSettlAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlAmount val = new QuickFix.Fields.UnderlyingCashSettlAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    this.UnderlyingCashSettlAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlAmount Get(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    return IsSetUnderlyingCashSettlAmount();
                }

                public bool IsSetUnderlyingCashSettlAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlRecoveryFactor UnderlyingCashSettlRecoveryFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val = new QuickFix.Fields.UnderlyingCashSettlRecoveryFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    this.UnderlyingCashSettlRecoveryFactor = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlRecoveryFactor Get(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    return IsSetUnderlyingCashSettlRecoveryFactor();
                }

                public bool IsSetUnderlyingCashSettlRecoveryFactor()
                {
                    return IsSetField(Tags.UnderlyingCashSettlRecoveryFactor);
                }
                public QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator UnderlyingCashSettlFixedTermIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val = new QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    this.UnderlyingCashSettlFixedTermIndicator = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator Get(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    return IsSetUnderlyingCashSettlFixedTermIndicator();
                }

                public bool IsSetUnderlyingCashSettlFixedTermIndicator()
                {
                    return IsSetField(Tags.UnderlyingCashSettlFixedTermIndicator);
                }
                public QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator UnderlyingCashSettlAccruedInterestIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val = new QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    this.UnderlyingCashSettlAccruedInterestIndicator = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator Get(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    return IsSetUnderlyingCashSettlAccruedInterestIndicator();
                }

                public bool IsSetUnderlyingCashSettlAccruedInterestIndicator()
                {
                    return IsSetField(Tags.UnderlyingCashSettlAccruedInterestIndicator);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationMethod UnderlyingCashSettlValuationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationMethod val = new QuickFix.Fields.UnderlyingCashSettlValuationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    this.UnderlyingCashSettlValuationMethod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationMethod Get(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    return IsSetUnderlyingCashSettlValuationMethod();
                }

                public bool IsSetUnderlyingCashSettlValuationMethod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationMethod);
                }
                public QuickFix.Fields.UnderlyingCashSettlTermXID UnderlyingCashSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlTermXID val = new QuickFix.Fields.UnderlyingCashSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    this.UnderlyingCashSettlTermXID = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlTermXID Get(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    return IsSetUnderlyingCashSettlTermXID();
                }

                public bool IsSetUnderlyingCashSettlTermXID()
                {
                    return IsSetField(Tags.UnderlyingCashSettlTermXID);
                }
                public QuickFix.Fields.UnderlyingCashSettlPriceSource UnderlyingCashSettlPriceSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlPriceSource val = new QuickFix.Fields.UnderlyingCashSettlPriceSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    this.UnderlyingCashSettlPriceSource = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlPriceSource Get(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    return IsSetUnderlyingCashSettlPriceSource();
                }

                public bool IsSetUnderlyingCashSettlPriceSource()
                {
                    return IsSetField(Tags.UnderlyingCashSettlPriceSource);
                }
                public QuickFix.Fields.UnderlyingCashSettlPriceDefault UnderlyingCashSettlPriceDefault
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlPriceDefault val = new QuickFix.Fields.UnderlyingCashSettlPriceDefault();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    this.UnderlyingCashSettlPriceDefault = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlPriceDefault Get(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    return IsSetUnderlyingCashSettlPriceDefault();
                }

                public bool IsSetUnderlyingCashSettlPriceDefault()
                {
                    return IsSetField(Tags.UnderlyingCashSettlPriceDefault);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateUnadjusted UnderlyingCashSettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val = new QuickFix.Fields.UnderlyingCashSettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    this.UnderlyingCashSettlDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateUnadjusted Get(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    return IsSetUnderlyingCashSettlDateUnadjusted();
                }

                public bool IsSetUnderlyingCashSettlDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention UnderlyingCashSettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    this.UnderlyingCashSettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingCashSettlDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingCashSettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters NoUnderlyingCashSettlDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    this.NoUnderlyingCashSettlDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingCashSettlDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingCashSettlDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingCashSettlDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateRelativeTo UnderlyingCashSettlDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val = new QuickFix.Fields.UnderlyingCashSettlDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    this.UnderlyingCashSettlDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateRelativeTo Get(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    return IsSetUnderlyingCashSettlDateRelativeTo();
                }

                public bool IsSetUnderlyingCashSettlDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod UnderlyingCashSettlDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    this.UnderlyingCashSettlDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetPeriod();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit UnderlyingCashSettlDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    this.UnderlyingCashSettlDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetUnit();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType UnderlyingCashSettlDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    this.UnderlyingCashSettlDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetDayType();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateAdjusted UnderlyingCashSettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateAdjusted val = new QuickFix.Fields.UnderlyingCashSettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    this.UnderlyingCashSettlDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateAdjusted Get(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    return IsSetUnderlyingCashSettlDateAdjusted();
                }

                public bool IsSetUnderlyingCashSettlDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateAdjusted);
                }
                public class NoUnderlyingCashSettlDealersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingCashSettlDealer, 0 };

                    public NoUnderlyingCashSettlDealersGroup()
                      : base(Tags.NoUnderlyingCashSettlDealers, Tags.UnderlyingCashSettlDealer, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingCashSettlDealersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDealer UnderlyingCashSettlDealer
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingCashSettlDealer val = new QuickFix.Fields.UnderlyingCashSettlDealer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        this.UnderlyingCashSettlDealer = val;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDealer Get(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        return IsSetUnderlyingCashSettlDealer();
                    }

                    public bool IsSetUnderlyingCashSettlDealer()
                    {
                        return IsSetField(Tags.UnderlyingCashSettlDealer);
                    }

                }
                public class NoUnderlyingCashSettlDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingCashSettlDateBusinessCenter, 0 };

                    public NoUnderlyingCashSettlDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingCashSettlDateBusinessCenters, Tags.UnderlyingCashSettlDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingCashSettlDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter UnderlyingCashSettlDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val = new QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        this.UnderlyingCashSettlDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter Get(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        return IsSetUnderlyingCashSettlDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingCashSettlDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingCashSettlDateBusinessCenter);
                    }

                }
            }
            public class NoUnderlyingPhysicalSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.NoUnderlyingPhysicalSettlDeliverableObligations, Tags.UnderlyingPhysicalSettlCurrency, Tags.UnderlyingPhysicalSettlBusinessDays, Tags.UnderlyingPhysicalSettlMaximumBusinessDays, Tags.UnderlyingPhysicalSettlTermXID, 0 };

                public NoUnderlyingPhysicalSettlTermsGroup()
                  : base(Tags.NoUnderlyingPhysicalSettlTerms, Tags.NoUnderlyingPhysicalSettlDeliverableObligations, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingPhysicalSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations NoUnderlyingPhysicalSettlDeliverableObligations
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val = new QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    this.NoUnderlyingPhysicalSettlDeliverableObligations = val;
                }

                public QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations Get(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    return IsSetNoUnderlyingPhysicalSettlDeliverableObligations();
                }

                public bool IsSetNoUnderlyingPhysicalSettlDeliverableObligations()
                {
                    return IsSetField(Tags.NoUnderlyingPhysicalSettlDeliverableObligations);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlCurrency UnderlyingPhysicalSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlCurrency val = new QuickFix.Fields.UnderlyingPhysicalSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    this.UnderlyingPhysicalSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlCurrency Get(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    return IsSetUnderlyingPhysicalSettlCurrency();
                }

                public bool IsSetUnderlyingPhysicalSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays UnderlyingPhysicalSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val = new QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    this.UnderlyingPhysicalSettlBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays Get(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    return IsSetUnderlyingPhysicalSettlBusinessDays();
                }

                public bool IsSetUnderlyingPhysicalSettlBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlBusinessDays);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays UnderlyingPhysicalSettlMaximumBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val = new QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    this.UnderlyingPhysicalSettlMaximumBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays Get(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    return IsSetUnderlyingPhysicalSettlMaximumBusinessDays();
                }

                public bool IsSetUnderlyingPhysicalSettlMaximumBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlMaximumBusinessDays);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlTermXID UnderlyingPhysicalSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlTermXID val = new QuickFix.Fields.UnderlyingPhysicalSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    this.UnderlyingPhysicalSettlTermXID = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlTermXID Get(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    return IsSetUnderlyingPhysicalSettlTermXID();
                }

                public bool IsSetUnderlyingPhysicalSettlTermXID()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlTermXID);
                }
                public class NoUnderlyingPhysicalSettlDeliverableObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPhysicalSettlDeliverableObligationType, Tags.UnderlyingPhysicalSettlDeliverableObligationValue, 0 };

                    public NoUnderlyingPhysicalSettlDeliverableObligationsGroup()
                      : base(Tags.NoUnderlyingPhysicalSettlDeliverableObligations, Tags.UnderlyingPhysicalSettlDeliverableObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPhysicalSettlDeliverableObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType UnderlyingPhysicalSettlDeliverableObligationType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val = new QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        this.UnderlyingPhysicalSettlDeliverableObligationType = val;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType Get(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        return IsSetUnderlyingPhysicalSettlDeliverableObligationType();
                    }

                    public bool IsSetUnderlyingPhysicalSettlDeliverableObligationType()
                    {
                        return IsSetField(Tags.UnderlyingPhysicalSettlDeliverableObligationType);
                    }
                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue UnderlyingPhysicalSettlDeliverableObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val = new QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        this.UnderlyingPhysicalSettlDeliverableObligationValue = val;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue Get(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        return IsSetUnderlyingPhysicalSettlDeliverableObligationValue();
                    }

                    public bool IsSetUnderlyingPhysicalSettlDeliverableObligationValue()
                    {
                        return IsSetField(Tags.UnderlyingPhysicalSettlDeliverableObligationValue);
                    }

                }
            }
            public class NoUnderlyingRateSpreadStepsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingRateSpreadStepDate, Tags.UnderlyingRateSpreadStepValue, 0 };

                public NoUnderlyingRateSpreadStepsGroup()
                  : base(Tags.NoUnderlyingRateSpreadSteps, Tags.UnderlyingRateSpreadStepDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingRateSpreadStepsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepDate UnderlyingRateSpreadStepDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingRateSpreadStepDate val = new QuickFix.Fields.UnderlyingRateSpreadStepDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    this.UnderlyingRateSpreadStepDate = val;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepDate Get(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    return IsSetUnderlyingRateSpreadStepDate();
                }

                public bool IsSetUnderlyingRateSpreadStepDate()
                {
                    return IsSetField(Tags.UnderlyingRateSpreadStepDate);
                }
                public QuickFix.Fields.UnderlyingRateSpreadStepValue UnderlyingRateSpreadStepValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingRateSpreadStepValue val = new QuickFix.Fields.UnderlyingRateSpreadStepValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    this.UnderlyingRateSpreadStepValue = val;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepValue Get(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    return IsSetUnderlyingRateSpreadStepValue();
                }

                public bool IsSetUnderlyingRateSpreadStepValue()
                {
                    return IsSetField(Tags.UnderlyingRateSpreadStepValue);
                }

            }
            public class NoUnderlyingDividendPaymentsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingDividendPaymentDate, Tags.UnderlyingDividendPaymentAmount, Tags.UnderlyingDividendPaymentCurrency, Tags.UnderlyingDividendAccruedInterest, 0 };

                public NoUnderlyingDividendPaymentsGroup()
                  : base(Tags.NoUnderlyingDividendPayments, Tags.UnderlyingDividendPaymentDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingDividendPaymentsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentDate UnderlyingDividendPaymentDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentDate val = new QuickFix.Fields.UnderlyingDividendPaymentDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    this.UnderlyingDividendPaymentDate = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentDate Get(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    return IsSetUnderlyingDividendPaymentDate();
                }

                public bool IsSetUnderlyingDividendPaymentDate()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentDate);
                }
                public QuickFix.Fields.UnderlyingDividendPaymentAmount UnderlyingDividendPaymentAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentAmount val = new QuickFix.Fields.UnderlyingDividendPaymentAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    this.UnderlyingDividendPaymentAmount = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentAmount Get(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    return IsSetUnderlyingDividendPaymentAmount();
                }

                public bool IsSetUnderlyingDividendPaymentAmount()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentAmount);
                }
                public QuickFix.Fields.UnderlyingDividendPaymentCurrency UnderlyingDividendPaymentCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentCurrency val = new QuickFix.Fields.UnderlyingDividendPaymentCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    this.UnderlyingDividendPaymentCurrency = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentCurrency Get(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    return IsSetUnderlyingDividendPaymentCurrency();
                }

                public bool IsSetUnderlyingDividendPaymentCurrency()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentCurrency);
                }
                public QuickFix.Fields.UnderlyingDividendAccruedInterest UnderlyingDividendAccruedInterest
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccruedInterest val = new QuickFix.Fields.UnderlyingDividendAccruedInterest();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    this.UnderlyingDividendAccruedInterest = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccruedInterest Get(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    return IsSetUnderlyingDividendAccruedInterest();
                }

                public bool IsSetUnderlyingDividendAccruedInterest()
                {
                    return IsSetField(Tags.UnderlyingDividendAccruedInterest);
                }

            }
            public class NoUnderlyingExtraordinaryEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingExtraordinaryEventType, Tags.UnderlyingExtraordinaryEventValue, 0 };

                public NoUnderlyingExtraordinaryEventsGroup()
                  : base(Tags.NoUnderlyingExtraordinaryEvents, Tags.UnderlyingExtraordinaryEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingExtraordinaryEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventType UnderlyingExtraordinaryEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryEventType val = new QuickFix.Fields.UnderlyingExtraordinaryEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    this.UnderlyingExtraordinaryEventType = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventType Get(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    return IsSetUnderlyingExtraordinaryEventType();
                }

                public bool IsSetUnderlyingExtraordinaryEventType()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryEventType);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryEventValue UnderlyingExtraordinaryEventValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryEventValue val = new QuickFix.Fields.UnderlyingExtraordinaryEventValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    this.UnderlyingExtraordinaryEventValue = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventValue Get(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    return IsSetUnderlyingExtraordinaryEventValue();
                }

                public bool IsSetUnderlyingExtraordinaryEventValue()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryEventValue);
                }

            }
            public class NoDerivativeSecurityAltIDGroup : Group
            {
                public static int[] fieldOrder = { Tags.DerivativeSecurityAltID, Tags.DerivativeSecurityAltIDSource, 0 };

                public NoDerivativeSecurityAltIDGroup()
                  : base(Tags.NoDerivativeSecurityAltID, Tags.DerivativeSecurityAltID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoDerivativeSecurityAltIDGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.DerivativeSecurityAltID DerivativeSecurityAltID
                {
                    get
                    {
                        QuickFix.Fields.DerivativeSecurityAltID val = new QuickFix.Fields.DerivativeSecurityAltID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeSecurityAltID val)
                {
                    this.DerivativeSecurityAltID = val;
                }

                public QuickFix.Fields.DerivativeSecurityAltID Get(QuickFix.Fields.DerivativeSecurityAltID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeSecurityAltID val)
                {
                    return IsSetDerivativeSecurityAltID();
                }

                public bool IsSetDerivativeSecurityAltID()
                {
                    return IsSetField(Tags.DerivativeSecurityAltID);
                }
                public QuickFix.Fields.DerivativeSecurityAltIDSource DerivativeSecurityAltIDSource
                {
                    get
                    {
                        QuickFix.Fields.DerivativeSecurityAltIDSource val = new QuickFix.Fields.DerivativeSecurityAltIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeSecurityAltIDSource val)
                {
                    this.DerivativeSecurityAltIDSource = val;
                }

                public QuickFix.Fields.DerivativeSecurityAltIDSource Get(QuickFix.Fields.DerivativeSecurityAltIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeSecurityAltIDSource val)
                {
                    return IsSetDerivativeSecurityAltIDSource();
                }

                public bool IsSetDerivativeSecurityAltIDSource()
                {
                    return IsSetField(Tags.DerivativeSecurityAltIDSource);
                }

            }
            public class NoDerivativeEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.DerivativeEventType, Tags.DerivativeEventDate, Tags.DerivativeEventTime, Tags.DerivativeEventPx, Tags.DerivativeEventText, 0 };

                public NoDerivativeEventsGroup()
                  : base(Tags.NoDerivativeEvents, Tags.DerivativeEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoDerivativeEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.DerivativeEventType DerivativeEventType
                {
                    get
                    {
                        QuickFix.Fields.DerivativeEventType val = new QuickFix.Fields.DerivativeEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeEventType val)
                {
                    this.DerivativeEventType = val;
                }

                public QuickFix.Fields.DerivativeEventType Get(QuickFix.Fields.DerivativeEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeEventType val)
                {
                    return IsSetDerivativeEventType();
                }

                public bool IsSetDerivativeEventType()
                {
                    return IsSetField(Tags.DerivativeEventType);
                }
                public QuickFix.Fields.DerivativeEventDate DerivativeEventDate
                {
                    get
                    {
                        QuickFix.Fields.DerivativeEventDate val = new QuickFix.Fields.DerivativeEventDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeEventDate val)
                {
                    this.DerivativeEventDate = val;
                }

                public QuickFix.Fields.DerivativeEventDate Get(QuickFix.Fields.DerivativeEventDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeEventDate val)
                {
                    return IsSetDerivativeEventDate();
                }

                public bool IsSetDerivativeEventDate()
                {
                    return IsSetField(Tags.DerivativeEventDate);
                }
                public QuickFix.Fields.DerivativeEventTime DerivativeEventTime
                {
                    get
                    {
                        QuickFix.Fields.DerivativeEventTime val = new QuickFix.Fields.DerivativeEventTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeEventTime val)
                {
                    this.DerivativeEventTime = val;
                }

                public QuickFix.Fields.DerivativeEventTime Get(QuickFix.Fields.DerivativeEventTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeEventTime val)
                {
                    return IsSetDerivativeEventTime();
                }

                public bool IsSetDerivativeEventTime()
                {
                    return IsSetField(Tags.DerivativeEventTime);
                }
                public QuickFix.Fields.DerivativeEventPx DerivativeEventPx
                {
                    get
                    {
                        QuickFix.Fields.DerivativeEventPx val = new QuickFix.Fields.DerivativeEventPx();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeEventPx val)
                {
                    this.DerivativeEventPx = val;
                }

                public QuickFix.Fields.DerivativeEventPx Get(QuickFix.Fields.DerivativeEventPx val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeEventPx val)
                {
                    return IsSetDerivativeEventPx();
                }

                public bool IsSetDerivativeEventPx()
                {
                    return IsSetField(Tags.DerivativeEventPx);
                }
                public QuickFix.Fields.DerivativeEventText DerivativeEventText
                {
                    get
                    {
                        QuickFix.Fields.DerivativeEventText val = new QuickFix.Fields.DerivativeEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeEventText val)
                {
                    this.DerivativeEventText = val;
                }

                public QuickFix.Fields.DerivativeEventText Get(QuickFix.Fields.DerivativeEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeEventText val)
                {
                    return IsSetDerivativeEventText();
                }

                public bool IsSetDerivativeEventText()
                {
                    return IsSetField(Tags.DerivativeEventText);
                }

            }
            public class NoDerivativeInstrumentPartiesGroup : Group
            {
                public static int[] fieldOrder = { Tags.DerivativeInstrumentPartyID, Tags.DerivativeInstrumentPartyIDSource, Tags.DerivativeInstrumentPartyRole, Tags.NoDerivativeInstrumentPartySubIDs, Tags.DerivativeInstrumentPartyRoleQualifier, 0 };

                public NoDerivativeInstrumentPartiesGroup()
                  : base(Tags.NoDerivativeInstrumentParties, Tags.DerivativeInstrumentPartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoDerivativeInstrumentPartiesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.DerivativeInstrumentPartyID DerivativeInstrumentPartyID
                {
                    get
                    {
                        QuickFix.Fields.DerivativeInstrumentPartyID val = new QuickFix.Fields.DerivativeInstrumentPartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeInstrumentPartyID val)
                {
                    this.DerivativeInstrumentPartyID = val;
                }

                public QuickFix.Fields.DerivativeInstrumentPartyID Get(QuickFix.Fields.DerivativeInstrumentPartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartyID val)
                {
                    return IsSetDerivativeInstrumentPartyID();
                }

                public bool IsSetDerivativeInstrumentPartyID()
                {
                    return IsSetField(Tags.DerivativeInstrumentPartyID);
                }
                public QuickFix.Fields.DerivativeInstrumentPartyIDSource DerivativeInstrumentPartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.DerivativeInstrumentPartyIDSource val = new QuickFix.Fields.DerivativeInstrumentPartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeInstrumentPartyIDSource val)
                {
                    this.DerivativeInstrumentPartyIDSource = val;
                }

                public QuickFix.Fields.DerivativeInstrumentPartyIDSource Get(QuickFix.Fields.DerivativeInstrumentPartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartyIDSource val)
                {
                    return IsSetDerivativeInstrumentPartyIDSource();
                }

                public bool IsSetDerivativeInstrumentPartyIDSource()
                {
                    return IsSetField(Tags.DerivativeInstrumentPartyIDSource);
                }
                public QuickFix.Fields.DerivativeInstrumentPartyRole DerivativeInstrumentPartyRole
                {
                    get
                    {
                        QuickFix.Fields.DerivativeInstrumentPartyRole val = new QuickFix.Fields.DerivativeInstrumentPartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeInstrumentPartyRole val)
                {
                    this.DerivativeInstrumentPartyRole = val;
                }

                public QuickFix.Fields.DerivativeInstrumentPartyRole Get(QuickFix.Fields.DerivativeInstrumentPartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartyRole val)
                {
                    return IsSetDerivativeInstrumentPartyRole();
                }

                public bool IsSetDerivativeInstrumentPartyRole()
                {
                    return IsSetField(Tags.DerivativeInstrumentPartyRole);
                }
                public QuickFix.Fields.NoDerivativeInstrumentPartySubIDs NoDerivativeInstrumentPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoDerivativeInstrumentPartySubIDs val = new QuickFix.Fields.NoDerivativeInstrumentPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDerivativeInstrumentPartySubIDs val)
                {
                    this.NoDerivativeInstrumentPartySubIDs = val;
                }

                public QuickFix.Fields.NoDerivativeInstrumentPartySubIDs Get(QuickFix.Fields.NoDerivativeInstrumentPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDerivativeInstrumentPartySubIDs val)
                {
                    return IsSetNoDerivativeInstrumentPartySubIDs();
                }

                public bool IsSetNoDerivativeInstrumentPartySubIDs()
                {
                    return IsSetField(Tags.NoDerivativeInstrumentPartySubIDs);
                }
                public QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier DerivativeInstrumentPartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier val = new QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier val)
                {
                    this.DerivativeInstrumentPartyRoleQualifier = val;
                }

                public QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier Get(QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartyRoleQualifier val)
                {
                    return IsSetDerivativeInstrumentPartyRoleQualifier();
                }

                public bool IsSetDerivativeInstrumentPartyRoleQualifier()
                {
                    return IsSetField(Tags.DerivativeInstrumentPartyRoleQualifier);
                }
                public class NoDerivativeInstrumentPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DerivativeInstrumentPartySubID, Tags.DerivativeInstrumentPartySubIDType, 0 };

                    public NoDerivativeInstrumentPartySubIDsGroup()
                      : base(Tags.NoDerivativeInstrumentPartySubIDs, Tags.DerivativeInstrumentPartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDerivativeInstrumentPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DerivativeInstrumentPartySubID DerivativeInstrumentPartySubID
                    {
                        get
                        {
                            QuickFix.Fields.DerivativeInstrumentPartySubID val = new QuickFix.Fields.DerivativeInstrumentPartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DerivativeInstrumentPartySubID val)
                    {
                        this.DerivativeInstrumentPartySubID = val;
                    }

                    public QuickFix.Fields.DerivativeInstrumentPartySubID Get(QuickFix.Fields.DerivativeInstrumentPartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartySubID val)
                    {
                        return IsSetDerivativeInstrumentPartySubID();
                    }

                    public bool IsSetDerivativeInstrumentPartySubID()
                    {
                        return IsSetField(Tags.DerivativeInstrumentPartySubID);
                    }
                    public QuickFix.Fields.DerivativeInstrumentPartySubIDType DerivativeInstrumentPartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.DerivativeInstrumentPartySubIDType val = new QuickFix.Fields.DerivativeInstrumentPartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DerivativeInstrumentPartySubIDType val)
                    {
                        this.DerivativeInstrumentPartySubIDType = val;
                    }

                    public QuickFix.Fields.DerivativeInstrumentPartySubIDType Get(QuickFix.Fields.DerivativeInstrumentPartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DerivativeInstrumentPartySubIDType val)
                    {
                        return IsSetDerivativeInstrumentPartySubIDType();
                    }

                    public bool IsSetDerivativeInstrumentPartySubIDType()
                    {
                        return IsSetField(Tags.DerivativeInstrumentPartySubIDType);
                    }

                }
            }
        }
    }
}
