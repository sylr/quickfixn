// This is a generated file.  Don't edit it directly!

using QuickFix.Fields;
namespace QuickFix
{
    namespace FIX50SP2
    {
        public class OrderMassStatusRequest : Message
        {
            public const string MsgType = "AF";

            public OrderMassStatusRequest() : base()
            {
                this.Header.SetField(new QuickFix.Fields.MsgType("AF"));
            }

            public OrderMassStatusRequest(
                    QuickFix.Fields.MassStatusReqID aMassStatusReqID,
                    QuickFix.Fields.MassStatusReqType aMassStatusReqType
                ) : this()
            {
                this.MassStatusReqID = aMassStatusReqID;
                this.MassStatusReqType = aMassStatusReqType;
            }

            public QuickFix.Fields.MassStatusReqID MassStatusReqID
            {
                get
                {
                    QuickFix.Fields.MassStatusReqID val = new QuickFix.Fields.MassStatusReqID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MassStatusReqID val)
            {
                this.MassStatusReqID = val;
            }

            public QuickFix.Fields.MassStatusReqID Get(QuickFix.Fields.MassStatusReqID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MassStatusReqID val)
            {
                return IsSetMassStatusReqID();
            }

            public bool IsSetMassStatusReqID()
            {
                return IsSetField(Tags.MassStatusReqID);
            }
            public QuickFix.Fields.MassStatusReqType MassStatusReqType
            {
                get
                {
                    QuickFix.Fields.MassStatusReqType val = new QuickFix.Fields.MassStatusReqType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MassStatusReqType val)
            {
                this.MassStatusReqType = val;
            }

            public QuickFix.Fields.MassStatusReqType Get(QuickFix.Fields.MassStatusReqType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MassStatusReqType val)
            {
                return IsSetMassStatusReqType();
            }

            public bool IsSetMassStatusReqType()
            {
                return IsSetField(Tags.MassStatusReqType);
            }
            public QuickFix.Fields.NoPartyIDs NoPartyIDs
            {
                get
                {
                    QuickFix.Fields.NoPartyIDs val = new QuickFix.Fields.NoPartyIDs();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoPartyIDs val)
            {
                this.NoPartyIDs = val;
            }

            public QuickFix.Fields.NoPartyIDs Get(QuickFix.Fields.NoPartyIDs val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoPartyIDs val)
            {
                return IsSetNoPartyIDs();
            }

            public bool IsSetNoPartyIDs()
            {
                return IsSetField(Tags.NoPartyIDs);
            }
            public QuickFix.Fields.Account Account
            {
                get
                {
                    QuickFix.Fields.Account val = new QuickFix.Fields.Account();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Account val)
            {
                this.Account = val;
            }

            public QuickFix.Fields.Account Get(QuickFix.Fields.Account val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Account val)
            {
                return IsSetAccount();
            }

            public bool IsSetAccount()
            {
                return IsSetField(Tags.Account);
            }
            public QuickFix.Fields.AcctIDSource AcctIDSource
            {
                get
                {
                    QuickFix.Fields.AcctIDSource val = new QuickFix.Fields.AcctIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AcctIDSource val)
            {
                this.AcctIDSource = val;
            }

            public QuickFix.Fields.AcctIDSource Get(QuickFix.Fields.AcctIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AcctIDSource val)
            {
                return IsSetAcctIDSource();
            }

            public bool IsSetAcctIDSource()
            {
                return IsSetField(Tags.AcctIDSource);
            }
            public QuickFix.Fields.TradingSessionID TradingSessionID
            {
                get
                {
                    QuickFix.Fields.TradingSessionID val = new QuickFix.Fields.TradingSessionID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TradingSessionID val)
            {
                this.TradingSessionID = val;
            }

            public QuickFix.Fields.TradingSessionID Get(QuickFix.Fields.TradingSessionID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TradingSessionID val)
            {
                return IsSetTradingSessionID();
            }

            public bool IsSetTradingSessionID()
            {
                return IsSetField(Tags.TradingSessionID);
            }
            public QuickFix.Fields.TradingSessionSubID TradingSessionSubID
            {
                get
                {
                    QuickFix.Fields.TradingSessionSubID val = new QuickFix.Fields.TradingSessionSubID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TradingSessionSubID val)
            {
                this.TradingSessionSubID = val;
            }

            public QuickFix.Fields.TradingSessionSubID Get(QuickFix.Fields.TradingSessionSubID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TradingSessionSubID val)
            {
                return IsSetTradingSessionSubID();
            }

            public bool IsSetTradingSessionSubID()
            {
                return IsSetField(Tags.TradingSessionSubID);
            }
            public QuickFix.Fields.Symbol Symbol
            {
                get
                {
                    QuickFix.Fields.Symbol val = new QuickFix.Fields.Symbol();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Symbol val)
            {
                this.Symbol = val;
            }

            public QuickFix.Fields.Symbol Get(QuickFix.Fields.Symbol val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Symbol val)
            {
                return IsSetSymbol();
            }

            public bool IsSetSymbol()
            {
                return IsSetField(Tags.Symbol);
            }
            public QuickFix.Fields.SymbolSfx SymbolSfx
            {
                get
                {
                    QuickFix.Fields.SymbolSfx val = new QuickFix.Fields.SymbolSfx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SymbolSfx val)
            {
                this.SymbolSfx = val;
            }

            public QuickFix.Fields.SymbolSfx Get(QuickFix.Fields.SymbolSfx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SymbolSfx val)
            {
                return IsSetSymbolSfx();
            }

            public bool IsSetSymbolSfx()
            {
                return IsSetField(Tags.SymbolSfx);
            }
            public QuickFix.Fields.SecurityID SecurityID
            {
                get
                {
                    QuickFix.Fields.SecurityID val = new QuickFix.Fields.SecurityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityID val)
            {
                this.SecurityID = val;
            }

            public QuickFix.Fields.SecurityID Get(QuickFix.Fields.SecurityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityID val)
            {
                return IsSetSecurityID();
            }

            public bool IsSetSecurityID()
            {
                return IsSetField(Tags.SecurityID);
            }
            public QuickFix.Fields.SecurityIDSource SecurityIDSource
            {
                get
                {
                    QuickFix.Fields.SecurityIDSource val = new QuickFix.Fields.SecurityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityIDSource val)
            {
                this.SecurityIDSource = val;
            }

            public QuickFix.Fields.SecurityIDSource Get(QuickFix.Fields.SecurityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityIDSource val)
            {
                return IsSetSecurityIDSource();
            }

            public bool IsSetSecurityIDSource()
            {
                return IsSetField(Tags.SecurityIDSource);
            }
            public QuickFix.Fields.NoSecurityAltID NoSecurityAltID
            {
                get
                {
                    QuickFix.Fields.NoSecurityAltID val = new QuickFix.Fields.NoSecurityAltID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoSecurityAltID val)
            {
                this.NoSecurityAltID = val;
            }

            public QuickFix.Fields.NoSecurityAltID Get(QuickFix.Fields.NoSecurityAltID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoSecurityAltID val)
            {
                return IsSetNoSecurityAltID();
            }

            public bool IsSetNoSecurityAltID()
            {
                return IsSetField(Tags.NoSecurityAltID);
            }
            public QuickFix.Fields.Product Product
            {
                get
                {
                    QuickFix.Fields.Product val = new QuickFix.Fields.Product();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Product val)
            {
                this.Product = val;
            }

            public QuickFix.Fields.Product Get(QuickFix.Fields.Product val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Product val)
            {
                return IsSetProduct();
            }

            public bool IsSetProduct()
            {
                return IsSetField(Tags.Product);
            }
            public QuickFix.Fields.ProductComplex ProductComplex
            {
                get
                {
                    QuickFix.Fields.ProductComplex val = new QuickFix.Fields.ProductComplex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ProductComplex val)
            {
                this.ProductComplex = val;
            }

            public QuickFix.Fields.ProductComplex Get(QuickFix.Fields.ProductComplex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ProductComplex val)
            {
                return IsSetProductComplex();
            }

            public bool IsSetProductComplex()
            {
                return IsSetField(Tags.ProductComplex);
            }
            public QuickFix.Fields.SecurityGroup SecurityGroup
            {
                get
                {
                    QuickFix.Fields.SecurityGroup val = new QuickFix.Fields.SecurityGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityGroup val)
            {
                this.SecurityGroup = val;
            }

            public QuickFix.Fields.SecurityGroup Get(QuickFix.Fields.SecurityGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityGroup val)
            {
                return IsSetSecurityGroup();
            }

            public bool IsSetSecurityGroup()
            {
                return IsSetField(Tags.SecurityGroup);
            }
            public QuickFix.Fields.CFICode CFICode
            {
                get
                {
                    QuickFix.Fields.CFICode val = new QuickFix.Fields.CFICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CFICode val)
            {
                this.CFICode = val;
            }

            public QuickFix.Fields.CFICode Get(QuickFix.Fields.CFICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CFICode val)
            {
                return IsSetCFICode();
            }

            public bool IsSetCFICode()
            {
                return IsSetField(Tags.CFICode);
            }
            public QuickFix.Fields.SecurityType SecurityType
            {
                get
                {
                    QuickFix.Fields.SecurityType val = new QuickFix.Fields.SecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityType val)
            {
                this.SecurityType = val;
            }

            public QuickFix.Fields.SecurityType Get(QuickFix.Fields.SecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityType val)
            {
                return IsSetSecurityType();
            }

            public bool IsSetSecurityType()
            {
                return IsSetField(Tags.SecurityType);
            }
            public QuickFix.Fields.SecuritySubType SecuritySubType
            {
                get
                {
                    QuickFix.Fields.SecuritySubType val = new QuickFix.Fields.SecuritySubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecuritySubType val)
            {
                this.SecuritySubType = val;
            }

            public QuickFix.Fields.SecuritySubType Get(QuickFix.Fields.SecuritySubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecuritySubType val)
            {
                return IsSetSecuritySubType();
            }

            public bool IsSetSecuritySubType()
            {
                return IsSetField(Tags.SecuritySubType);
            }
            public QuickFix.Fields.MaturityMonthYear MaturityMonthYear
            {
                get
                {
                    QuickFix.Fields.MaturityMonthYear val = new QuickFix.Fields.MaturityMonthYear();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MaturityMonthYear val)
            {
                this.MaturityMonthYear = val;
            }

            public QuickFix.Fields.MaturityMonthYear Get(QuickFix.Fields.MaturityMonthYear val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MaturityMonthYear val)
            {
                return IsSetMaturityMonthYear();
            }

            public bool IsSetMaturityMonthYear()
            {
                return IsSetField(Tags.MaturityMonthYear);
            }
            public QuickFix.Fields.MaturityDate MaturityDate
            {
                get
                {
                    QuickFix.Fields.MaturityDate val = new QuickFix.Fields.MaturityDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MaturityDate val)
            {
                this.MaturityDate = val;
            }

            public QuickFix.Fields.MaturityDate Get(QuickFix.Fields.MaturityDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MaturityDate val)
            {
                return IsSetMaturityDate();
            }

            public bool IsSetMaturityDate()
            {
                return IsSetField(Tags.MaturityDate);
            }
            public QuickFix.Fields.MaturityTime MaturityTime
            {
                get
                {
                    QuickFix.Fields.MaturityTime val = new QuickFix.Fields.MaturityTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MaturityTime val)
            {
                this.MaturityTime = val;
            }

            public QuickFix.Fields.MaturityTime Get(QuickFix.Fields.MaturityTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MaturityTime val)
            {
                return IsSetMaturityTime();
            }

            public bool IsSetMaturityTime()
            {
                return IsSetField(Tags.MaturityTime);
            }
            public QuickFix.Fields.SettleOnOpenFlag SettleOnOpenFlag
            {
                get
                {
                    QuickFix.Fields.SettleOnOpenFlag val = new QuickFix.Fields.SettleOnOpenFlag();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettleOnOpenFlag val)
            {
                this.SettleOnOpenFlag = val;
            }

            public QuickFix.Fields.SettleOnOpenFlag Get(QuickFix.Fields.SettleOnOpenFlag val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettleOnOpenFlag val)
            {
                return IsSetSettleOnOpenFlag();
            }

            public bool IsSetSettleOnOpenFlag()
            {
                return IsSetField(Tags.SettleOnOpenFlag);
            }
            public QuickFix.Fields.InstrmtAssignmentMethod InstrmtAssignmentMethod
            {
                get
                {
                    QuickFix.Fields.InstrmtAssignmentMethod val = new QuickFix.Fields.InstrmtAssignmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InstrmtAssignmentMethod val)
            {
                this.InstrmtAssignmentMethod = val;
            }

            public QuickFix.Fields.InstrmtAssignmentMethod Get(QuickFix.Fields.InstrmtAssignmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InstrmtAssignmentMethod val)
            {
                return IsSetInstrmtAssignmentMethod();
            }

            public bool IsSetInstrmtAssignmentMethod()
            {
                return IsSetField(Tags.InstrmtAssignmentMethod);
            }
            public QuickFix.Fields.SecurityStatus SecurityStatus
            {
                get
                {
                    QuickFix.Fields.SecurityStatus val = new QuickFix.Fields.SecurityStatus();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityStatus val)
            {
                this.SecurityStatus = val;
            }

            public QuickFix.Fields.SecurityStatus Get(QuickFix.Fields.SecurityStatus val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityStatus val)
            {
                return IsSetSecurityStatus();
            }

            public bool IsSetSecurityStatus()
            {
                return IsSetField(Tags.SecurityStatus);
            }
            public QuickFix.Fields.CouponPaymentDate CouponPaymentDate
            {
                get
                {
                    QuickFix.Fields.CouponPaymentDate val = new QuickFix.Fields.CouponPaymentDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponPaymentDate val)
            {
                this.CouponPaymentDate = val;
            }

            public QuickFix.Fields.CouponPaymentDate Get(QuickFix.Fields.CouponPaymentDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponPaymentDate val)
            {
                return IsSetCouponPaymentDate();
            }

            public bool IsSetCouponPaymentDate()
            {
                return IsSetField(Tags.CouponPaymentDate);
            }
            public QuickFix.Fields.IssueDate IssueDate
            {
                get
                {
                    QuickFix.Fields.IssueDate val = new QuickFix.Fields.IssueDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.IssueDate val)
            {
                this.IssueDate = val;
            }

            public QuickFix.Fields.IssueDate Get(QuickFix.Fields.IssueDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.IssueDate val)
            {
                return IsSetIssueDate();
            }

            public bool IsSetIssueDate()
            {
                return IsSetField(Tags.IssueDate);
            }
            public QuickFix.Fields.RepoCollateralSecurityType RepoCollateralSecurityType
            {
                get
                {
                    QuickFix.Fields.RepoCollateralSecurityType val = new QuickFix.Fields.RepoCollateralSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RepoCollateralSecurityType val)
            {
                this.RepoCollateralSecurityType = val;
            }

            public QuickFix.Fields.RepoCollateralSecurityType Get(QuickFix.Fields.RepoCollateralSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RepoCollateralSecurityType val)
            {
                return IsSetRepoCollateralSecurityType();
            }

            public bool IsSetRepoCollateralSecurityType()
            {
                return IsSetField(Tags.RepoCollateralSecurityType);
            }
            public QuickFix.Fields.RepurchaseTerm RepurchaseTerm
            {
                get
                {
                    QuickFix.Fields.RepurchaseTerm val = new QuickFix.Fields.RepurchaseTerm();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RepurchaseTerm val)
            {
                this.RepurchaseTerm = val;
            }

            public QuickFix.Fields.RepurchaseTerm Get(QuickFix.Fields.RepurchaseTerm val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RepurchaseTerm val)
            {
                return IsSetRepurchaseTerm();
            }

            public bool IsSetRepurchaseTerm()
            {
                return IsSetField(Tags.RepurchaseTerm);
            }
            public QuickFix.Fields.RepurchaseRate RepurchaseRate
            {
                get
                {
                    QuickFix.Fields.RepurchaseRate val = new QuickFix.Fields.RepurchaseRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RepurchaseRate val)
            {
                this.RepurchaseRate = val;
            }

            public QuickFix.Fields.RepurchaseRate Get(QuickFix.Fields.RepurchaseRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RepurchaseRate val)
            {
                return IsSetRepurchaseRate();
            }

            public bool IsSetRepurchaseRate()
            {
                return IsSetField(Tags.RepurchaseRate);
            }
            public QuickFix.Fields.Factor Factor
            {
                get
                {
                    QuickFix.Fields.Factor val = new QuickFix.Fields.Factor();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Factor val)
            {
                this.Factor = val;
            }

            public QuickFix.Fields.Factor Get(QuickFix.Fields.Factor val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Factor val)
            {
                return IsSetFactor();
            }

            public bool IsSetFactor()
            {
                return IsSetField(Tags.Factor);
            }
            public QuickFix.Fields.CreditRating CreditRating
            {
                get
                {
                    QuickFix.Fields.CreditRating val = new QuickFix.Fields.CreditRating();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CreditRating val)
            {
                this.CreditRating = val;
            }

            public QuickFix.Fields.CreditRating Get(QuickFix.Fields.CreditRating val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CreditRating val)
            {
                return IsSetCreditRating();
            }

            public bool IsSetCreditRating()
            {
                return IsSetField(Tags.CreditRating);
            }
            public QuickFix.Fields.InstrRegistry InstrRegistry
            {
                get
                {
                    QuickFix.Fields.InstrRegistry val = new QuickFix.Fields.InstrRegistry();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InstrRegistry val)
            {
                this.InstrRegistry = val;
            }

            public QuickFix.Fields.InstrRegistry Get(QuickFix.Fields.InstrRegistry val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InstrRegistry val)
            {
                return IsSetInstrRegistry();
            }

            public bool IsSetInstrRegistry()
            {
                return IsSetField(Tags.InstrRegistry);
            }
            public QuickFix.Fields.CountryOfIssue CountryOfIssue
            {
                get
                {
                    QuickFix.Fields.CountryOfIssue val = new QuickFix.Fields.CountryOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CountryOfIssue val)
            {
                this.CountryOfIssue = val;
            }

            public QuickFix.Fields.CountryOfIssue Get(QuickFix.Fields.CountryOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CountryOfIssue val)
            {
                return IsSetCountryOfIssue();
            }

            public bool IsSetCountryOfIssue()
            {
                return IsSetField(Tags.CountryOfIssue);
            }
            public QuickFix.Fields.StateOrProvinceOfIssue StateOrProvinceOfIssue
            {
                get
                {
                    QuickFix.Fields.StateOrProvinceOfIssue val = new QuickFix.Fields.StateOrProvinceOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StateOrProvinceOfIssue val)
            {
                this.StateOrProvinceOfIssue = val;
            }

            public QuickFix.Fields.StateOrProvinceOfIssue Get(QuickFix.Fields.StateOrProvinceOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StateOrProvinceOfIssue val)
            {
                return IsSetStateOrProvinceOfIssue();
            }

            public bool IsSetStateOrProvinceOfIssue()
            {
                return IsSetField(Tags.StateOrProvinceOfIssue);
            }
            public QuickFix.Fields.LocaleOfIssue LocaleOfIssue
            {
                get
                {
                    QuickFix.Fields.LocaleOfIssue val = new QuickFix.Fields.LocaleOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.LocaleOfIssue val)
            {
                this.LocaleOfIssue = val;
            }

            public QuickFix.Fields.LocaleOfIssue Get(QuickFix.Fields.LocaleOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.LocaleOfIssue val)
            {
                return IsSetLocaleOfIssue();
            }

            public bool IsSetLocaleOfIssue()
            {
                return IsSetField(Tags.LocaleOfIssue);
            }
            public QuickFix.Fields.RedemptionDate RedemptionDate
            {
                get
                {
                    QuickFix.Fields.RedemptionDate val = new QuickFix.Fields.RedemptionDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RedemptionDate val)
            {
                this.RedemptionDate = val;
            }

            public QuickFix.Fields.RedemptionDate Get(QuickFix.Fields.RedemptionDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RedemptionDate val)
            {
                return IsSetRedemptionDate();
            }

            public bool IsSetRedemptionDate()
            {
                return IsSetField(Tags.RedemptionDate);
            }
            public QuickFix.Fields.StrikePrice StrikePrice
            {
                get
                {
                    QuickFix.Fields.StrikePrice val = new QuickFix.Fields.StrikePrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikePrice val)
            {
                this.StrikePrice = val;
            }

            public QuickFix.Fields.StrikePrice Get(QuickFix.Fields.StrikePrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikePrice val)
            {
                return IsSetStrikePrice();
            }

            public bool IsSetStrikePrice()
            {
                return IsSetField(Tags.StrikePrice);
            }
            public QuickFix.Fields.StrikeCurrency StrikeCurrency
            {
                get
                {
                    QuickFix.Fields.StrikeCurrency val = new QuickFix.Fields.StrikeCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeCurrency val)
            {
                this.StrikeCurrency = val;
            }

            public QuickFix.Fields.StrikeCurrency Get(QuickFix.Fields.StrikeCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeCurrency val)
            {
                return IsSetStrikeCurrency();
            }

            public bool IsSetStrikeCurrency()
            {
                return IsSetField(Tags.StrikeCurrency);
            }
            public QuickFix.Fields.StrikeMultiplier StrikeMultiplier
            {
                get
                {
                    QuickFix.Fields.StrikeMultiplier val = new QuickFix.Fields.StrikeMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeMultiplier val)
            {
                this.StrikeMultiplier = val;
            }

            public QuickFix.Fields.StrikeMultiplier Get(QuickFix.Fields.StrikeMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeMultiplier val)
            {
                return IsSetStrikeMultiplier();
            }

            public bool IsSetStrikeMultiplier()
            {
                return IsSetField(Tags.StrikeMultiplier);
            }
            public QuickFix.Fields.StrikeValue StrikeValue
            {
                get
                {
                    QuickFix.Fields.StrikeValue val = new QuickFix.Fields.StrikeValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeValue val)
            {
                this.StrikeValue = val;
            }

            public QuickFix.Fields.StrikeValue Get(QuickFix.Fields.StrikeValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeValue val)
            {
                return IsSetStrikeValue();
            }

            public bool IsSetStrikeValue()
            {
                return IsSetField(Tags.StrikeValue);
            }
            public QuickFix.Fields.OptAttribute OptAttribute
            {
                get
                {
                    QuickFix.Fields.OptAttribute val = new QuickFix.Fields.OptAttribute();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptAttribute val)
            {
                this.OptAttribute = val;
            }

            public QuickFix.Fields.OptAttribute Get(QuickFix.Fields.OptAttribute val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptAttribute val)
            {
                return IsSetOptAttribute();
            }

            public bool IsSetOptAttribute()
            {
                return IsSetField(Tags.OptAttribute);
            }
            public QuickFix.Fields.ContractMultiplier ContractMultiplier
            {
                get
                {
                    QuickFix.Fields.ContractMultiplier val = new QuickFix.Fields.ContractMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ContractMultiplier val)
            {
                this.ContractMultiplier = val;
            }

            public QuickFix.Fields.ContractMultiplier Get(QuickFix.Fields.ContractMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ContractMultiplier val)
            {
                return IsSetContractMultiplier();
            }

            public bool IsSetContractMultiplier()
            {
                return IsSetField(Tags.ContractMultiplier);
            }
            public QuickFix.Fields.MinPriceIncrement MinPriceIncrement
            {
                get
                {
                    QuickFix.Fields.MinPriceIncrement val = new QuickFix.Fields.MinPriceIncrement();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MinPriceIncrement val)
            {
                this.MinPriceIncrement = val;
            }

            public QuickFix.Fields.MinPriceIncrement Get(QuickFix.Fields.MinPriceIncrement val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MinPriceIncrement val)
            {
                return IsSetMinPriceIncrement();
            }

            public bool IsSetMinPriceIncrement()
            {
                return IsSetField(Tags.MinPriceIncrement);
            }
            public QuickFix.Fields.MinPriceIncrementAmount MinPriceIncrementAmount
            {
                get
                {
                    QuickFix.Fields.MinPriceIncrementAmount val = new QuickFix.Fields.MinPriceIncrementAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MinPriceIncrementAmount val)
            {
                this.MinPriceIncrementAmount = val;
            }

            public QuickFix.Fields.MinPriceIncrementAmount Get(QuickFix.Fields.MinPriceIncrementAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MinPriceIncrementAmount val)
            {
                return IsSetMinPriceIncrementAmount();
            }

            public bool IsSetMinPriceIncrementAmount()
            {
                return IsSetField(Tags.MinPriceIncrementAmount);
            }
            public QuickFix.Fields.UnitOfMeasure UnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnitOfMeasure val = new QuickFix.Fields.UnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnitOfMeasure val)
            {
                this.UnitOfMeasure = val;
            }

            public QuickFix.Fields.UnitOfMeasure Get(QuickFix.Fields.UnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnitOfMeasure val)
            {
                return IsSetUnitOfMeasure();
            }

            public bool IsSetUnitOfMeasure()
            {
                return IsSetField(Tags.UnitOfMeasure);
            }
            public QuickFix.Fields.UnitOfMeasureQty UnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.UnitOfMeasureQty val = new QuickFix.Fields.UnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnitOfMeasureQty val)
            {
                this.UnitOfMeasureQty = val;
            }

            public QuickFix.Fields.UnitOfMeasureQty Get(QuickFix.Fields.UnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnitOfMeasureQty val)
            {
                return IsSetUnitOfMeasureQty();
            }

            public bool IsSetUnitOfMeasureQty()
            {
                return IsSetField(Tags.UnitOfMeasureQty);
            }
            public QuickFix.Fields.PriceUnitOfMeasure PriceUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.PriceUnitOfMeasure val = new QuickFix.Fields.PriceUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PriceUnitOfMeasure val)
            {
                this.PriceUnitOfMeasure = val;
            }

            public QuickFix.Fields.PriceUnitOfMeasure Get(QuickFix.Fields.PriceUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PriceUnitOfMeasure val)
            {
                return IsSetPriceUnitOfMeasure();
            }

            public bool IsSetPriceUnitOfMeasure()
            {
                return IsSetField(Tags.PriceUnitOfMeasure);
            }
            public QuickFix.Fields.PriceUnitOfMeasureQty PriceUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.PriceUnitOfMeasureQty val = new QuickFix.Fields.PriceUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PriceUnitOfMeasureQty val)
            {
                this.PriceUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.PriceUnitOfMeasureQty Get(QuickFix.Fields.PriceUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PriceUnitOfMeasureQty val)
            {
                return IsSetPriceUnitOfMeasureQty();
            }

            public bool IsSetPriceUnitOfMeasureQty()
            {
                return IsSetField(Tags.PriceUnitOfMeasureQty);
            }
            public QuickFix.Fields.SettlMethod SettlMethod
            {
                get
                {
                    QuickFix.Fields.SettlMethod val = new QuickFix.Fields.SettlMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethod val)
            {
                this.SettlMethod = val;
            }

            public QuickFix.Fields.SettlMethod Get(QuickFix.Fields.SettlMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethod val)
            {
                return IsSetSettlMethod();
            }

            public bool IsSetSettlMethod()
            {
                return IsSetField(Tags.SettlMethod);
            }
            public QuickFix.Fields.ExerciseStyle ExerciseStyle
            {
                get
                {
                    QuickFix.Fields.ExerciseStyle val = new QuickFix.Fields.ExerciseStyle();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExerciseStyle val)
            {
                this.ExerciseStyle = val;
            }

            public QuickFix.Fields.ExerciseStyle Get(QuickFix.Fields.ExerciseStyle val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExerciseStyle val)
            {
                return IsSetExerciseStyle();
            }

            public bool IsSetExerciseStyle()
            {
                return IsSetField(Tags.ExerciseStyle);
            }
            public QuickFix.Fields.OptPayoutAmount OptPayoutAmount
            {
                get
                {
                    QuickFix.Fields.OptPayoutAmount val = new QuickFix.Fields.OptPayoutAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptPayoutAmount val)
            {
                this.OptPayoutAmount = val;
            }

            public QuickFix.Fields.OptPayoutAmount Get(QuickFix.Fields.OptPayoutAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptPayoutAmount val)
            {
                return IsSetOptPayoutAmount();
            }

            public bool IsSetOptPayoutAmount()
            {
                return IsSetField(Tags.OptPayoutAmount);
            }
            public QuickFix.Fields.PriceQuoteMethod PriceQuoteMethod
            {
                get
                {
                    QuickFix.Fields.PriceQuoteMethod val = new QuickFix.Fields.PriceQuoteMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PriceQuoteMethod val)
            {
                this.PriceQuoteMethod = val;
            }

            public QuickFix.Fields.PriceQuoteMethod Get(QuickFix.Fields.PriceQuoteMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PriceQuoteMethod val)
            {
                return IsSetPriceQuoteMethod();
            }

            public bool IsSetPriceQuoteMethod()
            {
                return IsSetField(Tags.PriceQuoteMethod);
            }
            public QuickFix.Fields.ValuationMethod ValuationMethod
            {
                get
                {
                    QuickFix.Fields.ValuationMethod val = new QuickFix.Fields.ValuationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ValuationMethod val)
            {
                this.ValuationMethod = val;
            }

            public QuickFix.Fields.ValuationMethod Get(QuickFix.Fields.ValuationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ValuationMethod val)
            {
                return IsSetValuationMethod();
            }

            public bool IsSetValuationMethod()
            {
                return IsSetField(Tags.ValuationMethod);
            }
            public QuickFix.Fields.ListMethod ListMethod
            {
                get
                {
                    QuickFix.Fields.ListMethod val = new QuickFix.Fields.ListMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ListMethod val)
            {
                this.ListMethod = val;
            }

            public QuickFix.Fields.ListMethod Get(QuickFix.Fields.ListMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ListMethod val)
            {
                return IsSetListMethod();
            }

            public bool IsSetListMethod()
            {
                return IsSetField(Tags.ListMethod);
            }
            public QuickFix.Fields.CapPrice CapPrice
            {
                get
                {
                    QuickFix.Fields.CapPrice val = new QuickFix.Fields.CapPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CapPrice val)
            {
                this.CapPrice = val;
            }

            public QuickFix.Fields.CapPrice Get(QuickFix.Fields.CapPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CapPrice val)
            {
                return IsSetCapPrice();
            }

            public bool IsSetCapPrice()
            {
                return IsSetField(Tags.CapPrice);
            }
            public QuickFix.Fields.FloorPrice FloorPrice
            {
                get
                {
                    QuickFix.Fields.FloorPrice val = new QuickFix.Fields.FloorPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FloorPrice val)
            {
                this.FloorPrice = val;
            }

            public QuickFix.Fields.FloorPrice Get(QuickFix.Fields.FloorPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FloorPrice val)
            {
                return IsSetFloorPrice();
            }

            public bool IsSetFloorPrice()
            {
                return IsSetField(Tags.FloorPrice);
            }
            public QuickFix.Fields.PutOrCall PutOrCall
            {
                get
                {
                    QuickFix.Fields.PutOrCall val = new QuickFix.Fields.PutOrCall();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PutOrCall val)
            {
                this.PutOrCall = val;
            }

            public QuickFix.Fields.PutOrCall Get(QuickFix.Fields.PutOrCall val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PutOrCall val)
            {
                return IsSetPutOrCall();
            }

            public bool IsSetPutOrCall()
            {
                return IsSetField(Tags.PutOrCall);
            }
            public QuickFix.Fields.FlexibleIndicator FlexibleIndicator
            {
                get
                {
                    QuickFix.Fields.FlexibleIndicator val = new QuickFix.Fields.FlexibleIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FlexibleIndicator val)
            {
                this.FlexibleIndicator = val;
            }

            public QuickFix.Fields.FlexibleIndicator Get(QuickFix.Fields.FlexibleIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FlexibleIndicator val)
            {
                return IsSetFlexibleIndicator();
            }

            public bool IsSetFlexibleIndicator()
            {
                return IsSetField(Tags.FlexibleIndicator);
            }
            public QuickFix.Fields.FlexProductEligibilityIndicator FlexProductEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.FlexProductEligibilityIndicator val = new QuickFix.Fields.FlexProductEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FlexProductEligibilityIndicator val)
            {
                this.FlexProductEligibilityIndicator = val;
            }

            public QuickFix.Fields.FlexProductEligibilityIndicator Get(QuickFix.Fields.FlexProductEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FlexProductEligibilityIndicator val)
            {
                return IsSetFlexProductEligibilityIndicator();
            }

            public bool IsSetFlexProductEligibilityIndicator()
            {
                return IsSetField(Tags.FlexProductEligibilityIndicator);
            }
            public QuickFix.Fields.TimeUnit TimeUnit
            {
                get
                {
                    QuickFix.Fields.TimeUnit val = new QuickFix.Fields.TimeUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TimeUnit val)
            {
                this.TimeUnit = val;
            }

            public QuickFix.Fields.TimeUnit Get(QuickFix.Fields.TimeUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TimeUnit val)
            {
                return IsSetTimeUnit();
            }

            public bool IsSetTimeUnit()
            {
                return IsSetField(Tags.TimeUnit);
            }
            public QuickFix.Fields.CouponRate CouponRate
            {
                get
                {
                    QuickFix.Fields.CouponRate val = new QuickFix.Fields.CouponRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponRate val)
            {
                this.CouponRate = val;
            }

            public QuickFix.Fields.CouponRate Get(QuickFix.Fields.CouponRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponRate val)
            {
                return IsSetCouponRate();
            }

            public bool IsSetCouponRate()
            {
                return IsSetField(Tags.CouponRate);
            }
            public QuickFix.Fields.SecurityExchange SecurityExchange
            {
                get
                {
                    QuickFix.Fields.SecurityExchange val = new QuickFix.Fields.SecurityExchange();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityExchange val)
            {
                this.SecurityExchange = val;
            }

            public QuickFix.Fields.SecurityExchange Get(QuickFix.Fields.SecurityExchange val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityExchange val)
            {
                return IsSetSecurityExchange();
            }

            public bool IsSetSecurityExchange()
            {
                return IsSetField(Tags.SecurityExchange);
            }
            public QuickFix.Fields.PositionLimit PositionLimit
            {
                get
                {
                    QuickFix.Fields.PositionLimit val = new QuickFix.Fields.PositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PositionLimit val)
            {
                this.PositionLimit = val;
            }

            public QuickFix.Fields.PositionLimit Get(QuickFix.Fields.PositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PositionLimit val)
            {
                return IsSetPositionLimit();
            }

            public bool IsSetPositionLimit()
            {
                return IsSetField(Tags.PositionLimit);
            }
            public QuickFix.Fields.NTPositionLimit NTPositionLimit
            {
                get
                {
                    QuickFix.Fields.NTPositionLimit val = new QuickFix.Fields.NTPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NTPositionLimit val)
            {
                this.NTPositionLimit = val;
            }

            public QuickFix.Fields.NTPositionLimit Get(QuickFix.Fields.NTPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NTPositionLimit val)
            {
                return IsSetNTPositionLimit();
            }

            public bool IsSetNTPositionLimit()
            {
                return IsSetField(Tags.NTPositionLimit);
            }
            public QuickFix.Fields.Issuer Issuer
            {
                get
                {
                    QuickFix.Fields.Issuer val = new QuickFix.Fields.Issuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Issuer val)
            {
                this.Issuer = val;
            }

            public QuickFix.Fields.Issuer Get(QuickFix.Fields.Issuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Issuer val)
            {
                return IsSetIssuer();
            }

            public bool IsSetIssuer()
            {
                return IsSetField(Tags.Issuer);
            }
            public QuickFix.Fields.EncodedIssuerLen EncodedIssuerLen
            {
                get
                {
                    QuickFix.Fields.EncodedIssuerLen val = new QuickFix.Fields.EncodedIssuerLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedIssuerLen val)
            {
                this.EncodedIssuerLen = val;
            }

            public QuickFix.Fields.EncodedIssuerLen Get(QuickFix.Fields.EncodedIssuerLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedIssuerLen val)
            {
                return IsSetEncodedIssuerLen();
            }

            public bool IsSetEncodedIssuerLen()
            {
                return IsSetField(Tags.EncodedIssuerLen);
            }
            public QuickFix.Fields.EncodedIssuer EncodedIssuer
            {
                get
                {
                    QuickFix.Fields.EncodedIssuer val = new QuickFix.Fields.EncodedIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedIssuer val)
            {
                this.EncodedIssuer = val;
            }

            public QuickFix.Fields.EncodedIssuer Get(QuickFix.Fields.EncodedIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedIssuer val)
            {
                return IsSetEncodedIssuer();
            }

            public bool IsSetEncodedIssuer()
            {
                return IsSetField(Tags.EncodedIssuer);
            }
            public QuickFix.Fields.SecurityDesc SecurityDesc
            {
                get
                {
                    QuickFix.Fields.SecurityDesc val = new QuickFix.Fields.SecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityDesc val)
            {
                this.SecurityDesc = val;
            }

            public QuickFix.Fields.SecurityDesc Get(QuickFix.Fields.SecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityDesc val)
            {
                return IsSetSecurityDesc();
            }

            public bool IsSetSecurityDesc()
            {
                return IsSetField(Tags.SecurityDesc);
            }
            public QuickFix.Fields.EncodedSecurityDescLen EncodedSecurityDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedSecurityDescLen val = new QuickFix.Fields.EncodedSecurityDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedSecurityDescLen val)
            {
                this.EncodedSecurityDescLen = val;
            }

            public QuickFix.Fields.EncodedSecurityDescLen Get(QuickFix.Fields.EncodedSecurityDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedSecurityDescLen val)
            {
                return IsSetEncodedSecurityDescLen();
            }

            public bool IsSetEncodedSecurityDescLen()
            {
                return IsSetField(Tags.EncodedSecurityDescLen);
            }
            public QuickFix.Fields.EncodedSecurityDesc EncodedSecurityDesc
            {
                get
                {
                    QuickFix.Fields.EncodedSecurityDesc val = new QuickFix.Fields.EncodedSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedSecurityDesc val)
            {
                this.EncodedSecurityDesc = val;
            }

            public QuickFix.Fields.EncodedSecurityDesc Get(QuickFix.Fields.EncodedSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedSecurityDesc val)
            {
                return IsSetEncodedSecurityDesc();
            }

            public bool IsSetEncodedSecurityDesc()
            {
                return IsSetField(Tags.EncodedSecurityDesc);
            }
            public QuickFix.Fields.SecurityXMLLen SecurityXMLLen
            {
                get
                {
                    QuickFix.Fields.SecurityXMLLen val = new QuickFix.Fields.SecurityXMLLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityXMLLen val)
            {
                this.SecurityXMLLen = val;
            }

            public QuickFix.Fields.SecurityXMLLen Get(QuickFix.Fields.SecurityXMLLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityXMLLen val)
            {
                return IsSetSecurityXMLLen();
            }

            public bool IsSetSecurityXMLLen()
            {
                return IsSetField(Tags.SecurityXMLLen);
            }
            public QuickFix.Fields.SecurityXML SecurityXML
            {
                get
                {
                    QuickFix.Fields.SecurityXML val = new QuickFix.Fields.SecurityXML();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityXML val)
            {
                this.SecurityXML = val;
            }

            public QuickFix.Fields.SecurityXML Get(QuickFix.Fields.SecurityXML val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityXML val)
            {
                return IsSetSecurityXML();
            }

            public bool IsSetSecurityXML()
            {
                return IsSetField(Tags.SecurityXML);
            }
            public QuickFix.Fields.SecurityXMLSchema SecurityXMLSchema
            {
                get
                {
                    QuickFix.Fields.SecurityXMLSchema val = new QuickFix.Fields.SecurityXMLSchema();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SecurityXMLSchema val)
            {
                this.SecurityXMLSchema = val;
            }

            public QuickFix.Fields.SecurityXMLSchema Get(QuickFix.Fields.SecurityXMLSchema val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SecurityXMLSchema val)
            {
                return IsSetSecurityXMLSchema();
            }

            public bool IsSetSecurityXMLSchema()
            {
                return IsSetField(Tags.SecurityXMLSchema);
            }
            public QuickFix.Fields.Pool Pool
            {
                get
                {
                    QuickFix.Fields.Pool val = new QuickFix.Fields.Pool();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Pool val)
            {
                this.Pool = val;
            }

            public QuickFix.Fields.Pool Get(QuickFix.Fields.Pool val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Pool val)
            {
                return IsSetPool();
            }

            public bool IsSetPool()
            {
                return IsSetField(Tags.Pool);
            }
            public QuickFix.Fields.ContractSettlMonth ContractSettlMonth
            {
                get
                {
                    QuickFix.Fields.ContractSettlMonth val = new QuickFix.Fields.ContractSettlMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ContractSettlMonth val)
            {
                this.ContractSettlMonth = val;
            }

            public QuickFix.Fields.ContractSettlMonth Get(QuickFix.Fields.ContractSettlMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ContractSettlMonth val)
            {
                return IsSetContractSettlMonth();
            }

            public bool IsSetContractSettlMonth()
            {
                return IsSetField(Tags.ContractSettlMonth);
            }
            public QuickFix.Fields.CPProgram CPProgram
            {
                get
                {
                    QuickFix.Fields.CPProgram val = new QuickFix.Fields.CPProgram();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CPProgram val)
            {
                this.CPProgram = val;
            }

            public QuickFix.Fields.CPProgram Get(QuickFix.Fields.CPProgram val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CPProgram val)
            {
                return IsSetCPProgram();
            }

            public bool IsSetCPProgram()
            {
                return IsSetField(Tags.CPProgram);
            }
            public QuickFix.Fields.CPRegType CPRegType
            {
                get
                {
                    QuickFix.Fields.CPRegType val = new QuickFix.Fields.CPRegType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CPRegType val)
            {
                this.CPRegType = val;
            }

            public QuickFix.Fields.CPRegType Get(QuickFix.Fields.CPRegType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CPRegType val)
            {
                return IsSetCPRegType();
            }

            public bool IsSetCPRegType()
            {
                return IsSetField(Tags.CPRegType);
            }
            public QuickFix.Fields.NoEvents NoEvents
            {
                get
                {
                    QuickFix.Fields.NoEvents val = new QuickFix.Fields.NoEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoEvents val)
            {
                this.NoEvents = val;
            }

            public QuickFix.Fields.NoEvents Get(QuickFix.Fields.NoEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoEvents val)
            {
                return IsSetNoEvents();
            }

            public bool IsSetNoEvents()
            {
                return IsSetField(Tags.NoEvents);
            }
            public QuickFix.Fields.DatedDate DatedDate
            {
                get
                {
                    QuickFix.Fields.DatedDate val = new QuickFix.Fields.DatedDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DatedDate val)
            {
                this.DatedDate = val;
            }

            public QuickFix.Fields.DatedDate Get(QuickFix.Fields.DatedDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DatedDate val)
            {
                return IsSetDatedDate();
            }

            public bool IsSetDatedDate()
            {
                return IsSetField(Tags.DatedDate);
            }
            public QuickFix.Fields.InterestAccrualDate InterestAccrualDate
            {
                get
                {
                    QuickFix.Fields.InterestAccrualDate val = new QuickFix.Fields.InterestAccrualDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InterestAccrualDate val)
            {
                this.InterestAccrualDate = val;
            }

            public QuickFix.Fields.InterestAccrualDate Get(QuickFix.Fields.InterestAccrualDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InterestAccrualDate val)
            {
                return IsSetInterestAccrualDate();
            }

            public bool IsSetInterestAccrualDate()
            {
                return IsSetField(Tags.InterestAccrualDate);
            }
            public QuickFix.Fields.NoInstrumentParties NoInstrumentParties
            {
                get
                {
                    QuickFix.Fields.NoInstrumentParties val = new QuickFix.Fields.NoInstrumentParties();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoInstrumentParties val)
            {
                this.NoInstrumentParties = val;
            }

            public QuickFix.Fields.NoInstrumentParties Get(QuickFix.Fields.NoInstrumentParties val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoInstrumentParties val)
            {
                return IsSetNoInstrumentParties();
            }

            public bool IsSetNoInstrumentParties()
            {
                return IsSetField(Tags.NoInstrumentParties);
            }
            public QuickFix.Fields.ContractMultiplierUnit ContractMultiplierUnit
            {
                get
                {
                    QuickFix.Fields.ContractMultiplierUnit val = new QuickFix.Fields.ContractMultiplierUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ContractMultiplierUnit val)
            {
                this.ContractMultiplierUnit = val;
            }

            public QuickFix.Fields.ContractMultiplierUnit Get(QuickFix.Fields.ContractMultiplierUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ContractMultiplierUnit val)
            {
                return IsSetContractMultiplierUnit();
            }

            public bool IsSetContractMultiplierUnit()
            {
                return IsSetField(Tags.ContractMultiplierUnit);
            }
            public QuickFix.Fields.FlowScheduleType FlowScheduleType
            {
                get
                {
                    QuickFix.Fields.FlowScheduleType val = new QuickFix.Fields.FlowScheduleType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FlowScheduleType val)
            {
                this.FlowScheduleType = val;
            }

            public QuickFix.Fields.FlowScheduleType Get(QuickFix.Fields.FlowScheduleType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FlowScheduleType val)
            {
                return IsSetFlowScheduleType();
            }

            public bool IsSetFlowScheduleType()
            {
                return IsSetField(Tags.FlowScheduleType);
            }
            public QuickFix.Fields.RestructuringType RestructuringType
            {
                get
                {
                    QuickFix.Fields.RestructuringType val = new QuickFix.Fields.RestructuringType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RestructuringType val)
            {
                this.RestructuringType = val;
            }

            public QuickFix.Fields.RestructuringType Get(QuickFix.Fields.RestructuringType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RestructuringType val)
            {
                return IsSetRestructuringType();
            }

            public bool IsSetRestructuringType()
            {
                return IsSetField(Tags.RestructuringType);
            }
            public QuickFix.Fields.Seniority Seniority
            {
                get
                {
                    QuickFix.Fields.Seniority val = new QuickFix.Fields.Seniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Seniority val)
            {
                this.Seniority = val;
            }

            public QuickFix.Fields.Seniority Get(QuickFix.Fields.Seniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Seniority val)
            {
                return IsSetSeniority();
            }

            public bool IsSetSeniority()
            {
                return IsSetField(Tags.Seniority);
            }
            public QuickFix.Fields.NotionalPercentageOutstanding NotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.NotionalPercentageOutstanding val = new QuickFix.Fields.NotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NotionalPercentageOutstanding val)
            {
                this.NotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.NotionalPercentageOutstanding Get(QuickFix.Fields.NotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NotionalPercentageOutstanding val)
            {
                return IsSetNotionalPercentageOutstanding();
            }

            public bool IsSetNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.NotionalPercentageOutstanding);
            }
            public QuickFix.Fields.OriginalNotionalPercentageOutstanding OriginalNotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.OriginalNotionalPercentageOutstanding val = new QuickFix.Fields.OriginalNotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OriginalNotionalPercentageOutstanding val)
            {
                this.OriginalNotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.OriginalNotionalPercentageOutstanding Get(QuickFix.Fields.OriginalNotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OriginalNotionalPercentageOutstanding val)
            {
                return IsSetOriginalNotionalPercentageOutstanding();
            }

            public bool IsSetOriginalNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.OriginalNotionalPercentageOutstanding);
            }
            public QuickFix.Fields.AttachmentPoint AttachmentPoint
            {
                get
                {
                    QuickFix.Fields.AttachmentPoint val = new QuickFix.Fields.AttachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AttachmentPoint val)
            {
                this.AttachmentPoint = val;
            }

            public QuickFix.Fields.AttachmentPoint Get(QuickFix.Fields.AttachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AttachmentPoint val)
            {
                return IsSetAttachmentPoint();
            }

            public bool IsSetAttachmentPoint()
            {
                return IsSetField(Tags.AttachmentPoint);
            }
            public QuickFix.Fields.DetachmentPoint DetachmentPoint
            {
                get
                {
                    QuickFix.Fields.DetachmentPoint val = new QuickFix.Fields.DetachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DetachmentPoint val)
            {
                this.DetachmentPoint = val;
            }

            public QuickFix.Fields.DetachmentPoint Get(QuickFix.Fields.DetachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DetachmentPoint val)
            {
                return IsSetDetachmentPoint();
            }

            public bool IsSetDetachmentPoint()
            {
                return IsSetField(Tags.DetachmentPoint);
            }
            public QuickFix.Fields.StrikePriceDeterminationMethod StrikePriceDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.StrikePriceDeterminationMethod val = new QuickFix.Fields.StrikePriceDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikePriceDeterminationMethod val)
            {
                this.StrikePriceDeterminationMethod = val;
            }

            public QuickFix.Fields.StrikePriceDeterminationMethod Get(QuickFix.Fields.StrikePriceDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikePriceDeterminationMethod val)
            {
                return IsSetStrikePriceDeterminationMethod();
            }

            public bool IsSetStrikePriceDeterminationMethod()
            {
                return IsSetField(Tags.StrikePriceDeterminationMethod);
            }
            public QuickFix.Fields.StrikePriceBoundaryMethod StrikePriceBoundaryMethod
            {
                get
                {
                    QuickFix.Fields.StrikePriceBoundaryMethod val = new QuickFix.Fields.StrikePriceBoundaryMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikePriceBoundaryMethod val)
            {
                this.StrikePriceBoundaryMethod = val;
            }

            public QuickFix.Fields.StrikePriceBoundaryMethod Get(QuickFix.Fields.StrikePriceBoundaryMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikePriceBoundaryMethod val)
            {
                return IsSetStrikePriceBoundaryMethod();
            }

            public bool IsSetStrikePriceBoundaryMethod()
            {
                return IsSetField(Tags.StrikePriceBoundaryMethod);
            }
            public QuickFix.Fields.StrikePriceBoundaryPrecision StrikePriceBoundaryPrecision
            {
                get
                {
                    QuickFix.Fields.StrikePriceBoundaryPrecision val = new QuickFix.Fields.StrikePriceBoundaryPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikePriceBoundaryPrecision val)
            {
                this.StrikePriceBoundaryPrecision = val;
            }

            public QuickFix.Fields.StrikePriceBoundaryPrecision Get(QuickFix.Fields.StrikePriceBoundaryPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikePriceBoundaryPrecision val)
            {
                return IsSetStrikePriceBoundaryPrecision();
            }

            public bool IsSetStrikePriceBoundaryPrecision()
            {
                return IsSetField(Tags.StrikePriceBoundaryPrecision);
            }
            public QuickFix.Fields.UnderlyingPriceDeterminationMethod UnderlyingPriceDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceDeterminationMethod val = new QuickFix.Fields.UnderlyingPriceDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceDeterminationMethod val)
            {
                this.UnderlyingPriceDeterminationMethod = val;
            }

            public QuickFix.Fields.UnderlyingPriceDeterminationMethod Get(QuickFix.Fields.UnderlyingPriceDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceDeterminationMethod val)
            {
                return IsSetUnderlyingPriceDeterminationMethod();
            }

            public bool IsSetUnderlyingPriceDeterminationMethod()
            {
                return IsSetField(Tags.UnderlyingPriceDeterminationMethod);
            }
            public QuickFix.Fields.OptPayoutType OptPayoutType
            {
                get
                {
                    QuickFix.Fields.OptPayoutType val = new QuickFix.Fields.OptPayoutType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptPayoutType val)
            {
                this.OptPayoutType = val;
            }

            public QuickFix.Fields.OptPayoutType Get(QuickFix.Fields.OptPayoutType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptPayoutType val)
            {
                return IsSetOptPayoutType();
            }

            public bool IsSetOptPayoutType()
            {
                return IsSetField(Tags.OptPayoutType);
            }
            public QuickFix.Fields.NoComplexEvents NoComplexEvents
            {
                get
                {
                    QuickFix.Fields.NoComplexEvents val = new QuickFix.Fields.NoComplexEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoComplexEvents val)
            {
                this.NoComplexEvents = val;
            }

            public QuickFix.Fields.NoComplexEvents Get(QuickFix.Fields.NoComplexEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoComplexEvents val)
            {
                return IsSetNoComplexEvents();
            }

            public bool IsSetNoComplexEvents()
            {
                return IsSetField(Tags.NoComplexEvents);
            }
            public QuickFix.Fields.PriceQuoteCurrency PriceQuoteCurrency
            {
                get
                {
                    QuickFix.Fields.PriceQuoteCurrency val = new QuickFix.Fields.PriceQuoteCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PriceQuoteCurrency val)
            {
                this.PriceQuoteCurrency = val;
            }

            public QuickFix.Fields.PriceQuoteCurrency Get(QuickFix.Fields.PriceQuoteCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PriceQuoteCurrency val)
            {
                return IsSetPriceQuoteCurrency();
            }

            public bool IsSetPriceQuoteCurrency()
            {
                return IsSetField(Tags.PriceQuoteCurrency);
            }
            public QuickFix.Fields.ObligationType ObligationType
            {
                get
                {
                    QuickFix.Fields.ObligationType val = new QuickFix.Fields.ObligationType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ObligationType val)
            {
                this.ObligationType = val;
            }

            public QuickFix.Fields.ObligationType Get(QuickFix.Fields.ObligationType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ObligationType val)
            {
                return IsSetObligationType();
            }

            public bool IsSetObligationType()
            {
                return IsSetField(Tags.ObligationType);
            }
            public QuickFix.Fields.ShortSaleRestriction ShortSaleRestriction
            {
                get
                {
                    QuickFix.Fields.ShortSaleRestriction val = new QuickFix.Fields.ShortSaleRestriction();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ShortSaleRestriction val)
            {
                this.ShortSaleRestriction = val;
            }

            public QuickFix.Fields.ShortSaleRestriction Get(QuickFix.Fields.ShortSaleRestriction val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ShortSaleRestriction val)
            {
                return IsSetShortSaleRestriction();
            }

            public bool IsSetShortSaleRestriction()
            {
                return IsSetField(Tags.ShortSaleRestriction);
            }
            public QuickFix.Fields.UnitOfMeasureCurrency UnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.UnitOfMeasureCurrency val = new QuickFix.Fields.UnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnitOfMeasureCurrency val)
            {
                this.UnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.UnitOfMeasureCurrency Get(QuickFix.Fields.UnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnitOfMeasureCurrency val)
            {
                return IsSetUnitOfMeasureCurrency();
            }

            public bool IsSetUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.UnitOfMeasureCurrency);
            }
            public QuickFix.Fields.PriceUnitOfMeasureCurrency PriceUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.PriceUnitOfMeasureCurrency val = new QuickFix.Fields.PriceUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PriceUnitOfMeasureCurrency val)
            {
                this.PriceUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.PriceUnitOfMeasureCurrency Get(QuickFix.Fields.PriceUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PriceUnitOfMeasureCurrency val)
            {
                return IsSetPriceUnitOfMeasureCurrency();
            }

            public bool IsSetPriceUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.PriceUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.RefTickTableID RefTickTableID
            {
                get
                {
                    QuickFix.Fields.RefTickTableID val = new QuickFix.Fields.RefTickTableID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.RefTickTableID val)
            {
                this.RefTickTableID = val;
            }

            public QuickFix.Fields.RefTickTableID Get(QuickFix.Fields.RefTickTableID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.RefTickTableID val)
            {
                return IsSetRefTickTableID();
            }

            public bool IsSetRefTickTableID()
            {
                return IsSetField(Tags.RefTickTableID);
            }
            public QuickFix.Fields.AssetClass AssetClass
            {
                get
                {
                    QuickFix.Fields.AssetClass val = new QuickFix.Fields.AssetClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AssetClass val)
            {
                this.AssetClass = val;
            }

            public QuickFix.Fields.AssetClass Get(QuickFix.Fields.AssetClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AssetClass val)
            {
                return IsSetAssetClass();
            }

            public bool IsSetAssetClass()
            {
                return IsSetField(Tags.AssetClass);
            }
            public QuickFix.Fields.AssetSubClass AssetSubClass
            {
                get
                {
                    QuickFix.Fields.AssetSubClass val = new QuickFix.Fields.AssetSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AssetSubClass val)
            {
                this.AssetSubClass = val;
            }

            public QuickFix.Fields.AssetSubClass Get(QuickFix.Fields.AssetSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AssetSubClass val)
            {
                return IsSetAssetSubClass();
            }

            public bool IsSetAssetSubClass()
            {
                return IsSetField(Tags.AssetSubClass);
            }
            public QuickFix.Fields.AssetType AssetType
            {
                get
                {
                    QuickFix.Fields.AssetType val = new QuickFix.Fields.AssetType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AssetType val)
            {
                this.AssetType = val;
            }

            public QuickFix.Fields.AssetType Get(QuickFix.Fields.AssetType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AssetType val)
            {
                return IsSetAssetType();
            }

            public bool IsSetAssetType()
            {
                return IsSetField(Tags.AssetType);
            }
            public QuickFix.Fields.NoSecondaryAssetClasses NoSecondaryAssetClasses
            {
                get
                {
                    QuickFix.Fields.NoSecondaryAssetClasses val = new QuickFix.Fields.NoSecondaryAssetClasses();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoSecondaryAssetClasses val)
            {
                this.NoSecondaryAssetClasses = val;
            }

            public QuickFix.Fields.NoSecondaryAssetClasses Get(QuickFix.Fields.NoSecondaryAssetClasses val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoSecondaryAssetClasses val)
            {
                return IsSetNoSecondaryAssetClasses();
            }

            public bool IsSetNoSecondaryAssetClasses()
            {
                return IsSetField(Tags.NoSecondaryAssetClasses);
            }
            public QuickFix.Fields.SwapClass SwapClass
            {
                get
                {
                    QuickFix.Fields.SwapClass val = new QuickFix.Fields.SwapClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SwapClass val)
            {
                this.SwapClass = val;
            }

            public QuickFix.Fields.SwapClass Get(QuickFix.Fields.SwapClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SwapClass val)
            {
                return IsSetSwapClass();
            }

            public bool IsSetSwapClass()
            {
                return IsSetField(Tags.SwapClass);
            }
            public QuickFix.Fields.NthToDefault NthToDefault
            {
                get
                {
                    QuickFix.Fields.NthToDefault val = new QuickFix.Fields.NthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NthToDefault val)
            {
                this.NthToDefault = val;
            }

            public QuickFix.Fields.NthToDefault Get(QuickFix.Fields.NthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NthToDefault val)
            {
                return IsSetNthToDefault();
            }

            public bool IsSetNthToDefault()
            {
                return IsSetField(Tags.NthToDefault);
            }
            public QuickFix.Fields.MthToDefault MthToDefault
            {
                get
                {
                    QuickFix.Fields.MthToDefault val = new QuickFix.Fields.MthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MthToDefault val)
            {
                this.MthToDefault = val;
            }

            public QuickFix.Fields.MthToDefault Get(QuickFix.Fields.MthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MthToDefault val)
            {
                return IsSetMthToDefault();
            }

            public bool IsSetMthToDefault()
            {
                return IsSetField(Tags.MthToDefault);
            }
            public QuickFix.Fields.SettledEntityMatrixSource SettledEntityMatrixSource
            {
                get
                {
                    QuickFix.Fields.SettledEntityMatrixSource val = new QuickFix.Fields.SettledEntityMatrixSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettledEntityMatrixSource val)
            {
                this.SettledEntityMatrixSource = val;
            }

            public QuickFix.Fields.SettledEntityMatrixSource Get(QuickFix.Fields.SettledEntityMatrixSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettledEntityMatrixSource val)
            {
                return IsSetSettledEntityMatrixSource();
            }

            public bool IsSetSettledEntityMatrixSource()
            {
                return IsSetField(Tags.SettledEntityMatrixSource);
            }
            public QuickFix.Fields.SettledEntityMatrixPublicationDate SettledEntityMatrixPublicationDate
            {
                get
                {
                    QuickFix.Fields.SettledEntityMatrixPublicationDate val = new QuickFix.Fields.SettledEntityMatrixPublicationDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettledEntityMatrixPublicationDate val)
            {
                this.SettledEntityMatrixPublicationDate = val;
            }

            public QuickFix.Fields.SettledEntityMatrixPublicationDate Get(QuickFix.Fields.SettledEntityMatrixPublicationDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettledEntityMatrixPublicationDate val)
            {
                return IsSetSettledEntityMatrixPublicationDate();
            }

            public bool IsSetSettledEntityMatrixPublicationDate()
            {
                return IsSetField(Tags.SettledEntityMatrixPublicationDate);
            }
            public QuickFix.Fields.CouponType CouponType
            {
                get
                {
                    QuickFix.Fields.CouponType val = new QuickFix.Fields.CouponType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponType val)
            {
                this.CouponType = val;
            }

            public QuickFix.Fields.CouponType Get(QuickFix.Fields.CouponType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponType val)
            {
                return IsSetCouponType();
            }

            public bool IsSetCouponType()
            {
                return IsSetField(Tags.CouponType);
            }
            public QuickFix.Fields.TotalIssuedAmount TotalIssuedAmount
            {
                get
                {
                    QuickFix.Fields.TotalIssuedAmount val = new QuickFix.Fields.TotalIssuedAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TotalIssuedAmount val)
            {
                this.TotalIssuedAmount = val;
            }

            public QuickFix.Fields.TotalIssuedAmount Get(QuickFix.Fields.TotalIssuedAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TotalIssuedAmount val)
            {
                return IsSetTotalIssuedAmount();
            }

            public bool IsSetTotalIssuedAmount()
            {
                return IsSetField(Tags.TotalIssuedAmount);
            }
            public QuickFix.Fields.CouponFrequencyPeriod CouponFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.CouponFrequencyPeriod val = new QuickFix.Fields.CouponFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponFrequencyPeriod val)
            {
                this.CouponFrequencyPeriod = val;
            }

            public QuickFix.Fields.CouponFrequencyPeriod Get(QuickFix.Fields.CouponFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponFrequencyPeriod val)
            {
                return IsSetCouponFrequencyPeriod();
            }

            public bool IsSetCouponFrequencyPeriod()
            {
                return IsSetField(Tags.CouponFrequencyPeriod);
            }
            public QuickFix.Fields.CouponFrequencyUnit CouponFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.CouponFrequencyUnit val = new QuickFix.Fields.CouponFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponFrequencyUnit val)
            {
                this.CouponFrequencyUnit = val;
            }

            public QuickFix.Fields.CouponFrequencyUnit Get(QuickFix.Fields.CouponFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponFrequencyUnit val)
            {
                return IsSetCouponFrequencyUnit();
            }

            public bool IsSetCouponFrequencyUnit()
            {
                return IsSetField(Tags.CouponFrequencyUnit);
            }
            public QuickFix.Fields.CouponDayCount CouponDayCount
            {
                get
                {
                    QuickFix.Fields.CouponDayCount val = new QuickFix.Fields.CouponDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponDayCount val)
            {
                this.CouponDayCount = val;
            }

            public QuickFix.Fields.CouponDayCount Get(QuickFix.Fields.CouponDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponDayCount val)
            {
                return IsSetCouponDayCount();
            }

            public bool IsSetCouponDayCount()
            {
                return IsSetField(Tags.CouponDayCount);
            }
            public QuickFix.Fields.ConvertibleBondEquityID ConvertibleBondEquityID
            {
                get
                {
                    QuickFix.Fields.ConvertibleBondEquityID val = new QuickFix.Fields.ConvertibleBondEquityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ConvertibleBondEquityID val)
            {
                this.ConvertibleBondEquityID = val;
            }

            public QuickFix.Fields.ConvertibleBondEquityID Get(QuickFix.Fields.ConvertibleBondEquityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ConvertibleBondEquityID val)
            {
                return IsSetConvertibleBondEquityID();
            }

            public bool IsSetConvertibleBondEquityID()
            {
                return IsSetField(Tags.ConvertibleBondEquityID);
            }
            public QuickFix.Fields.ConvertibleBondEquityIDSource ConvertibleBondEquityIDSource
            {
                get
                {
                    QuickFix.Fields.ConvertibleBondEquityIDSource val = new QuickFix.Fields.ConvertibleBondEquityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ConvertibleBondEquityIDSource val)
            {
                this.ConvertibleBondEquityIDSource = val;
            }

            public QuickFix.Fields.ConvertibleBondEquityIDSource Get(QuickFix.Fields.ConvertibleBondEquityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ConvertibleBondEquityIDSource val)
            {
                return IsSetConvertibleBondEquityIDSource();
            }

            public bool IsSetConvertibleBondEquityIDSource()
            {
                return IsSetField(Tags.ConvertibleBondEquityIDSource);
            }
            public QuickFix.Fields.ContractPriceRefMonth ContractPriceRefMonth
            {
                get
                {
                    QuickFix.Fields.ContractPriceRefMonth val = new QuickFix.Fields.ContractPriceRefMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ContractPriceRefMonth val)
            {
                this.ContractPriceRefMonth = val;
            }

            public QuickFix.Fields.ContractPriceRefMonth Get(QuickFix.Fields.ContractPriceRefMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ContractPriceRefMonth val)
            {
                return IsSetContractPriceRefMonth();
            }

            public bool IsSetContractPriceRefMonth()
            {
                return IsSetField(Tags.ContractPriceRefMonth);
            }
            public QuickFix.Fields.LienSeniority LienSeniority
            {
                get
                {
                    QuickFix.Fields.LienSeniority val = new QuickFix.Fields.LienSeniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.LienSeniority val)
            {
                this.LienSeniority = val;
            }

            public QuickFix.Fields.LienSeniority Get(QuickFix.Fields.LienSeniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.LienSeniority val)
            {
                return IsSetLienSeniority();
            }

            public bool IsSetLienSeniority()
            {
                return IsSetField(Tags.LienSeniority);
            }
            public QuickFix.Fields.LoanFacility LoanFacility
            {
                get
                {
                    QuickFix.Fields.LoanFacility val = new QuickFix.Fields.LoanFacility();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.LoanFacility val)
            {
                this.LoanFacility = val;
            }

            public QuickFix.Fields.LoanFacility Get(QuickFix.Fields.LoanFacility val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.LoanFacility val)
            {
                return IsSetLoanFacility();
            }

            public bool IsSetLoanFacility()
            {
                return IsSetField(Tags.LoanFacility);
            }
            public QuickFix.Fields.ReferenceEntityType ReferenceEntityType
            {
                get
                {
                    QuickFix.Fields.ReferenceEntityType val = new QuickFix.Fields.ReferenceEntityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ReferenceEntityType val)
            {
                this.ReferenceEntityType = val;
            }

            public QuickFix.Fields.ReferenceEntityType Get(QuickFix.Fields.ReferenceEntityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ReferenceEntityType val)
            {
                return IsSetReferenceEntityType();
            }

            public bool IsSetReferenceEntityType()
            {
                return IsSetField(Tags.ReferenceEntityType);
            }
            public QuickFix.Fields.IndexSeries IndexSeries
            {
                get
                {
                    QuickFix.Fields.IndexSeries val = new QuickFix.Fields.IndexSeries();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.IndexSeries val)
            {
                this.IndexSeries = val;
            }

            public QuickFix.Fields.IndexSeries Get(QuickFix.Fields.IndexSeries val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.IndexSeries val)
            {
                return IsSetIndexSeries();
            }

            public bool IsSetIndexSeries()
            {
                return IsSetField(Tags.IndexSeries);
            }
            public QuickFix.Fields.IndexAnnexVersion IndexAnnexVersion
            {
                get
                {
                    QuickFix.Fields.IndexAnnexVersion val = new QuickFix.Fields.IndexAnnexVersion();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.IndexAnnexVersion val)
            {
                this.IndexAnnexVersion = val;
            }

            public QuickFix.Fields.IndexAnnexVersion Get(QuickFix.Fields.IndexAnnexVersion val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.IndexAnnexVersion val)
            {
                return IsSetIndexAnnexVersion();
            }

            public bool IsSetIndexAnnexVersion()
            {
                return IsSetField(Tags.IndexAnnexVersion);
            }
            public QuickFix.Fields.IndexAnnexDate IndexAnnexDate
            {
                get
                {
                    QuickFix.Fields.IndexAnnexDate val = new QuickFix.Fields.IndexAnnexDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.IndexAnnexDate val)
            {
                this.IndexAnnexDate = val;
            }

            public QuickFix.Fields.IndexAnnexDate Get(QuickFix.Fields.IndexAnnexDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.IndexAnnexDate val)
            {
                return IsSetIndexAnnexDate();
            }

            public bool IsSetIndexAnnexDate()
            {
                return IsSetField(Tags.IndexAnnexDate);
            }
            public QuickFix.Fields.IndexAnnexSource IndexAnnexSource
            {
                get
                {
                    QuickFix.Fields.IndexAnnexSource val = new QuickFix.Fields.IndexAnnexSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.IndexAnnexSource val)
            {
                this.IndexAnnexSource = val;
            }

            public QuickFix.Fields.IndexAnnexSource Get(QuickFix.Fields.IndexAnnexSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.IndexAnnexSource val)
            {
                return IsSetIndexAnnexSource();
            }

            public bool IsSetIndexAnnexSource()
            {
                return IsSetField(Tags.IndexAnnexSource);
            }
            public QuickFix.Fields.BusinessDayConvention BusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.BusinessDayConvention val = new QuickFix.Fields.BusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.BusinessDayConvention val)
            {
                this.BusinessDayConvention = val;
            }

            public QuickFix.Fields.BusinessDayConvention Get(QuickFix.Fields.BusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.BusinessDayConvention val)
            {
                return IsSetBusinessDayConvention();
            }

            public bool IsSetBusinessDayConvention()
            {
                return IsSetField(Tags.BusinessDayConvention);
            }
            public QuickFix.Fields.NoBusinessCenters NoBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoBusinessCenters val = new QuickFix.Fields.NoBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoBusinessCenters val)
            {
                this.NoBusinessCenters = val;
            }

            public QuickFix.Fields.NoBusinessCenters Get(QuickFix.Fields.NoBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoBusinessCenters val)
            {
                return IsSetNoBusinessCenters();
            }

            public bool IsSetNoBusinessCenters()
            {
                return IsSetField(Tags.NoBusinessCenters);
            }
            public QuickFix.Fields.DateRollConvention DateRollConvention
            {
                get
                {
                    QuickFix.Fields.DateRollConvention val = new QuickFix.Fields.DateRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DateRollConvention val)
            {
                this.DateRollConvention = val;
            }

            public QuickFix.Fields.DateRollConvention Get(QuickFix.Fields.DateRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DateRollConvention val)
            {
                return IsSetDateRollConvention();
            }

            public bool IsSetDateRollConvention()
            {
                return IsSetField(Tags.DateRollConvention);
            }
            public QuickFix.Fields.NoStreams NoStreams
            {
                get
                {
                    QuickFix.Fields.NoStreams val = new QuickFix.Fields.NoStreams();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoStreams val)
            {
                this.NoStreams = val;
            }

            public QuickFix.Fields.NoStreams Get(QuickFix.Fields.NoStreams val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoStreams val)
            {
                return IsSetNoStreams();
            }

            public bool IsSetNoStreams()
            {
                return IsSetField(Tags.NoStreams);
            }
            public QuickFix.Fields.NoProvisions NoProvisions
            {
                get
                {
                    QuickFix.Fields.NoProvisions val = new QuickFix.Fields.NoProvisions();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoProvisions val)
            {
                this.NoProvisions = val;
            }

            public QuickFix.Fields.NoProvisions Get(QuickFix.Fields.NoProvisions val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoProvisions val)
            {
                return IsSetNoProvisions();
            }

            public bool IsSetNoProvisions()
            {
                return IsSetField(Tags.NoProvisions);
            }
            public QuickFix.Fields.NoAdditionalTerms NoAdditionalTerms
            {
                get
                {
                    QuickFix.Fields.NoAdditionalTerms val = new QuickFix.Fields.NoAdditionalTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoAdditionalTerms val)
            {
                this.NoAdditionalTerms = val;
            }

            public QuickFix.Fields.NoAdditionalTerms Get(QuickFix.Fields.NoAdditionalTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoAdditionalTerms val)
            {
                return IsSetNoAdditionalTerms();
            }

            public bool IsSetNoAdditionalTerms()
            {
                return IsSetField(Tags.NoAdditionalTerms);
            }
            public QuickFix.Fields.NoProtectionTerms NoProtectionTerms
            {
                get
                {
                    QuickFix.Fields.NoProtectionTerms val = new QuickFix.Fields.NoProtectionTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoProtectionTerms val)
            {
                this.NoProtectionTerms = val;
            }

            public QuickFix.Fields.NoProtectionTerms Get(QuickFix.Fields.NoProtectionTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoProtectionTerms val)
            {
                return IsSetNoProtectionTerms();
            }

            public bool IsSetNoProtectionTerms()
            {
                return IsSetField(Tags.NoProtectionTerms);
            }
            public QuickFix.Fields.NoCashSettlTerms NoCashSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoCashSettlTerms val = new QuickFix.Fields.NoCashSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoCashSettlTerms val)
            {
                this.NoCashSettlTerms = val;
            }

            public QuickFix.Fields.NoCashSettlTerms Get(QuickFix.Fields.NoCashSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoCashSettlTerms val)
            {
                return IsSetNoCashSettlTerms();
            }

            public bool IsSetNoCashSettlTerms()
            {
                return IsSetField(Tags.NoCashSettlTerms);
            }
            public QuickFix.Fields.NoPhysicalSettlTerms NoPhysicalSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoPhysicalSettlTerms val = new QuickFix.Fields.NoPhysicalSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoPhysicalSettlTerms val)
            {
                this.NoPhysicalSettlTerms = val;
            }

            public QuickFix.Fields.NoPhysicalSettlTerms Get(QuickFix.Fields.NoPhysicalSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoPhysicalSettlTerms val)
            {
                return IsSetNoPhysicalSettlTerms();
            }

            public bool IsSetNoPhysicalSettlTerms()
            {
                return IsSetField(Tags.NoPhysicalSettlTerms);
            }
            public QuickFix.Fields.NoAssetAttributes NoAssetAttributes
            {
                get
                {
                    QuickFix.Fields.NoAssetAttributes val = new QuickFix.Fields.NoAssetAttributes();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoAssetAttributes val)
            {
                this.NoAssetAttributes = val;
            }

            public QuickFix.Fields.NoAssetAttributes Get(QuickFix.Fields.NoAssetAttributes val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoAssetAttributes val)
            {
                return IsSetNoAssetAttributes();
            }

            public bool IsSetNoAssetAttributes()
            {
                return IsSetField(Tags.NoAssetAttributes);
            }
            public QuickFix.Fields.SwapSubClass SwapSubClass
            {
                get
                {
                    QuickFix.Fields.SwapSubClass val = new QuickFix.Fields.SwapSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SwapSubClass val)
            {
                this.SwapSubClass = val;
            }

            public QuickFix.Fields.SwapSubClass Get(QuickFix.Fields.SwapSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SwapSubClass val)
            {
                return IsSetSwapSubClass();
            }

            public bool IsSetSwapSubClass()
            {
                return IsSetField(Tags.SwapSubClass);
            }
            public QuickFix.Fields.SettlRateIndex SettlRateIndex
            {
                get
                {
                    QuickFix.Fields.SettlRateIndex val = new QuickFix.Fields.SettlRateIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlRateIndex val)
            {
                this.SettlRateIndex = val;
            }

            public QuickFix.Fields.SettlRateIndex Get(QuickFix.Fields.SettlRateIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlRateIndex val)
            {
                return IsSetSettlRateIndex();
            }

            public bool IsSetSettlRateIndex()
            {
                return IsSetField(Tags.SettlRateIndex);
            }
            public QuickFix.Fields.SettlRateIndexLocation SettlRateIndexLocation
            {
                get
                {
                    QuickFix.Fields.SettlRateIndexLocation val = new QuickFix.Fields.SettlRateIndexLocation();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlRateIndexLocation val)
            {
                this.SettlRateIndexLocation = val;
            }

            public QuickFix.Fields.SettlRateIndexLocation Get(QuickFix.Fields.SettlRateIndexLocation val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlRateIndexLocation val)
            {
                return IsSetSettlRateIndexLocation();
            }

            public bool IsSetSettlRateIndexLocation()
            {
                return IsSetField(Tags.SettlRateIndexLocation);
            }
            public QuickFix.Fields.OptionExpirationDesc OptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.OptionExpirationDesc val = new QuickFix.Fields.OptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExpirationDesc val)
            {
                this.OptionExpirationDesc = val;
            }

            public QuickFix.Fields.OptionExpirationDesc Get(QuickFix.Fields.OptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExpirationDesc val)
            {
                return IsSetOptionExpirationDesc();
            }

            public bool IsSetOptionExpirationDesc()
            {
                return IsSetField(Tags.OptionExpirationDesc);
            }
            public QuickFix.Fields.EncodedOptionExpirationDescLen EncodedOptionExpirationDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedOptionExpirationDescLen val = new QuickFix.Fields.EncodedOptionExpirationDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedOptionExpirationDescLen val)
            {
                this.EncodedOptionExpirationDescLen = val;
            }

            public QuickFix.Fields.EncodedOptionExpirationDescLen Get(QuickFix.Fields.EncodedOptionExpirationDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedOptionExpirationDescLen val)
            {
                return IsSetEncodedOptionExpirationDescLen();
            }

            public bool IsSetEncodedOptionExpirationDescLen()
            {
                return IsSetField(Tags.EncodedOptionExpirationDescLen);
            }
            public QuickFix.Fields.EncodedOptionExpirationDesc EncodedOptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.EncodedOptionExpirationDesc val = new QuickFix.Fields.EncodedOptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedOptionExpirationDesc val)
            {
                this.EncodedOptionExpirationDesc = val;
            }

            public QuickFix.Fields.EncodedOptionExpirationDesc Get(QuickFix.Fields.EncodedOptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedOptionExpirationDesc val)
            {
                return IsSetEncodedOptionExpirationDesc();
            }

            public bool IsSetEncodedOptionExpirationDesc()
            {
                return IsSetField(Tags.EncodedOptionExpirationDesc);
            }
            public QuickFix.Fields.StrikeUnitOfMeasure StrikeUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.StrikeUnitOfMeasure val = new QuickFix.Fields.StrikeUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeUnitOfMeasure val)
            {
                this.StrikeUnitOfMeasure = val;
            }

            public QuickFix.Fields.StrikeUnitOfMeasure Get(QuickFix.Fields.StrikeUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeUnitOfMeasure val)
            {
                return IsSetStrikeUnitOfMeasure();
            }

            public bool IsSetStrikeUnitOfMeasure()
            {
                return IsSetField(Tags.StrikeUnitOfMeasure);
            }
            public QuickFix.Fields.StrikeIndex StrikeIndex
            {
                get
                {
                    QuickFix.Fields.StrikeIndex val = new QuickFix.Fields.StrikeIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeIndex val)
            {
                this.StrikeIndex = val;
            }

            public QuickFix.Fields.StrikeIndex Get(QuickFix.Fields.StrikeIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeIndex val)
            {
                return IsSetStrikeIndex();
            }

            public bool IsSetStrikeIndex()
            {
                return IsSetField(Tags.StrikeIndex);
            }
            public QuickFix.Fields.StrikeIndexSpread StrikeIndexSpread
            {
                get
                {
                    QuickFix.Fields.StrikeIndexSpread val = new QuickFix.Fields.StrikeIndexSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeIndexSpread val)
            {
                this.StrikeIndexSpread = val;
            }

            public QuickFix.Fields.StrikeIndexSpread Get(QuickFix.Fields.StrikeIndexSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeIndexSpread val)
            {
                return IsSetStrikeIndexSpread();
            }

            public bool IsSetStrikeIndexSpread()
            {
                return IsSetField(Tags.StrikeIndexSpread);
            }
            public QuickFix.Fields.ValuationSource ValuationSource
            {
                get
                {
                    QuickFix.Fields.ValuationSource val = new QuickFix.Fields.ValuationSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ValuationSource val)
            {
                this.ValuationSource = val;
            }

            public QuickFix.Fields.ValuationSource Get(QuickFix.Fields.ValuationSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ValuationSource val)
            {
                return IsSetValuationSource();
            }

            public bool IsSetValuationSource()
            {
                return IsSetField(Tags.ValuationSource);
            }
            public QuickFix.Fields.ValuationReferenceModel ValuationReferenceModel
            {
                get
                {
                    QuickFix.Fields.ValuationReferenceModel val = new QuickFix.Fields.ValuationReferenceModel();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ValuationReferenceModel val)
            {
                this.ValuationReferenceModel = val;
            }

            public QuickFix.Fields.ValuationReferenceModel Get(QuickFix.Fields.ValuationReferenceModel val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ValuationReferenceModel val)
            {
                return IsSetValuationReferenceModel();
            }

            public bool IsSetValuationReferenceModel()
            {
                return IsSetField(Tags.ValuationReferenceModel);
            }
            public QuickFix.Fields.StrategyType StrategyType
            {
                get
                {
                    QuickFix.Fields.StrategyType val = new QuickFix.Fields.StrategyType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrategyType val)
            {
                this.StrategyType = val;
            }

            public QuickFix.Fields.StrategyType Get(QuickFix.Fields.StrategyType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrategyType val)
            {
                return IsSetStrategyType();
            }

            public bool IsSetStrategyType()
            {
                return IsSetField(Tags.StrategyType);
            }
            public QuickFix.Fields.CommonPricingIndicator CommonPricingIndicator
            {
                get
                {
                    QuickFix.Fields.CommonPricingIndicator val = new QuickFix.Fields.CommonPricingIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CommonPricingIndicator val)
            {
                this.CommonPricingIndicator = val;
            }

            public QuickFix.Fields.CommonPricingIndicator Get(QuickFix.Fields.CommonPricingIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CommonPricingIndicator val)
            {
                return IsSetCommonPricingIndicator();
            }

            public bool IsSetCommonPricingIndicator()
            {
                return IsSetField(Tags.CommonPricingIndicator);
            }
            public QuickFix.Fields.SettlDisruptionProvision SettlDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.SettlDisruptionProvision val = new QuickFix.Fields.SettlDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlDisruptionProvision val)
            {
                this.SettlDisruptionProvision = val;
            }

            public QuickFix.Fields.SettlDisruptionProvision Get(QuickFix.Fields.SettlDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlDisruptionProvision val)
            {
                return IsSetSettlDisruptionProvision();
            }

            public bool IsSetSettlDisruptionProvision()
            {
                return IsSetField(Tags.SettlDisruptionProvision);
            }
            public QuickFix.Fields.InstrumentRoundingDirection InstrumentRoundingDirection
            {
                get
                {
                    QuickFix.Fields.InstrumentRoundingDirection val = new QuickFix.Fields.InstrumentRoundingDirection();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InstrumentRoundingDirection val)
            {
                this.InstrumentRoundingDirection = val;
            }

            public QuickFix.Fields.InstrumentRoundingDirection Get(QuickFix.Fields.InstrumentRoundingDirection val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InstrumentRoundingDirection val)
            {
                return IsSetInstrumentRoundingDirection();
            }

            public bool IsSetInstrumentRoundingDirection()
            {
                return IsSetField(Tags.InstrumentRoundingDirection);
            }
            public QuickFix.Fields.InstrumentRoundingPrecision InstrumentRoundingPrecision
            {
                get
                {
                    QuickFix.Fields.InstrumentRoundingPrecision val = new QuickFix.Fields.InstrumentRoundingPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InstrumentRoundingPrecision val)
            {
                this.InstrumentRoundingPrecision = val;
            }

            public QuickFix.Fields.InstrumentRoundingPrecision Get(QuickFix.Fields.InstrumentRoundingPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InstrumentRoundingPrecision val)
            {
                return IsSetInstrumentRoundingPrecision();
            }

            public bool IsSetInstrumentRoundingPrecision()
            {
                return IsSetField(Tags.InstrumentRoundingPrecision);
            }
            public QuickFix.Fields.PricingDateUnadjusted PricingDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.PricingDateUnadjusted val = new QuickFix.Fields.PricingDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PricingDateUnadjusted val)
            {
                this.PricingDateUnadjusted = val;
            }

            public QuickFix.Fields.PricingDateUnadjusted Get(QuickFix.Fields.PricingDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PricingDateUnadjusted val)
            {
                return IsSetPricingDateUnadjusted();
            }

            public bool IsSetPricingDateUnadjusted()
            {
                return IsSetField(Tags.PricingDateUnadjusted);
            }
            public QuickFix.Fields.PricingDateBusinessDayConvention PricingDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.PricingDateBusinessDayConvention val = new QuickFix.Fields.PricingDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PricingDateBusinessDayConvention val)
            {
                this.PricingDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.PricingDateBusinessDayConvention Get(QuickFix.Fields.PricingDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PricingDateBusinessDayConvention val)
            {
                return IsSetPricingDateBusinessDayConvention();
            }

            public bool IsSetPricingDateBusinessDayConvention()
            {
                return IsSetField(Tags.PricingDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoPricingDateBusinessCenters NoPricingDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoPricingDateBusinessCenters val = new QuickFix.Fields.NoPricingDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoPricingDateBusinessCenters val)
            {
                this.NoPricingDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoPricingDateBusinessCenters Get(QuickFix.Fields.NoPricingDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoPricingDateBusinessCenters val)
            {
                return IsSetNoPricingDateBusinessCenters();
            }

            public bool IsSetNoPricingDateBusinessCenters()
            {
                return IsSetField(Tags.NoPricingDateBusinessCenters);
            }
            public QuickFix.Fields.PricingDateAdjusted PricingDateAdjusted
            {
                get
                {
                    QuickFix.Fields.PricingDateAdjusted val = new QuickFix.Fields.PricingDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PricingDateAdjusted val)
            {
                this.PricingDateAdjusted = val;
            }

            public QuickFix.Fields.PricingDateAdjusted Get(QuickFix.Fields.PricingDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PricingDateAdjusted val)
            {
                return IsSetPricingDateAdjusted();
            }

            public bool IsSetPricingDateAdjusted()
            {
                return IsSetField(Tags.PricingDateAdjusted);
            }
            public QuickFix.Fields.PricingTime PricingTime
            {
                get
                {
                    QuickFix.Fields.PricingTime val = new QuickFix.Fields.PricingTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PricingTime val)
            {
                this.PricingTime = val;
            }

            public QuickFix.Fields.PricingTime Get(QuickFix.Fields.PricingTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PricingTime val)
            {
                return IsSetPricingTime();
            }

            public bool IsSetPricingTime()
            {
                return IsSetField(Tags.PricingTime);
            }
            public QuickFix.Fields.PricingTimeBusinessCenter PricingTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.PricingTimeBusinessCenter val = new QuickFix.Fields.PricingTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.PricingTimeBusinessCenter val)
            {
                this.PricingTimeBusinessCenter = val;
            }

            public QuickFix.Fields.PricingTimeBusinessCenter Get(QuickFix.Fields.PricingTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.PricingTimeBusinessCenter val)
            {
                return IsSetPricingTimeBusinessCenter();
            }

            public bool IsSetPricingTimeBusinessCenter()
            {
                return IsSetField(Tags.PricingTimeBusinessCenter);
            }
            public QuickFix.Fields.MarketDisruptionProvision MarketDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.MarketDisruptionProvision val = new QuickFix.Fields.MarketDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketDisruptionProvision val)
            {
                this.MarketDisruptionProvision = val;
            }

            public QuickFix.Fields.MarketDisruptionProvision Get(QuickFix.Fields.MarketDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketDisruptionProvision val)
            {
                return IsSetMarketDisruptionProvision();
            }

            public bool IsSetMarketDisruptionProvision()
            {
                return IsSetField(Tags.MarketDisruptionProvision);
            }
            public QuickFix.Fields.NoMarketDisruptionEvents NoMarketDisruptionEvents
            {
                get
                {
                    QuickFix.Fields.NoMarketDisruptionEvents val = new QuickFix.Fields.NoMarketDisruptionEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoMarketDisruptionEvents val)
            {
                this.NoMarketDisruptionEvents = val;
            }

            public QuickFix.Fields.NoMarketDisruptionEvents Get(QuickFix.Fields.NoMarketDisruptionEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoMarketDisruptionEvents val)
            {
                return IsSetNoMarketDisruptionEvents();
            }

            public bool IsSetNoMarketDisruptionEvents()
            {
                return IsSetField(Tags.NoMarketDisruptionEvents);
            }
            public QuickFix.Fields.MarketDisruptionFallbackProvision MarketDisruptionFallbackProvision
            {
                get
                {
                    QuickFix.Fields.MarketDisruptionFallbackProvision val = new QuickFix.Fields.MarketDisruptionFallbackProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketDisruptionFallbackProvision val)
            {
                this.MarketDisruptionFallbackProvision = val;
            }

            public QuickFix.Fields.MarketDisruptionFallbackProvision Get(QuickFix.Fields.MarketDisruptionFallbackProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackProvision val)
            {
                return IsSetMarketDisruptionFallbackProvision();
            }

            public bool IsSetMarketDisruptionFallbackProvision()
            {
                return IsSetField(Tags.MarketDisruptionFallbackProvision);
            }
            public QuickFix.Fields.NoMarketDisruptionFallbacks NoMarketDisruptionFallbacks
            {
                get
                {
                    QuickFix.Fields.NoMarketDisruptionFallbacks val = new QuickFix.Fields.NoMarketDisruptionFallbacks();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoMarketDisruptionFallbacks val)
            {
                this.NoMarketDisruptionFallbacks = val;
            }

            public QuickFix.Fields.NoMarketDisruptionFallbacks Get(QuickFix.Fields.NoMarketDisruptionFallbacks val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoMarketDisruptionFallbacks val)
            {
                return IsSetNoMarketDisruptionFallbacks();
            }

            public bool IsSetNoMarketDisruptionFallbacks()
            {
                return IsSetField(Tags.NoMarketDisruptionFallbacks);
            }
            public QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices NoMarketDisruptionFallbackReferencePrices
            {
                get
                {
                    QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices val = new QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices val)
            {
                this.NoMarketDisruptionFallbackReferencePrices = val;
            }

            public QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices Get(QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoMarketDisruptionFallbackReferencePrices val)
            {
                return IsSetNoMarketDisruptionFallbackReferencePrices();
            }

            public bool IsSetNoMarketDisruptionFallbackReferencePrices()
            {
                return IsSetField(Tags.NoMarketDisruptionFallbackReferencePrices);
            }
            public QuickFix.Fields.MarketDisruptionMaximumDays MarketDisruptionMaximumDays
            {
                get
                {
                    QuickFix.Fields.MarketDisruptionMaximumDays val = new QuickFix.Fields.MarketDisruptionMaximumDays();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketDisruptionMaximumDays val)
            {
                this.MarketDisruptionMaximumDays = val;
            }

            public QuickFix.Fields.MarketDisruptionMaximumDays Get(QuickFix.Fields.MarketDisruptionMaximumDays val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketDisruptionMaximumDays val)
            {
                return IsSetMarketDisruptionMaximumDays();
            }

            public bool IsSetMarketDisruptionMaximumDays()
            {
                return IsSetField(Tags.MarketDisruptionMaximumDays);
            }
            public QuickFix.Fields.MarketDisruptionMaterialityPercentage MarketDisruptionMaterialityPercentage
            {
                get
                {
                    QuickFix.Fields.MarketDisruptionMaterialityPercentage val = new QuickFix.Fields.MarketDisruptionMaterialityPercentage();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketDisruptionMaterialityPercentage val)
            {
                this.MarketDisruptionMaterialityPercentage = val;
            }

            public QuickFix.Fields.MarketDisruptionMaterialityPercentage Get(QuickFix.Fields.MarketDisruptionMaterialityPercentage val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketDisruptionMaterialityPercentage val)
            {
                return IsSetMarketDisruptionMaterialityPercentage();
            }

            public bool IsSetMarketDisruptionMaterialityPercentage()
            {
                return IsSetField(Tags.MarketDisruptionMaterialityPercentage);
            }
            public QuickFix.Fields.MarketDisruptionMinimumFuturesContracts MarketDisruptionMinimumFuturesContracts
            {
                get
                {
                    QuickFix.Fields.MarketDisruptionMinimumFuturesContracts val = new QuickFix.Fields.MarketDisruptionMinimumFuturesContracts();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MarketDisruptionMinimumFuturesContracts val)
            {
                this.MarketDisruptionMinimumFuturesContracts = val;
            }

            public QuickFix.Fields.MarketDisruptionMinimumFuturesContracts Get(QuickFix.Fields.MarketDisruptionMinimumFuturesContracts val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MarketDisruptionMinimumFuturesContracts val)
            {
                return IsSetMarketDisruptionMinimumFuturesContracts();
            }

            public bool IsSetMarketDisruptionMinimumFuturesContracts()
            {
                return IsSetField(Tags.MarketDisruptionMinimumFuturesContracts);
            }
            public QuickFix.Fields.ExerciseDesc ExerciseDesc
            {
                get
                {
                    QuickFix.Fields.ExerciseDesc val = new QuickFix.Fields.ExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExerciseDesc val)
            {
                this.ExerciseDesc = val;
            }

            public QuickFix.Fields.ExerciseDesc Get(QuickFix.Fields.ExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExerciseDesc val)
            {
                return IsSetExerciseDesc();
            }

            public bool IsSetExerciseDesc()
            {
                return IsSetField(Tags.ExerciseDesc);
            }
            public QuickFix.Fields.EncodedExerciseDescLen EncodedExerciseDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedExerciseDescLen val = new QuickFix.Fields.EncodedExerciseDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedExerciseDescLen val)
            {
                this.EncodedExerciseDescLen = val;
            }

            public QuickFix.Fields.EncodedExerciseDescLen Get(QuickFix.Fields.EncodedExerciseDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedExerciseDescLen val)
            {
                return IsSetEncodedExerciseDescLen();
            }

            public bool IsSetEncodedExerciseDescLen()
            {
                return IsSetField(Tags.EncodedExerciseDescLen);
            }
            public QuickFix.Fields.EncodedExerciseDesc EncodedExerciseDesc
            {
                get
                {
                    QuickFix.Fields.EncodedExerciseDesc val = new QuickFix.Fields.EncodedExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedExerciseDesc val)
            {
                this.EncodedExerciseDesc = val;
            }

            public QuickFix.Fields.EncodedExerciseDesc Get(QuickFix.Fields.EncodedExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedExerciseDesc val)
            {
                return IsSetEncodedExerciseDesc();
            }

            public bool IsSetEncodedExerciseDesc()
            {
                return IsSetField(Tags.EncodedExerciseDesc);
            }
            public QuickFix.Fields.AutomaticExerciseIndicator AutomaticExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.AutomaticExerciseIndicator val = new QuickFix.Fields.AutomaticExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AutomaticExerciseIndicator val)
            {
                this.AutomaticExerciseIndicator = val;
            }

            public QuickFix.Fields.AutomaticExerciseIndicator Get(QuickFix.Fields.AutomaticExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AutomaticExerciseIndicator val)
            {
                return IsSetAutomaticExerciseIndicator();
            }

            public bool IsSetAutomaticExerciseIndicator()
            {
                return IsSetField(Tags.AutomaticExerciseIndicator);
            }
            public QuickFix.Fields.AutomaticExerciseThresholdRate AutomaticExerciseThresholdRate
            {
                get
                {
                    QuickFix.Fields.AutomaticExerciseThresholdRate val = new QuickFix.Fields.AutomaticExerciseThresholdRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AutomaticExerciseThresholdRate val)
            {
                this.AutomaticExerciseThresholdRate = val;
            }

            public QuickFix.Fields.AutomaticExerciseThresholdRate Get(QuickFix.Fields.AutomaticExerciseThresholdRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AutomaticExerciseThresholdRate val)
            {
                return IsSetAutomaticExerciseThresholdRate();
            }

            public bool IsSetAutomaticExerciseThresholdRate()
            {
                return IsSetField(Tags.AutomaticExerciseThresholdRate);
            }
            public QuickFix.Fields.ExerciseConfirmationMethod ExerciseConfirmationMethod
            {
                get
                {
                    QuickFix.Fields.ExerciseConfirmationMethod val = new QuickFix.Fields.ExerciseConfirmationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExerciseConfirmationMethod val)
            {
                this.ExerciseConfirmationMethod = val;
            }

            public QuickFix.Fields.ExerciseConfirmationMethod Get(QuickFix.Fields.ExerciseConfirmationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExerciseConfirmationMethod val)
            {
                return IsSetExerciseConfirmationMethod();
            }

            public bool IsSetExerciseConfirmationMethod()
            {
                return IsSetField(Tags.ExerciseConfirmationMethod);
            }
            public QuickFix.Fields.ManualNoticeBusinessCenter ManualNoticeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.ManualNoticeBusinessCenter val = new QuickFix.Fields.ManualNoticeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ManualNoticeBusinessCenter val)
            {
                this.ManualNoticeBusinessCenter = val;
            }

            public QuickFix.Fields.ManualNoticeBusinessCenter Get(QuickFix.Fields.ManualNoticeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ManualNoticeBusinessCenter val)
            {
                return IsSetManualNoticeBusinessCenter();
            }

            public bool IsSetManualNoticeBusinessCenter()
            {
                return IsSetField(Tags.ManualNoticeBusinessCenter);
            }
            public QuickFix.Fields.FallbackExerciseIndicator FallbackExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.FallbackExerciseIndicator val = new QuickFix.Fields.FallbackExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FallbackExerciseIndicator val)
            {
                this.FallbackExerciseIndicator = val;
            }

            public QuickFix.Fields.FallbackExerciseIndicator Get(QuickFix.Fields.FallbackExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FallbackExerciseIndicator val)
            {
                return IsSetFallbackExerciseIndicator();
            }

            public bool IsSetFallbackExerciseIndicator()
            {
                return IsSetField(Tags.FallbackExerciseIndicator);
            }
            public QuickFix.Fields.LimitedRightToConfirmIndicator LimitedRightToConfirmIndicator
            {
                get
                {
                    QuickFix.Fields.LimitedRightToConfirmIndicator val = new QuickFix.Fields.LimitedRightToConfirmIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.LimitedRightToConfirmIndicator val)
            {
                this.LimitedRightToConfirmIndicator = val;
            }

            public QuickFix.Fields.LimitedRightToConfirmIndicator Get(QuickFix.Fields.LimitedRightToConfirmIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.LimitedRightToConfirmIndicator val)
            {
                return IsSetLimitedRightToConfirmIndicator();
            }

            public bool IsSetLimitedRightToConfirmIndicator()
            {
                return IsSetField(Tags.LimitedRightToConfirmIndicator);
            }
            public QuickFix.Fields.ExerciseSplitTicketIndicator ExerciseSplitTicketIndicator
            {
                get
                {
                    QuickFix.Fields.ExerciseSplitTicketIndicator val = new QuickFix.Fields.ExerciseSplitTicketIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExerciseSplitTicketIndicator val)
            {
                this.ExerciseSplitTicketIndicator = val;
            }

            public QuickFix.Fields.ExerciseSplitTicketIndicator Get(QuickFix.Fields.ExerciseSplitTicketIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExerciseSplitTicketIndicator val)
            {
                return IsSetExerciseSplitTicketIndicator();
            }

            public bool IsSetExerciseSplitTicketIndicator()
            {
                return IsSetField(Tags.ExerciseSplitTicketIndicator);
            }
            public QuickFix.Fields.OptionExerciseBusinessDayConvention OptionExerciseBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.OptionExerciseBusinessDayConvention val = new QuickFix.Fields.OptionExerciseBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseBusinessDayConvention val)
            {
                this.OptionExerciseBusinessDayConvention = val;
            }

            public QuickFix.Fields.OptionExerciseBusinessDayConvention Get(QuickFix.Fields.OptionExerciseBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseBusinessDayConvention val)
            {
                return IsSetOptionExerciseBusinessDayConvention();
            }

            public bool IsSetOptionExerciseBusinessDayConvention()
            {
                return IsSetField(Tags.OptionExerciseBusinessDayConvention);
            }
            public QuickFix.Fields.NoOptionExerciseBusinessCenters NoOptionExerciseBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoOptionExerciseBusinessCenters val = new QuickFix.Fields.NoOptionExerciseBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoOptionExerciseBusinessCenters val)
            {
                this.NoOptionExerciseBusinessCenters = val;
            }

            public QuickFix.Fields.NoOptionExerciseBusinessCenters Get(QuickFix.Fields.NoOptionExerciseBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoOptionExerciseBusinessCenters val)
            {
                return IsSetNoOptionExerciseBusinessCenters();
            }

            public bool IsSetNoOptionExerciseBusinessCenters()
            {
                return IsSetField(Tags.NoOptionExerciseBusinessCenters);
            }
            public QuickFix.Fields.NoOptionExerciseDates NoOptionExerciseDates
            {
                get
                {
                    QuickFix.Fields.NoOptionExerciseDates val = new QuickFix.Fields.NoOptionExerciseDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoOptionExerciseDates val)
            {
                this.NoOptionExerciseDates = val;
            }

            public QuickFix.Fields.NoOptionExerciseDates Get(QuickFix.Fields.NoOptionExerciseDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoOptionExerciseDates val)
            {
                return IsSetNoOptionExerciseDates();
            }

            public bool IsSetNoOptionExerciseDates()
            {
                return IsSetField(Tags.NoOptionExerciseDates);
            }
            public QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType OptionExerciseEarliestDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType val = new QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType val)
            {
                this.OptionExerciseEarliestDateOffsetDayType = val;
            }

            public QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType Get(QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseEarliestDateOffsetDayType val)
            {
                return IsSetOptionExerciseEarliestDateOffsetDayType();
            }

            public bool IsSetOptionExerciseEarliestDateOffsetDayType()
            {
                return IsSetField(Tags.OptionExerciseEarliestDateOffsetDayType);
            }
            public QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod OptionExerciseEarliestDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod val)
            {
                this.OptionExerciseEarliestDateOffsetPeriod = val;
            }

            public QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseEarliestDateOffsetPeriod val)
            {
                return IsSetOptionExerciseEarliestDateOffsetPeriod();
            }

            public bool IsSetOptionExerciseEarliestDateOffsetPeriod()
            {
                return IsSetField(Tags.OptionExerciseEarliestDateOffsetPeriod);
            }
            public QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit OptionExerciseEarliestDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit val)
            {
                this.OptionExerciseEarliestDateOffsetUnit = val;
            }

            public QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseEarliestDateOffsetUnit val)
            {
                return IsSetOptionExerciseEarliestDateOffsetUnit();
            }

            public bool IsSetOptionExerciseEarliestDateOffsetUnit()
            {
                return IsSetField(Tags.OptionExerciseEarliestDateOffsetUnit);
            }
            public QuickFix.Fields.OptionExerciseFrequencyPeriod OptionExerciseFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.OptionExerciseFrequencyPeriod val = new QuickFix.Fields.OptionExerciseFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseFrequencyPeriod val)
            {
                this.OptionExerciseFrequencyPeriod = val;
            }

            public QuickFix.Fields.OptionExerciseFrequencyPeriod Get(QuickFix.Fields.OptionExerciseFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseFrequencyPeriod val)
            {
                return IsSetOptionExerciseFrequencyPeriod();
            }

            public bool IsSetOptionExerciseFrequencyPeriod()
            {
                return IsSetField(Tags.OptionExerciseFrequencyPeriod);
            }
            public QuickFix.Fields.OptionExerciseFrequencyUnit OptionExerciseFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.OptionExerciseFrequencyUnit val = new QuickFix.Fields.OptionExerciseFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseFrequencyUnit val)
            {
                this.OptionExerciseFrequencyUnit = val;
            }

            public QuickFix.Fields.OptionExerciseFrequencyUnit Get(QuickFix.Fields.OptionExerciseFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseFrequencyUnit val)
            {
                return IsSetOptionExerciseFrequencyUnit();
            }

            public bool IsSetOptionExerciseFrequencyUnit()
            {
                return IsSetField(Tags.OptionExerciseFrequencyUnit);
            }
            public QuickFix.Fields.OptionExerciseStartDateUnadjusted OptionExerciseStartDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateUnadjusted val = new QuickFix.Fields.OptionExerciseStartDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateUnadjusted val)
            {
                this.OptionExerciseStartDateUnadjusted = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateUnadjusted Get(QuickFix.Fields.OptionExerciseStartDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateUnadjusted val)
            {
                return IsSetOptionExerciseStartDateUnadjusted();
            }

            public bool IsSetOptionExerciseStartDateUnadjusted()
            {
                return IsSetField(Tags.OptionExerciseStartDateUnadjusted);
            }
            public QuickFix.Fields.OptionExerciseStartDateRelativeTo OptionExerciseStartDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateRelativeTo val = new QuickFix.Fields.OptionExerciseStartDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateRelativeTo val)
            {
                this.OptionExerciseStartDateRelativeTo = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateRelativeTo Get(QuickFix.Fields.OptionExerciseStartDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateRelativeTo val)
            {
                return IsSetOptionExerciseStartDateRelativeTo();
            }

            public bool IsSetOptionExerciseStartDateRelativeTo()
            {
                return IsSetField(Tags.OptionExerciseStartDateRelativeTo);
            }
            public QuickFix.Fields.OptionExerciseStartDateOffsetPeriod OptionExerciseStartDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.OptionExerciseStartDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateOffsetPeriod val)
            {
                this.OptionExerciseStartDateOffsetPeriod = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.OptionExerciseStartDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateOffsetPeriod val)
            {
                return IsSetOptionExerciseStartDateOffsetPeriod();
            }

            public bool IsSetOptionExerciseStartDateOffsetPeriod()
            {
                return IsSetField(Tags.OptionExerciseStartDateOffsetPeriod);
            }
            public QuickFix.Fields.OptionExerciseStartDateOffsetUnit OptionExerciseStartDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.OptionExerciseStartDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateOffsetUnit val)
            {
                this.OptionExerciseStartDateOffsetUnit = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.OptionExerciseStartDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateOffsetUnit val)
            {
                return IsSetOptionExerciseStartDateOffsetUnit();
            }

            public bool IsSetOptionExerciseStartDateOffsetUnit()
            {
                return IsSetField(Tags.OptionExerciseStartDateOffsetUnit);
            }
            public QuickFix.Fields.OptionExerciseStartDateOffsetDayType OptionExerciseStartDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.OptionExerciseStartDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateOffsetDayType val)
            {
                this.OptionExerciseStartDateOffsetDayType = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.OptionExerciseStartDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateOffsetDayType val)
            {
                return IsSetOptionExerciseStartDateOffsetDayType();
            }

            public bool IsSetOptionExerciseStartDateOffsetDayType()
            {
                return IsSetField(Tags.OptionExerciseStartDateOffsetDayType);
            }
            public QuickFix.Fields.OptionExerciseStartDateAdjusted OptionExerciseStartDateAdjusted
            {
                get
                {
                    QuickFix.Fields.OptionExerciseStartDateAdjusted val = new QuickFix.Fields.OptionExerciseStartDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseStartDateAdjusted val)
            {
                this.OptionExerciseStartDateAdjusted = val;
            }

            public QuickFix.Fields.OptionExerciseStartDateAdjusted Get(QuickFix.Fields.OptionExerciseStartDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseStartDateAdjusted val)
            {
                return IsSetOptionExerciseStartDateAdjusted();
            }

            public bool IsSetOptionExerciseStartDateAdjusted()
            {
                return IsSetField(Tags.OptionExerciseStartDateAdjusted);
            }
            public QuickFix.Fields.OptionExerciseSkip OptionExerciseSkip
            {
                get
                {
                    QuickFix.Fields.OptionExerciseSkip val = new QuickFix.Fields.OptionExerciseSkip();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseSkip val)
            {
                this.OptionExerciseSkip = val;
            }

            public QuickFix.Fields.OptionExerciseSkip Get(QuickFix.Fields.OptionExerciseSkip val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseSkip val)
            {
                return IsSetOptionExerciseSkip();
            }

            public bool IsSetOptionExerciseSkip()
            {
                return IsSetField(Tags.OptionExerciseSkip);
            }
            public QuickFix.Fields.OptionExerciseNominationDeadline OptionExerciseNominationDeadline
            {
                get
                {
                    QuickFix.Fields.OptionExerciseNominationDeadline val = new QuickFix.Fields.OptionExerciseNominationDeadline();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseNominationDeadline val)
            {
                this.OptionExerciseNominationDeadline = val;
            }

            public QuickFix.Fields.OptionExerciseNominationDeadline Get(QuickFix.Fields.OptionExerciseNominationDeadline val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseNominationDeadline val)
            {
                return IsSetOptionExerciseNominationDeadline();
            }

            public bool IsSetOptionExerciseNominationDeadline()
            {
                return IsSetField(Tags.OptionExerciseNominationDeadline);
            }
            public QuickFix.Fields.OptionExerciseFirstDateUnadjusted OptionExerciseFirstDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.OptionExerciseFirstDateUnadjusted val = new QuickFix.Fields.OptionExerciseFirstDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseFirstDateUnadjusted val)
            {
                this.OptionExerciseFirstDateUnadjusted = val;
            }

            public QuickFix.Fields.OptionExerciseFirstDateUnadjusted Get(QuickFix.Fields.OptionExerciseFirstDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseFirstDateUnadjusted val)
            {
                return IsSetOptionExerciseFirstDateUnadjusted();
            }

            public bool IsSetOptionExerciseFirstDateUnadjusted()
            {
                return IsSetField(Tags.OptionExerciseFirstDateUnadjusted);
            }
            public QuickFix.Fields.OptionExerciseLastDateUnadjusted OptionExerciseLastDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.OptionExerciseLastDateUnadjusted val = new QuickFix.Fields.OptionExerciseLastDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseLastDateUnadjusted val)
            {
                this.OptionExerciseLastDateUnadjusted = val;
            }

            public QuickFix.Fields.OptionExerciseLastDateUnadjusted Get(QuickFix.Fields.OptionExerciseLastDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseLastDateUnadjusted val)
            {
                return IsSetOptionExerciseLastDateUnadjusted();
            }

            public bool IsSetOptionExerciseLastDateUnadjusted()
            {
                return IsSetField(Tags.OptionExerciseLastDateUnadjusted);
            }
            public QuickFix.Fields.OptionExerciseEarliestTime OptionExerciseEarliestTime
            {
                get
                {
                    QuickFix.Fields.OptionExerciseEarliestTime val = new QuickFix.Fields.OptionExerciseEarliestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseEarliestTime val)
            {
                this.OptionExerciseEarliestTime = val;
            }

            public QuickFix.Fields.OptionExerciseEarliestTime Get(QuickFix.Fields.OptionExerciseEarliestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseEarliestTime val)
            {
                return IsSetOptionExerciseEarliestTime();
            }

            public bool IsSetOptionExerciseEarliestTime()
            {
                return IsSetField(Tags.OptionExerciseEarliestTime);
            }
            public QuickFix.Fields.OptionExerciseLatestTime OptionExerciseLatestTime
            {
                get
                {
                    QuickFix.Fields.OptionExerciseLatestTime val = new QuickFix.Fields.OptionExerciseLatestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseLatestTime val)
            {
                this.OptionExerciseLatestTime = val;
            }

            public QuickFix.Fields.OptionExerciseLatestTime Get(QuickFix.Fields.OptionExerciseLatestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseLatestTime val)
            {
                return IsSetOptionExerciseLatestTime();
            }

            public bool IsSetOptionExerciseLatestTime()
            {
                return IsSetField(Tags.OptionExerciseLatestTime);
            }
            public QuickFix.Fields.OptionExerciseTimeBusinessCenter OptionExerciseTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.OptionExerciseTimeBusinessCenter val = new QuickFix.Fields.OptionExerciseTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseTimeBusinessCenter val)
            {
                this.OptionExerciseTimeBusinessCenter = val;
            }

            public QuickFix.Fields.OptionExerciseTimeBusinessCenter Get(QuickFix.Fields.OptionExerciseTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseTimeBusinessCenter val)
            {
                return IsSetOptionExerciseTimeBusinessCenter();
            }

            public bool IsSetOptionExerciseTimeBusinessCenter()
            {
                return IsSetField(Tags.OptionExerciseTimeBusinessCenter);
            }
            public QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention OptionExerciseExpirationDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention val = new QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention val)
            {
                this.OptionExerciseExpirationDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention Get(QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateBusinessDayConvention val)
            {
                return IsSetOptionExerciseExpirationDateBusinessDayConvention();
            }

            public bool IsSetOptionExerciseExpirationDateBusinessDayConvention()
            {
                return IsSetField(Tags.OptionExerciseExpirationDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters NoOptionExerciseExpirationDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters val = new QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters val)
            {
                this.NoOptionExerciseExpirationDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters Get(QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoOptionExerciseExpirationDateBusinessCenters val)
            {
                return IsSetNoOptionExerciseExpirationDateBusinessCenters();
            }

            public bool IsSetNoOptionExerciseExpirationDateBusinessCenters()
            {
                return IsSetField(Tags.NoOptionExerciseExpirationDateBusinessCenters);
            }
            public QuickFix.Fields.NoOptionExerciseExpirationDates NoOptionExerciseExpirationDates
            {
                get
                {
                    QuickFix.Fields.NoOptionExerciseExpirationDates val = new QuickFix.Fields.NoOptionExerciseExpirationDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoOptionExerciseExpirationDates val)
            {
                this.NoOptionExerciseExpirationDates = val;
            }

            public QuickFix.Fields.NoOptionExerciseExpirationDates Get(QuickFix.Fields.NoOptionExerciseExpirationDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoOptionExerciseExpirationDates val)
            {
                return IsSetNoOptionExerciseExpirationDates();
            }

            public bool IsSetNoOptionExerciseExpirationDates()
            {
                return IsSetField(Tags.NoOptionExerciseExpirationDates);
            }
            public QuickFix.Fields.OptionExerciseExpirationDateRelativeTo OptionExerciseExpirationDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationDateRelativeTo val = new QuickFix.Fields.OptionExerciseExpirationDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationDateRelativeTo val)
            {
                this.OptionExerciseExpirationDateRelativeTo = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationDateRelativeTo Get(QuickFix.Fields.OptionExerciseExpirationDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateRelativeTo val)
            {
                return IsSetOptionExerciseExpirationDateRelativeTo();
            }

            public bool IsSetOptionExerciseExpirationDateRelativeTo()
            {
                return IsSetField(Tags.OptionExerciseExpirationDateRelativeTo);
            }
            public QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod OptionExerciseExpirationDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod val = new QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod val)
            {
                this.OptionExerciseExpirationDateOffsetPeriod = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod Get(QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateOffsetPeriod val)
            {
                return IsSetOptionExerciseExpirationDateOffsetPeriod();
            }

            public bool IsSetOptionExerciseExpirationDateOffsetPeriod()
            {
                return IsSetField(Tags.OptionExerciseExpirationDateOffsetPeriod);
            }
            public QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit OptionExerciseExpirationDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit val = new QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit val)
            {
                this.OptionExerciseExpirationDateOffsetUnit = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit Get(QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateOffsetUnit val)
            {
                return IsSetOptionExerciseExpirationDateOffsetUnit();
            }

            public bool IsSetOptionExerciseExpirationDateOffsetUnit()
            {
                return IsSetField(Tags.OptionExerciseExpirationDateOffsetUnit);
            }
            public QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod OptionExerciseExpirationFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod val = new QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod val)
            {
                this.OptionExerciseExpirationFrequencyPeriod = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod Get(QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationFrequencyPeriod val)
            {
                return IsSetOptionExerciseExpirationFrequencyPeriod();
            }

            public bool IsSetOptionExerciseExpirationFrequencyPeriod()
            {
                return IsSetField(Tags.OptionExerciseExpirationFrequencyPeriod);
            }
            public QuickFix.Fields.OptionExerciseExpirationFrequencyUnit OptionExerciseExpirationFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationFrequencyUnit val = new QuickFix.Fields.OptionExerciseExpirationFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationFrequencyUnit val)
            {
                this.OptionExerciseExpirationFrequencyUnit = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationFrequencyUnit Get(QuickFix.Fields.OptionExerciseExpirationFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationFrequencyUnit val)
            {
                return IsSetOptionExerciseExpirationFrequencyUnit();
            }

            public bool IsSetOptionExerciseExpirationFrequencyUnit()
            {
                return IsSetField(Tags.OptionExerciseExpirationFrequencyUnit);
            }
            public QuickFix.Fields.OptionExerciseExpirationRollConvention OptionExerciseExpirationRollConvention
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationRollConvention val = new QuickFix.Fields.OptionExerciseExpirationRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationRollConvention val)
            {
                this.OptionExerciseExpirationRollConvention = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationRollConvention Get(QuickFix.Fields.OptionExerciseExpirationRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationRollConvention val)
            {
                return IsSetOptionExerciseExpirationRollConvention();
            }

            public bool IsSetOptionExerciseExpirationRollConvention()
            {
                return IsSetField(Tags.OptionExerciseExpirationRollConvention);
            }
            public QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType OptionExerciseExpirationDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType val = new QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType val)
            {
                this.OptionExerciseExpirationDateOffsetDayType = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType Get(QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateOffsetDayType val)
            {
                return IsSetOptionExerciseExpirationDateOffsetDayType();
            }

            public bool IsSetOptionExerciseExpirationDateOffsetDayType()
            {
                return IsSetField(Tags.OptionExerciseExpirationDateOffsetDayType);
            }
            public QuickFix.Fields.OptionExerciseExpirationTime OptionExerciseExpirationTime
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationTime val = new QuickFix.Fields.OptionExerciseExpirationTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationTime val)
            {
                this.OptionExerciseExpirationTime = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationTime Get(QuickFix.Fields.OptionExerciseExpirationTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationTime val)
            {
                return IsSetOptionExerciseExpirationTime();
            }

            public bool IsSetOptionExerciseExpirationTime()
            {
                return IsSetField(Tags.OptionExerciseExpirationTime);
            }
            public QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter OptionExerciseExpirationTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter val = new QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter val)
            {
                this.OptionExerciseExpirationTimeBusinessCenter = val;
            }

            public QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter Get(QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OptionExerciseExpirationTimeBusinessCenter val)
            {
                return IsSetOptionExerciseExpirationTimeBusinessCenter();
            }

            public bool IsSetOptionExerciseExpirationTimeBusinessCenter()
            {
                return IsSetField(Tags.OptionExerciseExpirationTimeBusinessCenter);
            }
            public QuickFix.Fields.SettlMethodElectingPartySide SettlMethodElectingPartySide
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectingPartySide val = new QuickFix.Fields.SettlMethodElectingPartySide();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectingPartySide val)
            {
                this.SettlMethodElectingPartySide = val;
            }

            public QuickFix.Fields.SettlMethodElectingPartySide Get(QuickFix.Fields.SettlMethodElectingPartySide val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectingPartySide val)
            {
                return IsSetSettlMethodElectingPartySide();
            }

            public bool IsSetSettlMethodElectingPartySide()
            {
                return IsSetField(Tags.SettlMethodElectingPartySide);
            }
            public QuickFix.Fields.SettlMethodElectionDateUnadjusted SettlMethodElectionDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateUnadjusted val = new QuickFix.Fields.SettlMethodElectionDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateUnadjusted val)
            {
                this.SettlMethodElectionDateUnadjusted = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateUnadjusted Get(QuickFix.Fields.SettlMethodElectionDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateUnadjusted val)
            {
                return IsSetSettlMethodElectionDateUnadjusted();
            }

            public bool IsSetSettlMethodElectionDateUnadjusted()
            {
                return IsSetField(Tags.SettlMethodElectionDateUnadjusted);
            }
            public QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention SettlMethodElectionDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention val = new QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention val)
            {
                this.SettlMethodElectionDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention Get(QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateBusinessDayConvention val)
            {
                return IsSetSettlMethodElectionDateBusinessDayConvention();
            }

            public bool IsSetSettlMethodElectionDateBusinessDayConvention()
            {
                return IsSetField(Tags.SettlMethodElectionDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters NoSettlMethodElectionDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters val = new QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters val)
            {
                this.NoSettlMethodElectionDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters Get(QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoSettlMethodElectionDateBusinessCenters val)
            {
                return IsSetNoSettlMethodElectionDateBusinessCenters();
            }

            public bool IsSetNoSettlMethodElectionDateBusinessCenters()
            {
                return IsSetField(Tags.NoSettlMethodElectionDateBusinessCenters);
            }
            public QuickFix.Fields.SettlMethodElectionDateRelativeTo SettlMethodElectionDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateRelativeTo val = new QuickFix.Fields.SettlMethodElectionDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateRelativeTo val)
            {
                this.SettlMethodElectionDateRelativeTo = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateRelativeTo Get(QuickFix.Fields.SettlMethodElectionDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateRelativeTo val)
            {
                return IsSetSettlMethodElectionDateRelativeTo();
            }

            public bool IsSetSettlMethodElectionDateRelativeTo()
            {
                return IsSetField(Tags.SettlMethodElectionDateRelativeTo);
            }
            public QuickFix.Fields.SettlMethodElectionDateOffsetPeriod SettlMethodElectionDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateOffsetPeriod val = new QuickFix.Fields.SettlMethodElectionDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateOffsetPeriod val)
            {
                this.SettlMethodElectionDateOffsetPeriod = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateOffsetPeriod Get(QuickFix.Fields.SettlMethodElectionDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateOffsetPeriod val)
            {
                return IsSetSettlMethodElectionDateOffsetPeriod();
            }

            public bool IsSetSettlMethodElectionDateOffsetPeriod()
            {
                return IsSetField(Tags.SettlMethodElectionDateOffsetPeriod);
            }
            public QuickFix.Fields.SettlMethodElectionDateOffsetUnit SettlMethodElectionDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateOffsetUnit val = new QuickFix.Fields.SettlMethodElectionDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateOffsetUnit val)
            {
                this.SettlMethodElectionDateOffsetUnit = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateOffsetUnit Get(QuickFix.Fields.SettlMethodElectionDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateOffsetUnit val)
            {
                return IsSetSettlMethodElectionDateOffsetUnit();
            }

            public bool IsSetSettlMethodElectionDateOffsetUnit()
            {
                return IsSetField(Tags.SettlMethodElectionDateOffsetUnit);
            }
            public QuickFix.Fields.SettlMethodElectionDateOffsetDayType SettlMethodElectionDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateOffsetDayType val = new QuickFix.Fields.SettlMethodElectionDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateOffsetDayType val)
            {
                this.SettlMethodElectionDateOffsetDayType = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateOffsetDayType Get(QuickFix.Fields.SettlMethodElectionDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateOffsetDayType val)
            {
                return IsSetSettlMethodElectionDateOffsetDayType();
            }

            public bool IsSetSettlMethodElectionDateOffsetDayType()
            {
                return IsSetField(Tags.SettlMethodElectionDateOffsetDayType);
            }
            public QuickFix.Fields.SettlMethodElectionDateAdjusted SettlMethodElectionDateAdjusted
            {
                get
                {
                    QuickFix.Fields.SettlMethodElectionDateAdjusted val = new QuickFix.Fields.SettlMethodElectionDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlMethodElectionDateAdjusted val)
            {
                this.SettlMethodElectionDateAdjusted = val;
            }

            public QuickFix.Fields.SettlMethodElectionDateAdjusted Get(QuickFix.Fields.SettlMethodElectionDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlMethodElectionDateAdjusted val)
            {
                return IsSetSettlMethodElectionDateAdjusted();
            }

            public bool IsSetSettlMethodElectionDateAdjusted()
            {
                return IsSetField(Tags.SettlMethodElectionDateAdjusted);
            }
            public QuickFix.Fields.MakeWholeDate MakeWholeDate
            {
                get
                {
                    QuickFix.Fields.MakeWholeDate val = new QuickFix.Fields.MakeWholeDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeDate val)
            {
                this.MakeWholeDate = val;
            }

            public QuickFix.Fields.MakeWholeDate Get(QuickFix.Fields.MakeWholeDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeDate val)
            {
                return IsSetMakeWholeDate();
            }

            public bool IsSetMakeWholeDate()
            {
                return IsSetField(Tags.MakeWholeDate);
            }
            public QuickFix.Fields.MakeWholeAmount MakeWholeAmount
            {
                get
                {
                    QuickFix.Fields.MakeWholeAmount val = new QuickFix.Fields.MakeWholeAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeAmount val)
            {
                this.MakeWholeAmount = val;
            }

            public QuickFix.Fields.MakeWholeAmount Get(QuickFix.Fields.MakeWholeAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeAmount val)
            {
                return IsSetMakeWholeAmount();
            }

            public bool IsSetMakeWholeAmount()
            {
                return IsSetField(Tags.MakeWholeAmount);
            }
            public QuickFix.Fields.MakeWholeBenchmarkCurveName MakeWholeBenchmarkCurveName
            {
                get
                {
                    QuickFix.Fields.MakeWholeBenchmarkCurveName val = new QuickFix.Fields.MakeWholeBenchmarkCurveName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeBenchmarkCurveName val)
            {
                this.MakeWholeBenchmarkCurveName = val;
            }

            public QuickFix.Fields.MakeWholeBenchmarkCurveName Get(QuickFix.Fields.MakeWholeBenchmarkCurveName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeBenchmarkCurveName val)
            {
                return IsSetMakeWholeBenchmarkCurveName();
            }

            public bool IsSetMakeWholeBenchmarkCurveName()
            {
                return IsSetField(Tags.MakeWholeBenchmarkCurveName);
            }
            public QuickFix.Fields.MakeWholeBenchmarkCurvePoint MakeWholeBenchmarkCurvePoint
            {
                get
                {
                    QuickFix.Fields.MakeWholeBenchmarkCurvePoint val = new QuickFix.Fields.MakeWholeBenchmarkCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeBenchmarkCurvePoint val)
            {
                this.MakeWholeBenchmarkCurvePoint = val;
            }

            public QuickFix.Fields.MakeWholeBenchmarkCurvePoint Get(QuickFix.Fields.MakeWholeBenchmarkCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeBenchmarkCurvePoint val)
            {
                return IsSetMakeWholeBenchmarkCurvePoint();
            }

            public bool IsSetMakeWholeBenchmarkCurvePoint()
            {
                return IsSetField(Tags.MakeWholeBenchmarkCurvePoint);
            }
            public QuickFix.Fields.MakeWholeRecallSpread MakeWholeRecallSpread
            {
                get
                {
                    QuickFix.Fields.MakeWholeRecallSpread val = new QuickFix.Fields.MakeWholeRecallSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeRecallSpread val)
            {
                this.MakeWholeRecallSpread = val;
            }

            public QuickFix.Fields.MakeWholeRecallSpread Get(QuickFix.Fields.MakeWholeRecallSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeRecallSpread val)
            {
                return IsSetMakeWholeRecallSpread();
            }

            public bool IsSetMakeWholeRecallSpread()
            {
                return IsSetField(Tags.MakeWholeRecallSpread);
            }
            public QuickFix.Fields.MakeWholeBenchmarkQuote MakeWholeBenchmarkQuote
            {
                get
                {
                    QuickFix.Fields.MakeWholeBenchmarkQuote val = new QuickFix.Fields.MakeWholeBenchmarkQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeBenchmarkQuote val)
            {
                this.MakeWholeBenchmarkQuote = val;
            }

            public QuickFix.Fields.MakeWholeBenchmarkQuote Get(QuickFix.Fields.MakeWholeBenchmarkQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeBenchmarkQuote val)
            {
                return IsSetMakeWholeBenchmarkQuote();
            }

            public bool IsSetMakeWholeBenchmarkQuote()
            {
                return IsSetField(Tags.MakeWholeBenchmarkQuote);
            }
            public QuickFix.Fields.MakeWholeInterpolationMethod MakeWholeInterpolationMethod
            {
                get
                {
                    QuickFix.Fields.MakeWholeInterpolationMethod val = new QuickFix.Fields.MakeWholeInterpolationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.MakeWholeInterpolationMethod val)
            {
                this.MakeWholeInterpolationMethod = val;
            }

            public QuickFix.Fields.MakeWholeInterpolationMethod Get(QuickFix.Fields.MakeWholeInterpolationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.MakeWholeInterpolationMethod val)
            {
                return IsSetMakeWholeInterpolationMethod();
            }

            public bool IsSetMakeWholeInterpolationMethod()
            {
                return IsSetField(Tags.MakeWholeInterpolationMethod);
            }
            public QuickFix.Fields.TradingUnitPeriodMultiplier TradingUnitPeriodMultiplier
            {
                get
                {
                    QuickFix.Fields.TradingUnitPeriodMultiplier val = new QuickFix.Fields.TradingUnitPeriodMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.TradingUnitPeriodMultiplier val)
            {
                this.TradingUnitPeriodMultiplier = val;
            }

            public QuickFix.Fields.TradingUnitPeriodMultiplier Get(QuickFix.Fields.TradingUnitPeriodMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.TradingUnitPeriodMultiplier val)
            {
                return IsSetTradingUnitPeriodMultiplier();
            }

            public bool IsSetTradingUnitPeriodMultiplier()
            {
                return IsSetField(Tags.TradingUnitPeriodMultiplier);
            }
            public QuickFix.Fields.AssetGroup AssetGroup
            {
                get
                {
                    QuickFix.Fields.AssetGroup val = new QuickFix.Fields.AssetGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AssetGroup val)
            {
                this.AssetGroup = val;
            }

            public QuickFix.Fields.AssetGroup Get(QuickFix.Fields.AssetGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AssetGroup val)
            {
                return IsSetAssetGroup();
            }

            public bool IsSetAssetGroup()
            {
                return IsSetField(Tags.AssetGroup);
            }
            public QuickFix.Fields.OrigStrikePrice OrigStrikePrice
            {
                get
                {
                    QuickFix.Fields.OrigStrikePrice val = new QuickFix.Fields.OrigStrikePrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.OrigStrikePrice val)
            {
                this.OrigStrikePrice = val;
            }

            public QuickFix.Fields.OrigStrikePrice Get(QuickFix.Fields.OrigStrikePrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.OrigStrikePrice val)
            {
                return IsSetOrigStrikePrice();
            }

            public bool IsSetOrigStrikePrice()
            {
                return IsSetField(Tags.OrigStrikePrice);
            }
            public QuickFix.Fields.StrikePricePrecision StrikePricePrecision
            {
                get
                {
                    QuickFix.Fields.StrikePricePrecision val = new QuickFix.Fields.StrikePricePrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikePricePrecision val)
            {
                this.StrikePricePrecision = val;
            }

            public QuickFix.Fields.StrikePricePrecision Get(QuickFix.Fields.StrikePricePrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikePricePrecision val)
            {
                return IsSetStrikePricePrecision();
            }

            public bool IsSetStrikePricePrecision()
            {
                return IsSetField(Tags.StrikePricePrecision);
            }
            public QuickFix.Fields.SettlSubMethod SettlSubMethod
            {
                get
                {
                    QuickFix.Fields.SettlSubMethod val = new QuickFix.Fields.SettlSubMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.SettlSubMethod val)
            {
                this.SettlSubMethod = val;
            }

            public QuickFix.Fields.SettlSubMethod Get(QuickFix.Fields.SettlSubMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.SettlSubMethod val)
            {
                return IsSetSettlSubMethod();
            }

            public bool IsSetSettlSubMethod()
            {
                return IsSetField(Tags.SettlSubMethod);
            }
            public QuickFix.Fields.BlockTradeEligibilityIndicator BlockTradeEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.BlockTradeEligibilityIndicator val = new QuickFix.Fields.BlockTradeEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.BlockTradeEligibilityIndicator val)
            {
                this.BlockTradeEligibilityIndicator = val;
            }

            public QuickFix.Fields.BlockTradeEligibilityIndicator Get(QuickFix.Fields.BlockTradeEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.BlockTradeEligibilityIndicator val)
            {
                return IsSetBlockTradeEligibilityIndicator();
            }

            public bool IsSetBlockTradeEligibilityIndicator()
            {
                return IsSetField(Tags.BlockTradeEligibilityIndicator);
            }
            public QuickFix.Fields.LowExercisePriceOptionIndicator LowExercisePriceOptionIndicator
            {
                get
                {
                    QuickFix.Fields.LowExercisePriceOptionIndicator val = new QuickFix.Fields.LowExercisePriceOptionIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.LowExercisePriceOptionIndicator val)
            {
                this.LowExercisePriceOptionIndicator = val;
            }

            public QuickFix.Fields.LowExercisePriceOptionIndicator Get(QuickFix.Fields.LowExercisePriceOptionIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.LowExercisePriceOptionIndicator val)
            {
                return IsSetLowExercisePriceOptionIndicator();
            }

            public bool IsSetLowExercisePriceOptionIndicator()
            {
                return IsSetField(Tags.LowExercisePriceOptionIndicator);
            }
            public QuickFix.Fields.InstrumentPricePrecision InstrumentPricePrecision
            {
                get
                {
                    QuickFix.Fields.InstrumentPricePrecision val = new QuickFix.Fields.InstrumentPricePrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InstrumentPricePrecision val)
            {
                this.InstrumentPricePrecision = val;
            }

            public QuickFix.Fields.InstrumentPricePrecision Get(QuickFix.Fields.InstrumentPricePrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InstrumentPricePrecision val)
            {
                return IsSetInstrumentPricePrecision();
            }

            public bool IsSetInstrumentPricePrecision()
            {
                return IsSetField(Tags.InstrumentPricePrecision);
            }
            public QuickFix.Fields.StrikeIndexCurvePoint StrikeIndexCurvePoint
            {
                get
                {
                    QuickFix.Fields.StrikeIndexCurvePoint val = new QuickFix.Fields.StrikeIndexCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeIndexCurvePoint val)
            {
                this.StrikeIndexCurvePoint = val;
            }

            public QuickFix.Fields.StrikeIndexCurvePoint Get(QuickFix.Fields.StrikeIndexCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeIndexCurvePoint val)
            {
                return IsSetStrikeIndexCurvePoint();
            }

            public bool IsSetStrikeIndexCurvePoint()
            {
                return IsSetField(Tags.StrikeIndexCurvePoint);
            }
            public QuickFix.Fields.StrikeIndexQuote StrikeIndexQuote
            {
                get
                {
                    QuickFix.Fields.StrikeIndexQuote val = new QuickFix.Fields.StrikeIndexQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.StrikeIndexQuote val)
            {
                this.StrikeIndexQuote = val;
            }

            public QuickFix.Fields.StrikeIndexQuote Get(QuickFix.Fields.StrikeIndexQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.StrikeIndexQuote val)
            {
                return IsSetStrikeIndexQuote();
            }

            public bool IsSetStrikeIndexQuote()
            {
                return IsSetField(Tags.StrikeIndexQuote);
            }
            public QuickFix.Fields.NoExtraordinaryEvents NoExtraordinaryEvents
            {
                get
                {
                    QuickFix.Fields.NoExtraordinaryEvents val = new QuickFix.Fields.NoExtraordinaryEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoExtraordinaryEvents val)
            {
                this.NoExtraordinaryEvents = val;
            }

            public QuickFix.Fields.NoExtraordinaryEvents Get(QuickFix.Fields.NoExtraordinaryEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoExtraordinaryEvents val)
            {
                return IsSetNoExtraordinaryEvents();
            }

            public bool IsSetNoExtraordinaryEvents()
            {
                return IsSetField(Tags.NoExtraordinaryEvents);
            }
            public QuickFix.Fields.ExtraordinaryEventAdjustmentMethod ExtraordinaryEventAdjustmentMethod
            {
                get
                {
                    QuickFix.Fields.ExtraordinaryEventAdjustmentMethod val = new QuickFix.Fields.ExtraordinaryEventAdjustmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExtraordinaryEventAdjustmentMethod val)
            {
                this.ExtraordinaryEventAdjustmentMethod = val;
            }

            public QuickFix.Fields.ExtraordinaryEventAdjustmentMethod Get(QuickFix.Fields.ExtraordinaryEventAdjustmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExtraordinaryEventAdjustmentMethod val)
            {
                return IsSetExtraordinaryEventAdjustmentMethod();
            }

            public bool IsSetExtraordinaryEventAdjustmentMethod()
            {
                return IsSetField(Tags.ExtraordinaryEventAdjustmentMethod);
            }
            public QuickFix.Fields.ExchangeLookAlike ExchangeLookAlike
            {
                get
                {
                    QuickFix.Fields.ExchangeLookAlike val = new QuickFix.Fields.ExchangeLookAlike();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ExchangeLookAlike val)
            {
                this.ExchangeLookAlike = val;
            }

            public QuickFix.Fields.ExchangeLookAlike Get(QuickFix.Fields.ExchangeLookAlike val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ExchangeLookAlike val)
            {
                return IsSetExchangeLookAlike();
            }

            public bool IsSetExchangeLookAlike()
            {
                return IsSetField(Tags.ExchangeLookAlike);
            }
            public QuickFix.Fields.InTheMoneyCondition InTheMoneyCondition
            {
                get
                {
                    QuickFix.Fields.InTheMoneyCondition val = new QuickFix.Fields.InTheMoneyCondition();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.InTheMoneyCondition val)
            {
                this.InTheMoneyCondition = val;
            }

            public QuickFix.Fields.InTheMoneyCondition Get(QuickFix.Fields.InTheMoneyCondition val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.InTheMoneyCondition val)
            {
                return IsSetInTheMoneyCondition();
            }

            public bool IsSetInTheMoneyCondition()
            {
                return IsSetField(Tags.InTheMoneyCondition);
            }
            public QuickFix.Fields.ContraryInstructionEligibilityIndicator ContraryInstructionEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.ContraryInstructionEligibilityIndicator val = new QuickFix.Fields.ContraryInstructionEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ContraryInstructionEligibilityIndicator val)
            {
                this.ContraryInstructionEligibilityIndicator = val;
            }

            public QuickFix.Fields.ContraryInstructionEligibilityIndicator Get(QuickFix.Fields.ContraryInstructionEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ContraryInstructionEligibilityIndicator val)
            {
                return IsSetContraryInstructionEligibilityIndicator();
            }

            public bool IsSetContraryInstructionEligibilityIndicator()
            {
                return IsSetField(Tags.ContraryInstructionEligibilityIndicator);
            }
            public QuickFix.Fields.FinancialInstrumentFullName FinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.FinancialInstrumentFullName val = new QuickFix.Fields.FinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FinancialInstrumentFullName val)
            {
                this.FinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.FinancialInstrumentFullName Get(QuickFix.Fields.FinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FinancialInstrumentFullName val)
            {
                return IsSetFinancialInstrumentFullName();
            }

            public bool IsSetFinancialInstrumentFullName()
            {
                return IsSetField(Tags.FinancialInstrumentFullName);
            }
            public QuickFix.Fields.EncodedFinancialInstrumentFullNameLen EncodedFinancialInstrumentFullNameLen
            {
                get
                {
                    QuickFix.Fields.EncodedFinancialInstrumentFullNameLen val = new QuickFix.Fields.EncodedFinancialInstrumentFullNameLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedFinancialInstrumentFullNameLen val)
            {
                this.EncodedFinancialInstrumentFullNameLen = val;
            }

            public QuickFix.Fields.EncodedFinancialInstrumentFullNameLen Get(QuickFix.Fields.EncodedFinancialInstrumentFullNameLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedFinancialInstrumentFullNameLen val)
            {
                return IsSetEncodedFinancialInstrumentFullNameLen();
            }

            public bool IsSetEncodedFinancialInstrumentFullNameLen()
            {
                return IsSetField(Tags.EncodedFinancialInstrumentFullNameLen);
            }
            public QuickFix.Fields.EncodedFinancialInstrumentFullName EncodedFinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.EncodedFinancialInstrumentFullName val = new QuickFix.Fields.EncodedFinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedFinancialInstrumentFullName val)
            {
                this.EncodedFinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.EncodedFinancialInstrumentFullName Get(QuickFix.Fields.EncodedFinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedFinancialInstrumentFullName val)
            {
                return IsSetEncodedFinancialInstrumentFullName();
            }

            public bool IsSetEncodedFinancialInstrumentFullName()
            {
                return IsSetField(Tags.EncodedFinancialInstrumentFullName);
            }
            public QuickFix.Fields.AssetSubType AssetSubType
            {
                get
                {
                    QuickFix.Fields.AssetSubType val = new QuickFix.Fields.AssetSubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.AssetSubType val)
            {
                this.AssetSubType = val;
            }

            public QuickFix.Fields.AssetSubType Get(QuickFix.Fields.AssetSubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.AssetSubType val)
            {
                return IsSetAssetSubType();
            }

            public bool IsSetAssetSubType()
            {
                return IsSetField(Tags.AssetSubType);
            }
            public QuickFix.Fields.FinancialInstrumentShortName FinancialInstrumentShortName
            {
                get
                {
                    QuickFix.Fields.FinancialInstrumentShortName val = new QuickFix.Fields.FinancialInstrumentShortName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.FinancialInstrumentShortName val)
            {
                this.FinancialInstrumentShortName = val;
            }

            public QuickFix.Fields.FinancialInstrumentShortName Get(QuickFix.Fields.FinancialInstrumentShortName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.FinancialInstrumentShortName val)
            {
                return IsSetFinancialInstrumentShortName();
            }

            public bool IsSetFinancialInstrumentShortName()
            {
                return IsSetField(Tags.FinancialInstrumentShortName);
            }
            public QuickFix.Fields.ReturnTrigger ReturnTrigger
            {
                get
                {
                    QuickFix.Fields.ReturnTrigger val = new QuickFix.Fields.ReturnTrigger();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.ReturnTrigger val)
            {
                this.ReturnTrigger = val;
            }

            public QuickFix.Fields.ReturnTrigger Get(QuickFix.Fields.ReturnTrigger val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.ReturnTrigger val)
            {
                return IsSetReturnTrigger();
            }

            public bool IsSetReturnTrigger()
            {
                return IsSetField(Tags.ReturnTrigger);
            }
            public QuickFix.Fields.DeliveryRouteOrCharter DeliveryRouteOrCharter
            {
                get
                {
                    QuickFix.Fields.DeliveryRouteOrCharter val = new QuickFix.Fields.DeliveryRouteOrCharter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.DeliveryRouteOrCharter val)
            {
                this.DeliveryRouteOrCharter = val;
            }

            public QuickFix.Fields.DeliveryRouteOrCharter Get(QuickFix.Fields.DeliveryRouteOrCharter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.DeliveryRouteOrCharter val)
            {
                return IsSetDeliveryRouteOrCharter();
            }

            public bool IsSetDeliveryRouteOrCharter()
            {
                return IsSetField(Tags.DeliveryRouteOrCharter);
            }
            public QuickFix.Fields.CouponOtherDayCount CouponOtherDayCount
            {
                get
                {
                    QuickFix.Fields.CouponOtherDayCount val = new QuickFix.Fields.CouponOtherDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.CouponOtherDayCount val)
            {
                this.CouponOtherDayCount = val;
            }

            public QuickFix.Fields.CouponOtherDayCount Get(QuickFix.Fields.CouponOtherDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.CouponOtherDayCount val)
            {
                return IsSetCouponOtherDayCount();
            }

            public bool IsSetCouponOtherDayCount()
            {
                return IsSetField(Tags.CouponOtherDayCount);
            }
            public QuickFix.Fields.UPICode UPICode
            {
                get
                {
                    QuickFix.Fields.UPICode val = new QuickFix.Fields.UPICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UPICode val)
            {
                this.UPICode = val;
            }

            public QuickFix.Fields.UPICode Get(QuickFix.Fields.UPICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UPICode val)
            {
                return IsSetUPICode();
            }

            public bool IsSetUPICode()
            {
                return IsSetField(Tags.UPICode);
            }
            public QuickFix.Fields.UnderlyingSymbol UnderlyingSymbol
            {
                get
                {
                    QuickFix.Fields.UnderlyingSymbol val = new QuickFix.Fields.UnderlyingSymbol();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSymbol val)
            {
                this.UnderlyingSymbol = val;
            }

            public QuickFix.Fields.UnderlyingSymbol Get(QuickFix.Fields.UnderlyingSymbol val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSymbol val)
            {
                return IsSetUnderlyingSymbol();
            }

            public bool IsSetUnderlyingSymbol()
            {
                return IsSetField(Tags.UnderlyingSymbol);
            }
            public QuickFix.Fields.UnderlyingSymbolSfx UnderlyingSymbolSfx
            {
                get
                {
                    QuickFix.Fields.UnderlyingSymbolSfx val = new QuickFix.Fields.UnderlyingSymbolSfx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                this.UnderlyingSymbolSfx = val;
            }

            public QuickFix.Fields.UnderlyingSymbolSfx Get(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSymbolSfx val)
            {
                return IsSetUnderlyingSymbolSfx();
            }

            public bool IsSetUnderlyingSymbolSfx()
            {
                return IsSetField(Tags.UnderlyingSymbolSfx);
            }
            public QuickFix.Fields.UnderlyingSecurityID UnderlyingSecurityID
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityID val = new QuickFix.Fields.UnderlyingSecurityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityID val)
            {
                this.UnderlyingSecurityID = val;
            }

            public QuickFix.Fields.UnderlyingSecurityID Get(QuickFix.Fields.UnderlyingSecurityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityID val)
            {
                return IsSetUnderlyingSecurityID();
            }

            public bool IsSetUnderlyingSecurityID()
            {
                return IsSetField(Tags.UnderlyingSecurityID);
            }
            public QuickFix.Fields.UnderlyingSecurityIDSource UnderlyingSecurityIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityIDSource val = new QuickFix.Fields.UnderlyingSecurityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                this.UnderlyingSecurityIDSource = val;
            }

            public QuickFix.Fields.UnderlyingSecurityIDSource Get(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityIDSource val)
            {
                return IsSetUnderlyingSecurityIDSource();
            }

            public bool IsSetUnderlyingSecurityIDSource()
            {
                return IsSetField(Tags.UnderlyingSecurityIDSource);
            }
            public QuickFix.Fields.NoUnderlyingSecurityAltID NoUnderlyingSecurityAltID
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSecurityAltID val = new QuickFix.Fields.NoUnderlyingSecurityAltID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                this.NoUnderlyingSecurityAltID = val;
            }

            public QuickFix.Fields.NoUnderlyingSecurityAltID Get(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSecurityAltID val)
            {
                return IsSetNoUnderlyingSecurityAltID();
            }

            public bool IsSetNoUnderlyingSecurityAltID()
            {
                return IsSetField(Tags.NoUnderlyingSecurityAltID);
            }
            public QuickFix.Fields.UnderlyingProduct UnderlyingProduct
            {
                get
                {
                    QuickFix.Fields.UnderlyingProduct val = new QuickFix.Fields.UnderlyingProduct();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProduct val)
            {
                this.UnderlyingProduct = val;
            }

            public QuickFix.Fields.UnderlyingProduct Get(QuickFix.Fields.UnderlyingProduct val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProduct val)
            {
                return IsSetUnderlyingProduct();
            }

            public bool IsSetUnderlyingProduct()
            {
                return IsSetField(Tags.UnderlyingProduct);
            }
            public QuickFix.Fields.UnderlyingCFICode UnderlyingCFICode
            {
                get
                {
                    QuickFix.Fields.UnderlyingCFICode val = new QuickFix.Fields.UnderlyingCFICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCFICode val)
            {
                this.UnderlyingCFICode = val;
            }

            public QuickFix.Fields.UnderlyingCFICode Get(QuickFix.Fields.UnderlyingCFICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCFICode val)
            {
                return IsSetUnderlyingCFICode();
            }

            public bool IsSetUnderlyingCFICode()
            {
                return IsSetField(Tags.UnderlyingCFICode);
            }
            public QuickFix.Fields.UnderlyingSecurityType UnderlyingSecurityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityType val = new QuickFix.Fields.UnderlyingSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityType val)
            {
                this.UnderlyingSecurityType = val;
            }

            public QuickFix.Fields.UnderlyingSecurityType Get(QuickFix.Fields.UnderlyingSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityType val)
            {
                return IsSetUnderlyingSecurityType();
            }

            public bool IsSetUnderlyingSecurityType()
            {
                return IsSetField(Tags.UnderlyingSecurityType);
            }
            public QuickFix.Fields.UnderlyingSecuritySubType UnderlyingSecuritySubType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecuritySubType val = new QuickFix.Fields.UnderlyingSecuritySubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                this.UnderlyingSecuritySubType = val;
            }

            public QuickFix.Fields.UnderlyingSecuritySubType Get(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecuritySubType val)
            {
                return IsSetUnderlyingSecuritySubType();
            }

            public bool IsSetUnderlyingSecuritySubType()
            {
                return IsSetField(Tags.UnderlyingSecuritySubType);
            }
            public QuickFix.Fields.UnderlyingMaturityMonthYear UnderlyingMaturityMonthYear
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityMonthYear val = new QuickFix.Fields.UnderlyingMaturityMonthYear();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                this.UnderlyingMaturityMonthYear = val;
            }

            public QuickFix.Fields.UnderlyingMaturityMonthYear Get(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityMonthYear val)
            {
                return IsSetUnderlyingMaturityMonthYear();
            }

            public bool IsSetUnderlyingMaturityMonthYear()
            {
                return IsSetField(Tags.UnderlyingMaturityMonthYear);
            }
            public QuickFix.Fields.UnderlyingMaturityDate UnderlyingMaturityDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityDate val = new QuickFix.Fields.UnderlyingMaturityDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                this.UnderlyingMaturityDate = val;
            }

            public QuickFix.Fields.UnderlyingMaturityDate Get(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityDate val)
            {
                return IsSetUnderlyingMaturityDate();
            }

            public bool IsSetUnderlyingMaturityDate()
            {
                return IsSetField(Tags.UnderlyingMaturityDate);
            }
            public QuickFix.Fields.UnderlyingMaturityTime UnderlyingMaturityTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingMaturityTime val = new QuickFix.Fields.UnderlyingMaturityTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                this.UnderlyingMaturityTime = val;
            }

            public QuickFix.Fields.UnderlyingMaturityTime Get(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMaturityTime val)
            {
                return IsSetUnderlyingMaturityTime();
            }

            public bool IsSetUnderlyingMaturityTime()
            {
                return IsSetField(Tags.UnderlyingMaturityTime);
            }
            public QuickFix.Fields.UnderlyingCouponPaymentDate UnderlyingCouponPaymentDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponPaymentDate val = new QuickFix.Fields.UnderlyingCouponPaymentDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                this.UnderlyingCouponPaymentDate = val;
            }

            public QuickFix.Fields.UnderlyingCouponPaymentDate Get(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponPaymentDate val)
            {
                return IsSetUnderlyingCouponPaymentDate();
            }

            public bool IsSetUnderlyingCouponPaymentDate()
            {
                return IsSetField(Tags.UnderlyingCouponPaymentDate);
            }
            public QuickFix.Fields.UnderlyingIssueDate UnderlyingIssueDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingIssueDate val = new QuickFix.Fields.UnderlyingIssueDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIssueDate val)
            {
                this.UnderlyingIssueDate = val;
            }

            public QuickFix.Fields.UnderlyingIssueDate Get(QuickFix.Fields.UnderlyingIssueDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIssueDate val)
            {
                return IsSetUnderlyingIssueDate();
            }

            public bool IsSetUnderlyingIssueDate()
            {
                return IsSetField(Tags.UnderlyingIssueDate);
            }
            public QuickFix.Fields.UnderlyingRepoCollateralSecurityType UnderlyingRepoCollateralSecurityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepoCollateralSecurityType val = new QuickFix.Fields.UnderlyingRepoCollateralSecurityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                this.UnderlyingRepoCollateralSecurityType = val;
            }

            public QuickFix.Fields.UnderlyingRepoCollateralSecurityType Get(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepoCollateralSecurityType val)
            {
                return IsSetUnderlyingRepoCollateralSecurityType();
            }

            public bool IsSetUnderlyingRepoCollateralSecurityType()
            {
                return IsSetField(Tags.UnderlyingRepoCollateralSecurityType);
            }
            public QuickFix.Fields.UnderlyingRepurchaseTerm UnderlyingRepurchaseTerm
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepurchaseTerm val = new QuickFix.Fields.UnderlyingRepurchaseTerm();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                this.UnderlyingRepurchaseTerm = val;
            }

            public QuickFix.Fields.UnderlyingRepurchaseTerm Get(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepurchaseTerm val)
            {
                return IsSetUnderlyingRepurchaseTerm();
            }

            public bool IsSetUnderlyingRepurchaseTerm()
            {
                return IsSetField(Tags.UnderlyingRepurchaseTerm);
            }
            public QuickFix.Fields.UnderlyingRepurchaseRate UnderlyingRepurchaseRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingRepurchaseRate val = new QuickFix.Fields.UnderlyingRepurchaseRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                this.UnderlyingRepurchaseRate = val;
            }

            public QuickFix.Fields.UnderlyingRepurchaseRate Get(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRepurchaseRate val)
            {
                return IsSetUnderlyingRepurchaseRate();
            }

            public bool IsSetUnderlyingRepurchaseRate()
            {
                return IsSetField(Tags.UnderlyingRepurchaseRate);
            }
            public QuickFix.Fields.UnderlyingFactor UnderlyingFactor
            {
                get
                {
                    QuickFix.Fields.UnderlyingFactor val = new QuickFix.Fields.UnderlyingFactor();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFactor val)
            {
                this.UnderlyingFactor = val;
            }

            public QuickFix.Fields.UnderlyingFactor Get(QuickFix.Fields.UnderlyingFactor val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFactor val)
            {
                return IsSetUnderlyingFactor();
            }

            public bool IsSetUnderlyingFactor()
            {
                return IsSetField(Tags.UnderlyingFactor);
            }
            public QuickFix.Fields.UnderlyingCreditRating UnderlyingCreditRating
            {
                get
                {
                    QuickFix.Fields.UnderlyingCreditRating val = new QuickFix.Fields.UnderlyingCreditRating();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCreditRating val)
            {
                this.UnderlyingCreditRating = val;
            }

            public QuickFix.Fields.UnderlyingCreditRating Get(QuickFix.Fields.UnderlyingCreditRating val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCreditRating val)
            {
                return IsSetUnderlyingCreditRating();
            }

            public bool IsSetUnderlyingCreditRating()
            {
                return IsSetField(Tags.UnderlyingCreditRating);
            }
            public QuickFix.Fields.UnderlyingInstrRegistry UnderlyingInstrRegistry
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrRegistry val = new QuickFix.Fields.UnderlyingInstrRegistry();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                this.UnderlyingInstrRegistry = val;
            }

            public QuickFix.Fields.UnderlyingInstrRegistry Get(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrRegistry val)
            {
                return IsSetUnderlyingInstrRegistry();
            }

            public bool IsSetUnderlyingInstrRegistry()
            {
                return IsSetField(Tags.UnderlyingInstrRegistry);
            }
            public QuickFix.Fields.UnderlyingCountryOfIssue UnderlyingCountryOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCountryOfIssue val = new QuickFix.Fields.UnderlyingCountryOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                this.UnderlyingCountryOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingCountryOfIssue Get(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCountryOfIssue val)
            {
                return IsSetUnderlyingCountryOfIssue();
            }

            public bool IsSetUnderlyingCountryOfIssue()
            {
                return IsSetField(Tags.UnderlyingCountryOfIssue);
            }
            public QuickFix.Fields.UnderlyingStateOrProvinceOfIssue UnderlyingStateOrProvinceOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val = new QuickFix.Fields.UnderlyingStateOrProvinceOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                this.UnderlyingStateOrProvinceOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingStateOrProvinceOfIssue Get(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStateOrProvinceOfIssue val)
            {
                return IsSetUnderlyingStateOrProvinceOfIssue();
            }

            public bool IsSetUnderlyingStateOrProvinceOfIssue()
            {
                return IsSetField(Tags.UnderlyingStateOrProvinceOfIssue);
            }
            public QuickFix.Fields.UnderlyingLocaleOfIssue UnderlyingLocaleOfIssue
            {
                get
                {
                    QuickFix.Fields.UnderlyingLocaleOfIssue val = new QuickFix.Fields.UnderlyingLocaleOfIssue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                this.UnderlyingLocaleOfIssue = val;
            }

            public QuickFix.Fields.UnderlyingLocaleOfIssue Get(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLocaleOfIssue val)
            {
                return IsSetUnderlyingLocaleOfIssue();
            }

            public bool IsSetUnderlyingLocaleOfIssue()
            {
                return IsSetField(Tags.UnderlyingLocaleOfIssue);
            }
            public QuickFix.Fields.UnderlyingRedemptionDate UnderlyingRedemptionDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingRedemptionDate val = new QuickFix.Fields.UnderlyingRedemptionDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                this.UnderlyingRedemptionDate = val;
            }

            public QuickFix.Fields.UnderlyingRedemptionDate Get(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRedemptionDate val)
            {
                return IsSetUnderlyingRedemptionDate();
            }

            public bool IsSetUnderlyingRedemptionDate()
            {
                return IsSetField(Tags.UnderlyingRedemptionDate);
            }
            public QuickFix.Fields.UnderlyingStrikePrice UnderlyingStrikePrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePrice val = new QuickFix.Fields.UnderlyingStrikePrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                this.UnderlyingStrikePrice = val;
            }

            public QuickFix.Fields.UnderlyingStrikePrice Get(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePrice val)
            {
                return IsSetUnderlyingStrikePrice();
            }

            public bool IsSetUnderlyingStrikePrice()
            {
                return IsSetField(Tags.UnderlyingStrikePrice);
            }
            public QuickFix.Fields.UnderlyingStrikeCurrency UnderlyingStrikeCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeCurrency val = new QuickFix.Fields.UnderlyingStrikeCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                this.UnderlyingStrikeCurrency = val;
            }

            public QuickFix.Fields.UnderlyingStrikeCurrency Get(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeCurrency val)
            {
                return IsSetUnderlyingStrikeCurrency();
            }

            public bool IsSetUnderlyingStrikeCurrency()
            {
                return IsSetField(Tags.UnderlyingStrikeCurrency);
            }
            public QuickFix.Fields.UnderlyingOptAttribute UnderlyingOptAttribute
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptAttribute val = new QuickFix.Fields.UnderlyingOptAttribute();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                this.UnderlyingOptAttribute = val;
            }

            public QuickFix.Fields.UnderlyingOptAttribute Get(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptAttribute val)
            {
                return IsSetUnderlyingOptAttribute();
            }

            public bool IsSetUnderlyingOptAttribute()
            {
                return IsSetField(Tags.UnderlyingOptAttribute);
            }
            public QuickFix.Fields.UnderlyingContractMultiplier UnderlyingContractMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractMultiplier val = new QuickFix.Fields.UnderlyingContractMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                this.UnderlyingContractMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingContractMultiplier Get(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractMultiplier val)
            {
                return IsSetUnderlyingContractMultiplier();
            }

            public bool IsSetUnderlyingContractMultiplier()
            {
                return IsSetField(Tags.UnderlyingContractMultiplier);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasure UnderlyingUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasure val = new QuickFix.Fields.UnderlyingUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                this.UnderlyingUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasure Get(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasure val)
            {
                return IsSetUnderlyingUnitOfMeasure();
            }

            public bool IsSetUnderlyingUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasureQty UnderlyingUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasureQty val = new QuickFix.Fields.UnderlyingUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                this.UnderlyingUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasureQty Get(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasureQty val)
            {
                return IsSetUnderlyingUnitOfMeasureQty();
            }

            public bool IsSetUnderlyingUnitOfMeasureQty()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasureQty);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasure UnderlyingPriceUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                this.UnderlyingPriceUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasure val)
            {
                return IsSetUnderlyingPriceUnitOfMeasure();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty UnderlyingPriceUnitOfMeasureQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                this.UnderlyingPriceUnitOfMeasureQty = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasureQty val)
            {
                return IsSetUnderlyingPriceUnitOfMeasureQty();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasureQty()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasureQty);
            }
            public QuickFix.Fields.UnderlyingTimeUnit UnderlyingTimeUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingTimeUnit val = new QuickFix.Fields.UnderlyingTimeUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                this.UnderlyingTimeUnit = val;
            }

            public QuickFix.Fields.UnderlyingTimeUnit Get(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTimeUnit val)
            {
                return IsSetUnderlyingTimeUnit();
            }

            public bool IsSetUnderlyingTimeUnit()
            {
                return IsSetField(Tags.UnderlyingTimeUnit);
            }
            public QuickFix.Fields.UnderlyingExerciseStyle UnderlyingExerciseStyle
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseStyle val = new QuickFix.Fields.UnderlyingExerciseStyle();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                this.UnderlyingExerciseStyle = val;
            }

            public QuickFix.Fields.UnderlyingExerciseStyle Get(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseStyle val)
            {
                return IsSetUnderlyingExerciseStyle();
            }

            public bool IsSetUnderlyingExerciseStyle()
            {
                return IsSetField(Tags.UnderlyingExerciseStyle);
            }
            public QuickFix.Fields.UnderlyingCouponRate UnderlyingCouponRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponRate val = new QuickFix.Fields.UnderlyingCouponRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponRate val)
            {
                this.UnderlyingCouponRate = val;
            }

            public QuickFix.Fields.UnderlyingCouponRate Get(QuickFix.Fields.UnderlyingCouponRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponRate val)
            {
                return IsSetUnderlyingCouponRate();
            }

            public bool IsSetUnderlyingCouponRate()
            {
                return IsSetField(Tags.UnderlyingCouponRate);
            }
            public QuickFix.Fields.UnderlyingSecurityExchange UnderlyingSecurityExchange
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityExchange val = new QuickFix.Fields.UnderlyingSecurityExchange();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                this.UnderlyingSecurityExchange = val;
            }

            public QuickFix.Fields.UnderlyingSecurityExchange Get(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityExchange val)
            {
                return IsSetUnderlyingSecurityExchange();
            }

            public bool IsSetUnderlyingSecurityExchange()
            {
                return IsSetField(Tags.UnderlyingSecurityExchange);
            }
            public QuickFix.Fields.UnderlyingIssuer UnderlyingIssuer
            {
                get
                {
                    QuickFix.Fields.UnderlyingIssuer val = new QuickFix.Fields.UnderlyingIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIssuer val)
            {
                this.UnderlyingIssuer = val;
            }

            public QuickFix.Fields.UnderlyingIssuer Get(QuickFix.Fields.UnderlyingIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIssuer val)
            {
                return IsSetUnderlyingIssuer();
            }

            public bool IsSetUnderlyingIssuer()
            {
                return IsSetField(Tags.UnderlyingIssuer);
            }
            public QuickFix.Fields.EncodedUnderlyingIssuerLen EncodedUnderlyingIssuerLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingIssuerLen val = new QuickFix.Fields.EncodedUnderlyingIssuerLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                this.EncodedUnderlyingIssuerLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingIssuerLen Get(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingIssuerLen val)
            {
                return IsSetEncodedUnderlyingIssuerLen();
            }

            public bool IsSetEncodedUnderlyingIssuerLen()
            {
                return IsSetField(Tags.EncodedUnderlyingIssuerLen);
            }
            public QuickFix.Fields.EncodedUnderlyingIssuer EncodedUnderlyingIssuer
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingIssuer val = new QuickFix.Fields.EncodedUnderlyingIssuer();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                this.EncodedUnderlyingIssuer = val;
            }

            public QuickFix.Fields.EncodedUnderlyingIssuer Get(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingIssuer val)
            {
                return IsSetEncodedUnderlyingIssuer();
            }

            public bool IsSetEncodedUnderlyingIssuer()
            {
                return IsSetField(Tags.EncodedUnderlyingIssuer);
            }
            public QuickFix.Fields.UnderlyingSecurityDesc UnderlyingSecurityDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityDesc val = new QuickFix.Fields.UnderlyingSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                this.UnderlyingSecurityDesc = val;
            }

            public QuickFix.Fields.UnderlyingSecurityDesc Get(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityDesc val)
            {
                return IsSetUnderlyingSecurityDesc();
            }

            public bool IsSetUnderlyingSecurityDesc()
            {
                return IsSetField(Tags.UnderlyingSecurityDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingSecurityDescLen EncodedUnderlyingSecurityDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingSecurityDescLen val = new QuickFix.Fields.EncodedUnderlyingSecurityDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                this.EncodedUnderlyingSecurityDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingSecurityDescLen Get(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingSecurityDescLen val)
            {
                return IsSetEncodedUnderlyingSecurityDescLen();
            }

            public bool IsSetEncodedUnderlyingSecurityDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingSecurityDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingSecurityDesc EncodedUnderlyingSecurityDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingSecurityDesc val = new QuickFix.Fields.EncodedUnderlyingSecurityDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                this.EncodedUnderlyingSecurityDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingSecurityDesc Get(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingSecurityDesc val)
            {
                return IsSetEncodedUnderlyingSecurityDesc();
            }

            public bool IsSetEncodedUnderlyingSecurityDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingSecurityDesc);
            }
            public QuickFix.Fields.UnderlyingCPProgram UnderlyingCPProgram
            {
                get
                {
                    QuickFix.Fields.UnderlyingCPProgram val = new QuickFix.Fields.UnderlyingCPProgram();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCPProgram val)
            {
                this.UnderlyingCPProgram = val;
            }

            public QuickFix.Fields.UnderlyingCPProgram Get(QuickFix.Fields.UnderlyingCPProgram val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCPProgram val)
            {
                return IsSetUnderlyingCPProgram();
            }

            public bool IsSetUnderlyingCPProgram()
            {
                return IsSetField(Tags.UnderlyingCPProgram);
            }
            public QuickFix.Fields.UnderlyingCPRegType UnderlyingCPRegType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCPRegType val = new QuickFix.Fields.UnderlyingCPRegType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCPRegType val)
            {
                this.UnderlyingCPRegType = val;
            }

            public QuickFix.Fields.UnderlyingCPRegType Get(QuickFix.Fields.UnderlyingCPRegType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCPRegType val)
            {
                return IsSetUnderlyingCPRegType();
            }

            public bool IsSetUnderlyingCPRegType()
            {
                return IsSetField(Tags.UnderlyingCPRegType);
            }
            public QuickFix.Fields.UnderlyingAllocationPercent UnderlyingAllocationPercent
            {
                get
                {
                    QuickFix.Fields.UnderlyingAllocationPercent val = new QuickFix.Fields.UnderlyingAllocationPercent();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                this.UnderlyingAllocationPercent = val;
            }

            public QuickFix.Fields.UnderlyingAllocationPercent Get(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAllocationPercent val)
            {
                return IsSetUnderlyingAllocationPercent();
            }

            public bool IsSetUnderlyingAllocationPercent()
            {
                return IsSetField(Tags.UnderlyingAllocationPercent);
            }
            public QuickFix.Fields.UnderlyingCurrency UnderlyingCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingCurrency val = new QuickFix.Fields.UnderlyingCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCurrency val)
            {
                this.UnderlyingCurrency = val;
            }

            public QuickFix.Fields.UnderlyingCurrency Get(QuickFix.Fields.UnderlyingCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCurrency val)
            {
                return IsSetUnderlyingCurrency();
            }

            public bool IsSetUnderlyingCurrency()
            {
                return IsSetField(Tags.UnderlyingCurrency);
            }
            public QuickFix.Fields.UnderlyingQty UnderlyingQty
            {
                get
                {
                    QuickFix.Fields.UnderlyingQty val = new QuickFix.Fields.UnderlyingQty();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingQty val)
            {
                this.UnderlyingQty = val;
            }

            public QuickFix.Fields.UnderlyingQty Get(QuickFix.Fields.UnderlyingQty val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingQty val)
            {
                return IsSetUnderlyingQty();
            }

            public bool IsSetUnderlyingQty()
            {
                return IsSetField(Tags.UnderlyingQty);
            }
            public QuickFix.Fields.UnderlyingSettlementType UnderlyingSettlementType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlementType val = new QuickFix.Fields.UnderlyingSettlementType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlementType val)
            {
                this.UnderlyingSettlementType = val;
            }

            public QuickFix.Fields.UnderlyingSettlementType Get(QuickFix.Fields.UnderlyingSettlementType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlementType val)
            {
                return IsSetUnderlyingSettlementType();
            }

            public bool IsSetUnderlyingSettlementType()
            {
                return IsSetField(Tags.UnderlyingSettlementType);
            }
            public QuickFix.Fields.UnderlyingCashAmount UnderlyingCashAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCashAmount val = new QuickFix.Fields.UnderlyingCashAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCashAmount val)
            {
                this.UnderlyingCashAmount = val;
            }

            public QuickFix.Fields.UnderlyingCashAmount Get(QuickFix.Fields.UnderlyingCashAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCashAmount val)
            {
                return IsSetUnderlyingCashAmount();
            }

            public bool IsSetUnderlyingCashAmount()
            {
                return IsSetField(Tags.UnderlyingCashAmount);
            }
            public QuickFix.Fields.UnderlyingCashType UnderlyingCashType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCashType val = new QuickFix.Fields.UnderlyingCashType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCashType val)
            {
                this.UnderlyingCashType = val;
            }

            public QuickFix.Fields.UnderlyingCashType Get(QuickFix.Fields.UnderlyingCashType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCashType val)
            {
                return IsSetUnderlyingCashType();
            }

            public bool IsSetUnderlyingCashType()
            {
                return IsSetField(Tags.UnderlyingCashType);
            }
            public QuickFix.Fields.UnderlyingPx UnderlyingPx
            {
                get
                {
                    QuickFix.Fields.UnderlyingPx val = new QuickFix.Fields.UnderlyingPx();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPx val)
            {
                this.UnderlyingPx = val;
            }

            public QuickFix.Fields.UnderlyingPx Get(QuickFix.Fields.UnderlyingPx val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPx val)
            {
                return IsSetUnderlyingPx();
            }

            public bool IsSetUnderlyingPx()
            {
                return IsSetField(Tags.UnderlyingPx);
            }
            public QuickFix.Fields.UnderlyingDirtyPrice UnderlyingDirtyPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingDirtyPrice val = new QuickFix.Fields.UnderlyingDirtyPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                this.UnderlyingDirtyPrice = val;
            }

            public QuickFix.Fields.UnderlyingDirtyPrice Get(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDirtyPrice val)
            {
                return IsSetUnderlyingDirtyPrice();
            }

            public bool IsSetUnderlyingDirtyPrice()
            {
                return IsSetField(Tags.UnderlyingDirtyPrice);
            }
            public QuickFix.Fields.UnderlyingEndPrice UnderlyingEndPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingEndPrice val = new QuickFix.Fields.UnderlyingEndPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEndPrice val)
            {
                this.UnderlyingEndPrice = val;
            }

            public QuickFix.Fields.UnderlyingEndPrice Get(QuickFix.Fields.UnderlyingEndPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEndPrice val)
            {
                return IsSetUnderlyingEndPrice();
            }

            public bool IsSetUnderlyingEndPrice()
            {
                return IsSetField(Tags.UnderlyingEndPrice);
            }
            public QuickFix.Fields.UnderlyingStartValue UnderlyingStartValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStartValue val = new QuickFix.Fields.UnderlyingStartValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStartValue val)
            {
                this.UnderlyingStartValue = val;
            }

            public QuickFix.Fields.UnderlyingStartValue Get(QuickFix.Fields.UnderlyingStartValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStartValue val)
            {
                return IsSetUnderlyingStartValue();
            }

            public bool IsSetUnderlyingStartValue()
            {
                return IsSetField(Tags.UnderlyingStartValue);
            }
            public QuickFix.Fields.UnderlyingCurrentValue UnderlyingCurrentValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCurrentValue val = new QuickFix.Fields.UnderlyingCurrentValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                this.UnderlyingCurrentValue = val;
            }

            public QuickFix.Fields.UnderlyingCurrentValue Get(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCurrentValue val)
            {
                return IsSetUnderlyingCurrentValue();
            }

            public bool IsSetUnderlyingCurrentValue()
            {
                return IsSetField(Tags.UnderlyingCurrentValue);
            }
            public QuickFix.Fields.UnderlyingEndValue UnderlyingEndValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingEndValue val = new QuickFix.Fields.UnderlyingEndValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEndValue val)
            {
                this.UnderlyingEndValue = val;
            }

            public QuickFix.Fields.UnderlyingEndValue Get(QuickFix.Fields.UnderlyingEndValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEndValue val)
            {
                return IsSetUnderlyingEndValue();
            }

            public bool IsSetUnderlyingEndValue()
            {
                return IsSetField(Tags.UnderlyingEndValue);
            }
            public QuickFix.Fields.NoUnderlyingStips NoUnderlyingStips
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingStips val = new QuickFix.Fields.NoUnderlyingStips();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingStips val)
            {
                this.NoUnderlyingStips = val;
            }

            public QuickFix.Fields.NoUnderlyingStips Get(QuickFix.Fields.NoUnderlyingStips val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingStips val)
            {
                return IsSetNoUnderlyingStips();
            }

            public bool IsSetNoUnderlyingStips()
            {
                return IsSetField(Tags.NoUnderlyingStips);
            }
            public QuickFix.Fields.UnderlyingAdjustedQuantity UnderlyingAdjustedQuantity
            {
                get
                {
                    QuickFix.Fields.UnderlyingAdjustedQuantity val = new QuickFix.Fields.UnderlyingAdjustedQuantity();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                this.UnderlyingAdjustedQuantity = val;
            }

            public QuickFix.Fields.UnderlyingAdjustedQuantity Get(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAdjustedQuantity val)
            {
                return IsSetUnderlyingAdjustedQuantity();
            }

            public bool IsSetUnderlyingAdjustedQuantity()
            {
                return IsSetField(Tags.UnderlyingAdjustedQuantity);
            }
            public QuickFix.Fields.UnderlyingFXRate UnderlyingFXRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingFXRate val = new QuickFix.Fields.UnderlyingFXRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFXRate val)
            {
                this.UnderlyingFXRate = val;
            }

            public QuickFix.Fields.UnderlyingFXRate Get(QuickFix.Fields.UnderlyingFXRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFXRate val)
            {
                return IsSetUnderlyingFXRate();
            }

            public bool IsSetUnderlyingFXRate()
            {
                return IsSetField(Tags.UnderlyingFXRate);
            }
            public QuickFix.Fields.UnderlyingFXRateCalc UnderlyingFXRateCalc
            {
                get
                {
                    QuickFix.Fields.UnderlyingFXRateCalc val = new QuickFix.Fields.UnderlyingFXRateCalc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                this.UnderlyingFXRateCalc = val;
            }

            public QuickFix.Fields.UnderlyingFXRateCalc Get(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFXRateCalc val)
            {
                return IsSetUnderlyingFXRateCalc();
            }

            public bool IsSetUnderlyingFXRateCalc()
            {
                return IsSetField(Tags.UnderlyingFXRateCalc);
            }
            public QuickFix.Fields.UnderlyingCapValue UnderlyingCapValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingCapValue val = new QuickFix.Fields.UnderlyingCapValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCapValue val)
            {
                this.UnderlyingCapValue = val;
            }

            public QuickFix.Fields.UnderlyingCapValue Get(QuickFix.Fields.UnderlyingCapValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCapValue val)
            {
                return IsSetUnderlyingCapValue();
            }

            public bool IsSetUnderlyingCapValue()
            {
                return IsSetField(Tags.UnderlyingCapValue);
            }
            public QuickFix.Fields.NoUndlyInstrumentParties NoUndlyInstrumentParties
            {
                get
                {
                    QuickFix.Fields.NoUndlyInstrumentParties val = new QuickFix.Fields.NoUndlyInstrumentParties();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                this.NoUndlyInstrumentParties = val;
            }

            public QuickFix.Fields.NoUndlyInstrumentParties Get(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUndlyInstrumentParties val)
            {
                return IsSetNoUndlyInstrumentParties();
            }

            public bool IsSetNoUndlyInstrumentParties()
            {
                return IsSetField(Tags.NoUndlyInstrumentParties);
            }
            public QuickFix.Fields.UnderlyingSettlMethod UnderlyingSettlMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethod val = new QuickFix.Fields.UnderlyingSettlMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                this.UnderlyingSettlMethod = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethod Get(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethod val)
            {
                return IsSetUnderlyingSettlMethod();
            }

            public bool IsSetUnderlyingSettlMethod()
            {
                return IsSetField(Tags.UnderlyingSettlMethod);
            }
            public QuickFix.Fields.UnderlyingPutOrCall UnderlyingPutOrCall
            {
                get
                {
                    QuickFix.Fields.UnderlyingPutOrCall val = new QuickFix.Fields.UnderlyingPutOrCall();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                this.UnderlyingPutOrCall = val;
            }

            public QuickFix.Fields.UnderlyingPutOrCall Get(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPutOrCall val)
            {
                return IsSetUnderlyingPutOrCall();
            }

            public bool IsSetUnderlyingPutOrCall()
            {
                return IsSetField(Tags.UnderlyingPutOrCall);
            }
            public QuickFix.Fields.UnderlyingContractMultiplierUnit UnderlyingContractMultiplierUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractMultiplierUnit val = new QuickFix.Fields.UnderlyingContractMultiplierUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                this.UnderlyingContractMultiplierUnit = val;
            }

            public QuickFix.Fields.UnderlyingContractMultiplierUnit Get(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractMultiplierUnit val)
            {
                return IsSetUnderlyingContractMultiplierUnit();
            }

            public bool IsSetUnderlyingContractMultiplierUnit()
            {
                return IsSetField(Tags.UnderlyingContractMultiplierUnit);
            }
            public QuickFix.Fields.UnderlyingFlowScheduleType UnderlyingFlowScheduleType
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlowScheduleType val = new QuickFix.Fields.UnderlyingFlowScheduleType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                this.UnderlyingFlowScheduleType = val;
            }

            public QuickFix.Fields.UnderlyingFlowScheduleType Get(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlowScheduleType val)
            {
                return IsSetUnderlyingFlowScheduleType();
            }

            public bool IsSetUnderlyingFlowScheduleType()
            {
                return IsSetField(Tags.UnderlyingFlowScheduleType);
            }
            public QuickFix.Fields.UnderlyingRestructuringType UnderlyingRestructuringType
            {
                get
                {
                    QuickFix.Fields.UnderlyingRestructuringType val = new QuickFix.Fields.UnderlyingRestructuringType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                this.UnderlyingRestructuringType = val;
            }

            public QuickFix.Fields.UnderlyingRestructuringType Get(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRestructuringType val)
            {
                return IsSetUnderlyingRestructuringType();
            }

            public bool IsSetUnderlyingRestructuringType()
            {
                return IsSetField(Tags.UnderlyingRestructuringType);
            }
            public QuickFix.Fields.UnderlyingSeniority UnderlyingSeniority
            {
                get
                {
                    QuickFix.Fields.UnderlyingSeniority val = new QuickFix.Fields.UnderlyingSeniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSeniority val)
            {
                this.UnderlyingSeniority = val;
            }

            public QuickFix.Fields.UnderlyingSeniority Get(QuickFix.Fields.UnderlyingSeniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSeniority val)
            {
                return IsSetUnderlyingSeniority();
            }

            public bool IsSetUnderlyingSeniority()
            {
                return IsSetField(Tags.UnderlyingSeniority);
            }
            public QuickFix.Fields.UnderlyingNotionalPercentageOutstanding UnderlyingNotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val = new QuickFix.Fields.UnderlyingNotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                this.UnderlyingNotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.UnderlyingNotionalPercentageOutstanding Get(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalPercentageOutstanding val)
            {
                return IsSetUnderlyingNotionalPercentageOutstanding();
            }

            public bool IsSetUnderlyingNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.UnderlyingNotionalPercentageOutstanding);
            }
            public QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding UnderlyingOriginalNotionalPercentageOutstanding
            {
                get
                {
                    QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val = new QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                this.UnderlyingOriginalNotionalPercentageOutstanding = val;
            }

            public QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding Get(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOriginalNotionalPercentageOutstanding val)
            {
                return IsSetUnderlyingOriginalNotionalPercentageOutstanding();
            }

            public bool IsSetUnderlyingOriginalNotionalPercentageOutstanding()
            {
                return IsSetField(Tags.UnderlyingOriginalNotionalPercentageOutstanding);
            }
            public QuickFix.Fields.UnderlyingAttachmentPoint UnderlyingAttachmentPoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingAttachmentPoint val = new QuickFix.Fields.UnderlyingAttachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                this.UnderlyingAttachmentPoint = val;
            }

            public QuickFix.Fields.UnderlyingAttachmentPoint Get(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAttachmentPoint val)
            {
                return IsSetUnderlyingAttachmentPoint();
            }

            public bool IsSetUnderlyingAttachmentPoint()
            {
                return IsSetField(Tags.UnderlyingAttachmentPoint);
            }
            public QuickFix.Fields.UnderlyingDetachmentPoint UnderlyingDetachmentPoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingDetachmentPoint val = new QuickFix.Fields.UnderlyingDetachmentPoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                this.UnderlyingDetachmentPoint = val;
            }

            public QuickFix.Fields.UnderlyingDetachmentPoint Get(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDetachmentPoint val)
            {
                return IsSetUnderlyingDetachmentPoint();
            }

            public bool IsSetUnderlyingDetachmentPoint()
            {
                return IsSetField(Tags.UnderlyingDetachmentPoint);
            }
            public QuickFix.Fields.UnderlyingPriceQuoteCurrency UnderlyingPriceQuoteCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceQuoteCurrency val = new QuickFix.Fields.UnderlyingPriceQuoteCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                this.UnderlyingPriceQuoteCurrency = val;
            }

            public QuickFix.Fields.UnderlyingPriceQuoteCurrency Get(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceQuoteCurrency val)
            {
                return IsSetUnderlyingPriceQuoteCurrency();
            }

            public bool IsSetUnderlyingPriceQuoteCurrency()
            {
                return IsSetField(Tags.UnderlyingPriceQuoteCurrency);
            }
            public QuickFix.Fields.UnderlyingUnitOfMeasureCurrency UnderlyingUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val = new QuickFix.Fields.UnderlyingUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                this.UnderlyingUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.UnderlyingUnitOfMeasureCurrency Get(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUnitOfMeasureCurrency val)
            {
                return IsSetUnderlyingUnitOfMeasureCurrency();
            }

            public bool IsSetUnderlyingUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.UnderlyingUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency UnderlyingPriceUnitOfMeasureCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val = new QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                this.UnderlyingPriceUnitOfMeasureCurrency = val;
            }

            public QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency Get(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceUnitOfMeasureCurrency val)
            {
                return IsSetUnderlyingPriceUnitOfMeasureCurrency();
            }

            public bool IsSetUnderlyingPriceUnitOfMeasureCurrency()
            {
                return IsSetField(Tags.UnderlyingPriceUnitOfMeasureCurrency);
            }
            public QuickFix.Fields.UnderlyingContractPriceRefMonth UnderlyingContractPriceRefMonth
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractPriceRefMonth val = new QuickFix.Fields.UnderlyingContractPriceRefMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                this.UnderlyingContractPriceRefMonth = val;
            }

            public QuickFix.Fields.UnderlyingContractPriceRefMonth Get(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractPriceRefMonth val)
            {
                return IsSetUnderlyingContractPriceRefMonth();
            }

            public bool IsSetUnderlyingContractPriceRefMonth()
            {
                return IsSetField(Tags.UnderlyingContractPriceRefMonth);
            }
            public QuickFix.Fields.UnderlyingSecurityXMLLen UnderlyingSecurityXMLLen
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXMLLen val = new QuickFix.Fields.UnderlyingSecurityXMLLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                this.UnderlyingSecurityXMLLen = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXMLLen Get(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXMLLen val)
            {
                return IsSetUnderlyingSecurityXMLLen();
            }

            public bool IsSetUnderlyingSecurityXMLLen()
            {
                return IsSetField(Tags.UnderlyingSecurityXMLLen);
            }
            public QuickFix.Fields.UnderlyingSecurityXML UnderlyingSecurityXML
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXML val = new QuickFix.Fields.UnderlyingSecurityXML();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                this.UnderlyingSecurityXML = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXML Get(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXML val)
            {
                return IsSetUnderlyingSecurityXML();
            }

            public bool IsSetUnderlyingSecurityXML()
            {
                return IsSetField(Tags.UnderlyingSecurityXML);
            }
            public QuickFix.Fields.UnderlyingSecurityXMLSchema UnderlyingSecurityXMLSchema
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityXMLSchema val = new QuickFix.Fields.UnderlyingSecurityXMLSchema();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                this.UnderlyingSecurityXMLSchema = val;
            }

            public QuickFix.Fields.UnderlyingSecurityXMLSchema Get(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityXMLSchema val)
            {
                return IsSetUnderlyingSecurityXMLSchema();
            }

            public bool IsSetUnderlyingSecurityXMLSchema()
            {
                return IsSetField(Tags.UnderlyingSecurityXMLSchema);
            }
            public QuickFix.Fields.UnderlyingConstituentWeight UnderlyingConstituentWeight
            {
                get
                {
                    QuickFix.Fields.UnderlyingConstituentWeight val = new QuickFix.Fields.UnderlyingConstituentWeight();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                this.UnderlyingConstituentWeight = val;
            }

            public QuickFix.Fields.UnderlyingConstituentWeight Get(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingConstituentWeight val)
            {
                return IsSetUnderlyingConstituentWeight();
            }

            public bool IsSetUnderlyingConstituentWeight()
            {
                return IsSetField(Tags.UnderlyingConstituentWeight);
            }
            public QuickFix.Fields.UnderlyingCouponType UnderlyingCouponType
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponType val = new QuickFix.Fields.UnderlyingCouponType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponType val)
            {
                this.UnderlyingCouponType = val;
            }

            public QuickFix.Fields.UnderlyingCouponType Get(QuickFix.Fields.UnderlyingCouponType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponType val)
            {
                return IsSetUnderlyingCouponType();
            }

            public bool IsSetUnderlyingCouponType()
            {
                return IsSetField(Tags.UnderlyingCouponType);
            }
            public QuickFix.Fields.UnderlyingTotalIssuedAmount UnderlyingTotalIssuedAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingTotalIssuedAmount val = new QuickFix.Fields.UnderlyingTotalIssuedAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                this.UnderlyingTotalIssuedAmount = val;
            }

            public QuickFix.Fields.UnderlyingTotalIssuedAmount Get(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTotalIssuedAmount val)
            {
                return IsSetUnderlyingTotalIssuedAmount();
            }

            public bool IsSetUnderlyingTotalIssuedAmount()
            {
                return IsSetField(Tags.UnderlyingTotalIssuedAmount);
            }
            public QuickFix.Fields.UnderlyingCouponFrequencyPeriod UnderlyingCouponFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponFrequencyPeriod val = new QuickFix.Fields.UnderlyingCouponFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                this.UnderlyingCouponFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingCouponFrequencyPeriod Get(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponFrequencyPeriod val)
            {
                return IsSetUnderlyingCouponFrequencyPeriod();
            }

            public bool IsSetUnderlyingCouponFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingCouponFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingCouponFrequencyUnit UnderlyingCouponFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponFrequencyUnit val = new QuickFix.Fields.UnderlyingCouponFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                this.UnderlyingCouponFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingCouponFrequencyUnit Get(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponFrequencyUnit val)
            {
                return IsSetUnderlyingCouponFrequencyUnit();
            }

            public bool IsSetUnderlyingCouponFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingCouponFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingCouponDayCount UnderlyingCouponDayCount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponDayCount val = new QuickFix.Fields.UnderlyingCouponDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                this.UnderlyingCouponDayCount = val;
            }

            public QuickFix.Fields.UnderlyingCouponDayCount Get(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponDayCount val)
            {
                return IsSetUnderlyingCouponDayCount();
            }

            public bool IsSetUnderlyingCouponDayCount()
            {
                return IsSetField(Tags.UnderlyingCouponDayCount);
            }
            public QuickFix.Fields.UnderlyingObligationID UnderlyingObligationID
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationID val = new QuickFix.Fields.UnderlyingObligationID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationID val)
            {
                this.UnderlyingObligationID = val;
            }

            public QuickFix.Fields.UnderlyingObligationID Get(QuickFix.Fields.UnderlyingObligationID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationID val)
            {
                return IsSetUnderlyingObligationID();
            }

            public bool IsSetUnderlyingObligationID()
            {
                return IsSetField(Tags.UnderlyingObligationID);
            }
            public QuickFix.Fields.UnderlyingObligationIDSource UnderlyingObligationIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationIDSource val = new QuickFix.Fields.UnderlyingObligationIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                this.UnderlyingObligationIDSource = val;
            }

            public QuickFix.Fields.UnderlyingObligationIDSource Get(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationIDSource val)
            {
                return IsSetUnderlyingObligationIDSource();
            }

            public bool IsSetUnderlyingObligationIDSource()
            {
                return IsSetField(Tags.UnderlyingObligationIDSource);
            }
            public QuickFix.Fields.UnderlyingEquityID UnderlyingEquityID
            {
                get
                {
                    QuickFix.Fields.UnderlyingEquityID val = new QuickFix.Fields.UnderlyingEquityID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEquityID val)
            {
                this.UnderlyingEquityID = val;
            }

            public QuickFix.Fields.UnderlyingEquityID Get(QuickFix.Fields.UnderlyingEquityID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEquityID val)
            {
                return IsSetUnderlyingEquityID();
            }

            public bool IsSetUnderlyingEquityID()
            {
                return IsSetField(Tags.UnderlyingEquityID);
            }
            public QuickFix.Fields.UnderlyingEquityIDSource UnderlyingEquityIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingEquityIDSource val = new QuickFix.Fields.UnderlyingEquityIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                this.UnderlyingEquityIDSource = val;
            }

            public QuickFix.Fields.UnderlyingEquityIDSource Get(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingEquityIDSource val)
            {
                return IsSetUnderlyingEquityIDSource();
            }

            public bool IsSetUnderlyingEquityIDSource()
            {
                return IsSetField(Tags.UnderlyingEquityIDSource);
            }
            public QuickFix.Fields.NoUnderlyingEvents NoUnderlyingEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingEvents val = new QuickFix.Fields.NoUnderlyingEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingEvents val)
            {
                this.NoUnderlyingEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingEvents Get(QuickFix.Fields.NoUnderlyingEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingEvents val)
            {
                return IsSetNoUnderlyingEvents();
            }

            public bool IsSetNoUnderlyingEvents()
            {
                return IsSetField(Tags.NoUnderlyingEvents);
            }
            public QuickFix.Fields.UnderlyingLienSeniority UnderlyingLienSeniority
            {
                get
                {
                    QuickFix.Fields.UnderlyingLienSeniority val = new QuickFix.Fields.UnderlyingLienSeniority();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                this.UnderlyingLienSeniority = val;
            }

            public QuickFix.Fields.UnderlyingLienSeniority Get(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLienSeniority val)
            {
                return IsSetUnderlyingLienSeniority();
            }

            public bool IsSetUnderlyingLienSeniority()
            {
                return IsSetField(Tags.UnderlyingLienSeniority);
            }
            public QuickFix.Fields.UnderlyingLoanFacility UnderlyingLoanFacility
            {
                get
                {
                    QuickFix.Fields.UnderlyingLoanFacility val = new QuickFix.Fields.UnderlyingLoanFacility();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                this.UnderlyingLoanFacility = val;
            }

            public QuickFix.Fields.UnderlyingLoanFacility Get(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLoanFacility val)
            {
                return IsSetUnderlyingLoanFacility();
            }

            public bool IsSetUnderlyingLoanFacility()
            {
                return IsSetField(Tags.UnderlyingLoanFacility);
            }
            public QuickFix.Fields.UnderlyingReferenceEntityType UnderlyingReferenceEntityType
            {
                get
                {
                    QuickFix.Fields.UnderlyingReferenceEntityType val = new QuickFix.Fields.UnderlyingReferenceEntityType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                this.UnderlyingReferenceEntityType = val;
            }

            public QuickFix.Fields.UnderlyingReferenceEntityType Get(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingReferenceEntityType val)
            {
                return IsSetUnderlyingReferenceEntityType();
            }

            public bool IsSetUnderlyingReferenceEntityType()
            {
                return IsSetField(Tags.UnderlyingReferenceEntityType);
            }
            public QuickFix.Fields.UnderlyingIndexSeries UnderlyingIndexSeries
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexSeries val = new QuickFix.Fields.UnderlyingIndexSeries();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                this.UnderlyingIndexSeries = val;
            }

            public QuickFix.Fields.UnderlyingIndexSeries Get(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexSeries val)
            {
                return IsSetUnderlyingIndexSeries();
            }

            public bool IsSetUnderlyingIndexSeries()
            {
                return IsSetField(Tags.UnderlyingIndexSeries);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexVersion UnderlyingIndexAnnexVersion
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexVersion val = new QuickFix.Fields.UnderlyingIndexAnnexVersion();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                this.UnderlyingIndexAnnexVersion = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexVersion Get(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexVersion val)
            {
                return IsSetUnderlyingIndexAnnexVersion();
            }

            public bool IsSetUnderlyingIndexAnnexVersion()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexVersion);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexDate UnderlyingIndexAnnexDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexDate val = new QuickFix.Fields.UnderlyingIndexAnnexDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                this.UnderlyingIndexAnnexDate = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexDate Get(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexDate val)
            {
                return IsSetUnderlyingIndexAnnexDate();
            }

            public bool IsSetUnderlyingIndexAnnexDate()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexDate);
            }
            public QuickFix.Fields.UnderlyingIndexAnnexSource UnderlyingIndexAnnexSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexAnnexSource val = new QuickFix.Fields.UnderlyingIndexAnnexSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                this.UnderlyingIndexAnnexSource = val;
            }

            public QuickFix.Fields.UnderlyingIndexAnnexSource Get(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexAnnexSource val)
            {
                return IsSetUnderlyingIndexAnnexSource();
            }

            public bool IsSetUnderlyingIndexAnnexSource()
            {
                return IsSetField(Tags.UnderlyingIndexAnnexSource);
            }
            public QuickFix.Fields.UnderlyingProductComplex UnderlyingProductComplex
            {
                get
                {
                    QuickFix.Fields.UnderlyingProductComplex val = new QuickFix.Fields.UnderlyingProductComplex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProductComplex val)
            {
                this.UnderlyingProductComplex = val;
            }

            public QuickFix.Fields.UnderlyingProductComplex Get(QuickFix.Fields.UnderlyingProductComplex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProductComplex val)
            {
                return IsSetUnderlyingProductComplex();
            }

            public bool IsSetUnderlyingProductComplex()
            {
                return IsSetField(Tags.UnderlyingProductComplex);
            }
            public QuickFix.Fields.UnderlyingSecurityGroup UnderlyingSecurityGroup
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityGroup val = new QuickFix.Fields.UnderlyingSecurityGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                this.UnderlyingSecurityGroup = val;
            }

            public QuickFix.Fields.UnderlyingSecurityGroup Get(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityGroup val)
            {
                return IsSetUnderlyingSecurityGroup();
            }

            public bool IsSetUnderlyingSecurityGroup()
            {
                return IsSetField(Tags.UnderlyingSecurityGroup);
            }
            public QuickFix.Fields.UnderlyingSettleOnOpenFlag UnderlyingSettleOnOpenFlag
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettleOnOpenFlag val = new QuickFix.Fields.UnderlyingSettleOnOpenFlag();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                this.UnderlyingSettleOnOpenFlag = val;
            }

            public QuickFix.Fields.UnderlyingSettleOnOpenFlag Get(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettleOnOpenFlag val)
            {
                return IsSetUnderlyingSettleOnOpenFlag();
            }

            public bool IsSetUnderlyingSettleOnOpenFlag()
            {
                return IsSetField(Tags.UnderlyingSettleOnOpenFlag);
            }
            public QuickFix.Fields.UnderlyingAssignmentMethod UnderlyingAssignmentMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssignmentMethod val = new QuickFix.Fields.UnderlyingAssignmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                this.UnderlyingAssignmentMethod = val;
            }

            public QuickFix.Fields.UnderlyingAssignmentMethod Get(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssignmentMethod val)
            {
                return IsSetUnderlyingAssignmentMethod();
            }

            public bool IsSetUnderlyingAssignmentMethod()
            {
                return IsSetField(Tags.UnderlyingAssignmentMethod);
            }
            public QuickFix.Fields.UnderlyingSecurityStatus UnderlyingSecurityStatus
            {
                get
                {
                    QuickFix.Fields.UnderlyingSecurityStatus val = new QuickFix.Fields.UnderlyingSecurityStatus();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                this.UnderlyingSecurityStatus = val;
            }

            public QuickFix.Fields.UnderlyingSecurityStatus Get(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSecurityStatus val)
            {
                return IsSetUnderlyingSecurityStatus();
            }

            public bool IsSetUnderlyingSecurityStatus()
            {
                return IsSetField(Tags.UnderlyingSecurityStatus);
            }
            public QuickFix.Fields.UnderlyingObligationType UnderlyingObligationType
            {
                get
                {
                    QuickFix.Fields.UnderlyingObligationType val = new QuickFix.Fields.UnderlyingObligationType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingObligationType val)
            {
                this.UnderlyingObligationType = val;
            }

            public QuickFix.Fields.UnderlyingObligationType Get(QuickFix.Fields.UnderlyingObligationType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingObligationType val)
            {
                return IsSetUnderlyingObligationType();
            }

            public bool IsSetUnderlyingObligationType()
            {
                return IsSetField(Tags.UnderlyingObligationType);
            }
            public QuickFix.Fields.UnderlyingAssetClass UnderlyingAssetClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetClass val = new QuickFix.Fields.UnderlyingAssetClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetClass val)
            {
                this.UnderlyingAssetClass = val;
            }

            public QuickFix.Fields.UnderlyingAssetClass Get(QuickFix.Fields.UnderlyingAssetClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetClass val)
            {
                return IsSetUnderlyingAssetClass();
            }

            public bool IsSetUnderlyingAssetClass()
            {
                return IsSetField(Tags.UnderlyingAssetClass);
            }
            public QuickFix.Fields.UnderlyingAssetSubClass UnderlyingAssetSubClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetSubClass val = new QuickFix.Fields.UnderlyingAssetSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                this.UnderlyingAssetSubClass = val;
            }

            public QuickFix.Fields.UnderlyingAssetSubClass Get(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetSubClass val)
            {
                return IsSetUnderlyingAssetSubClass();
            }

            public bool IsSetUnderlyingAssetSubClass()
            {
                return IsSetField(Tags.UnderlyingAssetSubClass);
            }
            public QuickFix.Fields.UnderlyingAssetType UnderlyingAssetType
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetType val = new QuickFix.Fields.UnderlyingAssetType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetType val)
            {
                this.UnderlyingAssetType = val;
            }

            public QuickFix.Fields.UnderlyingAssetType Get(QuickFix.Fields.UnderlyingAssetType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetType val)
            {
                return IsSetUnderlyingAssetType();
            }

            public bool IsSetUnderlyingAssetType()
            {
                return IsSetField(Tags.UnderlyingAssetType);
            }
            public QuickFix.Fields.NoUnderlyingSecondaryAssetClasses NoUnderlyingSecondaryAssetClasses
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val = new QuickFix.Fields.NoUnderlyingSecondaryAssetClasses();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                this.NoUnderlyingSecondaryAssetClasses = val;
            }

            public QuickFix.Fields.NoUnderlyingSecondaryAssetClasses Get(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSecondaryAssetClasses val)
            {
                return IsSetNoUnderlyingSecondaryAssetClasses();
            }

            public bool IsSetNoUnderlyingSecondaryAssetClasses()
            {
                return IsSetField(Tags.NoUnderlyingSecondaryAssetClasses);
            }
            public QuickFix.Fields.UnderlyingSwapClass UnderlyingSwapClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingSwapClass val = new QuickFix.Fields.UnderlyingSwapClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSwapClass val)
            {
                this.UnderlyingSwapClass = val;
            }

            public QuickFix.Fields.UnderlyingSwapClass Get(QuickFix.Fields.UnderlyingSwapClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSwapClass val)
            {
                return IsSetUnderlyingSwapClass();
            }

            public bool IsSetUnderlyingSwapClass()
            {
                return IsSetField(Tags.UnderlyingSwapClass);
            }
            public QuickFix.Fields.UnderlyingNthToDefault UnderlyingNthToDefault
            {
                get
                {
                    QuickFix.Fields.UnderlyingNthToDefault val = new QuickFix.Fields.UnderlyingNthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                this.UnderlyingNthToDefault = val;
            }

            public QuickFix.Fields.UnderlyingNthToDefault Get(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNthToDefault val)
            {
                return IsSetUnderlyingNthToDefault();
            }

            public bool IsSetUnderlyingNthToDefault()
            {
                return IsSetField(Tags.UnderlyingNthToDefault);
            }
            public QuickFix.Fields.UnderlyingMthToDefault UnderlyingMthToDefault
            {
                get
                {
                    QuickFix.Fields.UnderlyingMthToDefault val = new QuickFix.Fields.UnderlyingMthToDefault();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                this.UnderlyingMthToDefault = val;
            }

            public QuickFix.Fields.UnderlyingMthToDefault Get(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMthToDefault val)
            {
                return IsSetUnderlyingMthToDefault();
            }

            public bool IsSetUnderlyingMthToDefault()
            {
                return IsSetField(Tags.UnderlyingMthToDefault);
            }
            public QuickFix.Fields.UnderlyingSettledEntityMatrixSource UnderlyingSettledEntityMatrixSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettledEntityMatrixSource val = new QuickFix.Fields.UnderlyingSettledEntityMatrixSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                this.UnderlyingSettledEntityMatrixSource = val;
            }

            public QuickFix.Fields.UnderlyingSettledEntityMatrixSource Get(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettledEntityMatrixSource val)
            {
                return IsSetUnderlyingSettledEntityMatrixSource();
            }

            public bool IsSetUnderlyingSettledEntityMatrixSource()
            {
                return IsSetField(Tags.UnderlyingSettledEntityMatrixSource);
            }
            public QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate UnderlyingSettledEntityMatrixPublicationDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val = new QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                this.UnderlyingSettledEntityMatrixPublicationDate = val;
            }

            public QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate Get(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettledEntityMatrixPublicationDate val)
            {
                return IsSetUnderlyingSettledEntityMatrixPublicationDate();
            }

            public bool IsSetUnderlyingSettledEntityMatrixPublicationDate()
            {
                return IsSetField(Tags.UnderlyingSettledEntityMatrixPublicationDate);
            }
            public QuickFix.Fields.UnderlyingStrikeMultiplier UnderlyingStrikeMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeMultiplier val = new QuickFix.Fields.UnderlyingStrikeMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                this.UnderlyingStrikeMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingStrikeMultiplier Get(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeMultiplier val)
            {
                return IsSetUnderlyingStrikeMultiplier();
            }

            public bool IsSetUnderlyingStrikeMultiplier()
            {
                return IsSetField(Tags.UnderlyingStrikeMultiplier);
            }
            public QuickFix.Fields.UnderlyingStrikeValue UnderlyingStrikeValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeValue val = new QuickFix.Fields.UnderlyingStrikeValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                this.UnderlyingStrikeValue = val;
            }

            public QuickFix.Fields.UnderlyingStrikeValue Get(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeValue val)
            {
                return IsSetUnderlyingStrikeValue();
            }

            public bool IsSetUnderlyingStrikeValue()
            {
                return IsSetField(Tags.UnderlyingStrikeValue);
            }
            public QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod UnderlyingStrikePriceDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val = new QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                this.UnderlyingStrikePriceDeterminationMethod = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod Get(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceDeterminationMethod val)
            {
                return IsSetUnderlyingStrikePriceDeterminationMethod();
            }

            public bool IsSetUnderlyingStrikePriceDeterminationMethod()
            {
                return IsSetField(Tags.UnderlyingStrikePriceDeterminationMethod);
            }
            public QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod UnderlyingStrikePriceBoundaryMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val = new QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                this.UnderlyingStrikePriceBoundaryMethod = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod Get(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceBoundaryMethod val)
            {
                return IsSetUnderlyingStrikePriceBoundaryMethod();
            }

            public bool IsSetUnderlyingStrikePriceBoundaryMethod()
            {
                return IsSetField(Tags.UnderlyingStrikePriceBoundaryMethod);
            }
            public QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision UnderlyingStrikePriceBoundaryPrecision
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val = new QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                this.UnderlyingStrikePriceBoundaryPrecision = val;
            }

            public QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision Get(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikePriceBoundaryPrecision val)
            {
                return IsSetUnderlyingStrikePriceBoundaryPrecision();
            }

            public bool IsSetUnderlyingStrikePriceBoundaryPrecision()
            {
                return IsSetField(Tags.UnderlyingStrikePriceBoundaryPrecision);
            }
            public QuickFix.Fields.UnderlyingMinPriceIncrement UnderlyingMinPriceIncrement
            {
                get
                {
                    QuickFix.Fields.UnderlyingMinPriceIncrement val = new QuickFix.Fields.UnderlyingMinPriceIncrement();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                this.UnderlyingMinPriceIncrement = val;
            }

            public QuickFix.Fields.UnderlyingMinPriceIncrement Get(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMinPriceIncrement val)
            {
                return IsSetUnderlyingMinPriceIncrement();
            }

            public bool IsSetUnderlyingMinPriceIncrement()
            {
                return IsSetField(Tags.UnderlyingMinPriceIncrement);
            }
            public QuickFix.Fields.UnderlyingMinPriceIncrementAmount UnderlyingMinPriceIncrementAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingMinPriceIncrementAmount val = new QuickFix.Fields.UnderlyingMinPriceIncrementAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                this.UnderlyingMinPriceIncrementAmount = val;
            }

            public QuickFix.Fields.UnderlyingMinPriceIncrementAmount Get(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMinPriceIncrementAmount val)
            {
                return IsSetUnderlyingMinPriceIncrementAmount();
            }

            public bool IsSetUnderlyingMinPriceIncrementAmount()
            {
                return IsSetField(Tags.UnderlyingMinPriceIncrementAmount);
            }
            public QuickFix.Fields.UnderlyingOptPayoutType UnderlyingOptPayoutType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptPayoutType val = new QuickFix.Fields.UnderlyingOptPayoutType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                this.UnderlyingOptPayoutType = val;
            }

            public QuickFix.Fields.UnderlyingOptPayoutType Get(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptPayoutType val)
            {
                return IsSetUnderlyingOptPayoutType();
            }

            public bool IsSetUnderlyingOptPayoutType()
            {
                return IsSetField(Tags.UnderlyingOptPayoutType);
            }
            public QuickFix.Fields.UnderlyingOptPayoutAmount UnderlyingOptPayoutAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptPayoutAmount val = new QuickFix.Fields.UnderlyingOptPayoutAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                this.UnderlyingOptPayoutAmount = val;
            }

            public QuickFix.Fields.UnderlyingOptPayoutAmount Get(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptPayoutAmount val)
            {
                return IsSetUnderlyingOptPayoutAmount();
            }

            public bool IsSetUnderlyingOptPayoutAmount()
            {
                return IsSetField(Tags.UnderlyingOptPayoutAmount);
            }
            public QuickFix.Fields.UnderlyingPriceQuoteMethod UnderlyingPriceQuoteMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingPriceQuoteMethod val = new QuickFix.Fields.UnderlyingPriceQuoteMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                this.UnderlyingPriceQuoteMethod = val;
            }

            public QuickFix.Fields.UnderlyingPriceQuoteMethod Get(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPriceQuoteMethod val)
            {
                return IsSetUnderlyingPriceQuoteMethod();
            }

            public bool IsSetUnderlyingPriceQuoteMethod()
            {
                return IsSetField(Tags.UnderlyingPriceQuoteMethod);
            }
            public QuickFix.Fields.UnderlyingValuationMethod UnderlyingValuationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationMethod val = new QuickFix.Fields.UnderlyingValuationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                this.UnderlyingValuationMethod = val;
            }

            public QuickFix.Fields.UnderlyingValuationMethod Get(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationMethod val)
            {
                return IsSetUnderlyingValuationMethod();
            }

            public bool IsSetUnderlyingValuationMethod()
            {
                return IsSetField(Tags.UnderlyingValuationMethod);
            }
            public QuickFix.Fields.UnderlyingListMethod UnderlyingListMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingListMethod val = new QuickFix.Fields.UnderlyingListMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingListMethod val)
            {
                this.UnderlyingListMethod = val;
            }

            public QuickFix.Fields.UnderlyingListMethod Get(QuickFix.Fields.UnderlyingListMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingListMethod val)
            {
                return IsSetUnderlyingListMethod();
            }

            public bool IsSetUnderlyingListMethod()
            {
                return IsSetField(Tags.UnderlyingListMethod);
            }
            public QuickFix.Fields.UnderlyingCapPrice UnderlyingCapPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingCapPrice val = new QuickFix.Fields.UnderlyingCapPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCapPrice val)
            {
                this.UnderlyingCapPrice = val;
            }

            public QuickFix.Fields.UnderlyingCapPrice Get(QuickFix.Fields.UnderlyingCapPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCapPrice val)
            {
                return IsSetUnderlyingCapPrice();
            }

            public bool IsSetUnderlyingCapPrice()
            {
                return IsSetField(Tags.UnderlyingCapPrice);
            }
            public QuickFix.Fields.UnderlyingFloorPrice UnderlyingFloorPrice
            {
                get
                {
                    QuickFix.Fields.UnderlyingFloorPrice val = new QuickFix.Fields.UnderlyingFloorPrice();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                this.UnderlyingFloorPrice = val;
            }

            public QuickFix.Fields.UnderlyingFloorPrice Get(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFloorPrice val)
            {
                return IsSetUnderlyingFloorPrice();
            }

            public bool IsSetUnderlyingFloorPrice()
            {
                return IsSetField(Tags.UnderlyingFloorPrice);
            }
            public QuickFix.Fields.UnderlyingFlexibleIndicator UnderlyingFlexibleIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlexibleIndicator val = new QuickFix.Fields.UnderlyingFlexibleIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                this.UnderlyingFlexibleIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFlexibleIndicator Get(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlexibleIndicator val)
            {
                return IsSetUnderlyingFlexibleIndicator();
            }

            public bool IsSetUnderlyingFlexibleIndicator()
            {
                return IsSetField(Tags.UnderlyingFlexibleIndicator);
            }
            public QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator UnderlyingFlexProductEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val = new QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                this.UnderlyingFlexProductEligibilityIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator Get(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFlexProductEligibilityIndicator val)
            {
                return IsSetUnderlyingFlexProductEligibilityIndicator();
            }

            public bool IsSetUnderlyingFlexProductEligibilityIndicator()
            {
                return IsSetField(Tags.UnderlyingFlexProductEligibilityIndicator);
            }
            public QuickFix.Fields.UnderlyingPositionLimit UnderlyingPositionLimit
            {
                get
                {
                    QuickFix.Fields.UnderlyingPositionLimit val = new QuickFix.Fields.UnderlyingPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                this.UnderlyingPositionLimit = val;
            }

            public QuickFix.Fields.UnderlyingPositionLimit Get(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPositionLimit val)
            {
                return IsSetUnderlyingPositionLimit();
            }

            public bool IsSetUnderlyingPositionLimit()
            {
                return IsSetField(Tags.UnderlyingPositionLimit);
            }
            public QuickFix.Fields.UnderlyingNTPositionLimit UnderlyingNTPositionLimit
            {
                get
                {
                    QuickFix.Fields.UnderlyingNTPositionLimit val = new QuickFix.Fields.UnderlyingNTPositionLimit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                this.UnderlyingNTPositionLimit = val;
            }

            public QuickFix.Fields.UnderlyingNTPositionLimit Get(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNTPositionLimit val)
            {
                return IsSetUnderlyingNTPositionLimit();
            }

            public bool IsSetUnderlyingNTPositionLimit()
            {
                return IsSetField(Tags.UnderlyingNTPositionLimit);
            }
            public QuickFix.Fields.UnderlyingPool UnderlyingPool
            {
                get
                {
                    QuickFix.Fields.UnderlyingPool val = new QuickFix.Fields.UnderlyingPool();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPool val)
            {
                this.UnderlyingPool = val;
            }

            public QuickFix.Fields.UnderlyingPool Get(QuickFix.Fields.UnderlyingPool val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPool val)
            {
                return IsSetUnderlyingPool();
            }

            public bool IsSetUnderlyingPool()
            {
                return IsSetField(Tags.UnderlyingPool);
            }
            public QuickFix.Fields.UnderlyingContractSettlMonth UnderlyingContractSettlMonth
            {
                get
                {
                    QuickFix.Fields.UnderlyingContractSettlMonth val = new QuickFix.Fields.UnderlyingContractSettlMonth();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                this.UnderlyingContractSettlMonth = val;
            }

            public QuickFix.Fields.UnderlyingContractSettlMonth Get(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContractSettlMonth val)
            {
                return IsSetUnderlyingContractSettlMonth();
            }

            public bool IsSetUnderlyingContractSettlMonth()
            {
                return IsSetField(Tags.UnderlyingContractSettlMonth);
            }
            public QuickFix.Fields.UnderlyingDatedDate UnderlyingDatedDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingDatedDate val = new QuickFix.Fields.UnderlyingDatedDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDatedDate val)
            {
                this.UnderlyingDatedDate = val;
            }

            public QuickFix.Fields.UnderlyingDatedDate Get(QuickFix.Fields.UnderlyingDatedDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDatedDate val)
            {
                return IsSetUnderlyingDatedDate();
            }

            public bool IsSetUnderlyingDatedDate()
            {
                return IsSetField(Tags.UnderlyingDatedDate);
            }
            public QuickFix.Fields.UnderlyingInterestAccrualDate UnderlyingInterestAccrualDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingInterestAccrualDate val = new QuickFix.Fields.UnderlyingInterestAccrualDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                this.UnderlyingInterestAccrualDate = val;
            }

            public QuickFix.Fields.UnderlyingInterestAccrualDate Get(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInterestAccrualDate val)
            {
                return IsSetUnderlyingInterestAccrualDate();
            }

            public bool IsSetUnderlyingInterestAccrualDate()
            {
                return IsSetField(Tags.UnderlyingInterestAccrualDate);
            }
            public QuickFix.Fields.UnderlyingShortSaleRestriction UnderlyingShortSaleRestriction
            {
                get
                {
                    QuickFix.Fields.UnderlyingShortSaleRestriction val = new QuickFix.Fields.UnderlyingShortSaleRestriction();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                this.UnderlyingShortSaleRestriction = val;
            }

            public QuickFix.Fields.UnderlyingShortSaleRestriction Get(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingShortSaleRestriction val)
            {
                return IsSetUnderlyingShortSaleRestriction();
            }

            public bool IsSetUnderlyingShortSaleRestriction()
            {
                return IsSetField(Tags.UnderlyingShortSaleRestriction);
            }
            public QuickFix.Fields.UnderlyingRefTickTableID UnderlyingRefTickTableID
            {
                get
                {
                    QuickFix.Fields.UnderlyingRefTickTableID val = new QuickFix.Fields.UnderlyingRefTickTableID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                this.UnderlyingRefTickTableID = val;
            }

            public QuickFix.Fields.UnderlyingRefTickTableID Get(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRefTickTableID val)
            {
                return IsSetUnderlyingRefTickTableID();
            }

            public bool IsSetUnderlyingRefTickTableID()
            {
                return IsSetField(Tags.UnderlyingRefTickTableID);
            }
            public QuickFix.Fields.UnderlyingProtectionTermXIDRef UnderlyingProtectionTermXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingProtectionTermXIDRef val = new QuickFix.Fields.UnderlyingProtectionTermXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                this.UnderlyingProtectionTermXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingProtectionTermXIDRef Get(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermXIDRef val)
            {
                return IsSetUnderlyingProtectionTermXIDRef();
            }

            public bool IsSetUnderlyingProtectionTermXIDRef()
            {
                return IsSetField(Tags.UnderlyingProtectionTermXIDRef);
            }
            public QuickFix.Fields.UnderlyingSettlTermXIDRef UnderlyingSettlTermXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlTermXIDRef val = new QuickFix.Fields.UnderlyingSettlTermXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                this.UnderlyingSettlTermXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingSettlTermXIDRef Get(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlTermXIDRef val)
            {
                return IsSetUnderlyingSettlTermXIDRef();
            }

            public bool IsSetUnderlyingSettlTermXIDRef()
            {
                return IsSetField(Tags.UnderlyingSettlTermXIDRef);
            }
            public QuickFix.Fields.NoUnderlyingComplexEvents NoUnderlyingComplexEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingComplexEvents val = new QuickFix.Fields.NoUnderlyingComplexEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                this.NoUnderlyingComplexEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingComplexEvents Get(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEvents val)
            {
                return IsSetNoUnderlyingComplexEvents();
            }

            public bool IsSetNoUnderlyingComplexEvents()
            {
                return IsSetField(Tags.NoUnderlyingComplexEvents);
            }
            public QuickFix.Fields.UnderlyingBusinessDayConvention UnderlyingBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingBusinessDayConvention val = new QuickFix.Fields.UnderlyingBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                this.UnderlyingBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingBusinessDayConvention Get(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingBusinessDayConvention val)
            {
                return IsSetUnderlyingBusinessDayConvention();
            }

            public bool IsSetUnderlyingBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingBusinessCenters NoUnderlyingBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingBusinessCenters val = new QuickFix.Fields.NoUnderlyingBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                this.NoUnderlyingBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingBusinessCenters Get(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingBusinessCenters val)
            {
                return IsSetNoUnderlyingBusinessCenters();
            }

            public bool IsSetNoUnderlyingBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingDateRollConvention UnderlyingDateRollConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingDateRollConvention val = new QuickFix.Fields.UnderlyingDateRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                this.UnderlyingDateRollConvention = val;
            }

            public QuickFix.Fields.UnderlyingDateRollConvention Get(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDateRollConvention val)
            {
                return IsSetUnderlyingDateRollConvention();
            }

            public bool IsSetUnderlyingDateRollConvention()
            {
                return IsSetField(Tags.UnderlyingDateRollConvention);
            }
            public QuickFix.Fields.NoUnderlyingStreams NoUnderlyingStreams
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingStreams val = new QuickFix.Fields.NoUnderlyingStreams();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingStreams val)
            {
                this.NoUnderlyingStreams = val;
            }

            public QuickFix.Fields.NoUnderlyingStreams Get(QuickFix.Fields.NoUnderlyingStreams val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingStreams val)
            {
                return IsSetNoUnderlyingStreams();
            }

            public bool IsSetNoUnderlyingStreams()
            {
                return IsSetField(Tags.NoUnderlyingStreams);
            }
            public QuickFix.Fields.UnderlyingSettlRateIndex UnderlyingSettlRateIndex
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlRateIndex val = new QuickFix.Fields.UnderlyingSettlRateIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                this.UnderlyingSettlRateIndex = val;
            }

            public QuickFix.Fields.UnderlyingSettlRateIndex Get(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlRateIndex val)
            {
                return IsSetUnderlyingSettlRateIndex();
            }

            public bool IsSetUnderlyingSettlRateIndex()
            {
                return IsSetField(Tags.UnderlyingSettlRateIndex);
            }
            public QuickFix.Fields.UnderlyingSettlRateIndexLocation UnderlyingSettlRateIndexLocation
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlRateIndexLocation val = new QuickFix.Fields.UnderlyingSettlRateIndexLocation();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                this.UnderlyingSettlRateIndexLocation = val;
            }

            public QuickFix.Fields.UnderlyingSettlRateIndexLocation Get(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlRateIndexLocation val)
            {
                return IsSetUnderlyingSettlRateIndexLocation();
            }

            public bool IsSetUnderlyingSettlRateIndexLocation()
            {
                return IsSetField(Tags.UnderlyingSettlRateIndexLocation);
            }
            public QuickFix.Fields.UnderlyingOptionExpirationDesc UnderlyingOptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExpirationDesc val = new QuickFix.Fields.UnderlyingOptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                this.UnderlyingOptionExpirationDesc = val;
            }

            public QuickFix.Fields.UnderlyingOptionExpirationDesc Get(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExpirationDesc val)
            {
                return IsSetUnderlyingOptionExpirationDesc();
            }

            public bool IsSetUnderlyingOptionExpirationDesc()
            {
                return IsSetField(Tags.UnderlyingOptionExpirationDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen EncodedUnderlyingOptionExpirationDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val = new QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                this.EncodedUnderlyingOptionExpirationDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen Get(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingOptionExpirationDescLen val)
            {
                return IsSetEncodedUnderlyingOptionExpirationDescLen();
            }

            public bool IsSetEncodedUnderlyingOptionExpirationDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingOptionExpirationDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc EncodedUnderlyingOptionExpirationDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val = new QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                this.EncodedUnderlyingOptionExpirationDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc Get(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingOptionExpirationDesc val)
            {
                return IsSetEncodedUnderlyingOptionExpirationDesc();
            }

            public bool IsSetEncodedUnderlyingOptionExpirationDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingOptionExpirationDesc);
            }
            public QuickFix.Fields.NoUnderlyingAssetAttributes NoUnderlyingAssetAttributes
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingAssetAttributes val = new QuickFix.Fields.NoUnderlyingAssetAttributes();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                this.NoUnderlyingAssetAttributes = val;
            }

            public QuickFix.Fields.NoUnderlyingAssetAttributes Get(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingAssetAttributes val)
            {
                return IsSetNoUnderlyingAssetAttributes();
            }

            public bool IsSetNoUnderlyingAssetAttributes()
            {
                return IsSetField(Tags.NoUnderlyingAssetAttributes);
            }
            public QuickFix.Fields.UnderlyingSwapSubClass UnderlyingSwapSubClass
            {
                get
                {
                    QuickFix.Fields.UnderlyingSwapSubClass val = new QuickFix.Fields.UnderlyingSwapSubClass();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                this.UnderlyingSwapSubClass = val;
            }

            public QuickFix.Fields.UnderlyingSwapSubClass Get(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSwapSubClass val)
            {
                return IsSetUnderlyingSwapSubClass();
            }

            public bool IsSetUnderlyingSwapSubClass()
            {
                return IsSetField(Tags.UnderlyingSwapSubClass);
            }
            public QuickFix.Fields.UnderlyingStrikeUnitOfMeasure UnderlyingStrikeUnitOfMeasure
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val = new QuickFix.Fields.UnderlyingStrikeUnitOfMeasure();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                this.UnderlyingStrikeUnitOfMeasure = val;
            }

            public QuickFix.Fields.UnderlyingStrikeUnitOfMeasure Get(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeUnitOfMeasure val)
            {
                return IsSetUnderlyingStrikeUnitOfMeasure();
            }

            public bool IsSetUnderlyingStrikeUnitOfMeasure()
            {
                return IsSetField(Tags.UnderlyingStrikeUnitOfMeasure);
            }
            public QuickFix.Fields.UnderlyingStrikeIndex UnderlyingStrikeIndex
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndex val = new QuickFix.Fields.UnderlyingStrikeIndex();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                this.UnderlyingStrikeIndex = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndex Get(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndex val)
            {
                return IsSetUnderlyingStrikeIndex();
            }

            public bool IsSetUnderlyingStrikeIndex()
            {
                return IsSetField(Tags.UnderlyingStrikeIndex);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexSpread UnderlyingStrikeIndexSpread
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexSpread val = new QuickFix.Fields.UnderlyingStrikeIndexSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                this.UnderlyingStrikeIndexSpread = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexSpread Get(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexSpread val)
            {
                return IsSetUnderlyingStrikeIndexSpread();
            }

            public bool IsSetUnderlyingStrikeIndexSpread()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexSpread);
            }
            public QuickFix.Fields.UnderlyingValuationSource UnderlyingValuationSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationSource val = new QuickFix.Fields.UnderlyingValuationSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationSource val)
            {
                this.UnderlyingValuationSource = val;
            }

            public QuickFix.Fields.UnderlyingValuationSource Get(QuickFix.Fields.UnderlyingValuationSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationSource val)
            {
                return IsSetUnderlyingValuationSource();
            }

            public bool IsSetUnderlyingValuationSource()
            {
                return IsSetField(Tags.UnderlyingValuationSource);
            }
            public QuickFix.Fields.UnderlyingValuationReferenceModel UnderlyingValuationReferenceModel
            {
                get
                {
                    QuickFix.Fields.UnderlyingValuationReferenceModel val = new QuickFix.Fields.UnderlyingValuationReferenceModel();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                this.UnderlyingValuationReferenceModel = val;
            }

            public QuickFix.Fields.UnderlyingValuationReferenceModel Get(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingValuationReferenceModel val)
            {
                return IsSetUnderlyingValuationReferenceModel();
            }

            public bool IsSetUnderlyingValuationReferenceModel()
            {
                return IsSetField(Tags.UnderlyingValuationReferenceModel);
            }
            public QuickFix.Fields.UnderlyingStrategyType UnderlyingStrategyType
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrategyType val = new QuickFix.Fields.UnderlyingStrategyType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrategyType val)
            {
                this.UnderlyingStrategyType = val;
            }

            public QuickFix.Fields.UnderlyingStrategyType Get(QuickFix.Fields.UnderlyingStrategyType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrategyType val)
            {
                return IsSetUnderlyingStrategyType();
            }

            public bool IsSetUnderlyingStrategyType()
            {
                return IsSetField(Tags.UnderlyingStrategyType);
            }
            public QuickFix.Fields.UnderlyingCommonPricingIndicator UnderlyingCommonPricingIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingCommonPricingIndicator val = new QuickFix.Fields.UnderlyingCommonPricingIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                this.UnderlyingCommonPricingIndicator = val;
            }

            public QuickFix.Fields.UnderlyingCommonPricingIndicator Get(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCommonPricingIndicator val)
            {
                return IsSetUnderlyingCommonPricingIndicator();
            }

            public bool IsSetUnderlyingCommonPricingIndicator()
            {
                return IsSetField(Tags.UnderlyingCommonPricingIndicator);
            }
            public QuickFix.Fields.UnderlyingSettlDisruptionProvision UnderlyingSettlDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlDisruptionProvision val = new QuickFix.Fields.UnderlyingSettlDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                this.UnderlyingSettlDisruptionProvision = val;
            }

            public QuickFix.Fields.UnderlyingSettlDisruptionProvision Get(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlDisruptionProvision val)
            {
                return IsSetUnderlyingSettlDisruptionProvision();
            }

            public bool IsSetUnderlyingSettlDisruptionProvision()
            {
                return IsSetField(Tags.UnderlyingSettlDisruptionProvision);
            }
            public QuickFix.Fields.UnderlyingInstrumentRoundingDirection UnderlyingInstrumentRoundingDirection
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentRoundingDirection val = new QuickFix.Fields.UnderlyingInstrumentRoundingDirection();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                this.UnderlyingInstrumentRoundingDirection = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentRoundingDirection Get(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentRoundingDirection val)
            {
                return IsSetUnderlyingInstrumentRoundingDirection();
            }

            public bool IsSetUnderlyingInstrumentRoundingDirection()
            {
                return IsSetField(Tags.UnderlyingInstrumentRoundingDirection);
            }
            public QuickFix.Fields.UnderlyingInstrumentRoundingPrecision UnderlyingInstrumentRoundingPrecision
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val = new QuickFix.Fields.UnderlyingInstrumentRoundingPrecision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                this.UnderlyingInstrumentRoundingPrecision = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentRoundingPrecision Get(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentRoundingPrecision val)
            {
                return IsSetUnderlyingInstrumentRoundingPrecision();
            }

            public bool IsSetUnderlyingInstrumentRoundingPrecision()
            {
                return IsSetField(Tags.UnderlyingInstrumentRoundingPrecision);
            }
            public QuickFix.Fields.UnderlyingPricingDateUnadjusted UnderlyingPricingDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateUnadjusted val = new QuickFix.Fields.UnderlyingPricingDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                this.UnderlyingPricingDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateUnadjusted Get(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateUnadjusted val)
            {
                return IsSetUnderlyingPricingDateUnadjusted();
            }

            public bool IsSetUnderlyingPricingDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingPricingDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention UnderlyingPricingDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                this.UnderlyingPricingDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateBusinessDayConvention val)
            {
                return IsSetUnderlyingPricingDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingPricingDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingPricingDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters NoUnderlyingPricingDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                this.NoUnderlyingPricingDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingPricingDateBusinessCenters val)
            {
                return IsSetNoUnderlyingPricingDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingPricingDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingPricingDateBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingPricingDateAdjusted UnderlyingPricingDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingDateAdjusted val = new QuickFix.Fields.UnderlyingPricingDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                this.UnderlyingPricingDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingPricingDateAdjusted Get(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingDateAdjusted val)
            {
                return IsSetUnderlyingPricingDateAdjusted();
            }

            public bool IsSetUnderlyingPricingDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingPricingDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingPricingTime UnderlyingPricingTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingTime val = new QuickFix.Fields.UnderlyingPricingTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingTime val)
            {
                this.UnderlyingPricingTime = val;
            }

            public QuickFix.Fields.UnderlyingPricingTime Get(QuickFix.Fields.UnderlyingPricingTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingTime val)
            {
                return IsSetUnderlyingPricingTime();
            }

            public bool IsSetUnderlyingPricingTime()
            {
                return IsSetField(Tags.UnderlyingPricingTime);
            }
            public QuickFix.Fields.UnderlyingPricingTimeBusinessCenter UnderlyingPricingTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingPricingTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                this.UnderlyingPricingTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingPricingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingPricingTimeBusinessCenter val)
            {
                return IsSetUnderlyingPricingTimeBusinessCenter();
            }

            public bool IsSetUnderlyingPricingTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingPricingTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionProvision UnderlyingMarketDisruptionProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionProvision val = new QuickFix.Fields.UnderlyingMarketDisruptionProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                this.UnderlyingMarketDisruptionProvision = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionProvision Get(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionProvision val)
            {
                return IsSetUnderlyingMarketDisruptionProvision();
            }

            public bool IsSetUnderlyingMarketDisruptionProvision()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionProvision);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionEvents NoUnderlyingMarketDisruptionEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val = new QuickFix.Fields.NoUnderlyingMarketDisruptionEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                this.NoUnderlyingMarketDisruptionEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionEvents Get(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionEvents val)
            {
                return IsSetNoUnderlyingMarketDisruptionEvents();
            }

            public bool IsSetNoUnderlyingMarketDisruptionEvents()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionEvents);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision UnderlyingMarketDisruptionFallbackProvision
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                this.UnderlyingMarketDisruptionFallbackProvision = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackProvision val)
            {
                return IsSetUnderlyingMarketDisruptionFallbackProvision();
            }

            public bool IsSetUnderlyingMarketDisruptionFallbackProvision()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionFallbackProvision);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks NoUnderlyingMarketDisruptionFallbacks
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val = new QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                this.NoUnderlyingMarketDisruptionFallbacks = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks Get(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbacks val)
            {
                return IsSetNoUnderlyingMarketDisruptionFallbacks();
            }

            public bool IsSetNoUnderlyingMarketDisruptionFallbacks()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionFallbacks);
            }
            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices NoUnderlyingMarketDisruptionFallbackReferencePrices
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val = new QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                this.NoUnderlyingMarketDisruptionFallbackReferencePrices = val;
            }

            public QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices Get(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingMarketDisruptionFallbackReferencePrices val)
            {
                return IsSetNoUnderlyingMarketDisruptionFallbackReferencePrices();
            }

            public bool IsSetNoUnderlyingMarketDisruptionFallbackReferencePrices()
            {
                return IsSetField(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays UnderlyingMarketDisruptionMaximumDays
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val = new QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                this.UnderlyingMarketDisruptionMaximumDays = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays Get(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMaximumDays val)
            {
                return IsSetUnderlyingMarketDisruptionMaximumDays();
            }

            public bool IsSetUnderlyingMarketDisruptionMaximumDays()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMaximumDays);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage UnderlyingMarketDisruptionMaterialityPercentage
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val = new QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                this.UnderlyingMarketDisruptionMaterialityPercentage = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage Get(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMaterialityPercentage val)
            {
                return IsSetUnderlyingMarketDisruptionMaterialityPercentage();
            }

            public bool IsSetUnderlyingMarketDisruptionMaterialityPercentage()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMaterialityPercentage);
            }
            public QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts UnderlyingMarketDisruptionMinimumFuturesContracts
            {
                get
                {
                    QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val = new QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                this.UnderlyingMarketDisruptionMinimumFuturesContracts = val;
            }

            public QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts Get(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionMinimumFuturesContracts val)
            {
                return IsSetUnderlyingMarketDisruptionMinimumFuturesContracts();
            }

            public bool IsSetUnderlyingMarketDisruptionMinimumFuturesContracts()
            {
                return IsSetField(Tags.UnderlyingMarketDisruptionMinimumFuturesContracts);
            }
            public QuickFix.Fields.UnderlyingExerciseDesc UnderlyingExerciseDesc
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseDesc val = new QuickFix.Fields.UnderlyingExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                this.UnderlyingExerciseDesc = val;
            }

            public QuickFix.Fields.UnderlyingExerciseDesc Get(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseDesc val)
            {
                return IsSetUnderlyingExerciseDesc();
            }

            public bool IsSetUnderlyingExerciseDesc()
            {
                return IsSetField(Tags.UnderlyingExerciseDesc);
            }
            public QuickFix.Fields.EncodedUnderlyingExerciseDescLen EncodedUnderlyingExerciseDescLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingExerciseDescLen val = new QuickFix.Fields.EncodedUnderlyingExerciseDescLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                this.EncodedUnderlyingExerciseDescLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingExerciseDescLen Get(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingExerciseDescLen val)
            {
                return IsSetEncodedUnderlyingExerciseDescLen();
            }

            public bool IsSetEncodedUnderlyingExerciseDescLen()
            {
                return IsSetField(Tags.EncodedUnderlyingExerciseDescLen);
            }
            public QuickFix.Fields.EncodedUnderlyingExerciseDesc EncodedUnderlyingExerciseDesc
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingExerciseDesc val = new QuickFix.Fields.EncodedUnderlyingExerciseDesc();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                this.EncodedUnderlyingExerciseDesc = val;
            }

            public QuickFix.Fields.EncodedUnderlyingExerciseDesc Get(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingExerciseDesc val)
            {
                return IsSetEncodedUnderlyingExerciseDesc();
            }

            public bool IsSetEncodedUnderlyingExerciseDesc()
            {
                return IsSetField(Tags.EncodedUnderlyingExerciseDesc);
            }
            public QuickFix.Fields.UnderlyingAutomaticExerciseIndicator UnderlyingAutomaticExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val = new QuickFix.Fields.UnderlyingAutomaticExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                this.UnderlyingAutomaticExerciseIndicator = val;
            }

            public QuickFix.Fields.UnderlyingAutomaticExerciseIndicator Get(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAutomaticExerciseIndicator val)
            {
                return IsSetUnderlyingAutomaticExerciseIndicator();
            }

            public bool IsSetUnderlyingAutomaticExerciseIndicator()
            {
                return IsSetField(Tags.UnderlyingAutomaticExerciseIndicator);
            }
            public QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate UnderlyingAutomaticExerciseThresholdRate
            {
                get
                {
                    QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val = new QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                this.UnderlyingAutomaticExerciseThresholdRate = val;
            }

            public QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate Get(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAutomaticExerciseThresholdRate val)
            {
                return IsSetUnderlyingAutomaticExerciseThresholdRate();
            }

            public bool IsSetUnderlyingAutomaticExerciseThresholdRate()
            {
                return IsSetField(Tags.UnderlyingAutomaticExerciseThresholdRate);
            }
            public QuickFix.Fields.UnderlyingExerciseConfirmationMethod UnderlyingExerciseConfirmationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseConfirmationMethod val = new QuickFix.Fields.UnderlyingExerciseConfirmationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                this.UnderlyingExerciseConfirmationMethod = val;
            }

            public QuickFix.Fields.UnderlyingExerciseConfirmationMethod Get(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseConfirmationMethod val)
            {
                return IsSetUnderlyingExerciseConfirmationMethod();
            }

            public bool IsSetUnderlyingExerciseConfirmationMethod()
            {
                return IsSetField(Tags.UnderlyingExerciseConfirmationMethod);
            }
            public QuickFix.Fields.UnderlyingManualNoticeBusinessCenter UnderlyingManualNoticeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val = new QuickFix.Fields.UnderlyingManualNoticeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                this.UnderlyingManualNoticeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingManualNoticeBusinessCenter Get(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingManualNoticeBusinessCenter val)
            {
                return IsSetUnderlyingManualNoticeBusinessCenter();
            }

            public bool IsSetUnderlyingManualNoticeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingManualNoticeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingFallbackExerciseIndicator UnderlyingFallbackExerciseIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingFallbackExerciseIndicator val = new QuickFix.Fields.UnderlyingFallbackExerciseIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                this.UnderlyingFallbackExerciseIndicator = val;
            }

            public QuickFix.Fields.UnderlyingFallbackExerciseIndicator Get(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFallbackExerciseIndicator val)
            {
                return IsSetUnderlyingFallbackExerciseIndicator();
            }

            public bool IsSetUnderlyingFallbackExerciseIndicator()
            {
                return IsSetField(Tags.UnderlyingFallbackExerciseIndicator);
            }
            public QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator UnderlyingLimitedRightToConfirmIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val = new QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                this.UnderlyingLimitedRightToConfirmIndicator = val;
            }

            public QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator Get(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingLimitedRightToConfirmIndicator val)
            {
                return IsSetUnderlyingLimitedRightToConfirmIndicator();
            }

            public bool IsSetUnderlyingLimitedRightToConfirmIndicator()
            {
                return IsSetField(Tags.UnderlyingLimitedRightToConfirmIndicator);
            }
            public QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator UnderlyingExerciseSplitTicketIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val = new QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                this.UnderlyingExerciseSplitTicketIndicator = val;
            }

            public QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator Get(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExerciseSplitTicketIndicator val)
            {
                return IsSetUnderlyingExerciseSplitTicketIndicator();
            }

            public bool IsSetUnderlyingExerciseSplitTicketIndicator()
            {
                return IsSetField(Tags.UnderlyingExerciseSplitTicketIndicator);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention UnderlyingOptionExerciseBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val = new QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                this.UnderlyingOptionExerciseBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention Get(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseBusinessDayConvention val)
            {
                return IsSetUnderlyingOptionExerciseBusinessDayConvention();
            }

            public bool IsSetUnderlyingOptionExerciseBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters NoUnderlyingOptionExerciseBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val = new QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                this.NoUnderlyingOptionExerciseBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters Get(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseBusinessCenters val)
            {
                return IsSetNoUnderlyingOptionExerciseBusinessCenters();
            }

            public bool IsSetNoUnderlyingOptionExerciseBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseBusinessCenters);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseDates NoUnderlyingOptionExerciseDates
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseDates val = new QuickFix.Fields.NoUnderlyingOptionExerciseDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                this.NoUnderlyingOptionExerciseDates = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseDates Get(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseDates val)
            {
                return IsSetNoUnderlyingOptionExerciseDates();
            }

            public bool IsSetNoUnderlyingOptionExerciseDates()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseDates);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType UnderlyingOptionExerciseEarliestDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod UnderlyingOptionExerciseEarliestDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit UnderlyingOptionExerciseEarliestDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseEarliestDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseEarliestDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod UnderlyingOptionExerciseFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                this.UnderlyingOptionExerciseFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFrequencyPeriod val)
            {
                return IsSetUnderlyingOptionExerciseFrequencyPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit UnderlyingOptionExerciseFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val = new QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                this.UnderlyingOptionExerciseFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit Get(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFrequencyUnit val)
            {
                return IsSetUnderlyingOptionExerciseFrequencyUnit();
            }

            public bool IsSetUnderlyingOptionExerciseFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted UnderlyingOptionExerciseStartDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseStartDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseStartDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo UnderlyingOptionExerciseStartDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                this.UnderlyingOptionExerciseStartDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateRelativeTo val)
            {
                return IsSetUnderlyingOptionExerciseStartDateRelativeTo();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod UnderlyingOptionExerciseStartDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit UnderlyingOptionExerciseStartDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType UnderlyingOptionExerciseStartDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseStartDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseStartDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted UnderlyingOptionExerciseStartDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val = new QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                this.UnderlyingOptionExerciseStartDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted Get(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseStartDateAdjusted val)
            {
                return IsSetUnderlyingOptionExerciseStartDateAdjusted();
            }

            public bool IsSetUnderlyingOptionExerciseStartDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseStartDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseSkip UnderlyingOptionExerciseSkip
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseSkip val = new QuickFix.Fields.UnderlyingOptionExerciseSkip();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                this.UnderlyingOptionExerciseSkip = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseSkip Get(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseSkip val)
            {
                return IsSetUnderlyingOptionExerciseSkip();
            }

            public bool IsSetUnderlyingOptionExerciseSkip()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseSkip);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline UnderlyingOptionExerciseNominationDeadline
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val = new QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                this.UnderlyingOptionExerciseNominationDeadline = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline Get(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseNominationDeadline val)
            {
                return IsSetUnderlyingOptionExerciseNominationDeadline();
            }

            public bool IsSetUnderlyingOptionExerciseNominationDeadline()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseNominationDeadline);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted UnderlyingOptionExerciseFirstDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseFirstDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseFirstDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseFirstDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseFirstDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseFirstDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted UnderlyingOptionExerciseLastDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val = new QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                this.UnderlyingOptionExerciseLastDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted Get(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseLastDateUnadjusted val)
            {
                return IsSetUnderlyingOptionExerciseLastDateUnadjusted();
            }

            public bool IsSetUnderlyingOptionExerciseLastDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseLastDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseEarliestTime UnderlyingOptionExerciseEarliestTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val = new QuickFix.Fields.UnderlyingOptionExerciseEarliestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                this.UnderlyingOptionExerciseEarliestTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseEarliestTime Get(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseEarliestTime val)
            {
                return IsSetUnderlyingOptionExerciseEarliestTime();
            }

            public bool IsSetUnderlyingOptionExerciseEarliestTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseEarliestTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseLatestTime UnderlyingOptionExerciseLatestTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseLatestTime val = new QuickFix.Fields.UnderlyingOptionExerciseLatestTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                this.UnderlyingOptionExerciseLatestTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseLatestTime Get(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseLatestTime val)
            {
                return IsSetUnderlyingOptionExerciseLatestTime();
            }

            public bool IsSetUnderlyingOptionExerciseLatestTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseLatestTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter UnderlyingOptionExerciseTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                this.UnderlyingOptionExerciseTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseTimeBusinessCenter val)
            {
                return IsSetUnderlyingOptionExerciseTimeBusinessCenter();
            }

            public bool IsSetUnderlyingOptionExerciseTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention UnderlyingOptionExerciseExpirationDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                this.UnderlyingOptionExerciseExpirationDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessDayConvention val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters NoUnderlyingOptionExerciseExpirationDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                this.NoUnderlyingOptionExerciseExpirationDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDateBusinessCenters val)
            {
                return IsSetNoUnderlyingOptionExerciseExpirationDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingOptionExerciseExpirationDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters);
            }
            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates NoUnderlyingOptionExerciseExpirationDates
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val = new QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                this.NoUnderlyingOptionExerciseExpirationDates = val;
            }

            public QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates Get(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingOptionExerciseExpirationDates val)
            {
                return IsSetNoUnderlyingOptionExerciseExpirationDates();
            }

            public bool IsSetNoUnderlyingOptionExerciseExpirationDates()
            {
                return IsSetField(Tags.NoUnderlyingOptionExerciseExpirationDates);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo UnderlyingOptionExerciseExpirationDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                this.UnderlyingOptionExerciseExpirationDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateRelativeTo val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateRelativeTo();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod UnderlyingOptionExerciseExpirationDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetPeriod val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit UnderlyingOptionExerciseExpirationDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetUnit val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetUnit();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod UnderlyingOptionExerciseExpirationFrequencyPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                this.UnderlyingOptionExerciseExpirationFrequencyPeriod = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyPeriod val)
            {
                return IsSetUnderlyingOptionExerciseExpirationFrequencyPeriod();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationFrequencyPeriod()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationFrequencyPeriod);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit UnderlyingOptionExerciseExpirationFrequencyUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                this.UnderlyingOptionExerciseExpirationFrequencyUnit = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationFrequencyUnit val)
            {
                return IsSetUnderlyingOptionExerciseExpirationFrequencyUnit();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationFrequencyUnit()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationFrequencyUnit);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention UnderlyingOptionExerciseExpirationRollConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                this.UnderlyingOptionExerciseExpirationRollConvention = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationRollConvention val)
            {
                return IsSetUnderlyingOptionExerciseExpirationRollConvention();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationRollConvention()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationRollConvention);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType UnderlyingOptionExerciseExpirationDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                this.UnderlyingOptionExerciseExpirationDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateOffsetDayType val)
            {
                return IsSetUnderlyingOptionExerciseExpirationDateOffsetDayType();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTime UnderlyingOptionExerciseExpirationTime
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationTime();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                this.UnderlyingOptionExerciseExpirationTime = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTime Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationTime val)
            {
                return IsSetUnderlyingOptionExerciseExpirationTime();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationTime()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationTime);
            }
            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter UnderlyingOptionExerciseExpirationTimeBusinessCenter
            {
                get
                {
                    QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                this.UnderlyingOptionExerciseExpirationTimeBusinessCenter = val;
            }

            public QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationTimeBusinessCenter val)
            {
                return IsSetUnderlyingOptionExerciseExpirationTimeBusinessCenter();
            }

            public bool IsSetUnderlyingOptionExerciseExpirationTimeBusinessCenter()
            {
                return IsSetField(Tags.UnderlyingOptionExerciseExpirationTimeBusinessCenter);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectingPartySide UnderlyingSettlMethodElectingPartySide
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val = new QuickFix.Fields.UnderlyingSettlMethodElectingPartySide();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                this.UnderlyingSettlMethodElectingPartySide = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectingPartySide Get(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectingPartySide val)
            {
                return IsSetUnderlyingSettlMethodElectingPartySide();
            }

            public bool IsSetUnderlyingSettlMethodElectingPartySide()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectingPartySide);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted UnderlyingSettlMethodElectionDateUnadjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                this.UnderlyingSettlMethodElectionDateUnadjusted = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateUnadjusted val)
            {
                return IsSetUnderlyingSettlMethodElectionDateUnadjusted();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateUnadjusted()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateUnadjusted);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention UnderlyingSettlMethodElectionDateBusinessDayConvention
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                this.UnderlyingSettlMethodElectionDateBusinessDayConvention = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessDayConvention val)
            {
                return IsSetUnderlyingSettlMethodElectionDateBusinessDayConvention();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateBusinessDayConvention()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateBusinessDayConvention);
            }
            public QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters NoUnderlyingSettlMethodElectionDateBusinessCenters
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                this.NoUnderlyingSettlMethodElectionDateBusinessCenters = val;
            }

            public QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingSettlMethodElectionDateBusinessCenters val)
            {
                return IsSetNoUnderlyingSettlMethodElectionDateBusinessCenters();
            }

            public bool IsSetNoUnderlyingSettlMethodElectionDateBusinessCenters()
            {
                return IsSetField(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo UnderlyingSettlMethodElectionDateRelativeTo
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                this.UnderlyingSettlMethodElectionDateRelativeTo = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateRelativeTo val)
            {
                return IsSetUnderlyingSettlMethodElectionDateRelativeTo();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateRelativeTo()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateRelativeTo);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod UnderlyingSettlMethodElectionDateOffsetPeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetPeriod = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetPeriod val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetPeriod();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetPeriod()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetPeriod);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit UnderlyingSettlMethodElectionDateOffsetUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetUnit = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetUnit val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetUnit();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetUnit()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetUnit);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType UnderlyingSettlMethodElectionDateOffsetDayType
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                this.UnderlyingSettlMethodElectionDateOffsetDayType = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateOffsetDayType val)
            {
                return IsSetUnderlyingSettlMethodElectionDateOffsetDayType();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateOffsetDayType()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateOffsetDayType);
            }
            public QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted UnderlyingSettlMethodElectionDateAdjusted
            {
                get
                {
                    QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                this.UnderlyingSettlMethodElectionDateAdjusted = val;
            }

            public QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateAdjusted val)
            {
                return IsSetUnderlyingSettlMethodElectionDateAdjusted();
            }

            public bool IsSetUnderlyingSettlMethodElectionDateAdjusted()
            {
                return IsSetField(Tags.UnderlyingSettlMethodElectionDateAdjusted);
            }
            public QuickFix.Fields.UnderlyingMakeWholeDate UnderlyingMakeWholeDate
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeDate val = new QuickFix.Fields.UnderlyingMakeWholeDate();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                this.UnderlyingMakeWholeDate = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeDate Get(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeDate val)
            {
                return IsSetUnderlyingMakeWholeDate();
            }

            public bool IsSetUnderlyingMakeWholeDate()
            {
                return IsSetField(Tags.UnderlyingMakeWholeDate);
            }
            public QuickFix.Fields.UnderlyingMakeWholeAmount UnderlyingMakeWholeAmount
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeAmount val = new QuickFix.Fields.UnderlyingMakeWholeAmount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                this.UnderlyingMakeWholeAmount = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeAmount Get(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeAmount val)
            {
                return IsSetUnderlyingMakeWholeAmount();
            }

            public bool IsSetUnderlyingMakeWholeAmount()
            {
                return IsSetField(Tags.UnderlyingMakeWholeAmount);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName UnderlyingMakeWholeBenchmarkCurveName
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                this.UnderlyingMakeWholeBenchmarkCurveName = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurveName val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkCurveName();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkCurveName()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkCurveName);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint UnderlyingMakeWholeBenchmarkCurvePoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                this.UnderlyingMakeWholeBenchmarkCurvePoint = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkCurvePoint val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkCurvePoint();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkCurvePoint()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkCurvePoint);
            }
            public QuickFix.Fields.UnderlyingMakeWholeRecallSpread UnderlyingMakeWholeRecallSpread
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeRecallSpread val = new QuickFix.Fields.UnderlyingMakeWholeRecallSpread();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                this.UnderlyingMakeWholeRecallSpread = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeRecallSpread Get(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeRecallSpread val)
            {
                return IsSetUnderlyingMakeWholeRecallSpread();
            }

            public bool IsSetUnderlyingMakeWholeRecallSpread()
            {
                return IsSetField(Tags.UnderlyingMakeWholeRecallSpread);
            }
            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote UnderlyingMakeWholeBenchmarkQuote
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val = new QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                this.UnderlyingMakeWholeBenchmarkQuote = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote Get(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeBenchmarkQuote val)
            {
                return IsSetUnderlyingMakeWholeBenchmarkQuote();
            }

            public bool IsSetUnderlyingMakeWholeBenchmarkQuote()
            {
                return IsSetField(Tags.UnderlyingMakeWholeBenchmarkQuote);
            }
            public QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod UnderlyingMakeWholeInterpolationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val = new QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                this.UnderlyingMakeWholeInterpolationMethod = val;
            }

            public QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod Get(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingMakeWholeInterpolationMethod val)
            {
                return IsSetUnderlyingMakeWholeInterpolationMethod();
            }

            public bool IsSetUnderlyingMakeWholeInterpolationMethod()
            {
                return IsSetField(Tags.UnderlyingMakeWholeInterpolationMethod);
            }
            public QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier UnderlyingTradingUnitPeriodMultiplier
            {
                get
                {
                    QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val = new QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                this.UnderlyingTradingUnitPeriodMultiplier = val;
            }

            public QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier Get(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingTradingUnitPeriodMultiplier val)
            {
                return IsSetUnderlyingTradingUnitPeriodMultiplier();
            }

            public bool IsSetUnderlyingTradingUnitPeriodMultiplier()
            {
                return IsSetField(Tags.UnderlyingTradingUnitPeriodMultiplier);
            }
            public QuickFix.Fields.NoUnderlyingProvisions NoUnderlyingProvisions
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingProvisions val = new QuickFix.Fields.NoUnderlyingProvisions();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                this.NoUnderlyingProvisions = val;
            }

            public QuickFix.Fields.NoUnderlyingProvisions Get(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingProvisions val)
            {
                return IsSetNoUnderlyingProvisions();
            }

            public bool IsSetNoUnderlyingProvisions()
            {
                return IsSetField(Tags.NoUnderlyingProvisions);
            }
            public QuickFix.Fields.NoUnderlyingAdditionalTerms NoUnderlyingAdditionalTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingAdditionalTerms val = new QuickFix.Fields.NoUnderlyingAdditionalTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                this.NoUnderlyingAdditionalTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingAdditionalTerms Get(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingAdditionalTerms val)
            {
                return IsSetNoUnderlyingAdditionalTerms();
            }

            public bool IsSetNoUnderlyingAdditionalTerms()
            {
                return IsSetField(Tags.NoUnderlyingAdditionalTerms);
            }
            public QuickFix.Fields.NoUnderlyingProtectionTerms NoUnderlyingProtectionTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingProtectionTerms val = new QuickFix.Fields.NoUnderlyingProtectionTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                this.NoUnderlyingProtectionTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingProtectionTerms Get(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTerms val)
            {
                return IsSetNoUnderlyingProtectionTerms();
            }

            public bool IsSetNoUnderlyingProtectionTerms()
            {
                return IsSetField(Tags.NoUnderlyingProtectionTerms);
            }
            public QuickFix.Fields.NoUnderlyingCashSettlTerms NoUnderlyingCashSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingCashSettlTerms val = new QuickFix.Fields.NoUnderlyingCashSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                this.NoUnderlyingCashSettlTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingCashSettlTerms Get(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlTerms val)
            {
                return IsSetNoUnderlyingCashSettlTerms();
            }

            public bool IsSetNoUnderlyingCashSettlTerms()
            {
                return IsSetField(Tags.NoUnderlyingCashSettlTerms);
            }
            public QuickFix.Fields.NoUnderlyingPhysicalSettlTerms NoUnderlyingPhysicalSettlTerms
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val = new QuickFix.Fields.NoUnderlyingPhysicalSettlTerms();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                this.NoUnderlyingPhysicalSettlTerms = val;
            }

            public QuickFix.Fields.NoUnderlyingPhysicalSettlTerms Get(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingPhysicalSettlTerms val)
            {
                return IsSetNoUnderlyingPhysicalSettlTerms();
            }

            public bool IsSetNoUnderlyingPhysicalSettlTerms()
            {
                return IsSetField(Tags.NoUnderlyingPhysicalSettlTerms);
            }
            public QuickFix.Fields.UnderlyingAssetGroup UnderlyingAssetGroup
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetGroup val = new QuickFix.Fields.UnderlyingAssetGroup();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                this.UnderlyingAssetGroup = val;
            }

            public QuickFix.Fields.UnderlyingAssetGroup Get(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetGroup val)
            {
                return IsSetUnderlyingAssetGroup();
            }

            public bool IsSetUnderlyingAssetGroup()
            {
                return IsSetField(Tags.UnderlyingAssetGroup);
            }
            public QuickFix.Fields.UnderlyingNotional UnderlyingNotional
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotional val = new QuickFix.Fields.UnderlyingNotional();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotional val)
            {
                this.UnderlyingNotional = val;
            }

            public QuickFix.Fields.UnderlyingNotional Get(QuickFix.Fields.UnderlyingNotional val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotional val)
            {
                return IsSetUnderlyingNotional();
            }

            public bool IsSetUnderlyingNotional()
            {
                return IsSetField(Tags.UnderlyingNotional);
            }
            public QuickFix.Fields.UnderlyingNotionalCurrency UnderlyingNotionalCurrency
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalCurrency val = new QuickFix.Fields.UnderlyingNotionalCurrency();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                this.UnderlyingNotionalCurrency = val;
            }

            public QuickFix.Fields.UnderlyingNotionalCurrency Get(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalCurrency val)
            {
                return IsSetUnderlyingNotionalCurrency();
            }

            public bool IsSetUnderlyingNotionalCurrency()
            {
                return IsSetField(Tags.UnderlyingNotionalCurrency);
            }
            public QuickFix.Fields.UnderlyingNotionalDeterminationMethod UnderlyingNotionalDeterminationMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalDeterminationMethod val = new QuickFix.Fields.UnderlyingNotionalDeterminationMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                this.UnderlyingNotionalDeterminationMethod = val;
            }

            public QuickFix.Fields.UnderlyingNotionalDeterminationMethod Get(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalDeterminationMethod val)
            {
                return IsSetUnderlyingNotionalDeterminationMethod();
            }

            public bool IsSetUnderlyingNotionalDeterminationMethod()
            {
                return IsSetField(Tags.UnderlyingNotionalDeterminationMethod);
            }
            public QuickFix.Fields.UnderlyingNotionalAdjustments UnderlyingNotionalAdjustments
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalAdjustments val = new QuickFix.Fields.UnderlyingNotionalAdjustments();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                this.UnderlyingNotionalAdjustments = val;
            }

            public QuickFix.Fields.UnderlyingNotionalAdjustments Get(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalAdjustments val)
            {
                return IsSetUnderlyingNotionalAdjustments();
            }

            public bool IsSetUnderlyingNotionalAdjustments()
            {
                return IsSetField(Tags.UnderlyingNotionalAdjustments);
            }
            public QuickFix.Fields.UnderlyingNotionalXIDRef UnderlyingNotionalXIDRef
            {
                get
                {
                    QuickFix.Fields.UnderlyingNotionalXIDRef val = new QuickFix.Fields.UnderlyingNotionalXIDRef();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                this.UnderlyingNotionalXIDRef = val;
            }

            public QuickFix.Fields.UnderlyingNotionalXIDRef Get(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNotionalXIDRef val)
            {
                return IsSetUnderlyingNotionalXIDRef();
            }

            public bool IsSetUnderlyingNotionalXIDRef()
            {
                return IsSetField(Tags.UnderlyingNotionalXIDRef);
            }
            public QuickFix.Fields.UnderlyingFutureID UnderlyingFutureID
            {
                get
                {
                    QuickFix.Fields.UnderlyingFutureID val = new QuickFix.Fields.UnderlyingFutureID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFutureID val)
            {
                this.UnderlyingFutureID = val;
            }

            public QuickFix.Fields.UnderlyingFutureID Get(QuickFix.Fields.UnderlyingFutureID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFutureID val)
            {
                return IsSetUnderlyingFutureID();
            }

            public bool IsSetUnderlyingFutureID()
            {
                return IsSetField(Tags.UnderlyingFutureID);
            }
            public QuickFix.Fields.UnderlyingFutureIDSource UnderlyingFutureIDSource
            {
                get
                {
                    QuickFix.Fields.UnderlyingFutureIDSource val = new QuickFix.Fields.UnderlyingFutureIDSource();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                this.UnderlyingFutureIDSource = val;
            }

            public QuickFix.Fields.UnderlyingFutureIDSource Get(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFutureIDSource val)
            {
                return IsSetUnderlyingFutureIDSource();
            }

            public bool IsSetUnderlyingFutureIDSource()
            {
                return IsSetField(Tags.UnderlyingFutureIDSource);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexCurvePoint UnderlyingStrikeIndexCurvePoint
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val = new QuickFix.Fields.UnderlyingStrikeIndexCurvePoint();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                this.UnderlyingStrikeIndexCurvePoint = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexCurvePoint Get(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexCurvePoint val)
            {
                return IsSetUnderlyingStrikeIndexCurvePoint();
            }

            public bool IsSetUnderlyingStrikeIndexCurvePoint()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexCurvePoint);
            }
            public QuickFix.Fields.UnderlyingStrikeIndexQuote UnderlyingStrikeIndexQuote
            {
                get
                {
                    QuickFix.Fields.UnderlyingStrikeIndexQuote val = new QuickFix.Fields.UnderlyingStrikeIndexQuote();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                this.UnderlyingStrikeIndexQuote = val;
            }

            public QuickFix.Fields.UnderlyingStrikeIndexQuote Get(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingStrikeIndexQuote val)
            {
                return IsSetUnderlyingStrikeIndexQuote();
            }

            public bool IsSetUnderlyingStrikeIndexQuote()
            {
                return IsSetField(Tags.UnderlyingStrikeIndexQuote);
            }
            public QuickFix.Fields.UnderlyingRateSpreadInitialValue UnderlyingRateSpreadInitialValue
            {
                get
                {
                    QuickFix.Fields.UnderlyingRateSpreadInitialValue val = new QuickFix.Fields.UnderlyingRateSpreadInitialValue();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                this.UnderlyingRateSpreadInitialValue = val;
            }

            public QuickFix.Fields.UnderlyingRateSpreadInitialValue Get(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadInitialValue val)
            {
                return IsSetUnderlyingRateSpreadInitialValue();
            }

            public bool IsSetUnderlyingRateSpreadInitialValue()
            {
                return IsSetField(Tags.UnderlyingRateSpreadInitialValue);
            }
            public QuickFix.Fields.NoUnderlyingRateSpreadSteps NoUnderlyingRateSpreadSteps
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingRateSpreadSteps val = new QuickFix.Fields.NoUnderlyingRateSpreadSteps();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                this.NoUnderlyingRateSpreadSteps = val;
            }

            public QuickFix.Fields.NoUnderlyingRateSpreadSteps Get(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingRateSpreadSteps val)
            {
                return IsSetNoUnderlyingRateSpreadSteps();
            }

            public bool IsSetNoUnderlyingRateSpreadSteps()
            {
                return IsSetField(Tags.NoUnderlyingRateSpreadSteps);
            }
            public QuickFix.Fields.UnderlyingDividendPayoutRatio UnderlyingDividendPayoutRatio
            {
                get
                {
                    QuickFix.Fields.UnderlyingDividendPayoutRatio val = new QuickFix.Fields.UnderlyingDividendPayoutRatio();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                this.UnderlyingDividendPayoutRatio = val;
            }

            public QuickFix.Fields.UnderlyingDividendPayoutRatio Get(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDividendPayoutRatio val)
            {
                return IsSetUnderlyingDividendPayoutRatio();
            }

            public bool IsSetUnderlyingDividendPayoutRatio()
            {
                return IsSetField(Tags.UnderlyingDividendPayoutRatio);
            }
            public QuickFix.Fields.UnderlyingDividendPayoutConditions UnderlyingDividendPayoutConditions
            {
                get
                {
                    QuickFix.Fields.UnderlyingDividendPayoutConditions val = new QuickFix.Fields.UnderlyingDividendPayoutConditions();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                this.UnderlyingDividendPayoutConditions = val;
            }

            public QuickFix.Fields.UnderlyingDividendPayoutConditions Get(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDividendPayoutConditions val)
            {
                return IsSetUnderlyingDividendPayoutConditions();
            }

            public bool IsSetUnderlyingDividendPayoutConditions()
            {
                return IsSetField(Tags.UnderlyingDividendPayoutConditions);
            }
            public QuickFix.Fields.NoUnderlyingDividendPayments NoUnderlyingDividendPayments
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingDividendPayments val = new QuickFix.Fields.NoUnderlyingDividendPayments();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                this.NoUnderlyingDividendPayments = val;
            }

            public QuickFix.Fields.NoUnderlyingDividendPayments Get(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPayments val)
            {
                return IsSetNoUnderlyingDividendPayments();
            }

            public bool IsSetNoUnderlyingDividendPayments()
            {
                return IsSetField(Tags.NoUnderlyingDividendPayments);
            }
            public QuickFix.Fields.NoUnderlyingExtraordinaryEvents NoUnderlyingExtraordinaryEvents
            {
                get
                {
                    QuickFix.Fields.NoUnderlyingExtraordinaryEvents val = new QuickFix.Fields.NoUnderlyingExtraordinaryEvents();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                this.NoUnderlyingExtraordinaryEvents = val;
            }

            public QuickFix.Fields.NoUnderlyingExtraordinaryEvents Get(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoUnderlyingExtraordinaryEvents val)
            {
                return IsSetNoUnderlyingExtraordinaryEvents();
            }

            public bool IsSetNoUnderlyingExtraordinaryEvents()
            {
                return IsSetField(Tags.NoUnderlyingExtraordinaryEvents);
            }
            public QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod UnderlyingExtraordinaryEventAdjustmentMethod
            {
                get
                {
                    QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val = new QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                this.UnderlyingExtraordinaryEventAdjustmentMethod = val;
            }

            public QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod Get(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventAdjustmentMethod val)
            {
                return IsSetUnderlyingExtraordinaryEventAdjustmentMethod();
            }

            public bool IsSetUnderlyingExtraordinaryEventAdjustmentMethod()
            {
                return IsSetField(Tags.UnderlyingExtraordinaryEventAdjustmentMethod);
            }
            public QuickFix.Fields.UnderlyingExchangeLookAlike UnderlyingExchangeLookAlike
            {
                get
                {
                    QuickFix.Fields.UnderlyingExchangeLookAlike val = new QuickFix.Fields.UnderlyingExchangeLookAlike();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                this.UnderlyingExchangeLookAlike = val;
            }

            public QuickFix.Fields.UnderlyingExchangeLookAlike Get(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingExchangeLookAlike val)
            {
                return IsSetUnderlyingExchangeLookAlike();
            }

            public bool IsSetUnderlyingExchangeLookAlike()
            {
                return IsSetField(Tags.UnderlyingExchangeLookAlike);
            }
            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage UnderlyingAverageVolumeLimitationPercentage
            {
                get
                {
                    QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val = new QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                this.UnderlyingAverageVolumeLimitationPercentage = val;
            }

            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage Get(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAverageVolumeLimitationPercentage val)
            {
                return IsSetUnderlyingAverageVolumeLimitationPercentage();
            }

            public bool IsSetUnderlyingAverageVolumeLimitationPercentage()
            {
                return IsSetField(Tags.UnderlyingAverageVolumeLimitationPercentage);
            }
            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays UnderlyingAverageVolumeLimitationPeriodDays
            {
                get
                {
                    QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val = new QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                this.UnderlyingAverageVolumeLimitationPeriodDays = val;
            }

            public QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays Get(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAverageVolumeLimitationPeriodDays val)
            {
                return IsSetUnderlyingAverageVolumeLimitationPeriodDays();
            }

            public bool IsSetUnderlyingAverageVolumeLimitationPeriodDays()
            {
                return IsSetField(Tags.UnderlyingAverageVolumeLimitationPeriodDays);
            }
            public QuickFix.Fields.UnderlyingDepositoryReceiptIndicator UnderlyingDepositoryReceiptIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val = new QuickFix.Fields.UnderlyingDepositoryReceiptIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                this.UnderlyingDepositoryReceiptIndicator = val;
            }

            public QuickFix.Fields.UnderlyingDepositoryReceiptIndicator Get(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDepositoryReceiptIndicator val)
            {
                return IsSetUnderlyingDepositoryReceiptIndicator();
            }

            public bool IsSetUnderlyingDepositoryReceiptIndicator()
            {
                return IsSetField(Tags.UnderlyingDepositoryReceiptIndicator);
            }
            public QuickFix.Fields.UnderlyingOpenUnits UnderlyingOpenUnits
            {
                get
                {
                    QuickFix.Fields.UnderlyingOpenUnits val = new QuickFix.Fields.UnderlyingOpenUnits();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                this.UnderlyingOpenUnits = val;
            }

            public QuickFix.Fields.UnderlyingOpenUnits Get(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingOpenUnits val)
            {
                return IsSetUnderlyingOpenUnits();
            }

            public bool IsSetUnderlyingOpenUnits()
            {
                return IsSetField(Tags.UnderlyingOpenUnits);
            }
            public QuickFix.Fields.UnderlyingBasketDivisor UnderlyingBasketDivisor
            {
                get
                {
                    QuickFix.Fields.UnderlyingBasketDivisor val = new QuickFix.Fields.UnderlyingBasketDivisor();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                this.UnderlyingBasketDivisor = val;
            }

            public QuickFix.Fields.UnderlyingBasketDivisor Get(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingBasketDivisor val)
            {
                return IsSetUnderlyingBasketDivisor();
            }

            public bool IsSetUnderlyingBasketDivisor()
            {
                return IsSetField(Tags.UnderlyingBasketDivisor);
            }
            public QuickFix.Fields.UnderlyingInstrumentXID UnderlyingInstrumentXID
            {
                get
                {
                    QuickFix.Fields.UnderlyingInstrumentXID val = new QuickFix.Fields.UnderlyingInstrumentXID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                this.UnderlyingInstrumentXID = val;
            }

            public QuickFix.Fields.UnderlyingInstrumentXID Get(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInstrumentXID val)
            {
                return IsSetUnderlyingInstrumentXID();
            }

            public bool IsSetUnderlyingInstrumentXID()
            {
                return IsSetField(Tags.UnderlyingInstrumentXID);
            }
            public QuickFix.Fields.UnderlyingInTheMoneyCondition UnderlyingInTheMoneyCondition
            {
                get
                {
                    QuickFix.Fields.UnderlyingInTheMoneyCondition val = new QuickFix.Fields.UnderlyingInTheMoneyCondition();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                this.UnderlyingInTheMoneyCondition = val;
            }

            public QuickFix.Fields.UnderlyingInTheMoneyCondition Get(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingInTheMoneyCondition val)
            {
                return IsSetUnderlyingInTheMoneyCondition();
            }

            public bool IsSetUnderlyingInTheMoneyCondition()
            {
                return IsSetField(Tags.UnderlyingInTheMoneyCondition);
            }
            public QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator UnderlyingContraryInstructionEligibilityIndicator
            {
                get
                {
                    QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val = new QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                this.UnderlyingContraryInstructionEligibilityIndicator = val;
            }

            public QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator Get(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingContraryInstructionEligibilityIndicator val)
            {
                return IsSetUnderlyingContraryInstructionEligibilityIndicator();
            }

            public bool IsSetUnderlyingContraryInstructionEligibilityIndicator()
            {
                return IsSetField(Tags.UnderlyingContraryInstructionEligibilityIndicator);
            }
            public QuickFix.Fields.UnderlyingFinancialInstrumentFullName UnderlyingFinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.UnderlyingFinancialInstrumentFullName val = new QuickFix.Fields.UnderlyingFinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                this.UnderlyingFinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.UnderlyingFinancialInstrumentFullName Get(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFinancialInstrumentFullName val)
            {
                return IsSetUnderlyingFinancialInstrumentFullName();
            }

            public bool IsSetUnderlyingFinancialInstrumentFullName()
            {
                return IsSetField(Tags.UnderlyingFinancialInstrumentFullName);
            }
            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen EncodedUnderlyingFinancialInstrumentFullNameLen
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val = new QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                this.EncodedUnderlyingFinancialInstrumentFullNameLen = val;
            }

            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen Get(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullNameLen val)
            {
                return IsSetEncodedUnderlyingFinancialInstrumentFullNameLen();
            }

            public bool IsSetEncodedUnderlyingFinancialInstrumentFullNameLen()
            {
                return IsSetField(Tags.EncodedUnderlyingFinancialInstrumentFullNameLen);
            }
            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName EncodedUnderlyingFinancialInstrumentFullName
            {
                get
                {
                    QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val = new QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                this.EncodedUnderlyingFinancialInstrumentFullName = val;
            }

            public QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName Get(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.EncodedUnderlyingFinancialInstrumentFullName val)
            {
                return IsSetEncodedUnderlyingFinancialInstrumentFullName();
            }

            public bool IsSetEncodedUnderlyingFinancialInstrumentFullName()
            {
                return IsSetField(Tags.EncodedUnderlyingFinancialInstrumentFullName);
            }
            public QuickFix.Fields.UnderlyingIndexCurveUnit UnderlyingIndexCurveUnit
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexCurveUnit val = new QuickFix.Fields.UnderlyingIndexCurveUnit();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                this.UnderlyingIndexCurveUnit = val;
            }

            public QuickFix.Fields.UnderlyingIndexCurveUnit Get(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexCurveUnit val)
            {
                return IsSetUnderlyingIndexCurveUnit();
            }

            public bool IsSetUnderlyingIndexCurveUnit()
            {
                return IsSetField(Tags.UnderlyingIndexCurveUnit);
            }
            public QuickFix.Fields.UnderlyingIndexCurvePeriod UnderlyingIndexCurvePeriod
            {
                get
                {
                    QuickFix.Fields.UnderlyingIndexCurvePeriod val = new QuickFix.Fields.UnderlyingIndexCurvePeriod();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                this.UnderlyingIndexCurvePeriod = val;
            }

            public QuickFix.Fields.UnderlyingIndexCurvePeriod Get(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingIndexCurvePeriod val)
            {
                return IsSetUnderlyingIndexCurvePeriod();
            }

            public bool IsSetUnderlyingIndexCurvePeriod()
            {
                return IsSetField(Tags.UnderlyingIndexCurvePeriod);
            }
            public QuickFix.Fields.UnderlyingAssetSubType UnderlyingAssetSubType
            {
                get
                {
                    QuickFix.Fields.UnderlyingAssetSubType val = new QuickFix.Fields.UnderlyingAssetSubType();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                this.UnderlyingAssetSubType = val;
            }

            public QuickFix.Fields.UnderlyingAssetSubType Get(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAssetSubType val)
            {
                return IsSetUnderlyingAssetSubType();
            }

            public bool IsSetUnderlyingAssetSubType()
            {
                return IsSetField(Tags.UnderlyingAssetSubType);
            }
            public QuickFix.Fields.UnderlyingFinancialInstrumentShortName UnderlyingFinancialInstrumentShortName
            {
                get
                {
                    QuickFix.Fields.UnderlyingFinancialInstrumentShortName val = new QuickFix.Fields.UnderlyingFinancialInstrumentShortName();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                this.UnderlyingFinancialInstrumentShortName = val;
            }

            public QuickFix.Fields.UnderlyingFinancialInstrumentShortName Get(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingFinancialInstrumentShortName val)
            {
                return IsSetUnderlyingFinancialInstrumentShortName();
            }

            public bool IsSetUnderlyingFinancialInstrumentShortName()
            {
                return IsSetField(Tags.UnderlyingFinancialInstrumentShortName);
            }
            public QuickFix.Fields.UnderlyingReturnTrigger UnderlyingReturnTrigger
            {
                get
                {
                    QuickFix.Fields.UnderlyingReturnTrigger val = new QuickFix.Fields.UnderlyingReturnTrigger();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                this.UnderlyingReturnTrigger = val;
            }

            public QuickFix.Fields.UnderlyingReturnTrigger Get(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingReturnTrigger val)
            {
                return IsSetUnderlyingReturnTrigger();
            }

            public bool IsSetUnderlyingReturnTrigger()
            {
                return IsSetField(Tags.UnderlyingReturnTrigger);
            }
            public QuickFix.Fields.UnderlyingDeliveryRouteOrCharter UnderlyingDeliveryRouteOrCharter
            {
                get
                {
                    QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val = new QuickFix.Fields.UnderlyingDeliveryRouteOrCharter();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                this.UnderlyingDeliveryRouteOrCharter = val;
            }

            public QuickFix.Fields.UnderlyingDeliveryRouteOrCharter Get(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryRouteOrCharter val)
            {
                return IsSetUnderlyingDeliveryRouteOrCharter();
            }

            public bool IsSetUnderlyingDeliveryRouteOrCharter()
            {
                return IsSetField(Tags.UnderlyingDeliveryRouteOrCharter);
            }
            public QuickFix.Fields.UnderlyingID UnderlyingID
            {
                get
                {
                    QuickFix.Fields.UnderlyingID val = new QuickFix.Fields.UnderlyingID();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingID val)
            {
                this.UnderlyingID = val;
            }

            public QuickFix.Fields.UnderlyingID Get(QuickFix.Fields.UnderlyingID val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingID val)
            {
                return IsSetUnderlyingID();
            }

            public bool IsSetUnderlyingID()
            {
                return IsSetField(Tags.UnderlyingID);
            }
            public QuickFix.Fields.UnderlyingCouponOtherDayCount UnderlyingCouponOtherDayCount
            {
                get
                {
                    QuickFix.Fields.UnderlyingCouponOtherDayCount val = new QuickFix.Fields.UnderlyingCouponOtherDayCount();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                this.UnderlyingCouponOtherDayCount = val;
            }

            public QuickFix.Fields.UnderlyingCouponOtherDayCount Get(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingCouponOtherDayCount val)
            {
                return IsSetUnderlyingCouponOtherDayCount();
            }

            public bool IsSetUnderlyingCouponOtherDayCount()
            {
                return IsSetField(Tags.UnderlyingCouponOtherDayCount);
            }
            public QuickFix.Fields.UnderlyingAccruedInterestAmt UnderlyingAccruedInterestAmt
            {
                get
                {
                    QuickFix.Fields.UnderlyingAccruedInterestAmt val = new QuickFix.Fields.UnderlyingAccruedInterestAmt();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                this.UnderlyingAccruedInterestAmt = val;
            }

            public QuickFix.Fields.UnderlyingAccruedInterestAmt Get(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingAccruedInterestAmt val)
            {
                return IsSetUnderlyingAccruedInterestAmt();
            }

            public bool IsSetUnderlyingAccruedInterestAmt()
            {
                return IsSetField(Tags.UnderlyingAccruedInterestAmt);
            }
            public QuickFix.Fields.UnderlyingNumDaysInterest UnderlyingNumDaysInterest
            {
                get
                {
                    QuickFix.Fields.UnderlyingNumDaysInterest val = new QuickFix.Fields.UnderlyingNumDaysInterest();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                this.UnderlyingNumDaysInterest = val;
            }

            public QuickFix.Fields.UnderlyingNumDaysInterest Get(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingNumDaysInterest val)
            {
                return IsSetUnderlyingNumDaysInterest();
            }

            public bool IsSetUnderlyingNumDaysInterest()
            {
                return IsSetField(Tags.UnderlyingNumDaysInterest);
            }
            public QuickFix.Fields.UnderlyingUPICode UnderlyingUPICode
            {
                get
                {
                    QuickFix.Fields.UnderlyingUPICode val = new QuickFix.Fields.UnderlyingUPICode();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.UnderlyingUPICode val)
            {
                this.UnderlyingUPICode = val;
            }

            public QuickFix.Fields.UnderlyingUPICode Get(QuickFix.Fields.UnderlyingUPICode val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.UnderlyingUPICode val)
            {
                return IsSetUnderlyingUPICode();
            }

            public bool IsSetUnderlyingUPICode()
            {
                return IsSetField(Tags.UnderlyingUPICode);
            }
            public QuickFix.Fields.Side Side
            {
                get
                {
                    QuickFix.Fields.Side val = new QuickFix.Fields.Side();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.Side val)
            {
                this.Side = val;
            }

            public QuickFix.Fields.Side Get(QuickFix.Fields.Side val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.Side val)
            {
                return IsSetSide();
            }

            public bool IsSetSide()
            {
                return IsSetField(Tags.Side);
            }
            public QuickFix.Fields.NoTargetPartyIDs NoTargetPartyIDs
            {
                get
                {
                    QuickFix.Fields.NoTargetPartyIDs val = new QuickFix.Fields.NoTargetPartyIDs();
                    GetField(val);
                    return val;
                }
                set { SetField(value); }
            }

            public void Set(QuickFix.Fields.NoTargetPartyIDs val)
            {
                this.NoTargetPartyIDs = val;
            }

            public QuickFix.Fields.NoTargetPartyIDs Get(QuickFix.Fields.NoTargetPartyIDs val)
            {
                GetField(val);
                return val;
            }

            public bool IsSet(QuickFix.Fields.NoTargetPartyIDs val)
            {
                return IsSetNoTargetPartyIDs();
            }

            public bool IsSetNoTargetPartyIDs()
            {
                return IsSetField(Tags.NoTargetPartyIDs);
            }
            public class NoPartyIDsGroup : Group
            {
                public static int[] fieldOrder = { Tags.PartyID, Tags.PartyIDSource, Tags.PartyRole, Tags.NoPartySubIDs, Tags.PartyRoleQualifier, 0 };

                public NoPartyIDsGroup()
                  : base(Tags.NoPartyIDs, Tags.PartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoPartyIDsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.PartyID PartyID
                {
                    get
                    {
                        QuickFix.Fields.PartyID val = new QuickFix.Fields.PartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PartyID val)
                {
                    this.PartyID = val;
                }

                public QuickFix.Fields.PartyID Get(QuickFix.Fields.PartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PartyID val)
                {
                    return IsSetPartyID();
                }

                public bool IsSetPartyID()
                {
                    return IsSetField(Tags.PartyID);
                }
                public QuickFix.Fields.PartyIDSource PartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.PartyIDSource val = new QuickFix.Fields.PartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PartyIDSource val)
                {
                    this.PartyIDSource = val;
                }

                public QuickFix.Fields.PartyIDSource Get(QuickFix.Fields.PartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PartyIDSource val)
                {
                    return IsSetPartyIDSource();
                }

                public bool IsSetPartyIDSource()
                {
                    return IsSetField(Tags.PartyIDSource);
                }
                public QuickFix.Fields.PartyRole PartyRole
                {
                    get
                    {
                        QuickFix.Fields.PartyRole val = new QuickFix.Fields.PartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PartyRole val)
                {
                    this.PartyRole = val;
                }

                public QuickFix.Fields.PartyRole Get(QuickFix.Fields.PartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PartyRole val)
                {
                    return IsSetPartyRole();
                }

                public bool IsSetPartyRole()
                {
                    return IsSetField(Tags.PartyRole);
                }
                public QuickFix.Fields.NoPartySubIDs NoPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoPartySubIDs val = new QuickFix.Fields.NoPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPartySubIDs val)
                {
                    this.NoPartySubIDs = val;
                }

                public QuickFix.Fields.NoPartySubIDs Get(QuickFix.Fields.NoPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPartySubIDs val)
                {
                    return IsSetNoPartySubIDs();
                }

                public bool IsSetNoPartySubIDs()
                {
                    return IsSetField(Tags.NoPartySubIDs);
                }
                public QuickFix.Fields.PartyRoleQualifier PartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.PartyRoleQualifier val = new QuickFix.Fields.PartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PartyRoleQualifier val)
                {
                    this.PartyRoleQualifier = val;
                }

                public QuickFix.Fields.PartyRoleQualifier Get(QuickFix.Fields.PartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PartyRoleQualifier val)
                {
                    return IsSetPartyRoleQualifier();
                }

                public bool IsSetPartyRoleQualifier()
                {
                    return IsSetField(Tags.PartyRoleQualifier);
                }
                public class NoPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PartySubID, Tags.PartySubIDType, 0 };

                    public NoPartySubIDsGroup()
                      : base(Tags.NoPartySubIDs, Tags.PartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PartySubID PartySubID
                    {
                        get
                        {
                            QuickFix.Fields.PartySubID val = new QuickFix.Fields.PartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PartySubID val)
                    {
                        this.PartySubID = val;
                    }

                    public QuickFix.Fields.PartySubID Get(QuickFix.Fields.PartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PartySubID val)
                    {
                        return IsSetPartySubID();
                    }

                    public bool IsSetPartySubID()
                    {
                        return IsSetField(Tags.PartySubID);
                    }
                    public QuickFix.Fields.PartySubIDType PartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.PartySubIDType val = new QuickFix.Fields.PartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PartySubIDType val)
                    {
                        this.PartySubIDType = val;
                    }

                    public QuickFix.Fields.PartySubIDType Get(QuickFix.Fields.PartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PartySubIDType val)
                    {
                        return IsSetPartySubIDType();
                    }

                    public bool IsSetPartySubIDType()
                    {
                        return IsSetField(Tags.PartySubIDType);
                    }

                }
            }
            public class NoSecurityAltIDGroup : Group
            {
                public static int[] fieldOrder = { Tags.SecurityAltID, Tags.SecurityAltIDSource, 0 };

                public NoSecurityAltIDGroup()
                  : base(Tags.NoSecurityAltID, Tags.SecurityAltID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoSecurityAltIDGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.SecurityAltID SecurityAltID
                {
                    get
                    {
                        QuickFix.Fields.SecurityAltID val = new QuickFix.Fields.SecurityAltID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecurityAltID val)
                {
                    this.SecurityAltID = val;
                }

                public QuickFix.Fields.SecurityAltID Get(QuickFix.Fields.SecurityAltID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecurityAltID val)
                {
                    return IsSetSecurityAltID();
                }

                public bool IsSetSecurityAltID()
                {
                    return IsSetField(Tags.SecurityAltID);
                }
                public QuickFix.Fields.SecurityAltIDSource SecurityAltIDSource
                {
                    get
                    {
                        QuickFix.Fields.SecurityAltIDSource val = new QuickFix.Fields.SecurityAltIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecurityAltIDSource val)
                {
                    this.SecurityAltIDSource = val;
                }

                public QuickFix.Fields.SecurityAltIDSource Get(QuickFix.Fields.SecurityAltIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecurityAltIDSource val)
                {
                    return IsSetSecurityAltIDSource();
                }

                public bool IsSetSecurityAltIDSource()
                {
                    return IsSetField(Tags.SecurityAltIDSource);
                }

            }
            public class NoEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.EventType, Tags.EventDate, Tags.EventTime, Tags.EventPx, Tags.EventText, Tags.EventTimeUnit, Tags.EventTimePeriod, Tags.EventMonthYear, Tags.EncodedEventTextLen, Tags.EncodedEventText, 0 };

                public NoEventsGroup()
                  : base(Tags.NoEvents, Tags.EventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.EventType EventType
                {
                    get
                    {
                        QuickFix.Fields.EventType val = new QuickFix.Fields.EventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventType val)
                {
                    this.EventType = val;
                }

                public QuickFix.Fields.EventType Get(QuickFix.Fields.EventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventType val)
                {
                    return IsSetEventType();
                }

                public bool IsSetEventType()
                {
                    return IsSetField(Tags.EventType);
                }
                public QuickFix.Fields.EventDate EventDate
                {
                    get
                    {
                        QuickFix.Fields.EventDate val = new QuickFix.Fields.EventDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventDate val)
                {
                    this.EventDate = val;
                }

                public QuickFix.Fields.EventDate Get(QuickFix.Fields.EventDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventDate val)
                {
                    return IsSetEventDate();
                }

                public bool IsSetEventDate()
                {
                    return IsSetField(Tags.EventDate);
                }
                public QuickFix.Fields.EventTime EventTime
                {
                    get
                    {
                        QuickFix.Fields.EventTime val = new QuickFix.Fields.EventTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventTime val)
                {
                    this.EventTime = val;
                }

                public QuickFix.Fields.EventTime Get(QuickFix.Fields.EventTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventTime val)
                {
                    return IsSetEventTime();
                }

                public bool IsSetEventTime()
                {
                    return IsSetField(Tags.EventTime);
                }
                public QuickFix.Fields.EventPx EventPx
                {
                    get
                    {
                        QuickFix.Fields.EventPx val = new QuickFix.Fields.EventPx();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventPx val)
                {
                    this.EventPx = val;
                }

                public QuickFix.Fields.EventPx Get(QuickFix.Fields.EventPx val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventPx val)
                {
                    return IsSetEventPx();
                }

                public bool IsSetEventPx()
                {
                    return IsSetField(Tags.EventPx);
                }
                public QuickFix.Fields.EventText EventText
                {
                    get
                    {
                        QuickFix.Fields.EventText val = new QuickFix.Fields.EventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventText val)
                {
                    this.EventText = val;
                }

                public QuickFix.Fields.EventText Get(QuickFix.Fields.EventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventText val)
                {
                    return IsSetEventText();
                }

                public bool IsSetEventText()
                {
                    return IsSetField(Tags.EventText);
                }
                public QuickFix.Fields.EventTimeUnit EventTimeUnit
                {
                    get
                    {
                        QuickFix.Fields.EventTimeUnit val = new QuickFix.Fields.EventTimeUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventTimeUnit val)
                {
                    this.EventTimeUnit = val;
                }

                public QuickFix.Fields.EventTimeUnit Get(QuickFix.Fields.EventTimeUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventTimeUnit val)
                {
                    return IsSetEventTimeUnit();
                }

                public bool IsSetEventTimeUnit()
                {
                    return IsSetField(Tags.EventTimeUnit);
                }
                public QuickFix.Fields.EventTimePeriod EventTimePeriod
                {
                    get
                    {
                        QuickFix.Fields.EventTimePeriod val = new QuickFix.Fields.EventTimePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventTimePeriod val)
                {
                    this.EventTimePeriod = val;
                }

                public QuickFix.Fields.EventTimePeriod Get(QuickFix.Fields.EventTimePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventTimePeriod val)
                {
                    return IsSetEventTimePeriod();
                }

                public bool IsSetEventTimePeriod()
                {
                    return IsSetField(Tags.EventTimePeriod);
                }
                public QuickFix.Fields.EventMonthYear EventMonthYear
                {
                    get
                    {
                        QuickFix.Fields.EventMonthYear val = new QuickFix.Fields.EventMonthYear();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EventMonthYear val)
                {
                    this.EventMonthYear = val;
                }

                public QuickFix.Fields.EventMonthYear Get(QuickFix.Fields.EventMonthYear val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EventMonthYear val)
                {
                    return IsSetEventMonthYear();
                }

                public bool IsSetEventMonthYear()
                {
                    return IsSetField(Tags.EventMonthYear);
                }
                public QuickFix.Fields.EncodedEventTextLen EncodedEventTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedEventTextLen val = new QuickFix.Fields.EncodedEventTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedEventTextLen val)
                {
                    this.EncodedEventTextLen = val;
                }

                public QuickFix.Fields.EncodedEventTextLen Get(QuickFix.Fields.EncodedEventTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedEventTextLen val)
                {
                    return IsSetEncodedEventTextLen();
                }

                public bool IsSetEncodedEventTextLen()
                {
                    return IsSetField(Tags.EncodedEventTextLen);
                }
                public QuickFix.Fields.EncodedEventText EncodedEventText
                {
                    get
                    {
                        QuickFix.Fields.EncodedEventText val = new QuickFix.Fields.EncodedEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedEventText val)
                {
                    this.EncodedEventText = val;
                }

                public QuickFix.Fields.EncodedEventText Get(QuickFix.Fields.EncodedEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedEventText val)
                {
                    return IsSetEncodedEventText();
                }

                public bool IsSetEncodedEventText()
                {
                    return IsSetField(Tags.EncodedEventText);
                }

            }
            public class NoInstrumentPartiesGroup : Group
            {
                public static int[] fieldOrder = { Tags.InstrumentPartyID, Tags.InstrumentPartyIDSource, Tags.InstrumentPartyRole, Tags.NoInstrumentPartySubIDs, Tags.InstrumentPartyRoleQualifier, 0 };

                public NoInstrumentPartiesGroup()
                  : base(Tags.NoInstrumentParties, Tags.InstrumentPartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoInstrumentPartiesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.InstrumentPartyID InstrumentPartyID
                {
                    get
                    {
                        QuickFix.Fields.InstrumentPartyID val = new QuickFix.Fields.InstrumentPartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.InstrumentPartyID val)
                {
                    this.InstrumentPartyID = val;
                }

                public QuickFix.Fields.InstrumentPartyID Get(QuickFix.Fields.InstrumentPartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.InstrumentPartyID val)
                {
                    return IsSetInstrumentPartyID();
                }

                public bool IsSetInstrumentPartyID()
                {
                    return IsSetField(Tags.InstrumentPartyID);
                }
                public QuickFix.Fields.InstrumentPartyIDSource InstrumentPartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.InstrumentPartyIDSource val = new QuickFix.Fields.InstrumentPartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.InstrumentPartyIDSource val)
                {
                    this.InstrumentPartyIDSource = val;
                }

                public QuickFix.Fields.InstrumentPartyIDSource Get(QuickFix.Fields.InstrumentPartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.InstrumentPartyIDSource val)
                {
                    return IsSetInstrumentPartyIDSource();
                }

                public bool IsSetInstrumentPartyIDSource()
                {
                    return IsSetField(Tags.InstrumentPartyIDSource);
                }
                public QuickFix.Fields.InstrumentPartyRole InstrumentPartyRole
                {
                    get
                    {
                        QuickFix.Fields.InstrumentPartyRole val = new QuickFix.Fields.InstrumentPartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.InstrumentPartyRole val)
                {
                    this.InstrumentPartyRole = val;
                }

                public QuickFix.Fields.InstrumentPartyRole Get(QuickFix.Fields.InstrumentPartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.InstrumentPartyRole val)
                {
                    return IsSetInstrumentPartyRole();
                }

                public bool IsSetInstrumentPartyRole()
                {
                    return IsSetField(Tags.InstrumentPartyRole);
                }
                public QuickFix.Fields.NoInstrumentPartySubIDs NoInstrumentPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoInstrumentPartySubIDs val = new QuickFix.Fields.NoInstrumentPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoInstrumentPartySubIDs val)
                {
                    this.NoInstrumentPartySubIDs = val;
                }

                public QuickFix.Fields.NoInstrumentPartySubIDs Get(QuickFix.Fields.NoInstrumentPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoInstrumentPartySubIDs val)
                {
                    return IsSetNoInstrumentPartySubIDs();
                }

                public bool IsSetNoInstrumentPartySubIDs()
                {
                    return IsSetField(Tags.NoInstrumentPartySubIDs);
                }
                public QuickFix.Fields.InstrumentPartyRoleQualifier InstrumentPartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.InstrumentPartyRoleQualifier val = new QuickFix.Fields.InstrumentPartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.InstrumentPartyRoleQualifier val)
                {
                    this.InstrumentPartyRoleQualifier = val;
                }

                public QuickFix.Fields.InstrumentPartyRoleQualifier Get(QuickFix.Fields.InstrumentPartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.InstrumentPartyRoleQualifier val)
                {
                    return IsSetInstrumentPartyRoleQualifier();
                }

                public bool IsSetInstrumentPartyRoleQualifier()
                {
                    return IsSetField(Tags.InstrumentPartyRoleQualifier);
                }
                public class NoInstrumentPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.InstrumentPartySubID, Tags.InstrumentPartySubIDType, 0 };

                    public NoInstrumentPartySubIDsGroup()
                      : base(Tags.NoInstrumentPartySubIDs, Tags.InstrumentPartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoInstrumentPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.InstrumentPartySubID InstrumentPartySubID
                    {
                        get
                        {
                            QuickFix.Fields.InstrumentPartySubID val = new QuickFix.Fields.InstrumentPartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.InstrumentPartySubID val)
                    {
                        this.InstrumentPartySubID = val;
                    }

                    public QuickFix.Fields.InstrumentPartySubID Get(QuickFix.Fields.InstrumentPartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.InstrumentPartySubID val)
                    {
                        return IsSetInstrumentPartySubID();
                    }

                    public bool IsSetInstrumentPartySubID()
                    {
                        return IsSetField(Tags.InstrumentPartySubID);
                    }
                    public QuickFix.Fields.InstrumentPartySubIDType InstrumentPartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.InstrumentPartySubIDType val = new QuickFix.Fields.InstrumentPartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.InstrumentPartySubIDType val)
                    {
                        this.InstrumentPartySubIDType = val;
                    }

                    public QuickFix.Fields.InstrumentPartySubIDType Get(QuickFix.Fields.InstrumentPartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.InstrumentPartySubIDType val)
                    {
                        return IsSetInstrumentPartySubIDType();
                    }

                    public bool IsSetInstrumentPartySubIDType()
                    {
                        return IsSetField(Tags.InstrumentPartySubIDType);
                    }

                }
            }
            public class NoComplexEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.ComplexEventType, Tags.ComplexOptPayoutAmount, Tags.ComplexEventPrice, Tags.ComplexEventPriceBoundaryMethod, Tags.ComplexEventPriceBoundaryPrecision, Tags.ComplexEventPriceTimeType, Tags.ComplexEventCondition, Tags.NoComplexEventDates, Tags.ComplexOptPayoutPaySide, Tags.ComplexOptPayoutReceiveSide, Tags.ComplexOptPayoutUnderlier, Tags.ComplexOptPayoutPercentage, Tags.ComplexOptPayoutTime, Tags.ComplexOptPayoutCurrency, Tags.ComplexEventPricePercentage, Tags.ComplexEventCurrencyOne, Tags.ComplexEventCurrencyTwo, Tags.ComplexEventQuoteBasis, Tags.ComplexEventFixedFXRate, Tags.ComplexEventDeterminationMethod, Tags.ComplexEventCalculationAgent, Tags.ComplexEventStrikePrice, Tags.ComplexEventStrikeFactor, Tags.ComplexEventStrikeNumberOfOptions, Tags.NoComplexEventRateSources, Tags.ComplexEventDateUnadjusted, Tags.ComplexEventDateRelativeTo, Tags.ComplexEventDateOffsetPeriod, Tags.ComplexEventDateOffsetUnit, Tags.ComplexEventDateOffsetDayType, Tags.ComplexEventDateBusinessDayConvention, Tags.NoComplexEventDateBusinessCenters, Tags.ComplexEventDateAdjusted, Tags.ComplexEventFixingTime, Tags.ComplexEventFixingTimeBusinessCenter, Tags.NoComplexEventPeriods, Tags.ComplexEventCreditEventsXIDRef, Tags.ComplexEventCreditEventNotifyingParty, Tags.ComplexEventCreditEventBusinessCenter, Tags.ComplexEventCreditEventStandardSources, Tags.ComplexEventCreditEventMinimumSources, Tags.NoComplexEventCreditEventSources, Tags.NoComplexEventCreditEvents, Tags.ComplexEventXID, Tags.ComplexEventXIDRef, Tags.ComplexEventSpotRate, Tags.ComplexEventForwardPoints, Tags.ComplexEventFuturesPriceValuation, Tags.ComplexEventOptionsPriceValuation, Tags.ComplexEventPVFinalPriceElectionFallback, 0 };

                public NoComplexEventsGroup()
                  : base(Tags.NoComplexEvents, Tags.ComplexEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoComplexEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.ComplexEventType ComplexEventType
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventType val = new QuickFix.Fields.ComplexEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventType val)
                {
                    this.ComplexEventType = val;
                }

                public QuickFix.Fields.ComplexEventType Get(QuickFix.Fields.ComplexEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventType val)
                {
                    return IsSetComplexEventType();
                }

                public bool IsSetComplexEventType()
                {
                    return IsSetField(Tags.ComplexEventType);
                }
                public QuickFix.Fields.ComplexOptPayoutAmount ComplexOptPayoutAmount
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutAmount val = new QuickFix.Fields.ComplexOptPayoutAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutAmount val)
                {
                    this.ComplexOptPayoutAmount = val;
                }

                public QuickFix.Fields.ComplexOptPayoutAmount Get(QuickFix.Fields.ComplexOptPayoutAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutAmount val)
                {
                    return IsSetComplexOptPayoutAmount();
                }

                public bool IsSetComplexOptPayoutAmount()
                {
                    return IsSetField(Tags.ComplexOptPayoutAmount);
                }
                public QuickFix.Fields.ComplexEventPrice ComplexEventPrice
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPrice val = new QuickFix.Fields.ComplexEventPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPrice val)
                {
                    this.ComplexEventPrice = val;
                }

                public QuickFix.Fields.ComplexEventPrice Get(QuickFix.Fields.ComplexEventPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPrice val)
                {
                    return IsSetComplexEventPrice();
                }

                public bool IsSetComplexEventPrice()
                {
                    return IsSetField(Tags.ComplexEventPrice);
                }
                public QuickFix.Fields.ComplexEventPriceBoundaryMethod ComplexEventPriceBoundaryMethod
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPriceBoundaryMethod val = new QuickFix.Fields.ComplexEventPriceBoundaryMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPriceBoundaryMethod val)
                {
                    this.ComplexEventPriceBoundaryMethod = val;
                }

                public QuickFix.Fields.ComplexEventPriceBoundaryMethod Get(QuickFix.Fields.ComplexEventPriceBoundaryMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPriceBoundaryMethod val)
                {
                    return IsSetComplexEventPriceBoundaryMethod();
                }

                public bool IsSetComplexEventPriceBoundaryMethod()
                {
                    return IsSetField(Tags.ComplexEventPriceBoundaryMethod);
                }
                public QuickFix.Fields.ComplexEventPriceBoundaryPrecision ComplexEventPriceBoundaryPrecision
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPriceBoundaryPrecision val = new QuickFix.Fields.ComplexEventPriceBoundaryPrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPriceBoundaryPrecision val)
                {
                    this.ComplexEventPriceBoundaryPrecision = val;
                }

                public QuickFix.Fields.ComplexEventPriceBoundaryPrecision Get(QuickFix.Fields.ComplexEventPriceBoundaryPrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPriceBoundaryPrecision val)
                {
                    return IsSetComplexEventPriceBoundaryPrecision();
                }

                public bool IsSetComplexEventPriceBoundaryPrecision()
                {
                    return IsSetField(Tags.ComplexEventPriceBoundaryPrecision);
                }
                public QuickFix.Fields.ComplexEventPriceTimeType ComplexEventPriceTimeType
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPriceTimeType val = new QuickFix.Fields.ComplexEventPriceTimeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPriceTimeType val)
                {
                    this.ComplexEventPriceTimeType = val;
                }

                public QuickFix.Fields.ComplexEventPriceTimeType Get(QuickFix.Fields.ComplexEventPriceTimeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPriceTimeType val)
                {
                    return IsSetComplexEventPriceTimeType();
                }

                public bool IsSetComplexEventPriceTimeType()
                {
                    return IsSetField(Tags.ComplexEventPriceTimeType);
                }
                public QuickFix.Fields.ComplexEventCondition ComplexEventCondition
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCondition val = new QuickFix.Fields.ComplexEventCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCondition val)
                {
                    this.ComplexEventCondition = val;
                }

                public QuickFix.Fields.ComplexEventCondition Get(QuickFix.Fields.ComplexEventCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCondition val)
                {
                    return IsSetComplexEventCondition();
                }

                public bool IsSetComplexEventCondition()
                {
                    return IsSetField(Tags.ComplexEventCondition);
                }
                public QuickFix.Fields.NoComplexEventDates NoComplexEventDates
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventDates val = new QuickFix.Fields.NoComplexEventDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventDates val)
                {
                    this.NoComplexEventDates = val;
                }

                public QuickFix.Fields.NoComplexEventDates Get(QuickFix.Fields.NoComplexEventDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventDates val)
                {
                    return IsSetNoComplexEventDates();
                }

                public bool IsSetNoComplexEventDates()
                {
                    return IsSetField(Tags.NoComplexEventDates);
                }
                public QuickFix.Fields.ComplexOptPayoutPaySide ComplexOptPayoutPaySide
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutPaySide val = new QuickFix.Fields.ComplexOptPayoutPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutPaySide val)
                {
                    this.ComplexOptPayoutPaySide = val;
                }

                public QuickFix.Fields.ComplexOptPayoutPaySide Get(QuickFix.Fields.ComplexOptPayoutPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutPaySide val)
                {
                    return IsSetComplexOptPayoutPaySide();
                }

                public bool IsSetComplexOptPayoutPaySide()
                {
                    return IsSetField(Tags.ComplexOptPayoutPaySide);
                }
                public QuickFix.Fields.ComplexOptPayoutReceiveSide ComplexOptPayoutReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutReceiveSide val = new QuickFix.Fields.ComplexOptPayoutReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutReceiveSide val)
                {
                    this.ComplexOptPayoutReceiveSide = val;
                }

                public QuickFix.Fields.ComplexOptPayoutReceiveSide Get(QuickFix.Fields.ComplexOptPayoutReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutReceiveSide val)
                {
                    return IsSetComplexOptPayoutReceiveSide();
                }

                public bool IsSetComplexOptPayoutReceiveSide()
                {
                    return IsSetField(Tags.ComplexOptPayoutReceiveSide);
                }
                public QuickFix.Fields.ComplexOptPayoutUnderlier ComplexOptPayoutUnderlier
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutUnderlier val = new QuickFix.Fields.ComplexOptPayoutUnderlier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutUnderlier val)
                {
                    this.ComplexOptPayoutUnderlier = val;
                }

                public QuickFix.Fields.ComplexOptPayoutUnderlier Get(QuickFix.Fields.ComplexOptPayoutUnderlier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutUnderlier val)
                {
                    return IsSetComplexOptPayoutUnderlier();
                }

                public bool IsSetComplexOptPayoutUnderlier()
                {
                    return IsSetField(Tags.ComplexOptPayoutUnderlier);
                }
                public QuickFix.Fields.ComplexOptPayoutPercentage ComplexOptPayoutPercentage
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutPercentage val = new QuickFix.Fields.ComplexOptPayoutPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutPercentage val)
                {
                    this.ComplexOptPayoutPercentage = val;
                }

                public QuickFix.Fields.ComplexOptPayoutPercentage Get(QuickFix.Fields.ComplexOptPayoutPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutPercentage val)
                {
                    return IsSetComplexOptPayoutPercentage();
                }

                public bool IsSetComplexOptPayoutPercentage()
                {
                    return IsSetField(Tags.ComplexOptPayoutPercentage);
                }
                public QuickFix.Fields.ComplexOptPayoutTime ComplexOptPayoutTime
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutTime val = new QuickFix.Fields.ComplexOptPayoutTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutTime val)
                {
                    this.ComplexOptPayoutTime = val;
                }

                public QuickFix.Fields.ComplexOptPayoutTime Get(QuickFix.Fields.ComplexOptPayoutTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutTime val)
                {
                    return IsSetComplexOptPayoutTime();
                }

                public bool IsSetComplexOptPayoutTime()
                {
                    return IsSetField(Tags.ComplexOptPayoutTime);
                }
                public QuickFix.Fields.ComplexOptPayoutCurrency ComplexOptPayoutCurrency
                {
                    get
                    {
                        QuickFix.Fields.ComplexOptPayoutCurrency val = new QuickFix.Fields.ComplexOptPayoutCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexOptPayoutCurrency val)
                {
                    this.ComplexOptPayoutCurrency = val;
                }

                public QuickFix.Fields.ComplexOptPayoutCurrency Get(QuickFix.Fields.ComplexOptPayoutCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexOptPayoutCurrency val)
                {
                    return IsSetComplexOptPayoutCurrency();
                }

                public bool IsSetComplexOptPayoutCurrency()
                {
                    return IsSetField(Tags.ComplexOptPayoutCurrency);
                }
                public QuickFix.Fields.ComplexEventPricePercentage ComplexEventPricePercentage
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPricePercentage val = new QuickFix.Fields.ComplexEventPricePercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPricePercentage val)
                {
                    this.ComplexEventPricePercentage = val;
                }

                public QuickFix.Fields.ComplexEventPricePercentage Get(QuickFix.Fields.ComplexEventPricePercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPricePercentage val)
                {
                    return IsSetComplexEventPricePercentage();
                }

                public bool IsSetComplexEventPricePercentage()
                {
                    return IsSetField(Tags.ComplexEventPricePercentage);
                }
                public QuickFix.Fields.ComplexEventCurrencyOne ComplexEventCurrencyOne
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCurrencyOne val = new QuickFix.Fields.ComplexEventCurrencyOne();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCurrencyOne val)
                {
                    this.ComplexEventCurrencyOne = val;
                }

                public QuickFix.Fields.ComplexEventCurrencyOne Get(QuickFix.Fields.ComplexEventCurrencyOne val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCurrencyOne val)
                {
                    return IsSetComplexEventCurrencyOne();
                }

                public bool IsSetComplexEventCurrencyOne()
                {
                    return IsSetField(Tags.ComplexEventCurrencyOne);
                }
                public QuickFix.Fields.ComplexEventCurrencyTwo ComplexEventCurrencyTwo
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCurrencyTwo val = new QuickFix.Fields.ComplexEventCurrencyTwo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCurrencyTwo val)
                {
                    this.ComplexEventCurrencyTwo = val;
                }

                public QuickFix.Fields.ComplexEventCurrencyTwo Get(QuickFix.Fields.ComplexEventCurrencyTwo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCurrencyTwo val)
                {
                    return IsSetComplexEventCurrencyTwo();
                }

                public bool IsSetComplexEventCurrencyTwo()
                {
                    return IsSetField(Tags.ComplexEventCurrencyTwo);
                }
                public QuickFix.Fields.ComplexEventQuoteBasis ComplexEventQuoteBasis
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventQuoteBasis val = new QuickFix.Fields.ComplexEventQuoteBasis();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventQuoteBasis val)
                {
                    this.ComplexEventQuoteBasis = val;
                }

                public QuickFix.Fields.ComplexEventQuoteBasis Get(QuickFix.Fields.ComplexEventQuoteBasis val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventQuoteBasis val)
                {
                    return IsSetComplexEventQuoteBasis();
                }

                public bool IsSetComplexEventQuoteBasis()
                {
                    return IsSetField(Tags.ComplexEventQuoteBasis);
                }
                public QuickFix.Fields.ComplexEventFixedFXRate ComplexEventFixedFXRate
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventFixedFXRate val = new QuickFix.Fields.ComplexEventFixedFXRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventFixedFXRate val)
                {
                    this.ComplexEventFixedFXRate = val;
                }

                public QuickFix.Fields.ComplexEventFixedFXRate Get(QuickFix.Fields.ComplexEventFixedFXRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventFixedFXRate val)
                {
                    return IsSetComplexEventFixedFXRate();
                }

                public bool IsSetComplexEventFixedFXRate()
                {
                    return IsSetField(Tags.ComplexEventFixedFXRate);
                }
                public QuickFix.Fields.ComplexEventDeterminationMethod ComplexEventDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDeterminationMethod val = new QuickFix.Fields.ComplexEventDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDeterminationMethod val)
                {
                    this.ComplexEventDeterminationMethod = val;
                }

                public QuickFix.Fields.ComplexEventDeterminationMethod Get(QuickFix.Fields.ComplexEventDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDeterminationMethod val)
                {
                    return IsSetComplexEventDeterminationMethod();
                }

                public bool IsSetComplexEventDeterminationMethod()
                {
                    return IsSetField(Tags.ComplexEventDeterminationMethod);
                }
                public QuickFix.Fields.ComplexEventCalculationAgent ComplexEventCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCalculationAgent val = new QuickFix.Fields.ComplexEventCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCalculationAgent val)
                {
                    this.ComplexEventCalculationAgent = val;
                }

                public QuickFix.Fields.ComplexEventCalculationAgent Get(QuickFix.Fields.ComplexEventCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCalculationAgent val)
                {
                    return IsSetComplexEventCalculationAgent();
                }

                public bool IsSetComplexEventCalculationAgent()
                {
                    return IsSetField(Tags.ComplexEventCalculationAgent);
                }
                public QuickFix.Fields.ComplexEventStrikePrice ComplexEventStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventStrikePrice val = new QuickFix.Fields.ComplexEventStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventStrikePrice val)
                {
                    this.ComplexEventStrikePrice = val;
                }

                public QuickFix.Fields.ComplexEventStrikePrice Get(QuickFix.Fields.ComplexEventStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventStrikePrice val)
                {
                    return IsSetComplexEventStrikePrice();
                }

                public bool IsSetComplexEventStrikePrice()
                {
                    return IsSetField(Tags.ComplexEventStrikePrice);
                }
                public QuickFix.Fields.ComplexEventStrikeFactor ComplexEventStrikeFactor
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventStrikeFactor val = new QuickFix.Fields.ComplexEventStrikeFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventStrikeFactor val)
                {
                    this.ComplexEventStrikeFactor = val;
                }

                public QuickFix.Fields.ComplexEventStrikeFactor Get(QuickFix.Fields.ComplexEventStrikeFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventStrikeFactor val)
                {
                    return IsSetComplexEventStrikeFactor();
                }

                public bool IsSetComplexEventStrikeFactor()
                {
                    return IsSetField(Tags.ComplexEventStrikeFactor);
                }
                public QuickFix.Fields.ComplexEventStrikeNumberOfOptions ComplexEventStrikeNumberOfOptions
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventStrikeNumberOfOptions val = new QuickFix.Fields.ComplexEventStrikeNumberOfOptions();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventStrikeNumberOfOptions val)
                {
                    this.ComplexEventStrikeNumberOfOptions = val;
                }

                public QuickFix.Fields.ComplexEventStrikeNumberOfOptions Get(QuickFix.Fields.ComplexEventStrikeNumberOfOptions val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventStrikeNumberOfOptions val)
                {
                    return IsSetComplexEventStrikeNumberOfOptions();
                }

                public bool IsSetComplexEventStrikeNumberOfOptions()
                {
                    return IsSetField(Tags.ComplexEventStrikeNumberOfOptions);
                }
                public QuickFix.Fields.NoComplexEventRateSources NoComplexEventRateSources
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventRateSources val = new QuickFix.Fields.NoComplexEventRateSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventRateSources val)
                {
                    this.NoComplexEventRateSources = val;
                }

                public QuickFix.Fields.NoComplexEventRateSources Get(QuickFix.Fields.NoComplexEventRateSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventRateSources val)
                {
                    return IsSetNoComplexEventRateSources();
                }

                public bool IsSetNoComplexEventRateSources()
                {
                    return IsSetField(Tags.NoComplexEventRateSources);
                }
                public QuickFix.Fields.ComplexEventDateUnadjusted ComplexEventDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateUnadjusted val = new QuickFix.Fields.ComplexEventDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateUnadjusted val)
                {
                    this.ComplexEventDateUnadjusted = val;
                }

                public QuickFix.Fields.ComplexEventDateUnadjusted Get(QuickFix.Fields.ComplexEventDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateUnadjusted val)
                {
                    return IsSetComplexEventDateUnadjusted();
                }

                public bool IsSetComplexEventDateUnadjusted()
                {
                    return IsSetField(Tags.ComplexEventDateUnadjusted);
                }
                public QuickFix.Fields.ComplexEventDateRelativeTo ComplexEventDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateRelativeTo val = new QuickFix.Fields.ComplexEventDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateRelativeTo val)
                {
                    this.ComplexEventDateRelativeTo = val;
                }

                public QuickFix.Fields.ComplexEventDateRelativeTo Get(QuickFix.Fields.ComplexEventDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateRelativeTo val)
                {
                    return IsSetComplexEventDateRelativeTo();
                }

                public bool IsSetComplexEventDateRelativeTo()
                {
                    return IsSetField(Tags.ComplexEventDateRelativeTo);
                }
                public QuickFix.Fields.ComplexEventDateOffsetPeriod ComplexEventDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateOffsetPeriod val = new QuickFix.Fields.ComplexEventDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateOffsetPeriod val)
                {
                    this.ComplexEventDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ComplexEventDateOffsetPeriod Get(QuickFix.Fields.ComplexEventDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateOffsetPeriod val)
                {
                    return IsSetComplexEventDateOffsetPeriod();
                }

                public bool IsSetComplexEventDateOffsetPeriod()
                {
                    return IsSetField(Tags.ComplexEventDateOffsetPeriod);
                }
                public QuickFix.Fields.ComplexEventDateOffsetUnit ComplexEventDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateOffsetUnit val = new QuickFix.Fields.ComplexEventDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateOffsetUnit val)
                {
                    this.ComplexEventDateOffsetUnit = val;
                }

                public QuickFix.Fields.ComplexEventDateOffsetUnit Get(QuickFix.Fields.ComplexEventDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateOffsetUnit val)
                {
                    return IsSetComplexEventDateOffsetUnit();
                }

                public bool IsSetComplexEventDateOffsetUnit()
                {
                    return IsSetField(Tags.ComplexEventDateOffsetUnit);
                }
                public QuickFix.Fields.ComplexEventDateOffsetDayType ComplexEventDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateOffsetDayType val = new QuickFix.Fields.ComplexEventDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateOffsetDayType val)
                {
                    this.ComplexEventDateOffsetDayType = val;
                }

                public QuickFix.Fields.ComplexEventDateOffsetDayType Get(QuickFix.Fields.ComplexEventDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateOffsetDayType val)
                {
                    return IsSetComplexEventDateOffsetDayType();
                }

                public bool IsSetComplexEventDateOffsetDayType()
                {
                    return IsSetField(Tags.ComplexEventDateOffsetDayType);
                }
                public QuickFix.Fields.ComplexEventDateBusinessDayConvention ComplexEventDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateBusinessDayConvention val = new QuickFix.Fields.ComplexEventDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateBusinessDayConvention val)
                {
                    this.ComplexEventDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ComplexEventDateBusinessDayConvention Get(QuickFix.Fields.ComplexEventDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateBusinessDayConvention val)
                {
                    return IsSetComplexEventDateBusinessDayConvention();
                }

                public bool IsSetComplexEventDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ComplexEventDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoComplexEventDateBusinessCenters NoComplexEventDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventDateBusinessCenters val = new QuickFix.Fields.NoComplexEventDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventDateBusinessCenters val)
                {
                    this.NoComplexEventDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoComplexEventDateBusinessCenters Get(QuickFix.Fields.NoComplexEventDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventDateBusinessCenters val)
                {
                    return IsSetNoComplexEventDateBusinessCenters();
                }

                public bool IsSetNoComplexEventDateBusinessCenters()
                {
                    return IsSetField(Tags.NoComplexEventDateBusinessCenters);
                }
                public QuickFix.Fields.ComplexEventDateAdjusted ComplexEventDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventDateAdjusted val = new QuickFix.Fields.ComplexEventDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventDateAdjusted val)
                {
                    this.ComplexEventDateAdjusted = val;
                }

                public QuickFix.Fields.ComplexEventDateAdjusted Get(QuickFix.Fields.ComplexEventDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventDateAdjusted val)
                {
                    return IsSetComplexEventDateAdjusted();
                }

                public bool IsSetComplexEventDateAdjusted()
                {
                    return IsSetField(Tags.ComplexEventDateAdjusted);
                }
                public QuickFix.Fields.ComplexEventFixingTime ComplexEventFixingTime
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventFixingTime val = new QuickFix.Fields.ComplexEventFixingTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventFixingTime val)
                {
                    this.ComplexEventFixingTime = val;
                }

                public QuickFix.Fields.ComplexEventFixingTime Get(QuickFix.Fields.ComplexEventFixingTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventFixingTime val)
                {
                    return IsSetComplexEventFixingTime();
                }

                public bool IsSetComplexEventFixingTime()
                {
                    return IsSetField(Tags.ComplexEventFixingTime);
                }
                public QuickFix.Fields.ComplexEventFixingTimeBusinessCenter ComplexEventFixingTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventFixingTimeBusinessCenter val = new QuickFix.Fields.ComplexEventFixingTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventFixingTimeBusinessCenter val)
                {
                    this.ComplexEventFixingTimeBusinessCenter = val;
                }

                public QuickFix.Fields.ComplexEventFixingTimeBusinessCenter Get(QuickFix.Fields.ComplexEventFixingTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventFixingTimeBusinessCenter val)
                {
                    return IsSetComplexEventFixingTimeBusinessCenter();
                }

                public bool IsSetComplexEventFixingTimeBusinessCenter()
                {
                    return IsSetField(Tags.ComplexEventFixingTimeBusinessCenter);
                }
                public QuickFix.Fields.NoComplexEventPeriods NoComplexEventPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventPeriods val = new QuickFix.Fields.NoComplexEventPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventPeriods val)
                {
                    this.NoComplexEventPeriods = val;
                }

                public QuickFix.Fields.NoComplexEventPeriods Get(QuickFix.Fields.NoComplexEventPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventPeriods val)
                {
                    return IsSetNoComplexEventPeriods();
                }

                public bool IsSetNoComplexEventPeriods()
                {
                    return IsSetField(Tags.NoComplexEventPeriods);
                }
                public QuickFix.Fields.ComplexEventCreditEventsXIDRef ComplexEventCreditEventsXIDRef
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCreditEventsXIDRef val = new QuickFix.Fields.ComplexEventCreditEventsXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCreditEventsXIDRef val)
                {
                    this.ComplexEventCreditEventsXIDRef = val;
                }

                public QuickFix.Fields.ComplexEventCreditEventsXIDRef Get(QuickFix.Fields.ComplexEventCreditEventsXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCreditEventsXIDRef val)
                {
                    return IsSetComplexEventCreditEventsXIDRef();
                }

                public bool IsSetComplexEventCreditEventsXIDRef()
                {
                    return IsSetField(Tags.ComplexEventCreditEventsXIDRef);
                }
                public QuickFix.Fields.ComplexEventCreditEventNotifyingParty ComplexEventCreditEventNotifyingParty
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCreditEventNotifyingParty val = new QuickFix.Fields.ComplexEventCreditEventNotifyingParty();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCreditEventNotifyingParty val)
                {
                    this.ComplexEventCreditEventNotifyingParty = val;
                }

                public QuickFix.Fields.ComplexEventCreditEventNotifyingParty Get(QuickFix.Fields.ComplexEventCreditEventNotifyingParty val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCreditEventNotifyingParty val)
                {
                    return IsSetComplexEventCreditEventNotifyingParty();
                }

                public bool IsSetComplexEventCreditEventNotifyingParty()
                {
                    return IsSetField(Tags.ComplexEventCreditEventNotifyingParty);
                }
                public QuickFix.Fields.ComplexEventCreditEventBusinessCenter ComplexEventCreditEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCreditEventBusinessCenter val = new QuickFix.Fields.ComplexEventCreditEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCreditEventBusinessCenter val)
                {
                    this.ComplexEventCreditEventBusinessCenter = val;
                }

                public QuickFix.Fields.ComplexEventCreditEventBusinessCenter Get(QuickFix.Fields.ComplexEventCreditEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCreditEventBusinessCenter val)
                {
                    return IsSetComplexEventCreditEventBusinessCenter();
                }

                public bool IsSetComplexEventCreditEventBusinessCenter()
                {
                    return IsSetField(Tags.ComplexEventCreditEventBusinessCenter);
                }
                public QuickFix.Fields.ComplexEventCreditEventStandardSources ComplexEventCreditEventStandardSources
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCreditEventStandardSources val = new QuickFix.Fields.ComplexEventCreditEventStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCreditEventStandardSources val)
                {
                    this.ComplexEventCreditEventStandardSources = val;
                }

                public QuickFix.Fields.ComplexEventCreditEventStandardSources Get(QuickFix.Fields.ComplexEventCreditEventStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCreditEventStandardSources val)
                {
                    return IsSetComplexEventCreditEventStandardSources();
                }

                public bool IsSetComplexEventCreditEventStandardSources()
                {
                    return IsSetField(Tags.ComplexEventCreditEventStandardSources);
                }
                public QuickFix.Fields.ComplexEventCreditEventMinimumSources ComplexEventCreditEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventCreditEventMinimumSources val = new QuickFix.Fields.ComplexEventCreditEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventCreditEventMinimumSources val)
                {
                    this.ComplexEventCreditEventMinimumSources = val;
                }

                public QuickFix.Fields.ComplexEventCreditEventMinimumSources Get(QuickFix.Fields.ComplexEventCreditEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventCreditEventMinimumSources val)
                {
                    return IsSetComplexEventCreditEventMinimumSources();
                }

                public bool IsSetComplexEventCreditEventMinimumSources()
                {
                    return IsSetField(Tags.ComplexEventCreditEventMinimumSources);
                }
                public QuickFix.Fields.NoComplexEventCreditEventSources NoComplexEventCreditEventSources
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventCreditEventSources val = new QuickFix.Fields.NoComplexEventCreditEventSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventCreditEventSources val)
                {
                    this.NoComplexEventCreditEventSources = val;
                }

                public QuickFix.Fields.NoComplexEventCreditEventSources Get(QuickFix.Fields.NoComplexEventCreditEventSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventCreditEventSources val)
                {
                    return IsSetNoComplexEventCreditEventSources();
                }

                public bool IsSetNoComplexEventCreditEventSources()
                {
                    return IsSetField(Tags.NoComplexEventCreditEventSources);
                }
                public QuickFix.Fields.NoComplexEventCreditEvents NoComplexEventCreditEvents
                {
                    get
                    {
                        QuickFix.Fields.NoComplexEventCreditEvents val = new QuickFix.Fields.NoComplexEventCreditEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoComplexEventCreditEvents val)
                {
                    this.NoComplexEventCreditEvents = val;
                }

                public QuickFix.Fields.NoComplexEventCreditEvents Get(QuickFix.Fields.NoComplexEventCreditEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoComplexEventCreditEvents val)
                {
                    return IsSetNoComplexEventCreditEvents();
                }

                public bool IsSetNoComplexEventCreditEvents()
                {
                    return IsSetField(Tags.NoComplexEventCreditEvents);
                }
                public QuickFix.Fields.ComplexEventXID ComplexEventXID
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventXID val = new QuickFix.Fields.ComplexEventXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventXID val)
                {
                    this.ComplexEventXID = val;
                }

                public QuickFix.Fields.ComplexEventXID Get(QuickFix.Fields.ComplexEventXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventXID val)
                {
                    return IsSetComplexEventXID();
                }

                public bool IsSetComplexEventXID()
                {
                    return IsSetField(Tags.ComplexEventXID);
                }
                public QuickFix.Fields.ComplexEventXIDRef ComplexEventXIDRef
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventXIDRef val = new QuickFix.Fields.ComplexEventXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventXIDRef val)
                {
                    this.ComplexEventXIDRef = val;
                }

                public QuickFix.Fields.ComplexEventXIDRef Get(QuickFix.Fields.ComplexEventXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventXIDRef val)
                {
                    return IsSetComplexEventXIDRef();
                }

                public bool IsSetComplexEventXIDRef()
                {
                    return IsSetField(Tags.ComplexEventXIDRef);
                }
                public QuickFix.Fields.ComplexEventSpotRate ComplexEventSpotRate
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventSpotRate val = new QuickFix.Fields.ComplexEventSpotRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventSpotRate val)
                {
                    this.ComplexEventSpotRate = val;
                }

                public QuickFix.Fields.ComplexEventSpotRate Get(QuickFix.Fields.ComplexEventSpotRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventSpotRate val)
                {
                    return IsSetComplexEventSpotRate();
                }

                public bool IsSetComplexEventSpotRate()
                {
                    return IsSetField(Tags.ComplexEventSpotRate);
                }
                public QuickFix.Fields.ComplexEventForwardPoints ComplexEventForwardPoints
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventForwardPoints val = new QuickFix.Fields.ComplexEventForwardPoints();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventForwardPoints val)
                {
                    this.ComplexEventForwardPoints = val;
                }

                public QuickFix.Fields.ComplexEventForwardPoints Get(QuickFix.Fields.ComplexEventForwardPoints val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventForwardPoints val)
                {
                    return IsSetComplexEventForwardPoints();
                }

                public bool IsSetComplexEventForwardPoints()
                {
                    return IsSetField(Tags.ComplexEventForwardPoints);
                }
                public QuickFix.Fields.ComplexEventFuturesPriceValuation ComplexEventFuturesPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventFuturesPriceValuation val = new QuickFix.Fields.ComplexEventFuturesPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventFuturesPriceValuation val)
                {
                    this.ComplexEventFuturesPriceValuation = val;
                }

                public QuickFix.Fields.ComplexEventFuturesPriceValuation Get(QuickFix.Fields.ComplexEventFuturesPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventFuturesPriceValuation val)
                {
                    return IsSetComplexEventFuturesPriceValuation();
                }

                public bool IsSetComplexEventFuturesPriceValuation()
                {
                    return IsSetField(Tags.ComplexEventFuturesPriceValuation);
                }
                public QuickFix.Fields.ComplexEventOptionsPriceValuation ComplexEventOptionsPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventOptionsPriceValuation val = new QuickFix.Fields.ComplexEventOptionsPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventOptionsPriceValuation val)
                {
                    this.ComplexEventOptionsPriceValuation = val;
                }

                public QuickFix.Fields.ComplexEventOptionsPriceValuation Get(QuickFix.Fields.ComplexEventOptionsPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventOptionsPriceValuation val)
                {
                    return IsSetComplexEventOptionsPriceValuation();
                }

                public bool IsSetComplexEventOptionsPriceValuation()
                {
                    return IsSetField(Tags.ComplexEventOptionsPriceValuation);
                }
                public QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback ComplexEventPVFinalPriceElectionFallback
                {
                    get
                    {
                        QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback val = new QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback val)
                {
                    this.ComplexEventPVFinalPriceElectionFallback = val;
                }

                public QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback Get(QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ComplexEventPVFinalPriceElectionFallback val)
                {
                    return IsSetComplexEventPVFinalPriceElectionFallback();
                }

                public bool IsSetComplexEventPVFinalPriceElectionFallback()
                {
                    return IsSetField(Tags.ComplexEventPVFinalPriceElectionFallback);
                }
                public class NoComplexEventDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventStartDate, Tags.ComplexEventEndDate, Tags.NoComplexEventTimes, 0 };

                    public NoComplexEventDatesGroup()
                      : base(Tags.NoComplexEventDates, Tags.ComplexEventStartDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventStartDate ComplexEventStartDate
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventStartDate val = new QuickFix.Fields.ComplexEventStartDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventStartDate val)
                    {
                        this.ComplexEventStartDate = val;
                    }

                    public QuickFix.Fields.ComplexEventStartDate Get(QuickFix.Fields.ComplexEventStartDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventStartDate val)
                    {
                        return IsSetComplexEventStartDate();
                    }

                    public bool IsSetComplexEventStartDate()
                    {
                        return IsSetField(Tags.ComplexEventStartDate);
                    }
                    public QuickFix.Fields.ComplexEventEndDate ComplexEventEndDate
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventEndDate val = new QuickFix.Fields.ComplexEventEndDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventEndDate val)
                    {
                        this.ComplexEventEndDate = val;
                    }

                    public QuickFix.Fields.ComplexEventEndDate Get(QuickFix.Fields.ComplexEventEndDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventEndDate val)
                    {
                        return IsSetComplexEventEndDate();
                    }

                    public bool IsSetComplexEventEndDate()
                    {
                        return IsSetField(Tags.ComplexEventEndDate);
                    }
                    public QuickFix.Fields.NoComplexEventTimes NoComplexEventTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoComplexEventTimes val = new QuickFix.Fields.NoComplexEventTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoComplexEventTimes val)
                    {
                        this.NoComplexEventTimes = val;
                    }

                    public QuickFix.Fields.NoComplexEventTimes Get(QuickFix.Fields.NoComplexEventTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoComplexEventTimes val)
                    {
                        return IsSetNoComplexEventTimes();
                    }

                    public bool IsSetNoComplexEventTimes()
                    {
                        return IsSetField(Tags.NoComplexEventTimes);
                    }
                    public class NoComplexEventTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ComplexEventStartTime, Tags.ComplexEventEndTime, 0 };

                        public NoComplexEventTimesGroup()
                          : base(Tags.NoComplexEventTimes, Tags.ComplexEventStartTime, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoComplexEventTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ComplexEventStartTime ComplexEventStartTime
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventStartTime val = new QuickFix.Fields.ComplexEventStartTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventStartTime val)
                        {
                            this.ComplexEventStartTime = val;
                        }

                        public QuickFix.Fields.ComplexEventStartTime Get(QuickFix.Fields.ComplexEventStartTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventStartTime val)
                        {
                            return IsSetComplexEventStartTime();
                        }

                        public bool IsSetComplexEventStartTime()
                        {
                            return IsSetField(Tags.ComplexEventStartTime);
                        }
                        public QuickFix.Fields.ComplexEventEndTime ComplexEventEndTime
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventEndTime val = new QuickFix.Fields.ComplexEventEndTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventEndTime val)
                        {
                            this.ComplexEventEndTime = val;
                        }

                        public QuickFix.Fields.ComplexEventEndTime Get(QuickFix.Fields.ComplexEventEndTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventEndTime val)
                        {
                            return IsSetComplexEventEndTime();
                        }

                        public bool IsSetComplexEventEndTime()
                        {
                            return IsSetField(Tags.ComplexEventEndTime);
                        }

                    }
                }
                public class NoComplexEventRateSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventRateSource, Tags.ComplexEventRateSourceType, Tags.ComplexEventReferencePage, Tags.ComplexEventReferencePageHeading, 0 };

                    public NoComplexEventRateSourcesGroup()
                      : base(Tags.NoComplexEventRateSources, Tags.ComplexEventRateSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventRateSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventRateSource ComplexEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventRateSource val = new QuickFix.Fields.ComplexEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventRateSource val)
                    {
                        this.ComplexEventRateSource = val;
                    }

                    public QuickFix.Fields.ComplexEventRateSource Get(QuickFix.Fields.ComplexEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventRateSource val)
                    {
                        return IsSetComplexEventRateSource();
                    }

                    public bool IsSetComplexEventRateSource()
                    {
                        return IsSetField(Tags.ComplexEventRateSource);
                    }
                    public QuickFix.Fields.ComplexEventRateSourceType ComplexEventRateSourceType
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventRateSourceType val = new QuickFix.Fields.ComplexEventRateSourceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventRateSourceType val)
                    {
                        this.ComplexEventRateSourceType = val;
                    }

                    public QuickFix.Fields.ComplexEventRateSourceType Get(QuickFix.Fields.ComplexEventRateSourceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventRateSourceType val)
                    {
                        return IsSetComplexEventRateSourceType();
                    }

                    public bool IsSetComplexEventRateSourceType()
                    {
                        return IsSetField(Tags.ComplexEventRateSourceType);
                    }
                    public QuickFix.Fields.ComplexEventReferencePage ComplexEventReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventReferencePage val = new QuickFix.Fields.ComplexEventReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventReferencePage val)
                    {
                        this.ComplexEventReferencePage = val;
                    }

                    public QuickFix.Fields.ComplexEventReferencePage Get(QuickFix.Fields.ComplexEventReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventReferencePage val)
                    {
                        return IsSetComplexEventReferencePage();
                    }

                    public bool IsSetComplexEventReferencePage()
                    {
                        return IsSetField(Tags.ComplexEventReferencePage);
                    }
                    public QuickFix.Fields.ComplexEventReferencePageHeading ComplexEventReferencePageHeading
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventReferencePageHeading val = new QuickFix.Fields.ComplexEventReferencePageHeading();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventReferencePageHeading val)
                    {
                        this.ComplexEventReferencePageHeading = val;
                    }

                    public QuickFix.Fields.ComplexEventReferencePageHeading Get(QuickFix.Fields.ComplexEventReferencePageHeading val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventReferencePageHeading val)
                    {
                        return IsSetComplexEventReferencePageHeading();
                    }

                    public bool IsSetComplexEventReferencePageHeading()
                    {
                        return IsSetField(Tags.ComplexEventReferencePageHeading);
                    }

                }
                public class NoComplexEventDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventDateBusinessCenter, 0 };

                    public NoComplexEventDateBusinessCentersGroup()
                      : base(Tags.NoComplexEventDateBusinessCenters, Tags.ComplexEventDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventDateBusinessCenter ComplexEventDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventDateBusinessCenter val = new QuickFix.Fields.ComplexEventDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventDateBusinessCenter val)
                    {
                        this.ComplexEventDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ComplexEventDateBusinessCenter Get(QuickFix.Fields.ComplexEventDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventDateBusinessCenter val)
                    {
                        return IsSetComplexEventDateBusinessCenter();
                    }

                    public bool IsSetComplexEventDateBusinessCenter()
                    {
                        return IsSetField(Tags.ComplexEventDateBusinessCenter);
                    }

                }
                public class NoComplexEventPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventPeriodType, Tags.ComplexEventBusinessCenter, Tags.NoComplexEventSchedules, Tags.NoComplexEventPeriodDateTimes, Tags.NoComplexEventAveragingObservations, 0 };

                    public NoComplexEventPeriodsGroup()
                      : base(Tags.NoComplexEventPeriods, Tags.ComplexEventPeriodType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventPeriodType ComplexEventPeriodType
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventPeriodType val = new QuickFix.Fields.ComplexEventPeriodType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventPeriodType val)
                    {
                        this.ComplexEventPeriodType = val;
                    }

                    public QuickFix.Fields.ComplexEventPeriodType Get(QuickFix.Fields.ComplexEventPeriodType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventPeriodType val)
                    {
                        return IsSetComplexEventPeriodType();
                    }

                    public bool IsSetComplexEventPeriodType()
                    {
                        return IsSetField(Tags.ComplexEventPeriodType);
                    }
                    public QuickFix.Fields.ComplexEventBusinessCenter ComplexEventBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventBusinessCenter val = new QuickFix.Fields.ComplexEventBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventBusinessCenter val)
                    {
                        this.ComplexEventBusinessCenter = val;
                    }

                    public QuickFix.Fields.ComplexEventBusinessCenter Get(QuickFix.Fields.ComplexEventBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventBusinessCenter val)
                    {
                        return IsSetComplexEventBusinessCenter();
                    }

                    public bool IsSetComplexEventBusinessCenter()
                    {
                        return IsSetField(Tags.ComplexEventBusinessCenter);
                    }
                    public QuickFix.Fields.NoComplexEventSchedules NoComplexEventSchedules
                    {
                        get
                        {
                            QuickFix.Fields.NoComplexEventSchedules val = new QuickFix.Fields.NoComplexEventSchedules();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoComplexEventSchedules val)
                    {
                        this.NoComplexEventSchedules = val;
                    }

                    public QuickFix.Fields.NoComplexEventSchedules Get(QuickFix.Fields.NoComplexEventSchedules val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoComplexEventSchedules val)
                    {
                        return IsSetNoComplexEventSchedules();
                    }

                    public bool IsSetNoComplexEventSchedules()
                    {
                        return IsSetField(Tags.NoComplexEventSchedules);
                    }
                    public QuickFix.Fields.NoComplexEventPeriodDateTimes NoComplexEventPeriodDateTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoComplexEventPeriodDateTimes val = new QuickFix.Fields.NoComplexEventPeriodDateTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoComplexEventPeriodDateTimes val)
                    {
                        this.NoComplexEventPeriodDateTimes = val;
                    }

                    public QuickFix.Fields.NoComplexEventPeriodDateTimes Get(QuickFix.Fields.NoComplexEventPeriodDateTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoComplexEventPeriodDateTimes val)
                    {
                        return IsSetNoComplexEventPeriodDateTimes();
                    }

                    public bool IsSetNoComplexEventPeriodDateTimes()
                    {
                        return IsSetField(Tags.NoComplexEventPeriodDateTimes);
                    }
                    public QuickFix.Fields.NoComplexEventAveragingObservations NoComplexEventAveragingObservations
                    {
                        get
                        {
                            QuickFix.Fields.NoComplexEventAveragingObservations val = new QuickFix.Fields.NoComplexEventAveragingObservations();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoComplexEventAveragingObservations val)
                    {
                        this.NoComplexEventAveragingObservations = val;
                    }

                    public QuickFix.Fields.NoComplexEventAveragingObservations Get(QuickFix.Fields.NoComplexEventAveragingObservations val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoComplexEventAveragingObservations val)
                    {
                        return IsSetNoComplexEventAveragingObservations();
                    }

                    public bool IsSetNoComplexEventAveragingObservations()
                    {
                        return IsSetField(Tags.NoComplexEventAveragingObservations);
                    }
                    public class NoComplexEventSchedulesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ComplexEventScheduleStartDate, Tags.ComplexEventScheduleEndDate, Tags.ComplexEventScheduleFrequencyPeriod, Tags.ComplexEventScheduleFrequencyUnit, Tags.ComplexEventScheduleRollConvention, 0 };

                        public NoComplexEventSchedulesGroup()
                          : base(Tags.NoComplexEventSchedules, Tags.ComplexEventScheduleStartDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoComplexEventSchedulesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ComplexEventScheduleStartDate ComplexEventScheduleStartDate
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventScheduleStartDate val = new QuickFix.Fields.ComplexEventScheduleStartDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventScheduleStartDate val)
                        {
                            this.ComplexEventScheduleStartDate = val;
                        }

                        public QuickFix.Fields.ComplexEventScheduleStartDate Get(QuickFix.Fields.ComplexEventScheduleStartDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventScheduleStartDate val)
                        {
                            return IsSetComplexEventScheduleStartDate();
                        }

                        public bool IsSetComplexEventScheduleStartDate()
                        {
                            return IsSetField(Tags.ComplexEventScheduleStartDate);
                        }
                        public QuickFix.Fields.ComplexEventScheduleEndDate ComplexEventScheduleEndDate
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventScheduleEndDate val = new QuickFix.Fields.ComplexEventScheduleEndDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventScheduleEndDate val)
                        {
                            this.ComplexEventScheduleEndDate = val;
                        }

                        public QuickFix.Fields.ComplexEventScheduleEndDate Get(QuickFix.Fields.ComplexEventScheduleEndDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventScheduleEndDate val)
                        {
                            return IsSetComplexEventScheduleEndDate();
                        }

                        public bool IsSetComplexEventScheduleEndDate()
                        {
                            return IsSetField(Tags.ComplexEventScheduleEndDate);
                        }
                        public QuickFix.Fields.ComplexEventScheduleFrequencyPeriod ComplexEventScheduleFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventScheduleFrequencyPeriod val = new QuickFix.Fields.ComplexEventScheduleFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventScheduleFrequencyPeriod val)
                        {
                            this.ComplexEventScheduleFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.ComplexEventScheduleFrequencyPeriod Get(QuickFix.Fields.ComplexEventScheduleFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventScheduleFrequencyPeriod val)
                        {
                            return IsSetComplexEventScheduleFrequencyPeriod();
                        }

                        public bool IsSetComplexEventScheduleFrequencyPeriod()
                        {
                            return IsSetField(Tags.ComplexEventScheduleFrequencyPeriod);
                        }
                        public QuickFix.Fields.ComplexEventScheduleFrequencyUnit ComplexEventScheduleFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventScheduleFrequencyUnit val = new QuickFix.Fields.ComplexEventScheduleFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventScheduleFrequencyUnit val)
                        {
                            this.ComplexEventScheduleFrequencyUnit = val;
                        }

                        public QuickFix.Fields.ComplexEventScheduleFrequencyUnit Get(QuickFix.Fields.ComplexEventScheduleFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventScheduleFrequencyUnit val)
                        {
                            return IsSetComplexEventScheduleFrequencyUnit();
                        }

                        public bool IsSetComplexEventScheduleFrequencyUnit()
                        {
                            return IsSetField(Tags.ComplexEventScheduleFrequencyUnit);
                        }
                        public QuickFix.Fields.ComplexEventScheduleRollConvention ComplexEventScheduleRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventScheduleRollConvention val = new QuickFix.Fields.ComplexEventScheduleRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventScheduleRollConvention val)
                        {
                            this.ComplexEventScheduleRollConvention = val;
                        }

                        public QuickFix.Fields.ComplexEventScheduleRollConvention Get(QuickFix.Fields.ComplexEventScheduleRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventScheduleRollConvention val)
                        {
                            return IsSetComplexEventScheduleRollConvention();
                        }

                        public bool IsSetComplexEventScheduleRollConvention()
                        {
                            return IsSetField(Tags.ComplexEventScheduleRollConvention);
                        }

                    }
                    public class NoComplexEventPeriodDateTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ComplexEventPeriodDate, Tags.ComplexEventPeriodTime, 0 };

                        public NoComplexEventPeriodDateTimesGroup()
                          : base(Tags.NoComplexEventPeriodDateTimes, Tags.ComplexEventPeriodDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoComplexEventPeriodDateTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ComplexEventPeriodDate ComplexEventPeriodDate
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventPeriodDate val = new QuickFix.Fields.ComplexEventPeriodDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventPeriodDate val)
                        {
                            this.ComplexEventPeriodDate = val;
                        }

                        public QuickFix.Fields.ComplexEventPeriodDate Get(QuickFix.Fields.ComplexEventPeriodDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventPeriodDate val)
                        {
                            return IsSetComplexEventPeriodDate();
                        }

                        public bool IsSetComplexEventPeriodDate()
                        {
                            return IsSetField(Tags.ComplexEventPeriodDate);
                        }
                        public QuickFix.Fields.ComplexEventPeriodTime ComplexEventPeriodTime
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventPeriodTime val = new QuickFix.Fields.ComplexEventPeriodTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventPeriodTime val)
                        {
                            this.ComplexEventPeriodTime = val;
                        }

                        public QuickFix.Fields.ComplexEventPeriodTime Get(QuickFix.Fields.ComplexEventPeriodTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventPeriodTime val)
                        {
                            return IsSetComplexEventPeriodTime();
                        }

                        public bool IsSetComplexEventPeriodTime()
                        {
                            return IsSetField(Tags.ComplexEventPeriodTime);
                        }

                    }
                    public class NoComplexEventAveragingObservationsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ComplexEventAveragingObservationNumber, Tags.ComplexEventAveragingWeight, 0 };

                        public NoComplexEventAveragingObservationsGroup()
                          : base(Tags.NoComplexEventAveragingObservations, Tags.ComplexEventAveragingObservationNumber, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoComplexEventAveragingObservationsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ComplexEventAveragingObservationNumber ComplexEventAveragingObservationNumber
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventAveragingObservationNumber val = new QuickFix.Fields.ComplexEventAveragingObservationNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventAveragingObservationNumber val)
                        {
                            this.ComplexEventAveragingObservationNumber = val;
                        }

                        public QuickFix.Fields.ComplexEventAveragingObservationNumber Get(QuickFix.Fields.ComplexEventAveragingObservationNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventAveragingObservationNumber val)
                        {
                            return IsSetComplexEventAveragingObservationNumber();
                        }

                        public bool IsSetComplexEventAveragingObservationNumber()
                        {
                            return IsSetField(Tags.ComplexEventAveragingObservationNumber);
                        }
                        public QuickFix.Fields.ComplexEventAveragingWeight ComplexEventAveragingWeight
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventAveragingWeight val = new QuickFix.Fields.ComplexEventAveragingWeight();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventAveragingWeight val)
                        {
                            this.ComplexEventAveragingWeight = val;
                        }

                        public QuickFix.Fields.ComplexEventAveragingWeight Get(QuickFix.Fields.ComplexEventAveragingWeight val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventAveragingWeight val)
                        {
                            return IsSetComplexEventAveragingWeight();
                        }

                        public bool IsSetComplexEventAveragingWeight()
                        {
                            return IsSetField(Tags.ComplexEventAveragingWeight);
                        }

                    }
                }
                public class NoComplexEventCreditEventSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventCreditEventSource, 0 };

                    public NoComplexEventCreditEventSourcesGroup()
                      : base(Tags.NoComplexEventCreditEventSources, Tags.ComplexEventCreditEventSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventCreditEventSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventSource ComplexEventCreditEventSource
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventSource val = new QuickFix.Fields.ComplexEventCreditEventSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventSource val)
                    {
                        this.ComplexEventCreditEventSource = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventSource Get(QuickFix.Fields.ComplexEventCreditEventSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventSource val)
                    {
                        return IsSetComplexEventCreditEventSource();
                    }

                    public bool IsSetComplexEventCreditEventSource()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventSource);
                    }

                }
                public class NoComplexEventCreditEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ComplexEventCreditEventType, Tags.ComplexEventCreditEventValue, Tags.ComplexEventCreditEventCurrency, Tags.ComplexEventCreditEventPeriod, Tags.ComplexEventCreditEventUnit, Tags.ComplexEventCreditEventDayType, Tags.ComplexEventCreditEventRateSource, Tags.NoComplexEventCreditEventQualifiers, 0 };

                    public NoComplexEventCreditEventsGroup()
                      : base(Tags.NoComplexEventCreditEvents, Tags.ComplexEventCreditEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoComplexEventCreditEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventType ComplexEventCreditEventType
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventType val = new QuickFix.Fields.ComplexEventCreditEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventType val)
                    {
                        this.ComplexEventCreditEventType = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventType Get(QuickFix.Fields.ComplexEventCreditEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventType val)
                    {
                        return IsSetComplexEventCreditEventType();
                    }

                    public bool IsSetComplexEventCreditEventType()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventType);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventValue ComplexEventCreditEventValue
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventValue val = new QuickFix.Fields.ComplexEventCreditEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventValue val)
                    {
                        this.ComplexEventCreditEventValue = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventValue Get(QuickFix.Fields.ComplexEventCreditEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventValue val)
                    {
                        return IsSetComplexEventCreditEventValue();
                    }

                    public bool IsSetComplexEventCreditEventValue()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventValue);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventCurrency ComplexEventCreditEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventCurrency val = new QuickFix.Fields.ComplexEventCreditEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventCurrency val)
                    {
                        this.ComplexEventCreditEventCurrency = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventCurrency Get(QuickFix.Fields.ComplexEventCreditEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventCurrency val)
                    {
                        return IsSetComplexEventCreditEventCurrency();
                    }

                    public bool IsSetComplexEventCreditEventCurrency()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventCurrency);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventPeriod ComplexEventCreditEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventPeriod val = new QuickFix.Fields.ComplexEventCreditEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventPeriod val)
                    {
                        this.ComplexEventCreditEventPeriod = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventPeriod Get(QuickFix.Fields.ComplexEventCreditEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventPeriod val)
                    {
                        return IsSetComplexEventCreditEventPeriod();
                    }

                    public bool IsSetComplexEventCreditEventPeriod()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventPeriod);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventUnit ComplexEventCreditEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventUnit val = new QuickFix.Fields.ComplexEventCreditEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventUnit val)
                    {
                        this.ComplexEventCreditEventUnit = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventUnit Get(QuickFix.Fields.ComplexEventCreditEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventUnit val)
                    {
                        return IsSetComplexEventCreditEventUnit();
                    }

                    public bool IsSetComplexEventCreditEventUnit()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventUnit);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventDayType ComplexEventCreditEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventDayType val = new QuickFix.Fields.ComplexEventCreditEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventDayType val)
                    {
                        this.ComplexEventCreditEventDayType = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventDayType Get(QuickFix.Fields.ComplexEventCreditEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventDayType val)
                    {
                        return IsSetComplexEventCreditEventDayType();
                    }

                    public bool IsSetComplexEventCreditEventDayType()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventDayType);
                    }
                    public QuickFix.Fields.ComplexEventCreditEventRateSource ComplexEventCreditEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.ComplexEventCreditEventRateSource val = new QuickFix.Fields.ComplexEventCreditEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ComplexEventCreditEventRateSource val)
                    {
                        this.ComplexEventCreditEventRateSource = val;
                    }

                    public QuickFix.Fields.ComplexEventCreditEventRateSource Get(QuickFix.Fields.ComplexEventCreditEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ComplexEventCreditEventRateSource val)
                    {
                        return IsSetComplexEventCreditEventRateSource();
                    }

                    public bool IsSetComplexEventCreditEventRateSource()
                    {
                        return IsSetField(Tags.ComplexEventCreditEventRateSource);
                    }
                    public QuickFix.Fields.NoComplexEventCreditEventQualifiers NoComplexEventCreditEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoComplexEventCreditEventQualifiers val = new QuickFix.Fields.NoComplexEventCreditEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoComplexEventCreditEventQualifiers val)
                    {
                        this.NoComplexEventCreditEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoComplexEventCreditEventQualifiers Get(QuickFix.Fields.NoComplexEventCreditEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoComplexEventCreditEventQualifiers val)
                    {
                        return IsSetNoComplexEventCreditEventQualifiers();
                    }

                    public bool IsSetNoComplexEventCreditEventQualifiers()
                    {
                        return IsSetField(Tags.NoComplexEventCreditEventQualifiers);
                    }
                    public class NoComplexEventCreditEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ComplexEventCreditEventQualifier, 0 };

                        public NoComplexEventCreditEventQualifiersGroup()
                          : base(Tags.NoComplexEventCreditEventQualifiers, Tags.ComplexEventCreditEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoComplexEventCreditEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ComplexEventCreditEventQualifier ComplexEventCreditEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.ComplexEventCreditEventQualifier val = new QuickFix.Fields.ComplexEventCreditEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ComplexEventCreditEventQualifier val)
                        {
                            this.ComplexEventCreditEventQualifier = val;
                        }

                        public QuickFix.Fields.ComplexEventCreditEventQualifier Get(QuickFix.Fields.ComplexEventCreditEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ComplexEventCreditEventQualifier val)
                        {
                            return IsSetComplexEventCreditEventQualifier();
                        }

                        public bool IsSetComplexEventCreditEventQualifier()
                        {
                            return IsSetField(Tags.ComplexEventCreditEventQualifier);
                        }

                    }
                }
            }
            public class NoSecondaryAssetClassesGroup : Group
            {
                public static int[] fieldOrder = { Tags.SecondaryAssetClass, Tags.SecondaryAssetSubClass, Tags.SecondaryAssetType, Tags.SecondaryAssetSubType, 0 };

                public NoSecondaryAssetClassesGroup()
                  : base(Tags.NoSecondaryAssetClasses, Tags.SecondaryAssetClass, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoSecondaryAssetClassesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.SecondaryAssetClass SecondaryAssetClass
                {
                    get
                    {
                        QuickFix.Fields.SecondaryAssetClass val = new QuickFix.Fields.SecondaryAssetClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecondaryAssetClass val)
                {
                    this.SecondaryAssetClass = val;
                }

                public QuickFix.Fields.SecondaryAssetClass Get(QuickFix.Fields.SecondaryAssetClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecondaryAssetClass val)
                {
                    return IsSetSecondaryAssetClass();
                }

                public bool IsSetSecondaryAssetClass()
                {
                    return IsSetField(Tags.SecondaryAssetClass);
                }
                public QuickFix.Fields.SecondaryAssetSubClass SecondaryAssetSubClass
                {
                    get
                    {
                        QuickFix.Fields.SecondaryAssetSubClass val = new QuickFix.Fields.SecondaryAssetSubClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecondaryAssetSubClass val)
                {
                    this.SecondaryAssetSubClass = val;
                }

                public QuickFix.Fields.SecondaryAssetSubClass Get(QuickFix.Fields.SecondaryAssetSubClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecondaryAssetSubClass val)
                {
                    return IsSetSecondaryAssetSubClass();
                }

                public bool IsSetSecondaryAssetSubClass()
                {
                    return IsSetField(Tags.SecondaryAssetSubClass);
                }
                public QuickFix.Fields.SecondaryAssetType SecondaryAssetType
                {
                    get
                    {
                        QuickFix.Fields.SecondaryAssetType val = new QuickFix.Fields.SecondaryAssetType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecondaryAssetType val)
                {
                    this.SecondaryAssetType = val;
                }

                public QuickFix.Fields.SecondaryAssetType Get(QuickFix.Fields.SecondaryAssetType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecondaryAssetType val)
                {
                    return IsSetSecondaryAssetType();
                }

                public bool IsSetSecondaryAssetType()
                {
                    return IsSetField(Tags.SecondaryAssetType);
                }
                public QuickFix.Fields.SecondaryAssetSubType SecondaryAssetSubType
                {
                    get
                    {
                        QuickFix.Fields.SecondaryAssetSubType val = new QuickFix.Fields.SecondaryAssetSubType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SecondaryAssetSubType val)
                {
                    this.SecondaryAssetSubType = val;
                }

                public QuickFix.Fields.SecondaryAssetSubType Get(QuickFix.Fields.SecondaryAssetSubType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SecondaryAssetSubType val)
                {
                    return IsSetSecondaryAssetSubType();
                }

                public bool IsSetSecondaryAssetSubType()
                {
                    return IsSetField(Tags.SecondaryAssetSubType);
                }

            }
            public class NoBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.BusinessCenter, 0 };

                public NoBusinessCentersGroup()
                  : base(Tags.NoBusinessCenters, Tags.BusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.BusinessCenter BusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.BusinessCenter val = new QuickFix.Fields.BusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.BusinessCenter val)
                {
                    this.BusinessCenter = val;
                }

                public QuickFix.Fields.BusinessCenter Get(QuickFix.Fields.BusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.BusinessCenter val)
                {
                    return IsSetBusinessCenter();
                }

                public bool IsSetBusinessCenter()
                {
                    return IsSetField(Tags.BusinessCenter);
                }

            }
            public class NoStreamsGroup : Group
            {
                public static int[] fieldOrder = { Tags.StreamType, Tags.StreamDesc, Tags.StreamPaySide, Tags.StreamReceiveSide, Tags.StreamNotional, Tags.StreamCurrency, Tags.StreamEffectiveDateUnadjusted, Tags.StreamEffectiveDateBusinessDayConvention, Tags.NoStreamEffectiveBusinessCenters, Tags.StreamEffectiveDateRelativeTo, Tags.StreamEffectiveDateOffsetPeriod, Tags.StreamEffectiveDateOffsetUnit, Tags.StreamEffectiveDateOffsetDayType, Tags.StreamEffectiveDateAdjusted, Tags.StreamTerminationDateUnadjusted, Tags.StreamTerminationDateBusinessDayConvention, Tags.NoStreamTerminationDateBusinessCenters, Tags.StreamTerminationDateRelativeTo, Tags.StreamTerminationDateOffsetPeriod, Tags.StreamTerminationDateOffsetUnit, Tags.StreamTerminationDateOffsetDayType, Tags.StreamTerminationDateAdjusted, Tags.StreamCalculationPeriodBusinessDayConvention, Tags.NoStreamCalculationPeriodBusinessCenters, Tags.StreamFirstPeriodStartDateUnadjusted, Tags.StreamFirstPeriodStartDateBusinessDayConvention, Tags.NoStreamFirstPeriodStartDateBusinessCenters, Tags.StreamFirstPeriodStartDateAdjusted, Tags.StreamFirstRegularPeriodStartDateUnadjusted, Tags.StreamFirstCompoundingPeriodEndDateUnadjusted, Tags.StreamLastRegularPeriodEndDateUnadjusted, Tags.StreamCalculationFrequencyPeriod, Tags.StreamCalculationFrequencyUnit, Tags.StreamCalculationRollConvention, Tags.StreamCalculationPeriodDatesXID, Tags.StreamCalculationPeriodDatesXIDRef, Tags.NoStreamCalculationPeriodDates, Tags.StreamCalculationBalanceOfFirstPeriod, Tags.StreamCalculationCorrectionPeriod, Tags.StreamCalculationCorrectionUnit, Tags.PaymentStreamType, Tags.PaymentStreamMarketRate, Tags.PaymentStreamDelayIndicator, Tags.PaymentStreamSettlCurrency, Tags.PaymentStreamDayCount, Tags.PaymentStreamAccrualDays, Tags.PaymentStreamDiscountType, Tags.PaymentStreamDiscountRate, Tags.PaymentStreamDiscountRateDayCount, Tags.PaymentStreamCompoundingMethod, Tags.PaymentStreamInitialPrincipalExchangeIndicator, Tags.PaymentStreamInterimPrincipalExchangeIndicator, Tags.PaymentStreamFinalPrincipalExchangeIndicator, Tags.PaymentStreamPaymentDateBusinessDayConvention, Tags.NoPaymentStreamPaymentDateBusinessCenters, Tags.PaymentStreamPaymentFrequencyPeriod, Tags.PaymentStreamPaymentFrequencyUnit, Tags.PaymentStreamPaymentRollConvention, Tags.PaymentStreamFirstPaymentDateUnadjusted, Tags.PaymentStreamLastRegularPaymentDateUnadjusted, Tags.PaymentStreamPaymentDateRelativeTo, Tags.PaymentStreamPaymentDateOffsetPeriod, Tags.PaymentStreamPaymentDateOffsetUnit, Tags.PaymentStreamPaymentDateOffsetDayType, Tags.NoPaymentStreamPaymentDates, Tags.PaymentStreamMasterAgreementPaymentDatesIndicator, Tags.PaymentStreamFinalPricePaymentDateUnadjusted, Tags.PaymentStreamFinalPricePaymentDateRelativeTo, Tags.PaymentStreamFinalPricePaymentDateOffsetfPeriod, Tags.PaymentStreamFinalPricePaymentDateOffsetUnit, Tags.PaymentStreamFinalPricePaymentDateOffsetDayType, Tags.PaymentStreamFinalPricePaymentDateAdjusted, Tags.PaymentStreamResetDateRelativeTo, Tags.PaymentStreamResetDateBusinessDayConvention, Tags.NoPaymentStreamResetDateBusinessCenters, Tags.PaymentStreamResetFrequencyPeriod, Tags.PaymentStreamResetFrequencyUnit, Tags.PaymentStreamResetWeeklyRollConvention, Tags.PaymentStreamInitialFixingDateRelativeTo, Tags.PaymentStreamInitialFixingDateBusinessDayConvention, Tags.NoPaymentStreamInitialFixingDateBusinessCenters, Tags.PaymentStreamInitialFixingDateOffsetPeriod, Tags.PaymentStreamInitialFixingDateOffsetUnit, Tags.PaymentStreamInitialFixingDateOffsetDayType, Tags.PaymentStreamInitialFixingDateAdjusted, Tags.PaymentStreamFixingDateRelativeTo, Tags.PaymentStreamFixingDateBusinessDayConvention, Tags.NoPaymentStreamFixingDateBusinessCenters, Tags.PaymentStreamFixingDateOffsetPeriod, Tags.PaymentStreamFixingDateOffsetUnit, Tags.PaymentStreamFixingDateOffsetDayType, Tags.PaymentStreamFixingDateAdjusted, Tags.PaymentStreamRateCutoffDateOffsetPeriod, Tags.PaymentStreamRateCutoffDateOffsetUnit, Tags.PaymentStreamRateCutoffDateOffsetDayType, Tags.NoPaymentStreamFixingDates, Tags.PaymentStreamRate, Tags.PaymentStreamFixedAmount, Tags.PaymentStreamRateOrAmountCurrency, Tags.PaymentStreamFutureValueNotional, Tags.PaymentStreamFutureValueDateAdjusted, Tags.PaymentStreamFixedAmountUnitOfMeasure, Tags.PaymentStreamTotalFixedAmount, Tags.PaymentStreamWorldScaleRate, Tags.PaymentStreamContractPrice, Tags.PaymentStreamContractPriceCurrency, Tags.PaymentStreamRateIndex, Tags.PaymentStreamRateIndexSource, Tags.PaymentStreamRateIndexCurveUnit, Tags.PaymentStreamRateIndexCurvePeriod, Tags.PaymentStreamRateMultiplier, Tags.PaymentStreamRateSpread, Tags.PaymentStreamRateSpreadPositionType, Tags.PaymentStreamRateTreatment, Tags.PaymentStreamCapRate, Tags.PaymentStreamCapRateBuySide, Tags.PaymentStreamCapRateSellSide, Tags.PaymentStreamFloorRate, Tags.PaymentStreamFloorRateBuySide, Tags.PaymentStreamFloorRateSellSide, Tags.PaymentStreamInitialRate, Tags.PaymentStreamFinalRateRoundingDirection, Tags.PaymentStreamFinalRatePrecision, Tags.PaymentStreamAveragingMethod, Tags.PaymentStreamNegativeRateTreatment, Tags.PaymentStreamInflationLagPeriod, Tags.PaymentStreamInflationLagUnit, Tags.PaymentStreamInflationLagDayType, Tags.PaymentStreamInflationInterpolationMethod, Tags.PaymentStreamInflationIndexSource, Tags.PaymentStreamInflationPublicationSource, Tags.PaymentStreamInflationInitialIndexLevel, Tags.PaymentStreamInflationFallbackBondApplicable, Tags.PaymentStreamFRADiscounting, Tags.PaymentStreamRateIndex2CurvePeriod, Tags.PaymentStreamRateIndex2CurveUnit, Tags.PaymentStreamRateIndexLocation, Tags.PaymentStreamRateIndexLevel, Tags.PaymentStreamRateIndexUnitOfMeasure, Tags.PaymentStreamSettlLevel, Tags.PaymentStreamReferenceLevel, Tags.PaymentStreamReferenceLevelUnitOfMeasure, Tags.PaymentStreamReferenceLevelEqualsZeroIndicator, Tags.PaymentStreamRateSpreadCurrency, Tags.PaymentStreamRateSpreadUnitOfMeasure, Tags.PaymentStreamRateConversionFactor, Tags.PaymentStreamRateSpreadType, Tags.PaymentStreamLastResetRate, Tags.PaymentStreamFinalRate, Tags.PaymentStreamCalculationLagPeriod, Tags.PaymentStreamCalculationLagUnit, Tags.PaymentStreamFirstObservationDateOffsetPeriod, Tags.PaymentStreamFirstObservationDateOffsetUnit, Tags.PaymentStreamPricingDayType, Tags.PaymentStreamPricingDayDistribution, Tags.PaymentStreamPricingDayCount, Tags.PaymentStreamPricingBusinessCalendar, Tags.PaymentStreamPricingBusinessDayConvention, Tags.NoPaymentStreamPricingBusinessCenters, Tags.NoPaymentStreamPricingDays, Tags.NoPaymentStreamPricingDates, Tags.PaymentStreamFirstObservationDateUnadjusted, Tags.PaymentStreamFirstObservationDateRelativeTo, Tags.PaymentStreamFirstObservationDateOffsetDayType, Tags.PaymentStreamFirstObservationDateAdjusted, Tags.PaymentStreamUnderlierRefID, Tags.PaymentStreamFormulaCurrency, Tags.PaymentStreamFormulaCurrencyDeterminationMethod, Tags.PaymentStreamFormulaReferenceAmount, Tags.NoPaymentStreamFormulas, Tags.PaymentStreamFormulaImageLength, Tags.PaymentStreamFormulaImage, Tags.DividendReinvestmentIndicator, Tags.DividendEntitlementEvent, Tags.DividendAmountType, Tags.DividendUnderlierRefID, Tags.NoDividendPeriods, Tags.ExtraordinaryDividendPartySide, Tags.ExtraordinaryDividendAmountType, Tags.ExtraordinaryDividendCurrency, Tags.ExtraordinaryDividendDeterminationMethod, Tags.DividendFXTriggerDateRelativeTo, Tags.DividendFXTriggerDateOffsetPeriod, Tags.DividendFXTriggerDateOffsetUnit, Tags.DividendFXTriggerDateOffsetDayType, Tags.DividendFXTriggerDateUnadjusted, Tags.DividendFXTriggerDateBusinessDayConvention, Tags.NoDividendFXTriggerDateBusinessCenters, Tags.DividendFXTriggerDateAdjusted, Tags.DividendFloatingRateIndex, Tags.DividendFloatingRateIndexCurvePeriod, Tags.DividendFloatingRateIndexCurveUnit, Tags.DividendFloatingRateMultiplier, Tags.DividendFloatingRateSpread, Tags.DividendFloatingRateSpreadPositionType, Tags.DividendFloatingRateTreatment, Tags.DividendCapRate, Tags.DividendCapRateBuySide, Tags.DividendCapRateSellSide, Tags.DividendFloorRate, Tags.DividendFloorRateBuySide, Tags.DividendFloorRateSellSide, Tags.DividendInitialRate, Tags.DividendFinalRateRoundingDirection, Tags.DividendFinalRatePrecision, Tags.DividendAveragingMethod, Tags.DividendNegativeRateTreatment, Tags.DividendAccrualFixedRate, Tags.DividendAccrualPaymentDateRelativeTo, Tags.DividendAccrualPaymentDateOffsetPeriod, Tags.DividendAccrualPaymentDateOffsetUnit, Tags.DividendAccrualPaymentDateOffsetDayType, Tags.DividendAccrualPaymentDateUnadjusted, Tags.DividendAccrualPaymeentDateBusinessDayConvention, Tags.NoDividendAccrualPaymentDateBusinessCenters, Tags.DividendAccrualPaymentDateAdjusted, Tags.DividendCompoundingMethod, Tags.DividendNumOfIndexUnits, Tags.DividendCashPercentage, Tags.DividendCashEquivalentPercentage, Tags.NonCashDividendTreatment, Tags.DividendComposition, Tags.SpecialDividendsIndicator, Tags.MaterialDividendsIndicator, Tags.OptionsExchangeDividendsIndicator, Tags.AdditionalDividendsIndicator, Tags.AllDividendsIndicator, Tags.ReturnRateNotionalReset, Tags.NoReturnRates, Tags.PaymentStreamLinkInitialLevel, Tags.PaymentStreamLinkClosingLevelIndicator, Tags.PaymentStreamLinkExpiringLevelIndicator, Tags.PaymentStreamLinkEstimatedTradingDays, Tags.PaymentStreamLinkStrikePrice, Tags.PaymentStreamLinkStrikePriceType, Tags.PaymentStreamLinkMaximumBoundary, Tags.PaymentStreamLinkMinimumBoundary, Tags.PaymentStreamLinkNumberOfDataSeries, Tags.PaymentStreamVarianceUnadjustedCap, Tags.PaymentStreamRealizedVarianceMethod, Tags.PaymentStreamDaysAdjustmentIndicator, Tags.PaymentStreamNearestExchangeContractRefID, Tags.PaymentStreamVegaNotionalAmount, Tags.PaymentStreamRateIndexID, Tags.PaymentStreamRateIndexIDSource, Tags.PaymentStreamNonDeliverableRefCurrency, Tags.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention, Tags.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.PaymentStreamNonDeliverableFixingDatesRelativeTo, Tags.PaymentStreamNonDeliverableFixingDatesOffsetPeriod, Tags.PaymentStreamNonDeliverableFixingDatesOffsetUnit, Tags.PaymentStreamNonDeliverableFixingDatesOffsetDayType, Tags.PaymentStreamNonDeliverableSettlRateSource, Tags.PaymentStreamNonDeliverableSettlReferencePage, Tags.NoNonDeliverableFixingDates, Tags.NoSettlRateFallbacks, Tags.PaymentStreamFlatRateIndicator, Tags.PaymentStreamFlatRateAmount, Tags.PaymentStreamFlatRateCurrency, Tags.PaymentStreamMaximumPaymentAmount, Tags.PaymentStreamMaximumPaymentCurrency, Tags.PaymentStreamMaximumTransactionAmount, Tags.PaymentStreamMaximumTransactionCurrency, Tags.PaymentStreamCashSettlIndicator, Tags.PaymentStreamCompoundingXIDRef, Tags.PaymentStreamCompoundingSpread, Tags.PaymentStreamInterpolationMethod, Tags.PaymentStreamInterpolationPeriod, Tags.PaymentStreamCompoundingFixedRate, Tags.PaymentStreamCompoundingRateIndex, Tags.PaymentStreamCompoundingRateIndexCurvePeriod, Tags.PaymentStreamCompoundingRateIndexCurveUnit, Tags.PaymentStreamCompoundingRateMultiplier, Tags.PaymentStreamCompoundingRateSpread, Tags.PaymentStreamCompoundingRateSpreadPositionType, Tags.PaymentStreamCompoundingRateTreatment, Tags.PaymentStreamCompoundingCapRate, Tags.PaymentStreamCompoundingCapRateBuySide, Tags.PaymentStreamCompoundingCapRateSellSide, Tags.PaymentStreamCompoundingFloorRate, Tags.PaymentStreamCompoundingFloorRateBuySide, Tags.PaymentStreamCompoundingFloorRateSellSide, Tags.PaymentStreamCompoundingInitialRate, Tags.PaymentStreamCompoundingFinalRateRoundingDirection, Tags.PaymentStreamCompoundingFinalRatePrecision, Tags.PaymentStreamCompoundingAveragingMethod, Tags.PaymentStreamCompoundingNegativeRateTreatment, Tags.PaymentStreamCompoundingDatesBusinessDayConvention, Tags.NoPaymentStreamCompoundingDatesBusinessCenters, Tags.NoPaymentStreamCompoundingDates, Tags.PaymentStreamCompoundingDatesRelativeTo, Tags.PaymentStreamCompoundingDatesOffsetPeriod, Tags.PaymentStreamCompoundingDatesOffsetUnit, Tags.PaymentStreamCompoundingDatesOffsetDayType, Tags.PaymentStreamCompoundingPeriodSkip, Tags.PaymentStreamCompoundingStartDateUnadjusted, Tags.PaymentStreamCompoundingStartDateRelativeTo, Tags.PaymentStreamCompoundingStartDateOffsetPeriod, Tags.PaymentStreamCompoundingStartDateOffsetUnit, Tags.PaymentStreamCompoundingStartDateOffsetDayType, Tags.PaymentStreamCompoundingStartDateAdjusted, Tags.PaymentStreamCompoundingEndDateUnadjusted, Tags.PaymentStreamCompoundingEndDateRelativeTo, Tags.PaymentStreamCompoundingEndDateOffsetPeriod, Tags.PaymentStreamCompoundingEndDateOffsetUnit, Tags.PaymentStreamCompoundingEndDateOffsetDayType, Tags.PaymentStreamCompoundingEndDateAdjusted, Tags.PaymentStreamCompoundingFrequencyPeriod, Tags.PaymentStreamCompoundingFrequencyUnit, Tags.PaymentStreamCompoundingRollConvention, Tags.PaymentStreamBoundsFirstDateUnadjusted, Tags.PaymentStreamBoundsLastDateUnadjusted, Tags.PaymentStreamOtherDayCount, Tags.NoPaymentSchedules, Tags.NoPaymentStubs, Tags.StreamText, Tags.EncodedStreamTextLen, Tags.EncodedStreamText, Tags.StreamXID, Tags.StreamNotionalXIDRef, Tags.StreamNotionalFrequencyPeriod, Tags.StreamNotionalFrequencyUnit, Tags.StreamNotionalCommodityFrequency, Tags.StreamNotionalUnitOfMeasure, Tags.StreamTotalNotional, Tags.StreamTotalNotionalUnitOfMeasure, Tags.StreamCommodityBase, Tags.StreamCommodityType, Tags.StreamCommoditySecurityID, Tags.StreamCommoditySecurityIDSource, Tags.NoStreamCommodityAltIDs, Tags.StreamCommodityDesc, Tags.EncodedStreamCommodityDescLen, Tags.EncodedStreamCommodityDesc, Tags.NoStreamAssetAttributes, Tags.StreamCommodityUnitOfMeasure, Tags.StreamCommodityCurrency, Tags.StreamCommodityExchange, Tags.StreamCommodityRateSource, Tags.StreamCommodityRateReferencePage, Tags.StreamCommodityRateReferencePageHeading, Tags.StreamDataProvider, Tags.NoStreamCommodityDataSources, Tags.StreamCommodityPricingType, Tags.StreamCommodityNearbySettlDayPeriod, Tags.StreamCommodityNearbySettlDayUnit, Tags.StreamCommoditySettlDateUnadjusted, Tags.StreamCommoditySettlDateBusinessDayConvention, Tags.NoStreamCommoditySettlBusinessCenters, Tags.StreamCommoditySettlDateAdjusted, Tags.StreamCommoditySettlMonth, Tags.StreamCommoditySettlDateRollPeriod, Tags.StreamCommoditySettlDateRollUnit, Tags.StreamCommoditySettlDayType, Tags.NoStreamCommoditySettlPeriods, Tags.StreamCommodityXID, Tags.StreamCommodityXIDRef, Tags.StreamCommodityDeliveryPricingRegion, Tags.DeliveryStreamType, Tags.NoDeliveryStreamCommoditySources, Tags.DeliveryStreamPipeline, Tags.DeliveryStreamEntryPoint, Tags.DeliveryStreamWithdrawalPoint, Tags.DeliveryStreamDeliveryPoint, Tags.DeliveryStreamDeliveryRestriction, Tags.DeliveryStreamDeliveryContingency, Tags.DeliveryStreamDeliveryContingentPartySide, Tags.DeliveryStreamDeliverAtSourceIndicator, Tags.DeliveryStreamRiskApportionment, Tags.DeliveryStreamRiskApportionmentSource, Tags.NoDeliveryStreamCycles, Tags.DeliveryStreamTitleTransferLocation, Tags.DeliveryStreamTitleTransferCondition, Tags.DeliveryStreamImporterOfRecord, Tags.DeliveryStreamNegativeTolerance, Tags.DeliveryStreamPositiveTolerance, Tags.DeliveryStreamToleranceUnitOfMeasure, Tags.DeliveryStreamToleranceType, Tags.DeliveryStreamToleranceOptionSide, Tags.DeliveryStreamTotalPositiveTolerance, Tags.DeliveryStreamTotalNegativeTolerance, Tags.DeliveryStreamNotionalConversionFactor, Tags.DeliveryStreamTransportEquipment, Tags.DeliveryStreamElectingPartySide, Tags.DeliveryStreamDeliveryPointSource, Tags.DeliveryStreamDeliveryPointDesc, Tags.DeliveryStreamRouteOrCharter, Tags.NoDeliverySchedules, Tags.StreamVersion, Tags.StreamVersionEffectiveDate, Tags.StreamNotionalDeterminationMethod, Tags.StreamNotionalAdjustments, 0 };

                public NoStreamsGroup()
                  : base(Tags.NoStreams, Tags.StreamType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoStreamsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.StreamType StreamType
                {
                    get
                    {
                        QuickFix.Fields.StreamType val = new QuickFix.Fields.StreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamType val)
                {
                    this.StreamType = val;
                }

                public QuickFix.Fields.StreamType Get(QuickFix.Fields.StreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamType val)
                {
                    return IsSetStreamType();
                }

                public bool IsSetStreamType()
                {
                    return IsSetField(Tags.StreamType);
                }
                public QuickFix.Fields.StreamDesc StreamDesc
                {
                    get
                    {
                        QuickFix.Fields.StreamDesc val = new QuickFix.Fields.StreamDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamDesc val)
                {
                    this.StreamDesc = val;
                }

                public QuickFix.Fields.StreamDesc Get(QuickFix.Fields.StreamDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamDesc val)
                {
                    return IsSetStreamDesc();
                }

                public bool IsSetStreamDesc()
                {
                    return IsSetField(Tags.StreamDesc);
                }
                public QuickFix.Fields.StreamPaySide StreamPaySide
                {
                    get
                    {
                        QuickFix.Fields.StreamPaySide val = new QuickFix.Fields.StreamPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamPaySide val)
                {
                    this.StreamPaySide = val;
                }

                public QuickFix.Fields.StreamPaySide Get(QuickFix.Fields.StreamPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamPaySide val)
                {
                    return IsSetStreamPaySide();
                }

                public bool IsSetStreamPaySide()
                {
                    return IsSetField(Tags.StreamPaySide);
                }
                public QuickFix.Fields.StreamReceiveSide StreamReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.StreamReceiveSide val = new QuickFix.Fields.StreamReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamReceiveSide val)
                {
                    this.StreamReceiveSide = val;
                }

                public QuickFix.Fields.StreamReceiveSide Get(QuickFix.Fields.StreamReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamReceiveSide val)
                {
                    return IsSetStreamReceiveSide();
                }

                public bool IsSetStreamReceiveSide()
                {
                    return IsSetField(Tags.StreamReceiveSide);
                }
                public QuickFix.Fields.StreamNotional StreamNotional
                {
                    get
                    {
                        QuickFix.Fields.StreamNotional val = new QuickFix.Fields.StreamNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotional val)
                {
                    this.StreamNotional = val;
                }

                public QuickFix.Fields.StreamNotional Get(QuickFix.Fields.StreamNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotional val)
                {
                    return IsSetStreamNotional();
                }

                public bool IsSetStreamNotional()
                {
                    return IsSetField(Tags.StreamNotional);
                }
                public QuickFix.Fields.StreamCurrency StreamCurrency
                {
                    get
                    {
                        QuickFix.Fields.StreamCurrency val = new QuickFix.Fields.StreamCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCurrency val)
                {
                    this.StreamCurrency = val;
                }

                public QuickFix.Fields.StreamCurrency Get(QuickFix.Fields.StreamCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCurrency val)
                {
                    return IsSetStreamCurrency();
                }

                public bool IsSetStreamCurrency()
                {
                    return IsSetField(Tags.StreamCurrency);
                }
                public QuickFix.Fields.StreamEffectiveDateUnadjusted StreamEffectiveDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateUnadjusted val = new QuickFix.Fields.StreamEffectiveDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateUnadjusted val)
                {
                    this.StreamEffectiveDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamEffectiveDateUnadjusted Get(QuickFix.Fields.StreamEffectiveDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateUnadjusted val)
                {
                    return IsSetStreamEffectiveDateUnadjusted();
                }

                public bool IsSetStreamEffectiveDateUnadjusted()
                {
                    return IsSetField(Tags.StreamEffectiveDateUnadjusted);
                }
                public QuickFix.Fields.StreamEffectiveDateBusinessDayConvention StreamEffectiveDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateBusinessDayConvention val = new QuickFix.Fields.StreamEffectiveDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateBusinessDayConvention val)
                {
                    this.StreamEffectiveDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.StreamEffectiveDateBusinessDayConvention Get(QuickFix.Fields.StreamEffectiveDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateBusinessDayConvention val)
                {
                    return IsSetStreamEffectiveDateBusinessDayConvention();
                }

                public bool IsSetStreamEffectiveDateBusinessDayConvention()
                {
                    return IsSetField(Tags.StreamEffectiveDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoStreamEffectiveBusinessCenters NoStreamEffectiveBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoStreamEffectiveBusinessCenters val = new QuickFix.Fields.NoStreamEffectiveBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamEffectiveBusinessCenters val)
                {
                    this.NoStreamEffectiveBusinessCenters = val;
                }

                public QuickFix.Fields.NoStreamEffectiveBusinessCenters Get(QuickFix.Fields.NoStreamEffectiveBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamEffectiveBusinessCenters val)
                {
                    return IsSetNoStreamEffectiveBusinessCenters();
                }

                public bool IsSetNoStreamEffectiveBusinessCenters()
                {
                    return IsSetField(Tags.NoStreamEffectiveBusinessCenters);
                }
                public QuickFix.Fields.StreamEffectiveDateRelativeTo StreamEffectiveDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateRelativeTo val = new QuickFix.Fields.StreamEffectiveDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateRelativeTo val)
                {
                    this.StreamEffectiveDateRelativeTo = val;
                }

                public QuickFix.Fields.StreamEffectiveDateRelativeTo Get(QuickFix.Fields.StreamEffectiveDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateRelativeTo val)
                {
                    return IsSetStreamEffectiveDateRelativeTo();
                }

                public bool IsSetStreamEffectiveDateRelativeTo()
                {
                    return IsSetField(Tags.StreamEffectiveDateRelativeTo);
                }
                public QuickFix.Fields.StreamEffectiveDateOffsetPeriod StreamEffectiveDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateOffsetPeriod val = new QuickFix.Fields.StreamEffectiveDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateOffsetPeriod val)
                {
                    this.StreamEffectiveDateOffsetPeriod = val;
                }

                public QuickFix.Fields.StreamEffectiveDateOffsetPeriod Get(QuickFix.Fields.StreamEffectiveDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateOffsetPeriod val)
                {
                    return IsSetStreamEffectiveDateOffsetPeriod();
                }

                public bool IsSetStreamEffectiveDateOffsetPeriod()
                {
                    return IsSetField(Tags.StreamEffectiveDateOffsetPeriod);
                }
                public QuickFix.Fields.StreamEffectiveDateOffsetUnit StreamEffectiveDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateOffsetUnit val = new QuickFix.Fields.StreamEffectiveDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateOffsetUnit val)
                {
                    this.StreamEffectiveDateOffsetUnit = val;
                }

                public QuickFix.Fields.StreamEffectiveDateOffsetUnit Get(QuickFix.Fields.StreamEffectiveDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateOffsetUnit val)
                {
                    return IsSetStreamEffectiveDateOffsetUnit();
                }

                public bool IsSetStreamEffectiveDateOffsetUnit()
                {
                    return IsSetField(Tags.StreamEffectiveDateOffsetUnit);
                }
                public QuickFix.Fields.StreamEffectiveDateOffsetDayType StreamEffectiveDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateOffsetDayType val = new QuickFix.Fields.StreamEffectiveDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateOffsetDayType val)
                {
                    this.StreamEffectiveDateOffsetDayType = val;
                }

                public QuickFix.Fields.StreamEffectiveDateOffsetDayType Get(QuickFix.Fields.StreamEffectiveDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateOffsetDayType val)
                {
                    return IsSetStreamEffectiveDateOffsetDayType();
                }

                public bool IsSetStreamEffectiveDateOffsetDayType()
                {
                    return IsSetField(Tags.StreamEffectiveDateOffsetDayType);
                }
                public QuickFix.Fields.StreamEffectiveDateAdjusted StreamEffectiveDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamEffectiveDateAdjusted val = new QuickFix.Fields.StreamEffectiveDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamEffectiveDateAdjusted val)
                {
                    this.StreamEffectiveDateAdjusted = val;
                }

                public QuickFix.Fields.StreamEffectiveDateAdjusted Get(QuickFix.Fields.StreamEffectiveDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamEffectiveDateAdjusted val)
                {
                    return IsSetStreamEffectiveDateAdjusted();
                }

                public bool IsSetStreamEffectiveDateAdjusted()
                {
                    return IsSetField(Tags.StreamEffectiveDateAdjusted);
                }
                public QuickFix.Fields.StreamTerminationDateUnadjusted StreamTerminationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateUnadjusted val = new QuickFix.Fields.StreamTerminationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateUnadjusted val)
                {
                    this.StreamTerminationDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamTerminationDateUnadjusted Get(QuickFix.Fields.StreamTerminationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateUnadjusted val)
                {
                    return IsSetStreamTerminationDateUnadjusted();
                }

                public bool IsSetStreamTerminationDateUnadjusted()
                {
                    return IsSetField(Tags.StreamTerminationDateUnadjusted);
                }
                public QuickFix.Fields.StreamTerminationDateBusinessDayConvention StreamTerminationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateBusinessDayConvention val = new QuickFix.Fields.StreamTerminationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateBusinessDayConvention val)
                {
                    this.StreamTerminationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.StreamTerminationDateBusinessDayConvention Get(QuickFix.Fields.StreamTerminationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateBusinessDayConvention val)
                {
                    return IsSetStreamTerminationDateBusinessDayConvention();
                }

                public bool IsSetStreamTerminationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.StreamTerminationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoStreamTerminationDateBusinessCenters NoStreamTerminationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoStreamTerminationDateBusinessCenters val = new QuickFix.Fields.NoStreamTerminationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamTerminationDateBusinessCenters val)
                {
                    this.NoStreamTerminationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoStreamTerminationDateBusinessCenters Get(QuickFix.Fields.NoStreamTerminationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamTerminationDateBusinessCenters val)
                {
                    return IsSetNoStreamTerminationDateBusinessCenters();
                }

                public bool IsSetNoStreamTerminationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoStreamTerminationDateBusinessCenters);
                }
                public QuickFix.Fields.StreamTerminationDateRelativeTo StreamTerminationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateRelativeTo val = new QuickFix.Fields.StreamTerminationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateRelativeTo val)
                {
                    this.StreamTerminationDateRelativeTo = val;
                }

                public QuickFix.Fields.StreamTerminationDateRelativeTo Get(QuickFix.Fields.StreamTerminationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateRelativeTo val)
                {
                    return IsSetStreamTerminationDateRelativeTo();
                }

                public bool IsSetStreamTerminationDateRelativeTo()
                {
                    return IsSetField(Tags.StreamTerminationDateRelativeTo);
                }
                public QuickFix.Fields.StreamTerminationDateOffsetPeriod StreamTerminationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateOffsetPeriod val = new QuickFix.Fields.StreamTerminationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateOffsetPeriod val)
                {
                    this.StreamTerminationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.StreamTerminationDateOffsetPeriod Get(QuickFix.Fields.StreamTerminationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateOffsetPeriod val)
                {
                    return IsSetStreamTerminationDateOffsetPeriod();
                }

                public bool IsSetStreamTerminationDateOffsetPeriod()
                {
                    return IsSetField(Tags.StreamTerminationDateOffsetPeriod);
                }
                public QuickFix.Fields.StreamTerminationDateOffsetUnit StreamTerminationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateOffsetUnit val = new QuickFix.Fields.StreamTerminationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateOffsetUnit val)
                {
                    this.StreamTerminationDateOffsetUnit = val;
                }

                public QuickFix.Fields.StreamTerminationDateOffsetUnit Get(QuickFix.Fields.StreamTerminationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateOffsetUnit val)
                {
                    return IsSetStreamTerminationDateOffsetUnit();
                }

                public bool IsSetStreamTerminationDateOffsetUnit()
                {
                    return IsSetField(Tags.StreamTerminationDateOffsetUnit);
                }
                public QuickFix.Fields.StreamTerminationDateOffsetDayType StreamTerminationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateOffsetDayType val = new QuickFix.Fields.StreamTerminationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateOffsetDayType val)
                {
                    this.StreamTerminationDateOffsetDayType = val;
                }

                public QuickFix.Fields.StreamTerminationDateOffsetDayType Get(QuickFix.Fields.StreamTerminationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateOffsetDayType val)
                {
                    return IsSetStreamTerminationDateOffsetDayType();
                }

                public bool IsSetStreamTerminationDateOffsetDayType()
                {
                    return IsSetField(Tags.StreamTerminationDateOffsetDayType);
                }
                public QuickFix.Fields.StreamTerminationDateAdjusted StreamTerminationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamTerminationDateAdjusted val = new QuickFix.Fields.StreamTerminationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTerminationDateAdjusted val)
                {
                    this.StreamTerminationDateAdjusted = val;
                }

                public QuickFix.Fields.StreamTerminationDateAdjusted Get(QuickFix.Fields.StreamTerminationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTerminationDateAdjusted val)
                {
                    return IsSetStreamTerminationDateAdjusted();
                }

                public bool IsSetStreamTerminationDateAdjusted()
                {
                    return IsSetField(Tags.StreamTerminationDateAdjusted);
                }
                public QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention StreamCalculationPeriodBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention val = new QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention val)
                {
                    this.StreamCalculationPeriodBusinessDayConvention = val;
                }

                public QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention Get(QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationPeriodBusinessDayConvention val)
                {
                    return IsSetStreamCalculationPeriodBusinessDayConvention();
                }

                public bool IsSetStreamCalculationPeriodBusinessDayConvention()
                {
                    return IsSetField(Tags.StreamCalculationPeriodBusinessDayConvention);
                }
                public QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters NoStreamCalculationPeriodBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters val = new QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters val)
                {
                    this.NoStreamCalculationPeriodBusinessCenters = val;
                }

                public QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters Get(QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCalculationPeriodBusinessCenters val)
                {
                    return IsSetNoStreamCalculationPeriodBusinessCenters();
                }

                public bool IsSetNoStreamCalculationPeriodBusinessCenters()
                {
                    return IsSetField(Tags.NoStreamCalculationPeriodBusinessCenters);
                }
                public QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted StreamFirstPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted val = new QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted val)
                {
                    this.StreamFirstPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted Get(QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamFirstPeriodStartDateUnadjusted val)
                {
                    return IsSetStreamFirstPeriodStartDateUnadjusted();
                }

                public bool IsSetStreamFirstPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.StreamFirstPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention StreamFirstPeriodStartDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention val = new QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    this.StreamFirstPeriodStartDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention Get(QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    return IsSetStreamFirstPeriodStartDateBusinessDayConvention();
                }

                public bool IsSetStreamFirstPeriodStartDateBusinessDayConvention()
                {
                    return IsSetField(Tags.StreamFirstPeriodStartDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters NoStreamFirstPeriodStartDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters val = new QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters val)
                {
                    this.NoStreamFirstPeriodStartDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters Get(QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamFirstPeriodStartDateBusinessCenters val)
                {
                    return IsSetNoStreamFirstPeriodStartDateBusinessCenters();
                }

                public bool IsSetNoStreamFirstPeriodStartDateBusinessCenters()
                {
                    return IsSetField(Tags.NoStreamFirstPeriodStartDateBusinessCenters);
                }
                public QuickFix.Fields.StreamFirstPeriodStartDateAdjusted StreamFirstPeriodStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamFirstPeriodStartDateAdjusted val = new QuickFix.Fields.StreamFirstPeriodStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamFirstPeriodStartDateAdjusted val)
                {
                    this.StreamFirstPeriodStartDateAdjusted = val;
                }

                public QuickFix.Fields.StreamFirstPeriodStartDateAdjusted Get(QuickFix.Fields.StreamFirstPeriodStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamFirstPeriodStartDateAdjusted val)
                {
                    return IsSetStreamFirstPeriodStartDateAdjusted();
                }

                public bool IsSetStreamFirstPeriodStartDateAdjusted()
                {
                    return IsSetField(Tags.StreamFirstPeriodStartDateAdjusted);
                }
                public QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted StreamFirstRegularPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted val = new QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    this.StreamFirstRegularPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted Get(QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    return IsSetStreamFirstRegularPeriodStartDateUnadjusted();
                }

                public bool IsSetStreamFirstRegularPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.StreamFirstRegularPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted StreamFirstCompoundingPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted val = new QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    this.StreamFirstCompoundingPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted Get(QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    return IsSetStreamFirstCompoundingPeriodEndDateUnadjusted();
                }

                public bool IsSetStreamFirstCompoundingPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.StreamFirstCompoundingPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted StreamLastRegularPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted val = new QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted val)
                {
                    this.StreamLastRegularPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted Get(QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamLastRegularPeriodEndDateUnadjusted val)
                {
                    return IsSetStreamLastRegularPeriodEndDateUnadjusted();
                }

                public bool IsSetStreamLastRegularPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.StreamLastRegularPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.StreamCalculationFrequencyPeriod StreamCalculationFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationFrequencyPeriod val = new QuickFix.Fields.StreamCalculationFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationFrequencyPeriod val)
                {
                    this.StreamCalculationFrequencyPeriod = val;
                }

                public QuickFix.Fields.StreamCalculationFrequencyPeriod Get(QuickFix.Fields.StreamCalculationFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationFrequencyPeriod val)
                {
                    return IsSetStreamCalculationFrequencyPeriod();
                }

                public bool IsSetStreamCalculationFrequencyPeriod()
                {
                    return IsSetField(Tags.StreamCalculationFrequencyPeriod);
                }
                public QuickFix.Fields.StreamCalculationFrequencyUnit StreamCalculationFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationFrequencyUnit val = new QuickFix.Fields.StreamCalculationFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationFrequencyUnit val)
                {
                    this.StreamCalculationFrequencyUnit = val;
                }

                public QuickFix.Fields.StreamCalculationFrequencyUnit Get(QuickFix.Fields.StreamCalculationFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationFrequencyUnit val)
                {
                    return IsSetStreamCalculationFrequencyUnit();
                }

                public bool IsSetStreamCalculationFrequencyUnit()
                {
                    return IsSetField(Tags.StreamCalculationFrequencyUnit);
                }
                public QuickFix.Fields.StreamCalculationRollConvention StreamCalculationRollConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationRollConvention val = new QuickFix.Fields.StreamCalculationRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationRollConvention val)
                {
                    this.StreamCalculationRollConvention = val;
                }

                public QuickFix.Fields.StreamCalculationRollConvention Get(QuickFix.Fields.StreamCalculationRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationRollConvention val)
                {
                    return IsSetStreamCalculationRollConvention();
                }

                public bool IsSetStreamCalculationRollConvention()
                {
                    return IsSetField(Tags.StreamCalculationRollConvention);
                }
                public QuickFix.Fields.StreamCalculationPeriodDatesXID StreamCalculationPeriodDatesXID
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationPeriodDatesXID val = new QuickFix.Fields.StreamCalculationPeriodDatesXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationPeriodDatesXID val)
                {
                    this.StreamCalculationPeriodDatesXID = val;
                }

                public QuickFix.Fields.StreamCalculationPeriodDatesXID Get(QuickFix.Fields.StreamCalculationPeriodDatesXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationPeriodDatesXID val)
                {
                    return IsSetStreamCalculationPeriodDatesXID();
                }

                public bool IsSetStreamCalculationPeriodDatesXID()
                {
                    return IsSetField(Tags.StreamCalculationPeriodDatesXID);
                }
                public QuickFix.Fields.StreamCalculationPeriodDatesXIDRef StreamCalculationPeriodDatesXIDRef
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationPeriodDatesXIDRef val = new QuickFix.Fields.StreamCalculationPeriodDatesXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationPeriodDatesXIDRef val)
                {
                    this.StreamCalculationPeriodDatesXIDRef = val;
                }

                public QuickFix.Fields.StreamCalculationPeriodDatesXIDRef Get(QuickFix.Fields.StreamCalculationPeriodDatesXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationPeriodDatesXIDRef val)
                {
                    return IsSetStreamCalculationPeriodDatesXIDRef();
                }

                public bool IsSetStreamCalculationPeriodDatesXIDRef()
                {
                    return IsSetField(Tags.StreamCalculationPeriodDatesXIDRef);
                }
                public QuickFix.Fields.NoStreamCalculationPeriodDates NoStreamCalculationPeriodDates
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCalculationPeriodDates val = new QuickFix.Fields.NoStreamCalculationPeriodDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCalculationPeriodDates val)
                {
                    this.NoStreamCalculationPeriodDates = val;
                }

                public QuickFix.Fields.NoStreamCalculationPeriodDates Get(QuickFix.Fields.NoStreamCalculationPeriodDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCalculationPeriodDates val)
                {
                    return IsSetNoStreamCalculationPeriodDates();
                }

                public bool IsSetNoStreamCalculationPeriodDates()
                {
                    return IsSetField(Tags.NoStreamCalculationPeriodDates);
                }
                public QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod StreamCalculationBalanceOfFirstPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod val = new QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod val)
                {
                    this.StreamCalculationBalanceOfFirstPeriod = val;
                }

                public QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod Get(QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationBalanceOfFirstPeriod val)
                {
                    return IsSetStreamCalculationBalanceOfFirstPeriod();
                }

                public bool IsSetStreamCalculationBalanceOfFirstPeriod()
                {
                    return IsSetField(Tags.StreamCalculationBalanceOfFirstPeriod);
                }
                public QuickFix.Fields.StreamCalculationCorrectionPeriod StreamCalculationCorrectionPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationCorrectionPeriod val = new QuickFix.Fields.StreamCalculationCorrectionPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationCorrectionPeriod val)
                {
                    this.StreamCalculationCorrectionPeriod = val;
                }

                public QuickFix.Fields.StreamCalculationCorrectionPeriod Get(QuickFix.Fields.StreamCalculationCorrectionPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationCorrectionPeriod val)
                {
                    return IsSetStreamCalculationCorrectionPeriod();
                }

                public bool IsSetStreamCalculationCorrectionPeriod()
                {
                    return IsSetField(Tags.StreamCalculationCorrectionPeriod);
                }
                public QuickFix.Fields.StreamCalculationCorrectionUnit StreamCalculationCorrectionUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamCalculationCorrectionUnit val = new QuickFix.Fields.StreamCalculationCorrectionUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCalculationCorrectionUnit val)
                {
                    this.StreamCalculationCorrectionUnit = val;
                }

                public QuickFix.Fields.StreamCalculationCorrectionUnit Get(QuickFix.Fields.StreamCalculationCorrectionUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCalculationCorrectionUnit val)
                {
                    return IsSetStreamCalculationCorrectionUnit();
                }

                public bool IsSetStreamCalculationCorrectionUnit()
                {
                    return IsSetField(Tags.StreamCalculationCorrectionUnit);
                }
                public QuickFix.Fields.PaymentStreamType PaymentStreamType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamType val = new QuickFix.Fields.PaymentStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamType val)
                {
                    this.PaymentStreamType = val;
                }

                public QuickFix.Fields.PaymentStreamType Get(QuickFix.Fields.PaymentStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamType val)
                {
                    return IsSetPaymentStreamType();
                }

                public bool IsSetPaymentStreamType()
                {
                    return IsSetField(Tags.PaymentStreamType);
                }
                public QuickFix.Fields.PaymentStreamMarketRate PaymentStreamMarketRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMarketRate val = new QuickFix.Fields.PaymentStreamMarketRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMarketRate val)
                {
                    this.PaymentStreamMarketRate = val;
                }

                public QuickFix.Fields.PaymentStreamMarketRate Get(QuickFix.Fields.PaymentStreamMarketRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMarketRate val)
                {
                    return IsSetPaymentStreamMarketRate();
                }

                public bool IsSetPaymentStreamMarketRate()
                {
                    return IsSetField(Tags.PaymentStreamMarketRate);
                }
                public QuickFix.Fields.PaymentStreamDelayIndicator PaymentStreamDelayIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDelayIndicator val = new QuickFix.Fields.PaymentStreamDelayIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDelayIndicator val)
                {
                    this.PaymentStreamDelayIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamDelayIndicator Get(QuickFix.Fields.PaymentStreamDelayIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDelayIndicator val)
                {
                    return IsSetPaymentStreamDelayIndicator();
                }

                public bool IsSetPaymentStreamDelayIndicator()
                {
                    return IsSetField(Tags.PaymentStreamDelayIndicator);
                }
                public QuickFix.Fields.PaymentStreamSettlCurrency PaymentStreamSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamSettlCurrency val = new QuickFix.Fields.PaymentStreamSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamSettlCurrency val)
                {
                    this.PaymentStreamSettlCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamSettlCurrency Get(QuickFix.Fields.PaymentStreamSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamSettlCurrency val)
                {
                    return IsSetPaymentStreamSettlCurrency();
                }

                public bool IsSetPaymentStreamSettlCurrency()
                {
                    return IsSetField(Tags.PaymentStreamSettlCurrency);
                }
                public QuickFix.Fields.PaymentStreamDayCount PaymentStreamDayCount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDayCount val = new QuickFix.Fields.PaymentStreamDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDayCount val)
                {
                    this.PaymentStreamDayCount = val;
                }

                public QuickFix.Fields.PaymentStreamDayCount Get(QuickFix.Fields.PaymentStreamDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDayCount val)
                {
                    return IsSetPaymentStreamDayCount();
                }

                public bool IsSetPaymentStreamDayCount()
                {
                    return IsSetField(Tags.PaymentStreamDayCount);
                }
                public QuickFix.Fields.PaymentStreamAccrualDays PaymentStreamAccrualDays
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamAccrualDays val = new QuickFix.Fields.PaymentStreamAccrualDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamAccrualDays val)
                {
                    this.PaymentStreamAccrualDays = val;
                }

                public QuickFix.Fields.PaymentStreamAccrualDays Get(QuickFix.Fields.PaymentStreamAccrualDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamAccrualDays val)
                {
                    return IsSetPaymentStreamAccrualDays();
                }

                public bool IsSetPaymentStreamAccrualDays()
                {
                    return IsSetField(Tags.PaymentStreamAccrualDays);
                }
                public QuickFix.Fields.PaymentStreamDiscountType PaymentStreamDiscountType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDiscountType val = new QuickFix.Fields.PaymentStreamDiscountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDiscountType val)
                {
                    this.PaymentStreamDiscountType = val;
                }

                public QuickFix.Fields.PaymentStreamDiscountType Get(QuickFix.Fields.PaymentStreamDiscountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDiscountType val)
                {
                    return IsSetPaymentStreamDiscountType();
                }

                public bool IsSetPaymentStreamDiscountType()
                {
                    return IsSetField(Tags.PaymentStreamDiscountType);
                }
                public QuickFix.Fields.PaymentStreamDiscountRate PaymentStreamDiscountRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDiscountRate val = new QuickFix.Fields.PaymentStreamDiscountRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDiscountRate val)
                {
                    this.PaymentStreamDiscountRate = val;
                }

                public QuickFix.Fields.PaymentStreamDiscountRate Get(QuickFix.Fields.PaymentStreamDiscountRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDiscountRate val)
                {
                    return IsSetPaymentStreamDiscountRate();
                }

                public bool IsSetPaymentStreamDiscountRate()
                {
                    return IsSetField(Tags.PaymentStreamDiscountRate);
                }
                public QuickFix.Fields.PaymentStreamDiscountRateDayCount PaymentStreamDiscountRateDayCount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDiscountRateDayCount val = new QuickFix.Fields.PaymentStreamDiscountRateDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDiscountRateDayCount val)
                {
                    this.PaymentStreamDiscountRateDayCount = val;
                }

                public QuickFix.Fields.PaymentStreamDiscountRateDayCount Get(QuickFix.Fields.PaymentStreamDiscountRateDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDiscountRateDayCount val)
                {
                    return IsSetPaymentStreamDiscountRateDayCount();
                }

                public bool IsSetPaymentStreamDiscountRateDayCount()
                {
                    return IsSetField(Tags.PaymentStreamDiscountRateDayCount);
                }
                public QuickFix.Fields.PaymentStreamCompoundingMethod PaymentStreamCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingMethod val = new QuickFix.Fields.PaymentStreamCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingMethod val)
                {
                    this.PaymentStreamCompoundingMethod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingMethod Get(QuickFix.Fields.PaymentStreamCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingMethod val)
                {
                    return IsSetPaymentStreamCompoundingMethod();
                }

                public bool IsSetPaymentStreamCompoundingMethod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingMethod);
                }
                public QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator PaymentStreamInitialPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator val = new QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    this.PaymentStreamInitialPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator Get(QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    return IsSetPaymentStreamInitialPrincipalExchangeIndicator();
                }

                public bool IsSetPaymentStreamInitialPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.PaymentStreamInitialPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator PaymentStreamInterimPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator val = new QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    this.PaymentStreamInterimPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator Get(QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    return IsSetPaymentStreamInterimPrincipalExchangeIndicator();
                }

                public bool IsSetPaymentStreamInterimPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.PaymentStreamInterimPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator PaymentStreamFinalPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator val = new QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    this.PaymentStreamFinalPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator Get(QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    return IsSetPaymentStreamFinalPrincipalExchangeIndicator();
                }

                public bool IsSetPaymentStreamFinalPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.PaymentStreamFinalPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention PaymentStreamPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention val = new QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention val)
                {
                    this.PaymentStreamPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention Get(QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateBusinessDayConvention val)
                {
                    return IsSetPaymentStreamPaymentDateBusinessDayConvention();
                }

                public bool IsSetPaymentStreamPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters NoPaymentStreamPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters val = new QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters val)
                {
                    this.NoPaymentStreamPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters Get(QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamPaymentDateBusinessCenters val)
                {
                    return IsSetNoPaymentStreamPaymentDateBusinessCenters();
                }

                public bool IsSetNoPaymentStreamPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod PaymentStreamPaymentFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod val = new QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod val)
                {
                    this.PaymentStreamPaymentFrequencyPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod Get(QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentFrequencyPeriod val)
                {
                    return IsSetPaymentStreamPaymentFrequencyPeriod();
                }

                public bool IsSetPaymentStreamPaymentFrequencyPeriod()
                {
                    return IsSetField(Tags.PaymentStreamPaymentFrequencyPeriod);
                }
                public QuickFix.Fields.PaymentStreamPaymentFrequencyUnit PaymentStreamPaymentFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentFrequencyUnit val = new QuickFix.Fields.PaymentStreamPaymentFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentFrequencyUnit val)
                {
                    this.PaymentStreamPaymentFrequencyUnit = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentFrequencyUnit Get(QuickFix.Fields.PaymentStreamPaymentFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentFrequencyUnit val)
                {
                    return IsSetPaymentStreamPaymentFrequencyUnit();
                }

                public bool IsSetPaymentStreamPaymentFrequencyUnit()
                {
                    return IsSetField(Tags.PaymentStreamPaymentFrequencyUnit);
                }
                public QuickFix.Fields.PaymentStreamPaymentRollConvention PaymentStreamPaymentRollConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentRollConvention val = new QuickFix.Fields.PaymentStreamPaymentRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentRollConvention val)
                {
                    this.PaymentStreamPaymentRollConvention = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentRollConvention Get(QuickFix.Fields.PaymentStreamPaymentRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentRollConvention val)
                {
                    return IsSetPaymentStreamPaymentRollConvention();
                }

                public bool IsSetPaymentStreamPaymentRollConvention()
                {
                    return IsSetField(Tags.PaymentStreamPaymentRollConvention);
                }
                public QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted PaymentStreamFirstPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted val = new QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted val)
                {
                    this.PaymentStreamFirstPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted Get(QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstPaymentDateUnadjusted val)
                {
                    return IsSetPaymentStreamFirstPaymentDateUnadjusted();
                }

                public bool IsSetPaymentStreamFirstPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamFirstPaymentDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted PaymentStreamLastRegularPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted val = new QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    this.PaymentStreamLastRegularPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted Get(QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    return IsSetPaymentStreamLastRegularPaymentDateUnadjusted();
                }

                public bool IsSetPaymentStreamLastRegularPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamLastRegularPaymentDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamPaymentDateRelativeTo PaymentStreamPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentDateRelativeTo val = new QuickFix.Fields.PaymentStreamPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentDateRelativeTo val)
                {
                    this.PaymentStreamPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentDateRelativeTo Get(QuickFix.Fields.PaymentStreamPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateRelativeTo val)
                {
                    return IsSetPaymentStreamPaymentDateRelativeTo();
                }

                public bool IsSetPaymentStreamPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamPaymentDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod PaymentStreamPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod val)
                {
                    this.PaymentStreamPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamPaymentDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit PaymentStreamPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit val = new QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit val)
                {
                    this.PaymentStreamPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit Get(QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateOffsetUnit val)
                {
                    return IsSetPaymentStreamPaymentDateOffsetUnit();
                }

                public bool IsSetPaymentStreamPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType PaymentStreamPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType val = new QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType val)
                {
                    this.PaymentStreamPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType Get(QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateOffsetDayType val)
                {
                    return IsSetPaymentStreamPaymentDateOffsetDayType();
                }

                public bool IsSetPaymentStreamPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.NoPaymentStreamPaymentDates NoPaymentStreamPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamPaymentDates val = new QuickFix.Fields.NoPaymentStreamPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamPaymentDates val)
                {
                    this.NoPaymentStreamPaymentDates = val;
                }

                public QuickFix.Fields.NoPaymentStreamPaymentDates Get(QuickFix.Fields.NoPaymentStreamPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamPaymentDates val)
                {
                    return IsSetNoPaymentStreamPaymentDates();
                }

                public bool IsSetNoPaymentStreamPaymentDates()
                {
                    return IsSetField(Tags.NoPaymentStreamPaymentDates);
                }
                public QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator PaymentStreamMasterAgreementPaymentDatesIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator val = new QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    this.PaymentStreamMasterAgreementPaymentDatesIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator Get(QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    return IsSetPaymentStreamMasterAgreementPaymentDatesIndicator();
                }

                public bool IsSetPaymentStreamMasterAgreementPaymentDatesIndicator()
                {
                    return IsSetField(Tags.PaymentStreamMasterAgreementPaymentDatesIndicator);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted PaymentStreamFinalPricePaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    this.PaymentStreamFinalPricePaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateUnadjusted();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo PaymentStreamFinalPricePaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    this.PaymentStreamFinalPricePaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateRelativeTo();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod PaymentStreamFinalPricePaymentDateOffsetfPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod val)
                {
                    this.PaymentStreamFinalPricePaymentDateOffsetfPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetfPeriod val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateOffsetfPeriod();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateOffsetfPeriod()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateOffsetfPeriod);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit PaymentStreamFinalPricePaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    this.PaymentStreamFinalPricePaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateOffsetUnit();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType PaymentStreamFinalPricePaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    this.PaymentStreamFinalPricePaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateOffsetDayType();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted PaymentStreamFinalPricePaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted val = new QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    this.PaymentStreamFinalPricePaymentDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted Get(QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    return IsSetPaymentStreamFinalPricePaymentDateAdjusted();
                }

                public bool IsSetPaymentStreamFinalPricePaymentDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamFinalPricePaymentDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamResetDateRelativeTo PaymentStreamResetDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamResetDateRelativeTo val = new QuickFix.Fields.PaymentStreamResetDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamResetDateRelativeTo val)
                {
                    this.PaymentStreamResetDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamResetDateRelativeTo Get(QuickFix.Fields.PaymentStreamResetDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamResetDateRelativeTo val)
                {
                    return IsSetPaymentStreamResetDateRelativeTo();
                }

                public bool IsSetPaymentStreamResetDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamResetDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention PaymentStreamResetDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention val = new QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention val)
                {
                    this.PaymentStreamResetDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention Get(QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamResetDateBusinessDayConvention val)
                {
                    return IsSetPaymentStreamResetDateBusinessDayConvention();
                }

                public bool IsSetPaymentStreamResetDateBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamResetDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters NoPaymentStreamResetDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters val = new QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters val)
                {
                    this.NoPaymentStreamResetDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters Get(QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamResetDateBusinessCenters val)
                {
                    return IsSetNoPaymentStreamResetDateBusinessCenters();
                }

                public bool IsSetNoPaymentStreamResetDateBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamResetDateBusinessCenters);
                }
                public QuickFix.Fields.PaymentStreamResetFrequencyPeriod PaymentStreamResetFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamResetFrequencyPeriod val = new QuickFix.Fields.PaymentStreamResetFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamResetFrequencyPeriod val)
                {
                    this.PaymentStreamResetFrequencyPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamResetFrequencyPeriod Get(QuickFix.Fields.PaymentStreamResetFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamResetFrequencyPeriod val)
                {
                    return IsSetPaymentStreamResetFrequencyPeriod();
                }

                public bool IsSetPaymentStreamResetFrequencyPeriod()
                {
                    return IsSetField(Tags.PaymentStreamResetFrequencyPeriod);
                }
                public QuickFix.Fields.PaymentStreamResetFrequencyUnit PaymentStreamResetFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamResetFrequencyUnit val = new QuickFix.Fields.PaymentStreamResetFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamResetFrequencyUnit val)
                {
                    this.PaymentStreamResetFrequencyUnit = val;
                }

                public QuickFix.Fields.PaymentStreamResetFrequencyUnit Get(QuickFix.Fields.PaymentStreamResetFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamResetFrequencyUnit val)
                {
                    return IsSetPaymentStreamResetFrequencyUnit();
                }

                public bool IsSetPaymentStreamResetFrequencyUnit()
                {
                    return IsSetField(Tags.PaymentStreamResetFrequencyUnit);
                }
                public QuickFix.Fields.PaymentStreamResetWeeklyRollConvention PaymentStreamResetWeeklyRollConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamResetWeeklyRollConvention val = new QuickFix.Fields.PaymentStreamResetWeeklyRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamResetWeeklyRollConvention val)
                {
                    this.PaymentStreamResetWeeklyRollConvention = val;
                }

                public QuickFix.Fields.PaymentStreamResetWeeklyRollConvention Get(QuickFix.Fields.PaymentStreamResetWeeklyRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamResetWeeklyRollConvention val)
                {
                    return IsSetPaymentStreamResetWeeklyRollConvention();
                }

                public bool IsSetPaymentStreamResetWeeklyRollConvention()
                {
                    return IsSetField(Tags.PaymentStreamResetWeeklyRollConvention);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo PaymentStreamInitialFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo val = new QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo val)
                {
                    this.PaymentStreamInitialFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo Get(QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateRelativeTo val)
                {
                    return IsSetPaymentStreamInitialFixingDateRelativeTo();
                }

                public bool IsSetPaymentStreamInitialFixingDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention PaymentStreamInitialFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention val = new QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    this.PaymentStreamInitialFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention Get(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    return IsSetPaymentStreamInitialFixingDateBusinessDayConvention();
                }

                public bool IsSetPaymentStreamInitialFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters NoPaymentStreamInitialFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters val = new QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    this.NoPaymentStreamInitialFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters Get(QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    return IsSetNoPaymentStreamInitialFixingDateBusinessCenters();
                }

                public bool IsSetNoPaymentStreamInitialFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamInitialFixingDateBusinessCenters);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod PaymentStreamInitialFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    this.PaymentStreamInitialFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamInitialFixingDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamInitialFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit PaymentStreamInitialFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit val = new QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit val)
                {
                    this.PaymentStreamInitialFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit Get(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetUnit val)
                {
                    return IsSetPaymentStreamInitialFixingDateOffsetUnit();
                }

                public bool IsSetPaymentStreamInitialFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType PaymentStreamInitialFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType val = new QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType val)
                {
                    this.PaymentStreamInitialFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType Get(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateOffsetDayType val)
                {
                    return IsSetPaymentStreamInitialFixingDateOffsetDayType();
                }

                public bool IsSetPaymentStreamInitialFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted PaymentStreamInitialFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted val = new QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted val)
                {
                    this.PaymentStreamInitialFixingDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted Get(QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateAdjusted val)
                {
                    return IsSetPaymentStreamInitialFixingDateAdjusted();
                }

                public bool IsSetPaymentStreamInitialFixingDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamInitialFixingDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamFixingDateRelativeTo PaymentStreamFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateRelativeTo val = new QuickFix.Fields.PaymentStreamFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateRelativeTo val)
                {
                    this.PaymentStreamFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateRelativeTo Get(QuickFix.Fields.PaymentStreamFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateRelativeTo val)
                {
                    return IsSetPaymentStreamFixingDateRelativeTo();
                }

                public bool IsSetPaymentStreamFixingDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention PaymentStreamFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention val = new QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention val)
                {
                    this.PaymentStreamFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention Get(QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateBusinessDayConvention val)
                {
                    return IsSetPaymentStreamFixingDateBusinessDayConvention();
                }

                public bool IsSetPaymentStreamFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters NoPaymentStreamFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters val = new QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters val)
                {
                    this.NoPaymentStreamFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters Get(QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamFixingDateBusinessCenters val)
                {
                    return IsSetNoPaymentStreamFixingDateBusinessCenters();
                }

                public bool IsSetNoPaymentStreamFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamFixingDateBusinessCenters);
                }
                public QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod PaymentStreamFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod val)
                {
                    this.PaymentStreamFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamFixingDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamFixingDateOffsetUnit PaymentStreamFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateOffsetUnit val = new QuickFix.Fields.PaymentStreamFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateOffsetUnit val)
                {
                    this.PaymentStreamFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateOffsetUnit Get(QuickFix.Fields.PaymentStreamFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateOffsetUnit val)
                {
                    return IsSetPaymentStreamFixingDateOffsetUnit();
                }

                public bool IsSetPaymentStreamFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamFixingDateOffsetDayType PaymentStreamFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateOffsetDayType val = new QuickFix.Fields.PaymentStreamFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateOffsetDayType val)
                {
                    this.PaymentStreamFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateOffsetDayType Get(QuickFix.Fields.PaymentStreamFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateOffsetDayType val)
                {
                    return IsSetPaymentStreamFixingDateOffsetDayType();
                }

                public bool IsSetPaymentStreamFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamFixingDateAdjusted PaymentStreamFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixingDateAdjusted val = new QuickFix.Fields.PaymentStreamFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixingDateAdjusted val)
                {
                    this.PaymentStreamFixingDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFixingDateAdjusted Get(QuickFix.Fields.PaymentStreamFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateAdjusted val)
                {
                    return IsSetPaymentStreamFixingDateAdjusted();
                }

                public bool IsSetPaymentStreamFixingDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamFixingDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod PaymentStreamRateCutoffDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    this.PaymentStreamRateCutoffDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamRateCutoffDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamRateCutoffDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamRateCutoffDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit PaymentStreamRateCutoffDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit val = new QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit val)
                {
                    this.PaymentStreamRateCutoffDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit Get(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetUnit val)
                {
                    return IsSetPaymentStreamRateCutoffDateOffsetUnit();
                }

                public bool IsSetPaymentStreamRateCutoffDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamRateCutoffDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType PaymentStreamRateCutoffDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType val = new QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType val)
                {
                    this.PaymentStreamRateCutoffDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType Get(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateCutoffDateOffsetDayType val)
                {
                    return IsSetPaymentStreamRateCutoffDateOffsetDayType();
                }

                public bool IsSetPaymentStreamRateCutoffDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamRateCutoffDateOffsetDayType);
                }
                public QuickFix.Fields.NoPaymentStreamFixingDates NoPaymentStreamFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamFixingDates val = new QuickFix.Fields.NoPaymentStreamFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamFixingDates val)
                {
                    this.NoPaymentStreamFixingDates = val;
                }

                public QuickFix.Fields.NoPaymentStreamFixingDates Get(QuickFix.Fields.NoPaymentStreamFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamFixingDates val)
                {
                    return IsSetNoPaymentStreamFixingDates();
                }

                public bool IsSetNoPaymentStreamFixingDates()
                {
                    return IsSetField(Tags.NoPaymentStreamFixingDates);
                }
                public QuickFix.Fields.PaymentStreamRate PaymentStreamRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRate val = new QuickFix.Fields.PaymentStreamRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRate val)
                {
                    this.PaymentStreamRate = val;
                }

                public QuickFix.Fields.PaymentStreamRate Get(QuickFix.Fields.PaymentStreamRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRate val)
                {
                    return IsSetPaymentStreamRate();
                }

                public bool IsSetPaymentStreamRate()
                {
                    return IsSetField(Tags.PaymentStreamRate);
                }
                public QuickFix.Fields.PaymentStreamFixedAmount PaymentStreamFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixedAmount val = new QuickFix.Fields.PaymentStreamFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixedAmount val)
                {
                    this.PaymentStreamFixedAmount = val;
                }

                public QuickFix.Fields.PaymentStreamFixedAmount Get(QuickFix.Fields.PaymentStreamFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixedAmount val)
                {
                    return IsSetPaymentStreamFixedAmount();
                }

                public bool IsSetPaymentStreamFixedAmount()
                {
                    return IsSetField(Tags.PaymentStreamFixedAmount);
                }
                public QuickFix.Fields.PaymentStreamRateOrAmountCurrency PaymentStreamRateOrAmountCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateOrAmountCurrency val = new QuickFix.Fields.PaymentStreamRateOrAmountCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateOrAmountCurrency val)
                {
                    this.PaymentStreamRateOrAmountCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamRateOrAmountCurrency Get(QuickFix.Fields.PaymentStreamRateOrAmountCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateOrAmountCurrency val)
                {
                    return IsSetPaymentStreamRateOrAmountCurrency();
                }

                public bool IsSetPaymentStreamRateOrAmountCurrency()
                {
                    return IsSetField(Tags.PaymentStreamRateOrAmountCurrency);
                }
                public QuickFix.Fields.PaymentStreamFutureValueNotional PaymentStreamFutureValueNotional
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFutureValueNotional val = new QuickFix.Fields.PaymentStreamFutureValueNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFutureValueNotional val)
                {
                    this.PaymentStreamFutureValueNotional = val;
                }

                public QuickFix.Fields.PaymentStreamFutureValueNotional Get(QuickFix.Fields.PaymentStreamFutureValueNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFutureValueNotional val)
                {
                    return IsSetPaymentStreamFutureValueNotional();
                }

                public bool IsSetPaymentStreamFutureValueNotional()
                {
                    return IsSetField(Tags.PaymentStreamFutureValueNotional);
                }
                public QuickFix.Fields.PaymentStreamFutureValueDateAdjusted PaymentStreamFutureValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFutureValueDateAdjusted val = new QuickFix.Fields.PaymentStreamFutureValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFutureValueDateAdjusted val)
                {
                    this.PaymentStreamFutureValueDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFutureValueDateAdjusted Get(QuickFix.Fields.PaymentStreamFutureValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFutureValueDateAdjusted val)
                {
                    return IsSetPaymentStreamFutureValueDateAdjusted();
                }

                public bool IsSetPaymentStreamFutureValueDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamFutureValueDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure PaymentStreamFixedAmountUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure val = new QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure val)
                {
                    this.PaymentStreamFixedAmountUnitOfMeasure = val;
                }

                public QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure Get(QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFixedAmountUnitOfMeasure val)
                {
                    return IsSetPaymentStreamFixedAmountUnitOfMeasure();
                }

                public bool IsSetPaymentStreamFixedAmountUnitOfMeasure()
                {
                    return IsSetField(Tags.PaymentStreamFixedAmountUnitOfMeasure);
                }
                public QuickFix.Fields.PaymentStreamTotalFixedAmount PaymentStreamTotalFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamTotalFixedAmount val = new QuickFix.Fields.PaymentStreamTotalFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamTotalFixedAmount val)
                {
                    this.PaymentStreamTotalFixedAmount = val;
                }

                public QuickFix.Fields.PaymentStreamTotalFixedAmount Get(QuickFix.Fields.PaymentStreamTotalFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamTotalFixedAmount val)
                {
                    return IsSetPaymentStreamTotalFixedAmount();
                }

                public bool IsSetPaymentStreamTotalFixedAmount()
                {
                    return IsSetField(Tags.PaymentStreamTotalFixedAmount);
                }
                public QuickFix.Fields.PaymentStreamWorldScaleRate PaymentStreamWorldScaleRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamWorldScaleRate val = new QuickFix.Fields.PaymentStreamWorldScaleRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamWorldScaleRate val)
                {
                    this.PaymentStreamWorldScaleRate = val;
                }

                public QuickFix.Fields.PaymentStreamWorldScaleRate Get(QuickFix.Fields.PaymentStreamWorldScaleRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamWorldScaleRate val)
                {
                    return IsSetPaymentStreamWorldScaleRate();
                }

                public bool IsSetPaymentStreamWorldScaleRate()
                {
                    return IsSetField(Tags.PaymentStreamWorldScaleRate);
                }
                public QuickFix.Fields.PaymentStreamContractPrice PaymentStreamContractPrice
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamContractPrice val = new QuickFix.Fields.PaymentStreamContractPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamContractPrice val)
                {
                    this.PaymentStreamContractPrice = val;
                }

                public QuickFix.Fields.PaymentStreamContractPrice Get(QuickFix.Fields.PaymentStreamContractPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamContractPrice val)
                {
                    return IsSetPaymentStreamContractPrice();
                }

                public bool IsSetPaymentStreamContractPrice()
                {
                    return IsSetField(Tags.PaymentStreamContractPrice);
                }
                public QuickFix.Fields.PaymentStreamContractPriceCurrency PaymentStreamContractPriceCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamContractPriceCurrency val = new QuickFix.Fields.PaymentStreamContractPriceCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamContractPriceCurrency val)
                {
                    this.PaymentStreamContractPriceCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamContractPriceCurrency Get(QuickFix.Fields.PaymentStreamContractPriceCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamContractPriceCurrency val)
                {
                    return IsSetPaymentStreamContractPriceCurrency();
                }

                public bool IsSetPaymentStreamContractPriceCurrency()
                {
                    return IsSetField(Tags.PaymentStreamContractPriceCurrency);
                }
                public QuickFix.Fields.PaymentStreamRateIndex PaymentStreamRateIndex
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndex val = new QuickFix.Fields.PaymentStreamRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndex val)
                {
                    this.PaymentStreamRateIndex = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndex Get(QuickFix.Fields.PaymentStreamRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndex val)
                {
                    return IsSetPaymentStreamRateIndex();
                }

                public bool IsSetPaymentStreamRateIndex()
                {
                    return IsSetField(Tags.PaymentStreamRateIndex);
                }
                public QuickFix.Fields.PaymentStreamRateIndexSource PaymentStreamRateIndexSource
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexSource val = new QuickFix.Fields.PaymentStreamRateIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexSource val)
                {
                    this.PaymentStreamRateIndexSource = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexSource Get(QuickFix.Fields.PaymentStreamRateIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexSource val)
                {
                    return IsSetPaymentStreamRateIndexSource();
                }

                public bool IsSetPaymentStreamRateIndexSource()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexSource);
                }
                public QuickFix.Fields.PaymentStreamRateIndexCurveUnit PaymentStreamRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexCurveUnit val = new QuickFix.Fields.PaymentStreamRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexCurveUnit val)
                {
                    this.PaymentStreamRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexCurveUnit Get(QuickFix.Fields.PaymentStreamRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexCurveUnit val)
                {
                    return IsSetPaymentStreamRateIndexCurveUnit();
                }

                public bool IsSetPaymentStreamRateIndexCurveUnit()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexCurveUnit);
                }
                public QuickFix.Fields.PaymentStreamRateIndexCurvePeriod PaymentStreamRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexCurvePeriod val = new QuickFix.Fields.PaymentStreamRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexCurvePeriod val)
                {
                    this.PaymentStreamRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexCurvePeriod Get(QuickFix.Fields.PaymentStreamRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexCurvePeriod val)
                {
                    return IsSetPaymentStreamRateIndexCurvePeriod();
                }

                public bool IsSetPaymentStreamRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexCurvePeriod);
                }
                public QuickFix.Fields.PaymentStreamRateMultiplier PaymentStreamRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateMultiplier val = new QuickFix.Fields.PaymentStreamRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateMultiplier val)
                {
                    this.PaymentStreamRateMultiplier = val;
                }

                public QuickFix.Fields.PaymentStreamRateMultiplier Get(QuickFix.Fields.PaymentStreamRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateMultiplier val)
                {
                    return IsSetPaymentStreamRateMultiplier();
                }

                public bool IsSetPaymentStreamRateMultiplier()
                {
                    return IsSetField(Tags.PaymentStreamRateMultiplier);
                }
                public QuickFix.Fields.PaymentStreamRateSpread PaymentStreamRateSpread
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateSpread val = new QuickFix.Fields.PaymentStreamRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateSpread val)
                {
                    this.PaymentStreamRateSpread = val;
                }

                public QuickFix.Fields.PaymentStreamRateSpread Get(QuickFix.Fields.PaymentStreamRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateSpread val)
                {
                    return IsSetPaymentStreamRateSpread();
                }

                public bool IsSetPaymentStreamRateSpread()
                {
                    return IsSetField(Tags.PaymentStreamRateSpread);
                }
                public QuickFix.Fields.PaymentStreamRateSpreadPositionType PaymentStreamRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateSpreadPositionType val = new QuickFix.Fields.PaymentStreamRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateSpreadPositionType val)
                {
                    this.PaymentStreamRateSpreadPositionType = val;
                }

                public QuickFix.Fields.PaymentStreamRateSpreadPositionType Get(QuickFix.Fields.PaymentStreamRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateSpreadPositionType val)
                {
                    return IsSetPaymentStreamRateSpreadPositionType();
                }

                public bool IsSetPaymentStreamRateSpreadPositionType()
                {
                    return IsSetField(Tags.PaymentStreamRateSpreadPositionType);
                }
                public QuickFix.Fields.PaymentStreamRateTreatment PaymentStreamRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateTreatment val = new QuickFix.Fields.PaymentStreamRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateTreatment val)
                {
                    this.PaymentStreamRateTreatment = val;
                }

                public QuickFix.Fields.PaymentStreamRateTreatment Get(QuickFix.Fields.PaymentStreamRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateTreatment val)
                {
                    return IsSetPaymentStreamRateTreatment();
                }

                public bool IsSetPaymentStreamRateTreatment()
                {
                    return IsSetField(Tags.PaymentStreamRateTreatment);
                }
                public QuickFix.Fields.PaymentStreamCapRate PaymentStreamCapRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCapRate val = new QuickFix.Fields.PaymentStreamCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCapRate val)
                {
                    this.PaymentStreamCapRate = val;
                }

                public QuickFix.Fields.PaymentStreamCapRate Get(QuickFix.Fields.PaymentStreamCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCapRate val)
                {
                    return IsSetPaymentStreamCapRate();
                }

                public bool IsSetPaymentStreamCapRate()
                {
                    return IsSetField(Tags.PaymentStreamCapRate);
                }
                public QuickFix.Fields.PaymentStreamCapRateBuySide PaymentStreamCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCapRateBuySide val = new QuickFix.Fields.PaymentStreamCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCapRateBuySide val)
                {
                    this.PaymentStreamCapRateBuySide = val;
                }

                public QuickFix.Fields.PaymentStreamCapRateBuySide Get(QuickFix.Fields.PaymentStreamCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCapRateBuySide val)
                {
                    return IsSetPaymentStreamCapRateBuySide();
                }

                public bool IsSetPaymentStreamCapRateBuySide()
                {
                    return IsSetField(Tags.PaymentStreamCapRateBuySide);
                }
                public QuickFix.Fields.PaymentStreamCapRateSellSide PaymentStreamCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCapRateSellSide val = new QuickFix.Fields.PaymentStreamCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCapRateSellSide val)
                {
                    this.PaymentStreamCapRateSellSide = val;
                }

                public QuickFix.Fields.PaymentStreamCapRateSellSide Get(QuickFix.Fields.PaymentStreamCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCapRateSellSide val)
                {
                    return IsSetPaymentStreamCapRateSellSide();
                }

                public bool IsSetPaymentStreamCapRateSellSide()
                {
                    return IsSetField(Tags.PaymentStreamCapRateSellSide);
                }
                public QuickFix.Fields.PaymentStreamFloorRate PaymentStreamFloorRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFloorRate val = new QuickFix.Fields.PaymentStreamFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFloorRate val)
                {
                    this.PaymentStreamFloorRate = val;
                }

                public QuickFix.Fields.PaymentStreamFloorRate Get(QuickFix.Fields.PaymentStreamFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFloorRate val)
                {
                    return IsSetPaymentStreamFloorRate();
                }

                public bool IsSetPaymentStreamFloorRate()
                {
                    return IsSetField(Tags.PaymentStreamFloorRate);
                }
                public QuickFix.Fields.PaymentStreamFloorRateBuySide PaymentStreamFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFloorRateBuySide val = new QuickFix.Fields.PaymentStreamFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFloorRateBuySide val)
                {
                    this.PaymentStreamFloorRateBuySide = val;
                }

                public QuickFix.Fields.PaymentStreamFloorRateBuySide Get(QuickFix.Fields.PaymentStreamFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFloorRateBuySide val)
                {
                    return IsSetPaymentStreamFloorRateBuySide();
                }

                public bool IsSetPaymentStreamFloorRateBuySide()
                {
                    return IsSetField(Tags.PaymentStreamFloorRateBuySide);
                }
                public QuickFix.Fields.PaymentStreamFloorRateSellSide PaymentStreamFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFloorRateSellSide val = new QuickFix.Fields.PaymentStreamFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFloorRateSellSide val)
                {
                    this.PaymentStreamFloorRateSellSide = val;
                }

                public QuickFix.Fields.PaymentStreamFloorRateSellSide Get(QuickFix.Fields.PaymentStreamFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFloorRateSellSide val)
                {
                    return IsSetPaymentStreamFloorRateSellSide();
                }

                public bool IsSetPaymentStreamFloorRateSellSide()
                {
                    return IsSetField(Tags.PaymentStreamFloorRateSellSide);
                }
                public QuickFix.Fields.PaymentStreamInitialRate PaymentStreamInitialRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInitialRate val = new QuickFix.Fields.PaymentStreamInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInitialRate val)
                {
                    this.PaymentStreamInitialRate = val;
                }

                public QuickFix.Fields.PaymentStreamInitialRate Get(QuickFix.Fields.PaymentStreamInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInitialRate val)
                {
                    return IsSetPaymentStreamInitialRate();
                }

                public bool IsSetPaymentStreamInitialRate()
                {
                    return IsSetField(Tags.PaymentStreamInitialRate);
                }
                public QuickFix.Fields.PaymentStreamFinalRateRoundingDirection PaymentStreamFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalRateRoundingDirection val = new QuickFix.Fields.PaymentStreamFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalRateRoundingDirection val)
                {
                    this.PaymentStreamFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.PaymentStreamFinalRateRoundingDirection Get(QuickFix.Fields.PaymentStreamFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalRateRoundingDirection val)
                {
                    return IsSetPaymentStreamFinalRateRoundingDirection();
                }

                public bool IsSetPaymentStreamFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.PaymentStreamFinalRateRoundingDirection);
                }
                public QuickFix.Fields.PaymentStreamFinalRatePrecision PaymentStreamFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalRatePrecision val = new QuickFix.Fields.PaymentStreamFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalRatePrecision val)
                {
                    this.PaymentStreamFinalRatePrecision = val;
                }

                public QuickFix.Fields.PaymentStreamFinalRatePrecision Get(QuickFix.Fields.PaymentStreamFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalRatePrecision val)
                {
                    return IsSetPaymentStreamFinalRatePrecision();
                }

                public bool IsSetPaymentStreamFinalRatePrecision()
                {
                    return IsSetField(Tags.PaymentStreamFinalRatePrecision);
                }
                public QuickFix.Fields.PaymentStreamAveragingMethod PaymentStreamAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamAveragingMethod val = new QuickFix.Fields.PaymentStreamAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamAveragingMethod val)
                {
                    this.PaymentStreamAveragingMethod = val;
                }

                public QuickFix.Fields.PaymentStreamAveragingMethod Get(QuickFix.Fields.PaymentStreamAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamAveragingMethod val)
                {
                    return IsSetPaymentStreamAveragingMethod();
                }

                public bool IsSetPaymentStreamAveragingMethod()
                {
                    return IsSetField(Tags.PaymentStreamAveragingMethod);
                }
                public QuickFix.Fields.PaymentStreamNegativeRateTreatment PaymentStreamNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNegativeRateTreatment val = new QuickFix.Fields.PaymentStreamNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNegativeRateTreatment val)
                {
                    this.PaymentStreamNegativeRateTreatment = val;
                }

                public QuickFix.Fields.PaymentStreamNegativeRateTreatment Get(QuickFix.Fields.PaymentStreamNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNegativeRateTreatment val)
                {
                    return IsSetPaymentStreamNegativeRateTreatment();
                }

                public bool IsSetPaymentStreamNegativeRateTreatment()
                {
                    return IsSetField(Tags.PaymentStreamNegativeRateTreatment);
                }
                public QuickFix.Fields.PaymentStreamInflationLagPeriod PaymentStreamInflationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationLagPeriod val = new QuickFix.Fields.PaymentStreamInflationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationLagPeriod val)
                {
                    this.PaymentStreamInflationLagPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamInflationLagPeriod Get(QuickFix.Fields.PaymentStreamInflationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationLagPeriod val)
                {
                    return IsSetPaymentStreamInflationLagPeriod();
                }

                public bool IsSetPaymentStreamInflationLagPeriod()
                {
                    return IsSetField(Tags.PaymentStreamInflationLagPeriod);
                }
                public QuickFix.Fields.PaymentStreamInflationLagUnit PaymentStreamInflationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationLagUnit val = new QuickFix.Fields.PaymentStreamInflationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationLagUnit val)
                {
                    this.PaymentStreamInflationLagUnit = val;
                }

                public QuickFix.Fields.PaymentStreamInflationLagUnit Get(QuickFix.Fields.PaymentStreamInflationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationLagUnit val)
                {
                    return IsSetPaymentStreamInflationLagUnit();
                }

                public bool IsSetPaymentStreamInflationLagUnit()
                {
                    return IsSetField(Tags.PaymentStreamInflationLagUnit);
                }
                public QuickFix.Fields.PaymentStreamInflationLagDayType PaymentStreamInflationLagDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationLagDayType val = new QuickFix.Fields.PaymentStreamInflationLagDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationLagDayType val)
                {
                    this.PaymentStreamInflationLagDayType = val;
                }

                public QuickFix.Fields.PaymentStreamInflationLagDayType Get(QuickFix.Fields.PaymentStreamInflationLagDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationLagDayType val)
                {
                    return IsSetPaymentStreamInflationLagDayType();
                }

                public bool IsSetPaymentStreamInflationLagDayType()
                {
                    return IsSetField(Tags.PaymentStreamInflationLagDayType);
                }
                public QuickFix.Fields.PaymentStreamInflationInterpolationMethod PaymentStreamInflationInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationInterpolationMethod val = new QuickFix.Fields.PaymentStreamInflationInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationInterpolationMethod val)
                {
                    this.PaymentStreamInflationInterpolationMethod = val;
                }

                public QuickFix.Fields.PaymentStreamInflationInterpolationMethod Get(QuickFix.Fields.PaymentStreamInflationInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationInterpolationMethod val)
                {
                    return IsSetPaymentStreamInflationInterpolationMethod();
                }

                public bool IsSetPaymentStreamInflationInterpolationMethod()
                {
                    return IsSetField(Tags.PaymentStreamInflationInterpolationMethod);
                }
                public QuickFix.Fields.PaymentStreamInflationIndexSource PaymentStreamInflationIndexSource
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationIndexSource val = new QuickFix.Fields.PaymentStreamInflationIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationIndexSource val)
                {
                    this.PaymentStreamInflationIndexSource = val;
                }

                public QuickFix.Fields.PaymentStreamInflationIndexSource Get(QuickFix.Fields.PaymentStreamInflationIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationIndexSource val)
                {
                    return IsSetPaymentStreamInflationIndexSource();
                }

                public bool IsSetPaymentStreamInflationIndexSource()
                {
                    return IsSetField(Tags.PaymentStreamInflationIndexSource);
                }
                public QuickFix.Fields.PaymentStreamInflationPublicationSource PaymentStreamInflationPublicationSource
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationPublicationSource val = new QuickFix.Fields.PaymentStreamInflationPublicationSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationPublicationSource val)
                {
                    this.PaymentStreamInflationPublicationSource = val;
                }

                public QuickFix.Fields.PaymentStreamInflationPublicationSource Get(QuickFix.Fields.PaymentStreamInflationPublicationSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationPublicationSource val)
                {
                    return IsSetPaymentStreamInflationPublicationSource();
                }

                public bool IsSetPaymentStreamInflationPublicationSource()
                {
                    return IsSetField(Tags.PaymentStreamInflationPublicationSource);
                }
                public QuickFix.Fields.PaymentStreamInflationInitialIndexLevel PaymentStreamInflationInitialIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationInitialIndexLevel val = new QuickFix.Fields.PaymentStreamInflationInitialIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationInitialIndexLevel val)
                {
                    this.PaymentStreamInflationInitialIndexLevel = val;
                }

                public QuickFix.Fields.PaymentStreamInflationInitialIndexLevel Get(QuickFix.Fields.PaymentStreamInflationInitialIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationInitialIndexLevel val)
                {
                    return IsSetPaymentStreamInflationInitialIndexLevel();
                }

                public bool IsSetPaymentStreamInflationInitialIndexLevel()
                {
                    return IsSetField(Tags.PaymentStreamInflationInitialIndexLevel);
                }
                public QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable PaymentStreamInflationFallbackBondApplicable
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable val = new QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable val)
                {
                    this.PaymentStreamInflationFallbackBondApplicable = val;
                }

                public QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable Get(QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInflationFallbackBondApplicable val)
                {
                    return IsSetPaymentStreamInflationFallbackBondApplicable();
                }

                public bool IsSetPaymentStreamInflationFallbackBondApplicable()
                {
                    return IsSetField(Tags.PaymentStreamInflationFallbackBondApplicable);
                }
                public QuickFix.Fields.PaymentStreamFRADiscounting PaymentStreamFRADiscounting
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFRADiscounting val = new QuickFix.Fields.PaymentStreamFRADiscounting();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFRADiscounting val)
                {
                    this.PaymentStreamFRADiscounting = val;
                }

                public QuickFix.Fields.PaymentStreamFRADiscounting Get(QuickFix.Fields.PaymentStreamFRADiscounting val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFRADiscounting val)
                {
                    return IsSetPaymentStreamFRADiscounting();
                }

                public bool IsSetPaymentStreamFRADiscounting()
                {
                    return IsSetField(Tags.PaymentStreamFRADiscounting);
                }
                public QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod PaymentStreamRateIndex2CurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod val = new QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod val)
                {
                    this.PaymentStreamRateIndex2CurvePeriod = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod Get(QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndex2CurvePeriod val)
                {
                    return IsSetPaymentStreamRateIndex2CurvePeriod();
                }

                public bool IsSetPaymentStreamRateIndex2CurvePeriod()
                {
                    return IsSetField(Tags.PaymentStreamRateIndex2CurvePeriod);
                }
                public QuickFix.Fields.PaymentStreamRateIndex2CurveUnit PaymentStreamRateIndex2CurveUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndex2CurveUnit val = new QuickFix.Fields.PaymentStreamRateIndex2CurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndex2CurveUnit val)
                {
                    this.PaymentStreamRateIndex2CurveUnit = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndex2CurveUnit Get(QuickFix.Fields.PaymentStreamRateIndex2CurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndex2CurveUnit val)
                {
                    return IsSetPaymentStreamRateIndex2CurveUnit();
                }

                public bool IsSetPaymentStreamRateIndex2CurveUnit()
                {
                    return IsSetField(Tags.PaymentStreamRateIndex2CurveUnit);
                }
                public QuickFix.Fields.PaymentStreamRateIndexLocation PaymentStreamRateIndexLocation
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexLocation val = new QuickFix.Fields.PaymentStreamRateIndexLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexLocation val)
                {
                    this.PaymentStreamRateIndexLocation = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexLocation Get(QuickFix.Fields.PaymentStreamRateIndexLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexLocation val)
                {
                    return IsSetPaymentStreamRateIndexLocation();
                }

                public bool IsSetPaymentStreamRateIndexLocation()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexLocation);
                }
                public QuickFix.Fields.PaymentStreamRateIndexLevel PaymentStreamRateIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexLevel val = new QuickFix.Fields.PaymentStreamRateIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexLevel val)
                {
                    this.PaymentStreamRateIndexLevel = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexLevel Get(QuickFix.Fields.PaymentStreamRateIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexLevel val)
                {
                    return IsSetPaymentStreamRateIndexLevel();
                }

                public bool IsSetPaymentStreamRateIndexLevel()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexLevel);
                }
                public QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure PaymentStreamRateIndexUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure val = new QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure val)
                {
                    this.PaymentStreamRateIndexUnitOfMeasure = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure Get(QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexUnitOfMeasure val)
                {
                    return IsSetPaymentStreamRateIndexUnitOfMeasure();
                }

                public bool IsSetPaymentStreamRateIndexUnitOfMeasure()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexUnitOfMeasure);
                }
                public QuickFix.Fields.PaymentStreamSettlLevel PaymentStreamSettlLevel
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamSettlLevel val = new QuickFix.Fields.PaymentStreamSettlLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamSettlLevel val)
                {
                    this.PaymentStreamSettlLevel = val;
                }

                public QuickFix.Fields.PaymentStreamSettlLevel Get(QuickFix.Fields.PaymentStreamSettlLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamSettlLevel val)
                {
                    return IsSetPaymentStreamSettlLevel();
                }

                public bool IsSetPaymentStreamSettlLevel()
                {
                    return IsSetField(Tags.PaymentStreamSettlLevel);
                }
                public QuickFix.Fields.PaymentStreamReferenceLevel PaymentStreamReferenceLevel
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamReferenceLevel val = new QuickFix.Fields.PaymentStreamReferenceLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamReferenceLevel val)
                {
                    this.PaymentStreamReferenceLevel = val;
                }

                public QuickFix.Fields.PaymentStreamReferenceLevel Get(QuickFix.Fields.PaymentStreamReferenceLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamReferenceLevel val)
                {
                    return IsSetPaymentStreamReferenceLevel();
                }

                public bool IsSetPaymentStreamReferenceLevel()
                {
                    return IsSetField(Tags.PaymentStreamReferenceLevel);
                }
                public QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure PaymentStreamReferenceLevelUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure val = new QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    this.PaymentStreamReferenceLevelUnitOfMeasure = val;
                }

                public QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure Get(QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    return IsSetPaymentStreamReferenceLevelUnitOfMeasure();
                }

                public bool IsSetPaymentStreamReferenceLevelUnitOfMeasure()
                {
                    return IsSetField(Tags.PaymentStreamReferenceLevelUnitOfMeasure);
                }
                public QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator PaymentStreamReferenceLevelEqualsZeroIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator val = new QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    this.PaymentStreamReferenceLevelEqualsZeroIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator Get(QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    return IsSetPaymentStreamReferenceLevelEqualsZeroIndicator();
                }

                public bool IsSetPaymentStreamReferenceLevelEqualsZeroIndicator()
                {
                    return IsSetField(Tags.PaymentStreamReferenceLevelEqualsZeroIndicator);
                }
                public QuickFix.Fields.PaymentStreamRateSpreadCurrency PaymentStreamRateSpreadCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateSpreadCurrency val = new QuickFix.Fields.PaymentStreamRateSpreadCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateSpreadCurrency val)
                {
                    this.PaymentStreamRateSpreadCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamRateSpreadCurrency Get(QuickFix.Fields.PaymentStreamRateSpreadCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateSpreadCurrency val)
                {
                    return IsSetPaymentStreamRateSpreadCurrency();
                }

                public bool IsSetPaymentStreamRateSpreadCurrency()
                {
                    return IsSetField(Tags.PaymentStreamRateSpreadCurrency);
                }
                public QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure PaymentStreamRateSpreadUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure val = new QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure val)
                {
                    this.PaymentStreamRateSpreadUnitOfMeasure = val;
                }

                public QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure Get(QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateSpreadUnitOfMeasure val)
                {
                    return IsSetPaymentStreamRateSpreadUnitOfMeasure();
                }

                public bool IsSetPaymentStreamRateSpreadUnitOfMeasure()
                {
                    return IsSetField(Tags.PaymentStreamRateSpreadUnitOfMeasure);
                }
                public QuickFix.Fields.PaymentStreamRateConversionFactor PaymentStreamRateConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateConversionFactor val = new QuickFix.Fields.PaymentStreamRateConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateConversionFactor val)
                {
                    this.PaymentStreamRateConversionFactor = val;
                }

                public QuickFix.Fields.PaymentStreamRateConversionFactor Get(QuickFix.Fields.PaymentStreamRateConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateConversionFactor val)
                {
                    return IsSetPaymentStreamRateConversionFactor();
                }

                public bool IsSetPaymentStreamRateConversionFactor()
                {
                    return IsSetField(Tags.PaymentStreamRateConversionFactor);
                }
                public QuickFix.Fields.PaymentStreamRateSpreadType PaymentStreamRateSpreadType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateSpreadType val = new QuickFix.Fields.PaymentStreamRateSpreadType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateSpreadType val)
                {
                    this.PaymentStreamRateSpreadType = val;
                }

                public QuickFix.Fields.PaymentStreamRateSpreadType Get(QuickFix.Fields.PaymentStreamRateSpreadType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateSpreadType val)
                {
                    return IsSetPaymentStreamRateSpreadType();
                }

                public bool IsSetPaymentStreamRateSpreadType()
                {
                    return IsSetField(Tags.PaymentStreamRateSpreadType);
                }
                public QuickFix.Fields.PaymentStreamLastResetRate PaymentStreamLastResetRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLastResetRate val = new QuickFix.Fields.PaymentStreamLastResetRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLastResetRate val)
                {
                    this.PaymentStreamLastResetRate = val;
                }

                public QuickFix.Fields.PaymentStreamLastResetRate Get(QuickFix.Fields.PaymentStreamLastResetRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLastResetRate val)
                {
                    return IsSetPaymentStreamLastResetRate();
                }

                public bool IsSetPaymentStreamLastResetRate()
                {
                    return IsSetField(Tags.PaymentStreamLastResetRate);
                }
                public QuickFix.Fields.PaymentStreamFinalRate PaymentStreamFinalRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFinalRate val = new QuickFix.Fields.PaymentStreamFinalRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFinalRate val)
                {
                    this.PaymentStreamFinalRate = val;
                }

                public QuickFix.Fields.PaymentStreamFinalRate Get(QuickFix.Fields.PaymentStreamFinalRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFinalRate val)
                {
                    return IsSetPaymentStreamFinalRate();
                }

                public bool IsSetPaymentStreamFinalRate()
                {
                    return IsSetField(Tags.PaymentStreamFinalRate);
                }
                public QuickFix.Fields.PaymentStreamCalculationLagPeriod PaymentStreamCalculationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCalculationLagPeriod val = new QuickFix.Fields.PaymentStreamCalculationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCalculationLagPeriod val)
                {
                    this.PaymentStreamCalculationLagPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCalculationLagPeriod Get(QuickFix.Fields.PaymentStreamCalculationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCalculationLagPeriod val)
                {
                    return IsSetPaymentStreamCalculationLagPeriod();
                }

                public bool IsSetPaymentStreamCalculationLagPeriod()
                {
                    return IsSetField(Tags.PaymentStreamCalculationLagPeriod);
                }
                public QuickFix.Fields.PaymentStreamCalculationLagUnit PaymentStreamCalculationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCalculationLagUnit val = new QuickFix.Fields.PaymentStreamCalculationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCalculationLagUnit val)
                {
                    this.PaymentStreamCalculationLagUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCalculationLagUnit Get(QuickFix.Fields.PaymentStreamCalculationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCalculationLagUnit val)
                {
                    return IsSetPaymentStreamCalculationLagUnit();
                }

                public bool IsSetPaymentStreamCalculationLagUnit()
                {
                    return IsSetField(Tags.PaymentStreamCalculationLagUnit);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod PaymentStreamFirstObservationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    this.PaymentStreamFirstObservationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamFirstObservationDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamFirstObservationDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit PaymentStreamFirstObservationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit val = new QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit val)
                {
                    this.PaymentStreamFirstObservationDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit Get(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetUnit val)
                {
                    return IsSetPaymentStreamFirstObservationDateOffsetUnit();
                }

                public bool IsSetPaymentStreamFirstObservationDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamPricingDayType PaymentStreamPricingDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPricingDayType val = new QuickFix.Fields.PaymentStreamPricingDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPricingDayType val)
                {
                    this.PaymentStreamPricingDayType = val;
                }

                public QuickFix.Fields.PaymentStreamPricingDayType Get(QuickFix.Fields.PaymentStreamPricingDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPricingDayType val)
                {
                    return IsSetPaymentStreamPricingDayType();
                }

                public bool IsSetPaymentStreamPricingDayType()
                {
                    return IsSetField(Tags.PaymentStreamPricingDayType);
                }
                public QuickFix.Fields.PaymentStreamPricingDayDistribution PaymentStreamPricingDayDistribution
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPricingDayDistribution val = new QuickFix.Fields.PaymentStreamPricingDayDistribution();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPricingDayDistribution val)
                {
                    this.PaymentStreamPricingDayDistribution = val;
                }

                public QuickFix.Fields.PaymentStreamPricingDayDistribution Get(QuickFix.Fields.PaymentStreamPricingDayDistribution val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPricingDayDistribution val)
                {
                    return IsSetPaymentStreamPricingDayDistribution();
                }

                public bool IsSetPaymentStreamPricingDayDistribution()
                {
                    return IsSetField(Tags.PaymentStreamPricingDayDistribution);
                }
                public QuickFix.Fields.PaymentStreamPricingDayCount PaymentStreamPricingDayCount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPricingDayCount val = new QuickFix.Fields.PaymentStreamPricingDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPricingDayCount val)
                {
                    this.PaymentStreamPricingDayCount = val;
                }

                public QuickFix.Fields.PaymentStreamPricingDayCount Get(QuickFix.Fields.PaymentStreamPricingDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPricingDayCount val)
                {
                    return IsSetPaymentStreamPricingDayCount();
                }

                public bool IsSetPaymentStreamPricingDayCount()
                {
                    return IsSetField(Tags.PaymentStreamPricingDayCount);
                }
                public QuickFix.Fields.PaymentStreamPricingBusinessCalendar PaymentStreamPricingBusinessCalendar
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPricingBusinessCalendar val = new QuickFix.Fields.PaymentStreamPricingBusinessCalendar();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPricingBusinessCalendar val)
                {
                    this.PaymentStreamPricingBusinessCalendar = val;
                }

                public QuickFix.Fields.PaymentStreamPricingBusinessCalendar Get(QuickFix.Fields.PaymentStreamPricingBusinessCalendar val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPricingBusinessCalendar val)
                {
                    return IsSetPaymentStreamPricingBusinessCalendar();
                }

                public bool IsSetPaymentStreamPricingBusinessCalendar()
                {
                    return IsSetField(Tags.PaymentStreamPricingBusinessCalendar);
                }
                public QuickFix.Fields.PaymentStreamPricingBusinessDayConvention PaymentStreamPricingBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamPricingBusinessDayConvention val = new QuickFix.Fields.PaymentStreamPricingBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamPricingBusinessDayConvention val)
                {
                    this.PaymentStreamPricingBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamPricingBusinessDayConvention Get(QuickFix.Fields.PaymentStreamPricingBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamPricingBusinessDayConvention val)
                {
                    return IsSetPaymentStreamPricingBusinessDayConvention();
                }

                public bool IsSetPaymentStreamPricingBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamPricingBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamPricingBusinessCenters NoPaymentStreamPricingBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamPricingBusinessCenters val = new QuickFix.Fields.NoPaymentStreamPricingBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamPricingBusinessCenters val)
                {
                    this.NoPaymentStreamPricingBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamPricingBusinessCenters Get(QuickFix.Fields.NoPaymentStreamPricingBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamPricingBusinessCenters val)
                {
                    return IsSetNoPaymentStreamPricingBusinessCenters();
                }

                public bool IsSetNoPaymentStreamPricingBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamPricingBusinessCenters);
                }
                public QuickFix.Fields.NoPaymentStreamPricingDays NoPaymentStreamPricingDays
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamPricingDays val = new QuickFix.Fields.NoPaymentStreamPricingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamPricingDays val)
                {
                    this.NoPaymentStreamPricingDays = val;
                }

                public QuickFix.Fields.NoPaymentStreamPricingDays Get(QuickFix.Fields.NoPaymentStreamPricingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamPricingDays val)
                {
                    return IsSetNoPaymentStreamPricingDays();
                }

                public bool IsSetNoPaymentStreamPricingDays()
                {
                    return IsSetField(Tags.NoPaymentStreamPricingDays);
                }
                public QuickFix.Fields.NoPaymentStreamPricingDates NoPaymentStreamPricingDates
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamPricingDates val = new QuickFix.Fields.NoPaymentStreamPricingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamPricingDates val)
                {
                    this.NoPaymentStreamPricingDates = val;
                }

                public QuickFix.Fields.NoPaymentStreamPricingDates Get(QuickFix.Fields.NoPaymentStreamPricingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamPricingDates val)
                {
                    return IsSetNoPaymentStreamPricingDates();
                }

                public bool IsSetNoPaymentStreamPricingDates()
                {
                    return IsSetField(Tags.NoPaymentStreamPricingDates);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted PaymentStreamFirstObservationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted val = new QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted val)
                {
                    this.PaymentStreamFirstObservationDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted Get(QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateUnadjusted val)
                {
                    return IsSetPaymentStreamFirstObservationDateUnadjusted();
                }

                public bool IsSetPaymentStreamFirstObservationDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo PaymentStreamFirstObservationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo val = new QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo val)
                {
                    this.PaymentStreamFirstObservationDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo Get(QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateRelativeTo val)
                {
                    return IsSetPaymentStreamFirstObservationDateRelativeTo();
                }

                public bool IsSetPaymentStreamFirstObservationDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType PaymentStreamFirstObservationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType val = new QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType val)
                {
                    this.PaymentStreamFirstObservationDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType Get(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateOffsetDayType val)
                {
                    return IsSetPaymentStreamFirstObservationDateOffsetDayType();
                }

                public bool IsSetPaymentStreamFirstObservationDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted PaymentStreamFirstObservationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted val = new QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted val)
                {
                    this.PaymentStreamFirstObservationDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted Get(QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFirstObservationDateAdjusted val)
                {
                    return IsSetPaymentStreamFirstObservationDateAdjusted();
                }

                public bool IsSetPaymentStreamFirstObservationDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamFirstObservationDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamUnderlierRefID PaymentStreamUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamUnderlierRefID val = new QuickFix.Fields.PaymentStreamUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamUnderlierRefID val)
                {
                    this.PaymentStreamUnderlierRefID = val;
                }

                public QuickFix.Fields.PaymentStreamUnderlierRefID Get(QuickFix.Fields.PaymentStreamUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamUnderlierRefID val)
                {
                    return IsSetPaymentStreamUnderlierRefID();
                }

                public bool IsSetPaymentStreamUnderlierRefID()
                {
                    return IsSetField(Tags.PaymentStreamUnderlierRefID);
                }
                public QuickFix.Fields.PaymentStreamFormulaCurrency PaymentStreamFormulaCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFormulaCurrency val = new QuickFix.Fields.PaymentStreamFormulaCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFormulaCurrency val)
                {
                    this.PaymentStreamFormulaCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamFormulaCurrency Get(QuickFix.Fields.PaymentStreamFormulaCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFormulaCurrency val)
                {
                    return IsSetPaymentStreamFormulaCurrency();
                }

                public bool IsSetPaymentStreamFormulaCurrency()
                {
                    return IsSetField(Tags.PaymentStreamFormulaCurrency);
                }
                public QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod PaymentStreamFormulaCurrencyDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod val = new QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    this.PaymentStreamFormulaCurrencyDeterminationMethod = val;
                }

                public QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod Get(QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    return IsSetPaymentStreamFormulaCurrencyDeterminationMethod();
                }

                public bool IsSetPaymentStreamFormulaCurrencyDeterminationMethod()
                {
                    return IsSetField(Tags.PaymentStreamFormulaCurrencyDeterminationMethod);
                }
                public QuickFix.Fields.PaymentStreamFormulaReferenceAmount PaymentStreamFormulaReferenceAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFormulaReferenceAmount val = new QuickFix.Fields.PaymentStreamFormulaReferenceAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFormulaReferenceAmount val)
                {
                    this.PaymentStreamFormulaReferenceAmount = val;
                }

                public QuickFix.Fields.PaymentStreamFormulaReferenceAmount Get(QuickFix.Fields.PaymentStreamFormulaReferenceAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFormulaReferenceAmount val)
                {
                    return IsSetPaymentStreamFormulaReferenceAmount();
                }

                public bool IsSetPaymentStreamFormulaReferenceAmount()
                {
                    return IsSetField(Tags.PaymentStreamFormulaReferenceAmount);
                }
                public QuickFix.Fields.NoPaymentStreamFormulas NoPaymentStreamFormulas
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamFormulas val = new QuickFix.Fields.NoPaymentStreamFormulas();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamFormulas val)
                {
                    this.NoPaymentStreamFormulas = val;
                }

                public QuickFix.Fields.NoPaymentStreamFormulas Get(QuickFix.Fields.NoPaymentStreamFormulas val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamFormulas val)
                {
                    return IsSetNoPaymentStreamFormulas();
                }

                public bool IsSetNoPaymentStreamFormulas()
                {
                    return IsSetField(Tags.NoPaymentStreamFormulas);
                }
                public QuickFix.Fields.PaymentStreamFormulaImageLength PaymentStreamFormulaImageLength
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFormulaImageLength val = new QuickFix.Fields.PaymentStreamFormulaImageLength();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFormulaImageLength val)
                {
                    this.PaymentStreamFormulaImageLength = val;
                }

                public QuickFix.Fields.PaymentStreamFormulaImageLength Get(QuickFix.Fields.PaymentStreamFormulaImageLength val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFormulaImageLength val)
                {
                    return IsSetPaymentStreamFormulaImageLength();
                }

                public bool IsSetPaymentStreamFormulaImageLength()
                {
                    return IsSetField(Tags.PaymentStreamFormulaImageLength);
                }
                public QuickFix.Fields.PaymentStreamFormulaImage PaymentStreamFormulaImage
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFormulaImage val = new QuickFix.Fields.PaymentStreamFormulaImage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFormulaImage val)
                {
                    this.PaymentStreamFormulaImage = val;
                }

                public QuickFix.Fields.PaymentStreamFormulaImage Get(QuickFix.Fields.PaymentStreamFormulaImage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFormulaImage val)
                {
                    return IsSetPaymentStreamFormulaImage();
                }

                public bool IsSetPaymentStreamFormulaImage()
                {
                    return IsSetField(Tags.PaymentStreamFormulaImage);
                }
                public QuickFix.Fields.DividendReinvestmentIndicator DividendReinvestmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.DividendReinvestmentIndicator val = new QuickFix.Fields.DividendReinvestmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendReinvestmentIndicator val)
                {
                    this.DividendReinvestmentIndicator = val;
                }

                public QuickFix.Fields.DividendReinvestmentIndicator Get(QuickFix.Fields.DividendReinvestmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendReinvestmentIndicator val)
                {
                    return IsSetDividendReinvestmentIndicator();
                }

                public bool IsSetDividendReinvestmentIndicator()
                {
                    return IsSetField(Tags.DividendReinvestmentIndicator);
                }
                public QuickFix.Fields.DividendEntitlementEvent DividendEntitlementEvent
                {
                    get
                    {
                        QuickFix.Fields.DividendEntitlementEvent val = new QuickFix.Fields.DividendEntitlementEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendEntitlementEvent val)
                {
                    this.DividendEntitlementEvent = val;
                }

                public QuickFix.Fields.DividendEntitlementEvent Get(QuickFix.Fields.DividendEntitlementEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendEntitlementEvent val)
                {
                    return IsSetDividendEntitlementEvent();
                }

                public bool IsSetDividendEntitlementEvent()
                {
                    return IsSetField(Tags.DividendEntitlementEvent);
                }
                public QuickFix.Fields.DividendAmountType DividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.DividendAmountType val = new QuickFix.Fields.DividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAmountType val)
                {
                    this.DividendAmountType = val;
                }

                public QuickFix.Fields.DividendAmountType Get(QuickFix.Fields.DividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAmountType val)
                {
                    return IsSetDividendAmountType();
                }

                public bool IsSetDividendAmountType()
                {
                    return IsSetField(Tags.DividendAmountType);
                }
                public QuickFix.Fields.DividendUnderlierRefID DividendUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.DividendUnderlierRefID val = new QuickFix.Fields.DividendUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendUnderlierRefID val)
                {
                    this.DividendUnderlierRefID = val;
                }

                public QuickFix.Fields.DividendUnderlierRefID Get(QuickFix.Fields.DividendUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendUnderlierRefID val)
                {
                    return IsSetDividendUnderlierRefID();
                }

                public bool IsSetDividendUnderlierRefID()
                {
                    return IsSetField(Tags.DividendUnderlierRefID);
                }
                public QuickFix.Fields.NoDividendPeriods NoDividendPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoDividendPeriods val = new QuickFix.Fields.NoDividendPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDividendPeriods val)
                {
                    this.NoDividendPeriods = val;
                }

                public QuickFix.Fields.NoDividendPeriods Get(QuickFix.Fields.NoDividendPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDividendPeriods val)
                {
                    return IsSetNoDividendPeriods();
                }

                public bool IsSetNoDividendPeriods()
                {
                    return IsSetField(Tags.NoDividendPeriods);
                }
                public QuickFix.Fields.ExtraordinaryDividendPartySide ExtraordinaryDividendPartySide
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryDividendPartySide val = new QuickFix.Fields.ExtraordinaryDividendPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryDividendPartySide val)
                {
                    this.ExtraordinaryDividendPartySide = val;
                }

                public QuickFix.Fields.ExtraordinaryDividendPartySide Get(QuickFix.Fields.ExtraordinaryDividendPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryDividendPartySide val)
                {
                    return IsSetExtraordinaryDividendPartySide();
                }

                public bool IsSetExtraordinaryDividendPartySide()
                {
                    return IsSetField(Tags.ExtraordinaryDividendPartySide);
                }
                public QuickFix.Fields.ExtraordinaryDividendAmountType ExtraordinaryDividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryDividendAmountType val = new QuickFix.Fields.ExtraordinaryDividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryDividendAmountType val)
                {
                    this.ExtraordinaryDividendAmountType = val;
                }

                public QuickFix.Fields.ExtraordinaryDividendAmountType Get(QuickFix.Fields.ExtraordinaryDividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryDividendAmountType val)
                {
                    return IsSetExtraordinaryDividendAmountType();
                }

                public bool IsSetExtraordinaryDividendAmountType()
                {
                    return IsSetField(Tags.ExtraordinaryDividendAmountType);
                }
                public QuickFix.Fields.ExtraordinaryDividendCurrency ExtraordinaryDividendCurrency
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryDividendCurrency val = new QuickFix.Fields.ExtraordinaryDividendCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryDividendCurrency val)
                {
                    this.ExtraordinaryDividendCurrency = val;
                }

                public QuickFix.Fields.ExtraordinaryDividendCurrency Get(QuickFix.Fields.ExtraordinaryDividendCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryDividendCurrency val)
                {
                    return IsSetExtraordinaryDividendCurrency();
                }

                public bool IsSetExtraordinaryDividendCurrency()
                {
                    return IsSetField(Tags.ExtraordinaryDividendCurrency);
                }
                public QuickFix.Fields.ExtraordinaryDividendDeterminationMethod ExtraordinaryDividendDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryDividendDeterminationMethod val = new QuickFix.Fields.ExtraordinaryDividendDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryDividendDeterminationMethod val)
                {
                    this.ExtraordinaryDividendDeterminationMethod = val;
                }

                public QuickFix.Fields.ExtraordinaryDividendDeterminationMethod Get(QuickFix.Fields.ExtraordinaryDividendDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryDividendDeterminationMethod val)
                {
                    return IsSetExtraordinaryDividendDeterminationMethod();
                }

                public bool IsSetExtraordinaryDividendDeterminationMethod()
                {
                    return IsSetField(Tags.ExtraordinaryDividendDeterminationMethod);
                }
                public QuickFix.Fields.DividendFXTriggerDateRelativeTo DividendFXTriggerDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateRelativeTo val = new QuickFix.Fields.DividendFXTriggerDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateRelativeTo val)
                {
                    this.DividendFXTriggerDateRelativeTo = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateRelativeTo Get(QuickFix.Fields.DividendFXTriggerDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateRelativeTo val)
                {
                    return IsSetDividendFXTriggerDateRelativeTo();
                }

                public bool IsSetDividendFXTriggerDateRelativeTo()
                {
                    return IsSetField(Tags.DividendFXTriggerDateRelativeTo);
                }
                public QuickFix.Fields.DividendFXTriggerDateOffsetPeriod DividendFXTriggerDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateOffsetPeriod val = new QuickFix.Fields.DividendFXTriggerDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateOffsetPeriod val)
                {
                    this.DividendFXTriggerDateOffsetPeriod = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateOffsetPeriod Get(QuickFix.Fields.DividendFXTriggerDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateOffsetPeriod val)
                {
                    return IsSetDividendFXTriggerDateOffsetPeriod();
                }

                public bool IsSetDividendFXTriggerDateOffsetPeriod()
                {
                    return IsSetField(Tags.DividendFXTriggerDateOffsetPeriod);
                }
                public QuickFix.Fields.DividendFXTriggerDateOffsetUnit DividendFXTriggerDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateOffsetUnit val = new QuickFix.Fields.DividendFXTriggerDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateOffsetUnit val)
                {
                    this.DividendFXTriggerDateOffsetUnit = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateOffsetUnit Get(QuickFix.Fields.DividendFXTriggerDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateOffsetUnit val)
                {
                    return IsSetDividendFXTriggerDateOffsetUnit();
                }

                public bool IsSetDividendFXTriggerDateOffsetUnit()
                {
                    return IsSetField(Tags.DividendFXTriggerDateOffsetUnit);
                }
                public QuickFix.Fields.DividendFXTriggerDateOffsetDayType DividendFXTriggerDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateOffsetDayType val = new QuickFix.Fields.DividendFXTriggerDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateOffsetDayType val)
                {
                    this.DividendFXTriggerDateOffsetDayType = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateOffsetDayType Get(QuickFix.Fields.DividendFXTriggerDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateOffsetDayType val)
                {
                    return IsSetDividendFXTriggerDateOffsetDayType();
                }

                public bool IsSetDividendFXTriggerDateOffsetDayType()
                {
                    return IsSetField(Tags.DividendFXTriggerDateOffsetDayType);
                }
                public QuickFix.Fields.DividendFXTriggerDateUnadjusted DividendFXTriggerDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateUnadjusted val = new QuickFix.Fields.DividendFXTriggerDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateUnadjusted val)
                {
                    this.DividendFXTriggerDateUnadjusted = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateUnadjusted Get(QuickFix.Fields.DividendFXTriggerDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateUnadjusted val)
                {
                    return IsSetDividendFXTriggerDateUnadjusted();
                }

                public bool IsSetDividendFXTriggerDateUnadjusted()
                {
                    return IsSetField(Tags.DividendFXTriggerDateUnadjusted);
                }
                public QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention DividendFXTriggerDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention val = new QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention val)
                {
                    this.DividendFXTriggerDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention Get(QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateBusinessDayConvention val)
                {
                    return IsSetDividendFXTriggerDateBusinessDayConvention();
                }

                public bool IsSetDividendFXTriggerDateBusinessDayConvention()
                {
                    return IsSetField(Tags.DividendFXTriggerDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters NoDividendFXTriggerDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters val = new QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters val)
                {
                    this.NoDividendFXTriggerDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters Get(QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDividendFXTriggerDateBusinessCenters val)
                {
                    return IsSetNoDividendFXTriggerDateBusinessCenters();
                }

                public bool IsSetNoDividendFXTriggerDateBusinessCenters()
                {
                    return IsSetField(Tags.NoDividendFXTriggerDateBusinessCenters);
                }
                public QuickFix.Fields.DividendFXTriggerDateAdjusted DividendFXTriggerDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.DividendFXTriggerDateAdjusted val = new QuickFix.Fields.DividendFXTriggerDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFXTriggerDateAdjusted val)
                {
                    this.DividendFXTriggerDateAdjusted = val;
                }

                public QuickFix.Fields.DividendFXTriggerDateAdjusted Get(QuickFix.Fields.DividendFXTriggerDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFXTriggerDateAdjusted val)
                {
                    return IsSetDividendFXTriggerDateAdjusted();
                }

                public bool IsSetDividendFXTriggerDateAdjusted()
                {
                    return IsSetField(Tags.DividendFXTriggerDateAdjusted);
                }
                public QuickFix.Fields.DividendFloatingRateIndex DividendFloatingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateIndex val = new QuickFix.Fields.DividendFloatingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateIndex val)
                {
                    this.DividendFloatingRateIndex = val;
                }

                public QuickFix.Fields.DividendFloatingRateIndex Get(QuickFix.Fields.DividendFloatingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateIndex val)
                {
                    return IsSetDividendFloatingRateIndex();
                }

                public bool IsSetDividendFloatingRateIndex()
                {
                    return IsSetField(Tags.DividendFloatingRateIndex);
                }
                public QuickFix.Fields.DividendFloatingRateIndexCurvePeriod DividendFloatingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateIndexCurvePeriod val = new QuickFix.Fields.DividendFloatingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateIndexCurvePeriod val)
                {
                    this.DividendFloatingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.DividendFloatingRateIndexCurvePeriod Get(QuickFix.Fields.DividendFloatingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateIndexCurvePeriod val)
                {
                    return IsSetDividendFloatingRateIndexCurvePeriod();
                }

                public bool IsSetDividendFloatingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.DividendFloatingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.DividendFloatingRateIndexCurveUnit DividendFloatingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateIndexCurveUnit val = new QuickFix.Fields.DividendFloatingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateIndexCurveUnit val)
                {
                    this.DividendFloatingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.DividendFloatingRateIndexCurveUnit Get(QuickFix.Fields.DividendFloatingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateIndexCurveUnit val)
                {
                    return IsSetDividendFloatingRateIndexCurveUnit();
                }

                public bool IsSetDividendFloatingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.DividendFloatingRateIndexCurveUnit);
                }
                public QuickFix.Fields.DividendFloatingRateMultiplier DividendFloatingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateMultiplier val = new QuickFix.Fields.DividendFloatingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateMultiplier val)
                {
                    this.DividendFloatingRateMultiplier = val;
                }

                public QuickFix.Fields.DividendFloatingRateMultiplier Get(QuickFix.Fields.DividendFloatingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateMultiplier val)
                {
                    return IsSetDividendFloatingRateMultiplier();
                }

                public bool IsSetDividendFloatingRateMultiplier()
                {
                    return IsSetField(Tags.DividendFloatingRateMultiplier);
                }
                public QuickFix.Fields.DividendFloatingRateSpread DividendFloatingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateSpread val = new QuickFix.Fields.DividendFloatingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateSpread val)
                {
                    this.DividendFloatingRateSpread = val;
                }

                public QuickFix.Fields.DividendFloatingRateSpread Get(QuickFix.Fields.DividendFloatingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateSpread val)
                {
                    return IsSetDividendFloatingRateSpread();
                }

                public bool IsSetDividendFloatingRateSpread()
                {
                    return IsSetField(Tags.DividendFloatingRateSpread);
                }
                public QuickFix.Fields.DividendFloatingRateSpreadPositionType DividendFloatingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateSpreadPositionType val = new QuickFix.Fields.DividendFloatingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateSpreadPositionType val)
                {
                    this.DividendFloatingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.DividendFloatingRateSpreadPositionType Get(QuickFix.Fields.DividendFloatingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateSpreadPositionType val)
                {
                    return IsSetDividendFloatingRateSpreadPositionType();
                }

                public bool IsSetDividendFloatingRateSpreadPositionType()
                {
                    return IsSetField(Tags.DividendFloatingRateSpreadPositionType);
                }
                public QuickFix.Fields.DividendFloatingRateTreatment DividendFloatingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.DividendFloatingRateTreatment val = new QuickFix.Fields.DividendFloatingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloatingRateTreatment val)
                {
                    this.DividendFloatingRateTreatment = val;
                }

                public QuickFix.Fields.DividendFloatingRateTreatment Get(QuickFix.Fields.DividendFloatingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloatingRateTreatment val)
                {
                    return IsSetDividendFloatingRateTreatment();
                }

                public bool IsSetDividendFloatingRateTreatment()
                {
                    return IsSetField(Tags.DividendFloatingRateTreatment);
                }
                public QuickFix.Fields.DividendCapRate DividendCapRate
                {
                    get
                    {
                        QuickFix.Fields.DividendCapRate val = new QuickFix.Fields.DividendCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCapRate val)
                {
                    this.DividendCapRate = val;
                }

                public QuickFix.Fields.DividendCapRate Get(QuickFix.Fields.DividendCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCapRate val)
                {
                    return IsSetDividendCapRate();
                }

                public bool IsSetDividendCapRate()
                {
                    return IsSetField(Tags.DividendCapRate);
                }
                public QuickFix.Fields.DividendCapRateBuySide DividendCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.DividendCapRateBuySide val = new QuickFix.Fields.DividendCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCapRateBuySide val)
                {
                    this.DividendCapRateBuySide = val;
                }

                public QuickFix.Fields.DividendCapRateBuySide Get(QuickFix.Fields.DividendCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCapRateBuySide val)
                {
                    return IsSetDividendCapRateBuySide();
                }

                public bool IsSetDividendCapRateBuySide()
                {
                    return IsSetField(Tags.DividendCapRateBuySide);
                }
                public QuickFix.Fields.DividendCapRateSellSide DividendCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.DividendCapRateSellSide val = new QuickFix.Fields.DividendCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCapRateSellSide val)
                {
                    this.DividendCapRateSellSide = val;
                }

                public QuickFix.Fields.DividendCapRateSellSide Get(QuickFix.Fields.DividendCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCapRateSellSide val)
                {
                    return IsSetDividendCapRateSellSide();
                }

                public bool IsSetDividendCapRateSellSide()
                {
                    return IsSetField(Tags.DividendCapRateSellSide);
                }
                public QuickFix.Fields.DividendFloorRate DividendFloorRate
                {
                    get
                    {
                        QuickFix.Fields.DividendFloorRate val = new QuickFix.Fields.DividendFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloorRate val)
                {
                    this.DividendFloorRate = val;
                }

                public QuickFix.Fields.DividendFloorRate Get(QuickFix.Fields.DividendFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloorRate val)
                {
                    return IsSetDividendFloorRate();
                }

                public bool IsSetDividendFloorRate()
                {
                    return IsSetField(Tags.DividendFloorRate);
                }
                public QuickFix.Fields.DividendFloorRateBuySide DividendFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.DividendFloorRateBuySide val = new QuickFix.Fields.DividendFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloorRateBuySide val)
                {
                    this.DividendFloorRateBuySide = val;
                }

                public QuickFix.Fields.DividendFloorRateBuySide Get(QuickFix.Fields.DividendFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloorRateBuySide val)
                {
                    return IsSetDividendFloorRateBuySide();
                }

                public bool IsSetDividendFloorRateBuySide()
                {
                    return IsSetField(Tags.DividendFloorRateBuySide);
                }
                public QuickFix.Fields.DividendFloorRateSellSide DividendFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.DividendFloorRateSellSide val = new QuickFix.Fields.DividendFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFloorRateSellSide val)
                {
                    this.DividendFloorRateSellSide = val;
                }

                public QuickFix.Fields.DividendFloorRateSellSide Get(QuickFix.Fields.DividendFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFloorRateSellSide val)
                {
                    return IsSetDividendFloorRateSellSide();
                }

                public bool IsSetDividendFloorRateSellSide()
                {
                    return IsSetField(Tags.DividendFloorRateSellSide);
                }
                public QuickFix.Fields.DividendInitialRate DividendInitialRate
                {
                    get
                    {
                        QuickFix.Fields.DividendInitialRate val = new QuickFix.Fields.DividendInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendInitialRate val)
                {
                    this.DividendInitialRate = val;
                }

                public QuickFix.Fields.DividendInitialRate Get(QuickFix.Fields.DividendInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendInitialRate val)
                {
                    return IsSetDividendInitialRate();
                }

                public bool IsSetDividendInitialRate()
                {
                    return IsSetField(Tags.DividendInitialRate);
                }
                public QuickFix.Fields.DividendFinalRateRoundingDirection DividendFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.DividendFinalRateRoundingDirection val = new QuickFix.Fields.DividendFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFinalRateRoundingDirection val)
                {
                    this.DividendFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.DividendFinalRateRoundingDirection Get(QuickFix.Fields.DividendFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFinalRateRoundingDirection val)
                {
                    return IsSetDividendFinalRateRoundingDirection();
                }

                public bool IsSetDividendFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.DividendFinalRateRoundingDirection);
                }
                public QuickFix.Fields.DividendFinalRatePrecision DividendFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.DividendFinalRatePrecision val = new QuickFix.Fields.DividendFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendFinalRatePrecision val)
                {
                    this.DividendFinalRatePrecision = val;
                }

                public QuickFix.Fields.DividendFinalRatePrecision Get(QuickFix.Fields.DividendFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendFinalRatePrecision val)
                {
                    return IsSetDividendFinalRatePrecision();
                }

                public bool IsSetDividendFinalRatePrecision()
                {
                    return IsSetField(Tags.DividendFinalRatePrecision);
                }
                public QuickFix.Fields.DividendAveragingMethod DividendAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.DividendAveragingMethod val = new QuickFix.Fields.DividendAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAveragingMethod val)
                {
                    this.DividendAveragingMethod = val;
                }

                public QuickFix.Fields.DividendAveragingMethod Get(QuickFix.Fields.DividendAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAveragingMethod val)
                {
                    return IsSetDividendAveragingMethod();
                }

                public bool IsSetDividendAveragingMethod()
                {
                    return IsSetField(Tags.DividendAveragingMethod);
                }
                public QuickFix.Fields.DividendNegativeRateTreatment DividendNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.DividendNegativeRateTreatment val = new QuickFix.Fields.DividendNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendNegativeRateTreatment val)
                {
                    this.DividendNegativeRateTreatment = val;
                }

                public QuickFix.Fields.DividendNegativeRateTreatment Get(QuickFix.Fields.DividendNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendNegativeRateTreatment val)
                {
                    return IsSetDividendNegativeRateTreatment();
                }

                public bool IsSetDividendNegativeRateTreatment()
                {
                    return IsSetField(Tags.DividendNegativeRateTreatment);
                }
                public QuickFix.Fields.DividendAccrualFixedRate DividendAccrualFixedRate
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualFixedRate val = new QuickFix.Fields.DividendAccrualFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualFixedRate val)
                {
                    this.DividendAccrualFixedRate = val;
                }

                public QuickFix.Fields.DividendAccrualFixedRate Get(QuickFix.Fields.DividendAccrualFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualFixedRate val)
                {
                    return IsSetDividendAccrualFixedRate();
                }

                public bool IsSetDividendAccrualFixedRate()
                {
                    return IsSetField(Tags.DividendAccrualFixedRate);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateRelativeTo DividendAccrualPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateRelativeTo val = new QuickFix.Fields.DividendAccrualPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateRelativeTo val)
                {
                    this.DividendAccrualPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateRelativeTo Get(QuickFix.Fields.DividendAccrualPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateRelativeTo val)
                {
                    return IsSetDividendAccrualPaymentDateRelativeTo();
                }

                public bool IsSetDividendAccrualPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateRelativeTo);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod DividendAccrualPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod val = new QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod val)
                {
                    this.DividendAccrualPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod Get(QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateOffsetPeriod val)
                {
                    return IsSetDividendAccrualPaymentDateOffsetPeriod();
                }

                public bool IsSetDividendAccrualPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit DividendAccrualPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit val = new QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit val)
                {
                    this.DividendAccrualPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit Get(QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateOffsetUnit val)
                {
                    return IsSetDividendAccrualPaymentDateOffsetUnit();
                }

                public bool IsSetDividendAccrualPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType DividendAccrualPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType val = new QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType val)
                {
                    this.DividendAccrualPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType Get(QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateOffsetDayType val)
                {
                    return IsSetDividendAccrualPaymentDateOffsetDayType();
                }

                public bool IsSetDividendAccrualPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateUnadjusted DividendAccrualPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateUnadjusted val = new QuickFix.Fields.DividendAccrualPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateUnadjusted val)
                {
                    this.DividendAccrualPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateUnadjusted Get(QuickFix.Fields.DividendAccrualPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateUnadjusted val)
                {
                    return IsSetDividendAccrualPaymentDateUnadjusted();
                }

                public bool IsSetDividendAccrualPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateUnadjusted);
                }
                public QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention DividendAccrualPaymeentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention val = new QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention val)
                {
                    this.DividendAccrualPaymeentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention Get(QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymeentDateBusinessDayConvention val)
                {
                    return IsSetDividendAccrualPaymeentDateBusinessDayConvention();
                }

                public bool IsSetDividendAccrualPaymeentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.DividendAccrualPaymeentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters NoDividendAccrualPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters val = new QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters val)
                {
                    this.NoDividendAccrualPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters Get(QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDividendAccrualPaymentDateBusinessCenters val)
                {
                    return IsSetNoDividendAccrualPaymentDateBusinessCenters();
                }

                public bool IsSetNoDividendAccrualPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoDividendAccrualPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.DividendAccrualPaymentDateAdjusted DividendAccrualPaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.DividendAccrualPaymentDateAdjusted val = new QuickFix.Fields.DividendAccrualPaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendAccrualPaymentDateAdjusted val)
                {
                    this.DividendAccrualPaymentDateAdjusted = val;
                }

                public QuickFix.Fields.DividendAccrualPaymentDateAdjusted Get(QuickFix.Fields.DividendAccrualPaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateAdjusted val)
                {
                    return IsSetDividendAccrualPaymentDateAdjusted();
                }

                public bool IsSetDividendAccrualPaymentDateAdjusted()
                {
                    return IsSetField(Tags.DividendAccrualPaymentDateAdjusted);
                }
                public QuickFix.Fields.DividendCompoundingMethod DividendCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.DividendCompoundingMethod val = new QuickFix.Fields.DividendCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCompoundingMethod val)
                {
                    this.DividendCompoundingMethod = val;
                }

                public QuickFix.Fields.DividendCompoundingMethod Get(QuickFix.Fields.DividendCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCompoundingMethod val)
                {
                    return IsSetDividendCompoundingMethod();
                }

                public bool IsSetDividendCompoundingMethod()
                {
                    return IsSetField(Tags.DividendCompoundingMethod);
                }
                public QuickFix.Fields.DividendNumOfIndexUnits DividendNumOfIndexUnits
                {
                    get
                    {
                        QuickFix.Fields.DividendNumOfIndexUnits val = new QuickFix.Fields.DividendNumOfIndexUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendNumOfIndexUnits val)
                {
                    this.DividendNumOfIndexUnits = val;
                }

                public QuickFix.Fields.DividendNumOfIndexUnits Get(QuickFix.Fields.DividendNumOfIndexUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendNumOfIndexUnits val)
                {
                    return IsSetDividendNumOfIndexUnits();
                }

                public bool IsSetDividendNumOfIndexUnits()
                {
                    return IsSetField(Tags.DividendNumOfIndexUnits);
                }
                public QuickFix.Fields.DividendCashPercentage DividendCashPercentage
                {
                    get
                    {
                        QuickFix.Fields.DividendCashPercentage val = new QuickFix.Fields.DividendCashPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCashPercentage val)
                {
                    this.DividendCashPercentage = val;
                }

                public QuickFix.Fields.DividendCashPercentage Get(QuickFix.Fields.DividendCashPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCashPercentage val)
                {
                    return IsSetDividendCashPercentage();
                }

                public bool IsSetDividendCashPercentage()
                {
                    return IsSetField(Tags.DividendCashPercentage);
                }
                public QuickFix.Fields.DividendCashEquivalentPercentage DividendCashEquivalentPercentage
                {
                    get
                    {
                        QuickFix.Fields.DividendCashEquivalentPercentage val = new QuickFix.Fields.DividendCashEquivalentPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendCashEquivalentPercentage val)
                {
                    this.DividendCashEquivalentPercentage = val;
                }

                public QuickFix.Fields.DividendCashEquivalentPercentage Get(QuickFix.Fields.DividendCashEquivalentPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendCashEquivalentPercentage val)
                {
                    return IsSetDividendCashEquivalentPercentage();
                }

                public bool IsSetDividendCashEquivalentPercentage()
                {
                    return IsSetField(Tags.DividendCashEquivalentPercentage);
                }
                public QuickFix.Fields.NonCashDividendTreatment NonCashDividendTreatment
                {
                    get
                    {
                        QuickFix.Fields.NonCashDividendTreatment val = new QuickFix.Fields.NonCashDividendTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NonCashDividendTreatment val)
                {
                    this.NonCashDividendTreatment = val;
                }

                public QuickFix.Fields.NonCashDividendTreatment Get(QuickFix.Fields.NonCashDividendTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NonCashDividendTreatment val)
                {
                    return IsSetNonCashDividendTreatment();
                }

                public bool IsSetNonCashDividendTreatment()
                {
                    return IsSetField(Tags.NonCashDividendTreatment);
                }
                public QuickFix.Fields.DividendComposition DividendComposition
                {
                    get
                    {
                        QuickFix.Fields.DividendComposition val = new QuickFix.Fields.DividendComposition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DividendComposition val)
                {
                    this.DividendComposition = val;
                }

                public QuickFix.Fields.DividendComposition Get(QuickFix.Fields.DividendComposition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DividendComposition val)
                {
                    return IsSetDividendComposition();
                }

                public bool IsSetDividendComposition()
                {
                    return IsSetField(Tags.DividendComposition);
                }
                public QuickFix.Fields.SpecialDividendsIndicator SpecialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.SpecialDividendsIndicator val = new QuickFix.Fields.SpecialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SpecialDividendsIndicator val)
                {
                    this.SpecialDividendsIndicator = val;
                }

                public QuickFix.Fields.SpecialDividendsIndicator Get(QuickFix.Fields.SpecialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SpecialDividendsIndicator val)
                {
                    return IsSetSpecialDividendsIndicator();
                }

                public bool IsSetSpecialDividendsIndicator()
                {
                    return IsSetField(Tags.SpecialDividendsIndicator);
                }
                public QuickFix.Fields.MaterialDividendsIndicator MaterialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.MaterialDividendsIndicator val = new QuickFix.Fields.MaterialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MaterialDividendsIndicator val)
                {
                    this.MaterialDividendsIndicator = val;
                }

                public QuickFix.Fields.MaterialDividendsIndicator Get(QuickFix.Fields.MaterialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MaterialDividendsIndicator val)
                {
                    return IsSetMaterialDividendsIndicator();
                }

                public bool IsSetMaterialDividendsIndicator()
                {
                    return IsSetField(Tags.MaterialDividendsIndicator);
                }
                public QuickFix.Fields.OptionsExchangeDividendsIndicator OptionsExchangeDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.OptionsExchangeDividendsIndicator val = new QuickFix.Fields.OptionsExchangeDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionsExchangeDividendsIndicator val)
                {
                    this.OptionsExchangeDividendsIndicator = val;
                }

                public QuickFix.Fields.OptionsExchangeDividendsIndicator Get(QuickFix.Fields.OptionsExchangeDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionsExchangeDividendsIndicator val)
                {
                    return IsSetOptionsExchangeDividendsIndicator();
                }

                public bool IsSetOptionsExchangeDividendsIndicator()
                {
                    return IsSetField(Tags.OptionsExchangeDividendsIndicator);
                }
                public QuickFix.Fields.AdditionalDividendsIndicator AdditionalDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.AdditionalDividendsIndicator val = new QuickFix.Fields.AdditionalDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AdditionalDividendsIndicator val)
                {
                    this.AdditionalDividendsIndicator = val;
                }

                public QuickFix.Fields.AdditionalDividendsIndicator Get(QuickFix.Fields.AdditionalDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AdditionalDividendsIndicator val)
                {
                    return IsSetAdditionalDividendsIndicator();
                }

                public bool IsSetAdditionalDividendsIndicator()
                {
                    return IsSetField(Tags.AdditionalDividendsIndicator);
                }
                public QuickFix.Fields.AllDividendsIndicator AllDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.AllDividendsIndicator val = new QuickFix.Fields.AllDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AllDividendsIndicator val)
                {
                    this.AllDividendsIndicator = val;
                }

                public QuickFix.Fields.AllDividendsIndicator Get(QuickFix.Fields.AllDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AllDividendsIndicator val)
                {
                    return IsSetAllDividendsIndicator();
                }

                public bool IsSetAllDividendsIndicator()
                {
                    return IsSetField(Tags.AllDividendsIndicator);
                }
                public QuickFix.Fields.ReturnRateNotionalReset ReturnRateNotionalReset
                {
                    get
                    {
                        QuickFix.Fields.ReturnRateNotionalReset val = new QuickFix.Fields.ReturnRateNotionalReset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ReturnRateNotionalReset val)
                {
                    this.ReturnRateNotionalReset = val;
                }

                public QuickFix.Fields.ReturnRateNotionalReset Get(QuickFix.Fields.ReturnRateNotionalReset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ReturnRateNotionalReset val)
                {
                    return IsSetReturnRateNotionalReset();
                }

                public bool IsSetReturnRateNotionalReset()
                {
                    return IsSetField(Tags.ReturnRateNotionalReset);
                }
                public QuickFix.Fields.NoReturnRates NoReturnRates
                {
                    get
                    {
                        QuickFix.Fields.NoReturnRates val = new QuickFix.Fields.NoReturnRates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoReturnRates val)
                {
                    this.NoReturnRates = val;
                }

                public QuickFix.Fields.NoReturnRates Get(QuickFix.Fields.NoReturnRates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoReturnRates val)
                {
                    return IsSetNoReturnRates();
                }

                public bool IsSetNoReturnRates()
                {
                    return IsSetField(Tags.NoReturnRates);
                }
                public QuickFix.Fields.PaymentStreamLinkInitialLevel PaymentStreamLinkInitialLevel
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkInitialLevel val = new QuickFix.Fields.PaymentStreamLinkInitialLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkInitialLevel val)
                {
                    this.PaymentStreamLinkInitialLevel = val;
                }

                public QuickFix.Fields.PaymentStreamLinkInitialLevel Get(QuickFix.Fields.PaymentStreamLinkInitialLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkInitialLevel val)
                {
                    return IsSetPaymentStreamLinkInitialLevel();
                }

                public bool IsSetPaymentStreamLinkInitialLevel()
                {
                    return IsSetField(Tags.PaymentStreamLinkInitialLevel);
                }
                public QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator PaymentStreamLinkClosingLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator val = new QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator val)
                {
                    this.PaymentStreamLinkClosingLevelIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator Get(QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkClosingLevelIndicator val)
                {
                    return IsSetPaymentStreamLinkClosingLevelIndicator();
                }

                public bool IsSetPaymentStreamLinkClosingLevelIndicator()
                {
                    return IsSetField(Tags.PaymentStreamLinkClosingLevelIndicator);
                }
                public QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator PaymentStreamLinkExpiringLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator val = new QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator val)
                {
                    this.PaymentStreamLinkExpiringLevelIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator Get(QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkExpiringLevelIndicator val)
                {
                    return IsSetPaymentStreamLinkExpiringLevelIndicator();
                }

                public bool IsSetPaymentStreamLinkExpiringLevelIndicator()
                {
                    return IsSetField(Tags.PaymentStreamLinkExpiringLevelIndicator);
                }
                public QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays PaymentStreamLinkEstimatedTradingDays
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays val = new QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays val)
                {
                    this.PaymentStreamLinkEstimatedTradingDays = val;
                }

                public QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays Get(QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkEstimatedTradingDays val)
                {
                    return IsSetPaymentStreamLinkEstimatedTradingDays();
                }

                public bool IsSetPaymentStreamLinkEstimatedTradingDays()
                {
                    return IsSetField(Tags.PaymentStreamLinkEstimatedTradingDays);
                }
                public QuickFix.Fields.PaymentStreamLinkStrikePrice PaymentStreamLinkStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkStrikePrice val = new QuickFix.Fields.PaymentStreamLinkStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkStrikePrice val)
                {
                    this.PaymentStreamLinkStrikePrice = val;
                }

                public QuickFix.Fields.PaymentStreamLinkStrikePrice Get(QuickFix.Fields.PaymentStreamLinkStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkStrikePrice val)
                {
                    return IsSetPaymentStreamLinkStrikePrice();
                }

                public bool IsSetPaymentStreamLinkStrikePrice()
                {
                    return IsSetField(Tags.PaymentStreamLinkStrikePrice);
                }
                public QuickFix.Fields.PaymentStreamLinkStrikePriceType PaymentStreamLinkStrikePriceType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkStrikePriceType val = new QuickFix.Fields.PaymentStreamLinkStrikePriceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkStrikePriceType val)
                {
                    this.PaymentStreamLinkStrikePriceType = val;
                }

                public QuickFix.Fields.PaymentStreamLinkStrikePriceType Get(QuickFix.Fields.PaymentStreamLinkStrikePriceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkStrikePriceType val)
                {
                    return IsSetPaymentStreamLinkStrikePriceType();
                }

                public bool IsSetPaymentStreamLinkStrikePriceType()
                {
                    return IsSetField(Tags.PaymentStreamLinkStrikePriceType);
                }
                public QuickFix.Fields.PaymentStreamLinkMaximumBoundary PaymentStreamLinkMaximumBoundary
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkMaximumBoundary val = new QuickFix.Fields.PaymentStreamLinkMaximumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkMaximumBoundary val)
                {
                    this.PaymentStreamLinkMaximumBoundary = val;
                }

                public QuickFix.Fields.PaymentStreamLinkMaximumBoundary Get(QuickFix.Fields.PaymentStreamLinkMaximumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkMaximumBoundary val)
                {
                    return IsSetPaymentStreamLinkMaximumBoundary();
                }

                public bool IsSetPaymentStreamLinkMaximumBoundary()
                {
                    return IsSetField(Tags.PaymentStreamLinkMaximumBoundary);
                }
                public QuickFix.Fields.PaymentStreamLinkMinimumBoundary PaymentStreamLinkMinimumBoundary
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkMinimumBoundary val = new QuickFix.Fields.PaymentStreamLinkMinimumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkMinimumBoundary val)
                {
                    this.PaymentStreamLinkMinimumBoundary = val;
                }

                public QuickFix.Fields.PaymentStreamLinkMinimumBoundary Get(QuickFix.Fields.PaymentStreamLinkMinimumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkMinimumBoundary val)
                {
                    return IsSetPaymentStreamLinkMinimumBoundary();
                }

                public bool IsSetPaymentStreamLinkMinimumBoundary()
                {
                    return IsSetField(Tags.PaymentStreamLinkMinimumBoundary);
                }
                public QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries PaymentStreamLinkNumberOfDataSeries
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries val = new QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries val)
                {
                    this.PaymentStreamLinkNumberOfDataSeries = val;
                }

                public QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries Get(QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamLinkNumberOfDataSeries val)
                {
                    return IsSetPaymentStreamLinkNumberOfDataSeries();
                }

                public bool IsSetPaymentStreamLinkNumberOfDataSeries()
                {
                    return IsSetField(Tags.PaymentStreamLinkNumberOfDataSeries);
                }
                public QuickFix.Fields.PaymentStreamVarianceUnadjustedCap PaymentStreamVarianceUnadjustedCap
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamVarianceUnadjustedCap val = new QuickFix.Fields.PaymentStreamVarianceUnadjustedCap();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamVarianceUnadjustedCap val)
                {
                    this.PaymentStreamVarianceUnadjustedCap = val;
                }

                public QuickFix.Fields.PaymentStreamVarianceUnadjustedCap Get(QuickFix.Fields.PaymentStreamVarianceUnadjustedCap val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamVarianceUnadjustedCap val)
                {
                    return IsSetPaymentStreamVarianceUnadjustedCap();
                }

                public bool IsSetPaymentStreamVarianceUnadjustedCap()
                {
                    return IsSetField(Tags.PaymentStreamVarianceUnadjustedCap);
                }
                public QuickFix.Fields.PaymentStreamRealizedVarianceMethod PaymentStreamRealizedVarianceMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRealizedVarianceMethod val = new QuickFix.Fields.PaymentStreamRealizedVarianceMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRealizedVarianceMethod val)
                {
                    this.PaymentStreamRealizedVarianceMethod = val;
                }

                public QuickFix.Fields.PaymentStreamRealizedVarianceMethod Get(QuickFix.Fields.PaymentStreamRealizedVarianceMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRealizedVarianceMethod val)
                {
                    return IsSetPaymentStreamRealizedVarianceMethod();
                }

                public bool IsSetPaymentStreamRealizedVarianceMethod()
                {
                    return IsSetField(Tags.PaymentStreamRealizedVarianceMethod);
                }
                public QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator PaymentStreamDaysAdjustmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator val = new QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator val)
                {
                    this.PaymentStreamDaysAdjustmentIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator Get(QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamDaysAdjustmentIndicator val)
                {
                    return IsSetPaymentStreamDaysAdjustmentIndicator();
                }

                public bool IsSetPaymentStreamDaysAdjustmentIndicator()
                {
                    return IsSetField(Tags.PaymentStreamDaysAdjustmentIndicator);
                }
                public QuickFix.Fields.PaymentStreamNearestExchangeContractRefID PaymentStreamNearestExchangeContractRefID
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNearestExchangeContractRefID val = new QuickFix.Fields.PaymentStreamNearestExchangeContractRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNearestExchangeContractRefID val)
                {
                    this.PaymentStreamNearestExchangeContractRefID = val;
                }

                public QuickFix.Fields.PaymentStreamNearestExchangeContractRefID Get(QuickFix.Fields.PaymentStreamNearestExchangeContractRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNearestExchangeContractRefID val)
                {
                    return IsSetPaymentStreamNearestExchangeContractRefID();
                }

                public bool IsSetPaymentStreamNearestExchangeContractRefID()
                {
                    return IsSetField(Tags.PaymentStreamNearestExchangeContractRefID);
                }
                public QuickFix.Fields.PaymentStreamVegaNotionalAmount PaymentStreamVegaNotionalAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamVegaNotionalAmount val = new QuickFix.Fields.PaymentStreamVegaNotionalAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamVegaNotionalAmount val)
                {
                    this.PaymentStreamVegaNotionalAmount = val;
                }

                public QuickFix.Fields.PaymentStreamVegaNotionalAmount Get(QuickFix.Fields.PaymentStreamVegaNotionalAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamVegaNotionalAmount val)
                {
                    return IsSetPaymentStreamVegaNotionalAmount();
                }

                public bool IsSetPaymentStreamVegaNotionalAmount()
                {
                    return IsSetField(Tags.PaymentStreamVegaNotionalAmount);
                }
                public QuickFix.Fields.PaymentStreamRateIndexID PaymentStreamRateIndexID
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexID val = new QuickFix.Fields.PaymentStreamRateIndexID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexID val)
                {
                    this.PaymentStreamRateIndexID = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexID Get(QuickFix.Fields.PaymentStreamRateIndexID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexID val)
                {
                    return IsSetPaymentStreamRateIndexID();
                }

                public bool IsSetPaymentStreamRateIndexID()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexID);
                }
                public QuickFix.Fields.PaymentStreamRateIndexIDSource PaymentStreamRateIndexIDSource
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamRateIndexIDSource val = new QuickFix.Fields.PaymentStreamRateIndexIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamRateIndexIDSource val)
                {
                    this.PaymentStreamRateIndexIDSource = val;
                }

                public QuickFix.Fields.PaymentStreamRateIndexIDSource Get(QuickFix.Fields.PaymentStreamRateIndexIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamRateIndexIDSource val)
                {
                    return IsSetPaymentStreamRateIndexIDSource();
                }

                public bool IsSetPaymentStreamRateIndexIDSource()
                {
                    return IsSetField(Tags.PaymentStreamRateIndexIDSource);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency PaymentStreamNonDeliverableRefCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency val = new QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency val)
                {
                    this.PaymentStreamNonDeliverableRefCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency Get(QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableRefCurrency val)
                {
                    return IsSetPaymentStreamNonDeliverableRefCurrency();
                }

                public bool IsSetPaymentStreamNonDeliverableRefCurrency()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableRefCurrency);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention PaymentStreamNonDeliverableFixingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    this.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    return IsSetPaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                }

                public bool IsSetPaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters NoPaymentStreamNonDeliverableFixingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters val = new QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    this.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters Get(QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    return IsSetNoPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                }

                public bool IsSetNoPaymentStreamNonDeliverableFixingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo PaymentStreamNonDeliverableFixingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    this.PaymentStreamNonDeliverableFixingDatesRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    return IsSetPaymentStreamNonDeliverableFixingDatesRelativeTo();
                }

                public bool IsSetPaymentStreamNonDeliverableFixingDatesRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod PaymentStreamNonDeliverableFixingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    this.PaymentStreamNonDeliverableFixingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    return IsSetPaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                }

                public bool IsSetPaymentStreamNonDeliverableFixingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit PaymentStreamNonDeliverableFixingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    this.PaymentStreamNonDeliverableFixingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    return IsSetPaymentStreamNonDeliverableFixingDatesOffsetUnit();
                }

                public bool IsSetPaymentStreamNonDeliverableFixingDatesOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType PaymentStreamNonDeliverableFixingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    this.PaymentStreamNonDeliverableFixingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    return IsSetPaymentStreamNonDeliverableFixingDatesOffsetDayType();
                }

                public bool IsSetPaymentStreamNonDeliverableFixingDatesOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource PaymentStreamNonDeliverableSettlRateSource
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource val = new QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource val)
                {
                    this.PaymentStreamNonDeliverableSettlRateSource = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource Get(QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableSettlRateSource val)
                {
                    return IsSetPaymentStreamNonDeliverableSettlRateSource();
                }

                public bool IsSetPaymentStreamNonDeliverableSettlRateSource()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableSettlRateSource);
                }
                public QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage PaymentStreamNonDeliverableSettlReferencePage
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage val = new QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage val)
                {
                    this.PaymentStreamNonDeliverableSettlReferencePage = val;
                }

                public QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage Get(QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableSettlReferencePage val)
                {
                    return IsSetPaymentStreamNonDeliverableSettlReferencePage();
                }

                public bool IsSetPaymentStreamNonDeliverableSettlReferencePage()
                {
                    return IsSetField(Tags.PaymentStreamNonDeliverableSettlReferencePage);
                }
                public QuickFix.Fields.NoNonDeliverableFixingDates NoNonDeliverableFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoNonDeliverableFixingDates val = new QuickFix.Fields.NoNonDeliverableFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoNonDeliverableFixingDates val)
                {
                    this.NoNonDeliverableFixingDates = val;
                }

                public QuickFix.Fields.NoNonDeliverableFixingDates Get(QuickFix.Fields.NoNonDeliverableFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoNonDeliverableFixingDates val)
                {
                    return IsSetNoNonDeliverableFixingDates();
                }

                public bool IsSetNoNonDeliverableFixingDates()
                {
                    return IsSetField(Tags.NoNonDeliverableFixingDates);
                }
                public QuickFix.Fields.NoSettlRateFallbacks NoSettlRateFallbacks
                {
                    get
                    {
                        QuickFix.Fields.NoSettlRateFallbacks val = new QuickFix.Fields.NoSettlRateFallbacks();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoSettlRateFallbacks val)
                {
                    this.NoSettlRateFallbacks = val;
                }

                public QuickFix.Fields.NoSettlRateFallbacks Get(QuickFix.Fields.NoSettlRateFallbacks val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoSettlRateFallbacks val)
                {
                    return IsSetNoSettlRateFallbacks();
                }

                public bool IsSetNoSettlRateFallbacks()
                {
                    return IsSetField(Tags.NoSettlRateFallbacks);
                }
                public QuickFix.Fields.PaymentStreamFlatRateIndicator PaymentStreamFlatRateIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFlatRateIndicator val = new QuickFix.Fields.PaymentStreamFlatRateIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFlatRateIndicator val)
                {
                    this.PaymentStreamFlatRateIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamFlatRateIndicator Get(QuickFix.Fields.PaymentStreamFlatRateIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFlatRateIndicator val)
                {
                    return IsSetPaymentStreamFlatRateIndicator();
                }

                public bool IsSetPaymentStreamFlatRateIndicator()
                {
                    return IsSetField(Tags.PaymentStreamFlatRateIndicator);
                }
                public QuickFix.Fields.PaymentStreamFlatRateAmount PaymentStreamFlatRateAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFlatRateAmount val = new QuickFix.Fields.PaymentStreamFlatRateAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFlatRateAmount val)
                {
                    this.PaymentStreamFlatRateAmount = val;
                }

                public QuickFix.Fields.PaymentStreamFlatRateAmount Get(QuickFix.Fields.PaymentStreamFlatRateAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFlatRateAmount val)
                {
                    return IsSetPaymentStreamFlatRateAmount();
                }

                public bool IsSetPaymentStreamFlatRateAmount()
                {
                    return IsSetField(Tags.PaymentStreamFlatRateAmount);
                }
                public QuickFix.Fields.PaymentStreamFlatRateCurrency PaymentStreamFlatRateCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamFlatRateCurrency val = new QuickFix.Fields.PaymentStreamFlatRateCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamFlatRateCurrency val)
                {
                    this.PaymentStreamFlatRateCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamFlatRateCurrency Get(QuickFix.Fields.PaymentStreamFlatRateCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamFlatRateCurrency val)
                {
                    return IsSetPaymentStreamFlatRateCurrency();
                }

                public bool IsSetPaymentStreamFlatRateCurrency()
                {
                    return IsSetField(Tags.PaymentStreamFlatRateCurrency);
                }
                public QuickFix.Fields.PaymentStreamMaximumPaymentAmount PaymentStreamMaximumPaymentAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMaximumPaymentAmount val = new QuickFix.Fields.PaymentStreamMaximumPaymentAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMaximumPaymentAmount val)
                {
                    this.PaymentStreamMaximumPaymentAmount = val;
                }

                public QuickFix.Fields.PaymentStreamMaximumPaymentAmount Get(QuickFix.Fields.PaymentStreamMaximumPaymentAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMaximumPaymentAmount val)
                {
                    return IsSetPaymentStreamMaximumPaymentAmount();
                }

                public bool IsSetPaymentStreamMaximumPaymentAmount()
                {
                    return IsSetField(Tags.PaymentStreamMaximumPaymentAmount);
                }
                public QuickFix.Fields.PaymentStreamMaximumPaymentCurrency PaymentStreamMaximumPaymentCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMaximumPaymentCurrency val = new QuickFix.Fields.PaymentStreamMaximumPaymentCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMaximumPaymentCurrency val)
                {
                    this.PaymentStreamMaximumPaymentCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamMaximumPaymentCurrency Get(QuickFix.Fields.PaymentStreamMaximumPaymentCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMaximumPaymentCurrency val)
                {
                    return IsSetPaymentStreamMaximumPaymentCurrency();
                }

                public bool IsSetPaymentStreamMaximumPaymentCurrency()
                {
                    return IsSetField(Tags.PaymentStreamMaximumPaymentCurrency);
                }
                public QuickFix.Fields.PaymentStreamMaximumTransactionAmount PaymentStreamMaximumTransactionAmount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMaximumTransactionAmount val = new QuickFix.Fields.PaymentStreamMaximumTransactionAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMaximumTransactionAmount val)
                {
                    this.PaymentStreamMaximumTransactionAmount = val;
                }

                public QuickFix.Fields.PaymentStreamMaximumTransactionAmount Get(QuickFix.Fields.PaymentStreamMaximumTransactionAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMaximumTransactionAmount val)
                {
                    return IsSetPaymentStreamMaximumTransactionAmount();
                }

                public bool IsSetPaymentStreamMaximumTransactionAmount()
                {
                    return IsSetField(Tags.PaymentStreamMaximumTransactionAmount);
                }
                public QuickFix.Fields.PaymentStreamMaximumTransactionCurrency PaymentStreamMaximumTransactionCurrency
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamMaximumTransactionCurrency val = new QuickFix.Fields.PaymentStreamMaximumTransactionCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamMaximumTransactionCurrency val)
                {
                    this.PaymentStreamMaximumTransactionCurrency = val;
                }

                public QuickFix.Fields.PaymentStreamMaximumTransactionCurrency Get(QuickFix.Fields.PaymentStreamMaximumTransactionCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamMaximumTransactionCurrency val)
                {
                    return IsSetPaymentStreamMaximumTransactionCurrency();
                }

                public bool IsSetPaymentStreamMaximumTransactionCurrency()
                {
                    return IsSetField(Tags.PaymentStreamMaximumTransactionCurrency);
                }
                public QuickFix.Fields.PaymentStreamCashSettlIndicator PaymentStreamCashSettlIndicator
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCashSettlIndicator val = new QuickFix.Fields.PaymentStreamCashSettlIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCashSettlIndicator val)
                {
                    this.PaymentStreamCashSettlIndicator = val;
                }

                public QuickFix.Fields.PaymentStreamCashSettlIndicator Get(QuickFix.Fields.PaymentStreamCashSettlIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCashSettlIndicator val)
                {
                    return IsSetPaymentStreamCashSettlIndicator();
                }

                public bool IsSetPaymentStreamCashSettlIndicator()
                {
                    return IsSetField(Tags.PaymentStreamCashSettlIndicator);
                }
                public QuickFix.Fields.PaymentStreamCompoundingXIDRef PaymentStreamCompoundingXIDRef
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingXIDRef val = new QuickFix.Fields.PaymentStreamCompoundingXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingXIDRef val)
                {
                    this.PaymentStreamCompoundingXIDRef = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingXIDRef Get(QuickFix.Fields.PaymentStreamCompoundingXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingXIDRef val)
                {
                    return IsSetPaymentStreamCompoundingXIDRef();
                }

                public bool IsSetPaymentStreamCompoundingXIDRef()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingXIDRef);
                }
                public QuickFix.Fields.PaymentStreamCompoundingSpread PaymentStreamCompoundingSpread
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingSpread val = new QuickFix.Fields.PaymentStreamCompoundingSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingSpread val)
                {
                    this.PaymentStreamCompoundingSpread = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingSpread Get(QuickFix.Fields.PaymentStreamCompoundingSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingSpread val)
                {
                    return IsSetPaymentStreamCompoundingSpread();
                }

                public bool IsSetPaymentStreamCompoundingSpread()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingSpread);
                }
                public QuickFix.Fields.PaymentStreamInterpolationMethod PaymentStreamInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInterpolationMethod val = new QuickFix.Fields.PaymentStreamInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInterpolationMethod val)
                {
                    this.PaymentStreamInterpolationMethod = val;
                }

                public QuickFix.Fields.PaymentStreamInterpolationMethod Get(QuickFix.Fields.PaymentStreamInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInterpolationMethod val)
                {
                    return IsSetPaymentStreamInterpolationMethod();
                }

                public bool IsSetPaymentStreamInterpolationMethod()
                {
                    return IsSetField(Tags.PaymentStreamInterpolationMethod);
                }
                public QuickFix.Fields.PaymentStreamInterpolationPeriod PaymentStreamInterpolationPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamInterpolationPeriod val = new QuickFix.Fields.PaymentStreamInterpolationPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamInterpolationPeriod val)
                {
                    this.PaymentStreamInterpolationPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamInterpolationPeriod Get(QuickFix.Fields.PaymentStreamInterpolationPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamInterpolationPeriod val)
                {
                    return IsSetPaymentStreamInterpolationPeriod();
                }

                public bool IsSetPaymentStreamInterpolationPeriod()
                {
                    return IsSetField(Tags.PaymentStreamInterpolationPeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFixedRate PaymentStreamCompoundingFixedRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFixedRate val = new QuickFix.Fields.PaymentStreamCompoundingFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFixedRate val)
                {
                    this.PaymentStreamCompoundingFixedRate = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFixedRate Get(QuickFix.Fields.PaymentStreamCompoundingFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFixedRate val)
                {
                    return IsSetPaymentStreamCompoundingFixedRate();
                }

                public bool IsSetPaymentStreamCompoundingFixedRate()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFixedRate);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateIndex PaymentStreamCompoundingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateIndex val = new QuickFix.Fields.PaymentStreamCompoundingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateIndex val)
                {
                    this.PaymentStreamCompoundingRateIndex = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateIndex Get(QuickFix.Fields.PaymentStreamCompoundingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateIndex val)
                {
                    return IsSetPaymentStreamCompoundingRateIndex();
                }

                public bool IsSetPaymentStreamCompoundingRateIndex()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateIndex);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod PaymentStreamCompoundingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod val = new QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    this.PaymentStreamCompoundingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod Get(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    return IsSetPaymentStreamCompoundingRateIndexCurvePeriod();
                }

                public bool IsSetPaymentStreamCompoundingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit PaymentStreamCompoundingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit val = new QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    this.PaymentStreamCompoundingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit Get(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    return IsSetPaymentStreamCompoundingRateIndexCurveUnit();
                }

                public bool IsSetPaymentStreamCompoundingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateIndexCurveUnit);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateMultiplier PaymentStreamCompoundingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateMultiplier val = new QuickFix.Fields.PaymentStreamCompoundingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateMultiplier val)
                {
                    this.PaymentStreamCompoundingRateMultiplier = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateMultiplier Get(QuickFix.Fields.PaymentStreamCompoundingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateMultiplier val)
                {
                    return IsSetPaymentStreamCompoundingRateMultiplier();
                }

                public bool IsSetPaymentStreamCompoundingRateMultiplier()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateMultiplier);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateSpread PaymentStreamCompoundingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateSpread val = new QuickFix.Fields.PaymentStreamCompoundingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateSpread val)
                {
                    this.PaymentStreamCompoundingRateSpread = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateSpread Get(QuickFix.Fields.PaymentStreamCompoundingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateSpread val)
                {
                    return IsSetPaymentStreamCompoundingRateSpread();
                }

                public bool IsSetPaymentStreamCompoundingRateSpread()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateSpread);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType PaymentStreamCompoundingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType val = new QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType val)
                {
                    this.PaymentStreamCompoundingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType Get(QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateSpreadPositionType val)
                {
                    return IsSetPaymentStreamCompoundingRateSpreadPositionType();
                }

                public bool IsSetPaymentStreamCompoundingRateSpreadPositionType()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateSpreadPositionType);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRateTreatment PaymentStreamCompoundingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRateTreatment val = new QuickFix.Fields.PaymentStreamCompoundingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRateTreatment val)
                {
                    this.PaymentStreamCompoundingRateTreatment = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRateTreatment Get(QuickFix.Fields.PaymentStreamCompoundingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRateTreatment val)
                {
                    return IsSetPaymentStreamCompoundingRateTreatment();
                }

                public bool IsSetPaymentStreamCompoundingRateTreatment()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRateTreatment);
                }
                public QuickFix.Fields.PaymentStreamCompoundingCapRate PaymentStreamCompoundingCapRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingCapRate val = new QuickFix.Fields.PaymentStreamCompoundingCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingCapRate val)
                {
                    this.PaymentStreamCompoundingCapRate = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingCapRate Get(QuickFix.Fields.PaymentStreamCompoundingCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingCapRate val)
                {
                    return IsSetPaymentStreamCompoundingCapRate();
                }

                public bool IsSetPaymentStreamCompoundingCapRate()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingCapRate);
                }
                public QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide PaymentStreamCompoundingCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide val = new QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide val)
                {
                    this.PaymentStreamCompoundingCapRateBuySide = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide Get(QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingCapRateBuySide val)
                {
                    return IsSetPaymentStreamCompoundingCapRateBuySide();
                }

                public bool IsSetPaymentStreamCompoundingCapRateBuySide()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingCapRateBuySide);
                }
                public QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide PaymentStreamCompoundingCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide val = new QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide val)
                {
                    this.PaymentStreamCompoundingCapRateSellSide = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide Get(QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingCapRateSellSide val)
                {
                    return IsSetPaymentStreamCompoundingCapRateSellSide();
                }

                public bool IsSetPaymentStreamCompoundingCapRateSellSide()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingCapRateSellSide);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFloorRate PaymentStreamCompoundingFloorRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFloorRate val = new QuickFix.Fields.PaymentStreamCompoundingFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFloorRate val)
                {
                    this.PaymentStreamCompoundingFloorRate = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFloorRate Get(QuickFix.Fields.PaymentStreamCompoundingFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFloorRate val)
                {
                    return IsSetPaymentStreamCompoundingFloorRate();
                }

                public bool IsSetPaymentStreamCompoundingFloorRate()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFloorRate);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide PaymentStreamCompoundingFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide val = new QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide val)
                {
                    this.PaymentStreamCompoundingFloorRateBuySide = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide Get(QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFloorRateBuySide val)
                {
                    return IsSetPaymentStreamCompoundingFloorRateBuySide();
                }

                public bool IsSetPaymentStreamCompoundingFloorRateBuySide()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFloorRateBuySide);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide PaymentStreamCompoundingFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide val = new QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide val)
                {
                    this.PaymentStreamCompoundingFloorRateSellSide = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide Get(QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFloorRateSellSide val)
                {
                    return IsSetPaymentStreamCompoundingFloorRateSellSide();
                }

                public bool IsSetPaymentStreamCompoundingFloorRateSellSide()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFloorRateSellSide);
                }
                public QuickFix.Fields.PaymentStreamCompoundingInitialRate PaymentStreamCompoundingInitialRate
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingInitialRate val = new QuickFix.Fields.PaymentStreamCompoundingInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingInitialRate val)
                {
                    this.PaymentStreamCompoundingInitialRate = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingInitialRate Get(QuickFix.Fields.PaymentStreamCompoundingInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingInitialRate val)
                {
                    return IsSetPaymentStreamCompoundingInitialRate();
                }

                public bool IsSetPaymentStreamCompoundingInitialRate()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingInitialRate);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection PaymentStreamCompoundingFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection val = new QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    this.PaymentStreamCompoundingFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection Get(QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    return IsSetPaymentStreamCompoundingFinalRateRoundingDirection();
                }

                public bool IsSetPaymentStreamCompoundingFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFinalRateRoundingDirection);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision PaymentStreamCompoundingFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision val = new QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision val)
                {
                    this.PaymentStreamCompoundingFinalRatePrecision = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision Get(QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFinalRatePrecision val)
                {
                    return IsSetPaymentStreamCompoundingFinalRatePrecision();
                }

                public bool IsSetPaymentStreamCompoundingFinalRatePrecision()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFinalRatePrecision);
                }
                public QuickFix.Fields.PaymentStreamCompoundingAveragingMethod PaymentStreamCompoundingAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingAveragingMethod val = new QuickFix.Fields.PaymentStreamCompoundingAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingAveragingMethod val)
                {
                    this.PaymentStreamCompoundingAveragingMethod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingAveragingMethod Get(QuickFix.Fields.PaymentStreamCompoundingAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingAveragingMethod val)
                {
                    return IsSetPaymentStreamCompoundingAveragingMethod();
                }

                public bool IsSetPaymentStreamCompoundingAveragingMethod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingAveragingMethod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment PaymentStreamCompoundingNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment val = new QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment val)
                {
                    this.PaymentStreamCompoundingNegativeRateTreatment = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment Get(QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingNegativeRateTreatment val)
                {
                    return IsSetPaymentStreamCompoundingNegativeRateTreatment();
                }

                public bool IsSetPaymentStreamCompoundingNegativeRateTreatment()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingNegativeRateTreatment);
                }
                public QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention PaymentStreamCompoundingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention val = new QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    this.PaymentStreamCompoundingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention Get(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    return IsSetPaymentStreamCompoundingDatesBusinessDayConvention();
                }

                public bool IsSetPaymentStreamCompoundingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters NoPaymentStreamCompoundingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters val = new QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    this.NoPaymentStreamCompoundingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters Get(QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    return IsSetNoPaymentStreamCompoundingDatesBusinessCenters();
                }

                public bool IsSetNoPaymentStreamCompoundingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoPaymentStreamCompoundingDatesBusinessCenters);
                }
                public QuickFix.Fields.NoPaymentStreamCompoundingDates NoPaymentStreamCompoundingDates
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStreamCompoundingDates val = new QuickFix.Fields.NoPaymentStreamCompoundingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStreamCompoundingDates val)
                {
                    this.NoPaymentStreamCompoundingDates = val;
                }

                public QuickFix.Fields.NoPaymentStreamCompoundingDates Get(QuickFix.Fields.NoPaymentStreamCompoundingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStreamCompoundingDates val)
                {
                    return IsSetNoPaymentStreamCompoundingDates();
                }

                public bool IsSetNoPaymentStreamCompoundingDates()
                {
                    return IsSetField(Tags.NoPaymentStreamCompoundingDates);
                }
                public QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo PaymentStreamCompoundingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo val = new QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo val)
                {
                    this.PaymentStreamCompoundingDatesRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo Get(QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesRelativeTo val)
                {
                    return IsSetPaymentStreamCompoundingDatesRelativeTo();
                }

                public bool IsSetPaymentStreamCompoundingDatesRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingDatesRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod PaymentStreamCompoundingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod val = new QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    this.PaymentStreamCompoundingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod Get(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    return IsSetPaymentStreamCompoundingDatesOffsetPeriod();
                }

                public bool IsSetPaymentStreamCompoundingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingDatesOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit PaymentStreamCompoundingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit val = new QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit val)
                {
                    this.PaymentStreamCompoundingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit Get(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetUnit val)
                {
                    return IsSetPaymentStreamCompoundingDatesOffsetUnit();
                }

                public bool IsSetPaymentStreamCompoundingDatesOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingDatesOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType PaymentStreamCompoundingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType val = new QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType val)
                {
                    this.PaymentStreamCompoundingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType Get(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesOffsetDayType val)
                {
                    return IsSetPaymentStreamCompoundingDatesOffsetDayType();
                }

                public bool IsSetPaymentStreamCompoundingDatesOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingDatesOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamCompoundingPeriodSkip PaymentStreamCompoundingPeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingPeriodSkip val = new QuickFix.Fields.PaymentStreamCompoundingPeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingPeriodSkip val)
                {
                    this.PaymentStreamCompoundingPeriodSkip = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingPeriodSkip Get(QuickFix.Fields.PaymentStreamCompoundingPeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingPeriodSkip val)
                {
                    return IsSetPaymentStreamCompoundingPeriodSkip();
                }

                public bool IsSetPaymentStreamCompoundingPeriodSkip()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingPeriodSkip);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted PaymentStreamCompoundingStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted val = new QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted val)
                {
                    this.PaymentStreamCompoundingStartDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted Get(QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateUnadjusted val)
                {
                    return IsSetPaymentStreamCompoundingStartDateUnadjusted();
                }

                public bool IsSetPaymentStreamCompoundingStartDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo PaymentStreamCompoundingStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo val = new QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo val)
                {
                    this.PaymentStreamCompoundingStartDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo Get(QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateRelativeTo val)
                {
                    return IsSetPaymentStreamCompoundingStartDateRelativeTo();
                }

                public bool IsSetPaymentStreamCompoundingStartDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod PaymentStreamCompoundingStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    this.PaymentStreamCompoundingStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamCompoundingStartDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamCompoundingStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit PaymentStreamCompoundingStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit val = new QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    this.PaymentStreamCompoundingStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit Get(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    return IsSetPaymentStreamCompoundingStartDateOffsetUnit();
                }

                public bool IsSetPaymentStreamCompoundingStartDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType PaymentStreamCompoundingStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType val = new QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    this.PaymentStreamCompoundingStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType Get(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    return IsSetPaymentStreamCompoundingStartDateOffsetDayType();
                }

                public bool IsSetPaymentStreamCompoundingStartDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted PaymentStreamCompoundingStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted val = new QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted val)
                {
                    this.PaymentStreamCompoundingStartDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted Get(QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingStartDateAdjusted val)
                {
                    return IsSetPaymentStreamCompoundingStartDateAdjusted();
                }

                public bool IsSetPaymentStreamCompoundingStartDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingStartDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted PaymentStreamCompoundingEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted val = new QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted val)
                {
                    this.PaymentStreamCompoundingEndDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted Get(QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateUnadjusted val)
                {
                    return IsSetPaymentStreamCompoundingEndDateUnadjusted();
                }

                public bool IsSetPaymentStreamCompoundingEndDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo PaymentStreamCompoundingEndDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo val = new QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo val)
                {
                    this.PaymentStreamCompoundingEndDateRelativeTo = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo Get(QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateRelativeTo val)
                {
                    return IsSetPaymentStreamCompoundingEndDateRelativeTo();
                }

                public bool IsSetPaymentStreamCompoundingEndDateRelativeTo()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateRelativeTo);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod PaymentStreamCompoundingEndDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod val = new QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    this.PaymentStreamCompoundingEndDateOffsetPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod Get(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    return IsSetPaymentStreamCompoundingEndDateOffsetPeriod();
                }

                public bool IsSetPaymentStreamCompoundingEndDateOffsetPeriod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateOffsetPeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit PaymentStreamCompoundingEndDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit val = new QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    this.PaymentStreamCompoundingEndDateOffsetUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit Get(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    return IsSetPaymentStreamCompoundingEndDateOffsetUnit();
                }

                public bool IsSetPaymentStreamCompoundingEndDateOffsetUnit()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateOffsetUnit);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType PaymentStreamCompoundingEndDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType val = new QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    this.PaymentStreamCompoundingEndDateOffsetDayType = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType Get(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    return IsSetPaymentStreamCompoundingEndDateOffsetDayType();
                }

                public bool IsSetPaymentStreamCompoundingEndDateOffsetDayType()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateOffsetDayType);
                }
                public QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted PaymentStreamCompoundingEndDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted val = new QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted val)
                {
                    this.PaymentStreamCompoundingEndDateAdjusted = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted Get(QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingEndDateAdjusted val)
                {
                    return IsSetPaymentStreamCompoundingEndDateAdjusted();
                }

                public bool IsSetPaymentStreamCompoundingEndDateAdjusted()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingEndDateAdjusted);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod PaymentStreamCompoundingFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod val = new QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod val)
                {
                    this.PaymentStreamCompoundingFrequencyPeriod = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod Get(QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFrequencyPeriod val)
                {
                    return IsSetPaymentStreamCompoundingFrequencyPeriod();
                }

                public bool IsSetPaymentStreamCompoundingFrequencyPeriod()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFrequencyPeriod);
                }
                public QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit PaymentStreamCompoundingFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit val = new QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit val)
                {
                    this.PaymentStreamCompoundingFrequencyUnit = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit Get(QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingFrequencyUnit val)
                {
                    return IsSetPaymentStreamCompoundingFrequencyUnit();
                }

                public bool IsSetPaymentStreamCompoundingFrequencyUnit()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingFrequencyUnit);
                }
                public QuickFix.Fields.PaymentStreamCompoundingRollConvention PaymentStreamCompoundingRollConvention
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamCompoundingRollConvention val = new QuickFix.Fields.PaymentStreamCompoundingRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamCompoundingRollConvention val)
                {
                    this.PaymentStreamCompoundingRollConvention = val;
                }

                public QuickFix.Fields.PaymentStreamCompoundingRollConvention Get(QuickFix.Fields.PaymentStreamCompoundingRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingRollConvention val)
                {
                    return IsSetPaymentStreamCompoundingRollConvention();
                }

                public bool IsSetPaymentStreamCompoundingRollConvention()
                {
                    return IsSetField(Tags.PaymentStreamCompoundingRollConvention);
                }
                public QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted PaymentStreamBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted val = new QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted val)
                {
                    this.PaymentStreamBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted Get(QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamBoundsFirstDateUnadjusted val)
                {
                    return IsSetPaymentStreamBoundsFirstDateUnadjusted();
                }

                public bool IsSetPaymentStreamBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted PaymentStreamBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted val = new QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted val)
                {
                    this.PaymentStreamBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted Get(QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamBoundsLastDateUnadjusted val)
                {
                    return IsSetPaymentStreamBoundsLastDateUnadjusted();
                }

                public bool IsSetPaymentStreamBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.PaymentStreamBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.PaymentStreamOtherDayCount PaymentStreamOtherDayCount
                {
                    get
                    {
                        QuickFix.Fields.PaymentStreamOtherDayCount val = new QuickFix.Fields.PaymentStreamOtherDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PaymentStreamOtherDayCount val)
                {
                    this.PaymentStreamOtherDayCount = val;
                }

                public QuickFix.Fields.PaymentStreamOtherDayCount Get(QuickFix.Fields.PaymentStreamOtherDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PaymentStreamOtherDayCount val)
                {
                    return IsSetPaymentStreamOtherDayCount();
                }

                public bool IsSetPaymentStreamOtherDayCount()
                {
                    return IsSetField(Tags.PaymentStreamOtherDayCount);
                }
                public QuickFix.Fields.NoPaymentSchedules NoPaymentSchedules
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentSchedules val = new QuickFix.Fields.NoPaymentSchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentSchedules val)
                {
                    this.NoPaymentSchedules = val;
                }

                public QuickFix.Fields.NoPaymentSchedules Get(QuickFix.Fields.NoPaymentSchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentSchedules val)
                {
                    return IsSetNoPaymentSchedules();
                }

                public bool IsSetNoPaymentSchedules()
                {
                    return IsSetField(Tags.NoPaymentSchedules);
                }
                public QuickFix.Fields.NoPaymentStubs NoPaymentStubs
                {
                    get
                    {
                        QuickFix.Fields.NoPaymentStubs val = new QuickFix.Fields.NoPaymentStubs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPaymentStubs val)
                {
                    this.NoPaymentStubs = val;
                }

                public QuickFix.Fields.NoPaymentStubs Get(QuickFix.Fields.NoPaymentStubs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPaymentStubs val)
                {
                    return IsSetNoPaymentStubs();
                }

                public bool IsSetNoPaymentStubs()
                {
                    return IsSetField(Tags.NoPaymentStubs);
                }
                public QuickFix.Fields.StreamText StreamText
                {
                    get
                    {
                        QuickFix.Fields.StreamText val = new QuickFix.Fields.StreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamText val)
                {
                    this.StreamText = val;
                }

                public QuickFix.Fields.StreamText Get(QuickFix.Fields.StreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamText val)
                {
                    return IsSetStreamText();
                }

                public bool IsSetStreamText()
                {
                    return IsSetField(Tags.StreamText);
                }
                public QuickFix.Fields.EncodedStreamTextLen EncodedStreamTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedStreamTextLen val = new QuickFix.Fields.EncodedStreamTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedStreamTextLen val)
                {
                    this.EncodedStreamTextLen = val;
                }

                public QuickFix.Fields.EncodedStreamTextLen Get(QuickFix.Fields.EncodedStreamTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedStreamTextLen val)
                {
                    return IsSetEncodedStreamTextLen();
                }

                public bool IsSetEncodedStreamTextLen()
                {
                    return IsSetField(Tags.EncodedStreamTextLen);
                }
                public QuickFix.Fields.EncodedStreamText EncodedStreamText
                {
                    get
                    {
                        QuickFix.Fields.EncodedStreamText val = new QuickFix.Fields.EncodedStreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedStreamText val)
                {
                    this.EncodedStreamText = val;
                }

                public QuickFix.Fields.EncodedStreamText Get(QuickFix.Fields.EncodedStreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedStreamText val)
                {
                    return IsSetEncodedStreamText();
                }

                public bool IsSetEncodedStreamText()
                {
                    return IsSetField(Tags.EncodedStreamText);
                }
                public QuickFix.Fields.StreamXID StreamXID
                {
                    get
                    {
                        QuickFix.Fields.StreamXID val = new QuickFix.Fields.StreamXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamXID val)
                {
                    this.StreamXID = val;
                }

                public QuickFix.Fields.StreamXID Get(QuickFix.Fields.StreamXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamXID val)
                {
                    return IsSetStreamXID();
                }

                public bool IsSetStreamXID()
                {
                    return IsSetField(Tags.StreamXID);
                }
                public QuickFix.Fields.StreamNotionalXIDRef StreamNotionalXIDRef
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalXIDRef val = new QuickFix.Fields.StreamNotionalXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalXIDRef val)
                {
                    this.StreamNotionalXIDRef = val;
                }

                public QuickFix.Fields.StreamNotionalXIDRef Get(QuickFix.Fields.StreamNotionalXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalXIDRef val)
                {
                    return IsSetStreamNotionalXIDRef();
                }

                public bool IsSetStreamNotionalXIDRef()
                {
                    return IsSetField(Tags.StreamNotionalXIDRef);
                }
                public QuickFix.Fields.StreamNotionalFrequencyPeriod StreamNotionalFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalFrequencyPeriod val = new QuickFix.Fields.StreamNotionalFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalFrequencyPeriod val)
                {
                    this.StreamNotionalFrequencyPeriod = val;
                }

                public QuickFix.Fields.StreamNotionalFrequencyPeriod Get(QuickFix.Fields.StreamNotionalFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalFrequencyPeriod val)
                {
                    return IsSetStreamNotionalFrequencyPeriod();
                }

                public bool IsSetStreamNotionalFrequencyPeriod()
                {
                    return IsSetField(Tags.StreamNotionalFrequencyPeriod);
                }
                public QuickFix.Fields.StreamNotionalFrequencyUnit StreamNotionalFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalFrequencyUnit val = new QuickFix.Fields.StreamNotionalFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalFrequencyUnit val)
                {
                    this.StreamNotionalFrequencyUnit = val;
                }

                public QuickFix.Fields.StreamNotionalFrequencyUnit Get(QuickFix.Fields.StreamNotionalFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalFrequencyUnit val)
                {
                    return IsSetStreamNotionalFrequencyUnit();
                }

                public bool IsSetStreamNotionalFrequencyUnit()
                {
                    return IsSetField(Tags.StreamNotionalFrequencyUnit);
                }
                public QuickFix.Fields.StreamNotionalCommodityFrequency StreamNotionalCommodityFrequency
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalCommodityFrequency val = new QuickFix.Fields.StreamNotionalCommodityFrequency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalCommodityFrequency val)
                {
                    this.StreamNotionalCommodityFrequency = val;
                }

                public QuickFix.Fields.StreamNotionalCommodityFrequency Get(QuickFix.Fields.StreamNotionalCommodityFrequency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalCommodityFrequency val)
                {
                    return IsSetStreamNotionalCommodityFrequency();
                }

                public bool IsSetStreamNotionalCommodityFrequency()
                {
                    return IsSetField(Tags.StreamNotionalCommodityFrequency);
                }
                public QuickFix.Fields.StreamNotionalUnitOfMeasure StreamNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalUnitOfMeasure val = new QuickFix.Fields.StreamNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalUnitOfMeasure val)
                {
                    this.StreamNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.StreamNotionalUnitOfMeasure Get(QuickFix.Fields.StreamNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalUnitOfMeasure val)
                {
                    return IsSetStreamNotionalUnitOfMeasure();
                }

                public bool IsSetStreamNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.StreamNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.StreamTotalNotional StreamTotalNotional
                {
                    get
                    {
                        QuickFix.Fields.StreamTotalNotional val = new QuickFix.Fields.StreamTotalNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTotalNotional val)
                {
                    this.StreamTotalNotional = val;
                }

                public QuickFix.Fields.StreamTotalNotional Get(QuickFix.Fields.StreamTotalNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTotalNotional val)
                {
                    return IsSetStreamTotalNotional();
                }

                public bool IsSetStreamTotalNotional()
                {
                    return IsSetField(Tags.StreamTotalNotional);
                }
                public QuickFix.Fields.StreamTotalNotionalUnitOfMeasure StreamTotalNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.StreamTotalNotionalUnitOfMeasure val = new QuickFix.Fields.StreamTotalNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamTotalNotionalUnitOfMeasure val)
                {
                    this.StreamTotalNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.StreamTotalNotionalUnitOfMeasure Get(QuickFix.Fields.StreamTotalNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamTotalNotionalUnitOfMeasure val)
                {
                    return IsSetStreamTotalNotionalUnitOfMeasure();
                }

                public bool IsSetStreamTotalNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.StreamTotalNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.StreamCommodityBase StreamCommodityBase
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityBase val = new QuickFix.Fields.StreamCommodityBase();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityBase val)
                {
                    this.StreamCommodityBase = val;
                }

                public QuickFix.Fields.StreamCommodityBase Get(QuickFix.Fields.StreamCommodityBase val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityBase val)
                {
                    return IsSetStreamCommodityBase();
                }

                public bool IsSetStreamCommodityBase()
                {
                    return IsSetField(Tags.StreamCommodityBase);
                }
                public QuickFix.Fields.StreamCommodityType StreamCommodityType
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityType val = new QuickFix.Fields.StreamCommodityType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityType val)
                {
                    this.StreamCommodityType = val;
                }

                public QuickFix.Fields.StreamCommodityType Get(QuickFix.Fields.StreamCommodityType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityType val)
                {
                    return IsSetStreamCommodityType();
                }

                public bool IsSetStreamCommodityType()
                {
                    return IsSetField(Tags.StreamCommodityType);
                }
                public QuickFix.Fields.StreamCommoditySecurityID StreamCommoditySecurityID
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySecurityID val = new QuickFix.Fields.StreamCommoditySecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySecurityID val)
                {
                    this.StreamCommoditySecurityID = val;
                }

                public QuickFix.Fields.StreamCommoditySecurityID Get(QuickFix.Fields.StreamCommoditySecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySecurityID val)
                {
                    return IsSetStreamCommoditySecurityID();
                }

                public bool IsSetStreamCommoditySecurityID()
                {
                    return IsSetField(Tags.StreamCommoditySecurityID);
                }
                public QuickFix.Fields.StreamCommoditySecurityIDSource StreamCommoditySecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySecurityIDSource val = new QuickFix.Fields.StreamCommoditySecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySecurityIDSource val)
                {
                    this.StreamCommoditySecurityIDSource = val;
                }

                public QuickFix.Fields.StreamCommoditySecurityIDSource Get(QuickFix.Fields.StreamCommoditySecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySecurityIDSource val)
                {
                    return IsSetStreamCommoditySecurityIDSource();
                }

                public bool IsSetStreamCommoditySecurityIDSource()
                {
                    return IsSetField(Tags.StreamCommoditySecurityIDSource);
                }
                public QuickFix.Fields.NoStreamCommodityAltIDs NoStreamCommodityAltIDs
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCommodityAltIDs val = new QuickFix.Fields.NoStreamCommodityAltIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCommodityAltIDs val)
                {
                    this.NoStreamCommodityAltIDs = val;
                }

                public QuickFix.Fields.NoStreamCommodityAltIDs Get(QuickFix.Fields.NoStreamCommodityAltIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCommodityAltIDs val)
                {
                    return IsSetNoStreamCommodityAltIDs();
                }

                public bool IsSetNoStreamCommodityAltIDs()
                {
                    return IsSetField(Tags.NoStreamCommodityAltIDs);
                }
                public QuickFix.Fields.StreamCommodityDesc StreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityDesc val = new QuickFix.Fields.StreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityDesc val)
                {
                    this.StreamCommodityDesc = val;
                }

                public QuickFix.Fields.StreamCommodityDesc Get(QuickFix.Fields.StreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityDesc val)
                {
                    return IsSetStreamCommodityDesc();
                }

                public bool IsSetStreamCommodityDesc()
                {
                    return IsSetField(Tags.StreamCommodityDesc);
                }
                public QuickFix.Fields.EncodedStreamCommodityDescLen EncodedStreamCommodityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedStreamCommodityDescLen val = new QuickFix.Fields.EncodedStreamCommodityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedStreamCommodityDescLen val)
                {
                    this.EncodedStreamCommodityDescLen = val;
                }

                public QuickFix.Fields.EncodedStreamCommodityDescLen Get(QuickFix.Fields.EncodedStreamCommodityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedStreamCommodityDescLen val)
                {
                    return IsSetEncodedStreamCommodityDescLen();
                }

                public bool IsSetEncodedStreamCommodityDescLen()
                {
                    return IsSetField(Tags.EncodedStreamCommodityDescLen);
                }
                public QuickFix.Fields.EncodedStreamCommodityDesc EncodedStreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedStreamCommodityDesc val = new QuickFix.Fields.EncodedStreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedStreamCommodityDesc val)
                {
                    this.EncodedStreamCommodityDesc = val;
                }

                public QuickFix.Fields.EncodedStreamCommodityDesc Get(QuickFix.Fields.EncodedStreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedStreamCommodityDesc val)
                {
                    return IsSetEncodedStreamCommodityDesc();
                }

                public bool IsSetEncodedStreamCommodityDesc()
                {
                    return IsSetField(Tags.EncodedStreamCommodityDesc);
                }
                public QuickFix.Fields.NoStreamAssetAttributes NoStreamAssetAttributes
                {
                    get
                    {
                        QuickFix.Fields.NoStreamAssetAttributes val = new QuickFix.Fields.NoStreamAssetAttributes();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamAssetAttributes val)
                {
                    this.NoStreamAssetAttributes = val;
                }

                public QuickFix.Fields.NoStreamAssetAttributes Get(QuickFix.Fields.NoStreamAssetAttributes val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamAssetAttributes val)
                {
                    return IsSetNoStreamAssetAttributes();
                }

                public bool IsSetNoStreamAssetAttributes()
                {
                    return IsSetField(Tags.NoStreamAssetAttributes);
                }
                public QuickFix.Fields.StreamCommodityUnitOfMeasure StreamCommodityUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityUnitOfMeasure val = new QuickFix.Fields.StreamCommodityUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityUnitOfMeasure val)
                {
                    this.StreamCommodityUnitOfMeasure = val;
                }

                public QuickFix.Fields.StreamCommodityUnitOfMeasure Get(QuickFix.Fields.StreamCommodityUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityUnitOfMeasure val)
                {
                    return IsSetStreamCommodityUnitOfMeasure();
                }

                public bool IsSetStreamCommodityUnitOfMeasure()
                {
                    return IsSetField(Tags.StreamCommodityUnitOfMeasure);
                }
                public QuickFix.Fields.StreamCommodityCurrency StreamCommodityCurrency
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityCurrency val = new QuickFix.Fields.StreamCommodityCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityCurrency val)
                {
                    this.StreamCommodityCurrency = val;
                }

                public QuickFix.Fields.StreamCommodityCurrency Get(QuickFix.Fields.StreamCommodityCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityCurrency val)
                {
                    return IsSetStreamCommodityCurrency();
                }

                public bool IsSetStreamCommodityCurrency()
                {
                    return IsSetField(Tags.StreamCommodityCurrency);
                }
                public QuickFix.Fields.StreamCommodityExchange StreamCommodityExchange
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityExchange val = new QuickFix.Fields.StreamCommodityExchange();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityExchange val)
                {
                    this.StreamCommodityExchange = val;
                }

                public QuickFix.Fields.StreamCommodityExchange Get(QuickFix.Fields.StreamCommodityExchange val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityExchange val)
                {
                    return IsSetStreamCommodityExchange();
                }

                public bool IsSetStreamCommodityExchange()
                {
                    return IsSetField(Tags.StreamCommodityExchange);
                }
                public QuickFix.Fields.StreamCommodityRateSource StreamCommodityRateSource
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityRateSource val = new QuickFix.Fields.StreamCommodityRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityRateSource val)
                {
                    this.StreamCommodityRateSource = val;
                }

                public QuickFix.Fields.StreamCommodityRateSource Get(QuickFix.Fields.StreamCommodityRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityRateSource val)
                {
                    return IsSetStreamCommodityRateSource();
                }

                public bool IsSetStreamCommodityRateSource()
                {
                    return IsSetField(Tags.StreamCommodityRateSource);
                }
                public QuickFix.Fields.StreamCommodityRateReferencePage StreamCommodityRateReferencePage
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityRateReferencePage val = new QuickFix.Fields.StreamCommodityRateReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityRateReferencePage val)
                {
                    this.StreamCommodityRateReferencePage = val;
                }

                public QuickFix.Fields.StreamCommodityRateReferencePage Get(QuickFix.Fields.StreamCommodityRateReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityRateReferencePage val)
                {
                    return IsSetStreamCommodityRateReferencePage();
                }

                public bool IsSetStreamCommodityRateReferencePage()
                {
                    return IsSetField(Tags.StreamCommodityRateReferencePage);
                }
                public QuickFix.Fields.StreamCommodityRateReferencePageHeading StreamCommodityRateReferencePageHeading
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityRateReferencePageHeading val = new QuickFix.Fields.StreamCommodityRateReferencePageHeading();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityRateReferencePageHeading val)
                {
                    this.StreamCommodityRateReferencePageHeading = val;
                }

                public QuickFix.Fields.StreamCommodityRateReferencePageHeading Get(QuickFix.Fields.StreamCommodityRateReferencePageHeading val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityRateReferencePageHeading val)
                {
                    return IsSetStreamCommodityRateReferencePageHeading();
                }

                public bool IsSetStreamCommodityRateReferencePageHeading()
                {
                    return IsSetField(Tags.StreamCommodityRateReferencePageHeading);
                }
                public QuickFix.Fields.StreamDataProvider StreamDataProvider
                {
                    get
                    {
                        QuickFix.Fields.StreamDataProvider val = new QuickFix.Fields.StreamDataProvider();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamDataProvider val)
                {
                    this.StreamDataProvider = val;
                }

                public QuickFix.Fields.StreamDataProvider Get(QuickFix.Fields.StreamDataProvider val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamDataProvider val)
                {
                    return IsSetStreamDataProvider();
                }

                public bool IsSetStreamDataProvider()
                {
                    return IsSetField(Tags.StreamDataProvider);
                }
                public QuickFix.Fields.NoStreamCommodityDataSources NoStreamCommodityDataSources
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCommodityDataSources val = new QuickFix.Fields.NoStreamCommodityDataSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCommodityDataSources val)
                {
                    this.NoStreamCommodityDataSources = val;
                }

                public QuickFix.Fields.NoStreamCommodityDataSources Get(QuickFix.Fields.NoStreamCommodityDataSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCommodityDataSources val)
                {
                    return IsSetNoStreamCommodityDataSources();
                }

                public bool IsSetNoStreamCommodityDataSources()
                {
                    return IsSetField(Tags.NoStreamCommodityDataSources);
                }
                public QuickFix.Fields.StreamCommodityPricingType StreamCommodityPricingType
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityPricingType val = new QuickFix.Fields.StreamCommodityPricingType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityPricingType val)
                {
                    this.StreamCommodityPricingType = val;
                }

                public QuickFix.Fields.StreamCommodityPricingType Get(QuickFix.Fields.StreamCommodityPricingType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityPricingType val)
                {
                    return IsSetStreamCommodityPricingType();
                }

                public bool IsSetStreamCommodityPricingType()
                {
                    return IsSetField(Tags.StreamCommodityPricingType);
                }
                public QuickFix.Fields.StreamCommodityNearbySettlDayPeriod StreamCommodityNearbySettlDayPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityNearbySettlDayPeriod val = new QuickFix.Fields.StreamCommodityNearbySettlDayPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityNearbySettlDayPeriod val)
                {
                    this.StreamCommodityNearbySettlDayPeriod = val;
                }

                public QuickFix.Fields.StreamCommodityNearbySettlDayPeriod Get(QuickFix.Fields.StreamCommodityNearbySettlDayPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityNearbySettlDayPeriod val)
                {
                    return IsSetStreamCommodityNearbySettlDayPeriod();
                }

                public bool IsSetStreamCommodityNearbySettlDayPeriod()
                {
                    return IsSetField(Tags.StreamCommodityNearbySettlDayPeriod);
                }
                public QuickFix.Fields.StreamCommodityNearbySettlDayUnit StreamCommodityNearbySettlDayUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityNearbySettlDayUnit val = new QuickFix.Fields.StreamCommodityNearbySettlDayUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityNearbySettlDayUnit val)
                {
                    this.StreamCommodityNearbySettlDayUnit = val;
                }

                public QuickFix.Fields.StreamCommodityNearbySettlDayUnit Get(QuickFix.Fields.StreamCommodityNearbySettlDayUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityNearbySettlDayUnit val)
                {
                    return IsSetStreamCommodityNearbySettlDayUnit();
                }

                public bool IsSetStreamCommodityNearbySettlDayUnit()
                {
                    return IsSetField(Tags.StreamCommodityNearbySettlDayUnit);
                }
                public QuickFix.Fields.StreamCommoditySettlDateUnadjusted StreamCommoditySettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDateUnadjusted val = new QuickFix.Fields.StreamCommoditySettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDateUnadjusted val)
                {
                    this.StreamCommoditySettlDateUnadjusted = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDateUnadjusted Get(QuickFix.Fields.StreamCommoditySettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDateUnadjusted val)
                {
                    return IsSetStreamCommoditySettlDateUnadjusted();
                }

                public bool IsSetStreamCommoditySettlDateUnadjusted()
                {
                    return IsSetField(Tags.StreamCommoditySettlDateUnadjusted);
                }
                public QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention StreamCommoditySettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention val = new QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention val)
                {
                    this.StreamCommoditySettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention Get(QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDateBusinessDayConvention val)
                {
                    return IsSetStreamCommoditySettlDateBusinessDayConvention();
                }

                public bool IsSetStreamCommoditySettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.StreamCommoditySettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoStreamCommoditySettlBusinessCenters NoStreamCommoditySettlBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCommoditySettlBusinessCenters val = new QuickFix.Fields.NoStreamCommoditySettlBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCommoditySettlBusinessCenters val)
                {
                    this.NoStreamCommoditySettlBusinessCenters = val;
                }

                public QuickFix.Fields.NoStreamCommoditySettlBusinessCenters Get(QuickFix.Fields.NoStreamCommoditySettlBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCommoditySettlBusinessCenters val)
                {
                    return IsSetNoStreamCommoditySettlBusinessCenters();
                }

                public bool IsSetNoStreamCommoditySettlBusinessCenters()
                {
                    return IsSetField(Tags.NoStreamCommoditySettlBusinessCenters);
                }
                public QuickFix.Fields.StreamCommoditySettlDateAdjusted StreamCommoditySettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDateAdjusted val = new QuickFix.Fields.StreamCommoditySettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDateAdjusted val)
                {
                    this.StreamCommoditySettlDateAdjusted = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDateAdjusted Get(QuickFix.Fields.StreamCommoditySettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDateAdjusted val)
                {
                    return IsSetStreamCommoditySettlDateAdjusted();
                }

                public bool IsSetStreamCommoditySettlDateAdjusted()
                {
                    return IsSetField(Tags.StreamCommoditySettlDateAdjusted);
                }
                public QuickFix.Fields.StreamCommoditySettlMonth StreamCommoditySettlMonth
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlMonth val = new QuickFix.Fields.StreamCommoditySettlMonth();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlMonth val)
                {
                    this.StreamCommoditySettlMonth = val;
                }

                public QuickFix.Fields.StreamCommoditySettlMonth Get(QuickFix.Fields.StreamCommoditySettlMonth val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlMonth val)
                {
                    return IsSetStreamCommoditySettlMonth();
                }

                public bool IsSetStreamCommoditySettlMonth()
                {
                    return IsSetField(Tags.StreamCommoditySettlMonth);
                }
                public QuickFix.Fields.StreamCommoditySettlDateRollPeriod StreamCommoditySettlDateRollPeriod
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDateRollPeriod val = new QuickFix.Fields.StreamCommoditySettlDateRollPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDateRollPeriod val)
                {
                    this.StreamCommoditySettlDateRollPeriod = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDateRollPeriod Get(QuickFix.Fields.StreamCommoditySettlDateRollPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDateRollPeriod val)
                {
                    return IsSetStreamCommoditySettlDateRollPeriod();
                }

                public bool IsSetStreamCommoditySettlDateRollPeriod()
                {
                    return IsSetField(Tags.StreamCommoditySettlDateRollPeriod);
                }
                public QuickFix.Fields.StreamCommoditySettlDateRollUnit StreamCommoditySettlDateRollUnit
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDateRollUnit val = new QuickFix.Fields.StreamCommoditySettlDateRollUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDateRollUnit val)
                {
                    this.StreamCommoditySettlDateRollUnit = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDateRollUnit Get(QuickFix.Fields.StreamCommoditySettlDateRollUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDateRollUnit val)
                {
                    return IsSetStreamCommoditySettlDateRollUnit();
                }

                public bool IsSetStreamCommoditySettlDateRollUnit()
                {
                    return IsSetField(Tags.StreamCommoditySettlDateRollUnit);
                }
                public QuickFix.Fields.StreamCommoditySettlDayType StreamCommoditySettlDayType
                {
                    get
                    {
                        QuickFix.Fields.StreamCommoditySettlDayType val = new QuickFix.Fields.StreamCommoditySettlDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommoditySettlDayType val)
                {
                    this.StreamCommoditySettlDayType = val;
                }

                public QuickFix.Fields.StreamCommoditySettlDayType Get(QuickFix.Fields.StreamCommoditySettlDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommoditySettlDayType val)
                {
                    return IsSetStreamCommoditySettlDayType();
                }

                public bool IsSetStreamCommoditySettlDayType()
                {
                    return IsSetField(Tags.StreamCommoditySettlDayType);
                }
                public QuickFix.Fields.NoStreamCommoditySettlPeriods NoStreamCommoditySettlPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoStreamCommoditySettlPeriods val = new QuickFix.Fields.NoStreamCommoditySettlPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoStreamCommoditySettlPeriods val)
                {
                    this.NoStreamCommoditySettlPeriods = val;
                }

                public QuickFix.Fields.NoStreamCommoditySettlPeriods Get(QuickFix.Fields.NoStreamCommoditySettlPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoStreamCommoditySettlPeriods val)
                {
                    return IsSetNoStreamCommoditySettlPeriods();
                }

                public bool IsSetNoStreamCommoditySettlPeriods()
                {
                    return IsSetField(Tags.NoStreamCommoditySettlPeriods);
                }
                public QuickFix.Fields.StreamCommodityXID StreamCommodityXID
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityXID val = new QuickFix.Fields.StreamCommodityXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityXID val)
                {
                    this.StreamCommodityXID = val;
                }

                public QuickFix.Fields.StreamCommodityXID Get(QuickFix.Fields.StreamCommodityXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityXID val)
                {
                    return IsSetStreamCommodityXID();
                }

                public bool IsSetStreamCommodityXID()
                {
                    return IsSetField(Tags.StreamCommodityXID);
                }
                public QuickFix.Fields.StreamCommodityXIDRef StreamCommodityXIDRef
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityXIDRef val = new QuickFix.Fields.StreamCommodityXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityXIDRef val)
                {
                    this.StreamCommodityXIDRef = val;
                }

                public QuickFix.Fields.StreamCommodityXIDRef Get(QuickFix.Fields.StreamCommodityXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityXIDRef val)
                {
                    return IsSetStreamCommodityXIDRef();
                }

                public bool IsSetStreamCommodityXIDRef()
                {
                    return IsSetField(Tags.StreamCommodityXIDRef);
                }
                public QuickFix.Fields.StreamCommodityDeliveryPricingRegion StreamCommodityDeliveryPricingRegion
                {
                    get
                    {
                        QuickFix.Fields.StreamCommodityDeliveryPricingRegion val = new QuickFix.Fields.StreamCommodityDeliveryPricingRegion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamCommodityDeliveryPricingRegion val)
                {
                    this.StreamCommodityDeliveryPricingRegion = val;
                }

                public QuickFix.Fields.StreamCommodityDeliveryPricingRegion Get(QuickFix.Fields.StreamCommodityDeliveryPricingRegion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamCommodityDeliveryPricingRegion val)
                {
                    return IsSetStreamCommodityDeliveryPricingRegion();
                }

                public bool IsSetStreamCommodityDeliveryPricingRegion()
                {
                    return IsSetField(Tags.StreamCommodityDeliveryPricingRegion);
                }
                public QuickFix.Fields.DeliveryStreamType DeliveryStreamType
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamType val = new QuickFix.Fields.DeliveryStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamType val)
                {
                    this.DeliveryStreamType = val;
                }

                public QuickFix.Fields.DeliveryStreamType Get(QuickFix.Fields.DeliveryStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamType val)
                {
                    return IsSetDeliveryStreamType();
                }

                public bool IsSetDeliveryStreamType()
                {
                    return IsSetField(Tags.DeliveryStreamType);
                }
                public QuickFix.Fields.NoDeliveryStreamCommoditySources NoDeliveryStreamCommoditySources
                {
                    get
                    {
                        QuickFix.Fields.NoDeliveryStreamCommoditySources val = new QuickFix.Fields.NoDeliveryStreamCommoditySources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDeliveryStreamCommoditySources val)
                {
                    this.NoDeliveryStreamCommoditySources = val;
                }

                public QuickFix.Fields.NoDeliveryStreamCommoditySources Get(QuickFix.Fields.NoDeliveryStreamCommoditySources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDeliveryStreamCommoditySources val)
                {
                    return IsSetNoDeliveryStreamCommoditySources();
                }

                public bool IsSetNoDeliveryStreamCommoditySources()
                {
                    return IsSetField(Tags.NoDeliveryStreamCommoditySources);
                }
                public QuickFix.Fields.DeliveryStreamPipeline DeliveryStreamPipeline
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamPipeline val = new QuickFix.Fields.DeliveryStreamPipeline();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamPipeline val)
                {
                    this.DeliveryStreamPipeline = val;
                }

                public QuickFix.Fields.DeliveryStreamPipeline Get(QuickFix.Fields.DeliveryStreamPipeline val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamPipeline val)
                {
                    return IsSetDeliveryStreamPipeline();
                }

                public bool IsSetDeliveryStreamPipeline()
                {
                    return IsSetField(Tags.DeliveryStreamPipeline);
                }
                public QuickFix.Fields.DeliveryStreamEntryPoint DeliveryStreamEntryPoint
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamEntryPoint val = new QuickFix.Fields.DeliveryStreamEntryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamEntryPoint val)
                {
                    this.DeliveryStreamEntryPoint = val;
                }

                public QuickFix.Fields.DeliveryStreamEntryPoint Get(QuickFix.Fields.DeliveryStreamEntryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamEntryPoint val)
                {
                    return IsSetDeliveryStreamEntryPoint();
                }

                public bool IsSetDeliveryStreamEntryPoint()
                {
                    return IsSetField(Tags.DeliveryStreamEntryPoint);
                }
                public QuickFix.Fields.DeliveryStreamWithdrawalPoint DeliveryStreamWithdrawalPoint
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamWithdrawalPoint val = new QuickFix.Fields.DeliveryStreamWithdrawalPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamWithdrawalPoint val)
                {
                    this.DeliveryStreamWithdrawalPoint = val;
                }

                public QuickFix.Fields.DeliveryStreamWithdrawalPoint Get(QuickFix.Fields.DeliveryStreamWithdrawalPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamWithdrawalPoint val)
                {
                    return IsSetDeliveryStreamWithdrawalPoint();
                }

                public bool IsSetDeliveryStreamWithdrawalPoint()
                {
                    return IsSetField(Tags.DeliveryStreamWithdrawalPoint);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryPoint DeliveryStreamDeliveryPoint
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryPoint val = new QuickFix.Fields.DeliveryStreamDeliveryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryPoint val)
                {
                    this.DeliveryStreamDeliveryPoint = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryPoint Get(QuickFix.Fields.DeliveryStreamDeliveryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryPoint val)
                {
                    return IsSetDeliveryStreamDeliveryPoint();
                }

                public bool IsSetDeliveryStreamDeliveryPoint()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryPoint);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryRestriction DeliveryStreamDeliveryRestriction
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryRestriction val = new QuickFix.Fields.DeliveryStreamDeliveryRestriction();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryRestriction val)
                {
                    this.DeliveryStreamDeliveryRestriction = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryRestriction Get(QuickFix.Fields.DeliveryStreamDeliveryRestriction val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryRestriction val)
                {
                    return IsSetDeliveryStreamDeliveryRestriction();
                }

                public bool IsSetDeliveryStreamDeliveryRestriction()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryRestriction);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryContingency DeliveryStreamDeliveryContingency
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryContingency val = new QuickFix.Fields.DeliveryStreamDeliveryContingency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryContingency val)
                {
                    this.DeliveryStreamDeliveryContingency = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryContingency Get(QuickFix.Fields.DeliveryStreamDeliveryContingency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryContingency val)
                {
                    return IsSetDeliveryStreamDeliveryContingency();
                }

                public bool IsSetDeliveryStreamDeliveryContingency()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryContingency);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide DeliveryStreamDeliveryContingentPartySide
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide val = new QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide val)
                {
                    this.DeliveryStreamDeliveryContingentPartySide = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide Get(QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryContingentPartySide val)
                {
                    return IsSetDeliveryStreamDeliveryContingentPartySide();
                }

                public bool IsSetDeliveryStreamDeliveryContingentPartySide()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryContingentPartySide);
                }
                public QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator DeliveryStreamDeliverAtSourceIndicator
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator val = new QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator val)
                {
                    this.DeliveryStreamDeliverAtSourceIndicator = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator Get(QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliverAtSourceIndicator val)
                {
                    return IsSetDeliveryStreamDeliverAtSourceIndicator();
                }

                public bool IsSetDeliveryStreamDeliverAtSourceIndicator()
                {
                    return IsSetField(Tags.DeliveryStreamDeliverAtSourceIndicator);
                }
                public QuickFix.Fields.DeliveryStreamRiskApportionment DeliveryStreamRiskApportionment
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamRiskApportionment val = new QuickFix.Fields.DeliveryStreamRiskApportionment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamRiskApportionment val)
                {
                    this.DeliveryStreamRiskApportionment = val;
                }

                public QuickFix.Fields.DeliveryStreamRiskApportionment Get(QuickFix.Fields.DeliveryStreamRiskApportionment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamRiskApportionment val)
                {
                    return IsSetDeliveryStreamRiskApportionment();
                }

                public bool IsSetDeliveryStreamRiskApportionment()
                {
                    return IsSetField(Tags.DeliveryStreamRiskApportionment);
                }
                public QuickFix.Fields.DeliveryStreamRiskApportionmentSource DeliveryStreamRiskApportionmentSource
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamRiskApportionmentSource val = new QuickFix.Fields.DeliveryStreamRiskApportionmentSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamRiskApportionmentSource val)
                {
                    this.DeliveryStreamRiskApportionmentSource = val;
                }

                public QuickFix.Fields.DeliveryStreamRiskApportionmentSource Get(QuickFix.Fields.DeliveryStreamRiskApportionmentSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamRiskApportionmentSource val)
                {
                    return IsSetDeliveryStreamRiskApportionmentSource();
                }

                public bool IsSetDeliveryStreamRiskApportionmentSource()
                {
                    return IsSetField(Tags.DeliveryStreamRiskApportionmentSource);
                }
                public QuickFix.Fields.NoDeliveryStreamCycles NoDeliveryStreamCycles
                {
                    get
                    {
                        QuickFix.Fields.NoDeliveryStreamCycles val = new QuickFix.Fields.NoDeliveryStreamCycles();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDeliveryStreamCycles val)
                {
                    this.NoDeliveryStreamCycles = val;
                }

                public QuickFix.Fields.NoDeliveryStreamCycles Get(QuickFix.Fields.NoDeliveryStreamCycles val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDeliveryStreamCycles val)
                {
                    return IsSetNoDeliveryStreamCycles();
                }

                public bool IsSetNoDeliveryStreamCycles()
                {
                    return IsSetField(Tags.NoDeliveryStreamCycles);
                }
                public QuickFix.Fields.DeliveryStreamTitleTransferLocation DeliveryStreamTitleTransferLocation
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamTitleTransferLocation val = new QuickFix.Fields.DeliveryStreamTitleTransferLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamTitleTransferLocation val)
                {
                    this.DeliveryStreamTitleTransferLocation = val;
                }

                public QuickFix.Fields.DeliveryStreamTitleTransferLocation Get(QuickFix.Fields.DeliveryStreamTitleTransferLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamTitleTransferLocation val)
                {
                    return IsSetDeliveryStreamTitleTransferLocation();
                }

                public bool IsSetDeliveryStreamTitleTransferLocation()
                {
                    return IsSetField(Tags.DeliveryStreamTitleTransferLocation);
                }
                public QuickFix.Fields.DeliveryStreamTitleTransferCondition DeliveryStreamTitleTransferCondition
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamTitleTransferCondition val = new QuickFix.Fields.DeliveryStreamTitleTransferCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamTitleTransferCondition val)
                {
                    this.DeliveryStreamTitleTransferCondition = val;
                }

                public QuickFix.Fields.DeliveryStreamTitleTransferCondition Get(QuickFix.Fields.DeliveryStreamTitleTransferCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamTitleTransferCondition val)
                {
                    return IsSetDeliveryStreamTitleTransferCondition();
                }

                public bool IsSetDeliveryStreamTitleTransferCondition()
                {
                    return IsSetField(Tags.DeliveryStreamTitleTransferCondition);
                }
                public QuickFix.Fields.DeliveryStreamImporterOfRecord DeliveryStreamImporterOfRecord
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamImporterOfRecord val = new QuickFix.Fields.DeliveryStreamImporterOfRecord();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamImporterOfRecord val)
                {
                    this.DeliveryStreamImporterOfRecord = val;
                }

                public QuickFix.Fields.DeliveryStreamImporterOfRecord Get(QuickFix.Fields.DeliveryStreamImporterOfRecord val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamImporterOfRecord val)
                {
                    return IsSetDeliveryStreamImporterOfRecord();
                }

                public bool IsSetDeliveryStreamImporterOfRecord()
                {
                    return IsSetField(Tags.DeliveryStreamImporterOfRecord);
                }
                public QuickFix.Fields.DeliveryStreamNegativeTolerance DeliveryStreamNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamNegativeTolerance val = new QuickFix.Fields.DeliveryStreamNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamNegativeTolerance val)
                {
                    this.DeliveryStreamNegativeTolerance = val;
                }

                public QuickFix.Fields.DeliveryStreamNegativeTolerance Get(QuickFix.Fields.DeliveryStreamNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamNegativeTolerance val)
                {
                    return IsSetDeliveryStreamNegativeTolerance();
                }

                public bool IsSetDeliveryStreamNegativeTolerance()
                {
                    return IsSetField(Tags.DeliveryStreamNegativeTolerance);
                }
                public QuickFix.Fields.DeliveryStreamPositiveTolerance DeliveryStreamPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamPositiveTolerance val = new QuickFix.Fields.DeliveryStreamPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamPositiveTolerance val)
                {
                    this.DeliveryStreamPositiveTolerance = val;
                }

                public QuickFix.Fields.DeliveryStreamPositiveTolerance Get(QuickFix.Fields.DeliveryStreamPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamPositiveTolerance val)
                {
                    return IsSetDeliveryStreamPositiveTolerance();
                }

                public bool IsSetDeliveryStreamPositiveTolerance()
                {
                    return IsSetField(Tags.DeliveryStreamPositiveTolerance);
                }
                public QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure DeliveryStreamToleranceUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure val = new QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure val)
                {
                    this.DeliveryStreamToleranceUnitOfMeasure = val;
                }

                public QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure Get(QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamToleranceUnitOfMeasure val)
                {
                    return IsSetDeliveryStreamToleranceUnitOfMeasure();
                }

                public bool IsSetDeliveryStreamToleranceUnitOfMeasure()
                {
                    return IsSetField(Tags.DeliveryStreamToleranceUnitOfMeasure);
                }
                public QuickFix.Fields.DeliveryStreamToleranceType DeliveryStreamToleranceType
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamToleranceType val = new QuickFix.Fields.DeliveryStreamToleranceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamToleranceType val)
                {
                    this.DeliveryStreamToleranceType = val;
                }

                public QuickFix.Fields.DeliveryStreamToleranceType Get(QuickFix.Fields.DeliveryStreamToleranceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamToleranceType val)
                {
                    return IsSetDeliveryStreamToleranceType();
                }

                public bool IsSetDeliveryStreamToleranceType()
                {
                    return IsSetField(Tags.DeliveryStreamToleranceType);
                }
                public QuickFix.Fields.DeliveryStreamToleranceOptionSide DeliveryStreamToleranceOptionSide
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamToleranceOptionSide val = new QuickFix.Fields.DeliveryStreamToleranceOptionSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamToleranceOptionSide val)
                {
                    this.DeliveryStreamToleranceOptionSide = val;
                }

                public QuickFix.Fields.DeliveryStreamToleranceOptionSide Get(QuickFix.Fields.DeliveryStreamToleranceOptionSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamToleranceOptionSide val)
                {
                    return IsSetDeliveryStreamToleranceOptionSide();
                }

                public bool IsSetDeliveryStreamToleranceOptionSide()
                {
                    return IsSetField(Tags.DeliveryStreamToleranceOptionSide);
                }
                public QuickFix.Fields.DeliveryStreamTotalPositiveTolerance DeliveryStreamTotalPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamTotalPositiveTolerance val = new QuickFix.Fields.DeliveryStreamTotalPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamTotalPositiveTolerance val)
                {
                    this.DeliveryStreamTotalPositiveTolerance = val;
                }

                public QuickFix.Fields.DeliveryStreamTotalPositiveTolerance Get(QuickFix.Fields.DeliveryStreamTotalPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamTotalPositiveTolerance val)
                {
                    return IsSetDeliveryStreamTotalPositiveTolerance();
                }

                public bool IsSetDeliveryStreamTotalPositiveTolerance()
                {
                    return IsSetField(Tags.DeliveryStreamTotalPositiveTolerance);
                }
                public QuickFix.Fields.DeliveryStreamTotalNegativeTolerance DeliveryStreamTotalNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamTotalNegativeTolerance val = new QuickFix.Fields.DeliveryStreamTotalNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamTotalNegativeTolerance val)
                {
                    this.DeliveryStreamTotalNegativeTolerance = val;
                }

                public QuickFix.Fields.DeliveryStreamTotalNegativeTolerance Get(QuickFix.Fields.DeliveryStreamTotalNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamTotalNegativeTolerance val)
                {
                    return IsSetDeliveryStreamTotalNegativeTolerance();
                }

                public bool IsSetDeliveryStreamTotalNegativeTolerance()
                {
                    return IsSetField(Tags.DeliveryStreamTotalNegativeTolerance);
                }
                public QuickFix.Fields.DeliveryStreamNotionalConversionFactor DeliveryStreamNotionalConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamNotionalConversionFactor val = new QuickFix.Fields.DeliveryStreamNotionalConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamNotionalConversionFactor val)
                {
                    this.DeliveryStreamNotionalConversionFactor = val;
                }

                public QuickFix.Fields.DeliveryStreamNotionalConversionFactor Get(QuickFix.Fields.DeliveryStreamNotionalConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamNotionalConversionFactor val)
                {
                    return IsSetDeliveryStreamNotionalConversionFactor();
                }

                public bool IsSetDeliveryStreamNotionalConversionFactor()
                {
                    return IsSetField(Tags.DeliveryStreamNotionalConversionFactor);
                }
                public QuickFix.Fields.DeliveryStreamTransportEquipment DeliveryStreamTransportEquipment
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamTransportEquipment val = new QuickFix.Fields.DeliveryStreamTransportEquipment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamTransportEquipment val)
                {
                    this.DeliveryStreamTransportEquipment = val;
                }

                public QuickFix.Fields.DeliveryStreamTransportEquipment Get(QuickFix.Fields.DeliveryStreamTransportEquipment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamTransportEquipment val)
                {
                    return IsSetDeliveryStreamTransportEquipment();
                }

                public bool IsSetDeliveryStreamTransportEquipment()
                {
                    return IsSetField(Tags.DeliveryStreamTransportEquipment);
                }
                public QuickFix.Fields.DeliveryStreamElectingPartySide DeliveryStreamElectingPartySide
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamElectingPartySide val = new QuickFix.Fields.DeliveryStreamElectingPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamElectingPartySide val)
                {
                    this.DeliveryStreamElectingPartySide = val;
                }

                public QuickFix.Fields.DeliveryStreamElectingPartySide Get(QuickFix.Fields.DeliveryStreamElectingPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamElectingPartySide val)
                {
                    return IsSetDeliveryStreamElectingPartySide();
                }

                public bool IsSetDeliveryStreamElectingPartySide()
                {
                    return IsSetField(Tags.DeliveryStreamElectingPartySide);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryPointSource DeliveryStreamDeliveryPointSource
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryPointSource val = new QuickFix.Fields.DeliveryStreamDeliveryPointSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryPointSource val)
                {
                    this.DeliveryStreamDeliveryPointSource = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryPointSource Get(QuickFix.Fields.DeliveryStreamDeliveryPointSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryPointSource val)
                {
                    return IsSetDeliveryStreamDeliveryPointSource();
                }

                public bool IsSetDeliveryStreamDeliveryPointSource()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryPointSource);
                }
                public QuickFix.Fields.DeliveryStreamDeliveryPointDesc DeliveryStreamDeliveryPointDesc
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamDeliveryPointDesc val = new QuickFix.Fields.DeliveryStreamDeliveryPointDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamDeliveryPointDesc val)
                {
                    this.DeliveryStreamDeliveryPointDesc = val;
                }

                public QuickFix.Fields.DeliveryStreamDeliveryPointDesc Get(QuickFix.Fields.DeliveryStreamDeliveryPointDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamDeliveryPointDesc val)
                {
                    return IsSetDeliveryStreamDeliveryPointDesc();
                }

                public bool IsSetDeliveryStreamDeliveryPointDesc()
                {
                    return IsSetField(Tags.DeliveryStreamDeliveryPointDesc);
                }
                public QuickFix.Fields.DeliveryStreamRouteOrCharter DeliveryStreamRouteOrCharter
                {
                    get
                    {
                        QuickFix.Fields.DeliveryStreamRouteOrCharter val = new QuickFix.Fields.DeliveryStreamRouteOrCharter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.DeliveryStreamRouteOrCharter val)
                {
                    this.DeliveryStreamRouteOrCharter = val;
                }

                public QuickFix.Fields.DeliveryStreamRouteOrCharter Get(QuickFix.Fields.DeliveryStreamRouteOrCharter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.DeliveryStreamRouteOrCharter val)
                {
                    return IsSetDeliveryStreamRouteOrCharter();
                }

                public bool IsSetDeliveryStreamRouteOrCharter()
                {
                    return IsSetField(Tags.DeliveryStreamRouteOrCharter);
                }
                public QuickFix.Fields.NoDeliverySchedules NoDeliverySchedules
                {
                    get
                    {
                        QuickFix.Fields.NoDeliverySchedules val = new QuickFix.Fields.NoDeliverySchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoDeliverySchedules val)
                {
                    this.NoDeliverySchedules = val;
                }

                public QuickFix.Fields.NoDeliverySchedules Get(QuickFix.Fields.NoDeliverySchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoDeliverySchedules val)
                {
                    return IsSetNoDeliverySchedules();
                }

                public bool IsSetNoDeliverySchedules()
                {
                    return IsSetField(Tags.NoDeliverySchedules);
                }
                public QuickFix.Fields.StreamVersion StreamVersion
                {
                    get
                    {
                        QuickFix.Fields.StreamVersion val = new QuickFix.Fields.StreamVersion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamVersion val)
                {
                    this.StreamVersion = val;
                }

                public QuickFix.Fields.StreamVersion Get(QuickFix.Fields.StreamVersion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamVersion val)
                {
                    return IsSetStreamVersion();
                }

                public bool IsSetStreamVersion()
                {
                    return IsSetField(Tags.StreamVersion);
                }
                public QuickFix.Fields.StreamVersionEffectiveDate StreamVersionEffectiveDate
                {
                    get
                    {
                        QuickFix.Fields.StreamVersionEffectiveDate val = new QuickFix.Fields.StreamVersionEffectiveDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamVersionEffectiveDate val)
                {
                    this.StreamVersionEffectiveDate = val;
                }

                public QuickFix.Fields.StreamVersionEffectiveDate Get(QuickFix.Fields.StreamVersionEffectiveDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamVersionEffectiveDate val)
                {
                    return IsSetStreamVersionEffectiveDate();
                }

                public bool IsSetStreamVersionEffectiveDate()
                {
                    return IsSetField(Tags.StreamVersionEffectiveDate);
                }
                public QuickFix.Fields.StreamNotionalDeterminationMethod StreamNotionalDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalDeterminationMethod val = new QuickFix.Fields.StreamNotionalDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalDeterminationMethod val)
                {
                    this.StreamNotionalDeterminationMethod = val;
                }

                public QuickFix.Fields.StreamNotionalDeterminationMethod Get(QuickFix.Fields.StreamNotionalDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalDeterminationMethod val)
                {
                    return IsSetStreamNotionalDeterminationMethod();
                }

                public bool IsSetStreamNotionalDeterminationMethod()
                {
                    return IsSetField(Tags.StreamNotionalDeterminationMethod);
                }
                public QuickFix.Fields.StreamNotionalAdjustments StreamNotionalAdjustments
                {
                    get
                    {
                        QuickFix.Fields.StreamNotionalAdjustments val = new QuickFix.Fields.StreamNotionalAdjustments();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.StreamNotionalAdjustments val)
                {
                    this.StreamNotionalAdjustments = val;
                }

                public QuickFix.Fields.StreamNotionalAdjustments Get(QuickFix.Fields.StreamNotionalAdjustments val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.StreamNotionalAdjustments val)
                {
                    return IsSetStreamNotionalAdjustments();
                }

                public bool IsSetStreamNotionalAdjustments()
                {
                    return IsSetField(Tags.StreamNotionalAdjustments);
                }
                public class NoStreamEffectiveBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamEffectiveDateBusinessCenter, 0 };

                    public NoStreamEffectiveBusinessCentersGroup()
                      : base(Tags.NoStreamEffectiveBusinessCenters, Tags.StreamEffectiveDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamEffectiveBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamEffectiveDateBusinessCenter StreamEffectiveDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.StreamEffectiveDateBusinessCenter val = new QuickFix.Fields.StreamEffectiveDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamEffectiveDateBusinessCenter val)
                    {
                        this.StreamEffectiveDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.StreamEffectiveDateBusinessCenter Get(QuickFix.Fields.StreamEffectiveDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamEffectiveDateBusinessCenter val)
                    {
                        return IsSetStreamEffectiveDateBusinessCenter();
                    }

                    public bool IsSetStreamEffectiveDateBusinessCenter()
                    {
                        return IsSetField(Tags.StreamEffectiveDateBusinessCenter);
                    }

                }
                public class NoStreamTerminationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamTerminationDateBusinessCenter, 0 };

                    public NoStreamTerminationDateBusinessCentersGroup()
                      : base(Tags.NoStreamTerminationDateBusinessCenters, Tags.StreamTerminationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamTerminationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamTerminationDateBusinessCenter StreamTerminationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.StreamTerminationDateBusinessCenter val = new QuickFix.Fields.StreamTerminationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamTerminationDateBusinessCenter val)
                    {
                        this.StreamTerminationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.StreamTerminationDateBusinessCenter Get(QuickFix.Fields.StreamTerminationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamTerminationDateBusinessCenter val)
                    {
                        return IsSetStreamTerminationDateBusinessCenter();
                    }

                    public bool IsSetStreamTerminationDateBusinessCenter()
                    {
                        return IsSetField(Tags.StreamTerminationDateBusinessCenter);
                    }

                }
                public class NoStreamCalculationPeriodBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCalculationPeriodBusinessCenter, 0 };

                    public NoStreamCalculationPeriodBusinessCentersGroup()
                      : base(Tags.NoStreamCalculationPeriodBusinessCenters, Tags.StreamCalculationPeriodBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCalculationPeriodBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCalculationPeriodBusinessCenter StreamCalculationPeriodBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.StreamCalculationPeriodBusinessCenter val = new QuickFix.Fields.StreamCalculationPeriodBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCalculationPeriodBusinessCenter val)
                    {
                        this.StreamCalculationPeriodBusinessCenter = val;
                    }

                    public QuickFix.Fields.StreamCalculationPeriodBusinessCenter Get(QuickFix.Fields.StreamCalculationPeriodBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCalculationPeriodBusinessCenter val)
                    {
                        return IsSetStreamCalculationPeriodBusinessCenter();
                    }

                    public bool IsSetStreamCalculationPeriodBusinessCenter()
                    {
                        return IsSetField(Tags.StreamCalculationPeriodBusinessCenter);
                    }

                }
                public class NoStreamFirstPeriodStartDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamFirstPeriodStartDateBusinessCenter, 0 };

                    public NoStreamFirstPeriodStartDateBusinessCentersGroup()
                      : base(Tags.NoStreamFirstPeriodStartDateBusinessCenters, Tags.StreamFirstPeriodStartDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamFirstPeriodStartDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter StreamFirstPeriodStartDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter val = new QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter val)
                    {
                        this.StreamFirstPeriodStartDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter Get(QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamFirstPeriodStartDateBusinessCenter val)
                    {
                        return IsSetStreamFirstPeriodStartDateBusinessCenter();
                    }

                    public bool IsSetStreamFirstPeriodStartDateBusinessCenter()
                    {
                        return IsSetField(Tags.StreamFirstPeriodStartDateBusinessCenter);
                    }

                }
                public class NoStreamCalculationPeriodDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCalculationPeriodDate, Tags.StreamCalculationPeriodDateType, 0 };

                    public NoStreamCalculationPeriodDatesGroup()
                      : base(Tags.NoStreamCalculationPeriodDates, Tags.StreamCalculationPeriodDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCalculationPeriodDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCalculationPeriodDate StreamCalculationPeriodDate
                    {
                        get
                        {
                            QuickFix.Fields.StreamCalculationPeriodDate val = new QuickFix.Fields.StreamCalculationPeriodDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCalculationPeriodDate val)
                    {
                        this.StreamCalculationPeriodDate = val;
                    }

                    public QuickFix.Fields.StreamCalculationPeriodDate Get(QuickFix.Fields.StreamCalculationPeriodDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCalculationPeriodDate val)
                    {
                        return IsSetStreamCalculationPeriodDate();
                    }

                    public bool IsSetStreamCalculationPeriodDate()
                    {
                        return IsSetField(Tags.StreamCalculationPeriodDate);
                    }
                    public QuickFix.Fields.StreamCalculationPeriodDateType StreamCalculationPeriodDateType
                    {
                        get
                        {
                            QuickFix.Fields.StreamCalculationPeriodDateType val = new QuickFix.Fields.StreamCalculationPeriodDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCalculationPeriodDateType val)
                    {
                        this.StreamCalculationPeriodDateType = val;
                    }

                    public QuickFix.Fields.StreamCalculationPeriodDateType Get(QuickFix.Fields.StreamCalculationPeriodDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCalculationPeriodDateType val)
                    {
                        return IsSetStreamCalculationPeriodDateType();
                    }

                    public bool IsSetStreamCalculationPeriodDateType()
                    {
                        return IsSetField(Tags.StreamCalculationPeriodDateType);
                    }

                }
                public class NoPaymentStreamPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamPaymentDateBusinessCenter, 0 };

                    public NoPaymentStreamPaymentDateBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamPaymentDateBusinessCenters, Tags.PaymentStreamPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter PaymentStreamPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter val = new QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter val)
                    {
                        this.PaymentStreamPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter Get(QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateBusinessCenter val)
                    {
                        return IsSetPaymentStreamPaymentDateBusinessCenter();
                    }

                    public bool IsSetPaymentStreamPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamPaymentDateBusinessCenter);
                    }

                }
                public class NoPaymentStreamPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamPaymentDate, Tags.PaymentStreamPaymentDateType, 0 };

                    public NoPaymentStreamPaymentDatesGroup()
                      : base(Tags.NoPaymentStreamPaymentDates, Tags.PaymentStreamPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamPaymentDate PaymentStreamPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPaymentDate val = new QuickFix.Fields.PaymentStreamPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPaymentDate val)
                    {
                        this.PaymentStreamPaymentDate = val;
                    }

                    public QuickFix.Fields.PaymentStreamPaymentDate Get(QuickFix.Fields.PaymentStreamPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDate val)
                    {
                        return IsSetPaymentStreamPaymentDate();
                    }

                    public bool IsSetPaymentStreamPaymentDate()
                    {
                        return IsSetField(Tags.PaymentStreamPaymentDate);
                    }
                    public QuickFix.Fields.PaymentStreamPaymentDateType PaymentStreamPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPaymentDateType val = new QuickFix.Fields.PaymentStreamPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPaymentDateType val)
                    {
                        this.PaymentStreamPaymentDateType = val;
                    }

                    public QuickFix.Fields.PaymentStreamPaymentDateType Get(QuickFix.Fields.PaymentStreamPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPaymentDateType val)
                    {
                        return IsSetPaymentStreamPaymentDateType();
                    }

                    public bool IsSetPaymentStreamPaymentDateType()
                    {
                        return IsSetField(Tags.PaymentStreamPaymentDateType);
                    }

                }
                public class NoPaymentStreamResetDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamResetDateBusinessCenter, 0 };

                    public NoPaymentStreamResetDateBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamResetDateBusinessCenters, Tags.PaymentStreamResetDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamResetDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamResetDateBusinessCenter PaymentStreamResetDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamResetDateBusinessCenter val = new QuickFix.Fields.PaymentStreamResetDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamResetDateBusinessCenter val)
                    {
                        this.PaymentStreamResetDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamResetDateBusinessCenter Get(QuickFix.Fields.PaymentStreamResetDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamResetDateBusinessCenter val)
                    {
                        return IsSetPaymentStreamResetDateBusinessCenter();
                    }

                    public bool IsSetPaymentStreamResetDateBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamResetDateBusinessCenter);
                    }

                }
                public class NoPaymentStreamInitialFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamInitialFixingDateBusinessCenter, 0 };

                    public NoPaymentStreamInitialFixingDateBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamInitialFixingDateBusinessCenters, Tags.PaymentStreamInitialFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamInitialFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter PaymentStreamInitialFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter val = new QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        this.PaymentStreamInitialFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter Get(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        return IsSetPaymentStreamInitialFixingDateBusinessCenter();
                    }

                    public bool IsSetPaymentStreamInitialFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamInitialFixingDateBusinessCenter);
                    }

                }
                public class NoPaymentStreamFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamFixingDateBusinessCenter, 0 };

                    public NoPaymentStreamFixingDateBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamFixingDateBusinessCenters, Tags.PaymentStreamFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamFixingDateBusinessCenter PaymentStreamFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFixingDateBusinessCenter val = new QuickFix.Fields.PaymentStreamFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFixingDateBusinessCenter val)
                    {
                        this.PaymentStreamFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamFixingDateBusinessCenter Get(QuickFix.Fields.PaymentStreamFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateBusinessCenter val)
                    {
                        return IsSetPaymentStreamFixingDateBusinessCenter();
                    }

                    public bool IsSetPaymentStreamFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamFixingDateBusinessCenter);
                    }

                }
                public class NoPaymentStreamFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamFixingDate, Tags.PaymentStreamFixingDateType, 0 };

                    public NoPaymentStreamFixingDatesGroup()
                      : base(Tags.NoPaymentStreamFixingDates, Tags.PaymentStreamFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamFixingDate PaymentStreamFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFixingDate val = new QuickFix.Fields.PaymentStreamFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFixingDate val)
                    {
                        this.PaymentStreamFixingDate = val;
                    }

                    public QuickFix.Fields.PaymentStreamFixingDate Get(QuickFix.Fields.PaymentStreamFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFixingDate val)
                    {
                        return IsSetPaymentStreamFixingDate();
                    }

                    public bool IsSetPaymentStreamFixingDate()
                    {
                        return IsSetField(Tags.PaymentStreamFixingDate);
                    }
                    public QuickFix.Fields.PaymentStreamFixingDateType PaymentStreamFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFixingDateType val = new QuickFix.Fields.PaymentStreamFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFixingDateType val)
                    {
                        this.PaymentStreamFixingDateType = val;
                    }

                    public QuickFix.Fields.PaymentStreamFixingDateType Get(QuickFix.Fields.PaymentStreamFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFixingDateType val)
                    {
                        return IsSetPaymentStreamFixingDateType();
                    }

                    public bool IsSetPaymentStreamFixingDateType()
                    {
                        return IsSetField(Tags.PaymentStreamFixingDateType);
                    }

                }
                public class NoPaymentStreamPricingBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamPricingBusinessCenter, 0 };

                    public NoPaymentStreamPricingBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamPricingBusinessCenters, Tags.PaymentStreamPricingBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamPricingBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamPricingBusinessCenter PaymentStreamPricingBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPricingBusinessCenter val = new QuickFix.Fields.PaymentStreamPricingBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPricingBusinessCenter val)
                    {
                        this.PaymentStreamPricingBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamPricingBusinessCenter Get(QuickFix.Fields.PaymentStreamPricingBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPricingBusinessCenter val)
                    {
                        return IsSetPaymentStreamPricingBusinessCenter();
                    }

                    public bool IsSetPaymentStreamPricingBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamPricingBusinessCenter);
                    }

                }
                public class NoPaymentStreamPricingDaysGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamPricingDayOfWeek, Tags.PaymentStreamPricingDayNumber, 0 };

                    public NoPaymentStreamPricingDaysGroup()
                      : base(Tags.NoPaymentStreamPricingDays, Tags.PaymentStreamPricingDayOfWeek, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamPricingDaysGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDayOfWeek PaymentStreamPricingDayOfWeek
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPricingDayOfWeek val = new QuickFix.Fields.PaymentStreamPricingDayOfWeek();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPricingDayOfWeek val)
                    {
                        this.PaymentStreamPricingDayOfWeek = val;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDayOfWeek Get(QuickFix.Fields.PaymentStreamPricingDayOfWeek val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPricingDayOfWeek val)
                    {
                        return IsSetPaymentStreamPricingDayOfWeek();
                    }

                    public bool IsSetPaymentStreamPricingDayOfWeek()
                    {
                        return IsSetField(Tags.PaymentStreamPricingDayOfWeek);
                    }
                    public QuickFix.Fields.PaymentStreamPricingDayNumber PaymentStreamPricingDayNumber
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPricingDayNumber val = new QuickFix.Fields.PaymentStreamPricingDayNumber();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPricingDayNumber val)
                    {
                        this.PaymentStreamPricingDayNumber = val;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDayNumber Get(QuickFix.Fields.PaymentStreamPricingDayNumber val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPricingDayNumber val)
                    {
                        return IsSetPaymentStreamPricingDayNumber();
                    }

                    public bool IsSetPaymentStreamPricingDayNumber()
                    {
                        return IsSetField(Tags.PaymentStreamPricingDayNumber);
                    }

                }
                public class NoPaymentStreamPricingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamPricingDate, Tags.PaymentStreamPricingDateType, 0 };

                    public NoPaymentStreamPricingDatesGroup()
                      : base(Tags.NoPaymentStreamPricingDates, Tags.PaymentStreamPricingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamPricingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDate PaymentStreamPricingDate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPricingDate val = new QuickFix.Fields.PaymentStreamPricingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPricingDate val)
                    {
                        this.PaymentStreamPricingDate = val;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDate Get(QuickFix.Fields.PaymentStreamPricingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPricingDate val)
                    {
                        return IsSetPaymentStreamPricingDate();
                    }

                    public bool IsSetPaymentStreamPricingDate()
                    {
                        return IsSetField(Tags.PaymentStreamPricingDate);
                    }
                    public QuickFix.Fields.PaymentStreamPricingDateType PaymentStreamPricingDateType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamPricingDateType val = new QuickFix.Fields.PaymentStreamPricingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamPricingDateType val)
                    {
                        this.PaymentStreamPricingDateType = val;
                    }

                    public QuickFix.Fields.PaymentStreamPricingDateType Get(QuickFix.Fields.PaymentStreamPricingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamPricingDateType val)
                    {
                        return IsSetPaymentStreamPricingDateType();
                    }

                    public bool IsSetPaymentStreamPricingDateType()
                    {
                        return IsSetField(Tags.PaymentStreamPricingDateType);
                    }

                }
                public class NoPaymentStreamFormulasGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamFormula, Tags.PaymentStreamFormulaDesc, Tags.PaymentStreamFormulaLength, 0 };

                    public NoPaymentStreamFormulasGroup()
                      : base(Tags.NoPaymentStreamFormulas, Tags.PaymentStreamFormula, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamFormulasGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamFormula PaymentStreamFormula
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFormula val = new QuickFix.Fields.PaymentStreamFormula();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFormula val)
                    {
                        this.PaymentStreamFormula = val;
                    }

                    public QuickFix.Fields.PaymentStreamFormula Get(QuickFix.Fields.PaymentStreamFormula val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFormula val)
                    {
                        return IsSetPaymentStreamFormula();
                    }

                    public bool IsSetPaymentStreamFormula()
                    {
                        return IsSetField(Tags.PaymentStreamFormula);
                    }
                    public QuickFix.Fields.PaymentStreamFormulaDesc PaymentStreamFormulaDesc
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFormulaDesc val = new QuickFix.Fields.PaymentStreamFormulaDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFormulaDesc val)
                    {
                        this.PaymentStreamFormulaDesc = val;
                    }

                    public QuickFix.Fields.PaymentStreamFormulaDesc Get(QuickFix.Fields.PaymentStreamFormulaDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFormulaDesc val)
                    {
                        return IsSetPaymentStreamFormulaDesc();
                    }

                    public bool IsSetPaymentStreamFormulaDesc()
                    {
                        return IsSetField(Tags.PaymentStreamFormulaDesc);
                    }
                    public QuickFix.Fields.PaymentStreamFormulaLength PaymentStreamFormulaLength
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamFormulaLength val = new QuickFix.Fields.PaymentStreamFormulaLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamFormulaLength val)
                    {
                        this.PaymentStreamFormulaLength = val;
                    }

                    public QuickFix.Fields.PaymentStreamFormulaLength Get(QuickFix.Fields.PaymentStreamFormulaLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamFormulaLength val)
                    {
                        return IsSetPaymentStreamFormulaLength();
                    }

                    public bool IsSetPaymentStreamFormulaLength()
                    {
                        return IsSetField(Tags.PaymentStreamFormulaLength);
                    }

                }
                public class NoDividendPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DividendPeriodSequence, Tags.DividendPeriodStartDateUnadjusted, Tags.DividendPeriodEndDateUnadjusted, Tags.DividendPeriodUnderlierRefID, Tags.DividendPeriodStrikePrice, Tags.DividendPeriodBusinessDayConvention, Tags.NoDividendPeriodBusinessCenters, Tags.DividendPeriodValuationDateUnadjusted, Tags.DividendPeriodValuationDateRelativeTo, Tags.DividendPeriodValuationDateOffsetPeriod, Tags.DividendPeriodValuationDateOffsetUnit, Tags.DividendPeriodValuationDateOffsetDayType, Tags.DividendPeriodValuationDateAdjusted, Tags.DividendPeriodPaymentDateUnadjusted, Tags.DividendPeriodPaymentDateRelativeTo, Tags.DividendPeriodPaymentDateOffsetPeriod, Tags.DividendPeriodPaymentDateOffsetUnit, Tags.DividendPeriodPaymentDateOffsetDayType, Tags.DividendPeriodPaymentDateAdjusted, Tags.DividendPeriodXID, 0 };

                    public NoDividendPeriodsGroup()
                      : base(Tags.NoDividendPeriods, Tags.DividendPeriodSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDividendPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DividendPeriodSequence DividendPeriodSequence
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodSequence val = new QuickFix.Fields.DividendPeriodSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodSequence val)
                    {
                        this.DividendPeriodSequence = val;
                    }

                    public QuickFix.Fields.DividendPeriodSequence Get(QuickFix.Fields.DividendPeriodSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodSequence val)
                    {
                        return IsSetDividendPeriodSequence();
                    }

                    public bool IsSetDividendPeriodSequence()
                    {
                        return IsSetField(Tags.DividendPeriodSequence);
                    }
                    public QuickFix.Fields.DividendPeriodStartDateUnadjusted DividendPeriodStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodStartDateUnadjusted val = new QuickFix.Fields.DividendPeriodStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodStartDateUnadjusted val)
                    {
                        this.DividendPeriodStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodStartDateUnadjusted Get(QuickFix.Fields.DividendPeriodStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodStartDateUnadjusted val)
                    {
                        return IsSetDividendPeriodStartDateUnadjusted();
                    }

                    public bool IsSetDividendPeriodStartDateUnadjusted()
                    {
                        return IsSetField(Tags.DividendPeriodStartDateUnadjusted);
                    }
                    public QuickFix.Fields.DividendPeriodEndDateUnadjusted DividendPeriodEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodEndDateUnadjusted val = new QuickFix.Fields.DividendPeriodEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodEndDateUnadjusted val)
                    {
                        this.DividendPeriodEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodEndDateUnadjusted Get(QuickFix.Fields.DividendPeriodEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodEndDateUnadjusted val)
                    {
                        return IsSetDividendPeriodEndDateUnadjusted();
                    }

                    public bool IsSetDividendPeriodEndDateUnadjusted()
                    {
                        return IsSetField(Tags.DividendPeriodEndDateUnadjusted);
                    }
                    public QuickFix.Fields.DividendPeriodUnderlierRefID DividendPeriodUnderlierRefID
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodUnderlierRefID val = new QuickFix.Fields.DividendPeriodUnderlierRefID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodUnderlierRefID val)
                    {
                        this.DividendPeriodUnderlierRefID = val;
                    }

                    public QuickFix.Fields.DividendPeriodUnderlierRefID Get(QuickFix.Fields.DividendPeriodUnderlierRefID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodUnderlierRefID val)
                    {
                        return IsSetDividendPeriodUnderlierRefID();
                    }

                    public bool IsSetDividendPeriodUnderlierRefID()
                    {
                        return IsSetField(Tags.DividendPeriodUnderlierRefID);
                    }
                    public QuickFix.Fields.DividendPeriodStrikePrice DividendPeriodStrikePrice
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodStrikePrice val = new QuickFix.Fields.DividendPeriodStrikePrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodStrikePrice val)
                    {
                        this.DividendPeriodStrikePrice = val;
                    }

                    public QuickFix.Fields.DividendPeriodStrikePrice Get(QuickFix.Fields.DividendPeriodStrikePrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodStrikePrice val)
                    {
                        return IsSetDividendPeriodStrikePrice();
                    }

                    public bool IsSetDividendPeriodStrikePrice()
                    {
                        return IsSetField(Tags.DividendPeriodStrikePrice);
                    }
                    public QuickFix.Fields.DividendPeriodBusinessDayConvention DividendPeriodBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodBusinessDayConvention val = new QuickFix.Fields.DividendPeriodBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodBusinessDayConvention val)
                    {
                        this.DividendPeriodBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.DividendPeriodBusinessDayConvention Get(QuickFix.Fields.DividendPeriodBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodBusinessDayConvention val)
                    {
                        return IsSetDividendPeriodBusinessDayConvention();
                    }

                    public bool IsSetDividendPeriodBusinessDayConvention()
                    {
                        return IsSetField(Tags.DividendPeriodBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoDividendPeriodBusinessCenters NoDividendPeriodBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoDividendPeriodBusinessCenters val = new QuickFix.Fields.NoDividendPeriodBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoDividendPeriodBusinessCenters val)
                    {
                        this.NoDividendPeriodBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoDividendPeriodBusinessCenters Get(QuickFix.Fields.NoDividendPeriodBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoDividendPeriodBusinessCenters val)
                    {
                        return IsSetNoDividendPeriodBusinessCenters();
                    }

                    public bool IsSetNoDividendPeriodBusinessCenters()
                    {
                        return IsSetField(Tags.NoDividendPeriodBusinessCenters);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateUnadjusted DividendPeriodValuationDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateUnadjusted val = new QuickFix.Fields.DividendPeriodValuationDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateUnadjusted val)
                    {
                        this.DividendPeriodValuationDateUnadjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateUnadjusted Get(QuickFix.Fields.DividendPeriodValuationDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateUnadjusted val)
                    {
                        return IsSetDividendPeriodValuationDateUnadjusted();
                    }

                    public bool IsSetDividendPeriodValuationDateUnadjusted()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateUnadjusted);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateRelativeTo DividendPeriodValuationDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateRelativeTo val = new QuickFix.Fields.DividendPeriodValuationDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateRelativeTo val)
                    {
                        this.DividendPeriodValuationDateRelativeTo = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateRelativeTo Get(QuickFix.Fields.DividendPeriodValuationDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateRelativeTo val)
                    {
                        return IsSetDividendPeriodValuationDateRelativeTo();
                    }

                    public bool IsSetDividendPeriodValuationDateRelativeTo()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateRelativeTo);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod DividendPeriodValuationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod val = new QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod val)
                    {
                        this.DividendPeriodValuationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod Get(QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateOffsetPeriod val)
                    {
                        return IsSetDividendPeriodValuationDateOffsetPeriod();
                    }

                    public bool IsSetDividendPeriodValuationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateOffsetUnit DividendPeriodValuationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateOffsetUnit val = new QuickFix.Fields.DividendPeriodValuationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateOffsetUnit val)
                    {
                        this.DividendPeriodValuationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateOffsetUnit Get(QuickFix.Fields.DividendPeriodValuationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateOffsetUnit val)
                    {
                        return IsSetDividendPeriodValuationDateOffsetUnit();
                    }

                    public bool IsSetDividendPeriodValuationDateOffsetUnit()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateOffsetUnit);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateOffsetDayType DividendPeriodValuationDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateOffsetDayType val = new QuickFix.Fields.DividendPeriodValuationDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateOffsetDayType val)
                    {
                        this.DividendPeriodValuationDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateOffsetDayType Get(QuickFix.Fields.DividendPeriodValuationDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateOffsetDayType val)
                    {
                        return IsSetDividendPeriodValuationDateOffsetDayType();
                    }

                    public bool IsSetDividendPeriodValuationDateOffsetDayType()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateOffsetDayType);
                    }
                    public QuickFix.Fields.DividendPeriodValuationDateAdjusted DividendPeriodValuationDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodValuationDateAdjusted val = new QuickFix.Fields.DividendPeriodValuationDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodValuationDateAdjusted val)
                    {
                        this.DividendPeriodValuationDateAdjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodValuationDateAdjusted Get(QuickFix.Fields.DividendPeriodValuationDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodValuationDateAdjusted val)
                    {
                        return IsSetDividendPeriodValuationDateAdjusted();
                    }

                    public bool IsSetDividendPeriodValuationDateAdjusted()
                    {
                        return IsSetField(Tags.DividendPeriodValuationDateAdjusted);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateUnadjusted DividendPeriodPaymentDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateUnadjusted val = new QuickFix.Fields.DividendPeriodPaymentDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateUnadjusted val)
                    {
                        this.DividendPeriodPaymentDateUnadjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateUnadjusted Get(QuickFix.Fields.DividendPeriodPaymentDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateUnadjusted val)
                    {
                        return IsSetDividendPeriodPaymentDateUnadjusted();
                    }

                    public bool IsSetDividendPeriodPaymentDateUnadjusted()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateUnadjusted);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateRelativeTo DividendPeriodPaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateRelativeTo val = new QuickFix.Fields.DividendPeriodPaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateRelativeTo val)
                    {
                        this.DividendPeriodPaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateRelativeTo Get(QuickFix.Fields.DividendPeriodPaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateRelativeTo val)
                    {
                        return IsSetDividendPeriodPaymentDateRelativeTo();
                    }

                    public bool IsSetDividendPeriodPaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod DividendPeriodPaymentDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod val = new QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod val)
                    {
                        this.DividendPeriodPaymentDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod Get(QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateOffsetPeriod val)
                    {
                        return IsSetDividendPeriodPaymentDateOffsetPeriod();
                    }

                    public bool IsSetDividendPeriodPaymentDateOffsetPeriod()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateOffsetPeriod);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit DividendPeriodPaymentDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit val = new QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit val)
                    {
                        this.DividendPeriodPaymentDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit Get(QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateOffsetUnit val)
                    {
                        return IsSetDividendPeriodPaymentDateOffsetUnit();
                    }

                    public bool IsSetDividendPeriodPaymentDateOffsetUnit()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateOffsetUnit);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType DividendPeriodPaymentDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType val = new QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType val)
                    {
                        this.DividendPeriodPaymentDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType Get(QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateOffsetDayType val)
                    {
                        return IsSetDividendPeriodPaymentDateOffsetDayType();
                    }

                    public bool IsSetDividendPeriodPaymentDateOffsetDayType()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateOffsetDayType);
                    }
                    public QuickFix.Fields.DividendPeriodPaymentDateAdjusted DividendPeriodPaymentDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodPaymentDateAdjusted val = new QuickFix.Fields.DividendPeriodPaymentDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodPaymentDateAdjusted val)
                    {
                        this.DividendPeriodPaymentDateAdjusted = val;
                    }

                    public QuickFix.Fields.DividendPeriodPaymentDateAdjusted Get(QuickFix.Fields.DividendPeriodPaymentDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodPaymentDateAdjusted val)
                    {
                        return IsSetDividendPeriodPaymentDateAdjusted();
                    }

                    public bool IsSetDividendPeriodPaymentDateAdjusted()
                    {
                        return IsSetField(Tags.DividendPeriodPaymentDateAdjusted);
                    }
                    public QuickFix.Fields.DividendPeriodXID DividendPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.DividendPeriodXID val = new QuickFix.Fields.DividendPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendPeriodXID val)
                    {
                        this.DividendPeriodXID = val;
                    }

                    public QuickFix.Fields.DividendPeriodXID Get(QuickFix.Fields.DividendPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendPeriodXID val)
                    {
                        return IsSetDividendPeriodXID();
                    }

                    public bool IsSetDividendPeriodXID()
                    {
                        return IsSetField(Tags.DividendPeriodXID);
                    }
                    public class NoDividendPeriodBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.DividendPeriodBusinessCenter, 0 };

                        public NoDividendPeriodBusinessCentersGroup()
                          : base(Tags.NoDividendPeriodBusinessCenters, Tags.DividendPeriodBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoDividendPeriodBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.DividendPeriodBusinessCenter DividendPeriodBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.DividendPeriodBusinessCenter val = new QuickFix.Fields.DividendPeriodBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.DividendPeriodBusinessCenter val)
                        {
                            this.DividendPeriodBusinessCenter = val;
                        }

                        public QuickFix.Fields.DividendPeriodBusinessCenter Get(QuickFix.Fields.DividendPeriodBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.DividendPeriodBusinessCenter val)
                        {
                            return IsSetDividendPeriodBusinessCenter();
                        }

                        public bool IsSetDividendPeriodBusinessCenter()
                        {
                            return IsSetField(Tags.DividendPeriodBusinessCenter);
                        }

                    }
                }
                public class NoDividendFXTriggerDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DividendFXTriggerDateBusinessCenter, 0 };

                    public NoDividendFXTriggerDateBusinessCentersGroup()
                      : base(Tags.NoDividendFXTriggerDateBusinessCenters, Tags.DividendFXTriggerDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDividendFXTriggerDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DividendFXTriggerDateBusinessCenter DividendFXTriggerDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.DividendFXTriggerDateBusinessCenter val = new QuickFix.Fields.DividendFXTriggerDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendFXTriggerDateBusinessCenter val)
                    {
                        this.DividendFXTriggerDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.DividendFXTriggerDateBusinessCenter Get(QuickFix.Fields.DividendFXTriggerDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendFXTriggerDateBusinessCenter val)
                    {
                        return IsSetDividendFXTriggerDateBusinessCenter();
                    }

                    public bool IsSetDividendFXTriggerDateBusinessCenter()
                    {
                        return IsSetField(Tags.DividendFXTriggerDateBusinessCenter);
                    }

                }
                public class NoDividendAccrualPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DividendAccrualPaymentDateBusinessCenter, 0 };

                    public NoDividendAccrualPaymentDateBusinessCentersGroup()
                      : base(Tags.NoDividendAccrualPaymentDateBusinessCenters, Tags.DividendAccrualPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDividendAccrualPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter DividendAccrualPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter val = new QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter val)
                    {
                        this.DividendAccrualPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter Get(QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DividendAccrualPaymentDateBusinessCenter val)
                    {
                        return IsSetDividendAccrualPaymentDateBusinessCenter();
                    }

                    public bool IsSetDividendAccrualPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.DividendAccrualPaymentDateBusinessCenter);
                    }

                }
                public class NoReturnRatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ReturnRatePriceSequence, Tags.ReturnRateCommissionBasis, Tags.ReturnRateCommissionAmount, Tags.ReturnRateCommissionCurrency, Tags.ReturnRateTotalCommissionPerTrade, Tags.ReturnRateDeterminationMethod, Tags.NoReturnRatePrices, Tags.NoReturnRateFXConversions, Tags.ReturnRateAmountRelativeTo, Tags.ReturnRateQuoteMeasureType, Tags.ReturnRateQuoteUnits, Tags.ReturnRateQuoteMethod, Tags.ReturnRateQuoteCurrency, Tags.ReturnRateQuoteCurrencyType, Tags.ReturnRateQuoteTimeType, Tags.ReturnRateQuoteTime, Tags.ReturnRateQuoteDate, Tags.ReturnRateQuoteExpirationTime, Tags.ReturnRateQuoteBusinessCenter, Tags.ReturnRateQuoteExchange, Tags.NoReturnRateInformationSources, Tags.ReturnRateQuotePricingModel, Tags.ReturnRateCashFlowType, Tags.NoReturnRateDates, Tags.ReturnRateValuationTimeType, Tags.ReturnRateValuationTime, Tags.ReturnRateValuationTimeBusinessCenter, Tags.ReturnRateValuationPriceOption, Tags.ReturnRateFinalPriceFallback, 0 };

                    public NoReturnRatesGroup()
                      : base(Tags.NoReturnRates, Tags.ReturnRatePriceSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoReturnRatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ReturnRatePriceSequence ReturnRatePriceSequence
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRatePriceSequence val = new QuickFix.Fields.ReturnRatePriceSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRatePriceSequence val)
                    {
                        this.ReturnRatePriceSequence = val;
                    }

                    public QuickFix.Fields.ReturnRatePriceSequence Get(QuickFix.Fields.ReturnRatePriceSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRatePriceSequence val)
                    {
                        return IsSetReturnRatePriceSequence();
                    }

                    public bool IsSetReturnRatePriceSequence()
                    {
                        return IsSetField(Tags.ReturnRatePriceSequence);
                    }
                    public QuickFix.Fields.ReturnRateCommissionBasis ReturnRateCommissionBasis
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateCommissionBasis val = new QuickFix.Fields.ReturnRateCommissionBasis();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateCommissionBasis val)
                    {
                        this.ReturnRateCommissionBasis = val;
                    }

                    public QuickFix.Fields.ReturnRateCommissionBasis Get(QuickFix.Fields.ReturnRateCommissionBasis val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateCommissionBasis val)
                    {
                        return IsSetReturnRateCommissionBasis();
                    }

                    public bool IsSetReturnRateCommissionBasis()
                    {
                        return IsSetField(Tags.ReturnRateCommissionBasis);
                    }
                    public QuickFix.Fields.ReturnRateCommissionAmount ReturnRateCommissionAmount
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateCommissionAmount val = new QuickFix.Fields.ReturnRateCommissionAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateCommissionAmount val)
                    {
                        this.ReturnRateCommissionAmount = val;
                    }

                    public QuickFix.Fields.ReturnRateCommissionAmount Get(QuickFix.Fields.ReturnRateCommissionAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateCommissionAmount val)
                    {
                        return IsSetReturnRateCommissionAmount();
                    }

                    public bool IsSetReturnRateCommissionAmount()
                    {
                        return IsSetField(Tags.ReturnRateCommissionAmount);
                    }
                    public QuickFix.Fields.ReturnRateCommissionCurrency ReturnRateCommissionCurrency
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateCommissionCurrency val = new QuickFix.Fields.ReturnRateCommissionCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateCommissionCurrency val)
                    {
                        this.ReturnRateCommissionCurrency = val;
                    }

                    public QuickFix.Fields.ReturnRateCommissionCurrency Get(QuickFix.Fields.ReturnRateCommissionCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateCommissionCurrency val)
                    {
                        return IsSetReturnRateCommissionCurrency();
                    }

                    public bool IsSetReturnRateCommissionCurrency()
                    {
                        return IsSetField(Tags.ReturnRateCommissionCurrency);
                    }
                    public QuickFix.Fields.ReturnRateTotalCommissionPerTrade ReturnRateTotalCommissionPerTrade
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateTotalCommissionPerTrade val = new QuickFix.Fields.ReturnRateTotalCommissionPerTrade();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateTotalCommissionPerTrade val)
                    {
                        this.ReturnRateTotalCommissionPerTrade = val;
                    }

                    public QuickFix.Fields.ReturnRateTotalCommissionPerTrade Get(QuickFix.Fields.ReturnRateTotalCommissionPerTrade val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateTotalCommissionPerTrade val)
                    {
                        return IsSetReturnRateTotalCommissionPerTrade();
                    }

                    public bool IsSetReturnRateTotalCommissionPerTrade()
                    {
                        return IsSetField(Tags.ReturnRateTotalCommissionPerTrade);
                    }
                    public QuickFix.Fields.ReturnRateDeterminationMethod ReturnRateDeterminationMethod
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateDeterminationMethod val = new QuickFix.Fields.ReturnRateDeterminationMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateDeterminationMethod val)
                    {
                        this.ReturnRateDeterminationMethod = val;
                    }

                    public QuickFix.Fields.ReturnRateDeterminationMethod Get(QuickFix.Fields.ReturnRateDeterminationMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateDeterminationMethod val)
                    {
                        return IsSetReturnRateDeterminationMethod();
                    }

                    public bool IsSetReturnRateDeterminationMethod()
                    {
                        return IsSetField(Tags.ReturnRateDeterminationMethod);
                    }
                    public QuickFix.Fields.NoReturnRatePrices NoReturnRatePrices
                    {
                        get
                        {
                            QuickFix.Fields.NoReturnRatePrices val = new QuickFix.Fields.NoReturnRatePrices();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoReturnRatePrices val)
                    {
                        this.NoReturnRatePrices = val;
                    }

                    public QuickFix.Fields.NoReturnRatePrices Get(QuickFix.Fields.NoReturnRatePrices val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoReturnRatePrices val)
                    {
                        return IsSetNoReturnRatePrices();
                    }

                    public bool IsSetNoReturnRatePrices()
                    {
                        return IsSetField(Tags.NoReturnRatePrices);
                    }
                    public QuickFix.Fields.NoReturnRateFXConversions NoReturnRateFXConversions
                    {
                        get
                        {
                            QuickFix.Fields.NoReturnRateFXConversions val = new QuickFix.Fields.NoReturnRateFXConversions();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoReturnRateFXConversions val)
                    {
                        this.NoReturnRateFXConversions = val;
                    }

                    public QuickFix.Fields.NoReturnRateFXConversions Get(QuickFix.Fields.NoReturnRateFXConversions val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoReturnRateFXConversions val)
                    {
                        return IsSetNoReturnRateFXConversions();
                    }

                    public bool IsSetNoReturnRateFXConversions()
                    {
                        return IsSetField(Tags.NoReturnRateFXConversions);
                    }
                    public QuickFix.Fields.ReturnRateAmountRelativeTo ReturnRateAmountRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateAmountRelativeTo val = new QuickFix.Fields.ReturnRateAmountRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateAmountRelativeTo val)
                    {
                        this.ReturnRateAmountRelativeTo = val;
                    }

                    public QuickFix.Fields.ReturnRateAmountRelativeTo Get(QuickFix.Fields.ReturnRateAmountRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateAmountRelativeTo val)
                    {
                        return IsSetReturnRateAmountRelativeTo();
                    }

                    public bool IsSetReturnRateAmountRelativeTo()
                    {
                        return IsSetField(Tags.ReturnRateAmountRelativeTo);
                    }
                    public QuickFix.Fields.ReturnRateQuoteMeasureType ReturnRateQuoteMeasureType
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteMeasureType val = new QuickFix.Fields.ReturnRateQuoteMeasureType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteMeasureType val)
                    {
                        this.ReturnRateQuoteMeasureType = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteMeasureType Get(QuickFix.Fields.ReturnRateQuoteMeasureType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteMeasureType val)
                    {
                        return IsSetReturnRateQuoteMeasureType();
                    }

                    public bool IsSetReturnRateQuoteMeasureType()
                    {
                        return IsSetField(Tags.ReturnRateQuoteMeasureType);
                    }
                    public QuickFix.Fields.ReturnRateQuoteUnits ReturnRateQuoteUnits
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteUnits val = new QuickFix.Fields.ReturnRateQuoteUnits();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteUnits val)
                    {
                        this.ReturnRateQuoteUnits = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteUnits Get(QuickFix.Fields.ReturnRateQuoteUnits val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteUnits val)
                    {
                        return IsSetReturnRateQuoteUnits();
                    }

                    public bool IsSetReturnRateQuoteUnits()
                    {
                        return IsSetField(Tags.ReturnRateQuoteUnits);
                    }
                    public QuickFix.Fields.ReturnRateQuoteMethod ReturnRateQuoteMethod
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteMethod val = new QuickFix.Fields.ReturnRateQuoteMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteMethod val)
                    {
                        this.ReturnRateQuoteMethod = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteMethod Get(QuickFix.Fields.ReturnRateQuoteMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteMethod val)
                    {
                        return IsSetReturnRateQuoteMethod();
                    }

                    public bool IsSetReturnRateQuoteMethod()
                    {
                        return IsSetField(Tags.ReturnRateQuoteMethod);
                    }
                    public QuickFix.Fields.ReturnRateQuoteCurrency ReturnRateQuoteCurrency
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteCurrency val = new QuickFix.Fields.ReturnRateQuoteCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteCurrency val)
                    {
                        this.ReturnRateQuoteCurrency = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteCurrency Get(QuickFix.Fields.ReturnRateQuoteCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteCurrency val)
                    {
                        return IsSetReturnRateQuoteCurrency();
                    }

                    public bool IsSetReturnRateQuoteCurrency()
                    {
                        return IsSetField(Tags.ReturnRateQuoteCurrency);
                    }
                    public QuickFix.Fields.ReturnRateQuoteCurrencyType ReturnRateQuoteCurrencyType
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteCurrencyType val = new QuickFix.Fields.ReturnRateQuoteCurrencyType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteCurrencyType val)
                    {
                        this.ReturnRateQuoteCurrencyType = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteCurrencyType Get(QuickFix.Fields.ReturnRateQuoteCurrencyType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteCurrencyType val)
                    {
                        return IsSetReturnRateQuoteCurrencyType();
                    }

                    public bool IsSetReturnRateQuoteCurrencyType()
                    {
                        return IsSetField(Tags.ReturnRateQuoteCurrencyType);
                    }
                    public QuickFix.Fields.ReturnRateQuoteTimeType ReturnRateQuoteTimeType
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteTimeType val = new QuickFix.Fields.ReturnRateQuoteTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteTimeType val)
                    {
                        this.ReturnRateQuoteTimeType = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteTimeType Get(QuickFix.Fields.ReturnRateQuoteTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteTimeType val)
                    {
                        return IsSetReturnRateQuoteTimeType();
                    }

                    public bool IsSetReturnRateQuoteTimeType()
                    {
                        return IsSetField(Tags.ReturnRateQuoteTimeType);
                    }
                    public QuickFix.Fields.ReturnRateQuoteTime ReturnRateQuoteTime
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteTime val = new QuickFix.Fields.ReturnRateQuoteTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteTime val)
                    {
                        this.ReturnRateQuoteTime = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteTime Get(QuickFix.Fields.ReturnRateQuoteTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteTime val)
                    {
                        return IsSetReturnRateQuoteTime();
                    }

                    public bool IsSetReturnRateQuoteTime()
                    {
                        return IsSetField(Tags.ReturnRateQuoteTime);
                    }
                    public QuickFix.Fields.ReturnRateQuoteDate ReturnRateQuoteDate
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteDate val = new QuickFix.Fields.ReturnRateQuoteDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteDate val)
                    {
                        this.ReturnRateQuoteDate = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteDate Get(QuickFix.Fields.ReturnRateQuoteDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteDate val)
                    {
                        return IsSetReturnRateQuoteDate();
                    }

                    public bool IsSetReturnRateQuoteDate()
                    {
                        return IsSetField(Tags.ReturnRateQuoteDate);
                    }
                    public QuickFix.Fields.ReturnRateQuoteExpirationTime ReturnRateQuoteExpirationTime
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteExpirationTime val = new QuickFix.Fields.ReturnRateQuoteExpirationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteExpirationTime val)
                    {
                        this.ReturnRateQuoteExpirationTime = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteExpirationTime Get(QuickFix.Fields.ReturnRateQuoteExpirationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteExpirationTime val)
                    {
                        return IsSetReturnRateQuoteExpirationTime();
                    }

                    public bool IsSetReturnRateQuoteExpirationTime()
                    {
                        return IsSetField(Tags.ReturnRateQuoteExpirationTime);
                    }
                    public QuickFix.Fields.ReturnRateQuoteBusinessCenter ReturnRateQuoteBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteBusinessCenter val = new QuickFix.Fields.ReturnRateQuoteBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteBusinessCenter val)
                    {
                        this.ReturnRateQuoteBusinessCenter = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteBusinessCenter Get(QuickFix.Fields.ReturnRateQuoteBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteBusinessCenter val)
                    {
                        return IsSetReturnRateQuoteBusinessCenter();
                    }

                    public bool IsSetReturnRateQuoteBusinessCenter()
                    {
                        return IsSetField(Tags.ReturnRateQuoteBusinessCenter);
                    }
                    public QuickFix.Fields.ReturnRateQuoteExchange ReturnRateQuoteExchange
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuoteExchange val = new QuickFix.Fields.ReturnRateQuoteExchange();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuoteExchange val)
                    {
                        this.ReturnRateQuoteExchange = val;
                    }

                    public QuickFix.Fields.ReturnRateQuoteExchange Get(QuickFix.Fields.ReturnRateQuoteExchange val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuoteExchange val)
                    {
                        return IsSetReturnRateQuoteExchange();
                    }

                    public bool IsSetReturnRateQuoteExchange()
                    {
                        return IsSetField(Tags.ReturnRateQuoteExchange);
                    }
                    public QuickFix.Fields.NoReturnRateInformationSources NoReturnRateInformationSources
                    {
                        get
                        {
                            QuickFix.Fields.NoReturnRateInformationSources val = new QuickFix.Fields.NoReturnRateInformationSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoReturnRateInformationSources val)
                    {
                        this.NoReturnRateInformationSources = val;
                    }

                    public QuickFix.Fields.NoReturnRateInformationSources Get(QuickFix.Fields.NoReturnRateInformationSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoReturnRateInformationSources val)
                    {
                        return IsSetNoReturnRateInformationSources();
                    }

                    public bool IsSetNoReturnRateInformationSources()
                    {
                        return IsSetField(Tags.NoReturnRateInformationSources);
                    }
                    public QuickFix.Fields.ReturnRateQuotePricingModel ReturnRateQuotePricingModel
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateQuotePricingModel val = new QuickFix.Fields.ReturnRateQuotePricingModel();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateQuotePricingModel val)
                    {
                        this.ReturnRateQuotePricingModel = val;
                    }

                    public QuickFix.Fields.ReturnRateQuotePricingModel Get(QuickFix.Fields.ReturnRateQuotePricingModel val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateQuotePricingModel val)
                    {
                        return IsSetReturnRateQuotePricingModel();
                    }

                    public bool IsSetReturnRateQuotePricingModel()
                    {
                        return IsSetField(Tags.ReturnRateQuotePricingModel);
                    }
                    public QuickFix.Fields.ReturnRateCashFlowType ReturnRateCashFlowType
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateCashFlowType val = new QuickFix.Fields.ReturnRateCashFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateCashFlowType val)
                    {
                        this.ReturnRateCashFlowType = val;
                    }

                    public QuickFix.Fields.ReturnRateCashFlowType Get(QuickFix.Fields.ReturnRateCashFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateCashFlowType val)
                    {
                        return IsSetReturnRateCashFlowType();
                    }

                    public bool IsSetReturnRateCashFlowType()
                    {
                        return IsSetField(Tags.ReturnRateCashFlowType);
                    }
                    public QuickFix.Fields.NoReturnRateDates NoReturnRateDates
                    {
                        get
                        {
                            QuickFix.Fields.NoReturnRateDates val = new QuickFix.Fields.NoReturnRateDates();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoReturnRateDates val)
                    {
                        this.NoReturnRateDates = val;
                    }

                    public QuickFix.Fields.NoReturnRateDates Get(QuickFix.Fields.NoReturnRateDates val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoReturnRateDates val)
                    {
                        return IsSetNoReturnRateDates();
                    }

                    public bool IsSetNoReturnRateDates()
                    {
                        return IsSetField(Tags.NoReturnRateDates);
                    }
                    public QuickFix.Fields.ReturnRateValuationTimeType ReturnRateValuationTimeType
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateValuationTimeType val = new QuickFix.Fields.ReturnRateValuationTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateValuationTimeType val)
                    {
                        this.ReturnRateValuationTimeType = val;
                    }

                    public QuickFix.Fields.ReturnRateValuationTimeType Get(QuickFix.Fields.ReturnRateValuationTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateValuationTimeType val)
                    {
                        return IsSetReturnRateValuationTimeType();
                    }

                    public bool IsSetReturnRateValuationTimeType()
                    {
                        return IsSetField(Tags.ReturnRateValuationTimeType);
                    }
                    public QuickFix.Fields.ReturnRateValuationTime ReturnRateValuationTime
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateValuationTime val = new QuickFix.Fields.ReturnRateValuationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateValuationTime val)
                    {
                        this.ReturnRateValuationTime = val;
                    }

                    public QuickFix.Fields.ReturnRateValuationTime Get(QuickFix.Fields.ReturnRateValuationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateValuationTime val)
                    {
                        return IsSetReturnRateValuationTime();
                    }

                    public bool IsSetReturnRateValuationTime()
                    {
                        return IsSetField(Tags.ReturnRateValuationTime);
                    }
                    public QuickFix.Fields.ReturnRateValuationTimeBusinessCenter ReturnRateValuationTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateValuationTimeBusinessCenter val = new QuickFix.Fields.ReturnRateValuationTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateValuationTimeBusinessCenter val)
                    {
                        this.ReturnRateValuationTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.ReturnRateValuationTimeBusinessCenter Get(QuickFix.Fields.ReturnRateValuationTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateValuationTimeBusinessCenter val)
                    {
                        return IsSetReturnRateValuationTimeBusinessCenter();
                    }

                    public bool IsSetReturnRateValuationTimeBusinessCenter()
                    {
                        return IsSetField(Tags.ReturnRateValuationTimeBusinessCenter);
                    }
                    public QuickFix.Fields.ReturnRateValuationPriceOption ReturnRateValuationPriceOption
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateValuationPriceOption val = new QuickFix.Fields.ReturnRateValuationPriceOption();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateValuationPriceOption val)
                    {
                        this.ReturnRateValuationPriceOption = val;
                    }

                    public QuickFix.Fields.ReturnRateValuationPriceOption Get(QuickFix.Fields.ReturnRateValuationPriceOption val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateValuationPriceOption val)
                    {
                        return IsSetReturnRateValuationPriceOption();
                    }

                    public bool IsSetReturnRateValuationPriceOption()
                    {
                        return IsSetField(Tags.ReturnRateValuationPriceOption);
                    }
                    public QuickFix.Fields.ReturnRateFinalPriceFallback ReturnRateFinalPriceFallback
                    {
                        get
                        {
                            QuickFix.Fields.ReturnRateFinalPriceFallback val = new QuickFix.Fields.ReturnRateFinalPriceFallback();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ReturnRateFinalPriceFallback val)
                    {
                        this.ReturnRateFinalPriceFallback = val;
                    }

                    public QuickFix.Fields.ReturnRateFinalPriceFallback Get(QuickFix.Fields.ReturnRateFinalPriceFallback val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ReturnRateFinalPriceFallback val)
                    {
                        return IsSetReturnRateFinalPriceFallback();
                    }

                    public bool IsSetReturnRateFinalPriceFallback()
                    {
                        return IsSetField(Tags.ReturnRateFinalPriceFallback);
                    }
                    public class NoReturnRatePricesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ReturnRatePriceBasis, Tags.ReturnRatePrice, Tags.ReturnRatePriceCurrency, Tags.ReturnRatePriceType, 0 };

                        public NoReturnRatePricesGroup()
                          : base(Tags.NoReturnRatePrices, Tags.ReturnRatePriceBasis, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoReturnRatePricesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ReturnRatePriceBasis ReturnRatePriceBasis
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRatePriceBasis val = new QuickFix.Fields.ReturnRatePriceBasis();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRatePriceBasis val)
                        {
                            this.ReturnRatePriceBasis = val;
                        }

                        public QuickFix.Fields.ReturnRatePriceBasis Get(QuickFix.Fields.ReturnRatePriceBasis val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRatePriceBasis val)
                        {
                            return IsSetReturnRatePriceBasis();
                        }

                        public bool IsSetReturnRatePriceBasis()
                        {
                            return IsSetField(Tags.ReturnRatePriceBasis);
                        }
                        public QuickFix.Fields.ReturnRatePrice ReturnRatePrice
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRatePrice val = new QuickFix.Fields.ReturnRatePrice();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRatePrice val)
                        {
                            this.ReturnRatePrice = val;
                        }

                        public QuickFix.Fields.ReturnRatePrice Get(QuickFix.Fields.ReturnRatePrice val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRatePrice val)
                        {
                            return IsSetReturnRatePrice();
                        }

                        public bool IsSetReturnRatePrice()
                        {
                            return IsSetField(Tags.ReturnRatePrice);
                        }
                        public QuickFix.Fields.ReturnRatePriceCurrency ReturnRatePriceCurrency
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRatePriceCurrency val = new QuickFix.Fields.ReturnRatePriceCurrency();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRatePriceCurrency val)
                        {
                            this.ReturnRatePriceCurrency = val;
                        }

                        public QuickFix.Fields.ReturnRatePriceCurrency Get(QuickFix.Fields.ReturnRatePriceCurrency val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRatePriceCurrency val)
                        {
                            return IsSetReturnRatePriceCurrency();
                        }

                        public bool IsSetReturnRatePriceCurrency()
                        {
                            return IsSetField(Tags.ReturnRatePriceCurrency);
                        }
                        public QuickFix.Fields.ReturnRatePriceType ReturnRatePriceType
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRatePriceType val = new QuickFix.Fields.ReturnRatePriceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRatePriceType val)
                        {
                            this.ReturnRatePriceType = val;
                        }

                        public QuickFix.Fields.ReturnRatePriceType Get(QuickFix.Fields.ReturnRatePriceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRatePriceType val)
                        {
                            return IsSetReturnRatePriceType();
                        }

                        public bool IsSetReturnRatePriceType()
                        {
                            return IsSetField(Tags.ReturnRatePriceType);
                        }

                    }
                    public class NoReturnRateFXConversionsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ReturnRateFXCurrencySymbol, Tags.ReturnRateFXRate, Tags.ReturnRateFXRateCalc, 0 };

                        public NoReturnRateFXConversionsGroup()
                          : base(Tags.NoReturnRateFXConversions, Tags.ReturnRateFXCurrencySymbol, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoReturnRateFXConversionsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ReturnRateFXCurrencySymbol ReturnRateFXCurrencySymbol
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateFXCurrencySymbol val = new QuickFix.Fields.ReturnRateFXCurrencySymbol();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateFXCurrencySymbol val)
                        {
                            this.ReturnRateFXCurrencySymbol = val;
                        }

                        public QuickFix.Fields.ReturnRateFXCurrencySymbol Get(QuickFix.Fields.ReturnRateFXCurrencySymbol val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateFXCurrencySymbol val)
                        {
                            return IsSetReturnRateFXCurrencySymbol();
                        }

                        public bool IsSetReturnRateFXCurrencySymbol()
                        {
                            return IsSetField(Tags.ReturnRateFXCurrencySymbol);
                        }
                        public QuickFix.Fields.ReturnRateFXRate ReturnRateFXRate
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateFXRate val = new QuickFix.Fields.ReturnRateFXRate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateFXRate val)
                        {
                            this.ReturnRateFXRate = val;
                        }

                        public QuickFix.Fields.ReturnRateFXRate Get(QuickFix.Fields.ReturnRateFXRate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateFXRate val)
                        {
                            return IsSetReturnRateFXRate();
                        }

                        public bool IsSetReturnRateFXRate()
                        {
                            return IsSetField(Tags.ReturnRateFXRate);
                        }
                        public QuickFix.Fields.ReturnRateFXRateCalc ReturnRateFXRateCalc
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateFXRateCalc val = new QuickFix.Fields.ReturnRateFXRateCalc();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateFXRateCalc val)
                        {
                            this.ReturnRateFXRateCalc = val;
                        }

                        public QuickFix.Fields.ReturnRateFXRateCalc Get(QuickFix.Fields.ReturnRateFXRateCalc val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateFXRateCalc val)
                        {
                            return IsSetReturnRateFXRateCalc();
                        }

                        public bool IsSetReturnRateFXRateCalc()
                        {
                            return IsSetField(Tags.ReturnRateFXRateCalc);
                        }

                    }
                    public class NoReturnRateInformationSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ReturnRateInformationSource, Tags.ReturnRateReferencePage, Tags.ReturnRateReferencePageHeading, 0 };

                        public NoReturnRateInformationSourcesGroup()
                          : base(Tags.NoReturnRateInformationSources, Tags.ReturnRateInformationSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoReturnRateInformationSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ReturnRateInformationSource ReturnRateInformationSource
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateInformationSource val = new QuickFix.Fields.ReturnRateInformationSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateInformationSource val)
                        {
                            this.ReturnRateInformationSource = val;
                        }

                        public QuickFix.Fields.ReturnRateInformationSource Get(QuickFix.Fields.ReturnRateInformationSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateInformationSource val)
                        {
                            return IsSetReturnRateInformationSource();
                        }

                        public bool IsSetReturnRateInformationSource()
                        {
                            return IsSetField(Tags.ReturnRateInformationSource);
                        }
                        public QuickFix.Fields.ReturnRateReferencePage ReturnRateReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateReferencePage val = new QuickFix.Fields.ReturnRateReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateReferencePage val)
                        {
                            this.ReturnRateReferencePage = val;
                        }

                        public QuickFix.Fields.ReturnRateReferencePage Get(QuickFix.Fields.ReturnRateReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateReferencePage val)
                        {
                            return IsSetReturnRateReferencePage();
                        }

                        public bool IsSetReturnRateReferencePage()
                        {
                            return IsSetField(Tags.ReturnRateReferencePage);
                        }
                        public QuickFix.Fields.ReturnRateReferencePageHeading ReturnRateReferencePageHeading
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateReferencePageHeading val = new QuickFix.Fields.ReturnRateReferencePageHeading();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateReferencePageHeading val)
                        {
                            this.ReturnRateReferencePageHeading = val;
                        }

                        public QuickFix.Fields.ReturnRateReferencePageHeading Get(QuickFix.Fields.ReturnRateReferencePageHeading val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateReferencePageHeading val)
                        {
                            return IsSetReturnRateReferencePageHeading();
                        }

                        public bool IsSetReturnRateReferencePageHeading()
                        {
                            return IsSetField(Tags.ReturnRateReferencePageHeading);
                        }

                    }
                    public class NoReturnRateDatesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ReturnRateDateMode, Tags.NoReturnRateValuationDates, Tags.ReturnRateValuationDateRelativeTo, Tags.ReturnRateValuationDateOffsetPeriod, Tags.ReturnRateValuationDateOffsetUnit, Tags.ReturnRateValuationDateOffsetDayType, Tags.ReturnRateValuationStartDateUnadjusted, Tags.ReturnRateValuationStartDateRelativeTo, Tags.ReturnRateValuationStartDateOffsetPeriod, Tags.ReturnRateValuationStartDateOffsetUnit, Tags.ReturnRateValuationStartDateOffsetDayType, Tags.ReturnRateValuationStartDateAdjusted, Tags.ReturnRateValuationEndDateUnadjusted, Tags.ReturnRateValuationEndDateRelativeTo, Tags.ReturnRateValuationEndDateOffsetPeriod, Tags.ReturnRateValuationEndDateOffsetUnit, Tags.ReturnRateValuationEndDateOffsetDayType, Tags.ReturnRateValuationEndDateAdjusted, Tags.ReturnRateValuationFrequencyPeriod, Tags.ReturnRateValuationFrequencyUnit, Tags.ReturnRateValuationFrequencyRollConvention, Tags.ReturnRateValuationDateBusinessDayConvention, Tags.NoReturnRateValuationDateBusinessCenters, 0 };

                        public NoReturnRateDatesGroup()
                          : base(Tags.NoReturnRateDates, Tags.ReturnRateDateMode, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoReturnRateDatesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ReturnRateDateMode ReturnRateDateMode
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateDateMode val = new QuickFix.Fields.ReturnRateDateMode();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateDateMode val)
                        {
                            this.ReturnRateDateMode = val;
                        }

                        public QuickFix.Fields.ReturnRateDateMode Get(QuickFix.Fields.ReturnRateDateMode val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateDateMode val)
                        {
                            return IsSetReturnRateDateMode();
                        }

                        public bool IsSetReturnRateDateMode()
                        {
                            return IsSetField(Tags.ReturnRateDateMode);
                        }
                        public QuickFix.Fields.NoReturnRateValuationDates NoReturnRateValuationDates
                        {
                            get
                            {
                                QuickFix.Fields.NoReturnRateValuationDates val = new QuickFix.Fields.NoReturnRateValuationDates();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoReturnRateValuationDates val)
                        {
                            this.NoReturnRateValuationDates = val;
                        }

                        public QuickFix.Fields.NoReturnRateValuationDates Get(QuickFix.Fields.NoReturnRateValuationDates val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoReturnRateValuationDates val)
                        {
                            return IsSetNoReturnRateValuationDates();
                        }

                        public bool IsSetNoReturnRateValuationDates()
                        {
                            return IsSetField(Tags.NoReturnRateValuationDates);
                        }
                        public QuickFix.Fields.ReturnRateValuationDateRelativeTo ReturnRateValuationDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationDateRelativeTo val = new QuickFix.Fields.ReturnRateValuationDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationDateRelativeTo val)
                        {
                            this.ReturnRateValuationDateRelativeTo = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationDateRelativeTo Get(QuickFix.Fields.ReturnRateValuationDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationDateRelativeTo val)
                        {
                            return IsSetReturnRateValuationDateRelativeTo();
                        }

                        public bool IsSetReturnRateValuationDateRelativeTo()
                        {
                            return IsSetField(Tags.ReturnRateValuationDateRelativeTo);
                        }
                        public QuickFix.Fields.ReturnRateValuationDateOffsetPeriod ReturnRateValuationDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationDateOffsetPeriod val = new QuickFix.Fields.ReturnRateValuationDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationDateOffsetPeriod val)
                        {
                            this.ReturnRateValuationDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationDateOffsetPeriod Get(QuickFix.Fields.ReturnRateValuationDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationDateOffsetPeriod val)
                        {
                            return IsSetReturnRateValuationDateOffsetPeriod();
                        }

                        public bool IsSetReturnRateValuationDateOffsetPeriod()
                        {
                            return IsSetField(Tags.ReturnRateValuationDateOffsetPeriod);
                        }
                        public QuickFix.Fields.ReturnRateValuationDateOffsetUnit ReturnRateValuationDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationDateOffsetUnit val = new QuickFix.Fields.ReturnRateValuationDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationDateOffsetUnit val)
                        {
                            this.ReturnRateValuationDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationDateOffsetUnit Get(QuickFix.Fields.ReturnRateValuationDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationDateOffsetUnit val)
                        {
                            return IsSetReturnRateValuationDateOffsetUnit();
                        }

                        public bool IsSetReturnRateValuationDateOffsetUnit()
                        {
                            return IsSetField(Tags.ReturnRateValuationDateOffsetUnit);
                        }
                        public QuickFix.Fields.ReturnRateValuationDateOffsetDayType ReturnRateValuationDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationDateOffsetDayType val = new QuickFix.Fields.ReturnRateValuationDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationDateOffsetDayType val)
                        {
                            this.ReturnRateValuationDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationDateOffsetDayType Get(QuickFix.Fields.ReturnRateValuationDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationDateOffsetDayType val)
                        {
                            return IsSetReturnRateValuationDateOffsetDayType();
                        }

                        public bool IsSetReturnRateValuationDateOffsetDayType()
                        {
                            return IsSetField(Tags.ReturnRateValuationDateOffsetDayType);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateUnadjusted ReturnRateValuationStartDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateUnadjusted val = new QuickFix.Fields.ReturnRateValuationStartDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateUnadjusted val)
                        {
                            this.ReturnRateValuationStartDateUnadjusted = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateUnadjusted Get(QuickFix.Fields.ReturnRateValuationStartDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateUnadjusted val)
                        {
                            return IsSetReturnRateValuationStartDateUnadjusted();
                        }

                        public bool IsSetReturnRateValuationStartDateUnadjusted()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateUnadjusted);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateRelativeTo ReturnRateValuationStartDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateRelativeTo val = new QuickFix.Fields.ReturnRateValuationStartDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateRelativeTo val)
                        {
                            this.ReturnRateValuationStartDateRelativeTo = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateRelativeTo Get(QuickFix.Fields.ReturnRateValuationStartDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateRelativeTo val)
                        {
                            return IsSetReturnRateValuationStartDateRelativeTo();
                        }

                        public bool IsSetReturnRateValuationStartDateRelativeTo()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateRelativeTo);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod ReturnRateValuationStartDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod val = new QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod val)
                        {
                            this.ReturnRateValuationStartDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod Get(QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateOffsetPeriod val)
                        {
                            return IsSetReturnRateValuationStartDateOffsetPeriod();
                        }

                        public bool IsSetReturnRateValuationStartDateOffsetPeriod()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateOffsetPeriod);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit ReturnRateValuationStartDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit val = new QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit val)
                        {
                            this.ReturnRateValuationStartDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit Get(QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateOffsetUnit val)
                        {
                            return IsSetReturnRateValuationStartDateOffsetUnit();
                        }

                        public bool IsSetReturnRateValuationStartDateOffsetUnit()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateOffsetUnit);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType ReturnRateValuationStartDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType val = new QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType val)
                        {
                            this.ReturnRateValuationStartDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType Get(QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateOffsetDayType val)
                        {
                            return IsSetReturnRateValuationStartDateOffsetDayType();
                        }

                        public bool IsSetReturnRateValuationStartDateOffsetDayType()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateOffsetDayType);
                        }
                        public QuickFix.Fields.ReturnRateValuationStartDateAdjusted ReturnRateValuationStartDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationStartDateAdjusted val = new QuickFix.Fields.ReturnRateValuationStartDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationStartDateAdjusted val)
                        {
                            this.ReturnRateValuationStartDateAdjusted = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationStartDateAdjusted Get(QuickFix.Fields.ReturnRateValuationStartDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationStartDateAdjusted val)
                        {
                            return IsSetReturnRateValuationStartDateAdjusted();
                        }

                        public bool IsSetReturnRateValuationStartDateAdjusted()
                        {
                            return IsSetField(Tags.ReturnRateValuationStartDateAdjusted);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateUnadjusted ReturnRateValuationEndDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateUnadjusted val = new QuickFix.Fields.ReturnRateValuationEndDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateUnadjusted val)
                        {
                            this.ReturnRateValuationEndDateUnadjusted = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateUnadjusted Get(QuickFix.Fields.ReturnRateValuationEndDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateUnadjusted val)
                        {
                            return IsSetReturnRateValuationEndDateUnadjusted();
                        }

                        public bool IsSetReturnRateValuationEndDateUnadjusted()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateUnadjusted);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateRelativeTo ReturnRateValuationEndDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateRelativeTo val = new QuickFix.Fields.ReturnRateValuationEndDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateRelativeTo val)
                        {
                            this.ReturnRateValuationEndDateRelativeTo = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateRelativeTo Get(QuickFix.Fields.ReturnRateValuationEndDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateRelativeTo val)
                        {
                            return IsSetReturnRateValuationEndDateRelativeTo();
                        }

                        public bool IsSetReturnRateValuationEndDateRelativeTo()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateRelativeTo);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod ReturnRateValuationEndDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod val = new QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod val)
                        {
                            this.ReturnRateValuationEndDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod Get(QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateOffsetPeriod val)
                        {
                            return IsSetReturnRateValuationEndDateOffsetPeriod();
                        }

                        public bool IsSetReturnRateValuationEndDateOffsetPeriod()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateOffsetPeriod);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit ReturnRateValuationEndDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit val = new QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit val)
                        {
                            this.ReturnRateValuationEndDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit Get(QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateOffsetUnit val)
                        {
                            return IsSetReturnRateValuationEndDateOffsetUnit();
                        }

                        public bool IsSetReturnRateValuationEndDateOffsetUnit()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateOffsetUnit);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType ReturnRateValuationEndDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType val = new QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType val)
                        {
                            this.ReturnRateValuationEndDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType Get(QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateOffsetDayType val)
                        {
                            return IsSetReturnRateValuationEndDateOffsetDayType();
                        }

                        public bool IsSetReturnRateValuationEndDateOffsetDayType()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateOffsetDayType);
                        }
                        public QuickFix.Fields.ReturnRateValuationEndDateAdjusted ReturnRateValuationEndDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationEndDateAdjusted val = new QuickFix.Fields.ReturnRateValuationEndDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationEndDateAdjusted val)
                        {
                            this.ReturnRateValuationEndDateAdjusted = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationEndDateAdjusted Get(QuickFix.Fields.ReturnRateValuationEndDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationEndDateAdjusted val)
                        {
                            return IsSetReturnRateValuationEndDateAdjusted();
                        }

                        public bool IsSetReturnRateValuationEndDateAdjusted()
                        {
                            return IsSetField(Tags.ReturnRateValuationEndDateAdjusted);
                        }
                        public QuickFix.Fields.ReturnRateValuationFrequencyPeriod ReturnRateValuationFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationFrequencyPeriod val = new QuickFix.Fields.ReturnRateValuationFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationFrequencyPeriod val)
                        {
                            this.ReturnRateValuationFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationFrequencyPeriod Get(QuickFix.Fields.ReturnRateValuationFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationFrequencyPeriod val)
                        {
                            return IsSetReturnRateValuationFrequencyPeriod();
                        }

                        public bool IsSetReturnRateValuationFrequencyPeriod()
                        {
                            return IsSetField(Tags.ReturnRateValuationFrequencyPeriod);
                        }
                        public QuickFix.Fields.ReturnRateValuationFrequencyUnit ReturnRateValuationFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationFrequencyUnit val = new QuickFix.Fields.ReturnRateValuationFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationFrequencyUnit val)
                        {
                            this.ReturnRateValuationFrequencyUnit = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationFrequencyUnit Get(QuickFix.Fields.ReturnRateValuationFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationFrequencyUnit val)
                        {
                            return IsSetReturnRateValuationFrequencyUnit();
                        }

                        public bool IsSetReturnRateValuationFrequencyUnit()
                        {
                            return IsSetField(Tags.ReturnRateValuationFrequencyUnit);
                        }
                        public QuickFix.Fields.ReturnRateValuationFrequencyRollConvention ReturnRateValuationFrequencyRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationFrequencyRollConvention val = new QuickFix.Fields.ReturnRateValuationFrequencyRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationFrequencyRollConvention val)
                        {
                            this.ReturnRateValuationFrequencyRollConvention = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationFrequencyRollConvention Get(QuickFix.Fields.ReturnRateValuationFrequencyRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationFrequencyRollConvention val)
                        {
                            return IsSetReturnRateValuationFrequencyRollConvention();
                        }

                        public bool IsSetReturnRateValuationFrequencyRollConvention()
                        {
                            return IsSetField(Tags.ReturnRateValuationFrequencyRollConvention);
                        }
                        public QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention ReturnRateValuationDateBusinessDayConvention
                        {
                            get
                            {
                                QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention val = new QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention val)
                        {
                            this.ReturnRateValuationDateBusinessDayConvention = val;
                        }

                        public QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention Get(QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ReturnRateValuationDateBusinessDayConvention val)
                        {
                            return IsSetReturnRateValuationDateBusinessDayConvention();
                        }

                        public bool IsSetReturnRateValuationDateBusinessDayConvention()
                        {
                            return IsSetField(Tags.ReturnRateValuationDateBusinessDayConvention);
                        }
                        public QuickFix.Fields.NoReturnRateValuationDateBusinessCenters NoReturnRateValuationDateBusinessCenters
                        {
                            get
                            {
                                QuickFix.Fields.NoReturnRateValuationDateBusinessCenters val = new QuickFix.Fields.NoReturnRateValuationDateBusinessCenters();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoReturnRateValuationDateBusinessCenters val)
                        {
                            this.NoReturnRateValuationDateBusinessCenters = val;
                        }

                        public QuickFix.Fields.NoReturnRateValuationDateBusinessCenters Get(QuickFix.Fields.NoReturnRateValuationDateBusinessCenters val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoReturnRateValuationDateBusinessCenters val)
                        {
                            return IsSetNoReturnRateValuationDateBusinessCenters();
                        }

                        public bool IsSetNoReturnRateValuationDateBusinessCenters()
                        {
                            return IsSetField(Tags.NoReturnRateValuationDateBusinessCenters);
                        }
                        public class NoReturnRateValuationDatesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.ReturnRateValuationDate, Tags.ReturnRateValuationDateType, 0 };

                            public NoReturnRateValuationDatesGroup()
                              : base(Tags.NoReturnRateValuationDates, Tags.ReturnRateValuationDate, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoReturnRateValuationDatesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.ReturnRateValuationDate ReturnRateValuationDate
                            {
                                get
                                {
                                    QuickFix.Fields.ReturnRateValuationDate val = new QuickFix.Fields.ReturnRateValuationDate();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.ReturnRateValuationDate val)
                            {
                                this.ReturnRateValuationDate = val;
                            }

                            public QuickFix.Fields.ReturnRateValuationDate Get(QuickFix.Fields.ReturnRateValuationDate val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.ReturnRateValuationDate val)
                            {
                                return IsSetReturnRateValuationDate();
                            }

                            public bool IsSetReturnRateValuationDate()
                            {
                                return IsSetField(Tags.ReturnRateValuationDate);
                            }
                            public QuickFix.Fields.ReturnRateValuationDateType ReturnRateValuationDateType
                            {
                                get
                                {
                                    QuickFix.Fields.ReturnRateValuationDateType val = new QuickFix.Fields.ReturnRateValuationDateType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.ReturnRateValuationDateType val)
                            {
                                this.ReturnRateValuationDateType = val;
                            }

                            public QuickFix.Fields.ReturnRateValuationDateType Get(QuickFix.Fields.ReturnRateValuationDateType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.ReturnRateValuationDateType val)
                            {
                                return IsSetReturnRateValuationDateType();
                            }

                            public bool IsSetReturnRateValuationDateType()
                            {
                                return IsSetField(Tags.ReturnRateValuationDateType);
                            }

                        }
                        public class NoReturnRateValuationDateBusinessCentersGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.ReturnRateValuationDateBusinessCenter, 0 };

                            public NoReturnRateValuationDateBusinessCentersGroup()
                              : base(Tags.NoReturnRateValuationDateBusinessCenters, Tags.ReturnRateValuationDateBusinessCenter, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoReturnRateValuationDateBusinessCentersGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.ReturnRateValuationDateBusinessCenter ReturnRateValuationDateBusinessCenter
                            {
                                get
                                {
                                    QuickFix.Fields.ReturnRateValuationDateBusinessCenter val = new QuickFix.Fields.ReturnRateValuationDateBusinessCenter();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.ReturnRateValuationDateBusinessCenter val)
                            {
                                this.ReturnRateValuationDateBusinessCenter = val;
                            }

                            public QuickFix.Fields.ReturnRateValuationDateBusinessCenter Get(QuickFix.Fields.ReturnRateValuationDateBusinessCenter val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.ReturnRateValuationDateBusinessCenter val)
                            {
                                return IsSetReturnRateValuationDateBusinessCenter();
                            }

                            public bool IsSetReturnRateValuationDateBusinessCenter()
                            {
                                return IsSetField(Tags.ReturnRateValuationDateBusinessCenter);
                            }

                        }
                    }
                }
                public class NoPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamNonDeliverableFixingDatesBusinessCenter, 0 };

                    public NoPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.PaymentStreamNonDeliverableFixingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter PaymentStreamNonDeliverableFixingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter val = new QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        this.PaymentStreamNonDeliverableFixingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter Get(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        return IsSetPaymentStreamNonDeliverableFixingDatesBusinessCenter();
                    }

                    public bool IsSetPaymentStreamNonDeliverableFixingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamNonDeliverableFixingDatesBusinessCenter);
                    }

                }
                public class NoNonDeliverableFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.NonDeliverableFixingDate, Tags.NonDeliverableFixingDateType, 0 };

                    public NoNonDeliverableFixingDatesGroup()
                      : base(Tags.NoNonDeliverableFixingDates, Tags.NonDeliverableFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoNonDeliverableFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.NonDeliverableFixingDate NonDeliverableFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.NonDeliverableFixingDate val = new QuickFix.Fields.NonDeliverableFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NonDeliverableFixingDate val)
                    {
                        this.NonDeliverableFixingDate = val;
                    }

                    public QuickFix.Fields.NonDeliverableFixingDate Get(QuickFix.Fields.NonDeliverableFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NonDeliverableFixingDate val)
                    {
                        return IsSetNonDeliverableFixingDate();
                    }

                    public bool IsSetNonDeliverableFixingDate()
                    {
                        return IsSetField(Tags.NonDeliverableFixingDate);
                    }
                    public QuickFix.Fields.NonDeliverableFixingDateType NonDeliverableFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.NonDeliverableFixingDateType val = new QuickFix.Fields.NonDeliverableFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NonDeliverableFixingDateType val)
                    {
                        this.NonDeliverableFixingDateType = val;
                    }

                    public QuickFix.Fields.NonDeliverableFixingDateType Get(QuickFix.Fields.NonDeliverableFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NonDeliverableFixingDateType val)
                    {
                        return IsSetNonDeliverableFixingDateType();
                    }

                    public bool IsSetNonDeliverableFixingDateType()
                    {
                        return IsSetField(Tags.NonDeliverableFixingDateType);
                    }

                }
                public class NoSettlRateFallbacksGroup : Group
                {
                    public static int[] fieldOrder = { Tags.SettlRatePostponementMaximumDays, Tags.SettlRateFallbackRateSource, Tags.SettlRateFallbackReferencePage, Tags.SettlRatePostponementSurvey, Tags.SettlRatePostponementCalculationAgent, 0 };

                    public NoSettlRateFallbacksGroup()
                      : base(Tags.NoSettlRateFallbacks, Tags.SettlRatePostponementMaximumDays, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoSettlRateFallbacksGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.SettlRatePostponementMaximumDays SettlRatePostponementMaximumDays
                    {
                        get
                        {
                            QuickFix.Fields.SettlRatePostponementMaximumDays val = new QuickFix.Fields.SettlRatePostponementMaximumDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.SettlRatePostponementMaximumDays val)
                    {
                        this.SettlRatePostponementMaximumDays = val;
                    }

                    public QuickFix.Fields.SettlRatePostponementMaximumDays Get(QuickFix.Fields.SettlRatePostponementMaximumDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.SettlRatePostponementMaximumDays val)
                    {
                        return IsSetSettlRatePostponementMaximumDays();
                    }

                    public bool IsSetSettlRatePostponementMaximumDays()
                    {
                        return IsSetField(Tags.SettlRatePostponementMaximumDays);
                    }
                    public QuickFix.Fields.SettlRateFallbackRateSource SettlRateFallbackRateSource
                    {
                        get
                        {
                            QuickFix.Fields.SettlRateFallbackRateSource val = new QuickFix.Fields.SettlRateFallbackRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.SettlRateFallbackRateSource val)
                    {
                        this.SettlRateFallbackRateSource = val;
                    }

                    public QuickFix.Fields.SettlRateFallbackRateSource Get(QuickFix.Fields.SettlRateFallbackRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.SettlRateFallbackRateSource val)
                    {
                        return IsSetSettlRateFallbackRateSource();
                    }

                    public bool IsSetSettlRateFallbackRateSource()
                    {
                        return IsSetField(Tags.SettlRateFallbackRateSource);
                    }
                    public QuickFix.Fields.SettlRateFallbackReferencePage SettlRateFallbackReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.SettlRateFallbackReferencePage val = new QuickFix.Fields.SettlRateFallbackReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.SettlRateFallbackReferencePage val)
                    {
                        this.SettlRateFallbackReferencePage = val;
                    }

                    public QuickFix.Fields.SettlRateFallbackReferencePage Get(QuickFix.Fields.SettlRateFallbackReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.SettlRateFallbackReferencePage val)
                    {
                        return IsSetSettlRateFallbackReferencePage();
                    }

                    public bool IsSetSettlRateFallbackReferencePage()
                    {
                        return IsSetField(Tags.SettlRateFallbackReferencePage);
                    }
                    public QuickFix.Fields.SettlRatePostponementSurvey SettlRatePostponementSurvey
                    {
                        get
                        {
                            QuickFix.Fields.SettlRatePostponementSurvey val = new QuickFix.Fields.SettlRatePostponementSurvey();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.SettlRatePostponementSurvey val)
                    {
                        this.SettlRatePostponementSurvey = val;
                    }

                    public QuickFix.Fields.SettlRatePostponementSurvey Get(QuickFix.Fields.SettlRatePostponementSurvey val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.SettlRatePostponementSurvey val)
                    {
                        return IsSetSettlRatePostponementSurvey();
                    }

                    public bool IsSetSettlRatePostponementSurvey()
                    {
                        return IsSetField(Tags.SettlRatePostponementSurvey);
                    }
                    public QuickFix.Fields.SettlRatePostponementCalculationAgent SettlRatePostponementCalculationAgent
                    {
                        get
                        {
                            QuickFix.Fields.SettlRatePostponementCalculationAgent val = new QuickFix.Fields.SettlRatePostponementCalculationAgent();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.SettlRatePostponementCalculationAgent val)
                    {
                        this.SettlRatePostponementCalculationAgent = val;
                    }

                    public QuickFix.Fields.SettlRatePostponementCalculationAgent Get(QuickFix.Fields.SettlRatePostponementCalculationAgent val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.SettlRatePostponementCalculationAgent val)
                    {
                        return IsSetSettlRatePostponementCalculationAgent();
                    }

                    public bool IsSetSettlRatePostponementCalculationAgent()
                    {
                        return IsSetField(Tags.SettlRatePostponementCalculationAgent);
                    }

                }
                public class NoPaymentStreamCompoundingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamCompoundingDatesBusinessCenter, 0 };

                    public NoPaymentStreamCompoundingDatesBusinessCentersGroup()
                      : base(Tags.NoPaymentStreamCompoundingDatesBusinessCenters, Tags.PaymentStreamCompoundingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamCompoundingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter PaymentStreamCompoundingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter val = new QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        this.PaymentStreamCompoundingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter Get(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        return IsSetPaymentStreamCompoundingDatesBusinessCenter();
                    }

                    public bool IsSetPaymentStreamCompoundingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentStreamCompoundingDatesBusinessCenter);
                    }

                }
                public class NoPaymentStreamCompoundingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStreamCompoundingDate, Tags.PaymentStreamCompoundingDateType, 0 };

                    public NoPaymentStreamCompoundingDatesGroup()
                      : base(Tags.NoPaymentStreamCompoundingDates, Tags.PaymentStreamCompoundingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStreamCompoundingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStreamCompoundingDate PaymentStreamCompoundingDate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamCompoundingDate val = new QuickFix.Fields.PaymentStreamCompoundingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamCompoundingDate val)
                    {
                        this.PaymentStreamCompoundingDate = val;
                    }

                    public QuickFix.Fields.PaymentStreamCompoundingDate Get(QuickFix.Fields.PaymentStreamCompoundingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDate val)
                    {
                        return IsSetPaymentStreamCompoundingDate();
                    }

                    public bool IsSetPaymentStreamCompoundingDate()
                    {
                        return IsSetField(Tags.PaymentStreamCompoundingDate);
                    }
                    public QuickFix.Fields.PaymentStreamCompoundingDateType PaymentStreamCompoundingDateType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStreamCompoundingDateType val = new QuickFix.Fields.PaymentStreamCompoundingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStreamCompoundingDateType val)
                    {
                        this.PaymentStreamCompoundingDateType = val;
                    }

                    public QuickFix.Fields.PaymentStreamCompoundingDateType Get(QuickFix.Fields.PaymentStreamCompoundingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStreamCompoundingDateType val)
                    {
                        return IsSetPaymentStreamCompoundingDateType();
                    }

                    public bool IsSetPaymentStreamCompoundingDateType()
                    {
                        return IsSetField(Tags.PaymentStreamCompoundingDateType);
                    }

                }
                public class NoPaymentSchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentScheduleType, Tags.PaymentScheduleStubType, Tags.PaymentScheduleStartDateUnadjusted, Tags.PaymentScheduleEndDateUnadjusted, Tags.PaymentSchedulePaySide, Tags.PaymentScheduleReceiveSide, Tags.PaymentScheduleNotional, Tags.PaymentScheduleCurrency, Tags.PaymentScheduleRate, Tags.PaymentScheduleRateMultiplier, Tags.PaymentScheduleRateSpread, Tags.PaymentScheduleRateSpreadPositionType, Tags.PaymentScheduleRateTreatment, Tags.PaymentScheduleFixedAmount, Tags.PaymentScheduleFixedCurrency, Tags.PaymentScheduleStepFrequencyPeriod, Tags.PaymentScheduleStepFrequencyUnit, Tags.PaymentScheduleStepOffsetValue, Tags.PaymentScheduleStepRate, Tags.PaymentScheduleStepOffsetRate, Tags.PaymentScheduleStepRelativeTo, Tags.NoPaymentScheduleRateSources, Tags.PaymentScheduleFixingDateUnadjusted, Tags.PaymentScheduleWeight, Tags.PaymentScheduleFixingDateRelativeTo, Tags.PaymentScheduleFixingDateBusinessDayConvention, Tags.NoPaymentScheduleFixingDateBusinessCenters, Tags.PaymentScheduleFixingDateOffsetPeriod, Tags.PaymentScheduleFixingDateOffsetUnit, Tags.PaymentScheduleFixingDateOffsetDayType, Tags.PaymentScheduleFixingDateAdjusted, Tags.PaymentScheduleFixingTime, Tags.PaymentScheduleFixingTimeBusinessCenter, Tags.PaymentScheduleInterimExchangePaymentDateRelativeTo, Tags.PaymentScheduleInterimExchangeDatesBusinessDayConvention, Tags.NoPaymentScheduleInterimExchangeDateBusinessCenters, Tags.PaymentScheduleInterimExchangeDatesOffsetPeriod, Tags.PaymentScheduleInterimExchangeDatesOffsetUnit, Tags.PaymentScheduleInterimExchangeDatesOffsetDayType, Tags.PaymentScheduleInterimExchangeDateAdjusted, Tags.PaymentScheduleXID, Tags.PaymentScheduleXIDRef, Tags.PaymentScheduleRateCurrency, Tags.PaymentScheduleRateUnitOfMeasure, Tags.PaymentScheduleRateConversionFactor, Tags.PaymentScheduleRateSpreadType, Tags.PaymentScheduleSettlPeriodPrice, Tags.PaymentScheduleSettlPeriodPriceCurrency, Tags.PaymentScheduleSettlPeriodPriceUnitOfMeasure, Tags.PaymentScheduleStepUnitOfMeasure, Tags.PaymentScheduleFixingDayDistribution, Tags.PaymentScheduleFixingDayCount, Tags.NoPaymentScheduleFixingDays, Tags.PaymentScheduleFixingLagPeriod, Tags.PaymentScheduleFixingLagUnit, Tags.PaymentScheduleFixingFirstObservationDateOffsetPeriod, Tags.PaymentScheduleFixingFirstObservationDateOffsetUnit, 0 };

                    public NoPaymentSchedulesGroup()
                      : base(Tags.NoPaymentSchedules, Tags.PaymentScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentSchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentScheduleType PaymentScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleType val = new QuickFix.Fields.PaymentScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleType val)
                    {
                        this.PaymentScheduleType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleType Get(QuickFix.Fields.PaymentScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleType val)
                    {
                        return IsSetPaymentScheduleType();
                    }

                    public bool IsSetPaymentScheduleType()
                    {
                        return IsSetField(Tags.PaymentScheduleType);
                    }
                    public QuickFix.Fields.PaymentScheduleStubType PaymentScheduleStubType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStubType val = new QuickFix.Fields.PaymentScheduleStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStubType val)
                    {
                        this.PaymentScheduleStubType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStubType Get(QuickFix.Fields.PaymentScheduleStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStubType val)
                    {
                        return IsSetPaymentScheduleStubType();
                    }

                    public bool IsSetPaymentScheduleStubType()
                    {
                        return IsSetField(Tags.PaymentScheduleStubType);
                    }
                    public QuickFix.Fields.PaymentScheduleStartDateUnadjusted PaymentScheduleStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStartDateUnadjusted val = new QuickFix.Fields.PaymentScheduleStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStartDateUnadjusted val)
                    {
                        this.PaymentScheduleStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStartDateUnadjusted Get(QuickFix.Fields.PaymentScheduleStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStartDateUnadjusted val)
                    {
                        return IsSetPaymentScheduleStartDateUnadjusted();
                    }

                    public bool IsSetPaymentScheduleStartDateUnadjusted()
                    {
                        return IsSetField(Tags.PaymentScheduleStartDateUnadjusted);
                    }
                    public QuickFix.Fields.PaymentScheduleEndDateUnadjusted PaymentScheduleEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleEndDateUnadjusted val = new QuickFix.Fields.PaymentScheduleEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleEndDateUnadjusted val)
                    {
                        this.PaymentScheduleEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.PaymentScheduleEndDateUnadjusted Get(QuickFix.Fields.PaymentScheduleEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleEndDateUnadjusted val)
                    {
                        return IsSetPaymentScheduleEndDateUnadjusted();
                    }

                    public bool IsSetPaymentScheduleEndDateUnadjusted()
                    {
                        return IsSetField(Tags.PaymentScheduleEndDateUnadjusted);
                    }
                    public QuickFix.Fields.PaymentSchedulePaySide PaymentSchedulePaySide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentSchedulePaySide val = new QuickFix.Fields.PaymentSchedulePaySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentSchedulePaySide val)
                    {
                        this.PaymentSchedulePaySide = val;
                    }

                    public QuickFix.Fields.PaymentSchedulePaySide Get(QuickFix.Fields.PaymentSchedulePaySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentSchedulePaySide val)
                    {
                        return IsSetPaymentSchedulePaySide();
                    }

                    public bool IsSetPaymentSchedulePaySide()
                    {
                        return IsSetField(Tags.PaymentSchedulePaySide);
                    }
                    public QuickFix.Fields.PaymentScheduleReceiveSide PaymentScheduleReceiveSide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleReceiveSide val = new QuickFix.Fields.PaymentScheduleReceiveSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleReceiveSide val)
                    {
                        this.PaymentScheduleReceiveSide = val;
                    }

                    public QuickFix.Fields.PaymentScheduleReceiveSide Get(QuickFix.Fields.PaymentScheduleReceiveSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleReceiveSide val)
                    {
                        return IsSetPaymentScheduleReceiveSide();
                    }

                    public bool IsSetPaymentScheduleReceiveSide()
                    {
                        return IsSetField(Tags.PaymentScheduleReceiveSide);
                    }
                    public QuickFix.Fields.PaymentScheduleNotional PaymentScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleNotional val = new QuickFix.Fields.PaymentScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleNotional val)
                    {
                        this.PaymentScheduleNotional = val;
                    }

                    public QuickFix.Fields.PaymentScheduleNotional Get(QuickFix.Fields.PaymentScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleNotional val)
                    {
                        return IsSetPaymentScheduleNotional();
                    }

                    public bool IsSetPaymentScheduleNotional()
                    {
                        return IsSetField(Tags.PaymentScheduleNotional);
                    }
                    public QuickFix.Fields.PaymentScheduleCurrency PaymentScheduleCurrency
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleCurrency val = new QuickFix.Fields.PaymentScheduleCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleCurrency val)
                    {
                        this.PaymentScheduleCurrency = val;
                    }

                    public QuickFix.Fields.PaymentScheduleCurrency Get(QuickFix.Fields.PaymentScheduleCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleCurrency val)
                    {
                        return IsSetPaymentScheduleCurrency();
                    }

                    public bool IsSetPaymentScheduleCurrency()
                    {
                        return IsSetField(Tags.PaymentScheduleCurrency);
                    }
                    public QuickFix.Fields.PaymentScheduleRate PaymentScheduleRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRate val = new QuickFix.Fields.PaymentScheduleRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRate val)
                    {
                        this.PaymentScheduleRate = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRate Get(QuickFix.Fields.PaymentScheduleRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRate val)
                    {
                        return IsSetPaymentScheduleRate();
                    }

                    public bool IsSetPaymentScheduleRate()
                    {
                        return IsSetField(Tags.PaymentScheduleRate);
                    }
                    public QuickFix.Fields.PaymentScheduleRateMultiplier PaymentScheduleRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateMultiplier val = new QuickFix.Fields.PaymentScheduleRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateMultiplier val)
                    {
                        this.PaymentScheduleRateMultiplier = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateMultiplier Get(QuickFix.Fields.PaymentScheduleRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateMultiplier val)
                    {
                        return IsSetPaymentScheduleRateMultiplier();
                    }

                    public bool IsSetPaymentScheduleRateMultiplier()
                    {
                        return IsSetField(Tags.PaymentScheduleRateMultiplier);
                    }
                    public QuickFix.Fields.PaymentScheduleRateSpread PaymentScheduleRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateSpread val = new QuickFix.Fields.PaymentScheduleRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateSpread val)
                    {
                        this.PaymentScheduleRateSpread = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateSpread Get(QuickFix.Fields.PaymentScheduleRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateSpread val)
                    {
                        return IsSetPaymentScheduleRateSpread();
                    }

                    public bool IsSetPaymentScheduleRateSpread()
                    {
                        return IsSetField(Tags.PaymentScheduleRateSpread);
                    }
                    public QuickFix.Fields.PaymentScheduleRateSpreadPositionType PaymentScheduleRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateSpreadPositionType val = new QuickFix.Fields.PaymentScheduleRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateSpreadPositionType val)
                    {
                        this.PaymentScheduleRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateSpreadPositionType Get(QuickFix.Fields.PaymentScheduleRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateSpreadPositionType val)
                    {
                        return IsSetPaymentScheduleRateSpreadPositionType();
                    }

                    public bool IsSetPaymentScheduleRateSpreadPositionType()
                    {
                        return IsSetField(Tags.PaymentScheduleRateSpreadPositionType);
                    }
                    public QuickFix.Fields.PaymentScheduleRateTreatment PaymentScheduleRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateTreatment val = new QuickFix.Fields.PaymentScheduleRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateTreatment val)
                    {
                        this.PaymentScheduleRateTreatment = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateTreatment Get(QuickFix.Fields.PaymentScheduleRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateTreatment val)
                    {
                        return IsSetPaymentScheduleRateTreatment();
                    }

                    public bool IsSetPaymentScheduleRateTreatment()
                    {
                        return IsSetField(Tags.PaymentScheduleRateTreatment);
                    }
                    public QuickFix.Fields.PaymentScheduleFixedAmount PaymentScheduleFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixedAmount val = new QuickFix.Fields.PaymentScheduleFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixedAmount val)
                    {
                        this.PaymentScheduleFixedAmount = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixedAmount Get(QuickFix.Fields.PaymentScheduleFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixedAmount val)
                    {
                        return IsSetPaymentScheduleFixedAmount();
                    }

                    public bool IsSetPaymentScheduleFixedAmount()
                    {
                        return IsSetField(Tags.PaymentScheduleFixedAmount);
                    }
                    public QuickFix.Fields.PaymentScheduleFixedCurrency PaymentScheduleFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixedCurrency val = new QuickFix.Fields.PaymentScheduleFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixedCurrency val)
                    {
                        this.PaymentScheduleFixedCurrency = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixedCurrency Get(QuickFix.Fields.PaymentScheduleFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixedCurrency val)
                    {
                        return IsSetPaymentScheduleFixedCurrency();
                    }

                    public bool IsSetPaymentScheduleFixedCurrency()
                    {
                        return IsSetField(Tags.PaymentScheduleFixedCurrency);
                    }
                    public QuickFix.Fields.PaymentScheduleStepFrequencyPeriod PaymentScheduleStepFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepFrequencyPeriod val = new QuickFix.Fields.PaymentScheduleStepFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepFrequencyPeriod val)
                    {
                        this.PaymentScheduleStepFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepFrequencyPeriod Get(QuickFix.Fields.PaymentScheduleStepFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepFrequencyPeriod val)
                    {
                        return IsSetPaymentScheduleStepFrequencyPeriod();
                    }

                    public bool IsSetPaymentScheduleStepFrequencyPeriod()
                    {
                        return IsSetField(Tags.PaymentScheduleStepFrequencyPeriod);
                    }
                    public QuickFix.Fields.PaymentScheduleStepFrequencyUnit PaymentScheduleStepFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepFrequencyUnit val = new QuickFix.Fields.PaymentScheduleStepFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepFrequencyUnit val)
                    {
                        this.PaymentScheduleStepFrequencyUnit = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepFrequencyUnit Get(QuickFix.Fields.PaymentScheduleStepFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepFrequencyUnit val)
                    {
                        return IsSetPaymentScheduleStepFrequencyUnit();
                    }

                    public bool IsSetPaymentScheduleStepFrequencyUnit()
                    {
                        return IsSetField(Tags.PaymentScheduleStepFrequencyUnit);
                    }
                    public QuickFix.Fields.PaymentScheduleStepOffsetValue PaymentScheduleStepOffsetValue
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepOffsetValue val = new QuickFix.Fields.PaymentScheduleStepOffsetValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepOffsetValue val)
                    {
                        this.PaymentScheduleStepOffsetValue = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepOffsetValue Get(QuickFix.Fields.PaymentScheduleStepOffsetValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepOffsetValue val)
                    {
                        return IsSetPaymentScheduleStepOffsetValue();
                    }

                    public bool IsSetPaymentScheduleStepOffsetValue()
                    {
                        return IsSetField(Tags.PaymentScheduleStepOffsetValue);
                    }
                    public QuickFix.Fields.PaymentScheduleStepRate PaymentScheduleStepRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepRate val = new QuickFix.Fields.PaymentScheduleStepRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepRate val)
                    {
                        this.PaymentScheduleStepRate = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepRate Get(QuickFix.Fields.PaymentScheduleStepRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepRate val)
                    {
                        return IsSetPaymentScheduleStepRate();
                    }

                    public bool IsSetPaymentScheduleStepRate()
                    {
                        return IsSetField(Tags.PaymentScheduleStepRate);
                    }
                    public QuickFix.Fields.PaymentScheduleStepOffsetRate PaymentScheduleStepOffsetRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepOffsetRate val = new QuickFix.Fields.PaymentScheduleStepOffsetRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepOffsetRate val)
                    {
                        this.PaymentScheduleStepOffsetRate = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepOffsetRate Get(QuickFix.Fields.PaymentScheduleStepOffsetRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepOffsetRate val)
                    {
                        return IsSetPaymentScheduleStepOffsetRate();
                    }

                    public bool IsSetPaymentScheduleStepOffsetRate()
                    {
                        return IsSetField(Tags.PaymentScheduleStepOffsetRate);
                    }
                    public QuickFix.Fields.PaymentScheduleStepRelativeTo PaymentScheduleStepRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepRelativeTo val = new QuickFix.Fields.PaymentScheduleStepRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepRelativeTo val)
                    {
                        this.PaymentScheduleStepRelativeTo = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepRelativeTo Get(QuickFix.Fields.PaymentScheduleStepRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepRelativeTo val)
                    {
                        return IsSetPaymentScheduleStepRelativeTo();
                    }

                    public bool IsSetPaymentScheduleStepRelativeTo()
                    {
                        return IsSetField(Tags.PaymentScheduleStepRelativeTo);
                    }
                    public QuickFix.Fields.NoPaymentScheduleRateSources NoPaymentScheduleRateSources
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentScheduleRateSources val = new QuickFix.Fields.NoPaymentScheduleRateSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentScheduleRateSources val)
                    {
                        this.NoPaymentScheduleRateSources = val;
                    }

                    public QuickFix.Fields.NoPaymentScheduleRateSources Get(QuickFix.Fields.NoPaymentScheduleRateSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentScheduleRateSources val)
                    {
                        return IsSetNoPaymentScheduleRateSources();
                    }

                    public bool IsSetNoPaymentScheduleRateSources()
                    {
                        return IsSetField(Tags.NoPaymentScheduleRateSources);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateUnadjusted PaymentScheduleFixingDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateUnadjusted val = new QuickFix.Fields.PaymentScheduleFixingDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateUnadjusted val)
                    {
                        this.PaymentScheduleFixingDateUnadjusted = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateUnadjusted Get(QuickFix.Fields.PaymentScheduleFixingDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateUnadjusted val)
                    {
                        return IsSetPaymentScheduleFixingDateUnadjusted();
                    }

                    public bool IsSetPaymentScheduleFixingDateUnadjusted()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateUnadjusted);
                    }
                    public QuickFix.Fields.PaymentScheduleWeight PaymentScheduleWeight
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleWeight val = new QuickFix.Fields.PaymentScheduleWeight();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleWeight val)
                    {
                        this.PaymentScheduleWeight = val;
                    }

                    public QuickFix.Fields.PaymentScheduleWeight Get(QuickFix.Fields.PaymentScheduleWeight val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleWeight val)
                    {
                        return IsSetPaymentScheduleWeight();
                    }

                    public bool IsSetPaymentScheduleWeight()
                    {
                        return IsSetField(Tags.PaymentScheduleWeight);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateRelativeTo PaymentScheduleFixingDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateRelativeTo val = new QuickFix.Fields.PaymentScheduleFixingDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateRelativeTo val)
                    {
                        this.PaymentScheduleFixingDateRelativeTo = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateRelativeTo Get(QuickFix.Fields.PaymentScheduleFixingDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateRelativeTo val)
                    {
                        return IsSetPaymentScheduleFixingDateRelativeTo();
                    }

                    public bool IsSetPaymentScheduleFixingDateRelativeTo()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateRelativeTo);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention PaymentScheduleFixingDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention val = new QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention val)
                    {
                        this.PaymentScheduleFixingDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention Get(QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateBusinessDayConvention val)
                    {
                        return IsSetPaymentScheduleFixingDateBusinessDayConvention();
                    }

                    public bool IsSetPaymentScheduleFixingDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters NoPaymentScheduleFixingDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters val = new QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters val)
                    {
                        this.NoPaymentScheduleFixingDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters Get(QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentScheduleFixingDateBusinessCenters val)
                    {
                        return IsSetNoPaymentScheduleFixingDateBusinessCenters();
                    }

                    public bool IsSetNoPaymentScheduleFixingDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoPaymentScheduleFixingDateBusinessCenters);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod PaymentScheduleFixingDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod val = new QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod val)
                    {
                        this.PaymentScheduleFixingDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod Get(QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateOffsetPeriod val)
                    {
                        return IsSetPaymentScheduleFixingDateOffsetPeriod();
                    }

                    public bool IsSetPaymentScheduleFixingDateOffsetPeriod()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateOffsetPeriod);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit PaymentScheduleFixingDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit val = new QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit val)
                    {
                        this.PaymentScheduleFixingDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit Get(QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateOffsetUnit val)
                    {
                        return IsSetPaymentScheduleFixingDateOffsetUnit();
                    }

                    public bool IsSetPaymentScheduleFixingDateOffsetUnit()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateOffsetUnit);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType PaymentScheduleFixingDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType val = new QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType val)
                    {
                        this.PaymentScheduleFixingDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType Get(QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateOffsetDayType val)
                    {
                        return IsSetPaymentScheduleFixingDateOffsetDayType();
                    }

                    public bool IsSetPaymentScheduleFixingDateOffsetDayType()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateOffsetDayType);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDateAdjusted PaymentScheduleFixingDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDateAdjusted val = new QuickFix.Fields.PaymentScheduleFixingDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDateAdjusted val)
                    {
                        this.PaymentScheduleFixingDateAdjusted = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDateAdjusted Get(QuickFix.Fields.PaymentScheduleFixingDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateAdjusted val)
                    {
                        return IsSetPaymentScheduleFixingDateAdjusted();
                    }

                    public bool IsSetPaymentScheduleFixingDateAdjusted()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDateAdjusted);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingTime PaymentScheduleFixingTime
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingTime val = new QuickFix.Fields.PaymentScheduleFixingTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingTime val)
                    {
                        this.PaymentScheduleFixingTime = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingTime Get(QuickFix.Fields.PaymentScheduleFixingTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingTime val)
                    {
                        return IsSetPaymentScheduleFixingTime();
                    }

                    public bool IsSetPaymentScheduleFixingTime()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingTime);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter PaymentScheduleFixingTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter val = new QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter val)
                    {
                        this.PaymentScheduleFixingTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter Get(QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingTimeBusinessCenter val)
                    {
                        return IsSetPaymentScheduleFixingTimeBusinessCenter();
                    }

                    public bool IsSetPaymentScheduleFixingTimeBusinessCenter()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingTimeBusinessCenter);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo PaymentScheduleInterimExchangePaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo val = new QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        this.PaymentScheduleInterimExchangePaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo Get(QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        return IsSetPaymentScheduleInterimExchangePaymentDateRelativeTo();
                    }

                    public bool IsSetPaymentScheduleInterimExchangePaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangePaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention PaymentScheduleInterimExchangeDatesBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention val = new QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        this.PaymentScheduleInterimExchangeDatesBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention Get(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        return IsSetPaymentScheduleInterimExchangeDatesBusinessDayConvention();
                    }

                    public bool IsSetPaymentScheduleInterimExchangeDatesBusinessDayConvention()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangeDatesBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters NoPaymentScheduleInterimExchangeDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters val = new QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        this.NoPaymentScheduleInterimExchangeDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters Get(QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        return IsSetNoPaymentScheduleInterimExchangeDateBusinessCenters();
                    }

                    public bool IsSetNoPaymentScheduleInterimExchangeDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoPaymentScheduleInterimExchangeDateBusinessCenters);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod PaymentScheduleInterimExchangeDatesOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod val = new QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        this.PaymentScheduleInterimExchangeDatesOffsetPeriod = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod Get(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        return IsSetPaymentScheduleInterimExchangeDatesOffsetPeriod();
                    }

                    public bool IsSetPaymentScheduleInterimExchangeDatesOffsetPeriod()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangeDatesOffsetPeriod);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit PaymentScheduleInterimExchangeDatesOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit val = new QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        this.PaymentScheduleInterimExchangeDatesOffsetUnit = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit Get(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        return IsSetPaymentScheduleInterimExchangeDatesOffsetUnit();
                    }

                    public bool IsSetPaymentScheduleInterimExchangeDatesOffsetUnit()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangeDatesOffsetUnit);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType PaymentScheduleInterimExchangeDatesOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType val = new QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        this.PaymentScheduleInterimExchangeDatesOffsetDayType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType Get(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        return IsSetPaymentScheduleInterimExchangeDatesOffsetDayType();
                    }

                    public bool IsSetPaymentScheduleInterimExchangeDatesOffsetDayType()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangeDatesOffsetDayType);
                    }
                    public QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted PaymentScheduleInterimExchangeDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted val = new QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        this.PaymentScheduleInterimExchangeDateAdjusted = val;
                    }

                    public QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted Get(QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        return IsSetPaymentScheduleInterimExchangeDateAdjusted();
                    }

                    public bool IsSetPaymentScheduleInterimExchangeDateAdjusted()
                    {
                        return IsSetField(Tags.PaymentScheduleInterimExchangeDateAdjusted);
                    }
                    public QuickFix.Fields.PaymentScheduleXID PaymentScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleXID val = new QuickFix.Fields.PaymentScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleXID val)
                    {
                        this.PaymentScheduleXID = val;
                    }

                    public QuickFix.Fields.PaymentScheduleXID Get(QuickFix.Fields.PaymentScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleXID val)
                    {
                        return IsSetPaymentScheduleXID();
                    }

                    public bool IsSetPaymentScheduleXID()
                    {
                        return IsSetField(Tags.PaymentScheduleXID);
                    }
                    public QuickFix.Fields.PaymentScheduleXIDRef PaymentScheduleXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleXIDRef val = new QuickFix.Fields.PaymentScheduleXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleXIDRef val)
                    {
                        this.PaymentScheduleXIDRef = val;
                    }

                    public QuickFix.Fields.PaymentScheduleXIDRef Get(QuickFix.Fields.PaymentScheduleXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleXIDRef val)
                    {
                        return IsSetPaymentScheduleXIDRef();
                    }

                    public bool IsSetPaymentScheduleXIDRef()
                    {
                        return IsSetField(Tags.PaymentScheduleXIDRef);
                    }
                    public QuickFix.Fields.PaymentScheduleRateCurrency PaymentScheduleRateCurrency
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateCurrency val = new QuickFix.Fields.PaymentScheduleRateCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateCurrency val)
                    {
                        this.PaymentScheduleRateCurrency = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateCurrency Get(QuickFix.Fields.PaymentScheduleRateCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateCurrency val)
                    {
                        return IsSetPaymentScheduleRateCurrency();
                    }

                    public bool IsSetPaymentScheduleRateCurrency()
                    {
                        return IsSetField(Tags.PaymentScheduleRateCurrency);
                    }
                    public QuickFix.Fields.PaymentScheduleRateUnitOfMeasure PaymentScheduleRateUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateUnitOfMeasure val = new QuickFix.Fields.PaymentScheduleRateUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateUnitOfMeasure val)
                    {
                        this.PaymentScheduleRateUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateUnitOfMeasure Get(QuickFix.Fields.PaymentScheduleRateUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateUnitOfMeasure val)
                    {
                        return IsSetPaymentScheduleRateUnitOfMeasure();
                    }

                    public bool IsSetPaymentScheduleRateUnitOfMeasure()
                    {
                        return IsSetField(Tags.PaymentScheduleRateUnitOfMeasure);
                    }
                    public QuickFix.Fields.PaymentScheduleRateConversionFactor PaymentScheduleRateConversionFactor
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateConversionFactor val = new QuickFix.Fields.PaymentScheduleRateConversionFactor();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateConversionFactor val)
                    {
                        this.PaymentScheduleRateConversionFactor = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateConversionFactor Get(QuickFix.Fields.PaymentScheduleRateConversionFactor val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateConversionFactor val)
                    {
                        return IsSetPaymentScheduleRateConversionFactor();
                    }

                    public bool IsSetPaymentScheduleRateConversionFactor()
                    {
                        return IsSetField(Tags.PaymentScheduleRateConversionFactor);
                    }
                    public QuickFix.Fields.PaymentScheduleRateSpreadType PaymentScheduleRateSpreadType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleRateSpreadType val = new QuickFix.Fields.PaymentScheduleRateSpreadType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleRateSpreadType val)
                    {
                        this.PaymentScheduleRateSpreadType = val;
                    }

                    public QuickFix.Fields.PaymentScheduleRateSpreadType Get(QuickFix.Fields.PaymentScheduleRateSpreadType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleRateSpreadType val)
                    {
                        return IsSetPaymentScheduleRateSpreadType();
                    }

                    public bool IsSetPaymentScheduleRateSpreadType()
                    {
                        return IsSetField(Tags.PaymentScheduleRateSpreadType);
                    }
                    public QuickFix.Fields.PaymentScheduleSettlPeriodPrice PaymentScheduleSettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleSettlPeriodPrice val = new QuickFix.Fields.PaymentScheduleSettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleSettlPeriodPrice val)
                    {
                        this.PaymentScheduleSettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.PaymentScheduleSettlPeriodPrice Get(QuickFix.Fields.PaymentScheduleSettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleSettlPeriodPrice val)
                    {
                        return IsSetPaymentScheduleSettlPeriodPrice();
                    }

                    public bool IsSetPaymentScheduleSettlPeriodPrice()
                    {
                        return IsSetField(Tags.PaymentScheduleSettlPeriodPrice);
                    }
                    public QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency PaymentScheduleSettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency val = new QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        this.PaymentScheduleSettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency Get(QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        return IsSetPaymentScheduleSettlPeriodPriceCurrency();
                    }

                    public bool IsSetPaymentScheduleSettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.PaymentScheduleSettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure PaymentScheduleSettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        this.PaymentScheduleSettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetPaymentScheduleSettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetPaymentScheduleSettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.PaymentScheduleSettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.PaymentScheduleStepUnitOfMeasure PaymentScheduleStepUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleStepUnitOfMeasure val = new QuickFix.Fields.PaymentScheduleStepUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleStepUnitOfMeasure val)
                    {
                        this.PaymentScheduleStepUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.PaymentScheduleStepUnitOfMeasure Get(QuickFix.Fields.PaymentScheduleStepUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleStepUnitOfMeasure val)
                    {
                        return IsSetPaymentScheduleStepUnitOfMeasure();
                    }

                    public bool IsSetPaymentScheduleStepUnitOfMeasure()
                    {
                        return IsSetField(Tags.PaymentScheduleStepUnitOfMeasure);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDayDistribution PaymentScheduleFixingDayDistribution
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDayDistribution val = new QuickFix.Fields.PaymentScheduleFixingDayDistribution();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDayDistribution val)
                    {
                        this.PaymentScheduleFixingDayDistribution = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDayDistribution Get(QuickFix.Fields.PaymentScheduleFixingDayDistribution val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDayDistribution val)
                    {
                        return IsSetPaymentScheduleFixingDayDistribution();
                    }

                    public bool IsSetPaymentScheduleFixingDayDistribution()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDayDistribution);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingDayCount PaymentScheduleFixingDayCount
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingDayCount val = new QuickFix.Fields.PaymentScheduleFixingDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingDayCount val)
                    {
                        this.PaymentScheduleFixingDayCount = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingDayCount Get(QuickFix.Fields.PaymentScheduleFixingDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDayCount val)
                    {
                        return IsSetPaymentScheduleFixingDayCount();
                    }

                    public bool IsSetPaymentScheduleFixingDayCount()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingDayCount);
                    }
                    public QuickFix.Fields.NoPaymentScheduleFixingDays NoPaymentScheduleFixingDays
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentScheduleFixingDays val = new QuickFix.Fields.NoPaymentScheduleFixingDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentScheduleFixingDays val)
                    {
                        this.NoPaymentScheduleFixingDays = val;
                    }

                    public QuickFix.Fields.NoPaymentScheduleFixingDays Get(QuickFix.Fields.NoPaymentScheduleFixingDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentScheduleFixingDays val)
                    {
                        return IsSetNoPaymentScheduleFixingDays();
                    }

                    public bool IsSetNoPaymentScheduleFixingDays()
                    {
                        return IsSetField(Tags.NoPaymentScheduleFixingDays);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingLagPeriod PaymentScheduleFixingLagPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingLagPeriod val = new QuickFix.Fields.PaymentScheduleFixingLagPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingLagPeriod val)
                    {
                        this.PaymentScheduleFixingLagPeriod = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingLagPeriod Get(QuickFix.Fields.PaymentScheduleFixingLagPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingLagPeriod val)
                    {
                        return IsSetPaymentScheduleFixingLagPeriod();
                    }

                    public bool IsSetPaymentScheduleFixingLagPeriod()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingLagPeriod);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingLagUnit PaymentScheduleFixingLagUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingLagUnit val = new QuickFix.Fields.PaymentScheduleFixingLagUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingLagUnit val)
                    {
                        this.PaymentScheduleFixingLagUnit = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingLagUnit Get(QuickFix.Fields.PaymentScheduleFixingLagUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingLagUnit val)
                    {
                        return IsSetPaymentScheduleFixingLagUnit();
                    }

                    public bool IsSetPaymentScheduleFixingLagUnit()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingLagUnit);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod PaymentScheduleFixingFirstObservationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod val = new QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        this.PaymentScheduleFixingFirstObservationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod Get(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        return IsSetPaymentScheduleFixingFirstObservationDateOffsetPeriod();
                    }

                    public bool IsSetPaymentScheduleFixingFirstObservationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingFirstObservationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit PaymentScheduleFixingFirstObservationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit val = new QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        this.PaymentScheduleFixingFirstObservationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit Get(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        return IsSetPaymentScheduleFixingFirstObservationDateOffsetUnit();
                    }

                    public bool IsSetPaymentScheduleFixingFirstObservationDateOffsetUnit()
                    {
                        return IsSetField(Tags.PaymentScheduleFixingFirstObservationDateOffsetUnit);
                    }
                    public class NoPaymentScheduleRateSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentScheduleRateSource, Tags.PaymentScheduleRateSourceType, Tags.PaymentScheduleReferencePage, 0 };

                        public NoPaymentScheduleRateSourcesGroup()
                          : base(Tags.NoPaymentScheduleRateSources, Tags.PaymentScheduleRateSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentScheduleRateSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentScheduleRateSource PaymentScheduleRateSource
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleRateSource val = new QuickFix.Fields.PaymentScheduleRateSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleRateSource val)
                        {
                            this.PaymentScheduleRateSource = val;
                        }

                        public QuickFix.Fields.PaymentScheduleRateSource Get(QuickFix.Fields.PaymentScheduleRateSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleRateSource val)
                        {
                            return IsSetPaymentScheduleRateSource();
                        }

                        public bool IsSetPaymentScheduleRateSource()
                        {
                            return IsSetField(Tags.PaymentScheduleRateSource);
                        }
                        public QuickFix.Fields.PaymentScheduleRateSourceType PaymentScheduleRateSourceType
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleRateSourceType val = new QuickFix.Fields.PaymentScheduleRateSourceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleRateSourceType val)
                        {
                            this.PaymentScheduleRateSourceType = val;
                        }

                        public QuickFix.Fields.PaymentScheduleRateSourceType Get(QuickFix.Fields.PaymentScheduleRateSourceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleRateSourceType val)
                        {
                            return IsSetPaymentScheduleRateSourceType();
                        }

                        public bool IsSetPaymentScheduleRateSourceType()
                        {
                            return IsSetField(Tags.PaymentScheduleRateSourceType);
                        }
                        public QuickFix.Fields.PaymentScheduleReferencePage PaymentScheduleReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleReferencePage val = new QuickFix.Fields.PaymentScheduleReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleReferencePage val)
                        {
                            this.PaymentScheduleReferencePage = val;
                        }

                        public QuickFix.Fields.PaymentScheduleReferencePage Get(QuickFix.Fields.PaymentScheduleReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleReferencePage val)
                        {
                            return IsSetPaymentScheduleReferencePage();
                        }

                        public bool IsSetPaymentScheduleReferencePage()
                        {
                            return IsSetField(Tags.PaymentScheduleReferencePage);
                        }

                    }
                    public class NoPaymentScheduleFixingDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentScheduleFixingDateBusinessCenter, 0 };

                        public NoPaymentScheduleFixingDateBusinessCentersGroup()
                          : base(Tags.NoPaymentScheduleFixingDateBusinessCenters, Tags.PaymentScheduleFixingDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentScheduleFixingDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter PaymentScheduleFixingDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter val = new QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter val)
                        {
                            this.PaymentScheduleFixingDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter Get(QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDateBusinessCenter val)
                        {
                            return IsSetPaymentScheduleFixingDateBusinessCenter();
                        }

                        public bool IsSetPaymentScheduleFixingDateBusinessCenter()
                        {
                            return IsSetField(Tags.PaymentScheduleFixingDateBusinessCenter);
                        }

                    }
                    public class NoPaymentScheduleInterimExchangeDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentScheduleInterimExchangeDatesBusinessCenter, 0 };

                        public NoPaymentScheduleInterimExchangeDateBusinessCentersGroup()
                          : base(Tags.NoPaymentScheduleInterimExchangeDateBusinessCenters, Tags.PaymentScheduleInterimExchangeDatesBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentScheduleInterimExchangeDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter PaymentScheduleInterimExchangeDatesBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter val = new QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            this.PaymentScheduleInterimExchangeDatesBusinessCenter = val;
                        }

                        public QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter Get(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            return IsSetPaymentScheduleInterimExchangeDatesBusinessCenter();
                        }

                        public bool IsSetPaymentScheduleInterimExchangeDatesBusinessCenter()
                        {
                            return IsSetField(Tags.PaymentScheduleInterimExchangeDatesBusinessCenter);
                        }

                    }
                    public class NoPaymentScheduleFixingDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentScheduleFixingDayOfWeek, Tags.PaymentScheduleFixingDayNumber, 0 };

                        public NoPaymentScheduleFixingDaysGroup()
                          : base(Tags.NoPaymentScheduleFixingDays, Tags.PaymentScheduleFixingDayOfWeek, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentScheduleFixingDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentScheduleFixingDayOfWeek PaymentScheduleFixingDayOfWeek
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleFixingDayOfWeek val = new QuickFix.Fields.PaymentScheduleFixingDayOfWeek();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleFixingDayOfWeek val)
                        {
                            this.PaymentScheduleFixingDayOfWeek = val;
                        }

                        public QuickFix.Fields.PaymentScheduleFixingDayOfWeek Get(QuickFix.Fields.PaymentScheduleFixingDayOfWeek val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDayOfWeek val)
                        {
                            return IsSetPaymentScheduleFixingDayOfWeek();
                        }

                        public bool IsSetPaymentScheduleFixingDayOfWeek()
                        {
                            return IsSetField(Tags.PaymentScheduleFixingDayOfWeek);
                        }
                        public QuickFix.Fields.PaymentScheduleFixingDayNumber PaymentScheduleFixingDayNumber
                        {
                            get
                            {
                                QuickFix.Fields.PaymentScheduleFixingDayNumber val = new QuickFix.Fields.PaymentScheduleFixingDayNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentScheduleFixingDayNumber val)
                        {
                            this.PaymentScheduleFixingDayNumber = val;
                        }

                        public QuickFix.Fields.PaymentScheduleFixingDayNumber Get(QuickFix.Fields.PaymentScheduleFixingDayNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentScheduleFixingDayNumber val)
                        {
                            return IsSetPaymentScheduleFixingDayNumber();
                        }

                        public bool IsSetPaymentScheduleFixingDayNumber()
                        {
                            return IsSetField(Tags.PaymentScheduleFixingDayNumber);
                        }

                    }
                }
                public class NoPaymentStubsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PaymentStubType, Tags.PaymentStubLength, Tags.PaymentStubRate, Tags.PaymentStubFixedAmount, Tags.PaymentStubFixedCurrency, Tags.PaymentStubIndex, Tags.PaymentStubIndexSource, Tags.PaymentStubIndexCurvePeriod, Tags.PaymentStubIndexCurveUnit, Tags.PaymentStubIndexRateMultiplier, Tags.PaymentStubIndexRateSpread, Tags.PaymentStubIndexRateSpreadPositionType, Tags.PaymentStubIndexRateTreatment, Tags.PaymentStubIndexCapRate, Tags.PaymentStubIndexCapRateBuySide, Tags.PaymentStubIndexCapRateSellSide, Tags.PaymentStubIndexFloorRate, Tags.PaymentStubIndexFloorRateBuySide, Tags.PaymentStubIndexFloorRateSellSide, Tags.PaymentStubIndex2, Tags.PaymentStubIndex2Source, Tags.PaymentStubIndex2CurvePeriod, Tags.PaymentStubIndex2CurveUnit, Tags.PaymentStubIndex2RateMultiplier, Tags.PaymentStubIndex2RateSpread, Tags.PaymentStubIndex2RateSpreadPositionType, Tags.PaymentStubIndex2RateTreatment, Tags.PaymentStubIndex2CapRate, Tags.PaymentStubIndex2FloorRate, Tags.PaymentStubStartDateUnadjusted, Tags.PaymentStubStartDateBusinessDayConvention, Tags.NoPaymentStubStartDateBusinessCenters, Tags.PaymentStubStartDateRelativeTo, Tags.PaymentStubStartDateOffsetPeriod, Tags.PaymentStubStartDateOffsetUnit, Tags.PaymentStubStartDateOffsetDayType, Tags.PaymentStubStartDateAdjusted, Tags.PaymentStubEndDateUnadjusted, Tags.PaymentStubEndDateBusinessDayConvention, Tags.NoPaymentStubEndDateBusinessCenters, Tags.PaymentStubEndDateRelativeTo, Tags.PaymentStubEndDateOffsetPeriod, Tags.PaymentStubEndDateOffsetUnit, Tags.PaymentStubEndDateOffsetDayType, Tags.PaymentStubEndDateAdjusted, 0 };

                    public NoPaymentStubsGroup()
                      : base(Tags.NoPaymentStubs, Tags.PaymentStubType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPaymentStubsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PaymentStubType PaymentStubType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubType val = new QuickFix.Fields.PaymentStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubType val)
                    {
                        this.PaymentStubType = val;
                    }

                    public QuickFix.Fields.PaymentStubType Get(QuickFix.Fields.PaymentStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubType val)
                    {
                        return IsSetPaymentStubType();
                    }

                    public bool IsSetPaymentStubType()
                    {
                        return IsSetField(Tags.PaymentStubType);
                    }
                    public QuickFix.Fields.PaymentStubLength PaymentStubLength
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubLength val = new QuickFix.Fields.PaymentStubLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubLength val)
                    {
                        this.PaymentStubLength = val;
                    }

                    public QuickFix.Fields.PaymentStubLength Get(QuickFix.Fields.PaymentStubLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubLength val)
                    {
                        return IsSetPaymentStubLength();
                    }

                    public bool IsSetPaymentStubLength()
                    {
                        return IsSetField(Tags.PaymentStubLength);
                    }
                    public QuickFix.Fields.PaymentStubRate PaymentStubRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubRate val = new QuickFix.Fields.PaymentStubRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubRate val)
                    {
                        this.PaymentStubRate = val;
                    }

                    public QuickFix.Fields.PaymentStubRate Get(QuickFix.Fields.PaymentStubRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubRate val)
                    {
                        return IsSetPaymentStubRate();
                    }

                    public bool IsSetPaymentStubRate()
                    {
                        return IsSetField(Tags.PaymentStubRate);
                    }
                    public QuickFix.Fields.PaymentStubFixedAmount PaymentStubFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubFixedAmount val = new QuickFix.Fields.PaymentStubFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubFixedAmount val)
                    {
                        this.PaymentStubFixedAmount = val;
                    }

                    public QuickFix.Fields.PaymentStubFixedAmount Get(QuickFix.Fields.PaymentStubFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubFixedAmount val)
                    {
                        return IsSetPaymentStubFixedAmount();
                    }

                    public bool IsSetPaymentStubFixedAmount()
                    {
                        return IsSetField(Tags.PaymentStubFixedAmount);
                    }
                    public QuickFix.Fields.PaymentStubFixedCurrency PaymentStubFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubFixedCurrency val = new QuickFix.Fields.PaymentStubFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubFixedCurrency val)
                    {
                        this.PaymentStubFixedCurrency = val;
                    }

                    public QuickFix.Fields.PaymentStubFixedCurrency Get(QuickFix.Fields.PaymentStubFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubFixedCurrency val)
                    {
                        return IsSetPaymentStubFixedCurrency();
                    }

                    public bool IsSetPaymentStubFixedCurrency()
                    {
                        return IsSetField(Tags.PaymentStubFixedCurrency);
                    }
                    public QuickFix.Fields.PaymentStubIndex PaymentStubIndex
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex val = new QuickFix.Fields.PaymentStubIndex();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex val)
                    {
                        this.PaymentStubIndex = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex Get(QuickFix.Fields.PaymentStubIndex val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex val)
                    {
                        return IsSetPaymentStubIndex();
                    }

                    public bool IsSetPaymentStubIndex()
                    {
                        return IsSetField(Tags.PaymentStubIndex);
                    }
                    public QuickFix.Fields.PaymentStubIndexSource PaymentStubIndexSource
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexSource val = new QuickFix.Fields.PaymentStubIndexSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexSource val)
                    {
                        this.PaymentStubIndexSource = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexSource Get(QuickFix.Fields.PaymentStubIndexSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexSource val)
                    {
                        return IsSetPaymentStubIndexSource();
                    }

                    public bool IsSetPaymentStubIndexSource()
                    {
                        return IsSetField(Tags.PaymentStubIndexSource);
                    }
                    public QuickFix.Fields.PaymentStubIndexCurvePeriod PaymentStubIndexCurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexCurvePeriod val = new QuickFix.Fields.PaymentStubIndexCurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexCurvePeriod val)
                    {
                        this.PaymentStubIndexCurvePeriod = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexCurvePeriod Get(QuickFix.Fields.PaymentStubIndexCurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexCurvePeriod val)
                    {
                        return IsSetPaymentStubIndexCurvePeriod();
                    }

                    public bool IsSetPaymentStubIndexCurvePeriod()
                    {
                        return IsSetField(Tags.PaymentStubIndexCurvePeriod);
                    }
                    public QuickFix.Fields.PaymentStubIndexCurveUnit PaymentStubIndexCurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexCurveUnit val = new QuickFix.Fields.PaymentStubIndexCurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexCurveUnit val)
                    {
                        this.PaymentStubIndexCurveUnit = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexCurveUnit Get(QuickFix.Fields.PaymentStubIndexCurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexCurveUnit val)
                    {
                        return IsSetPaymentStubIndexCurveUnit();
                    }

                    public bool IsSetPaymentStubIndexCurveUnit()
                    {
                        return IsSetField(Tags.PaymentStubIndexCurveUnit);
                    }
                    public QuickFix.Fields.PaymentStubIndexRateMultiplier PaymentStubIndexRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexRateMultiplier val = new QuickFix.Fields.PaymentStubIndexRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexRateMultiplier val)
                    {
                        this.PaymentStubIndexRateMultiplier = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexRateMultiplier Get(QuickFix.Fields.PaymentStubIndexRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexRateMultiplier val)
                    {
                        return IsSetPaymentStubIndexRateMultiplier();
                    }

                    public bool IsSetPaymentStubIndexRateMultiplier()
                    {
                        return IsSetField(Tags.PaymentStubIndexRateMultiplier);
                    }
                    public QuickFix.Fields.PaymentStubIndexRateSpread PaymentStubIndexRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexRateSpread val = new QuickFix.Fields.PaymentStubIndexRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexRateSpread val)
                    {
                        this.PaymentStubIndexRateSpread = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexRateSpread Get(QuickFix.Fields.PaymentStubIndexRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexRateSpread val)
                    {
                        return IsSetPaymentStubIndexRateSpread();
                    }

                    public bool IsSetPaymentStubIndexRateSpread()
                    {
                        return IsSetField(Tags.PaymentStubIndexRateSpread);
                    }
                    public QuickFix.Fields.PaymentStubIndexRateSpreadPositionType PaymentStubIndexRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexRateSpreadPositionType val = new QuickFix.Fields.PaymentStubIndexRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexRateSpreadPositionType val)
                    {
                        this.PaymentStubIndexRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexRateSpreadPositionType Get(QuickFix.Fields.PaymentStubIndexRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexRateSpreadPositionType val)
                    {
                        return IsSetPaymentStubIndexRateSpreadPositionType();
                    }

                    public bool IsSetPaymentStubIndexRateSpreadPositionType()
                    {
                        return IsSetField(Tags.PaymentStubIndexRateSpreadPositionType);
                    }
                    public QuickFix.Fields.PaymentStubIndexRateTreatment PaymentStubIndexRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexRateTreatment val = new QuickFix.Fields.PaymentStubIndexRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexRateTreatment val)
                    {
                        this.PaymentStubIndexRateTreatment = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexRateTreatment Get(QuickFix.Fields.PaymentStubIndexRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexRateTreatment val)
                    {
                        return IsSetPaymentStubIndexRateTreatment();
                    }

                    public bool IsSetPaymentStubIndexRateTreatment()
                    {
                        return IsSetField(Tags.PaymentStubIndexRateTreatment);
                    }
                    public QuickFix.Fields.PaymentStubIndexCapRate PaymentStubIndexCapRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexCapRate val = new QuickFix.Fields.PaymentStubIndexCapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexCapRate val)
                    {
                        this.PaymentStubIndexCapRate = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexCapRate Get(QuickFix.Fields.PaymentStubIndexCapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexCapRate val)
                    {
                        return IsSetPaymentStubIndexCapRate();
                    }

                    public bool IsSetPaymentStubIndexCapRate()
                    {
                        return IsSetField(Tags.PaymentStubIndexCapRate);
                    }
                    public QuickFix.Fields.PaymentStubIndexCapRateBuySide PaymentStubIndexCapRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexCapRateBuySide val = new QuickFix.Fields.PaymentStubIndexCapRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexCapRateBuySide val)
                    {
                        this.PaymentStubIndexCapRateBuySide = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexCapRateBuySide Get(QuickFix.Fields.PaymentStubIndexCapRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexCapRateBuySide val)
                    {
                        return IsSetPaymentStubIndexCapRateBuySide();
                    }

                    public bool IsSetPaymentStubIndexCapRateBuySide()
                    {
                        return IsSetField(Tags.PaymentStubIndexCapRateBuySide);
                    }
                    public QuickFix.Fields.PaymentStubIndexCapRateSellSide PaymentStubIndexCapRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexCapRateSellSide val = new QuickFix.Fields.PaymentStubIndexCapRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexCapRateSellSide val)
                    {
                        this.PaymentStubIndexCapRateSellSide = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexCapRateSellSide Get(QuickFix.Fields.PaymentStubIndexCapRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexCapRateSellSide val)
                    {
                        return IsSetPaymentStubIndexCapRateSellSide();
                    }

                    public bool IsSetPaymentStubIndexCapRateSellSide()
                    {
                        return IsSetField(Tags.PaymentStubIndexCapRateSellSide);
                    }
                    public QuickFix.Fields.PaymentStubIndexFloorRate PaymentStubIndexFloorRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexFloorRate val = new QuickFix.Fields.PaymentStubIndexFloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexFloorRate val)
                    {
                        this.PaymentStubIndexFloorRate = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexFloorRate Get(QuickFix.Fields.PaymentStubIndexFloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexFloorRate val)
                    {
                        return IsSetPaymentStubIndexFloorRate();
                    }

                    public bool IsSetPaymentStubIndexFloorRate()
                    {
                        return IsSetField(Tags.PaymentStubIndexFloorRate);
                    }
                    public QuickFix.Fields.PaymentStubIndexFloorRateBuySide PaymentStubIndexFloorRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexFloorRateBuySide val = new QuickFix.Fields.PaymentStubIndexFloorRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexFloorRateBuySide val)
                    {
                        this.PaymentStubIndexFloorRateBuySide = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexFloorRateBuySide Get(QuickFix.Fields.PaymentStubIndexFloorRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexFloorRateBuySide val)
                    {
                        return IsSetPaymentStubIndexFloorRateBuySide();
                    }

                    public bool IsSetPaymentStubIndexFloorRateBuySide()
                    {
                        return IsSetField(Tags.PaymentStubIndexFloorRateBuySide);
                    }
                    public QuickFix.Fields.PaymentStubIndexFloorRateSellSide PaymentStubIndexFloorRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndexFloorRateSellSide val = new QuickFix.Fields.PaymentStubIndexFloorRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndexFloorRateSellSide val)
                    {
                        this.PaymentStubIndexFloorRateSellSide = val;
                    }

                    public QuickFix.Fields.PaymentStubIndexFloorRateSellSide Get(QuickFix.Fields.PaymentStubIndexFloorRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndexFloorRateSellSide val)
                    {
                        return IsSetPaymentStubIndexFloorRateSellSide();
                    }

                    public bool IsSetPaymentStubIndexFloorRateSellSide()
                    {
                        return IsSetField(Tags.PaymentStubIndexFloorRateSellSide);
                    }
                    public QuickFix.Fields.PaymentStubIndex2 PaymentStubIndex2
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2 val = new QuickFix.Fields.PaymentStubIndex2();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2 val)
                    {
                        this.PaymentStubIndex2 = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2 Get(QuickFix.Fields.PaymentStubIndex2 val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2 val)
                    {
                        return IsSetPaymentStubIndex2();
                    }

                    public bool IsSetPaymentStubIndex2()
                    {
                        return IsSetField(Tags.PaymentStubIndex2);
                    }
                    public QuickFix.Fields.PaymentStubIndex2Source PaymentStubIndex2Source
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2Source val = new QuickFix.Fields.PaymentStubIndex2Source();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2Source val)
                    {
                        this.PaymentStubIndex2Source = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2Source Get(QuickFix.Fields.PaymentStubIndex2Source val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2Source val)
                    {
                        return IsSetPaymentStubIndex2Source();
                    }

                    public bool IsSetPaymentStubIndex2Source()
                    {
                        return IsSetField(Tags.PaymentStubIndex2Source);
                    }
                    public QuickFix.Fields.PaymentStubIndex2CurvePeriod PaymentStubIndex2CurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2CurvePeriod val = new QuickFix.Fields.PaymentStubIndex2CurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2CurvePeriod val)
                    {
                        this.PaymentStubIndex2CurvePeriod = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2CurvePeriod Get(QuickFix.Fields.PaymentStubIndex2CurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2CurvePeriod val)
                    {
                        return IsSetPaymentStubIndex2CurvePeriod();
                    }

                    public bool IsSetPaymentStubIndex2CurvePeriod()
                    {
                        return IsSetField(Tags.PaymentStubIndex2CurvePeriod);
                    }
                    public QuickFix.Fields.PaymentStubIndex2CurveUnit PaymentStubIndex2CurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2CurveUnit val = new QuickFix.Fields.PaymentStubIndex2CurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2CurveUnit val)
                    {
                        this.PaymentStubIndex2CurveUnit = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2CurveUnit Get(QuickFix.Fields.PaymentStubIndex2CurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2CurveUnit val)
                    {
                        return IsSetPaymentStubIndex2CurveUnit();
                    }

                    public bool IsSetPaymentStubIndex2CurveUnit()
                    {
                        return IsSetField(Tags.PaymentStubIndex2CurveUnit);
                    }
                    public QuickFix.Fields.PaymentStubIndex2RateMultiplier PaymentStubIndex2RateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2RateMultiplier val = new QuickFix.Fields.PaymentStubIndex2RateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2RateMultiplier val)
                    {
                        this.PaymentStubIndex2RateMultiplier = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2RateMultiplier Get(QuickFix.Fields.PaymentStubIndex2RateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2RateMultiplier val)
                    {
                        return IsSetPaymentStubIndex2RateMultiplier();
                    }

                    public bool IsSetPaymentStubIndex2RateMultiplier()
                    {
                        return IsSetField(Tags.PaymentStubIndex2RateMultiplier);
                    }
                    public QuickFix.Fields.PaymentStubIndex2RateSpread PaymentStubIndex2RateSpread
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2RateSpread val = new QuickFix.Fields.PaymentStubIndex2RateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2RateSpread val)
                    {
                        this.PaymentStubIndex2RateSpread = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2RateSpread Get(QuickFix.Fields.PaymentStubIndex2RateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2RateSpread val)
                    {
                        return IsSetPaymentStubIndex2RateSpread();
                    }

                    public bool IsSetPaymentStubIndex2RateSpread()
                    {
                        return IsSetField(Tags.PaymentStubIndex2RateSpread);
                    }
                    public QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType PaymentStubIndex2RateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType val = new QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType val)
                    {
                        this.PaymentStubIndex2RateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType Get(QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2RateSpreadPositionType val)
                    {
                        return IsSetPaymentStubIndex2RateSpreadPositionType();
                    }

                    public bool IsSetPaymentStubIndex2RateSpreadPositionType()
                    {
                        return IsSetField(Tags.PaymentStubIndex2RateSpreadPositionType);
                    }
                    public QuickFix.Fields.PaymentStubIndex2RateTreatment PaymentStubIndex2RateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2RateTreatment val = new QuickFix.Fields.PaymentStubIndex2RateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2RateTreatment val)
                    {
                        this.PaymentStubIndex2RateTreatment = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2RateTreatment Get(QuickFix.Fields.PaymentStubIndex2RateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2RateTreatment val)
                    {
                        return IsSetPaymentStubIndex2RateTreatment();
                    }

                    public bool IsSetPaymentStubIndex2RateTreatment()
                    {
                        return IsSetField(Tags.PaymentStubIndex2RateTreatment);
                    }
                    public QuickFix.Fields.PaymentStubIndex2CapRate PaymentStubIndex2CapRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2CapRate val = new QuickFix.Fields.PaymentStubIndex2CapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2CapRate val)
                    {
                        this.PaymentStubIndex2CapRate = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2CapRate Get(QuickFix.Fields.PaymentStubIndex2CapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2CapRate val)
                    {
                        return IsSetPaymentStubIndex2CapRate();
                    }

                    public bool IsSetPaymentStubIndex2CapRate()
                    {
                        return IsSetField(Tags.PaymentStubIndex2CapRate);
                    }
                    public QuickFix.Fields.PaymentStubIndex2FloorRate PaymentStubIndex2FloorRate
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubIndex2FloorRate val = new QuickFix.Fields.PaymentStubIndex2FloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubIndex2FloorRate val)
                    {
                        this.PaymentStubIndex2FloorRate = val;
                    }

                    public QuickFix.Fields.PaymentStubIndex2FloorRate Get(QuickFix.Fields.PaymentStubIndex2FloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubIndex2FloorRate val)
                    {
                        return IsSetPaymentStubIndex2FloorRate();
                    }

                    public bool IsSetPaymentStubIndex2FloorRate()
                    {
                        return IsSetField(Tags.PaymentStubIndex2FloorRate);
                    }
                    public QuickFix.Fields.PaymentStubStartDateUnadjusted PaymentStubStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateUnadjusted val = new QuickFix.Fields.PaymentStubStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateUnadjusted val)
                    {
                        this.PaymentStubStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateUnadjusted Get(QuickFix.Fields.PaymentStubStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateUnadjusted val)
                    {
                        return IsSetPaymentStubStartDateUnadjusted();
                    }

                    public bool IsSetPaymentStubStartDateUnadjusted()
                    {
                        return IsSetField(Tags.PaymentStubStartDateUnadjusted);
                    }
                    public QuickFix.Fields.PaymentStubStartDateBusinessDayConvention PaymentStubStartDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateBusinessDayConvention val = new QuickFix.Fields.PaymentStubStartDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateBusinessDayConvention val)
                    {
                        this.PaymentStubStartDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateBusinessDayConvention Get(QuickFix.Fields.PaymentStubStartDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateBusinessDayConvention val)
                    {
                        return IsSetPaymentStubStartDateBusinessDayConvention();
                    }

                    public bool IsSetPaymentStubStartDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.PaymentStubStartDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoPaymentStubStartDateBusinessCenters NoPaymentStubStartDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentStubStartDateBusinessCenters val = new QuickFix.Fields.NoPaymentStubStartDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentStubStartDateBusinessCenters val)
                    {
                        this.NoPaymentStubStartDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoPaymentStubStartDateBusinessCenters Get(QuickFix.Fields.NoPaymentStubStartDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentStubStartDateBusinessCenters val)
                    {
                        return IsSetNoPaymentStubStartDateBusinessCenters();
                    }

                    public bool IsSetNoPaymentStubStartDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoPaymentStubStartDateBusinessCenters);
                    }
                    public QuickFix.Fields.PaymentStubStartDateRelativeTo PaymentStubStartDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateRelativeTo val = new QuickFix.Fields.PaymentStubStartDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateRelativeTo val)
                    {
                        this.PaymentStubStartDateRelativeTo = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateRelativeTo Get(QuickFix.Fields.PaymentStubStartDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateRelativeTo val)
                    {
                        return IsSetPaymentStubStartDateRelativeTo();
                    }

                    public bool IsSetPaymentStubStartDateRelativeTo()
                    {
                        return IsSetField(Tags.PaymentStubStartDateRelativeTo);
                    }
                    public QuickFix.Fields.PaymentStubStartDateOffsetPeriod PaymentStubStartDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateOffsetPeriod val = new QuickFix.Fields.PaymentStubStartDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateOffsetPeriod val)
                    {
                        this.PaymentStubStartDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateOffsetPeriod Get(QuickFix.Fields.PaymentStubStartDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateOffsetPeriod val)
                    {
                        return IsSetPaymentStubStartDateOffsetPeriod();
                    }

                    public bool IsSetPaymentStubStartDateOffsetPeriod()
                    {
                        return IsSetField(Tags.PaymentStubStartDateOffsetPeriod);
                    }
                    public QuickFix.Fields.PaymentStubStartDateOffsetUnit PaymentStubStartDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateOffsetUnit val = new QuickFix.Fields.PaymentStubStartDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateOffsetUnit val)
                    {
                        this.PaymentStubStartDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateOffsetUnit Get(QuickFix.Fields.PaymentStubStartDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateOffsetUnit val)
                    {
                        return IsSetPaymentStubStartDateOffsetUnit();
                    }

                    public bool IsSetPaymentStubStartDateOffsetUnit()
                    {
                        return IsSetField(Tags.PaymentStubStartDateOffsetUnit);
                    }
                    public QuickFix.Fields.PaymentStubStartDateOffsetDayType PaymentStubStartDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateOffsetDayType val = new QuickFix.Fields.PaymentStubStartDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateOffsetDayType val)
                    {
                        this.PaymentStubStartDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateOffsetDayType Get(QuickFix.Fields.PaymentStubStartDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateOffsetDayType val)
                    {
                        return IsSetPaymentStubStartDateOffsetDayType();
                    }

                    public bool IsSetPaymentStubStartDateOffsetDayType()
                    {
                        return IsSetField(Tags.PaymentStubStartDateOffsetDayType);
                    }
                    public QuickFix.Fields.PaymentStubStartDateAdjusted PaymentStubStartDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubStartDateAdjusted val = new QuickFix.Fields.PaymentStubStartDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubStartDateAdjusted val)
                    {
                        this.PaymentStubStartDateAdjusted = val;
                    }

                    public QuickFix.Fields.PaymentStubStartDateAdjusted Get(QuickFix.Fields.PaymentStubStartDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubStartDateAdjusted val)
                    {
                        return IsSetPaymentStubStartDateAdjusted();
                    }

                    public bool IsSetPaymentStubStartDateAdjusted()
                    {
                        return IsSetField(Tags.PaymentStubStartDateAdjusted);
                    }
                    public QuickFix.Fields.PaymentStubEndDateUnadjusted PaymentStubEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateUnadjusted val = new QuickFix.Fields.PaymentStubEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateUnadjusted val)
                    {
                        this.PaymentStubEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateUnadjusted Get(QuickFix.Fields.PaymentStubEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateUnadjusted val)
                    {
                        return IsSetPaymentStubEndDateUnadjusted();
                    }

                    public bool IsSetPaymentStubEndDateUnadjusted()
                    {
                        return IsSetField(Tags.PaymentStubEndDateUnadjusted);
                    }
                    public QuickFix.Fields.PaymentStubEndDateBusinessDayConvention PaymentStubEndDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateBusinessDayConvention val = new QuickFix.Fields.PaymentStubEndDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateBusinessDayConvention val)
                    {
                        this.PaymentStubEndDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateBusinessDayConvention Get(QuickFix.Fields.PaymentStubEndDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateBusinessDayConvention val)
                    {
                        return IsSetPaymentStubEndDateBusinessDayConvention();
                    }

                    public bool IsSetPaymentStubEndDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.PaymentStubEndDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoPaymentStubEndDateBusinessCenters NoPaymentStubEndDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoPaymentStubEndDateBusinessCenters val = new QuickFix.Fields.NoPaymentStubEndDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoPaymentStubEndDateBusinessCenters val)
                    {
                        this.NoPaymentStubEndDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoPaymentStubEndDateBusinessCenters Get(QuickFix.Fields.NoPaymentStubEndDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoPaymentStubEndDateBusinessCenters val)
                    {
                        return IsSetNoPaymentStubEndDateBusinessCenters();
                    }

                    public bool IsSetNoPaymentStubEndDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoPaymentStubEndDateBusinessCenters);
                    }
                    public QuickFix.Fields.PaymentStubEndDateRelativeTo PaymentStubEndDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateRelativeTo val = new QuickFix.Fields.PaymentStubEndDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateRelativeTo val)
                    {
                        this.PaymentStubEndDateRelativeTo = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateRelativeTo Get(QuickFix.Fields.PaymentStubEndDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateRelativeTo val)
                    {
                        return IsSetPaymentStubEndDateRelativeTo();
                    }

                    public bool IsSetPaymentStubEndDateRelativeTo()
                    {
                        return IsSetField(Tags.PaymentStubEndDateRelativeTo);
                    }
                    public QuickFix.Fields.PaymentStubEndDateOffsetPeriod PaymentStubEndDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateOffsetPeriod val = new QuickFix.Fields.PaymentStubEndDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateOffsetPeriod val)
                    {
                        this.PaymentStubEndDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateOffsetPeriod Get(QuickFix.Fields.PaymentStubEndDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateOffsetPeriod val)
                    {
                        return IsSetPaymentStubEndDateOffsetPeriod();
                    }

                    public bool IsSetPaymentStubEndDateOffsetPeriod()
                    {
                        return IsSetField(Tags.PaymentStubEndDateOffsetPeriod);
                    }
                    public QuickFix.Fields.PaymentStubEndDateOffsetUnit PaymentStubEndDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateOffsetUnit val = new QuickFix.Fields.PaymentStubEndDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateOffsetUnit val)
                    {
                        this.PaymentStubEndDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateOffsetUnit Get(QuickFix.Fields.PaymentStubEndDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateOffsetUnit val)
                    {
                        return IsSetPaymentStubEndDateOffsetUnit();
                    }

                    public bool IsSetPaymentStubEndDateOffsetUnit()
                    {
                        return IsSetField(Tags.PaymentStubEndDateOffsetUnit);
                    }
                    public QuickFix.Fields.PaymentStubEndDateOffsetDayType PaymentStubEndDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateOffsetDayType val = new QuickFix.Fields.PaymentStubEndDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateOffsetDayType val)
                    {
                        this.PaymentStubEndDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateOffsetDayType Get(QuickFix.Fields.PaymentStubEndDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateOffsetDayType val)
                    {
                        return IsSetPaymentStubEndDateOffsetDayType();
                    }

                    public bool IsSetPaymentStubEndDateOffsetDayType()
                    {
                        return IsSetField(Tags.PaymentStubEndDateOffsetDayType);
                    }
                    public QuickFix.Fields.PaymentStubEndDateAdjusted PaymentStubEndDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.PaymentStubEndDateAdjusted val = new QuickFix.Fields.PaymentStubEndDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PaymentStubEndDateAdjusted val)
                    {
                        this.PaymentStubEndDateAdjusted = val;
                    }

                    public QuickFix.Fields.PaymentStubEndDateAdjusted Get(QuickFix.Fields.PaymentStubEndDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PaymentStubEndDateAdjusted val)
                    {
                        return IsSetPaymentStubEndDateAdjusted();
                    }

                    public bool IsSetPaymentStubEndDateAdjusted()
                    {
                        return IsSetField(Tags.PaymentStubEndDateAdjusted);
                    }
                    public class NoPaymentStubStartDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentStubStartDateBusinessCenter, 0 };

                        public NoPaymentStubStartDateBusinessCentersGroup()
                          : base(Tags.NoPaymentStubStartDateBusinessCenters, Tags.PaymentStubStartDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentStubStartDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentStubStartDateBusinessCenter PaymentStubStartDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.PaymentStubStartDateBusinessCenter val = new QuickFix.Fields.PaymentStubStartDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentStubStartDateBusinessCenter val)
                        {
                            this.PaymentStubStartDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.PaymentStubStartDateBusinessCenter Get(QuickFix.Fields.PaymentStubStartDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentStubStartDateBusinessCenter val)
                        {
                            return IsSetPaymentStubStartDateBusinessCenter();
                        }

                        public bool IsSetPaymentStubStartDateBusinessCenter()
                        {
                            return IsSetField(Tags.PaymentStubStartDateBusinessCenter);
                        }

                    }
                    public class NoPaymentStubEndDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.PaymentStubEndDateBusinessCenter, 0 };

                        public NoPaymentStubEndDateBusinessCentersGroup()
                          : base(Tags.NoPaymentStubEndDateBusinessCenters, Tags.PaymentStubEndDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoPaymentStubEndDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.PaymentStubEndDateBusinessCenter PaymentStubEndDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.PaymentStubEndDateBusinessCenter val = new QuickFix.Fields.PaymentStubEndDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.PaymentStubEndDateBusinessCenter val)
                        {
                            this.PaymentStubEndDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.PaymentStubEndDateBusinessCenter Get(QuickFix.Fields.PaymentStubEndDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.PaymentStubEndDateBusinessCenter val)
                        {
                            return IsSetPaymentStubEndDateBusinessCenter();
                        }

                        public bool IsSetPaymentStubEndDateBusinessCenter()
                        {
                            return IsSetField(Tags.PaymentStubEndDateBusinessCenter);
                        }

                    }
                }
                public class NoStreamCommodityAltIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCommodityAltID, Tags.StreamCommodityAltIDSource, 0 };

                    public NoStreamCommodityAltIDsGroup()
                      : base(Tags.NoStreamCommodityAltIDs, Tags.StreamCommodityAltID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCommodityAltIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCommodityAltID StreamCommodityAltID
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommodityAltID val = new QuickFix.Fields.StreamCommodityAltID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommodityAltID val)
                    {
                        this.StreamCommodityAltID = val;
                    }

                    public QuickFix.Fields.StreamCommodityAltID Get(QuickFix.Fields.StreamCommodityAltID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommodityAltID val)
                    {
                        return IsSetStreamCommodityAltID();
                    }

                    public bool IsSetStreamCommodityAltID()
                    {
                        return IsSetField(Tags.StreamCommodityAltID);
                    }
                    public QuickFix.Fields.StreamCommodityAltIDSource StreamCommodityAltIDSource
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommodityAltIDSource val = new QuickFix.Fields.StreamCommodityAltIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommodityAltIDSource val)
                    {
                        this.StreamCommodityAltIDSource = val;
                    }

                    public QuickFix.Fields.StreamCommodityAltIDSource Get(QuickFix.Fields.StreamCommodityAltIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommodityAltIDSource val)
                    {
                        return IsSetStreamCommodityAltIDSource();
                    }

                    public bool IsSetStreamCommodityAltIDSource()
                    {
                        return IsSetField(Tags.StreamCommodityAltIDSource);
                    }

                }
                public class NoStreamAssetAttributesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamAssetAttributeType, Tags.StreamAssetAttributeValue, Tags.StreamAssetAttributeLimit, 0 };

                    public NoStreamAssetAttributesGroup()
                      : base(Tags.NoStreamAssetAttributes, Tags.StreamAssetAttributeType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamAssetAttributesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamAssetAttributeType StreamAssetAttributeType
                    {
                        get
                        {
                            QuickFix.Fields.StreamAssetAttributeType val = new QuickFix.Fields.StreamAssetAttributeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamAssetAttributeType val)
                    {
                        this.StreamAssetAttributeType = val;
                    }

                    public QuickFix.Fields.StreamAssetAttributeType Get(QuickFix.Fields.StreamAssetAttributeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamAssetAttributeType val)
                    {
                        return IsSetStreamAssetAttributeType();
                    }

                    public bool IsSetStreamAssetAttributeType()
                    {
                        return IsSetField(Tags.StreamAssetAttributeType);
                    }
                    public QuickFix.Fields.StreamAssetAttributeValue StreamAssetAttributeValue
                    {
                        get
                        {
                            QuickFix.Fields.StreamAssetAttributeValue val = new QuickFix.Fields.StreamAssetAttributeValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamAssetAttributeValue val)
                    {
                        this.StreamAssetAttributeValue = val;
                    }

                    public QuickFix.Fields.StreamAssetAttributeValue Get(QuickFix.Fields.StreamAssetAttributeValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamAssetAttributeValue val)
                    {
                        return IsSetStreamAssetAttributeValue();
                    }

                    public bool IsSetStreamAssetAttributeValue()
                    {
                        return IsSetField(Tags.StreamAssetAttributeValue);
                    }
                    public QuickFix.Fields.StreamAssetAttributeLimit StreamAssetAttributeLimit
                    {
                        get
                        {
                            QuickFix.Fields.StreamAssetAttributeLimit val = new QuickFix.Fields.StreamAssetAttributeLimit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamAssetAttributeLimit val)
                    {
                        this.StreamAssetAttributeLimit = val;
                    }

                    public QuickFix.Fields.StreamAssetAttributeLimit Get(QuickFix.Fields.StreamAssetAttributeLimit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamAssetAttributeLimit val)
                    {
                        return IsSetStreamAssetAttributeLimit();
                    }

                    public bool IsSetStreamAssetAttributeLimit()
                    {
                        return IsSetField(Tags.StreamAssetAttributeLimit);
                    }

                }
                public class NoStreamCommodityDataSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCommodityDataSourceID, Tags.StreamCommodityDataSourceIDType, 0 };

                    public NoStreamCommodityDataSourcesGroup()
                      : base(Tags.NoStreamCommodityDataSources, Tags.StreamCommodityDataSourceID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCommodityDataSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCommodityDataSourceID StreamCommodityDataSourceID
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommodityDataSourceID val = new QuickFix.Fields.StreamCommodityDataSourceID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommodityDataSourceID val)
                    {
                        this.StreamCommodityDataSourceID = val;
                    }

                    public QuickFix.Fields.StreamCommodityDataSourceID Get(QuickFix.Fields.StreamCommodityDataSourceID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommodityDataSourceID val)
                    {
                        return IsSetStreamCommodityDataSourceID();
                    }

                    public bool IsSetStreamCommodityDataSourceID()
                    {
                        return IsSetField(Tags.StreamCommodityDataSourceID);
                    }
                    public QuickFix.Fields.StreamCommodityDataSourceIDType StreamCommodityDataSourceIDType
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommodityDataSourceIDType val = new QuickFix.Fields.StreamCommodityDataSourceIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommodityDataSourceIDType val)
                    {
                        this.StreamCommodityDataSourceIDType = val;
                    }

                    public QuickFix.Fields.StreamCommodityDataSourceIDType Get(QuickFix.Fields.StreamCommodityDataSourceIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommodityDataSourceIDType val)
                    {
                        return IsSetStreamCommodityDataSourceIDType();
                    }

                    public bool IsSetStreamCommodityDataSourceIDType()
                    {
                        return IsSetField(Tags.StreamCommodityDataSourceIDType);
                    }

                }
                public class NoStreamCommoditySettlBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCommoditySettlBusinessCenter, 0 };

                    public NoStreamCommoditySettlBusinessCentersGroup()
                      : base(Tags.NoStreamCommoditySettlBusinessCenters, Tags.StreamCommoditySettlBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCommoditySettlBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCommoditySettlBusinessCenter StreamCommoditySettlBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlBusinessCenter val = new QuickFix.Fields.StreamCommoditySettlBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlBusinessCenter val)
                    {
                        this.StreamCommoditySettlBusinessCenter = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlBusinessCenter Get(QuickFix.Fields.StreamCommoditySettlBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlBusinessCenter val)
                    {
                        return IsSetStreamCommoditySettlBusinessCenter();
                    }

                    public bool IsSetStreamCommoditySettlBusinessCenter()
                    {
                        return IsSetField(Tags.StreamCommoditySettlBusinessCenter);
                    }

                }
                public class NoStreamCommoditySettlPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.StreamCommoditySettlCountry, Tags.StreamCommoditySettlTimeZone, Tags.StreamCommoditySettlFlowType, Tags.StreamCommoditySettlPeriodNotional, Tags.StreamCommoditySettlPeriodNotionalUnitOfMeasure, Tags.StreamCommoditySettlPeriodFrequencyPeriod, Tags.StreamCommoditySettlPeriodFrequencyUnit, Tags.StreamCommoditySettlPeriodPrice, Tags.StreamCommoditySettlPeriodPriceUnitOfMeasure, Tags.StreamCommoditySettlPeriodPriceCurrency, Tags.StreamCommoditySettlHolidaysProcessingInstruction, Tags.NoStreamCommoditySettlDays, Tags.StreamCommoditySettlPeriodXID, Tags.StreamCommoditySettlPeriodXIDRef, 0 };

                    public NoStreamCommoditySettlPeriodsGroup()
                      : base(Tags.NoStreamCommoditySettlPeriods, Tags.StreamCommoditySettlCountry, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoStreamCommoditySettlPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.StreamCommoditySettlCountry StreamCommoditySettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlCountry val = new QuickFix.Fields.StreamCommoditySettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlCountry val)
                    {
                        this.StreamCommoditySettlCountry = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlCountry Get(QuickFix.Fields.StreamCommoditySettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlCountry val)
                    {
                        return IsSetStreamCommoditySettlCountry();
                    }

                    public bool IsSetStreamCommoditySettlCountry()
                    {
                        return IsSetField(Tags.StreamCommoditySettlCountry);
                    }
                    public QuickFix.Fields.StreamCommoditySettlTimeZone StreamCommoditySettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlTimeZone val = new QuickFix.Fields.StreamCommoditySettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlTimeZone val)
                    {
                        this.StreamCommoditySettlTimeZone = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlTimeZone Get(QuickFix.Fields.StreamCommoditySettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlTimeZone val)
                    {
                        return IsSetStreamCommoditySettlTimeZone();
                    }

                    public bool IsSetStreamCommoditySettlTimeZone()
                    {
                        return IsSetField(Tags.StreamCommoditySettlTimeZone);
                    }
                    public QuickFix.Fields.StreamCommoditySettlFlowType StreamCommoditySettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlFlowType val = new QuickFix.Fields.StreamCommoditySettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlFlowType val)
                    {
                        this.StreamCommoditySettlFlowType = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlFlowType Get(QuickFix.Fields.StreamCommoditySettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlFlowType val)
                    {
                        return IsSetStreamCommoditySettlFlowType();
                    }

                    public bool IsSetStreamCommoditySettlFlowType()
                    {
                        return IsSetField(Tags.StreamCommoditySettlFlowType);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodNotional StreamCommoditySettlPeriodNotional
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodNotional val = new QuickFix.Fields.StreamCommoditySettlPeriodNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodNotional val)
                    {
                        this.StreamCommoditySettlPeriodNotional = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodNotional Get(QuickFix.Fields.StreamCommoditySettlPeriodNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodNotional val)
                    {
                        return IsSetStreamCommoditySettlPeriodNotional();
                    }

                    public bool IsSetStreamCommoditySettlPeriodNotional()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodNotional);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure StreamCommoditySettlPeriodNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure val = new QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        this.StreamCommoditySettlPeriodNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure Get(QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        return IsSetStreamCommoditySettlPeriodNotionalUnitOfMeasure();
                    }

                    public bool IsSetStreamCommoditySettlPeriodNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod StreamCommoditySettlPeriodFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod val = new QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        this.StreamCommoditySettlPeriodFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod Get(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        return IsSetStreamCommoditySettlPeriodFrequencyPeriod();
                    }

                    public bool IsSetStreamCommoditySettlPeriodFrequencyPeriod()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodFrequencyPeriod);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit StreamCommoditySettlPeriodFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit val = new QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        this.StreamCommoditySettlPeriodFrequencyUnit = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit Get(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        return IsSetStreamCommoditySettlPeriodFrequencyUnit();
                    }

                    public bool IsSetStreamCommoditySettlPeriodFrequencyUnit()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodFrequencyUnit);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodPrice StreamCommoditySettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodPrice val = new QuickFix.Fields.StreamCommoditySettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodPrice val)
                    {
                        this.StreamCommoditySettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodPrice Get(QuickFix.Fields.StreamCommoditySettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodPrice val)
                    {
                        return IsSetStreamCommoditySettlPeriodPrice();
                    }

                    public bool IsSetStreamCommoditySettlPeriodPrice()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodPrice);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure StreamCommoditySettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        this.StreamCommoditySettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetStreamCommoditySettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetStreamCommoditySettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency StreamCommoditySettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency val = new QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency val)
                    {
                        this.StreamCommoditySettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency Get(QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodPriceCurrency val)
                    {
                        return IsSetStreamCommoditySettlPeriodPriceCurrency();
                    }

                    public bool IsSetStreamCommoditySettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction StreamCommoditySettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction val = new QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        this.StreamCommoditySettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction Get(QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        return IsSetStreamCommoditySettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetStreamCommoditySettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.StreamCommoditySettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoStreamCommoditySettlDays NoStreamCommoditySettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoStreamCommoditySettlDays val = new QuickFix.Fields.NoStreamCommoditySettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoStreamCommoditySettlDays val)
                    {
                        this.NoStreamCommoditySettlDays = val;
                    }

                    public QuickFix.Fields.NoStreamCommoditySettlDays Get(QuickFix.Fields.NoStreamCommoditySettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoStreamCommoditySettlDays val)
                    {
                        return IsSetNoStreamCommoditySettlDays();
                    }

                    public bool IsSetNoStreamCommoditySettlDays()
                    {
                        return IsSetField(Tags.NoStreamCommoditySettlDays);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodXID StreamCommoditySettlPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodXID val = new QuickFix.Fields.StreamCommoditySettlPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodXID val)
                    {
                        this.StreamCommoditySettlPeriodXID = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodXID Get(QuickFix.Fields.StreamCommoditySettlPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodXID val)
                    {
                        return IsSetStreamCommoditySettlPeriodXID();
                    }

                    public bool IsSetStreamCommoditySettlPeriodXID()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodXID);
                    }
                    public QuickFix.Fields.StreamCommoditySettlPeriodXIDRef StreamCommoditySettlPeriodXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.StreamCommoditySettlPeriodXIDRef val = new QuickFix.Fields.StreamCommoditySettlPeriodXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.StreamCommoditySettlPeriodXIDRef val)
                    {
                        this.StreamCommoditySettlPeriodXIDRef = val;
                    }

                    public QuickFix.Fields.StreamCommoditySettlPeriodXIDRef Get(QuickFix.Fields.StreamCommoditySettlPeriodXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.StreamCommoditySettlPeriodXIDRef val)
                    {
                        return IsSetStreamCommoditySettlPeriodXIDRef();
                    }

                    public bool IsSetStreamCommoditySettlPeriodXIDRef()
                    {
                        return IsSetField(Tags.StreamCommoditySettlPeriodXIDRef);
                    }
                    public class NoStreamCommoditySettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.StreamCommoditySettlDay, Tags.StreamCommoditySettlTotalHours, Tags.NoStreamCommoditySettlTimes, 0 };

                        public NoStreamCommoditySettlDaysGroup()
                          : base(Tags.NoStreamCommoditySettlDays, Tags.StreamCommoditySettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoStreamCommoditySettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.StreamCommoditySettlDay StreamCommoditySettlDay
                        {
                            get
                            {
                                QuickFix.Fields.StreamCommoditySettlDay val = new QuickFix.Fields.StreamCommoditySettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.StreamCommoditySettlDay val)
                        {
                            this.StreamCommoditySettlDay = val;
                        }

                        public QuickFix.Fields.StreamCommoditySettlDay Get(QuickFix.Fields.StreamCommoditySettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.StreamCommoditySettlDay val)
                        {
                            return IsSetStreamCommoditySettlDay();
                        }

                        public bool IsSetStreamCommoditySettlDay()
                        {
                            return IsSetField(Tags.StreamCommoditySettlDay);
                        }
                        public QuickFix.Fields.StreamCommoditySettlTotalHours StreamCommoditySettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.StreamCommoditySettlTotalHours val = new QuickFix.Fields.StreamCommoditySettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.StreamCommoditySettlTotalHours val)
                        {
                            this.StreamCommoditySettlTotalHours = val;
                        }

                        public QuickFix.Fields.StreamCommoditySettlTotalHours Get(QuickFix.Fields.StreamCommoditySettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.StreamCommoditySettlTotalHours val)
                        {
                            return IsSetStreamCommoditySettlTotalHours();
                        }

                        public bool IsSetStreamCommoditySettlTotalHours()
                        {
                            return IsSetField(Tags.StreamCommoditySettlTotalHours);
                        }
                        public QuickFix.Fields.NoStreamCommoditySettlTimes NoStreamCommoditySettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoStreamCommoditySettlTimes val = new QuickFix.Fields.NoStreamCommoditySettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoStreamCommoditySettlTimes val)
                        {
                            this.NoStreamCommoditySettlTimes = val;
                        }

                        public QuickFix.Fields.NoStreamCommoditySettlTimes Get(QuickFix.Fields.NoStreamCommoditySettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoStreamCommoditySettlTimes val)
                        {
                            return IsSetNoStreamCommoditySettlTimes();
                        }

                        public bool IsSetNoStreamCommoditySettlTimes()
                        {
                            return IsSetField(Tags.NoStreamCommoditySettlTimes);
                        }
                        public class NoStreamCommoditySettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.StreamCommoditySettlStart, Tags.StreamCommoditySettlEnd, Tags.StreamCommoditySettlTimeType, 0 };

                            public NoStreamCommoditySettlTimesGroup()
                              : base(Tags.NoStreamCommoditySettlTimes, Tags.StreamCommoditySettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoStreamCommoditySettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.StreamCommoditySettlStart StreamCommoditySettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.StreamCommoditySettlStart val = new QuickFix.Fields.StreamCommoditySettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.StreamCommoditySettlStart val)
                            {
                                this.StreamCommoditySettlStart = val;
                            }

                            public QuickFix.Fields.StreamCommoditySettlStart Get(QuickFix.Fields.StreamCommoditySettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.StreamCommoditySettlStart val)
                            {
                                return IsSetStreamCommoditySettlStart();
                            }

                            public bool IsSetStreamCommoditySettlStart()
                            {
                                return IsSetField(Tags.StreamCommoditySettlStart);
                            }
                            public QuickFix.Fields.StreamCommoditySettlEnd StreamCommoditySettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.StreamCommoditySettlEnd val = new QuickFix.Fields.StreamCommoditySettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.StreamCommoditySettlEnd val)
                            {
                                this.StreamCommoditySettlEnd = val;
                            }

                            public QuickFix.Fields.StreamCommoditySettlEnd Get(QuickFix.Fields.StreamCommoditySettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.StreamCommoditySettlEnd val)
                            {
                                return IsSetStreamCommoditySettlEnd();
                            }

                            public bool IsSetStreamCommoditySettlEnd()
                            {
                                return IsSetField(Tags.StreamCommoditySettlEnd);
                            }
                            public QuickFix.Fields.StreamCommoditySettlTimeType StreamCommoditySettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.StreamCommoditySettlTimeType val = new QuickFix.Fields.StreamCommoditySettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.StreamCommoditySettlTimeType val)
                            {
                                this.StreamCommoditySettlTimeType = val;
                            }

                            public QuickFix.Fields.StreamCommoditySettlTimeType Get(QuickFix.Fields.StreamCommoditySettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.StreamCommoditySettlTimeType val)
                            {
                                return IsSetStreamCommoditySettlTimeType();
                            }

                            public bool IsSetStreamCommoditySettlTimeType()
                            {
                                return IsSetField(Tags.StreamCommoditySettlTimeType);
                            }

                        }
                    }
                }
                public class NoDeliveryStreamCommoditySourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DeliveryStreamCommoditySource, 0 };

                    public NoDeliveryStreamCommoditySourcesGroup()
                      : base(Tags.NoDeliveryStreamCommoditySources, Tags.DeliveryStreamCommoditySource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDeliveryStreamCommoditySourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DeliveryStreamCommoditySource DeliveryStreamCommoditySource
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryStreamCommoditySource val = new QuickFix.Fields.DeliveryStreamCommoditySource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryStreamCommoditySource val)
                    {
                        this.DeliveryStreamCommoditySource = val;
                    }

                    public QuickFix.Fields.DeliveryStreamCommoditySource Get(QuickFix.Fields.DeliveryStreamCommoditySource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryStreamCommoditySource val)
                    {
                        return IsSetDeliveryStreamCommoditySource();
                    }

                    public bool IsSetDeliveryStreamCommoditySource()
                    {
                        return IsSetField(Tags.DeliveryStreamCommoditySource);
                    }

                }
                public class NoDeliveryStreamCyclesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DeliveryStreamCycleDesc, Tags.EncodedDeliveryStreamCycleDescLen, Tags.EncodedDeliveryStreamCycleDesc, 0 };

                    public NoDeliveryStreamCyclesGroup()
                      : base(Tags.NoDeliveryStreamCycles, Tags.DeliveryStreamCycleDesc, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDeliveryStreamCyclesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DeliveryStreamCycleDesc DeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryStreamCycleDesc val = new QuickFix.Fields.DeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryStreamCycleDesc val)
                    {
                        this.DeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.DeliveryStreamCycleDesc Get(QuickFix.Fields.DeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryStreamCycleDesc val)
                    {
                        return IsSetDeliveryStreamCycleDesc();
                    }

                    public bool IsSetDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.DeliveryStreamCycleDesc);
                    }
                    public QuickFix.Fields.EncodedDeliveryStreamCycleDescLen EncodedDeliveryStreamCycleDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedDeliveryStreamCycleDescLen val = new QuickFix.Fields.EncodedDeliveryStreamCycleDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedDeliveryStreamCycleDescLen val)
                    {
                        this.EncodedDeliveryStreamCycleDescLen = val;
                    }

                    public QuickFix.Fields.EncodedDeliveryStreamCycleDescLen Get(QuickFix.Fields.EncodedDeliveryStreamCycleDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedDeliveryStreamCycleDescLen val)
                    {
                        return IsSetEncodedDeliveryStreamCycleDescLen();
                    }

                    public bool IsSetEncodedDeliveryStreamCycleDescLen()
                    {
                        return IsSetField(Tags.EncodedDeliveryStreamCycleDescLen);
                    }
                    public QuickFix.Fields.EncodedDeliveryStreamCycleDesc EncodedDeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedDeliveryStreamCycleDesc val = new QuickFix.Fields.EncodedDeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedDeliveryStreamCycleDesc val)
                    {
                        this.EncodedDeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.EncodedDeliveryStreamCycleDesc Get(QuickFix.Fields.EncodedDeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedDeliveryStreamCycleDesc val)
                    {
                        return IsSetEncodedDeliveryStreamCycleDesc();
                    }

                    public bool IsSetEncodedDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.EncodedDeliveryStreamCycleDesc);
                    }

                }
                public class NoDeliverySchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.DeliveryScheduleType, Tags.DeliveryScheduleXID, Tags.DeliveryScheduleNotional, Tags.DeliveryScheduleNotionalUnitOfMeasure, Tags.DeliveryScheduleNotionalCommodityFrequency, Tags.DeliveryScheduleNegativeTolerance, Tags.DeliverySchedulePositiveTolerance, Tags.DeliveryScheduleToleranceUnitOfMeasure, Tags.DeliveryScheduleToleranceType, Tags.DeliveryScheduleSettlCountry, Tags.DeliveryScheduleSettlTimeZone, Tags.DeliveryScheduleSettlFlowType, Tags.DeliveryScheduleSettlHolidaysProcessingInstruction, Tags.NoDeliveryScheduleSettlDays, 0 };

                    public NoDeliverySchedulesGroup()
                      : base(Tags.NoDeliverySchedules, Tags.DeliveryScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoDeliverySchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.DeliveryScheduleType DeliveryScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleType val = new QuickFix.Fields.DeliveryScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleType val)
                    {
                        this.DeliveryScheduleType = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleType Get(QuickFix.Fields.DeliveryScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleType val)
                    {
                        return IsSetDeliveryScheduleType();
                    }

                    public bool IsSetDeliveryScheduleType()
                    {
                        return IsSetField(Tags.DeliveryScheduleType);
                    }
                    public QuickFix.Fields.DeliveryScheduleXID DeliveryScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleXID val = new QuickFix.Fields.DeliveryScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleXID val)
                    {
                        this.DeliveryScheduleXID = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleXID Get(QuickFix.Fields.DeliveryScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleXID val)
                    {
                        return IsSetDeliveryScheduleXID();
                    }

                    public bool IsSetDeliveryScheduleXID()
                    {
                        return IsSetField(Tags.DeliveryScheduleXID);
                    }
                    public QuickFix.Fields.DeliveryScheduleNotional DeliveryScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleNotional val = new QuickFix.Fields.DeliveryScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleNotional val)
                    {
                        this.DeliveryScheduleNotional = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleNotional Get(QuickFix.Fields.DeliveryScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleNotional val)
                    {
                        return IsSetDeliveryScheduleNotional();
                    }

                    public bool IsSetDeliveryScheduleNotional()
                    {
                        return IsSetField(Tags.DeliveryScheduleNotional);
                    }
                    public QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure DeliveryScheduleNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure val = new QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        this.DeliveryScheduleNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure Get(QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        return IsSetDeliveryScheduleNotionalUnitOfMeasure();
                    }

                    public bool IsSetDeliveryScheduleNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.DeliveryScheduleNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency DeliveryScheduleNotionalCommodityFrequency
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency val = new QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency val)
                    {
                        this.DeliveryScheduleNotionalCommodityFrequency = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency Get(QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleNotionalCommodityFrequency val)
                    {
                        return IsSetDeliveryScheduleNotionalCommodityFrequency();
                    }

                    public bool IsSetDeliveryScheduleNotionalCommodityFrequency()
                    {
                        return IsSetField(Tags.DeliveryScheduleNotionalCommodityFrequency);
                    }
                    public QuickFix.Fields.DeliveryScheduleNegativeTolerance DeliveryScheduleNegativeTolerance
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleNegativeTolerance val = new QuickFix.Fields.DeliveryScheduleNegativeTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleNegativeTolerance val)
                    {
                        this.DeliveryScheduleNegativeTolerance = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleNegativeTolerance Get(QuickFix.Fields.DeliveryScheduleNegativeTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleNegativeTolerance val)
                    {
                        return IsSetDeliveryScheduleNegativeTolerance();
                    }

                    public bool IsSetDeliveryScheduleNegativeTolerance()
                    {
                        return IsSetField(Tags.DeliveryScheduleNegativeTolerance);
                    }
                    public QuickFix.Fields.DeliverySchedulePositiveTolerance DeliverySchedulePositiveTolerance
                    {
                        get
                        {
                            QuickFix.Fields.DeliverySchedulePositiveTolerance val = new QuickFix.Fields.DeliverySchedulePositiveTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliverySchedulePositiveTolerance val)
                    {
                        this.DeliverySchedulePositiveTolerance = val;
                    }

                    public QuickFix.Fields.DeliverySchedulePositiveTolerance Get(QuickFix.Fields.DeliverySchedulePositiveTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliverySchedulePositiveTolerance val)
                    {
                        return IsSetDeliverySchedulePositiveTolerance();
                    }

                    public bool IsSetDeliverySchedulePositiveTolerance()
                    {
                        return IsSetField(Tags.DeliverySchedulePositiveTolerance);
                    }
                    public QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure DeliveryScheduleToleranceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure val = new QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        this.DeliveryScheduleToleranceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure Get(QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        return IsSetDeliveryScheduleToleranceUnitOfMeasure();
                    }

                    public bool IsSetDeliveryScheduleToleranceUnitOfMeasure()
                    {
                        return IsSetField(Tags.DeliveryScheduleToleranceUnitOfMeasure);
                    }
                    public QuickFix.Fields.DeliveryScheduleToleranceType DeliveryScheduleToleranceType
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleToleranceType val = new QuickFix.Fields.DeliveryScheduleToleranceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleToleranceType val)
                    {
                        this.DeliveryScheduleToleranceType = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleToleranceType Get(QuickFix.Fields.DeliveryScheduleToleranceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleToleranceType val)
                    {
                        return IsSetDeliveryScheduleToleranceType();
                    }

                    public bool IsSetDeliveryScheduleToleranceType()
                    {
                        return IsSetField(Tags.DeliveryScheduleToleranceType);
                    }
                    public QuickFix.Fields.DeliveryScheduleSettlCountry DeliveryScheduleSettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleSettlCountry val = new QuickFix.Fields.DeliveryScheduleSettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleSettlCountry val)
                    {
                        this.DeliveryScheduleSettlCountry = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleSettlCountry Get(QuickFix.Fields.DeliveryScheduleSettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlCountry val)
                    {
                        return IsSetDeliveryScheduleSettlCountry();
                    }

                    public bool IsSetDeliveryScheduleSettlCountry()
                    {
                        return IsSetField(Tags.DeliveryScheduleSettlCountry);
                    }
                    public QuickFix.Fields.DeliveryScheduleSettlTimeZone DeliveryScheduleSettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleSettlTimeZone val = new QuickFix.Fields.DeliveryScheduleSettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleSettlTimeZone val)
                    {
                        this.DeliveryScheduleSettlTimeZone = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleSettlTimeZone Get(QuickFix.Fields.DeliveryScheduleSettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlTimeZone val)
                    {
                        return IsSetDeliveryScheduleSettlTimeZone();
                    }

                    public bool IsSetDeliveryScheduleSettlTimeZone()
                    {
                        return IsSetField(Tags.DeliveryScheduleSettlTimeZone);
                    }
                    public QuickFix.Fields.DeliveryScheduleSettlFlowType DeliveryScheduleSettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleSettlFlowType val = new QuickFix.Fields.DeliveryScheduleSettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleSettlFlowType val)
                    {
                        this.DeliveryScheduleSettlFlowType = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleSettlFlowType Get(QuickFix.Fields.DeliveryScheduleSettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlFlowType val)
                    {
                        return IsSetDeliveryScheduleSettlFlowType();
                    }

                    public bool IsSetDeliveryScheduleSettlFlowType()
                    {
                        return IsSetField(Tags.DeliveryScheduleSettlFlowType);
                    }
                    public QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction DeliveryScheduleSettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction val = new QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        this.DeliveryScheduleSettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction Get(QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        return IsSetDeliveryScheduleSettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetDeliveryScheduleSettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.DeliveryScheduleSettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoDeliveryScheduleSettlDays NoDeliveryScheduleSettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoDeliveryScheduleSettlDays val = new QuickFix.Fields.NoDeliveryScheduleSettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoDeliveryScheduleSettlDays val)
                    {
                        this.NoDeliveryScheduleSettlDays = val;
                    }

                    public QuickFix.Fields.NoDeliveryScheduleSettlDays Get(QuickFix.Fields.NoDeliveryScheduleSettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoDeliveryScheduleSettlDays val)
                    {
                        return IsSetNoDeliveryScheduleSettlDays();
                    }

                    public bool IsSetNoDeliveryScheduleSettlDays()
                    {
                        return IsSetField(Tags.NoDeliveryScheduleSettlDays);
                    }
                    public class NoDeliveryScheduleSettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.DeliveryScheduleSettlDay, Tags.DeliveryScheduleSettlTotalHours, Tags.NoDeliveryScheduleSettlTimes, 0 };

                        public NoDeliveryScheduleSettlDaysGroup()
                          : base(Tags.NoDeliveryScheduleSettlDays, Tags.DeliveryScheduleSettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoDeliveryScheduleSettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.DeliveryScheduleSettlDay DeliveryScheduleSettlDay
                        {
                            get
                            {
                                QuickFix.Fields.DeliveryScheduleSettlDay val = new QuickFix.Fields.DeliveryScheduleSettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.DeliveryScheduleSettlDay val)
                        {
                            this.DeliveryScheduleSettlDay = val;
                        }

                        public QuickFix.Fields.DeliveryScheduleSettlDay Get(QuickFix.Fields.DeliveryScheduleSettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlDay val)
                        {
                            return IsSetDeliveryScheduleSettlDay();
                        }

                        public bool IsSetDeliveryScheduleSettlDay()
                        {
                            return IsSetField(Tags.DeliveryScheduleSettlDay);
                        }
                        public QuickFix.Fields.DeliveryScheduleSettlTotalHours DeliveryScheduleSettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.DeliveryScheduleSettlTotalHours val = new QuickFix.Fields.DeliveryScheduleSettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.DeliveryScheduleSettlTotalHours val)
                        {
                            this.DeliveryScheduleSettlTotalHours = val;
                        }

                        public QuickFix.Fields.DeliveryScheduleSettlTotalHours Get(QuickFix.Fields.DeliveryScheduleSettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlTotalHours val)
                        {
                            return IsSetDeliveryScheduleSettlTotalHours();
                        }

                        public bool IsSetDeliveryScheduleSettlTotalHours()
                        {
                            return IsSetField(Tags.DeliveryScheduleSettlTotalHours);
                        }
                        public QuickFix.Fields.NoDeliveryScheduleSettlTimes NoDeliveryScheduleSettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoDeliveryScheduleSettlTimes val = new QuickFix.Fields.NoDeliveryScheduleSettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoDeliveryScheduleSettlTimes val)
                        {
                            this.NoDeliveryScheduleSettlTimes = val;
                        }

                        public QuickFix.Fields.NoDeliveryScheduleSettlTimes Get(QuickFix.Fields.NoDeliveryScheduleSettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoDeliveryScheduleSettlTimes val)
                        {
                            return IsSetNoDeliveryScheduleSettlTimes();
                        }

                        public bool IsSetNoDeliveryScheduleSettlTimes()
                        {
                            return IsSetField(Tags.NoDeliveryScheduleSettlTimes);
                        }
                        public class NoDeliveryScheduleSettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.DeliveryScheduleSettlStart, Tags.DeliveryScheduleSettlEnd, Tags.DeliveryScheduleSettlTimeType, 0 };

                            public NoDeliveryScheduleSettlTimesGroup()
                              : base(Tags.NoDeliveryScheduleSettlTimes, Tags.DeliveryScheduleSettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoDeliveryScheduleSettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.DeliveryScheduleSettlStart DeliveryScheduleSettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.DeliveryScheduleSettlStart val = new QuickFix.Fields.DeliveryScheduleSettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.DeliveryScheduleSettlStart val)
                            {
                                this.DeliveryScheduleSettlStart = val;
                            }

                            public QuickFix.Fields.DeliveryScheduleSettlStart Get(QuickFix.Fields.DeliveryScheduleSettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlStart val)
                            {
                                return IsSetDeliveryScheduleSettlStart();
                            }

                            public bool IsSetDeliveryScheduleSettlStart()
                            {
                                return IsSetField(Tags.DeliveryScheduleSettlStart);
                            }
                            public QuickFix.Fields.DeliveryScheduleSettlEnd DeliveryScheduleSettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.DeliveryScheduleSettlEnd val = new QuickFix.Fields.DeliveryScheduleSettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.DeliveryScheduleSettlEnd val)
                            {
                                this.DeliveryScheduleSettlEnd = val;
                            }

                            public QuickFix.Fields.DeliveryScheduleSettlEnd Get(QuickFix.Fields.DeliveryScheduleSettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlEnd val)
                            {
                                return IsSetDeliveryScheduleSettlEnd();
                            }

                            public bool IsSetDeliveryScheduleSettlEnd()
                            {
                                return IsSetField(Tags.DeliveryScheduleSettlEnd);
                            }
                            public QuickFix.Fields.DeliveryScheduleSettlTimeType DeliveryScheduleSettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.DeliveryScheduleSettlTimeType val = new QuickFix.Fields.DeliveryScheduleSettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.DeliveryScheduleSettlTimeType val)
                            {
                                this.DeliveryScheduleSettlTimeType = val;
                            }

                            public QuickFix.Fields.DeliveryScheduleSettlTimeType Get(QuickFix.Fields.DeliveryScheduleSettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.DeliveryScheduleSettlTimeType val)
                            {
                                return IsSetDeliveryScheduleSettlTimeType();
                            }

                            public bool IsSetDeliveryScheduleSettlTimeType()
                            {
                                return IsSetField(Tags.DeliveryScheduleSettlTimeType);
                            }

                        }
                    }
                }
            }
            public class NoProvisionsGroup : Group
            {
                public static int[] fieldOrder = { Tags.ProvisionType, Tags.ProvisionDateUnadjusted, Tags.ProvisionDateBusinessDayConvention, Tags.NoProvisionDateBusinessCenters, Tags.ProvisionDateAdjusted, Tags.ProvisionDateTenorPeriod, Tags.ProvisionDateTenorUnit, Tags.ProvisionCalculationAgent, Tags.ProvisionOptionSinglePartyBuyerSide, Tags.ProvisionOptionSinglePartySellerSide, Tags.ProvisionCashSettlValueTime, Tags.ProvisionCashSettlValueTimeBusinessCenter, Tags.ProvisionCashSettlValueDateBusinessDayConvention, Tags.NoProvisionCashSettlValueDateBusinessCenters, Tags.ProvisionCashSettlValueDateRelativeTo, Tags.ProvisionCashSettlValueDateOffsetPeriod, Tags.ProvisionCashSettlValueDateOffsetUnit, Tags.ProvisionCashSettlValueDateOffsetDayType, Tags.ProvisionCashSettlValueDateAdjusted, Tags.ProvisionOptionExerciseBusinessDayConvention, Tags.NoProvisionOptionExerciseBusinessCenters, Tags.NoProvisionOptionExerciseFixedDates, Tags.ProvisionOptionExerciseEarliestDateOffsetPeriod, Tags.ProvisionOptionExerciseEarliestDateOffsetUnit, Tags.ProvisionOptionExerciseFrequencyPeriod, Tags.ProvisionOptionExerciseFrequencyUnit, Tags.ProvisionOptionExerciseStartDateUnadjusted, Tags.ProvisionOptionExerciseStartDateRelativeTo, Tags.ProvisionOptionExerciseStartDateOffsetPeriod, Tags.ProvisionOptionExerciseStartDateOffsetUnit, Tags.ProvisionOptionExerciseStartDateOffsetDayType, Tags.ProvisionOptionExerciseStartDateAdjusted, Tags.ProvisionOptionExercisePeriodSkip, Tags.ProvisionOptionExerciseBoundsFirstDateUnadjusted, Tags.ProvisionOptionExerciseBoundsLastDateUnadjusted, Tags.ProvisionOptionExerciseEarliestTime, Tags.ProvisionOptionExerciseEarliestTimeBusinessCenter, Tags.ProvisionOptionExerciseLatestTime, Tags.ProvisionOptionExerciseLatestTimeBusinessCenter, Tags.ProvisionOptionExpirationDateUnadjusted, Tags.ProvisionOptionExpirationDateBusinessDayConvention, Tags.NoProvisionOptionExpirationDateBusinessCenters, Tags.ProvisionOptionExpirationDateRelativeTo, Tags.ProvisionOptionExpirationDateOffsetPeriod, Tags.ProvisionOptionExpirationDateOffsetUnit, Tags.ProvisionOptionExpirationDateOffsetDayType, Tags.ProvisionOptionExpirationDateAdjusted, Tags.ProvisionOptionExpirationTime, Tags.ProvisionOptionExpirationTimeBusinessCenter, Tags.ProvisionOptionRelevantUnderlyingDateUnadjusted, Tags.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention, Tags.NoProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.ProvisionOptionRelevantUnderlyingDateRelativeTo, Tags.ProvisionOptionRelevantUnderlyingDateOffsetPeriod, Tags.ProvisionOptionRelevantUnderlyingDateOffsetUnit, Tags.ProvisionOptionRelevantUnderlyingDateOffsetDayType, Tags.ProvisionOptionRelevantUnderlyingDateAdjusted, Tags.ProvisionOptionExerciseStyle, Tags.ProvisionOptionExerciseMultipleNotional, Tags.ProvisionOptionExerciseMinimumNotional, Tags.ProvisionOptionExerciseMaximumNotional, Tags.ProvisionOptionMinimumNumber, Tags.ProvisionOptionMaximumNumber, Tags.ProvisionOptionExerciseConfirmation, Tags.ProvisionCashSettlPaymentDateBusinessDayConvention, Tags.NoProvisionCashSettlPaymentDateBusinessCenters, Tags.ProvisionCashSettlPaymentDateRelativeTo, Tags.ProvisionCashSettlPaymentDateOffsetPeriod, Tags.ProvisionCashSettlPaymentDateOffsetUnit, Tags.ProvisionCashSettlPaymentDateOffsetDayType, Tags.ProvisionCashSettlPaymentDateRangeFirst, Tags.ProvisionCashSettlPaymentDateRangeLast, Tags.NoProvisionCashSettlPaymentDates, Tags.ProvisionCashSettlMethod, Tags.ProvisionCashSettlCurrency, Tags.ProvisionCashSettlCurrency2, Tags.ProvisionCashSettlQuoteType, Tags.ProvisionCashSettlQuoteSource, Tags.ProvisionCashSettlQuoteReferencePage, Tags.ProvisionText, Tags.EncodedProvisionTextLen, Tags.EncodedProvisionText, Tags.NoProvisionPartyIDs, Tags.ProvisionBreakFeeElection, Tags.ProvisionBreakFeeRate, 0 };

                public NoProvisionsGroup()
                  : base(Tags.NoProvisions, Tags.ProvisionType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoProvisionsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.ProvisionType ProvisionType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionType val = new QuickFix.Fields.ProvisionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionType val)
                {
                    this.ProvisionType = val;
                }

                public QuickFix.Fields.ProvisionType Get(QuickFix.Fields.ProvisionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionType val)
                {
                    return IsSetProvisionType();
                }

                public bool IsSetProvisionType()
                {
                    return IsSetField(Tags.ProvisionType);
                }
                public QuickFix.Fields.ProvisionDateUnadjusted ProvisionDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionDateUnadjusted val = new QuickFix.Fields.ProvisionDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionDateUnadjusted val)
                {
                    this.ProvisionDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionDateUnadjusted Get(QuickFix.Fields.ProvisionDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionDateUnadjusted val)
                {
                    return IsSetProvisionDateUnadjusted();
                }

                public bool IsSetProvisionDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionDateBusinessDayConvention ProvisionDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionDateBusinessDayConvention val = new QuickFix.Fields.ProvisionDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionDateBusinessDayConvention val)
                {
                    this.ProvisionDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionDateBusinessDayConvention Get(QuickFix.Fields.ProvisionDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionDateBusinessDayConvention val)
                {
                    return IsSetProvisionDateBusinessDayConvention();
                }

                public bool IsSetProvisionDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionDateBusinessCenters NoProvisionDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionDateBusinessCenters val = new QuickFix.Fields.NoProvisionDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionDateBusinessCenters val)
                {
                    this.NoProvisionDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionDateBusinessCenters Get(QuickFix.Fields.NoProvisionDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionDateBusinessCenters val)
                {
                    return IsSetNoProvisionDateBusinessCenters();
                }

                public bool IsSetNoProvisionDateBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionDateBusinessCenters);
                }
                public QuickFix.Fields.ProvisionDateAdjusted ProvisionDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionDateAdjusted val = new QuickFix.Fields.ProvisionDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionDateAdjusted val)
                {
                    this.ProvisionDateAdjusted = val;
                }

                public QuickFix.Fields.ProvisionDateAdjusted Get(QuickFix.Fields.ProvisionDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionDateAdjusted val)
                {
                    return IsSetProvisionDateAdjusted();
                }

                public bool IsSetProvisionDateAdjusted()
                {
                    return IsSetField(Tags.ProvisionDateAdjusted);
                }
                public QuickFix.Fields.ProvisionDateTenorPeriod ProvisionDateTenorPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionDateTenorPeriod val = new QuickFix.Fields.ProvisionDateTenorPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionDateTenorPeriod val)
                {
                    this.ProvisionDateTenorPeriod = val;
                }

                public QuickFix.Fields.ProvisionDateTenorPeriod Get(QuickFix.Fields.ProvisionDateTenorPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionDateTenorPeriod val)
                {
                    return IsSetProvisionDateTenorPeriod();
                }

                public bool IsSetProvisionDateTenorPeriod()
                {
                    return IsSetField(Tags.ProvisionDateTenorPeriod);
                }
                public QuickFix.Fields.ProvisionDateTenorUnit ProvisionDateTenorUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionDateTenorUnit val = new QuickFix.Fields.ProvisionDateTenorUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionDateTenorUnit val)
                {
                    this.ProvisionDateTenorUnit = val;
                }

                public QuickFix.Fields.ProvisionDateTenorUnit Get(QuickFix.Fields.ProvisionDateTenorUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionDateTenorUnit val)
                {
                    return IsSetProvisionDateTenorUnit();
                }

                public bool IsSetProvisionDateTenorUnit()
                {
                    return IsSetField(Tags.ProvisionDateTenorUnit);
                }
                public QuickFix.Fields.ProvisionCalculationAgent ProvisionCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCalculationAgent val = new QuickFix.Fields.ProvisionCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCalculationAgent val)
                {
                    this.ProvisionCalculationAgent = val;
                }

                public QuickFix.Fields.ProvisionCalculationAgent Get(QuickFix.Fields.ProvisionCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCalculationAgent val)
                {
                    return IsSetProvisionCalculationAgent();
                }

                public bool IsSetProvisionCalculationAgent()
                {
                    return IsSetField(Tags.ProvisionCalculationAgent);
                }
                public QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide ProvisionOptionSinglePartyBuyerSide
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide val = new QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide val)
                {
                    this.ProvisionOptionSinglePartyBuyerSide = val;
                }

                public QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide Get(QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionSinglePartyBuyerSide val)
                {
                    return IsSetProvisionOptionSinglePartyBuyerSide();
                }

                public bool IsSetProvisionOptionSinglePartyBuyerSide()
                {
                    return IsSetField(Tags.ProvisionOptionSinglePartyBuyerSide);
                }
                public QuickFix.Fields.ProvisionOptionSinglePartySellerSide ProvisionOptionSinglePartySellerSide
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionSinglePartySellerSide val = new QuickFix.Fields.ProvisionOptionSinglePartySellerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionSinglePartySellerSide val)
                {
                    this.ProvisionOptionSinglePartySellerSide = val;
                }

                public QuickFix.Fields.ProvisionOptionSinglePartySellerSide Get(QuickFix.Fields.ProvisionOptionSinglePartySellerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionSinglePartySellerSide val)
                {
                    return IsSetProvisionOptionSinglePartySellerSide();
                }

                public bool IsSetProvisionOptionSinglePartySellerSide()
                {
                    return IsSetField(Tags.ProvisionOptionSinglePartySellerSide);
                }
                public QuickFix.Fields.ProvisionCashSettlValueTime ProvisionCashSettlValueTime
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueTime val = new QuickFix.Fields.ProvisionCashSettlValueTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueTime val)
                {
                    this.ProvisionCashSettlValueTime = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueTime Get(QuickFix.Fields.ProvisionCashSettlValueTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueTime val)
                {
                    return IsSetProvisionCashSettlValueTime();
                }

                public bool IsSetProvisionCashSettlValueTime()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueTime);
                }
                public QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter ProvisionCashSettlValueTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter val = new QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter val)
                {
                    this.ProvisionCashSettlValueTimeBusinessCenter = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter Get(QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueTimeBusinessCenter val)
                {
                    return IsSetProvisionCashSettlValueTimeBusinessCenter();
                }

                public bool IsSetProvisionCashSettlValueTimeBusinessCenter()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueTimeBusinessCenter);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention ProvisionCashSettlValueDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention val = new QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    this.ProvisionCashSettlValueDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention Get(QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    return IsSetProvisionCashSettlValueDateBusinessDayConvention();
                }

                public bool IsSetProvisionCashSettlValueDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters NoProvisionCashSettlValueDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters val = new QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters val)
                {
                    this.NoProvisionCashSettlValueDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters Get(QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionCashSettlValueDateBusinessCenters val)
                {
                    return IsSetNoProvisionCashSettlValueDateBusinessCenters();
                }

                public bool IsSetNoProvisionCashSettlValueDateBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionCashSettlValueDateBusinessCenters);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo ProvisionCashSettlValueDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo val = new QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo val)
                {
                    this.ProvisionCashSettlValueDateRelativeTo = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo Get(QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateRelativeTo val)
                {
                    return IsSetProvisionCashSettlValueDateRelativeTo();
                }

                public bool IsSetProvisionCashSettlValueDateRelativeTo()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateRelativeTo);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod ProvisionCashSettlValueDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod val = new QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod val)
                {
                    this.ProvisionCashSettlValueDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod Get(QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateOffsetPeriod val)
                {
                    return IsSetProvisionCashSettlValueDateOffsetPeriod();
                }

                public bool IsSetProvisionCashSettlValueDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit ProvisionCashSettlValueDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit val = new QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit val)
                {
                    this.ProvisionCashSettlValueDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit Get(QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateOffsetUnit val)
                {
                    return IsSetProvisionCashSettlValueDateOffsetUnit();
                }

                public bool IsSetProvisionCashSettlValueDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType ProvisionCashSettlValueDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType val = new QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType val)
                {
                    this.ProvisionCashSettlValueDateOffsetDayType = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType Get(QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateOffsetDayType val)
                {
                    return IsSetProvisionCashSettlValueDateOffsetDayType();
                }

                public bool IsSetProvisionCashSettlValueDateOffsetDayType()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateOffsetDayType);
                }
                public QuickFix.Fields.ProvisionCashSettlValueDateAdjusted ProvisionCashSettlValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlValueDateAdjusted val = new QuickFix.Fields.ProvisionCashSettlValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlValueDateAdjusted val)
                {
                    this.ProvisionCashSettlValueDateAdjusted = val;
                }

                public QuickFix.Fields.ProvisionCashSettlValueDateAdjusted Get(QuickFix.Fields.ProvisionCashSettlValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateAdjusted val)
                {
                    return IsSetProvisionCashSettlValueDateAdjusted();
                }

                public bool IsSetProvisionCashSettlValueDateAdjusted()
                {
                    return IsSetField(Tags.ProvisionCashSettlValueDateAdjusted);
                }
                public QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention ProvisionOptionExerciseBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention val = new QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention val)
                {
                    this.ProvisionOptionExerciseBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention Get(QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseBusinessDayConvention val)
                {
                    return IsSetProvisionOptionExerciseBusinessDayConvention();
                }

                public bool IsSetProvisionOptionExerciseBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters NoProvisionOptionExerciseBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters val = new QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters val)
                {
                    this.NoProvisionOptionExerciseBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters Get(QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionOptionExerciseBusinessCenters val)
                {
                    return IsSetNoProvisionOptionExerciseBusinessCenters();
                }

                public bool IsSetNoProvisionOptionExerciseBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionOptionExerciseBusinessCenters);
                }
                public QuickFix.Fields.NoProvisionOptionExerciseFixedDates NoProvisionOptionExerciseFixedDates
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionOptionExerciseFixedDates val = new QuickFix.Fields.NoProvisionOptionExerciseFixedDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionOptionExerciseFixedDates val)
                {
                    this.NoProvisionOptionExerciseFixedDates = val;
                }

                public QuickFix.Fields.NoProvisionOptionExerciseFixedDates Get(QuickFix.Fields.NoProvisionOptionExerciseFixedDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionOptionExerciseFixedDates val)
                {
                    return IsSetNoProvisionOptionExerciseFixedDates();
                }

                public bool IsSetNoProvisionOptionExerciseFixedDates()
                {
                    return IsSetField(Tags.NoProvisionOptionExerciseFixedDates);
                }
                public QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod ProvisionOptionExerciseEarliestDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    this.ProvisionOptionExerciseEarliestDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    return IsSetProvisionOptionExerciseEarliestDateOffsetPeriod();
                }

                public bool IsSetProvisionOptionExerciseEarliestDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseEarliestDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit ProvisionOptionExerciseEarliestDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    this.ProvisionOptionExerciseEarliestDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    return IsSetProvisionOptionExerciseEarliestDateOffsetUnit();
                }

                public bool IsSetProvisionOptionExerciseEarliestDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseEarliestDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod ProvisionOptionExerciseFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod val = new QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod val)
                {
                    this.ProvisionOptionExerciseFrequencyPeriod = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod Get(QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseFrequencyPeriod val)
                {
                    return IsSetProvisionOptionExerciseFrequencyPeriod();
                }

                public bool IsSetProvisionOptionExerciseFrequencyPeriod()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseFrequencyPeriod);
                }
                public QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit ProvisionOptionExerciseFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit val = new QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit val)
                {
                    this.ProvisionOptionExerciseFrequencyUnit = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit Get(QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseFrequencyUnit val)
                {
                    return IsSetProvisionOptionExerciseFrequencyUnit();
                }

                public bool IsSetProvisionOptionExerciseFrequencyUnit()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseFrequencyUnit);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted ProvisionOptionExerciseStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted val = new QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted val)
                {
                    this.ProvisionOptionExerciseStartDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted Get(QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateUnadjusted val)
                {
                    return IsSetProvisionOptionExerciseStartDateUnadjusted();
                }

                public bool IsSetProvisionOptionExerciseStartDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo ProvisionOptionExerciseStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo val = new QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo val)
                {
                    this.ProvisionOptionExerciseStartDateRelativeTo = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo Get(QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateRelativeTo val)
                {
                    return IsSetProvisionOptionExerciseStartDateRelativeTo();
                }

                public bool IsSetProvisionOptionExerciseStartDateRelativeTo()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateRelativeTo);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod ProvisionOptionExerciseStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    this.ProvisionOptionExerciseStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    return IsSetProvisionOptionExerciseStartDateOffsetPeriod();
                }

                public bool IsSetProvisionOptionExerciseStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit ProvisionOptionExerciseStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    this.ProvisionOptionExerciseStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    return IsSetProvisionOptionExerciseStartDateOffsetUnit();
                }

                public bool IsSetProvisionOptionExerciseStartDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType ProvisionOptionExerciseStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    this.ProvisionOptionExerciseStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    return IsSetProvisionOptionExerciseStartDateOffsetDayType();
                }

                public bool IsSetProvisionOptionExerciseStartDateOffsetDayType()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateOffsetDayType);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted ProvisionOptionExerciseStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted val = new QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted val)
                {
                    this.ProvisionOptionExerciseStartDateAdjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted Get(QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStartDateAdjusted val)
                {
                    return IsSetProvisionOptionExerciseStartDateAdjusted();
                }

                public bool IsSetProvisionOptionExerciseStartDateAdjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStartDateAdjusted);
                }
                public QuickFix.Fields.ProvisionOptionExercisePeriodSkip ProvisionOptionExercisePeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExercisePeriodSkip val = new QuickFix.Fields.ProvisionOptionExercisePeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExercisePeriodSkip val)
                {
                    this.ProvisionOptionExercisePeriodSkip = val;
                }

                public QuickFix.Fields.ProvisionOptionExercisePeriodSkip Get(QuickFix.Fields.ProvisionOptionExercisePeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExercisePeriodSkip val)
                {
                    return IsSetProvisionOptionExercisePeriodSkip();
                }

                public bool IsSetProvisionOptionExercisePeriodSkip()
                {
                    return IsSetField(Tags.ProvisionOptionExercisePeriodSkip);
                }
                public QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted ProvisionOptionExerciseBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted val = new QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    this.ProvisionOptionExerciseBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted Get(QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    return IsSetProvisionOptionExerciseBoundsFirstDateUnadjusted();
                }

                public bool IsSetProvisionOptionExerciseBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted ProvisionOptionExerciseBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted val = new QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    this.ProvisionOptionExerciseBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted Get(QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    return IsSetProvisionOptionExerciseBoundsLastDateUnadjusted();
                }

                public bool IsSetProvisionOptionExerciseBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionOptionExerciseEarliestTime ProvisionOptionExerciseEarliestTime
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseEarliestTime val = new QuickFix.Fields.ProvisionOptionExerciseEarliestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseEarliestTime val)
                {
                    this.ProvisionOptionExerciseEarliestTime = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseEarliestTime Get(QuickFix.Fields.ProvisionOptionExerciseEarliestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseEarliestTime val)
                {
                    return IsSetProvisionOptionExerciseEarliestTime();
                }

                public bool IsSetProvisionOptionExerciseEarliestTime()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseEarliestTime);
                }
                public QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter ProvisionOptionExerciseEarliestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter val = new QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    this.ProvisionOptionExerciseEarliestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter Get(QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    return IsSetProvisionOptionExerciseEarliestTimeBusinessCenter();
                }

                public bool IsSetProvisionOptionExerciseEarliestTimeBusinessCenter()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseEarliestTimeBusinessCenter);
                }
                public QuickFix.Fields.ProvisionOptionExerciseLatestTime ProvisionOptionExerciseLatestTime
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseLatestTime val = new QuickFix.Fields.ProvisionOptionExerciseLatestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseLatestTime val)
                {
                    this.ProvisionOptionExerciseLatestTime = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseLatestTime Get(QuickFix.Fields.ProvisionOptionExerciseLatestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseLatestTime val)
                {
                    return IsSetProvisionOptionExerciseLatestTime();
                }

                public bool IsSetProvisionOptionExerciseLatestTime()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseLatestTime);
                }
                public QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter ProvisionOptionExerciseLatestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter val = new QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    this.ProvisionOptionExerciseLatestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter Get(QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    return IsSetProvisionOptionExerciseLatestTimeBusinessCenter();
                }

                public bool IsSetProvisionOptionExerciseLatestTimeBusinessCenter()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseLatestTimeBusinessCenter);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted ProvisionOptionExpirationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted val = new QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted val)
                {
                    this.ProvisionOptionExpirationDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted Get(QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateUnadjusted val)
                {
                    return IsSetProvisionOptionExpirationDateUnadjusted();
                }

                public bool IsSetProvisionOptionExpirationDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention ProvisionOptionExpirationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention val = new QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    this.ProvisionOptionExpirationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention Get(QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    return IsSetProvisionOptionExpirationDateBusinessDayConvention();
                }

                public bool IsSetProvisionOptionExpirationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters NoProvisionOptionExpirationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters val = new QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters val)
                {
                    this.NoProvisionOptionExpirationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters Get(QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionOptionExpirationDateBusinessCenters val)
                {
                    return IsSetNoProvisionOptionExpirationDateBusinessCenters();
                }

                public bool IsSetNoProvisionOptionExpirationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionOptionExpirationDateBusinessCenters);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo ProvisionOptionExpirationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo val = new QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo val)
                {
                    this.ProvisionOptionExpirationDateRelativeTo = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo Get(QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateRelativeTo val)
                {
                    return IsSetProvisionOptionExpirationDateRelativeTo();
                }

                public bool IsSetProvisionOptionExpirationDateRelativeTo()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateRelativeTo);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod ProvisionOptionExpirationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod val = new QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod val)
                {
                    this.ProvisionOptionExpirationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod Get(QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateOffsetPeriod val)
                {
                    return IsSetProvisionOptionExpirationDateOffsetPeriod();
                }

                public bool IsSetProvisionOptionExpirationDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit ProvisionOptionExpirationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit val = new QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit val)
                {
                    this.ProvisionOptionExpirationDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit Get(QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateOffsetUnit val)
                {
                    return IsSetProvisionOptionExpirationDateOffsetUnit();
                }

                public bool IsSetProvisionOptionExpirationDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType ProvisionOptionExpirationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType val = new QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType val)
                {
                    this.ProvisionOptionExpirationDateOffsetDayType = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType Get(QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateOffsetDayType val)
                {
                    return IsSetProvisionOptionExpirationDateOffsetDayType();
                }

                public bool IsSetProvisionOptionExpirationDateOffsetDayType()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateOffsetDayType);
                }
                public QuickFix.Fields.ProvisionOptionExpirationDateAdjusted ProvisionOptionExpirationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationDateAdjusted val = new QuickFix.Fields.ProvisionOptionExpirationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationDateAdjusted val)
                {
                    this.ProvisionOptionExpirationDateAdjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationDateAdjusted Get(QuickFix.Fields.ProvisionOptionExpirationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateAdjusted val)
                {
                    return IsSetProvisionOptionExpirationDateAdjusted();
                }

                public bool IsSetProvisionOptionExpirationDateAdjusted()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationDateAdjusted);
                }
                public QuickFix.Fields.ProvisionOptionExpirationTime ProvisionOptionExpirationTime
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationTime val = new QuickFix.Fields.ProvisionOptionExpirationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationTime val)
                {
                    this.ProvisionOptionExpirationTime = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationTime Get(QuickFix.Fields.ProvisionOptionExpirationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationTime val)
                {
                    return IsSetProvisionOptionExpirationTime();
                }

                public bool IsSetProvisionOptionExpirationTime()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationTime);
                }
                public QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter ProvisionOptionExpirationTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter val = new QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter val)
                {
                    this.ProvisionOptionExpirationTimeBusinessCenter = val;
                }

                public QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter Get(QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationTimeBusinessCenter val)
                {
                    return IsSetProvisionOptionExpirationTimeBusinessCenter();
                }

                public bool IsSetProvisionOptionExpirationTimeBusinessCenter()
                {
                    return IsSetField(Tags.ProvisionOptionExpirationTimeBusinessCenter);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted ProvisionOptionRelevantUnderlyingDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateUnadjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateUnadjusted();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateUnadjusted()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateUnadjusted);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention ProvisionOptionRelevantUnderlyingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters NoProvisionOptionRelevantUnderlyingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters val = new QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    this.NoProvisionOptionRelevantUnderlyingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters Get(QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    return IsSetNoProvisionOptionRelevantUnderlyingDateBusinessCenters();
                }

                public bool IsSetNoProvisionOptionRelevantUnderlyingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionOptionRelevantUnderlyingDateBusinessCenters);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo ProvisionOptionRelevantUnderlyingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateRelativeTo = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateRelativeTo();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateRelativeTo()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateRelativeTo);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod ProvisionOptionRelevantUnderlyingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit ProvisionOptionRelevantUnderlyingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateOffsetUnit();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType ProvisionOptionRelevantUnderlyingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateOffsetDayType = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateOffsetDayType();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateOffsetDayType()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateOffsetDayType);
                }
                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted ProvisionOptionRelevantUnderlyingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    this.ProvisionOptionRelevantUnderlyingDateAdjusted = val;
                }

                public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    return IsSetProvisionOptionRelevantUnderlyingDateAdjusted();
                }

                public bool IsSetProvisionOptionRelevantUnderlyingDateAdjusted()
                {
                    return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateAdjusted);
                }
                public QuickFix.Fields.ProvisionOptionExerciseStyle ProvisionOptionExerciseStyle
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseStyle val = new QuickFix.Fields.ProvisionOptionExerciseStyle();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseStyle val)
                {
                    this.ProvisionOptionExerciseStyle = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseStyle Get(QuickFix.Fields.ProvisionOptionExerciseStyle val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseStyle val)
                {
                    return IsSetProvisionOptionExerciseStyle();
                }

                public bool IsSetProvisionOptionExerciseStyle()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseStyle);
                }
                public QuickFix.Fields.ProvisionOptionExerciseMultipleNotional ProvisionOptionExerciseMultipleNotional
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseMultipleNotional val = new QuickFix.Fields.ProvisionOptionExerciseMultipleNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseMultipleNotional val)
                {
                    this.ProvisionOptionExerciseMultipleNotional = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseMultipleNotional Get(QuickFix.Fields.ProvisionOptionExerciseMultipleNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseMultipleNotional val)
                {
                    return IsSetProvisionOptionExerciseMultipleNotional();
                }

                public bool IsSetProvisionOptionExerciseMultipleNotional()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseMultipleNotional);
                }
                public QuickFix.Fields.ProvisionOptionExerciseMinimumNotional ProvisionOptionExerciseMinimumNotional
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseMinimumNotional val = new QuickFix.Fields.ProvisionOptionExerciseMinimumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseMinimumNotional val)
                {
                    this.ProvisionOptionExerciseMinimumNotional = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseMinimumNotional Get(QuickFix.Fields.ProvisionOptionExerciseMinimumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseMinimumNotional val)
                {
                    return IsSetProvisionOptionExerciseMinimumNotional();
                }

                public bool IsSetProvisionOptionExerciseMinimumNotional()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseMinimumNotional);
                }
                public QuickFix.Fields.ProvisionOptionExerciseMaximumNotional ProvisionOptionExerciseMaximumNotional
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseMaximumNotional val = new QuickFix.Fields.ProvisionOptionExerciseMaximumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseMaximumNotional val)
                {
                    this.ProvisionOptionExerciseMaximumNotional = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseMaximumNotional Get(QuickFix.Fields.ProvisionOptionExerciseMaximumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseMaximumNotional val)
                {
                    return IsSetProvisionOptionExerciseMaximumNotional();
                }

                public bool IsSetProvisionOptionExerciseMaximumNotional()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseMaximumNotional);
                }
                public QuickFix.Fields.ProvisionOptionMinimumNumber ProvisionOptionMinimumNumber
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionMinimumNumber val = new QuickFix.Fields.ProvisionOptionMinimumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionMinimumNumber val)
                {
                    this.ProvisionOptionMinimumNumber = val;
                }

                public QuickFix.Fields.ProvisionOptionMinimumNumber Get(QuickFix.Fields.ProvisionOptionMinimumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionMinimumNumber val)
                {
                    return IsSetProvisionOptionMinimumNumber();
                }

                public bool IsSetProvisionOptionMinimumNumber()
                {
                    return IsSetField(Tags.ProvisionOptionMinimumNumber);
                }
                public QuickFix.Fields.ProvisionOptionMaximumNumber ProvisionOptionMaximumNumber
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionMaximumNumber val = new QuickFix.Fields.ProvisionOptionMaximumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionMaximumNumber val)
                {
                    this.ProvisionOptionMaximumNumber = val;
                }

                public QuickFix.Fields.ProvisionOptionMaximumNumber Get(QuickFix.Fields.ProvisionOptionMaximumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionMaximumNumber val)
                {
                    return IsSetProvisionOptionMaximumNumber();
                }

                public bool IsSetProvisionOptionMaximumNumber()
                {
                    return IsSetField(Tags.ProvisionOptionMaximumNumber);
                }
                public QuickFix.Fields.ProvisionOptionExerciseConfirmation ProvisionOptionExerciseConfirmation
                {
                    get
                    {
                        QuickFix.Fields.ProvisionOptionExerciseConfirmation val = new QuickFix.Fields.ProvisionOptionExerciseConfirmation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionOptionExerciseConfirmation val)
                {
                    this.ProvisionOptionExerciseConfirmation = val;
                }

                public QuickFix.Fields.ProvisionOptionExerciseConfirmation Get(QuickFix.Fields.ProvisionOptionExerciseConfirmation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseConfirmation val)
                {
                    return IsSetProvisionOptionExerciseConfirmation();
                }

                public bool IsSetProvisionOptionExerciseConfirmation()
                {
                    return IsSetField(Tags.ProvisionOptionExerciseConfirmation);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention ProvisionCashSettlPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention val = new QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    this.ProvisionCashSettlPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention Get(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    return IsSetProvisionCashSettlPaymentDateBusinessDayConvention();
                }

                public bool IsSetProvisionCashSettlPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters NoProvisionCashSettlPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters val = new QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    this.NoProvisionCashSettlPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters Get(QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    return IsSetNoProvisionCashSettlPaymentDateBusinessCenters();
                }

                public bool IsSetNoProvisionCashSettlPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoProvisionCashSettlPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo ProvisionCashSettlPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo val = new QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo val)
                {
                    this.ProvisionCashSettlPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo Get(QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateRelativeTo val)
                {
                    return IsSetProvisionCashSettlPaymentDateRelativeTo();
                }

                public bool IsSetProvisionCashSettlPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateRelativeTo);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod ProvisionCashSettlPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod val = new QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    this.ProvisionCashSettlPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod Get(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    return IsSetProvisionCashSettlPaymentDateOffsetPeriod();
                }

                public bool IsSetProvisionCashSettlPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit ProvisionCashSettlPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit val = new QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    this.ProvisionCashSettlPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit Get(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    return IsSetProvisionCashSettlPaymentDateOffsetUnit();
                }

                public bool IsSetProvisionCashSettlPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType ProvisionCashSettlPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType val = new QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    this.ProvisionCashSettlPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType Get(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    return IsSetProvisionCashSettlPaymentDateOffsetDayType();
                }

                public bool IsSetProvisionCashSettlPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst ProvisionCashSettlPaymentDateRangeFirst
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst val = new QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst val)
                {
                    this.ProvisionCashSettlPaymentDateRangeFirst = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst Get(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeFirst val)
                {
                    return IsSetProvisionCashSettlPaymentDateRangeFirst();
                }

                public bool IsSetProvisionCashSettlPaymentDateRangeFirst()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateRangeFirst);
                }
                public QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast ProvisionCashSettlPaymentDateRangeLast
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast val = new QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast val)
                {
                    this.ProvisionCashSettlPaymentDateRangeLast = val;
                }

                public QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast Get(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateRangeLast val)
                {
                    return IsSetProvisionCashSettlPaymentDateRangeLast();
                }

                public bool IsSetProvisionCashSettlPaymentDateRangeLast()
                {
                    return IsSetField(Tags.ProvisionCashSettlPaymentDateRangeLast);
                }
                public QuickFix.Fields.NoProvisionCashSettlPaymentDates NoProvisionCashSettlPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionCashSettlPaymentDates val = new QuickFix.Fields.NoProvisionCashSettlPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionCashSettlPaymentDates val)
                {
                    this.NoProvisionCashSettlPaymentDates = val;
                }

                public QuickFix.Fields.NoProvisionCashSettlPaymentDates Get(QuickFix.Fields.NoProvisionCashSettlPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionCashSettlPaymentDates val)
                {
                    return IsSetNoProvisionCashSettlPaymentDates();
                }

                public bool IsSetNoProvisionCashSettlPaymentDates()
                {
                    return IsSetField(Tags.NoProvisionCashSettlPaymentDates);
                }
                public QuickFix.Fields.ProvisionCashSettlMethod ProvisionCashSettlMethod
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlMethod val = new QuickFix.Fields.ProvisionCashSettlMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlMethod val)
                {
                    this.ProvisionCashSettlMethod = val;
                }

                public QuickFix.Fields.ProvisionCashSettlMethod Get(QuickFix.Fields.ProvisionCashSettlMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlMethod val)
                {
                    return IsSetProvisionCashSettlMethod();
                }

                public bool IsSetProvisionCashSettlMethod()
                {
                    return IsSetField(Tags.ProvisionCashSettlMethod);
                }
                public QuickFix.Fields.ProvisionCashSettlCurrency ProvisionCashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlCurrency val = new QuickFix.Fields.ProvisionCashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlCurrency val)
                {
                    this.ProvisionCashSettlCurrency = val;
                }

                public QuickFix.Fields.ProvisionCashSettlCurrency Get(QuickFix.Fields.ProvisionCashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlCurrency val)
                {
                    return IsSetProvisionCashSettlCurrency();
                }

                public bool IsSetProvisionCashSettlCurrency()
                {
                    return IsSetField(Tags.ProvisionCashSettlCurrency);
                }
                public QuickFix.Fields.ProvisionCashSettlCurrency2 ProvisionCashSettlCurrency2
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlCurrency2 val = new QuickFix.Fields.ProvisionCashSettlCurrency2();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlCurrency2 val)
                {
                    this.ProvisionCashSettlCurrency2 = val;
                }

                public QuickFix.Fields.ProvisionCashSettlCurrency2 Get(QuickFix.Fields.ProvisionCashSettlCurrency2 val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlCurrency2 val)
                {
                    return IsSetProvisionCashSettlCurrency2();
                }

                public bool IsSetProvisionCashSettlCurrency2()
                {
                    return IsSetField(Tags.ProvisionCashSettlCurrency2);
                }
                public QuickFix.Fields.ProvisionCashSettlQuoteType ProvisionCashSettlQuoteType
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlQuoteType val = new QuickFix.Fields.ProvisionCashSettlQuoteType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlQuoteType val)
                {
                    this.ProvisionCashSettlQuoteType = val;
                }

                public QuickFix.Fields.ProvisionCashSettlQuoteType Get(QuickFix.Fields.ProvisionCashSettlQuoteType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlQuoteType val)
                {
                    return IsSetProvisionCashSettlQuoteType();
                }

                public bool IsSetProvisionCashSettlQuoteType()
                {
                    return IsSetField(Tags.ProvisionCashSettlQuoteType);
                }
                public QuickFix.Fields.ProvisionCashSettlQuoteSource ProvisionCashSettlQuoteSource
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlQuoteSource val = new QuickFix.Fields.ProvisionCashSettlQuoteSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlQuoteSource val)
                {
                    this.ProvisionCashSettlQuoteSource = val;
                }

                public QuickFix.Fields.ProvisionCashSettlQuoteSource Get(QuickFix.Fields.ProvisionCashSettlQuoteSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlQuoteSource val)
                {
                    return IsSetProvisionCashSettlQuoteSource();
                }

                public bool IsSetProvisionCashSettlQuoteSource()
                {
                    return IsSetField(Tags.ProvisionCashSettlQuoteSource);
                }
                public QuickFix.Fields.ProvisionCashSettlQuoteReferencePage ProvisionCashSettlQuoteReferencePage
                {
                    get
                    {
                        QuickFix.Fields.ProvisionCashSettlQuoteReferencePage val = new QuickFix.Fields.ProvisionCashSettlQuoteReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionCashSettlQuoteReferencePage val)
                {
                    this.ProvisionCashSettlQuoteReferencePage = val;
                }

                public QuickFix.Fields.ProvisionCashSettlQuoteReferencePage Get(QuickFix.Fields.ProvisionCashSettlQuoteReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionCashSettlQuoteReferencePage val)
                {
                    return IsSetProvisionCashSettlQuoteReferencePage();
                }

                public bool IsSetProvisionCashSettlQuoteReferencePage()
                {
                    return IsSetField(Tags.ProvisionCashSettlQuoteReferencePage);
                }
                public QuickFix.Fields.ProvisionText ProvisionText
                {
                    get
                    {
                        QuickFix.Fields.ProvisionText val = new QuickFix.Fields.ProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionText val)
                {
                    this.ProvisionText = val;
                }

                public QuickFix.Fields.ProvisionText Get(QuickFix.Fields.ProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionText val)
                {
                    return IsSetProvisionText();
                }

                public bool IsSetProvisionText()
                {
                    return IsSetField(Tags.ProvisionText);
                }
                public QuickFix.Fields.EncodedProvisionTextLen EncodedProvisionTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedProvisionTextLen val = new QuickFix.Fields.EncodedProvisionTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedProvisionTextLen val)
                {
                    this.EncodedProvisionTextLen = val;
                }

                public QuickFix.Fields.EncodedProvisionTextLen Get(QuickFix.Fields.EncodedProvisionTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedProvisionTextLen val)
                {
                    return IsSetEncodedProvisionTextLen();
                }

                public bool IsSetEncodedProvisionTextLen()
                {
                    return IsSetField(Tags.EncodedProvisionTextLen);
                }
                public QuickFix.Fields.EncodedProvisionText EncodedProvisionText
                {
                    get
                    {
                        QuickFix.Fields.EncodedProvisionText val = new QuickFix.Fields.EncodedProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedProvisionText val)
                {
                    this.EncodedProvisionText = val;
                }

                public QuickFix.Fields.EncodedProvisionText Get(QuickFix.Fields.EncodedProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedProvisionText val)
                {
                    return IsSetEncodedProvisionText();
                }

                public bool IsSetEncodedProvisionText()
                {
                    return IsSetField(Tags.EncodedProvisionText);
                }
                public QuickFix.Fields.NoProvisionPartyIDs NoProvisionPartyIDs
                {
                    get
                    {
                        QuickFix.Fields.NoProvisionPartyIDs val = new QuickFix.Fields.NoProvisionPartyIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProvisionPartyIDs val)
                {
                    this.NoProvisionPartyIDs = val;
                }

                public QuickFix.Fields.NoProvisionPartyIDs Get(QuickFix.Fields.NoProvisionPartyIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProvisionPartyIDs val)
                {
                    return IsSetNoProvisionPartyIDs();
                }

                public bool IsSetNoProvisionPartyIDs()
                {
                    return IsSetField(Tags.NoProvisionPartyIDs);
                }
                public QuickFix.Fields.ProvisionBreakFeeElection ProvisionBreakFeeElection
                {
                    get
                    {
                        QuickFix.Fields.ProvisionBreakFeeElection val = new QuickFix.Fields.ProvisionBreakFeeElection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionBreakFeeElection val)
                {
                    this.ProvisionBreakFeeElection = val;
                }

                public QuickFix.Fields.ProvisionBreakFeeElection Get(QuickFix.Fields.ProvisionBreakFeeElection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionBreakFeeElection val)
                {
                    return IsSetProvisionBreakFeeElection();
                }

                public bool IsSetProvisionBreakFeeElection()
                {
                    return IsSetField(Tags.ProvisionBreakFeeElection);
                }
                public QuickFix.Fields.ProvisionBreakFeeRate ProvisionBreakFeeRate
                {
                    get
                    {
                        QuickFix.Fields.ProvisionBreakFeeRate val = new QuickFix.Fields.ProvisionBreakFeeRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProvisionBreakFeeRate val)
                {
                    this.ProvisionBreakFeeRate = val;
                }

                public QuickFix.Fields.ProvisionBreakFeeRate Get(QuickFix.Fields.ProvisionBreakFeeRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProvisionBreakFeeRate val)
                {
                    return IsSetProvisionBreakFeeRate();
                }

                public bool IsSetProvisionBreakFeeRate()
                {
                    return IsSetField(Tags.ProvisionBreakFeeRate);
                }
                public class NoProvisionDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionDateBusinessCenter, 0 };

                    public NoProvisionDateBusinessCentersGroup()
                      : base(Tags.NoProvisionDateBusinessCenters, Tags.ProvisionDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionDateBusinessCenter ProvisionDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionDateBusinessCenter val = new QuickFix.Fields.ProvisionDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionDateBusinessCenter val)
                    {
                        this.ProvisionDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionDateBusinessCenter Get(QuickFix.Fields.ProvisionDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionDateBusinessCenter val)
                    {
                        return IsSetProvisionDateBusinessCenter();
                    }

                    public bool IsSetProvisionDateBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionDateBusinessCenter);
                    }

                }
                public class NoProvisionCashSettlValueDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionCashSettlValueDateBusinessCenter, 0 };

                    public NoProvisionCashSettlValueDateBusinessCentersGroup()
                      : base(Tags.NoProvisionCashSettlValueDateBusinessCenters, Tags.ProvisionCashSettlValueDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionCashSettlValueDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter ProvisionCashSettlValueDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter val = new QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter val)
                    {
                        this.ProvisionCashSettlValueDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter Get(QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionCashSettlValueDateBusinessCenter val)
                    {
                        return IsSetProvisionCashSettlValueDateBusinessCenter();
                    }

                    public bool IsSetProvisionCashSettlValueDateBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionCashSettlValueDateBusinessCenter);
                    }

                }
                public class NoProvisionOptionExerciseBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionOptionExerciseBusinessCenter, 0 };

                    public NoProvisionOptionExerciseBusinessCentersGroup()
                      : base(Tags.NoProvisionOptionExerciseBusinessCenters, Tags.ProvisionOptionExerciseBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionOptionExerciseBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionOptionExerciseBusinessCenter ProvisionOptionExerciseBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionOptionExerciseBusinessCenter val = new QuickFix.Fields.ProvisionOptionExerciseBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionOptionExerciseBusinessCenter val)
                    {
                        this.ProvisionOptionExerciseBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionOptionExerciseBusinessCenter Get(QuickFix.Fields.ProvisionOptionExerciseBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseBusinessCenter val)
                    {
                        return IsSetProvisionOptionExerciseBusinessCenter();
                    }

                    public bool IsSetProvisionOptionExerciseBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionOptionExerciseBusinessCenter);
                    }

                }
                public class NoProvisionOptionExerciseFixedDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionOptionExerciseFixedDate, Tags.ProvisionOptionExerciseFixedDateType, 0 };

                    public NoProvisionOptionExerciseFixedDatesGroup()
                      : base(Tags.NoProvisionOptionExerciseFixedDates, Tags.ProvisionOptionExerciseFixedDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionOptionExerciseFixedDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionOptionExerciseFixedDate ProvisionOptionExerciseFixedDate
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionOptionExerciseFixedDate val = new QuickFix.Fields.ProvisionOptionExerciseFixedDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionOptionExerciseFixedDate val)
                    {
                        this.ProvisionOptionExerciseFixedDate = val;
                    }

                    public QuickFix.Fields.ProvisionOptionExerciseFixedDate Get(QuickFix.Fields.ProvisionOptionExerciseFixedDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseFixedDate val)
                    {
                        return IsSetProvisionOptionExerciseFixedDate();
                    }

                    public bool IsSetProvisionOptionExerciseFixedDate()
                    {
                        return IsSetField(Tags.ProvisionOptionExerciseFixedDate);
                    }
                    public QuickFix.Fields.ProvisionOptionExerciseFixedDateType ProvisionOptionExerciseFixedDateType
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionOptionExerciseFixedDateType val = new QuickFix.Fields.ProvisionOptionExerciseFixedDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionOptionExerciseFixedDateType val)
                    {
                        this.ProvisionOptionExerciseFixedDateType = val;
                    }

                    public QuickFix.Fields.ProvisionOptionExerciseFixedDateType Get(QuickFix.Fields.ProvisionOptionExerciseFixedDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionOptionExerciseFixedDateType val)
                    {
                        return IsSetProvisionOptionExerciseFixedDateType();
                    }

                    public bool IsSetProvisionOptionExerciseFixedDateType()
                    {
                        return IsSetField(Tags.ProvisionOptionExerciseFixedDateType);
                    }

                }
                public class NoProvisionOptionExpirationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionOptionExpirationDateBusinessCenter, 0 };

                    public NoProvisionOptionExpirationDateBusinessCentersGroup()
                      : base(Tags.NoProvisionOptionExpirationDateBusinessCenters, Tags.ProvisionOptionExpirationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionOptionExpirationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter ProvisionOptionExpirationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter val = new QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter val)
                    {
                        this.ProvisionOptionExpirationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter Get(QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionOptionExpirationDateBusinessCenter val)
                    {
                        return IsSetProvisionOptionExpirationDateBusinessCenter();
                    }

                    public bool IsSetProvisionOptionExpirationDateBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionOptionExpirationDateBusinessCenter);
                    }

                }
                public class NoProvisionOptionRelevantUnderlyingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionOptionRelevantUnderlyingDateBusinessCenter, 0 };

                    public NoProvisionOptionRelevantUnderlyingDateBusinessCentersGroup()
                      : base(Tags.NoProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.ProvisionOptionRelevantUnderlyingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionOptionRelevantUnderlyingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter ProvisionOptionRelevantUnderlyingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter val = new QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        this.ProvisionOptionRelevantUnderlyingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter Get(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        return IsSetProvisionOptionRelevantUnderlyingDateBusinessCenter();
                    }

                    public bool IsSetProvisionOptionRelevantUnderlyingDateBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionOptionRelevantUnderlyingDateBusinessCenter);
                    }

                }
                public class NoProvisionCashSettlPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionCashSettlPaymentDateBusinessCenter, 0 };

                    public NoProvisionCashSettlPaymentDateBusinessCentersGroup()
                      : base(Tags.NoProvisionCashSettlPaymentDateBusinessCenters, Tags.ProvisionCashSettlPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionCashSettlPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter ProvisionCashSettlPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter val = new QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        this.ProvisionCashSettlPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter Get(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        return IsSetProvisionCashSettlPaymentDateBusinessCenter();
                    }

                    public bool IsSetProvisionCashSettlPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.ProvisionCashSettlPaymentDateBusinessCenter);
                    }

                }
                public class NoProvisionCashSettlPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionCashSettlPaymentDate, Tags.ProvisionCashSettlPaymentDateType, 0 };

                    public NoProvisionCashSettlPaymentDatesGroup()
                      : base(Tags.NoProvisionCashSettlPaymentDates, Tags.ProvisionCashSettlPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionCashSettlPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionCashSettlPaymentDate ProvisionCashSettlPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionCashSettlPaymentDate val = new QuickFix.Fields.ProvisionCashSettlPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDate val)
                    {
                        this.ProvisionCashSettlPaymentDate = val;
                    }

                    public QuickFix.Fields.ProvisionCashSettlPaymentDate Get(QuickFix.Fields.ProvisionCashSettlPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDate val)
                    {
                        return IsSetProvisionCashSettlPaymentDate();
                    }

                    public bool IsSetProvisionCashSettlPaymentDate()
                    {
                        return IsSetField(Tags.ProvisionCashSettlPaymentDate);
                    }
                    public QuickFix.Fields.ProvisionCashSettlPaymentDateType ProvisionCashSettlPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionCashSettlPaymentDateType val = new QuickFix.Fields.ProvisionCashSettlPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionCashSettlPaymentDateType val)
                    {
                        this.ProvisionCashSettlPaymentDateType = val;
                    }

                    public QuickFix.Fields.ProvisionCashSettlPaymentDateType Get(QuickFix.Fields.ProvisionCashSettlPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionCashSettlPaymentDateType val)
                    {
                        return IsSetProvisionCashSettlPaymentDateType();
                    }

                    public bool IsSetProvisionCashSettlPaymentDateType()
                    {
                        return IsSetField(Tags.ProvisionCashSettlPaymentDateType);
                    }

                }
                public class NoProvisionPartyIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProvisionPartyID, Tags.ProvisionPartyIDSource, Tags.ProvisionPartyRole, Tags.NoProvisionPartySubIDs, Tags.ProvisionPartyRoleQualifier, 0 };

                    public NoProvisionPartyIDsGroup()
                      : base(Tags.NoProvisionPartyIDs, Tags.ProvisionPartyID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProvisionPartyIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProvisionPartyID ProvisionPartyID
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionPartyID val = new QuickFix.Fields.ProvisionPartyID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionPartyID val)
                    {
                        this.ProvisionPartyID = val;
                    }

                    public QuickFix.Fields.ProvisionPartyID Get(QuickFix.Fields.ProvisionPartyID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionPartyID val)
                    {
                        return IsSetProvisionPartyID();
                    }

                    public bool IsSetProvisionPartyID()
                    {
                        return IsSetField(Tags.ProvisionPartyID);
                    }
                    public QuickFix.Fields.ProvisionPartyIDSource ProvisionPartyIDSource
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionPartyIDSource val = new QuickFix.Fields.ProvisionPartyIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionPartyIDSource val)
                    {
                        this.ProvisionPartyIDSource = val;
                    }

                    public QuickFix.Fields.ProvisionPartyIDSource Get(QuickFix.Fields.ProvisionPartyIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionPartyIDSource val)
                    {
                        return IsSetProvisionPartyIDSource();
                    }

                    public bool IsSetProvisionPartyIDSource()
                    {
                        return IsSetField(Tags.ProvisionPartyIDSource);
                    }
                    public QuickFix.Fields.ProvisionPartyRole ProvisionPartyRole
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionPartyRole val = new QuickFix.Fields.ProvisionPartyRole();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionPartyRole val)
                    {
                        this.ProvisionPartyRole = val;
                    }

                    public QuickFix.Fields.ProvisionPartyRole Get(QuickFix.Fields.ProvisionPartyRole val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionPartyRole val)
                    {
                        return IsSetProvisionPartyRole();
                    }

                    public bool IsSetProvisionPartyRole()
                    {
                        return IsSetField(Tags.ProvisionPartyRole);
                    }
                    public QuickFix.Fields.NoProvisionPartySubIDs NoProvisionPartySubIDs
                    {
                        get
                        {
                            QuickFix.Fields.NoProvisionPartySubIDs val = new QuickFix.Fields.NoProvisionPartySubIDs();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoProvisionPartySubIDs val)
                    {
                        this.NoProvisionPartySubIDs = val;
                    }

                    public QuickFix.Fields.NoProvisionPartySubIDs Get(QuickFix.Fields.NoProvisionPartySubIDs val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoProvisionPartySubIDs val)
                    {
                        return IsSetNoProvisionPartySubIDs();
                    }

                    public bool IsSetNoProvisionPartySubIDs()
                    {
                        return IsSetField(Tags.NoProvisionPartySubIDs);
                    }
                    public QuickFix.Fields.ProvisionPartyRoleQualifier ProvisionPartyRoleQualifier
                    {
                        get
                        {
                            QuickFix.Fields.ProvisionPartyRoleQualifier val = new QuickFix.Fields.ProvisionPartyRoleQualifier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProvisionPartyRoleQualifier val)
                    {
                        this.ProvisionPartyRoleQualifier = val;
                    }

                    public QuickFix.Fields.ProvisionPartyRoleQualifier Get(QuickFix.Fields.ProvisionPartyRoleQualifier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProvisionPartyRoleQualifier val)
                    {
                        return IsSetProvisionPartyRoleQualifier();
                    }

                    public bool IsSetProvisionPartyRoleQualifier()
                    {
                        return IsSetField(Tags.ProvisionPartyRoleQualifier);
                    }
                    public class NoProvisionPartySubIDsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ProvisionPartySubID, Tags.ProvisionPartySubIDType, 0 };

                        public NoProvisionPartySubIDsGroup()
                          : base(Tags.NoProvisionPartySubIDs, Tags.ProvisionPartySubID, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoProvisionPartySubIDsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ProvisionPartySubID ProvisionPartySubID
                        {
                            get
                            {
                                QuickFix.Fields.ProvisionPartySubID val = new QuickFix.Fields.ProvisionPartySubID();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ProvisionPartySubID val)
                        {
                            this.ProvisionPartySubID = val;
                        }

                        public QuickFix.Fields.ProvisionPartySubID Get(QuickFix.Fields.ProvisionPartySubID val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ProvisionPartySubID val)
                        {
                            return IsSetProvisionPartySubID();
                        }

                        public bool IsSetProvisionPartySubID()
                        {
                            return IsSetField(Tags.ProvisionPartySubID);
                        }
                        public QuickFix.Fields.ProvisionPartySubIDType ProvisionPartySubIDType
                        {
                            get
                            {
                                QuickFix.Fields.ProvisionPartySubIDType val = new QuickFix.Fields.ProvisionPartySubIDType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ProvisionPartySubIDType val)
                        {
                            this.ProvisionPartySubIDType = val;
                        }

                        public QuickFix.Fields.ProvisionPartySubIDType Get(QuickFix.Fields.ProvisionPartySubIDType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ProvisionPartySubIDType val)
                        {
                            return IsSetProvisionPartySubIDType();
                        }

                        public bool IsSetProvisionPartySubIDType()
                        {
                            return IsSetField(Tags.ProvisionPartySubIDType);
                        }

                    }
                }
            }
            public class NoAdditionalTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.AdditionalTermConditionPrecedentBondIndicator, Tags.AdditionalTermDiscrepancyClauseIndicator, Tags.NoAdditionalTermBondRefs, 0 };

                public NoAdditionalTermsGroup()
                  : base(Tags.NoAdditionalTerms, Tags.AdditionalTermConditionPrecedentBondIndicator, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoAdditionalTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator AdditionalTermConditionPrecedentBondIndicator
                {
                    get
                    {
                        QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator val = new QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator val)
                {
                    this.AdditionalTermConditionPrecedentBondIndicator = val;
                }

                public QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator Get(QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AdditionalTermConditionPrecedentBondIndicator val)
                {
                    return IsSetAdditionalTermConditionPrecedentBondIndicator();
                }

                public bool IsSetAdditionalTermConditionPrecedentBondIndicator()
                {
                    return IsSetField(Tags.AdditionalTermConditionPrecedentBondIndicator);
                }
                public QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator AdditionalTermDiscrepancyClauseIndicator
                {
                    get
                    {
                        QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator val = new QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator val)
                {
                    this.AdditionalTermDiscrepancyClauseIndicator = val;
                }

                public QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator Get(QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AdditionalTermDiscrepancyClauseIndicator val)
                {
                    return IsSetAdditionalTermDiscrepancyClauseIndicator();
                }

                public bool IsSetAdditionalTermDiscrepancyClauseIndicator()
                {
                    return IsSetField(Tags.AdditionalTermDiscrepancyClauseIndicator);
                }
                public QuickFix.Fields.NoAdditionalTermBondRefs NoAdditionalTermBondRefs
                {
                    get
                    {
                        QuickFix.Fields.NoAdditionalTermBondRefs val = new QuickFix.Fields.NoAdditionalTermBondRefs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoAdditionalTermBondRefs val)
                {
                    this.NoAdditionalTermBondRefs = val;
                }

                public QuickFix.Fields.NoAdditionalTermBondRefs Get(QuickFix.Fields.NoAdditionalTermBondRefs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoAdditionalTermBondRefs val)
                {
                    return IsSetNoAdditionalTermBondRefs();
                }

                public bool IsSetNoAdditionalTermBondRefs()
                {
                    return IsSetField(Tags.NoAdditionalTermBondRefs);
                }
                public class NoAdditionalTermBondRefsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.AdditionalTermBondSecurityID, Tags.AdditionalTermBondSecurityIDSource, Tags.AdditionalTermBondDesc, Tags.EncodedAdditionalTermBondDescLen, Tags.EncodedAdditionalTermBondDesc, Tags.AdditionalTermBondCurrency, Tags.AdditionalTermBondIssuer, Tags.EncodedAdditionalTermBondIssuerLen, Tags.EncodedAdditionalTermBondIssuer, Tags.AdditionalTermBondSeniority, Tags.AdditionalTermBondCouponType, Tags.AdditionalTermBondCouponRate, Tags.AdditionalTermBondMaturityDate, Tags.AdditionalTermBondParValue, Tags.AdditionalTermBondCurrentTotalIssuedAmount, Tags.AdditionalTermBondCouponFrequencyPeriod, Tags.AdditionalTermBondCouponFrequencyUnit, Tags.AdditionalTermBondDayCount, 0 };

                    public NoAdditionalTermBondRefsGroup()
                      : base(Tags.NoAdditionalTermBondRefs, Tags.AdditionalTermBondSecurityID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoAdditionalTermBondRefsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.AdditionalTermBondSecurityID AdditionalTermBondSecurityID
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondSecurityID val = new QuickFix.Fields.AdditionalTermBondSecurityID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondSecurityID val)
                    {
                        this.AdditionalTermBondSecurityID = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondSecurityID Get(QuickFix.Fields.AdditionalTermBondSecurityID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondSecurityID val)
                    {
                        return IsSetAdditionalTermBondSecurityID();
                    }

                    public bool IsSetAdditionalTermBondSecurityID()
                    {
                        return IsSetField(Tags.AdditionalTermBondSecurityID);
                    }
                    public QuickFix.Fields.AdditionalTermBondSecurityIDSource AdditionalTermBondSecurityIDSource
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondSecurityIDSource val = new QuickFix.Fields.AdditionalTermBondSecurityIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondSecurityIDSource val)
                    {
                        this.AdditionalTermBondSecurityIDSource = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondSecurityIDSource Get(QuickFix.Fields.AdditionalTermBondSecurityIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondSecurityIDSource val)
                    {
                        return IsSetAdditionalTermBondSecurityIDSource();
                    }

                    public bool IsSetAdditionalTermBondSecurityIDSource()
                    {
                        return IsSetField(Tags.AdditionalTermBondSecurityIDSource);
                    }
                    public QuickFix.Fields.AdditionalTermBondDesc AdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondDesc val = new QuickFix.Fields.AdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondDesc val)
                    {
                        this.AdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondDesc Get(QuickFix.Fields.AdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondDesc val)
                    {
                        return IsSetAdditionalTermBondDesc();
                    }

                    public bool IsSetAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.AdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.EncodedAdditionalTermBondDescLen EncodedAdditionalTermBondDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedAdditionalTermBondDescLen val = new QuickFix.Fields.EncodedAdditionalTermBondDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedAdditionalTermBondDescLen val)
                    {
                        this.EncodedAdditionalTermBondDescLen = val;
                    }

                    public QuickFix.Fields.EncodedAdditionalTermBondDescLen Get(QuickFix.Fields.EncodedAdditionalTermBondDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedAdditionalTermBondDescLen val)
                    {
                        return IsSetEncodedAdditionalTermBondDescLen();
                    }

                    public bool IsSetEncodedAdditionalTermBondDescLen()
                    {
                        return IsSetField(Tags.EncodedAdditionalTermBondDescLen);
                    }
                    public QuickFix.Fields.EncodedAdditionalTermBondDesc EncodedAdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedAdditionalTermBondDesc val = new QuickFix.Fields.EncodedAdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedAdditionalTermBondDesc val)
                    {
                        this.EncodedAdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.EncodedAdditionalTermBondDesc Get(QuickFix.Fields.EncodedAdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedAdditionalTermBondDesc val)
                    {
                        return IsSetEncodedAdditionalTermBondDesc();
                    }

                    public bool IsSetEncodedAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.EncodedAdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.AdditionalTermBondCurrency AdditionalTermBondCurrency
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCurrency val = new QuickFix.Fields.AdditionalTermBondCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCurrency val)
                    {
                        this.AdditionalTermBondCurrency = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCurrency Get(QuickFix.Fields.AdditionalTermBondCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCurrency val)
                    {
                        return IsSetAdditionalTermBondCurrency();
                    }

                    public bool IsSetAdditionalTermBondCurrency()
                    {
                        return IsSetField(Tags.AdditionalTermBondCurrency);
                    }
                    public QuickFix.Fields.AdditionalTermBondIssuer AdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondIssuer val = new QuickFix.Fields.AdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondIssuer val)
                    {
                        this.AdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondIssuer Get(QuickFix.Fields.AdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondIssuer val)
                    {
                        return IsSetAdditionalTermBondIssuer();
                    }

                    public bool IsSetAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.AdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.EncodedAdditionalTermBondIssuerLen EncodedAdditionalTermBondIssuerLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedAdditionalTermBondIssuerLen val = new QuickFix.Fields.EncodedAdditionalTermBondIssuerLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedAdditionalTermBondIssuerLen val)
                    {
                        this.EncodedAdditionalTermBondIssuerLen = val;
                    }

                    public QuickFix.Fields.EncodedAdditionalTermBondIssuerLen Get(QuickFix.Fields.EncodedAdditionalTermBondIssuerLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedAdditionalTermBondIssuerLen val)
                    {
                        return IsSetEncodedAdditionalTermBondIssuerLen();
                    }

                    public bool IsSetEncodedAdditionalTermBondIssuerLen()
                    {
                        return IsSetField(Tags.EncodedAdditionalTermBondIssuerLen);
                    }
                    public QuickFix.Fields.EncodedAdditionalTermBondIssuer EncodedAdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.EncodedAdditionalTermBondIssuer val = new QuickFix.Fields.EncodedAdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedAdditionalTermBondIssuer val)
                    {
                        this.EncodedAdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.EncodedAdditionalTermBondIssuer Get(QuickFix.Fields.EncodedAdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedAdditionalTermBondIssuer val)
                    {
                        return IsSetEncodedAdditionalTermBondIssuer();
                    }

                    public bool IsSetEncodedAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.EncodedAdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.AdditionalTermBondSeniority AdditionalTermBondSeniority
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondSeniority val = new QuickFix.Fields.AdditionalTermBondSeniority();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondSeniority val)
                    {
                        this.AdditionalTermBondSeniority = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondSeniority Get(QuickFix.Fields.AdditionalTermBondSeniority val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondSeniority val)
                    {
                        return IsSetAdditionalTermBondSeniority();
                    }

                    public bool IsSetAdditionalTermBondSeniority()
                    {
                        return IsSetField(Tags.AdditionalTermBondSeniority);
                    }
                    public QuickFix.Fields.AdditionalTermBondCouponType AdditionalTermBondCouponType
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCouponType val = new QuickFix.Fields.AdditionalTermBondCouponType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCouponType val)
                    {
                        this.AdditionalTermBondCouponType = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCouponType Get(QuickFix.Fields.AdditionalTermBondCouponType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCouponType val)
                    {
                        return IsSetAdditionalTermBondCouponType();
                    }

                    public bool IsSetAdditionalTermBondCouponType()
                    {
                        return IsSetField(Tags.AdditionalTermBondCouponType);
                    }
                    public QuickFix.Fields.AdditionalTermBondCouponRate AdditionalTermBondCouponRate
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCouponRate val = new QuickFix.Fields.AdditionalTermBondCouponRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCouponRate val)
                    {
                        this.AdditionalTermBondCouponRate = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCouponRate Get(QuickFix.Fields.AdditionalTermBondCouponRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCouponRate val)
                    {
                        return IsSetAdditionalTermBondCouponRate();
                    }

                    public bool IsSetAdditionalTermBondCouponRate()
                    {
                        return IsSetField(Tags.AdditionalTermBondCouponRate);
                    }
                    public QuickFix.Fields.AdditionalTermBondMaturityDate AdditionalTermBondMaturityDate
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondMaturityDate val = new QuickFix.Fields.AdditionalTermBondMaturityDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondMaturityDate val)
                    {
                        this.AdditionalTermBondMaturityDate = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondMaturityDate Get(QuickFix.Fields.AdditionalTermBondMaturityDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondMaturityDate val)
                    {
                        return IsSetAdditionalTermBondMaturityDate();
                    }

                    public bool IsSetAdditionalTermBondMaturityDate()
                    {
                        return IsSetField(Tags.AdditionalTermBondMaturityDate);
                    }
                    public QuickFix.Fields.AdditionalTermBondParValue AdditionalTermBondParValue
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondParValue val = new QuickFix.Fields.AdditionalTermBondParValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondParValue val)
                    {
                        this.AdditionalTermBondParValue = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondParValue Get(QuickFix.Fields.AdditionalTermBondParValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondParValue val)
                    {
                        return IsSetAdditionalTermBondParValue();
                    }

                    public bool IsSetAdditionalTermBondParValue()
                    {
                        return IsSetField(Tags.AdditionalTermBondParValue);
                    }
                    public QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount AdditionalTermBondCurrentTotalIssuedAmount
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount val = new QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        this.AdditionalTermBondCurrentTotalIssuedAmount = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount Get(QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        return IsSetAdditionalTermBondCurrentTotalIssuedAmount();
                    }

                    public bool IsSetAdditionalTermBondCurrentTotalIssuedAmount()
                    {
                        return IsSetField(Tags.AdditionalTermBondCurrentTotalIssuedAmount);
                    }
                    public QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod AdditionalTermBondCouponFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod val = new QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod val)
                    {
                        this.AdditionalTermBondCouponFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod Get(QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCouponFrequencyPeriod val)
                    {
                        return IsSetAdditionalTermBondCouponFrequencyPeriod();
                    }

                    public bool IsSetAdditionalTermBondCouponFrequencyPeriod()
                    {
                        return IsSetField(Tags.AdditionalTermBondCouponFrequencyPeriod);
                    }
                    public QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit AdditionalTermBondCouponFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit val = new QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit val)
                    {
                        this.AdditionalTermBondCouponFrequencyUnit = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit Get(QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondCouponFrequencyUnit val)
                    {
                        return IsSetAdditionalTermBondCouponFrequencyUnit();
                    }

                    public bool IsSetAdditionalTermBondCouponFrequencyUnit()
                    {
                        return IsSetField(Tags.AdditionalTermBondCouponFrequencyUnit);
                    }
                    public QuickFix.Fields.AdditionalTermBondDayCount AdditionalTermBondDayCount
                    {
                        get
                        {
                            QuickFix.Fields.AdditionalTermBondDayCount val = new QuickFix.Fields.AdditionalTermBondDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.AdditionalTermBondDayCount val)
                    {
                        this.AdditionalTermBondDayCount = val;
                    }

                    public QuickFix.Fields.AdditionalTermBondDayCount Get(QuickFix.Fields.AdditionalTermBondDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.AdditionalTermBondDayCount val)
                    {
                        return IsSetAdditionalTermBondDayCount();
                    }

                    public bool IsSetAdditionalTermBondDayCount()
                    {
                        return IsSetField(Tags.AdditionalTermBondDayCount);
                    }

                }
            }
            public class NoProtectionTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.ProtectionTermNotional, Tags.ProtectionTermCurrency, Tags.ProtectionTermSellerNotifies, Tags.ProtectionTermBuyerNotifies, Tags.ProtectionTermEventBusinessCenter, Tags.ProtectionTermStandardSources, Tags.ProtectionTermEventMinimumSources, Tags.NoProtectionTermEventNewsSources, Tags.NoProtectionTermEvents, Tags.NoProtectionTermObligations, Tags.ProtectionTermXID, 0 };

                public NoProtectionTermsGroup()
                  : base(Tags.NoProtectionTerms, Tags.ProtectionTermNotional, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoProtectionTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.ProtectionTermNotional ProtectionTermNotional
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermNotional val = new QuickFix.Fields.ProtectionTermNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermNotional val)
                {
                    this.ProtectionTermNotional = val;
                }

                public QuickFix.Fields.ProtectionTermNotional Get(QuickFix.Fields.ProtectionTermNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermNotional val)
                {
                    return IsSetProtectionTermNotional();
                }

                public bool IsSetProtectionTermNotional()
                {
                    return IsSetField(Tags.ProtectionTermNotional);
                }
                public QuickFix.Fields.ProtectionTermCurrency ProtectionTermCurrency
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermCurrency val = new QuickFix.Fields.ProtectionTermCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermCurrency val)
                {
                    this.ProtectionTermCurrency = val;
                }

                public QuickFix.Fields.ProtectionTermCurrency Get(QuickFix.Fields.ProtectionTermCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermCurrency val)
                {
                    return IsSetProtectionTermCurrency();
                }

                public bool IsSetProtectionTermCurrency()
                {
                    return IsSetField(Tags.ProtectionTermCurrency);
                }
                public QuickFix.Fields.ProtectionTermSellerNotifies ProtectionTermSellerNotifies
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermSellerNotifies val = new QuickFix.Fields.ProtectionTermSellerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermSellerNotifies val)
                {
                    this.ProtectionTermSellerNotifies = val;
                }

                public QuickFix.Fields.ProtectionTermSellerNotifies Get(QuickFix.Fields.ProtectionTermSellerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermSellerNotifies val)
                {
                    return IsSetProtectionTermSellerNotifies();
                }

                public bool IsSetProtectionTermSellerNotifies()
                {
                    return IsSetField(Tags.ProtectionTermSellerNotifies);
                }
                public QuickFix.Fields.ProtectionTermBuyerNotifies ProtectionTermBuyerNotifies
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermBuyerNotifies val = new QuickFix.Fields.ProtectionTermBuyerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermBuyerNotifies val)
                {
                    this.ProtectionTermBuyerNotifies = val;
                }

                public QuickFix.Fields.ProtectionTermBuyerNotifies Get(QuickFix.Fields.ProtectionTermBuyerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermBuyerNotifies val)
                {
                    return IsSetProtectionTermBuyerNotifies();
                }

                public bool IsSetProtectionTermBuyerNotifies()
                {
                    return IsSetField(Tags.ProtectionTermBuyerNotifies);
                }
                public QuickFix.Fields.ProtectionTermEventBusinessCenter ProtectionTermEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermEventBusinessCenter val = new QuickFix.Fields.ProtectionTermEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermEventBusinessCenter val)
                {
                    this.ProtectionTermEventBusinessCenter = val;
                }

                public QuickFix.Fields.ProtectionTermEventBusinessCenter Get(QuickFix.Fields.ProtectionTermEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermEventBusinessCenter val)
                {
                    return IsSetProtectionTermEventBusinessCenter();
                }

                public bool IsSetProtectionTermEventBusinessCenter()
                {
                    return IsSetField(Tags.ProtectionTermEventBusinessCenter);
                }
                public QuickFix.Fields.ProtectionTermStandardSources ProtectionTermStandardSources
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermStandardSources val = new QuickFix.Fields.ProtectionTermStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermStandardSources val)
                {
                    this.ProtectionTermStandardSources = val;
                }

                public QuickFix.Fields.ProtectionTermStandardSources Get(QuickFix.Fields.ProtectionTermStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermStandardSources val)
                {
                    return IsSetProtectionTermStandardSources();
                }

                public bool IsSetProtectionTermStandardSources()
                {
                    return IsSetField(Tags.ProtectionTermStandardSources);
                }
                public QuickFix.Fields.ProtectionTermEventMinimumSources ProtectionTermEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermEventMinimumSources val = new QuickFix.Fields.ProtectionTermEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermEventMinimumSources val)
                {
                    this.ProtectionTermEventMinimumSources = val;
                }

                public QuickFix.Fields.ProtectionTermEventMinimumSources Get(QuickFix.Fields.ProtectionTermEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermEventMinimumSources val)
                {
                    return IsSetProtectionTermEventMinimumSources();
                }

                public bool IsSetProtectionTermEventMinimumSources()
                {
                    return IsSetField(Tags.ProtectionTermEventMinimumSources);
                }
                public QuickFix.Fields.NoProtectionTermEventNewsSources NoProtectionTermEventNewsSources
                {
                    get
                    {
                        QuickFix.Fields.NoProtectionTermEventNewsSources val = new QuickFix.Fields.NoProtectionTermEventNewsSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProtectionTermEventNewsSources val)
                {
                    this.NoProtectionTermEventNewsSources = val;
                }

                public QuickFix.Fields.NoProtectionTermEventNewsSources Get(QuickFix.Fields.NoProtectionTermEventNewsSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProtectionTermEventNewsSources val)
                {
                    return IsSetNoProtectionTermEventNewsSources();
                }

                public bool IsSetNoProtectionTermEventNewsSources()
                {
                    return IsSetField(Tags.NoProtectionTermEventNewsSources);
                }
                public QuickFix.Fields.NoProtectionTermEvents NoProtectionTermEvents
                {
                    get
                    {
                        QuickFix.Fields.NoProtectionTermEvents val = new QuickFix.Fields.NoProtectionTermEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProtectionTermEvents val)
                {
                    this.NoProtectionTermEvents = val;
                }

                public QuickFix.Fields.NoProtectionTermEvents Get(QuickFix.Fields.NoProtectionTermEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProtectionTermEvents val)
                {
                    return IsSetNoProtectionTermEvents();
                }

                public bool IsSetNoProtectionTermEvents()
                {
                    return IsSetField(Tags.NoProtectionTermEvents);
                }
                public QuickFix.Fields.NoProtectionTermObligations NoProtectionTermObligations
                {
                    get
                    {
                        QuickFix.Fields.NoProtectionTermObligations val = new QuickFix.Fields.NoProtectionTermObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoProtectionTermObligations val)
                {
                    this.NoProtectionTermObligations = val;
                }

                public QuickFix.Fields.NoProtectionTermObligations Get(QuickFix.Fields.NoProtectionTermObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoProtectionTermObligations val)
                {
                    return IsSetNoProtectionTermObligations();
                }

                public bool IsSetNoProtectionTermObligations()
                {
                    return IsSetField(Tags.NoProtectionTermObligations);
                }
                public QuickFix.Fields.ProtectionTermXID ProtectionTermXID
                {
                    get
                    {
                        QuickFix.Fields.ProtectionTermXID val = new QuickFix.Fields.ProtectionTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ProtectionTermXID val)
                {
                    this.ProtectionTermXID = val;
                }

                public QuickFix.Fields.ProtectionTermXID Get(QuickFix.Fields.ProtectionTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ProtectionTermXID val)
                {
                    return IsSetProtectionTermXID();
                }

                public bool IsSetProtectionTermXID()
                {
                    return IsSetField(Tags.ProtectionTermXID);
                }
                public class NoProtectionTermEventNewsSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProtectionTermEventNewsSource, 0 };

                    public NoProtectionTermEventNewsSourcesGroup()
                      : base(Tags.NoProtectionTermEventNewsSources, Tags.ProtectionTermEventNewsSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProtectionTermEventNewsSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProtectionTermEventNewsSource ProtectionTermEventNewsSource
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventNewsSource val = new QuickFix.Fields.ProtectionTermEventNewsSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventNewsSource val)
                    {
                        this.ProtectionTermEventNewsSource = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventNewsSource Get(QuickFix.Fields.ProtectionTermEventNewsSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventNewsSource val)
                    {
                        return IsSetProtectionTermEventNewsSource();
                    }

                    public bool IsSetProtectionTermEventNewsSource()
                    {
                        return IsSetField(Tags.ProtectionTermEventNewsSource);
                    }

                }
                public class NoProtectionTermEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProtectionTermEventType, Tags.ProtectionTermEventValue, Tags.ProtectionTermEventCurrency, Tags.ProtectionTermEventPeriod, Tags.ProtectionTermEventUnit, Tags.ProtectionTermEventDayType, Tags.ProtectionTermEventRateSource, Tags.NoProtectionTermEventQualifiers, 0 };

                    public NoProtectionTermEventsGroup()
                      : base(Tags.NoProtectionTermEvents, Tags.ProtectionTermEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProtectionTermEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProtectionTermEventType ProtectionTermEventType
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventType val = new QuickFix.Fields.ProtectionTermEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventType val)
                    {
                        this.ProtectionTermEventType = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventType Get(QuickFix.Fields.ProtectionTermEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventType val)
                    {
                        return IsSetProtectionTermEventType();
                    }

                    public bool IsSetProtectionTermEventType()
                    {
                        return IsSetField(Tags.ProtectionTermEventType);
                    }
                    public QuickFix.Fields.ProtectionTermEventValue ProtectionTermEventValue
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventValue val = new QuickFix.Fields.ProtectionTermEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventValue val)
                    {
                        this.ProtectionTermEventValue = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventValue Get(QuickFix.Fields.ProtectionTermEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventValue val)
                    {
                        return IsSetProtectionTermEventValue();
                    }

                    public bool IsSetProtectionTermEventValue()
                    {
                        return IsSetField(Tags.ProtectionTermEventValue);
                    }
                    public QuickFix.Fields.ProtectionTermEventCurrency ProtectionTermEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventCurrency val = new QuickFix.Fields.ProtectionTermEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventCurrency val)
                    {
                        this.ProtectionTermEventCurrency = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventCurrency Get(QuickFix.Fields.ProtectionTermEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventCurrency val)
                    {
                        return IsSetProtectionTermEventCurrency();
                    }

                    public bool IsSetProtectionTermEventCurrency()
                    {
                        return IsSetField(Tags.ProtectionTermEventCurrency);
                    }
                    public QuickFix.Fields.ProtectionTermEventPeriod ProtectionTermEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventPeriod val = new QuickFix.Fields.ProtectionTermEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventPeriod val)
                    {
                        this.ProtectionTermEventPeriod = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventPeriod Get(QuickFix.Fields.ProtectionTermEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventPeriod val)
                    {
                        return IsSetProtectionTermEventPeriod();
                    }

                    public bool IsSetProtectionTermEventPeriod()
                    {
                        return IsSetField(Tags.ProtectionTermEventPeriod);
                    }
                    public QuickFix.Fields.ProtectionTermEventUnit ProtectionTermEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventUnit val = new QuickFix.Fields.ProtectionTermEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventUnit val)
                    {
                        this.ProtectionTermEventUnit = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventUnit Get(QuickFix.Fields.ProtectionTermEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventUnit val)
                    {
                        return IsSetProtectionTermEventUnit();
                    }

                    public bool IsSetProtectionTermEventUnit()
                    {
                        return IsSetField(Tags.ProtectionTermEventUnit);
                    }
                    public QuickFix.Fields.ProtectionTermEventDayType ProtectionTermEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventDayType val = new QuickFix.Fields.ProtectionTermEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventDayType val)
                    {
                        this.ProtectionTermEventDayType = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventDayType Get(QuickFix.Fields.ProtectionTermEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventDayType val)
                    {
                        return IsSetProtectionTermEventDayType();
                    }

                    public bool IsSetProtectionTermEventDayType()
                    {
                        return IsSetField(Tags.ProtectionTermEventDayType);
                    }
                    public QuickFix.Fields.ProtectionTermEventRateSource ProtectionTermEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermEventRateSource val = new QuickFix.Fields.ProtectionTermEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermEventRateSource val)
                    {
                        this.ProtectionTermEventRateSource = val;
                    }

                    public QuickFix.Fields.ProtectionTermEventRateSource Get(QuickFix.Fields.ProtectionTermEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermEventRateSource val)
                    {
                        return IsSetProtectionTermEventRateSource();
                    }

                    public bool IsSetProtectionTermEventRateSource()
                    {
                        return IsSetField(Tags.ProtectionTermEventRateSource);
                    }
                    public QuickFix.Fields.NoProtectionTermEventQualifiers NoProtectionTermEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoProtectionTermEventQualifiers val = new QuickFix.Fields.NoProtectionTermEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoProtectionTermEventQualifiers val)
                    {
                        this.NoProtectionTermEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoProtectionTermEventQualifiers Get(QuickFix.Fields.NoProtectionTermEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoProtectionTermEventQualifiers val)
                    {
                        return IsSetNoProtectionTermEventQualifiers();
                    }

                    public bool IsSetNoProtectionTermEventQualifiers()
                    {
                        return IsSetField(Tags.NoProtectionTermEventQualifiers);
                    }
                    public class NoProtectionTermEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.ProtectionTermEventQualifier, 0 };

                        public NoProtectionTermEventQualifiersGroup()
                          : base(Tags.NoProtectionTermEventQualifiers, Tags.ProtectionTermEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoProtectionTermEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.ProtectionTermEventQualifier ProtectionTermEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.ProtectionTermEventQualifier val = new QuickFix.Fields.ProtectionTermEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.ProtectionTermEventQualifier val)
                        {
                            this.ProtectionTermEventQualifier = val;
                        }

                        public QuickFix.Fields.ProtectionTermEventQualifier Get(QuickFix.Fields.ProtectionTermEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.ProtectionTermEventQualifier val)
                        {
                            return IsSetProtectionTermEventQualifier();
                        }

                        public bool IsSetProtectionTermEventQualifier()
                        {
                            return IsSetField(Tags.ProtectionTermEventQualifier);
                        }

                    }
                }
                public class NoProtectionTermObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.ProtectionTermObligationType, Tags.ProtectionTermObligationValue, 0 };

                    public NoProtectionTermObligationsGroup()
                      : base(Tags.NoProtectionTermObligations, Tags.ProtectionTermObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoProtectionTermObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.ProtectionTermObligationType ProtectionTermObligationType
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermObligationType val = new QuickFix.Fields.ProtectionTermObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermObligationType val)
                    {
                        this.ProtectionTermObligationType = val;
                    }

                    public QuickFix.Fields.ProtectionTermObligationType Get(QuickFix.Fields.ProtectionTermObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermObligationType val)
                    {
                        return IsSetProtectionTermObligationType();
                    }

                    public bool IsSetProtectionTermObligationType()
                    {
                        return IsSetField(Tags.ProtectionTermObligationType);
                    }
                    public QuickFix.Fields.ProtectionTermObligationValue ProtectionTermObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.ProtectionTermObligationValue val = new QuickFix.Fields.ProtectionTermObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.ProtectionTermObligationValue val)
                    {
                        this.ProtectionTermObligationValue = val;
                    }

                    public QuickFix.Fields.ProtectionTermObligationValue Get(QuickFix.Fields.ProtectionTermObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.ProtectionTermObligationValue val)
                    {
                        return IsSetProtectionTermObligationValue();
                    }

                    public bool IsSetProtectionTermObligationValue()
                    {
                        return IsSetField(Tags.ProtectionTermObligationValue);
                    }

                }
            }
            public class NoCashSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.CashSettlCurrency, Tags.CashSettlValuationFirstBusinessDayOffset, Tags.CashSettlValuationSubsequentBusinessDaysOffset, Tags.CashSettlNumOfValuationDates, Tags.CashSettlValuationTime, Tags.CashSettlBusinessCenter, Tags.CashSettlQuoteMethod, Tags.CashSettlQuoteAmount, Tags.CashSettlQuoteCurrency, Tags.CashSettlMinimumQuoteAmount, Tags.CashSettlMinimumQuoteCurrency, Tags.NoCashSettlDealers, Tags.CashSettlBusinessDays, Tags.CashSettlAmount, Tags.CashSettlRecoveryFactor, Tags.CashSettlFixedTermIndicator, Tags.CashSettlAccruedInterestIndicator, Tags.CashSettlValuationMethod, Tags.CashSettlTermXID, Tags.CashSettlPriceSource, Tags.CashSettlPriceDefault, Tags.CashSettlDateUnadjusted, Tags.CashSettlDateBusinessDayConvention, Tags.NoCashSettlDateBusinessCenters, Tags.CashSettlDateRelativeTo, Tags.CashSettlDateOffsetPeriod, Tags.CashSettlDateOffsetUnit, Tags.CashSettlDateOffsetDayType, Tags.CashSettlDateAdjusted, 0 };

                public NoCashSettlTermsGroup()
                  : base(Tags.NoCashSettlTerms, Tags.CashSettlCurrency, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoCashSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.CashSettlCurrency CashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.CashSettlCurrency val = new QuickFix.Fields.CashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlCurrency val)
                {
                    this.CashSettlCurrency = val;
                }

                public QuickFix.Fields.CashSettlCurrency Get(QuickFix.Fields.CashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlCurrency val)
                {
                    return IsSetCashSettlCurrency();
                }

                public bool IsSetCashSettlCurrency()
                {
                    return IsSetField(Tags.CashSettlCurrency);
                }
                public QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset CashSettlValuationFirstBusinessDayOffset
                {
                    get
                    {
                        QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset val = new QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset val)
                {
                    this.CashSettlValuationFirstBusinessDayOffset = val;
                }

                public QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset Get(QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlValuationFirstBusinessDayOffset val)
                {
                    return IsSetCashSettlValuationFirstBusinessDayOffset();
                }

                public bool IsSetCashSettlValuationFirstBusinessDayOffset()
                {
                    return IsSetField(Tags.CashSettlValuationFirstBusinessDayOffset);
                }
                public QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset CashSettlValuationSubsequentBusinessDaysOffset
                {
                    get
                    {
                        QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset val = new QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    this.CashSettlValuationSubsequentBusinessDaysOffset = val;
                }

                public QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset Get(QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    return IsSetCashSettlValuationSubsequentBusinessDaysOffset();
                }

                public bool IsSetCashSettlValuationSubsequentBusinessDaysOffset()
                {
                    return IsSetField(Tags.CashSettlValuationSubsequentBusinessDaysOffset);
                }
                public QuickFix.Fields.CashSettlNumOfValuationDates CashSettlNumOfValuationDates
                {
                    get
                    {
                        QuickFix.Fields.CashSettlNumOfValuationDates val = new QuickFix.Fields.CashSettlNumOfValuationDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlNumOfValuationDates val)
                {
                    this.CashSettlNumOfValuationDates = val;
                }

                public QuickFix.Fields.CashSettlNumOfValuationDates Get(QuickFix.Fields.CashSettlNumOfValuationDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlNumOfValuationDates val)
                {
                    return IsSetCashSettlNumOfValuationDates();
                }

                public bool IsSetCashSettlNumOfValuationDates()
                {
                    return IsSetField(Tags.CashSettlNumOfValuationDates);
                }
                public QuickFix.Fields.CashSettlValuationTime CashSettlValuationTime
                {
                    get
                    {
                        QuickFix.Fields.CashSettlValuationTime val = new QuickFix.Fields.CashSettlValuationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlValuationTime val)
                {
                    this.CashSettlValuationTime = val;
                }

                public QuickFix.Fields.CashSettlValuationTime Get(QuickFix.Fields.CashSettlValuationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlValuationTime val)
                {
                    return IsSetCashSettlValuationTime();
                }

                public bool IsSetCashSettlValuationTime()
                {
                    return IsSetField(Tags.CashSettlValuationTime);
                }
                public QuickFix.Fields.CashSettlBusinessCenter CashSettlBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.CashSettlBusinessCenter val = new QuickFix.Fields.CashSettlBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlBusinessCenter val)
                {
                    this.CashSettlBusinessCenter = val;
                }

                public QuickFix.Fields.CashSettlBusinessCenter Get(QuickFix.Fields.CashSettlBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlBusinessCenter val)
                {
                    return IsSetCashSettlBusinessCenter();
                }

                public bool IsSetCashSettlBusinessCenter()
                {
                    return IsSetField(Tags.CashSettlBusinessCenter);
                }
                public QuickFix.Fields.CashSettlQuoteMethod CashSettlQuoteMethod
                {
                    get
                    {
                        QuickFix.Fields.CashSettlQuoteMethod val = new QuickFix.Fields.CashSettlQuoteMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlQuoteMethod val)
                {
                    this.CashSettlQuoteMethod = val;
                }

                public QuickFix.Fields.CashSettlQuoteMethod Get(QuickFix.Fields.CashSettlQuoteMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlQuoteMethod val)
                {
                    return IsSetCashSettlQuoteMethod();
                }

                public bool IsSetCashSettlQuoteMethod()
                {
                    return IsSetField(Tags.CashSettlQuoteMethod);
                }
                public QuickFix.Fields.CashSettlQuoteAmount CashSettlQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.CashSettlQuoteAmount val = new QuickFix.Fields.CashSettlQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlQuoteAmount val)
                {
                    this.CashSettlQuoteAmount = val;
                }

                public QuickFix.Fields.CashSettlQuoteAmount Get(QuickFix.Fields.CashSettlQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlQuoteAmount val)
                {
                    return IsSetCashSettlQuoteAmount();
                }

                public bool IsSetCashSettlQuoteAmount()
                {
                    return IsSetField(Tags.CashSettlQuoteAmount);
                }
                public QuickFix.Fields.CashSettlQuoteCurrency CashSettlQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.CashSettlQuoteCurrency val = new QuickFix.Fields.CashSettlQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlQuoteCurrency val)
                {
                    this.CashSettlQuoteCurrency = val;
                }

                public QuickFix.Fields.CashSettlQuoteCurrency Get(QuickFix.Fields.CashSettlQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlQuoteCurrency val)
                {
                    return IsSetCashSettlQuoteCurrency();
                }

                public bool IsSetCashSettlQuoteCurrency()
                {
                    return IsSetField(Tags.CashSettlQuoteCurrency);
                }
                public QuickFix.Fields.CashSettlMinimumQuoteAmount CashSettlMinimumQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.CashSettlMinimumQuoteAmount val = new QuickFix.Fields.CashSettlMinimumQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlMinimumQuoteAmount val)
                {
                    this.CashSettlMinimumQuoteAmount = val;
                }

                public QuickFix.Fields.CashSettlMinimumQuoteAmount Get(QuickFix.Fields.CashSettlMinimumQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlMinimumQuoteAmount val)
                {
                    return IsSetCashSettlMinimumQuoteAmount();
                }

                public bool IsSetCashSettlMinimumQuoteAmount()
                {
                    return IsSetField(Tags.CashSettlMinimumQuoteAmount);
                }
                public QuickFix.Fields.CashSettlMinimumQuoteCurrency CashSettlMinimumQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.CashSettlMinimumQuoteCurrency val = new QuickFix.Fields.CashSettlMinimumQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlMinimumQuoteCurrency val)
                {
                    this.CashSettlMinimumQuoteCurrency = val;
                }

                public QuickFix.Fields.CashSettlMinimumQuoteCurrency Get(QuickFix.Fields.CashSettlMinimumQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlMinimumQuoteCurrency val)
                {
                    return IsSetCashSettlMinimumQuoteCurrency();
                }

                public bool IsSetCashSettlMinimumQuoteCurrency()
                {
                    return IsSetField(Tags.CashSettlMinimumQuoteCurrency);
                }
                public QuickFix.Fields.NoCashSettlDealers NoCashSettlDealers
                {
                    get
                    {
                        QuickFix.Fields.NoCashSettlDealers val = new QuickFix.Fields.NoCashSettlDealers();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoCashSettlDealers val)
                {
                    this.NoCashSettlDealers = val;
                }

                public QuickFix.Fields.NoCashSettlDealers Get(QuickFix.Fields.NoCashSettlDealers val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoCashSettlDealers val)
                {
                    return IsSetNoCashSettlDealers();
                }

                public bool IsSetNoCashSettlDealers()
                {
                    return IsSetField(Tags.NoCashSettlDealers);
                }
                public QuickFix.Fields.CashSettlBusinessDays CashSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.CashSettlBusinessDays val = new QuickFix.Fields.CashSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlBusinessDays val)
                {
                    this.CashSettlBusinessDays = val;
                }

                public QuickFix.Fields.CashSettlBusinessDays Get(QuickFix.Fields.CashSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlBusinessDays val)
                {
                    return IsSetCashSettlBusinessDays();
                }

                public bool IsSetCashSettlBusinessDays()
                {
                    return IsSetField(Tags.CashSettlBusinessDays);
                }
                public QuickFix.Fields.CashSettlAmount CashSettlAmount
                {
                    get
                    {
                        QuickFix.Fields.CashSettlAmount val = new QuickFix.Fields.CashSettlAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlAmount val)
                {
                    this.CashSettlAmount = val;
                }

                public QuickFix.Fields.CashSettlAmount Get(QuickFix.Fields.CashSettlAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlAmount val)
                {
                    return IsSetCashSettlAmount();
                }

                public bool IsSetCashSettlAmount()
                {
                    return IsSetField(Tags.CashSettlAmount);
                }
                public QuickFix.Fields.CashSettlRecoveryFactor CashSettlRecoveryFactor
                {
                    get
                    {
                        QuickFix.Fields.CashSettlRecoveryFactor val = new QuickFix.Fields.CashSettlRecoveryFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlRecoveryFactor val)
                {
                    this.CashSettlRecoveryFactor = val;
                }

                public QuickFix.Fields.CashSettlRecoveryFactor Get(QuickFix.Fields.CashSettlRecoveryFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlRecoveryFactor val)
                {
                    return IsSetCashSettlRecoveryFactor();
                }

                public bool IsSetCashSettlRecoveryFactor()
                {
                    return IsSetField(Tags.CashSettlRecoveryFactor);
                }
                public QuickFix.Fields.CashSettlFixedTermIndicator CashSettlFixedTermIndicator
                {
                    get
                    {
                        QuickFix.Fields.CashSettlFixedTermIndicator val = new QuickFix.Fields.CashSettlFixedTermIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlFixedTermIndicator val)
                {
                    this.CashSettlFixedTermIndicator = val;
                }

                public QuickFix.Fields.CashSettlFixedTermIndicator Get(QuickFix.Fields.CashSettlFixedTermIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlFixedTermIndicator val)
                {
                    return IsSetCashSettlFixedTermIndicator();
                }

                public bool IsSetCashSettlFixedTermIndicator()
                {
                    return IsSetField(Tags.CashSettlFixedTermIndicator);
                }
                public QuickFix.Fields.CashSettlAccruedInterestIndicator CashSettlAccruedInterestIndicator
                {
                    get
                    {
                        QuickFix.Fields.CashSettlAccruedInterestIndicator val = new QuickFix.Fields.CashSettlAccruedInterestIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlAccruedInterestIndicator val)
                {
                    this.CashSettlAccruedInterestIndicator = val;
                }

                public QuickFix.Fields.CashSettlAccruedInterestIndicator Get(QuickFix.Fields.CashSettlAccruedInterestIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlAccruedInterestIndicator val)
                {
                    return IsSetCashSettlAccruedInterestIndicator();
                }

                public bool IsSetCashSettlAccruedInterestIndicator()
                {
                    return IsSetField(Tags.CashSettlAccruedInterestIndicator);
                }
                public QuickFix.Fields.CashSettlValuationMethod CashSettlValuationMethod
                {
                    get
                    {
                        QuickFix.Fields.CashSettlValuationMethod val = new QuickFix.Fields.CashSettlValuationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlValuationMethod val)
                {
                    this.CashSettlValuationMethod = val;
                }

                public QuickFix.Fields.CashSettlValuationMethod Get(QuickFix.Fields.CashSettlValuationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlValuationMethod val)
                {
                    return IsSetCashSettlValuationMethod();
                }

                public bool IsSetCashSettlValuationMethod()
                {
                    return IsSetField(Tags.CashSettlValuationMethod);
                }
                public QuickFix.Fields.CashSettlTermXID CashSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.CashSettlTermXID val = new QuickFix.Fields.CashSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlTermXID val)
                {
                    this.CashSettlTermXID = val;
                }

                public QuickFix.Fields.CashSettlTermXID Get(QuickFix.Fields.CashSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlTermXID val)
                {
                    return IsSetCashSettlTermXID();
                }

                public bool IsSetCashSettlTermXID()
                {
                    return IsSetField(Tags.CashSettlTermXID);
                }
                public QuickFix.Fields.CashSettlPriceSource CashSettlPriceSource
                {
                    get
                    {
                        QuickFix.Fields.CashSettlPriceSource val = new QuickFix.Fields.CashSettlPriceSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlPriceSource val)
                {
                    this.CashSettlPriceSource = val;
                }

                public QuickFix.Fields.CashSettlPriceSource Get(QuickFix.Fields.CashSettlPriceSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlPriceSource val)
                {
                    return IsSetCashSettlPriceSource();
                }

                public bool IsSetCashSettlPriceSource()
                {
                    return IsSetField(Tags.CashSettlPriceSource);
                }
                public QuickFix.Fields.CashSettlPriceDefault CashSettlPriceDefault
                {
                    get
                    {
                        QuickFix.Fields.CashSettlPriceDefault val = new QuickFix.Fields.CashSettlPriceDefault();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlPriceDefault val)
                {
                    this.CashSettlPriceDefault = val;
                }

                public QuickFix.Fields.CashSettlPriceDefault Get(QuickFix.Fields.CashSettlPriceDefault val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlPriceDefault val)
                {
                    return IsSetCashSettlPriceDefault();
                }

                public bool IsSetCashSettlPriceDefault()
                {
                    return IsSetField(Tags.CashSettlPriceDefault);
                }
                public QuickFix.Fields.CashSettlDateUnadjusted CashSettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateUnadjusted val = new QuickFix.Fields.CashSettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateUnadjusted val)
                {
                    this.CashSettlDateUnadjusted = val;
                }

                public QuickFix.Fields.CashSettlDateUnadjusted Get(QuickFix.Fields.CashSettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateUnadjusted val)
                {
                    return IsSetCashSettlDateUnadjusted();
                }

                public bool IsSetCashSettlDateUnadjusted()
                {
                    return IsSetField(Tags.CashSettlDateUnadjusted);
                }
                public QuickFix.Fields.CashSettlDateBusinessDayConvention CashSettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateBusinessDayConvention val = new QuickFix.Fields.CashSettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateBusinessDayConvention val)
                {
                    this.CashSettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.CashSettlDateBusinessDayConvention Get(QuickFix.Fields.CashSettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateBusinessDayConvention val)
                {
                    return IsSetCashSettlDateBusinessDayConvention();
                }

                public bool IsSetCashSettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.CashSettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoCashSettlDateBusinessCenters NoCashSettlDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoCashSettlDateBusinessCenters val = new QuickFix.Fields.NoCashSettlDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoCashSettlDateBusinessCenters val)
                {
                    this.NoCashSettlDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoCashSettlDateBusinessCenters Get(QuickFix.Fields.NoCashSettlDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoCashSettlDateBusinessCenters val)
                {
                    return IsSetNoCashSettlDateBusinessCenters();
                }

                public bool IsSetNoCashSettlDateBusinessCenters()
                {
                    return IsSetField(Tags.NoCashSettlDateBusinessCenters);
                }
                public QuickFix.Fields.CashSettlDateRelativeTo CashSettlDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateRelativeTo val = new QuickFix.Fields.CashSettlDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateRelativeTo val)
                {
                    this.CashSettlDateRelativeTo = val;
                }

                public QuickFix.Fields.CashSettlDateRelativeTo Get(QuickFix.Fields.CashSettlDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateRelativeTo val)
                {
                    return IsSetCashSettlDateRelativeTo();
                }

                public bool IsSetCashSettlDateRelativeTo()
                {
                    return IsSetField(Tags.CashSettlDateRelativeTo);
                }
                public QuickFix.Fields.CashSettlDateOffsetPeriod CashSettlDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateOffsetPeriod val = new QuickFix.Fields.CashSettlDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateOffsetPeriod val)
                {
                    this.CashSettlDateOffsetPeriod = val;
                }

                public QuickFix.Fields.CashSettlDateOffsetPeriod Get(QuickFix.Fields.CashSettlDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateOffsetPeriod val)
                {
                    return IsSetCashSettlDateOffsetPeriod();
                }

                public bool IsSetCashSettlDateOffsetPeriod()
                {
                    return IsSetField(Tags.CashSettlDateOffsetPeriod);
                }
                public QuickFix.Fields.CashSettlDateOffsetUnit CashSettlDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateOffsetUnit val = new QuickFix.Fields.CashSettlDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateOffsetUnit val)
                {
                    this.CashSettlDateOffsetUnit = val;
                }

                public QuickFix.Fields.CashSettlDateOffsetUnit Get(QuickFix.Fields.CashSettlDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateOffsetUnit val)
                {
                    return IsSetCashSettlDateOffsetUnit();
                }

                public bool IsSetCashSettlDateOffsetUnit()
                {
                    return IsSetField(Tags.CashSettlDateOffsetUnit);
                }
                public QuickFix.Fields.CashSettlDateOffsetDayType CashSettlDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateOffsetDayType val = new QuickFix.Fields.CashSettlDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateOffsetDayType val)
                {
                    this.CashSettlDateOffsetDayType = val;
                }

                public QuickFix.Fields.CashSettlDateOffsetDayType Get(QuickFix.Fields.CashSettlDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateOffsetDayType val)
                {
                    return IsSetCashSettlDateOffsetDayType();
                }

                public bool IsSetCashSettlDateOffsetDayType()
                {
                    return IsSetField(Tags.CashSettlDateOffsetDayType);
                }
                public QuickFix.Fields.CashSettlDateAdjusted CashSettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.CashSettlDateAdjusted val = new QuickFix.Fields.CashSettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.CashSettlDateAdjusted val)
                {
                    this.CashSettlDateAdjusted = val;
                }

                public QuickFix.Fields.CashSettlDateAdjusted Get(QuickFix.Fields.CashSettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.CashSettlDateAdjusted val)
                {
                    return IsSetCashSettlDateAdjusted();
                }

                public bool IsSetCashSettlDateAdjusted()
                {
                    return IsSetField(Tags.CashSettlDateAdjusted);
                }
                public class NoCashSettlDealersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.CashSettlDealer, 0 };

                    public NoCashSettlDealersGroup()
                      : base(Tags.NoCashSettlDealers, Tags.CashSettlDealer, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoCashSettlDealersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.CashSettlDealer CashSettlDealer
                    {
                        get
                        {
                            QuickFix.Fields.CashSettlDealer val = new QuickFix.Fields.CashSettlDealer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.CashSettlDealer val)
                    {
                        this.CashSettlDealer = val;
                    }

                    public QuickFix.Fields.CashSettlDealer Get(QuickFix.Fields.CashSettlDealer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.CashSettlDealer val)
                    {
                        return IsSetCashSettlDealer();
                    }

                    public bool IsSetCashSettlDealer()
                    {
                        return IsSetField(Tags.CashSettlDealer);
                    }

                }
                public class NoCashSettlDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.CashSettlDateBusinessCenter, 0 };

                    public NoCashSettlDateBusinessCentersGroup()
                      : base(Tags.NoCashSettlDateBusinessCenters, Tags.CashSettlDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoCashSettlDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.CashSettlDateBusinessCenter CashSettlDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.CashSettlDateBusinessCenter val = new QuickFix.Fields.CashSettlDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.CashSettlDateBusinessCenter val)
                    {
                        this.CashSettlDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.CashSettlDateBusinessCenter Get(QuickFix.Fields.CashSettlDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.CashSettlDateBusinessCenter val)
                    {
                        return IsSetCashSettlDateBusinessCenter();
                    }

                    public bool IsSetCashSettlDateBusinessCenter()
                    {
                        return IsSetField(Tags.CashSettlDateBusinessCenter);
                    }

                }
            }
            public class NoPhysicalSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.NoPhysicalSettlDeliverableObligations, Tags.PhysicalSettlCurrency, Tags.PhysicalSettlBusinessDays, Tags.PhysicalSettlMaximumBusinessDays, Tags.PhysicalSettlTermXID, 0 };

                public NoPhysicalSettlTermsGroup()
                  : base(Tags.NoPhysicalSettlTerms, Tags.NoPhysicalSettlDeliverableObligations, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoPhysicalSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.NoPhysicalSettlDeliverableObligations NoPhysicalSettlDeliverableObligations
                {
                    get
                    {
                        QuickFix.Fields.NoPhysicalSettlDeliverableObligations val = new QuickFix.Fields.NoPhysicalSettlDeliverableObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoPhysicalSettlDeliverableObligations val)
                {
                    this.NoPhysicalSettlDeliverableObligations = val;
                }

                public QuickFix.Fields.NoPhysicalSettlDeliverableObligations Get(QuickFix.Fields.NoPhysicalSettlDeliverableObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoPhysicalSettlDeliverableObligations val)
                {
                    return IsSetNoPhysicalSettlDeliverableObligations();
                }

                public bool IsSetNoPhysicalSettlDeliverableObligations()
                {
                    return IsSetField(Tags.NoPhysicalSettlDeliverableObligations);
                }
                public QuickFix.Fields.PhysicalSettlCurrency PhysicalSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.PhysicalSettlCurrency val = new QuickFix.Fields.PhysicalSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PhysicalSettlCurrency val)
                {
                    this.PhysicalSettlCurrency = val;
                }

                public QuickFix.Fields.PhysicalSettlCurrency Get(QuickFix.Fields.PhysicalSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PhysicalSettlCurrency val)
                {
                    return IsSetPhysicalSettlCurrency();
                }

                public bool IsSetPhysicalSettlCurrency()
                {
                    return IsSetField(Tags.PhysicalSettlCurrency);
                }
                public QuickFix.Fields.PhysicalSettlBusinessDays PhysicalSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.PhysicalSettlBusinessDays val = new QuickFix.Fields.PhysicalSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PhysicalSettlBusinessDays val)
                {
                    this.PhysicalSettlBusinessDays = val;
                }

                public QuickFix.Fields.PhysicalSettlBusinessDays Get(QuickFix.Fields.PhysicalSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PhysicalSettlBusinessDays val)
                {
                    return IsSetPhysicalSettlBusinessDays();
                }

                public bool IsSetPhysicalSettlBusinessDays()
                {
                    return IsSetField(Tags.PhysicalSettlBusinessDays);
                }
                public QuickFix.Fields.PhysicalSettlMaximumBusinessDays PhysicalSettlMaximumBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.PhysicalSettlMaximumBusinessDays val = new QuickFix.Fields.PhysicalSettlMaximumBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PhysicalSettlMaximumBusinessDays val)
                {
                    this.PhysicalSettlMaximumBusinessDays = val;
                }

                public QuickFix.Fields.PhysicalSettlMaximumBusinessDays Get(QuickFix.Fields.PhysicalSettlMaximumBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PhysicalSettlMaximumBusinessDays val)
                {
                    return IsSetPhysicalSettlMaximumBusinessDays();
                }

                public bool IsSetPhysicalSettlMaximumBusinessDays()
                {
                    return IsSetField(Tags.PhysicalSettlMaximumBusinessDays);
                }
                public QuickFix.Fields.PhysicalSettlTermXID PhysicalSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.PhysicalSettlTermXID val = new QuickFix.Fields.PhysicalSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PhysicalSettlTermXID val)
                {
                    this.PhysicalSettlTermXID = val;
                }

                public QuickFix.Fields.PhysicalSettlTermXID Get(QuickFix.Fields.PhysicalSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PhysicalSettlTermXID val)
                {
                    return IsSetPhysicalSettlTermXID();
                }

                public bool IsSetPhysicalSettlTermXID()
                {
                    return IsSetField(Tags.PhysicalSettlTermXID);
                }
                public class NoPhysicalSettlDeliverableObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.PhysicalSettlDeliverableObligationType, Tags.PhysicalSettlDeliverableObligationValue, 0 };

                    public NoPhysicalSettlDeliverableObligationsGroup()
                      : base(Tags.NoPhysicalSettlDeliverableObligations, Tags.PhysicalSettlDeliverableObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoPhysicalSettlDeliverableObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.PhysicalSettlDeliverableObligationType PhysicalSettlDeliverableObligationType
                    {
                        get
                        {
                            QuickFix.Fields.PhysicalSettlDeliverableObligationType val = new QuickFix.Fields.PhysicalSettlDeliverableObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PhysicalSettlDeliverableObligationType val)
                    {
                        this.PhysicalSettlDeliverableObligationType = val;
                    }

                    public QuickFix.Fields.PhysicalSettlDeliverableObligationType Get(QuickFix.Fields.PhysicalSettlDeliverableObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PhysicalSettlDeliverableObligationType val)
                    {
                        return IsSetPhysicalSettlDeliverableObligationType();
                    }

                    public bool IsSetPhysicalSettlDeliverableObligationType()
                    {
                        return IsSetField(Tags.PhysicalSettlDeliverableObligationType);
                    }
                    public QuickFix.Fields.PhysicalSettlDeliverableObligationValue PhysicalSettlDeliverableObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.PhysicalSettlDeliverableObligationValue val = new QuickFix.Fields.PhysicalSettlDeliverableObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.PhysicalSettlDeliverableObligationValue val)
                    {
                        this.PhysicalSettlDeliverableObligationValue = val;
                    }

                    public QuickFix.Fields.PhysicalSettlDeliverableObligationValue Get(QuickFix.Fields.PhysicalSettlDeliverableObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.PhysicalSettlDeliverableObligationValue val)
                    {
                        return IsSetPhysicalSettlDeliverableObligationValue();
                    }

                    public bool IsSetPhysicalSettlDeliverableObligationValue()
                    {
                        return IsSetField(Tags.PhysicalSettlDeliverableObligationValue);
                    }

                }
            }
            public class NoAssetAttributesGroup : Group
            {
                public static int[] fieldOrder = { Tags.AssetAttributeType, Tags.AssetAttributeValue, Tags.AssetAttributeLimit, 0 };

                public NoAssetAttributesGroup()
                  : base(Tags.NoAssetAttributes, Tags.AssetAttributeType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoAssetAttributesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.AssetAttributeType AssetAttributeType
                {
                    get
                    {
                        QuickFix.Fields.AssetAttributeType val = new QuickFix.Fields.AssetAttributeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AssetAttributeType val)
                {
                    this.AssetAttributeType = val;
                }

                public QuickFix.Fields.AssetAttributeType Get(QuickFix.Fields.AssetAttributeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AssetAttributeType val)
                {
                    return IsSetAssetAttributeType();
                }

                public bool IsSetAssetAttributeType()
                {
                    return IsSetField(Tags.AssetAttributeType);
                }
                public QuickFix.Fields.AssetAttributeValue AssetAttributeValue
                {
                    get
                    {
                        QuickFix.Fields.AssetAttributeValue val = new QuickFix.Fields.AssetAttributeValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AssetAttributeValue val)
                {
                    this.AssetAttributeValue = val;
                }

                public QuickFix.Fields.AssetAttributeValue Get(QuickFix.Fields.AssetAttributeValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AssetAttributeValue val)
                {
                    return IsSetAssetAttributeValue();
                }

                public bool IsSetAssetAttributeValue()
                {
                    return IsSetField(Tags.AssetAttributeValue);
                }
                public QuickFix.Fields.AssetAttributeLimit AssetAttributeLimit
                {
                    get
                    {
                        QuickFix.Fields.AssetAttributeLimit val = new QuickFix.Fields.AssetAttributeLimit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.AssetAttributeLimit val)
                {
                    this.AssetAttributeLimit = val;
                }

                public QuickFix.Fields.AssetAttributeLimit Get(QuickFix.Fields.AssetAttributeLimit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.AssetAttributeLimit val)
                {
                    return IsSetAssetAttributeLimit();
                }

                public bool IsSetAssetAttributeLimit()
                {
                    return IsSetField(Tags.AssetAttributeLimit);
                }

            }
            public class NoPricingDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.PricingDateBusinessCenter, 0 };

                public NoPricingDateBusinessCentersGroup()
                  : base(Tags.NoPricingDateBusinessCenters, Tags.PricingDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoPricingDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.PricingDateBusinessCenter PricingDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.PricingDateBusinessCenter val = new QuickFix.Fields.PricingDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.PricingDateBusinessCenter val)
                {
                    this.PricingDateBusinessCenter = val;
                }

                public QuickFix.Fields.PricingDateBusinessCenter Get(QuickFix.Fields.PricingDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.PricingDateBusinessCenter val)
                {
                    return IsSetPricingDateBusinessCenter();
                }

                public bool IsSetPricingDateBusinessCenter()
                {
                    return IsSetField(Tags.PricingDateBusinessCenter);
                }

            }
            public class NoMarketDisruptionEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.MarketDisruptionEvent, Tags.MarketDisruptionValue, 0 };

                public NoMarketDisruptionEventsGroup()
                  : base(Tags.NoMarketDisruptionEvents, Tags.MarketDisruptionEvent, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoMarketDisruptionEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.MarketDisruptionEvent MarketDisruptionEvent
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionEvent val = new QuickFix.Fields.MarketDisruptionEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionEvent val)
                {
                    this.MarketDisruptionEvent = val;
                }

                public QuickFix.Fields.MarketDisruptionEvent Get(QuickFix.Fields.MarketDisruptionEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionEvent val)
                {
                    return IsSetMarketDisruptionEvent();
                }

                public bool IsSetMarketDisruptionEvent()
                {
                    return IsSetField(Tags.MarketDisruptionEvent);
                }
                public QuickFix.Fields.MarketDisruptionValue MarketDisruptionValue
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionValue val = new QuickFix.Fields.MarketDisruptionValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionValue val)
                {
                    this.MarketDisruptionValue = val;
                }

                public QuickFix.Fields.MarketDisruptionValue Get(QuickFix.Fields.MarketDisruptionValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionValue val)
                {
                    return IsSetMarketDisruptionValue();
                }

                public bool IsSetMarketDisruptionValue()
                {
                    return IsSetField(Tags.MarketDisruptionValue);
                }

            }
            public class NoMarketDisruptionFallbacksGroup : Group
            {
                public static int[] fieldOrder = { Tags.MarketDisruptionFallbackType, Tags.MarketDisruptionFallbackValue, 0 };

                public NoMarketDisruptionFallbacksGroup()
                  : base(Tags.NoMarketDisruptionFallbacks, Tags.MarketDisruptionFallbackType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoMarketDisruptionFallbacksGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.MarketDisruptionFallbackType MarketDisruptionFallbackType
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackType val = new QuickFix.Fields.MarketDisruptionFallbackType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackType val)
                {
                    this.MarketDisruptionFallbackType = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackType Get(QuickFix.Fields.MarketDisruptionFallbackType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackType val)
                {
                    return IsSetMarketDisruptionFallbackType();
                }

                public bool IsSetMarketDisruptionFallbackType()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackType);
                }
                public QuickFix.Fields.MarketDisruptionFallbackValue MarketDisruptionFallbackValue
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackValue val = new QuickFix.Fields.MarketDisruptionFallbackValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackValue val)
                {
                    this.MarketDisruptionFallbackValue = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackValue Get(QuickFix.Fields.MarketDisruptionFallbackValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackValue val)
                {
                    return IsSetMarketDisruptionFallbackValue();
                }

                public bool IsSetMarketDisruptionFallbackValue()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackValue);
                }

            }
            public class NoMarketDisruptionFallbackReferencePricesGroup : Group
            {
                public static int[] fieldOrder = { Tags.MarketDisruptionFallbackUnderlierType, Tags.MarketDisruptionFallbackUnderlierSecurityID, Tags.MarketDisruptionFallbackUnderlierSecurityIDSource, Tags.MarketDisruptionFallbackUnderlierSecurityDesc, Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen, Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDesc, Tags.MarketDisruptionFallbackOpenUnits, Tags.MarketDisruptionFallbackBasketCurrency, Tags.MarketDisruptionFallbackBasketDivisor, 0 };

                public NoMarketDisruptionFallbackReferencePricesGroup()
                  : base(Tags.NoMarketDisruptionFallbackReferencePrices, Tags.MarketDisruptionFallbackUnderlierType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoMarketDisruptionFallbackReferencePricesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.MarketDisruptionFallbackUnderlierType MarketDisruptionFallbackUnderlierType
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackUnderlierType val = new QuickFix.Fields.MarketDisruptionFallbackUnderlierType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackUnderlierType val)
                {
                    this.MarketDisruptionFallbackUnderlierType = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackUnderlierType Get(QuickFix.Fields.MarketDisruptionFallbackUnderlierType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackUnderlierType val)
                {
                    return IsSetMarketDisruptionFallbackUnderlierType();
                }

                public bool IsSetMarketDisruptionFallbackUnderlierType()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackUnderlierType);
                }
                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID MarketDisruptionFallbackUnderlierSecurityID
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID val = new QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID val)
                {
                    this.MarketDisruptionFallbackUnderlierSecurityID = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID Get(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityID val)
                {
                    return IsSetMarketDisruptionFallbackUnderlierSecurityID();
                }

                public bool IsSetMarketDisruptionFallbackUnderlierSecurityID()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackUnderlierSecurityID);
                }
                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource MarketDisruptionFallbackUnderlierSecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource val = new QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    this.MarketDisruptionFallbackUnderlierSecurityIDSource = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource Get(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    return IsSetMarketDisruptionFallbackUnderlierSecurityIDSource();
                }

                public bool IsSetMarketDisruptionFallbackUnderlierSecurityIDSource()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackUnderlierSecurityIDSource);
                }
                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc MarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.MarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen EncodedMarketDisruptionFallbackUnderlierSecurityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen val = new QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    this.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen = val;
                }

                public QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen Get(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    return IsSetEncodedMarketDisruptionFallbackUnderlierSecurityDescLen();
                }

                public bool IsSetEncodedMarketDisruptionFallbackUnderlierSecurityDescLen()
                {
                    return IsSetField(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen);
                }
                public QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc EncodedMarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.EncodedMarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetEncodedMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetEncodedMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.MarketDisruptionFallbackOpenUnits MarketDisruptionFallbackOpenUnits
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackOpenUnits val = new QuickFix.Fields.MarketDisruptionFallbackOpenUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackOpenUnits val)
                {
                    this.MarketDisruptionFallbackOpenUnits = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackOpenUnits Get(QuickFix.Fields.MarketDisruptionFallbackOpenUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackOpenUnits val)
                {
                    return IsSetMarketDisruptionFallbackOpenUnits();
                }

                public bool IsSetMarketDisruptionFallbackOpenUnits()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackOpenUnits);
                }
                public QuickFix.Fields.MarketDisruptionFallbackBasketCurrency MarketDisruptionFallbackBasketCurrency
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackBasketCurrency val = new QuickFix.Fields.MarketDisruptionFallbackBasketCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackBasketCurrency val)
                {
                    this.MarketDisruptionFallbackBasketCurrency = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackBasketCurrency Get(QuickFix.Fields.MarketDisruptionFallbackBasketCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackBasketCurrency val)
                {
                    return IsSetMarketDisruptionFallbackBasketCurrency();
                }

                public bool IsSetMarketDisruptionFallbackBasketCurrency()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackBasketCurrency);
                }
                public QuickFix.Fields.MarketDisruptionFallbackBasketDivisor MarketDisruptionFallbackBasketDivisor
                {
                    get
                    {
                        QuickFix.Fields.MarketDisruptionFallbackBasketDivisor val = new QuickFix.Fields.MarketDisruptionFallbackBasketDivisor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.MarketDisruptionFallbackBasketDivisor val)
                {
                    this.MarketDisruptionFallbackBasketDivisor = val;
                }

                public QuickFix.Fields.MarketDisruptionFallbackBasketDivisor Get(QuickFix.Fields.MarketDisruptionFallbackBasketDivisor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.MarketDisruptionFallbackBasketDivisor val)
                {
                    return IsSetMarketDisruptionFallbackBasketDivisor();
                }

                public bool IsSetMarketDisruptionFallbackBasketDivisor()
                {
                    return IsSetField(Tags.MarketDisruptionFallbackBasketDivisor);
                }

            }
            public class NoOptionExerciseBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.OptionExerciseBusinessCenter, 0 };

                public NoOptionExerciseBusinessCentersGroup()
                  : base(Tags.NoOptionExerciseBusinessCenters, Tags.OptionExerciseBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoOptionExerciseBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.OptionExerciseBusinessCenter OptionExerciseBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseBusinessCenter val = new QuickFix.Fields.OptionExerciseBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseBusinessCenter val)
                {
                    this.OptionExerciseBusinessCenter = val;
                }

                public QuickFix.Fields.OptionExerciseBusinessCenter Get(QuickFix.Fields.OptionExerciseBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseBusinessCenter val)
                {
                    return IsSetOptionExerciseBusinessCenter();
                }

                public bool IsSetOptionExerciseBusinessCenter()
                {
                    return IsSetField(Tags.OptionExerciseBusinessCenter);
                }

            }
            public class NoOptionExerciseDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.OptionExerciseDate, Tags.OptionExerciseDateType, 0 };

                public NoOptionExerciseDatesGroup()
                  : base(Tags.NoOptionExerciseDates, Tags.OptionExerciseDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoOptionExerciseDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.OptionExerciseDate OptionExerciseDate
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseDate val = new QuickFix.Fields.OptionExerciseDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseDate val)
                {
                    this.OptionExerciseDate = val;
                }

                public QuickFix.Fields.OptionExerciseDate Get(QuickFix.Fields.OptionExerciseDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseDate val)
                {
                    return IsSetOptionExerciseDate();
                }

                public bool IsSetOptionExerciseDate()
                {
                    return IsSetField(Tags.OptionExerciseDate);
                }
                public QuickFix.Fields.OptionExerciseDateType OptionExerciseDateType
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseDateType val = new QuickFix.Fields.OptionExerciseDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseDateType val)
                {
                    this.OptionExerciseDateType = val;
                }

                public QuickFix.Fields.OptionExerciseDateType Get(QuickFix.Fields.OptionExerciseDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseDateType val)
                {
                    return IsSetOptionExerciseDateType();
                }

                public bool IsSetOptionExerciseDateType()
                {
                    return IsSetField(Tags.OptionExerciseDateType);
                }

            }
            public class NoOptionExerciseExpirationDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.OptionExerciseExpirationDateBusinessCenter, 0 };

                public NoOptionExerciseExpirationDateBusinessCentersGroup()
                  : base(Tags.NoOptionExerciseExpirationDateBusinessCenters, Tags.OptionExerciseExpirationDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoOptionExerciseExpirationDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter OptionExerciseExpirationDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter val = new QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter val)
                {
                    this.OptionExerciseExpirationDateBusinessCenter = val;
                }

                public QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter Get(QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateBusinessCenter val)
                {
                    return IsSetOptionExerciseExpirationDateBusinessCenter();
                }

                public bool IsSetOptionExerciseExpirationDateBusinessCenter()
                {
                    return IsSetField(Tags.OptionExerciseExpirationDateBusinessCenter);
                }

            }
            public class NoOptionExerciseExpirationDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.OptionExerciseExpirationDate, Tags.OptionExerciseExpirationDateType, 0 };

                public NoOptionExerciseExpirationDatesGroup()
                  : base(Tags.NoOptionExerciseExpirationDates, Tags.OptionExerciseExpirationDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoOptionExerciseExpirationDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.OptionExerciseExpirationDate OptionExerciseExpirationDate
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseExpirationDate val = new QuickFix.Fields.OptionExerciseExpirationDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseExpirationDate val)
                {
                    this.OptionExerciseExpirationDate = val;
                }

                public QuickFix.Fields.OptionExerciseExpirationDate Get(QuickFix.Fields.OptionExerciseExpirationDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDate val)
                {
                    return IsSetOptionExerciseExpirationDate();
                }

                public bool IsSetOptionExerciseExpirationDate()
                {
                    return IsSetField(Tags.OptionExerciseExpirationDate);
                }
                public QuickFix.Fields.OptionExerciseExpirationDateType OptionExerciseExpirationDateType
                {
                    get
                    {
                        QuickFix.Fields.OptionExerciseExpirationDateType val = new QuickFix.Fields.OptionExerciseExpirationDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.OptionExerciseExpirationDateType val)
                {
                    this.OptionExerciseExpirationDateType = val;
                }

                public QuickFix.Fields.OptionExerciseExpirationDateType Get(QuickFix.Fields.OptionExerciseExpirationDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.OptionExerciseExpirationDateType val)
                {
                    return IsSetOptionExerciseExpirationDateType();
                }

                public bool IsSetOptionExerciseExpirationDateType()
                {
                    return IsSetField(Tags.OptionExerciseExpirationDateType);
                }

            }
            public class NoSettlMethodElectionDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.SettlMethodElectionDateBusinessCenter, 0 };

                public NoSettlMethodElectionDateBusinessCentersGroup()
                  : base(Tags.NoSettlMethodElectionDateBusinessCenters, Tags.SettlMethodElectionDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoSettlMethodElectionDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.SettlMethodElectionDateBusinessCenter SettlMethodElectionDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.SettlMethodElectionDateBusinessCenter val = new QuickFix.Fields.SettlMethodElectionDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.SettlMethodElectionDateBusinessCenter val)
                {
                    this.SettlMethodElectionDateBusinessCenter = val;
                }

                public QuickFix.Fields.SettlMethodElectionDateBusinessCenter Get(QuickFix.Fields.SettlMethodElectionDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.SettlMethodElectionDateBusinessCenter val)
                {
                    return IsSetSettlMethodElectionDateBusinessCenter();
                }

                public bool IsSetSettlMethodElectionDateBusinessCenter()
                {
                    return IsSetField(Tags.SettlMethodElectionDateBusinessCenter);
                }

            }
            public class NoExtraordinaryEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.ExtraordinaryEventType, Tags.ExtraordinaryEventValue, 0 };

                public NoExtraordinaryEventsGroup()
                  : base(Tags.NoExtraordinaryEvents, Tags.ExtraordinaryEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoExtraordinaryEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.ExtraordinaryEventType ExtraordinaryEventType
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryEventType val = new QuickFix.Fields.ExtraordinaryEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryEventType val)
                {
                    this.ExtraordinaryEventType = val;
                }

                public QuickFix.Fields.ExtraordinaryEventType Get(QuickFix.Fields.ExtraordinaryEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryEventType val)
                {
                    return IsSetExtraordinaryEventType();
                }

                public bool IsSetExtraordinaryEventType()
                {
                    return IsSetField(Tags.ExtraordinaryEventType);
                }
                public QuickFix.Fields.ExtraordinaryEventValue ExtraordinaryEventValue
                {
                    get
                    {
                        QuickFix.Fields.ExtraordinaryEventValue val = new QuickFix.Fields.ExtraordinaryEventValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.ExtraordinaryEventValue val)
                {
                    this.ExtraordinaryEventValue = val;
                }

                public QuickFix.Fields.ExtraordinaryEventValue Get(QuickFix.Fields.ExtraordinaryEventValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.ExtraordinaryEventValue val)
                {
                    return IsSetExtraordinaryEventValue();
                }

                public bool IsSetExtraordinaryEventValue()
                {
                    return IsSetField(Tags.ExtraordinaryEventValue);
                }

            }
            public class NoUnderlyingSecurityAltIDGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSecurityAltID, Tags.UnderlyingSecurityAltIDSource, 0 };

                public NoUnderlyingSecurityAltIDGroup()
                  : base(Tags.NoUnderlyingSecurityAltID, Tags.UnderlyingSecurityAltID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSecurityAltIDGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSecurityAltID UnderlyingSecurityAltID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecurityAltID val = new QuickFix.Fields.UnderlyingSecurityAltID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    this.UnderlyingSecurityAltID = val;
                }

                public QuickFix.Fields.UnderlyingSecurityAltID Get(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecurityAltID val)
                {
                    return IsSetUnderlyingSecurityAltID();
                }

                public bool IsSetUnderlyingSecurityAltID()
                {
                    return IsSetField(Tags.UnderlyingSecurityAltID);
                }
                public QuickFix.Fields.UnderlyingSecurityAltIDSource UnderlyingSecurityAltIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecurityAltIDSource val = new QuickFix.Fields.UnderlyingSecurityAltIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    this.UnderlyingSecurityAltIDSource = val;
                }

                public QuickFix.Fields.UnderlyingSecurityAltIDSource Get(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecurityAltIDSource val)
                {
                    return IsSetUnderlyingSecurityAltIDSource();
                }

                public bool IsSetUnderlyingSecurityAltIDSource()
                {
                    return IsSetField(Tags.UnderlyingSecurityAltIDSource);
                }

            }
            public class NoUnderlyingStipsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingStipType, Tags.UnderlyingStipValue, 0 };

                public NoUnderlyingStipsGroup()
                  : base(Tags.NoUnderlyingStips, Tags.UnderlyingStipType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingStipsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingStipType UnderlyingStipType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStipType val = new QuickFix.Fields.UnderlyingStipType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStipType val)
                {
                    this.UnderlyingStipType = val;
                }

                public QuickFix.Fields.UnderlyingStipType Get(QuickFix.Fields.UnderlyingStipType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStipType val)
                {
                    return IsSetUnderlyingStipType();
                }

                public bool IsSetUnderlyingStipType()
                {
                    return IsSetField(Tags.UnderlyingStipType);
                }
                public QuickFix.Fields.UnderlyingStipValue UnderlyingStipValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStipValue val = new QuickFix.Fields.UnderlyingStipValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStipValue val)
                {
                    this.UnderlyingStipValue = val;
                }

                public QuickFix.Fields.UnderlyingStipValue Get(QuickFix.Fields.UnderlyingStipValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStipValue val)
                {
                    return IsSetUnderlyingStipValue();
                }

                public bool IsSetUnderlyingStipValue()
                {
                    return IsSetField(Tags.UnderlyingStipValue);
                }

            }
            public class NoUndlyInstrumentPartiesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingInstrumentPartyID, Tags.UnderlyingInstrumentPartyIDSource, Tags.UnderlyingInstrumentPartyRole, Tags.NoUndlyInstrumentPartySubIDs, Tags.UnderlyingInstrumentPartyRoleQualifier, 0 };

                public NoUndlyInstrumentPartiesGroup()
                  : base(Tags.NoUndlyInstrumentParties, Tags.UnderlyingInstrumentPartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUndlyInstrumentPartiesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyID UnderlyingInstrumentPartyID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyID val = new QuickFix.Fields.UnderlyingInstrumentPartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    this.UnderlyingInstrumentPartyID = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyID Get(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyID val)
                {
                    return IsSetUnderlyingInstrumentPartyID();
                }

                public bool IsSetUnderlyingInstrumentPartyID()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyID);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyIDSource UnderlyingInstrumentPartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyIDSource val = new QuickFix.Fields.UnderlyingInstrumentPartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    this.UnderlyingInstrumentPartyIDSource = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyIDSource Get(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyIDSource val)
                {
                    return IsSetUnderlyingInstrumentPartyIDSource();
                }

                public bool IsSetUnderlyingInstrumentPartyIDSource()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyIDSource);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyRole UnderlyingInstrumentPartyRole
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyRole val = new QuickFix.Fields.UnderlyingInstrumentPartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    this.UnderlyingInstrumentPartyRole = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyRole Get(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyRole val)
                {
                    return IsSetUnderlyingInstrumentPartyRole();
                }

                public bool IsSetUnderlyingInstrumentPartyRole()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyRole);
                }
                public QuickFix.Fields.NoUndlyInstrumentPartySubIDs NoUndlyInstrumentPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUndlyInstrumentPartySubIDs val = new QuickFix.Fields.NoUndlyInstrumentPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    this.NoUndlyInstrumentPartySubIDs = val;
                }

                public QuickFix.Fields.NoUndlyInstrumentPartySubIDs Get(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUndlyInstrumentPartySubIDs val)
                {
                    return IsSetNoUndlyInstrumentPartySubIDs();
                }

                public bool IsSetNoUndlyInstrumentPartySubIDs()
                {
                    return IsSetField(Tags.NoUndlyInstrumentPartySubIDs);
                }
                public QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier UnderlyingInstrumentPartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val = new QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    this.UnderlyingInstrumentPartyRoleQualifier = val;
                }

                public QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier Get(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartyRoleQualifier val)
                {
                    return IsSetUnderlyingInstrumentPartyRoleQualifier();
                }

                public bool IsSetUnderlyingInstrumentPartyRoleQualifier()
                {
                    return IsSetField(Tags.UnderlyingInstrumentPartyRoleQualifier);
                }
                public class NoUndlyInstrumentPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingInstrumentPartySubID, Tags.UnderlyingInstrumentPartySubIDType, 0 };

                    public NoUndlyInstrumentPartySubIDsGroup()
                      : base(Tags.NoUndlyInstrumentPartySubIDs, Tags.UnderlyingInstrumentPartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUndlyInstrumentPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubID UnderlyingInstrumentPartySubID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingInstrumentPartySubID val = new QuickFix.Fields.UnderlyingInstrumentPartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        this.UnderlyingInstrumentPartySubID = val;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubID Get(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartySubID val)
                    {
                        return IsSetUnderlyingInstrumentPartySubID();
                    }

                    public bool IsSetUnderlyingInstrumentPartySubID()
                    {
                        return IsSetField(Tags.UnderlyingInstrumentPartySubID);
                    }
                    public QuickFix.Fields.UnderlyingInstrumentPartySubIDType UnderlyingInstrumentPartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingInstrumentPartySubIDType val = new QuickFix.Fields.UnderlyingInstrumentPartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        this.UnderlyingInstrumentPartySubIDType = val;
                    }

                    public QuickFix.Fields.UnderlyingInstrumentPartySubIDType Get(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingInstrumentPartySubIDType val)
                    {
                        return IsSetUnderlyingInstrumentPartySubIDType();
                    }

                    public bool IsSetUnderlyingInstrumentPartySubIDType()
                    {
                        return IsSetField(Tags.UnderlyingInstrumentPartySubIDType);
                    }

                }
            }
            public class NoUnderlyingEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingEventType, Tags.UnderlyingEventDate, Tags.UnderlyingEventTime, Tags.UnderlyingEventTimeUnit, Tags.UnderlyingEventTimePeriod, Tags.UnderlyingEventMonthYear, Tags.UnderlyingEventPx, Tags.UnderlyingEventText, Tags.EncodedUnderlyingEventTextLen, Tags.EncodedUnderlyingEventText, 0 };

                public NoUnderlyingEventsGroup()
                  : base(Tags.NoUnderlyingEvents, Tags.UnderlyingEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingEventType UnderlyingEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventType val = new QuickFix.Fields.UnderlyingEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventType val)
                {
                    this.UnderlyingEventType = val;
                }

                public QuickFix.Fields.UnderlyingEventType Get(QuickFix.Fields.UnderlyingEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventType val)
                {
                    return IsSetUnderlyingEventType();
                }

                public bool IsSetUnderlyingEventType()
                {
                    return IsSetField(Tags.UnderlyingEventType);
                }
                public QuickFix.Fields.UnderlyingEventDate UnderlyingEventDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventDate val = new QuickFix.Fields.UnderlyingEventDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventDate val)
                {
                    this.UnderlyingEventDate = val;
                }

                public QuickFix.Fields.UnderlyingEventDate Get(QuickFix.Fields.UnderlyingEventDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventDate val)
                {
                    return IsSetUnderlyingEventDate();
                }

                public bool IsSetUnderlyingEventDate()
                {
                    return IsSetField(Tags.UnderlyingEventDate);
                }
                public QuickFix.Fields.UnderlyingEventTime UnderlyingEventTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTime val = new QuickFix.Fields.UnderlyingEventTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTime val)
                {
                    this.UnderlyingEventTime = val;
                }

                public QuickFix.Fields.UnderlyingEventTime Get(QuickFix.Fields.UnderlyingEventTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTime val)
                {
                    return IsSetUnderlyingEventTime();
                }

                public bool IsSetUnderlyingEventTime()
                {
                    return IsSetField(Tags.UnderlyingEventTime);
                }
                public QuickFix.Fields.UnderlyingEventTimeUnit UnderlyingEventTimeUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTimeUnit val = new QuickFix.Fields.UnderlyingEventTimeUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    this.UnderlyingEventTimeUnit = val;
                }

                public QuickFix.Fields.UnderlyingEventTimeUnit Get(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTimeUnit val)
                {
                    return IsSetUnderlyingEventTimeUnit();
                }

                public bool IsSetUnderlyingEventTimeUnit()
                {
                    return IsSetField(Tags.UnderlyingEventTimeUnit);
                }
                public QuickFix.Fields.UnderlyingEventTimePeriod UnderlyingEventTimePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventTimePeriod val = new QuickFix.Fields.UnderlyingEventTimePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    this.UnderlyingEventTimePeriod = val;
                }

                public QuickFix.Fields.UnderlyingEventTimePeriod Get(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventTimePeriod val)
                {
                    return IsSetUnderlyingEventTimePeriod();
                }

                public bool IsSetUnderlyingEventTimePeriod()
                {
                    return IsSetField(Tags.UnderlyingEventTimePeriod);
                }
                public QuickFix.Fields.UnderlyingEventMonthYear UnderlyingEventMonthYear
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventMonthYear val = new QuickFix.Fields.UnderlyingEventMonthYear();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    this.UnderlyingEventMonthYear = val;
                }

                public QuickFix.Fields.UnderlyingEventMonthYear Get(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventMonthYear val)
                {
                    return IsSetUnderlyingEventMonthYear();
                }

                public bool IsSetUnderlyingEventMonthYear()
                {
                    return IsSetField(Tags.UnderlyingEventMonthYear);
                }
                public QuickFix.Fields.UnderlyingEventPx UnderlyingEventPx
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventPx val = new QuickFix.Fields.UnderlyingEventPx();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventPx val)
                {
                    this.UnderlyingEventPx = val;
                }

                public QuickFix.Fields.UnderlyingEventPx Get(QuickFix.Fields.UnderlyingEventPx val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventPx val)
                {
                    return IsSetUnderlyingEventPx();
                }

                public bool IsSetUnderlyingEventPx()
                {
                    return IsSetField(Tags.UnderlyingEventPx);
                }
                public QuickFix.Fields.UnderlyingEventText UnderlyingEventText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingEventText val = new QuickFix.Fields.UnderlyingEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingEventText val)
                {
                    this.UnderlyingEventText = val;
                }

                public QuickFix.Fields.UnderlyingEventText Get(QuickFix.Fields.UnderlyingEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingEventText val)
                {
                    return IsSetUnderlyingEventText();
                }

                public bool IsSetUnderlyingEventText()
                {
                    return IsSetField(Tags.UnderlyingEventText);
                }
                public QuickFix.Fields.EncodedUnderlyingEventTextLen EncodedUnderlyingEventTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingEventTextLen val = new QuickFix.Fields.EncodedUnderlyingEventTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    this.EncodedUnderlyingEventTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingEventTextLen Get(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingEventTextLen val)
                {
                    return IsSetEncodedUnderlyingEventTextLen();
                }

                public bool IsSetEncodedUnderlyingEventTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingEventTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingEventText EncodedUnderlyingEventText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingEventText val = new QuickFix.Fields.EncodedUnderlyingEventText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    this.EncodedUnderlyingEventText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingEventText Get(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingEventText val)
                {
                    return IsSetEncodedUnderlyingEventText();
                }

                public bool IsSetEncodedUnderlyingEventText()
                {
                    return IsSetField(Tags.EncodedUnderlyingEventText);
                }

            }
            public class NoUnderlyingSecondaryAssetClassesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSecondaryAssetClass, Tags.UnderlyingSecondaryAssetSubClass, Tags.UnderlyingSecondaryAssetType, Tags.UnderlyingSecondaryAssetSubType, 0 };

                public NoUnderlyingSecondaryAssetClassesGroup()
                  : base(Tags.NoUnderlyingSecondaryAssetClasses, Tags.UnderlyingSecondaryAssetClass, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSecondaryAssetClassesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetClass UnderlyingSecondaryAssetClass
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetClass val = new QuickFix.Fields.UnderlyingSecondaryAssetClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    this.UnderlyingSecondaryAssetClass = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetClass Get(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetClass val)
                {
                    return IsSetUnderlyingSecondaryAssetClass();
                }

                public bool IsSetUnderlyingSecondaryAssetClass()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetClass);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetSubClass UnderlyingSecondaryAssetSubClass
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetSubClass val = new QuickFix.Fields.UnderlyingSecondaryAssetSubClass();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    this.UnderlyingSecondaryAssetSubClass = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetSubClass Get(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetSubClass val)
                {
                    return IsSetUnderlyingSecondaryAssetSubClass();
                }

                public bool IsSetUnderlyingSecondaryAssetSubClass()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetSubClass);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetType UnderlyingSecondaryAssetType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetType val = new QuickFix.Fields.UnderlyingSecondaryAssetType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    this.UnderlyingSecondaryAssetType = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetType Get(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetType val)
                {
                    return IsSetUnderlyingSecondaryAssetType();
                }

                public bool IsSetUnderlyingSecondaryAssetType()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetType);
                }
                public QuickFix.Fields.UnderlyingSecondaryAssetSubType UnderlyingSecondaryAssetSubType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSecondaryAssetSubType val = new QuickFix.Fields.UnderlyingSecondaryAssetSubType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    this.UnderlyingSecondaryAssetSubType = val;
                }

                public QuickFix.Fields.UnderlyingSecondaryAssetSubType Get(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSecondaryAssetSubType val)
                {
                    return IsSetUnderlyingSecondaryAssetSubType();
                }

                public bool IsSetUnderlyingSecondaryAssetSubType()
                {
                    return IsSetField(Tags.UnderlyingSecondaryAssetSubType);
                }

            }
            public class NoUnderlyingComplexEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingComplexEventType, Tags.UnderlyingComplexOptPayoutAmount, Tags.UnderlyingComplexEventPrice, Tags.UnderlyingComplexEventPriceBoundaryMethod, Tags.UnderlyingComplexEventPriceBoundaryPrecision, Tags.UnderlyingComplexEventPriceTimeType, Tags.UnderlyingComplexEventCondition, Tags.NoUnderlyingComplexEventDates, Tags.UnderlyingComplexOptPayoutPaySide, Tags.UnderlyingComplexOptPayoutReceiveSide, Tags.UnderlyingComplexOptPayoutUnderlier, Tags.UnderlyingComplexOptPayoutPercentage, Tags.UnderlyingComplexOptPayoutTime, Tags.UnderlyingComplexOptPayoutCurrency, Tags.UnderlyingComplexEventPricePercentage, Tags.UnderlyingComplexEventCurrencyOne, Tags.UnderlyingComplexEventCurrencyTwo, Tags.UnderlyingComplexEventQuoteBasis, Tags.UnderlyingComplexEventFixedFXRate, Tags.UnderlyingComplexEventDeterminationMethod, Tags.UnderlyingComplexEventCalculationAgent, Tags.UnderlyingComplexEventStrikePrice, Tags.UnderlyingComplexEventStrikeFactor, Tags.UnderlyingComplexEventStrikeNumberOfOptions, Tags.NoUnderlyingComplexEventRateSources, Tags.UnderlyingComplexEventDateUnadjusted, Tags.UnderlyingComplexEventDateRelativeTo, Tags.UnderlyingComplexEventDateOffsetPeriod, Tags.UnderlyingComplexEventDateOffsetUnit, Tags.UnderlyingComplexEventDateOffsetDayType, Tags.UnderlyingComplexEventDateBusinessDayConvention, Tags.NoUnderlyingComplexEventDateBusinessCenters, Tags.UnderlyingComplexEventDateAdjusted, Tags.UnderlyingComplexEventFixingTime, Tags.UnderlyingComplexEventFixingTimeBusinessCenter, Tags.NoUnderlyingComplexEventPeriods, Tags.UnderlyingComplexEventCreditEventsXIDRef, Tags.UnderlyingComplexEventCreditEventNotifyingParty, Tags.UnderlyingComplexEventCreditEventBusinessCenter, Tags.UnderlyingComplexEventCreditEventStandardSources, Tags.UnderlyingComplexEventCreditEventMinimumSources, Tags.NoUnderlyingComplexEventCreditEventSources, Tags.NoUnderlyingComplexEventCreditEvents, Tags.UnderlyingComplexEventXID, Tags.UnderlyingComplexEventXIDRef, Tags.UnderlyingComplexEventSpotRate, Tags.UnderlyingComplexEventForwardPoints, Tags.UnderlyingComplexEventFuturesPriceValuation, Tags.UnderlyingComplexEventOptionsPriceValuation, Tags.UnderlyingComplexEventPVFinalPriceElectionFallback, 0 };

                public NoUnderlyingComplexEventsGroup()
                  : base(Tags.NoUnderlyingComplexEvents, Tags.UnderlyingComplexEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingComplexEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingComplexEventType UnderlyingComplexEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventType val = new QuickFix.Fields.UnderlyingComplexEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    this.UnderlyingComplexEventType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventType Get(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventType val)
                {
                    return IsSetUnderlyingComplexEventType();
                }

                public bool IsSetUnderlyingComplexEventType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventType);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutAmount UnderlyingComplexOptPayoutAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutAmount val = new QuickFix.Fields.UnderlyingComplexOptPayoutAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    this.UnderlyingComplexOptPayoutAmount = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutAmount Get(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutAmount val)
                {
                    return IsSetUnderlyingComplexOptPayoutAmount();
                }

                public bool IsSetUnderlyingComplexOptPayoutAmount()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutAmount);
                }
                public QuickFix.Fields.UnderlyingComplexEventPrice UnderlyingComplexEventPrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPrice val = new QuickFix.Fields.UnderlyingComplexEventPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    this.UnderlyingComplexEventPrice = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPrice Get(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPrice val)
                {
                    return IsSetUnderlyingComplexEventPrice();
                }

                public bool IsSetUnderlyingComplexEventPrice()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPrice);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod UnderlyingComplexEventPriceBoundaryMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val = new QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    this.UnderlyingComplexEventPriceBoundaryMethod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod Get(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryMethod val)
                {
                    return IsSetUnderlyingComplexEventPriceBoundaryMethod();
                }

                public bool IsSetUnderlyingComplexEventPriceBoundaryMethod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceBoundaryMethod);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision UnderlyingComplexEventPriceBoundaryPrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val = new QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    this.UnderlyingComplexEventPriceBoundaryPrecision = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision Get(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceBoundaryPrecision val)
                {
                    return IsSetUnderlyingComplexEventPriceBoundaryPrecision();
                }

                public bool IsSetUnderlyingComplexEventPriceBoundaryPrecision()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceBoundaryPrecision);
                }
                public QuickFix.Fields.UnderlyingComplexEventPriceTimeType UnderlyingComplexEventPriceTimeType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPriceTimeType val = new QuickFix.Fields.UnderlyingComplexEventPriceTimeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    this.UnderlyingComplexEventPriceTimeType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPriceTimeType Get(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPriceTimeType val)
                {
                    return IsSetUnderlyingComplexEventPriceTimeType();
                }

                public bool IsSetUnderlyingComplexEventPriceTimeType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPriceTimeType);
                }
                public QuickFix.Fields.UnderlyingComplexEventCondition UnderlyingComplexEventCondition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCondition val = new QuickFix.Fields.UnderlyingComplexEventCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    this.UnderlyingComplexEventCondition = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCondition Get(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCondition val)
                {
                    return IsSetUnderlyingComplexEventCondition();
                }

                public bool IsSetUnderlyingComplexEventCondition()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCondition);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventDates NoUnderlyingComplexEventDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventDates val = new QuickFix.Fields.NoUnderlyingComplexEventDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    this.NoUnderlyingComplexEventDates = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventDates Get(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventDates val)
                {
                    return IsSetNoUnderlyingComplexEventDates();
                }

                public bool IsSetNoUnderlyingComplexEventDates()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventDates);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutPaySide UnderlyingComplexOptPayoutPaySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val = new QuickFix.Fields.UnderlyingComplexOptPayoutPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    this.UnderlyingComplexOptPayoutPaySide = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutPaySide Get(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutPaySide val)
                {
                    return IsSetUnderlyingComplexOptPayoutPaySide();
                }

                public bool IsSetUnderlyingComplexOptPayoutPaySide()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutPaySide);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide UnderlyingComplexOptPayoutReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val = new QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    this.UnderlyingComplexOptPayoutReceiveSide = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide Get(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutReceiveSide val)
                {
                    return IsSetUnderlyingComplexOptPayoutReceiveSide();
                }

                public bool IsSetUnderlyingComplexOptPayoutReceiveSide()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutReceiveSide);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier UnderlyingComplexOptPayoutUnderlier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val = new QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    this.UnderlyingComplexOptPayoutUnderlier = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier Get(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutUnderlier val)
                {
                    return IsSetUnderlyingComplexOptPayoutUnderlier();
                }

                public bool IsSetUnderlyingComplexOptPayoutUnderlier()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutUnderlier);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutPercentage UnderlyingComplexOptPayoutPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val = new QuickFix.Fields.UnderlyingComplexOptPayoutPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    this.UnderlyingComplexOptPayoutPercentage = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutPercentage Get(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutPercentage val)
                {
                    return IsSetUnderlyingComplexOptPayoutPercentage();
                }

                public bool IsSetUnderlyingComplexOptPayoutPercentage()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutPercentage);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutTime UnderlyingComplexOptPayoutTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutTime val = new QuickFix.Fields.UnderlyingComplexOptPayoutTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    this.UnderlyingComplexOptPayoutTime = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutTime Get(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutTime val)
                {
                    return IsSetUnderlyingComplexOptPayoutTime();
                }

                public bool IsSetUnderlyingComplexOptPayoutTime()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutTime);
                }
                public QuickFix.Fields.UnderlyingComplexOptPayoutCurrency UnderlyingComplexOptPayoutCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val = new QuickFix.Fields.UnderlyingComplexOptPayoutCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    this.UnderlyingComplexOptPayoutCurrency = val;
                }

                public QuickFix.Fields.UnderlyingComplexOptPayoutCurrency Get(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexOptPayoutCurrency val)
                {
                    return IsSetUnderlyingComplexOptPayoutCurrency();
                }

                public bool IsSetUnderlyingComplexOptPayoutCurrency()
                {
                    return IsSetField(Tags.UnderlyingComplexOptPayoutCurrency);
                }
                public QuickFix.Fields.UnderlyingComplexEventPricePercentage UnderlyingComplexEventPricePercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPricePercentage val = new QuickFix.Fields.UnderlyingComplexEventPricePercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    this.UnderlyingComplexEventPricePercentage = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPricePercentage Get(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPricePercentage val)
                {
                    return IsSetUnderlyingComplexEventPricePercentage();
                }

                public bool IsSetUnderlyingComplexEventPricePercentage()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPricePercentage);
                }
                public QuickFix.Fields.UnderlyingComplexEventCurrencyOne UnderlyingComplexEventCurrencyOne
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCurrencyOne val = new QuickFix.Fields.UnderlyingComplexEventCurrencyOne();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    this.UnderlyingComplexEventCurrencyOne = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCurrencyOne Get(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCurrencyOne val)
                {
                    return IsSetUnderlyingComplexEventCurrencyOne();
                }

                public bool IsSetUnderlyingComplexEventCurrencyOne()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCurrencyOne);
                }
                public QuickFix.Fields.UnderlyingComplexEventCurrencyTwo UnderlyingComplexEventCurrencyTwo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val = new QuickFix.Fields.UnderlyingComplexEventCurrencyTwo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    this.UnderlyingComplexEventCurrencyTwo = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCurrencyTwo Get(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCurrencyTwo val)
                {
                    return IsSetUnderlyingComplexEventCurrencyTwo();
                }

                public bool IsSetUnderlyingComplexEventCurrencyTwo()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCurrencyTwo);
                }
                public QuickFix.Fields.UnderlyingComplexEventQuoteBasis UnderlyingComplexEventQuoteBasis
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventQuoteBasis val = new QuickFix.Fields.UnderlyingComplexEventQuoteBasis();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    this.UnderlyingComplexEventQuoteBasis = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventQuoteBasis Get(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventQuoteBasis val)
                {
                    return IsSetUnderlyingComplexEventQuoteBasis();
                }

                public bool IsSetUnderlyingComplexEventQuoteBasis()
                {
                    return IsSetField(Tags.UnderlyingComplexEventQuoteBasis);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixedFXRate UnderlyingComplexEventFixedFXRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixedFXRate val = new QuickFix.Fields.UnderlyingComplexEventFixedFXRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    this.UnderlyingComplexEventFixedFXRate = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixedFXRate Get(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixedFXRate val)
                {
                    return IsSetUnderlyingComplexEventFixedFXRate();
                }

                public bool IsSetUnderlyingComplexEventFixedFXRate()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixedFXRate);
                }
                public QuickFix.Fields.UnderlyingComplexEventDeterminationMethod UnderlyingComplexEventDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val = new QuickFix.Fields.UnderlyingComplexEventDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    this.UnderlyingComplexEventDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDeterminationMethod Get(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDeterminationMethod val)
                {
                    return IsSetUnderlyingComplexEventDeterminationMethod();
                }

                public bool IsSetUnderlyingComplexEventDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingComplexEventCalculationAgent UnderlyingComplexEventCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCalculationAgent val = new QuickFix.Fields.UnderlyingComplexEventCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    this.UnderlyingComplexEventCalculationAgent = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCalculationAgent Get(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCalculationAgent val)
                {
                    return IsSetUnderlyingComplexEventCalculationAgent();
                }

                public bool IsSetUnderlyingComplexEventCalculationAgent()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCalculationAgent);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikePrice UnderlyingComplexEventStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikePrice val = new QuickFix.Fields.UnderlyingComplexEventStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    this.UnderlyingComplexEventStrikePrice = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikePrice Get(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikePrice val)
                {
                    return IsSetUnderlyingComplexEventStrikePrice();
                }

                public bool IsSetUnderlyingComplexEventStrikePrice()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikePrice);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikeFactor UnderlyingComplexEventStrikeFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikeFactor val = new QuickFix.Fields.UnderlyingComplexEventStrikeFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    this.UnderlyingComplexEventStrikeFactor = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikeFactor Get(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikeFactor val)
                {
                    return IsSetUnderlyingComplexEventStrikeFactor();
                }

                public bool IsSetUnderlyingComplexEventStrikeFactor()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikeFactor);
                }
                public QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions UnderlyingComplexEventStrikeNumberOfOptions
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val = new QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    this.UnderlyingComplexEventStrikeNumberOfOptions = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions Get(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStrikeNumberOfOptions val)
                {
                    return IsSetUnderlyingComplexEventStrikeNumberOfOptions();
                }

                public bool IsSetUnderlyingComplexEventStrikeNumberOfOptions()
                {
                    return IsSetField(Tags.UnderlyingComplexEventStrikeNumberOfOptions);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventRateSources NoUnderlyingComplexEventRateSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventRateSources val = new QuickFix.Fields.NoUnderlyingComplexEventRateSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    this.NoUnderlyingComplexEventRateSources = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventRateSources Get(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventRateSources val)
                {
                    return IsSetNoUnderlyingComplexEventRateSources();
                }

                public bool IsSetNoUnderlyingComplexEventRateSources()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventRateSources);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateUnadjusted UnderlyingComplexEventDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val = new QuickFix.Fields.UnderlyingComplexEventDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    this.UnderlyingComplexEventDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateUnadjusted Get(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateUnadjusted val)
                {
                    return IsSetUnderlyingComplexEventDateUnadjusted();
                }

                public bool IsSetUnderlyingComplexEventDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateRelativeTo UnderlyingComplexEventDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val = new QuickFix.Fields.UnderlyingComplexEventDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    this.UnderlyingComplexEventDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateRelativeTo Get(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateRelativeTo val)
                {
                    return IsSetUnderlyingComplexEventDateRelativeTo();
                }

                public bool IsSetUnderlyingComplexEventDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod UnderlyingComplexEventDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    this.UnderlyingComplexEventDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetPeriod val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetPeriod();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit UnderlyingComplexEventDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    this.UnderlyingComplexEventDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetUnit val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetUnit();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType UnderlyingComplexEventDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val = new QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    this.UnderlyingComplexEventDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType Get(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateOffsetDayType val)
                {
                    return IsSetUnderlyingComplexEventDateOffsetDayType();
                }

                public bool IsSetUnderlyingComplexEventDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention UnderlyingComplexEventDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    this.UnderlyingComplexEventDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingComplexEventDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingComplexEventDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters NoUnderlyingComplexEventDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    this.NoUnderlyingComplexEventDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingComplexEventDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingComplexEventDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingComplexEventDateAdjusted UnderlyingComplexEventDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventDateAdjusted val = new QuickFix.Fields.UnderlyingComplexEventDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    this.UnderlyingComplexEventDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventDateAdjusted Get(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateAdjusted val)
                {
                    return IsSetUnderlyingComplexEventDateAdjusted();
                }

                public bool IsSetUnderlyingComplexEventDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingComplexEventDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixingTime UnderlyingComplexEventFixingTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixingTime val = new QuickFix.Fields.UnderlyingComplexEventFixingTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    this.UnderlyingComplexEventFixingTime = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixingTime Get(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixingTime val)
                {
                    return IsSetUnderlyingComplexEventFixingTime();
                }

                public bool IsSetUnderlyingComplexEventFixingTime()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixingTime);
                }
                public QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter UnderlyingComplexEventFixingTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    this.UnderlyingComplexEventFixingTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFixingTimeBusinessCenter val)
                {
                    return IsSetUnderlyingComplexEventFixingTimeBusinessCenter();
                }

                public bool IsSetUnderlyingComplexEventFixingTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFixingTimeBusinessCenter);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventPeriods NoUnderlyingComplexEventPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventPeriods val = new QuickFix.Fields.NoUnderlyingComplexEventPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    this.NoUnderlyingComplexEventPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventPeriods Get(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventPeriods val)
                {
                    return IsSetNoUnderlyingComplexEventPeriods();
                }

                public bool IsSetNoUnderlyingComplexEventPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventPeriods);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef UnderlyingComplexEventCreditEventsXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val = new QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    this.UnderlyingComplexEventCreditEventsXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef Get(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventsXIDRef val)
                {
                    return IsSetUnderlyingComplexEventCreditEventsXIDRef();
                }

                public bool IsSetUnderlyingComplexEventCreditEventsXIDRef()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventsXIDRef);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty UnderlyingComplexEventCreditEventNotifyingParty
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val = new QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    this.UnderlyingComplexEventCreditEventNotifyingParty = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty Get(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventNotifyingParty val)
                {
                    return IsSetUnderlyingComplexEventCreditEventNotifyingParty();
                }

                public bool IsSetUnderlyingComplexEventCreditEventNotifyingParty()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventNotifyingParty);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter UnderlyingComplexEventCreditEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    this.UnderlyingComplexEventCreditEventBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventBusinessCenter val)
                {
                    return IsSetUnderlyingComplexEventCreditEventBusinessCenter();
                }

                public bool IsSetUnderlyingComplexEventCreditEventBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources UnderlyingComplexEventCreditEventStandardSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val = new QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    this.UnderlyingComplexEventCreditEventStandardSources = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources Get(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventStandardSources val)
                {
                    return IsSetUnderlyingComplexEventCreditEventStandardSources();
                }

                public bool IsSetUnderlyingComplexEventCreditEventStandardSources()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventStandardSources);
                }
                public QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources UnderlyingComplexEventCreditEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val = new QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    this.UnderlyingComplexEventCreditEventMinimumSources = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources Get(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventMinimumSources val)
                {
                    return IsSetUnderlyingComplexEventCreditEventMinimumSources();
                }

                public bool IsSetUnderlyingComplexEventCreditEventMinimumSources()
                {
                    return IsSetField(Tags.UnderlyingComplexEventCreditEventMinimumSources);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources NoUnderlyingComplexEventCreditEventSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    this.NoUnderlyingComplexEventCreditEventSources = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEventSources val)
                {
                    return IsSetNoUnderlyingComplexEventCreditEventSources();
                }

                public bool IsSetNoUnderlyingComplexEventCreditEventSources()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventCreditEventSources);
                }
                public QuickFix.Fields.NoUnderlyingComplexEventCreditEvents NoUnderlyingComplexEventCreditEvents
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    this.NoUnderlyingComplexEventCreditEvents = val;
                }

                public QuickFix.Fields.NoUnderlyingComplexEventCreditEvents Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEvents val)
                {
                    return IsSetNoUnderlyingComplexEventCreditEvents();
                }

                public bool IsSetNoUnderlyingComplexEventCreditEvents()
                {
                    return IsSetField(Tags.NoUnderlyingComplexEventCreditEvents);
                }
                public QuickFix.Fields.UnderlyingComplexEventXID UnderlyingComplexEventXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventXID val = new QuickFix.Fields.UnderlyingComplexEventXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    this.UnderlyingComplexEventXID = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventXID Get(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventXID val)
                {
                    return IsSetUnderlyingComplexEventXID();
                }

                public bool IsSetUnderlyingComplexEventXID()
                {
                    return IsSetField(Tags.UnderlyingComplexEventXID);
                }
                public QuickFix.Fields.UnderlyingComplexEventXIDRef UnderlyingComplexEventXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventXIDRef val = new QuickFix.Fields.UnderlyingComplexEventXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    this.UnderlyingComplexEventXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventXIDRef Get(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventXIDRef val)
                {
                    return IsSetUnderlyingComplexEventXIDRef();
                }

                public bool IsSetUnderlyingComplexEventXIDRef()
                {
                    return IsSetField(Tags.UnderlyingComplexEventXIDRef);
                }
                public QuickFix.Fields.UnderlyingComplexEventSpotRate UnderlyingComplexEventSpotRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventSpotRate val = new QuickFix.Fields.UnderlyingComplexEventSpotRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    this.UnderlyingComplexEventSpotRate = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventSpotRate Get(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventSpotRate val)
                {
                    return IsSetUnderlyingComplexEventSpotRate();
                }

                public bool IsSetUnderlyingComplexEventSpotRate()
                {
                    return IsSetField(Tags.UnderlyingComplexEventSpotRate);
                }
                public QuickFix.Fields.UnderlyingComplexEventForwardPoints UnderlyingComplexEventForwardPoints
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventForwardPoints val = new QuickFix.Fields.UnderlyingComplexEventForwardPoints();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    this.UnderlyingComplexEventForwardPoints = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventForwardPoints Get(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventForwardPoints val)
                {
                    return IsSetUnderlyingComplexEventForwardPoints();
                }

                public bool IsSetUnderlyingComplexEventForwardPoints()
                {
                    return IsSetField(Tags.UnderlyingComplexEventForwardPoints);
                }
                public QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation UnderlyingComplexEventFuturesPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val = new QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    this.UnderlyingComplexEventFuturesPriceValuation = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation Get(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventFuturesPriceValuation val)
                {
                    return IsSetUnderlyingComplexEventFuturesPriceValuation();
                }

                public bool IsSetUnderlyingComplexEventFuturesPriceValuation()
                {
                    return IsSetField(Tags.UnderlyingComplexEventFuturesPriceValuation);
                }
                public QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation UnderlyingComplexEventOptionsPriceValuation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val = new QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    this.UnderlyingComplexEventOptionsPriceValuation = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation Get(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventOptionsPriceValuation val)
                {
                    return IsSetUnderlyingComplexEventOptionsPriceValuation();
                }

                public bool IsSetUnderlyingComplexEventOptionsPriceValuation()
                {
                    return IsSetField(Tags.UnderlyingComplexEventOptionsPriceValuation);
                }
                public QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback UnderlyingComplexEventPVFinalPriceElectionFallback
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val = new QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    this.UnderlyingComplexEventPVFinalPriceElectionFallback = val;
                }

                public QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback Get(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPVFinalPriceElectionFallback val)
                {
                    return IsSetUnderlyingComplexEventPVFinalPriceElectionFallback();
                }

                public bool IsSetUnderlyingComplexEventPVFinalPriceElectionFallback()
                {
                    return IsSetField(Tags.UnderlyingComplexEventPVFinalPriceElectionFallback);
                }
                public class NoUnderlyingComplexEventDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventStartDate, Tags.UnderlyingComplexEventEndDate, Tags.NoUnderlyingComplexEventTimes, 0 };

                    public NoUnderlyingComplexEventDatesGroup()
                      : base(Tags.NoUnderlyingComplexEventDates, Tags.UnderlyingComplexEventStartDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventStartDate UnderlyingComplexEventStartDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventStartDate val = new QuickFix.Fields.UnderlyingComplexEventStartDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        this.UnderlyingComplexEventStartDate = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventStartDate Get(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStartDate val)
                    {
                        return IsSetUnderlyingComplexEventStartDate();
                    }

                    public bool IsSetUnderlyingComplexEventStartDate()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventStartDate);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventEndDate UnderlyingComplexEventEndDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventEndDate val = new QuickFix.Fields.UnderlyingComplexEventEndDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        this.UnderlyingComplexEventEndDate = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventEndDate Get(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventEndDate val)
                    {
                        return IsSetUnderlyingComplexEventEndDate();
                    }

                    public bool IsSetUnderlyingComplexEventEndDate()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventEndDate);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventTimes NoUnderlyingComplexEventTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventTimes val = new QuickFix.Fields.NoUnderlyingComplexEventTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        this.NoUnderlyingComplexEventTimes = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventTimes Get(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventTimes val)
                    {
                        return IsSetNoUnderlyingComplexEventTimes();
                    }

                    public bool IsSetNoUnderlyingComplexEventTimes()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventTimes);
                    }
                    public class NoUnderlyingComplexEventTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventStartTime, Tags.UnderlyingComplexEventEndTime, 0 };

                        public NoUnderlyingComplexEventTimesGroup()
                          : base(Tags.NoUnderlyingComplexEventTimes, Tags.UnderlyingComplexEventStartTime, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventStartTime UnderlyingComplexEventStartTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventStartTime val = new QuickFix.Fields.UnderlyingComplexEventStartTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            this.UnderlyingComplexEventStartTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventStartTime Get(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventStartTime val)
                        {
                            return IsSetUnderlyingComplexEventStartTime();
                        }

                        public bool IsSetUnderlyingComplexEventStartTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventStartTime);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventEndTime UnderlyingComplexEventEndTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventEndTime val = new QuickFix.Fields.UnderlyingComplexEventEndTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            this.UnderlyingComplexEventEndTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventEndTime Get(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventEndTime val)
                        {
                            return IsSetUnderlyingComplexEventEndTime();
                        }

                        public bool IsSetUnderlyingComplexEventEndTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventEndTime);
                        }

                    }
                }
                public class NoUnderlyingComplexEventRateSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventRateSource, Tags.UnderlyingComplexEventRateSourceType, Tags.UnderlyingComplexEventReferencePage, Tags.UnderlyingComplexEventReferencePageHeading, 0 };

                    public NoUnderlyingComplexEventRateSourcesGroup()
                      : base(Tags.NoUnderlyingComplexEventRateSources, Tags.UnderlyingComplexEventRateSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventRateSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSource UnderlyingComplexEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventRateSource val = new QuickFix.Fields.UnderlyingComplexEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        this.UnderlyingComplexEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSource Get(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventRateSource val)
                    {
                        return IsSetUnderlyingComplexEventRateSource();
                    }

                    public bool IsSetUnderlyingComplexEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventRateSource);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventRateSourceType UnderlyingComplexEventRateSourceType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventRateSourceType val = new QuickFix.Fields.UnderlyingComplexEventRateSourceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        this.UnderlyingComplexEventRateSourceType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventRateSourceType Get(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventRateSourceType val)
                    {
                        return IsSetUnderlyingComplexEventRateSourceType();
                    }

                    public bool IsSetUnderlyingComplexEventRateSourceType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventRateSourceType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventReferencePage UnderlyingComplexEventReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventReferencePage val = new QuickFix.Fields.UnderlyingComplexEventReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        this.UnderlyingComplexEventReferencePage = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventReferencePage Get(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventReferencePage val)
                    {
                        return IsSetUnderlyingComplexEventReferencePage();
                    }

                    public bool IsSetUnderlyingComplexEventReferencePage()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventReferencePage);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventReferencePageHeading UnderlyingComplexEventReferencePageHeading
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val = new QuickFix.Fields.UnderlyingComplexEventReferencePageHeading();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        this.UnderlyingComplexEventReferencePageHeading = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventReferencePageHeading Get(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventReferencePageHeading val)
                    {
                        return IsSetUnderlyingComplexEventReferencePageHeading();
                    }

                    public bool IsSetUnderlyingComplexEventReferencePageHeading()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventReferencePageHeading);
                    }

                }
                public class NoUnderlyingComplexEventDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventDateBusinessCenter, 0 };

                    public NoUnderlyingComplexEventDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingComplexEventDateBusinessCenters, Tags.UnderlyingComplexEventDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter UnderlyingComplexEventDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        this.UnderlyingComplexEventDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventDateBusinessCenter val)
                    {
                        return IsSetUnderlyingComplexEventDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingComplexEventDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventDateBusinessCenter);
                    }

                }
                public class NoUnderlyingComplexEventPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventPeriodType, Tags.UnderlyingComplexEventBusinessCenter, Tags.NoUnderlyingComplexEventSchedules, Tags.NoUnderlyingComplexEventPeriodDateTimes, Tags.NoUnderlyingComplexEventAveragingObservations, 0 };

                    public NoUnderlyingComplexEventPeriodsGroup()
                      : base(Tags.NoUnderlyingComplexEventPeriods, Tags.UnderlyingComplexEventPeriodType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventPeriodType UnderlyingComplexEventPeriodType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventPeriodType val = new QuickFix.Fields.UnderlyingComplexEventPeriodType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        this.UnderlyingComplexEventPeriodType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventPeriodType Get(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodType val)
                    {
                        return IsSetUnderlyingComplexEventPeriodType();
                    }

                    public bool IsSetUnderlyingComplexEventPeriodType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventPeriodType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventBusinessCenter UnderlyingComplexEventBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventBusinessCenter val = new QuickFix.Fields.UnderlyingComplexEventBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        this.UnderlyingComplexEventBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventBusinessCenter Get(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventBusinessCenter val)
                    {
                        return IsSetUnderlyingComplexEventBusinessCenter();
                    }

                    public bool IsSetUnderlyingComplexEventBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventBusinessCenter);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventSchedules NoUnderlyingComplexEventSchedules
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventSchedules val = new QuickFix.Fields.NoUnderlyingComplexEventSchedules();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        this.NoUnderlyingComplexEventSchedules = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventSchedules Get(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventSchedules val)
                    {
                        return IsSetNoUnderlyingComplexEventSchedules();
                    }

                    public bool IsSetNoUnderlyingComplexEventSchedules()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventSchedules);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes NoUnderlyingComplexEventPeriodDateTimes
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val = new QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        this.NoUnderlyingComplexEventPeriodDateTimes = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes Get(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventPeriodDateTimes val)
                    {
                        return IsSetNoUnderlyingComplexEventPeriodDateTimes();
                    }

                    public bool IsSetNoUnderlyingComplexEventPeriodDateTimes()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventPeriodDateTimes);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations NoUnderlyingComplexEventAveragingObservations
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val = new QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        this.NoUnderlyingComplexEventAveragingObservations = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations Get(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventAveragingObservations val)
                    {
                        return IsSetNoUnderlyingComplexEventAveragingObservations();
                    }

                    public bool IsSetNoUnderlyingComplexEventAveragingObservations()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventAveragingObservations);
                    }
                    public class NoUnderlyingComplexEventSchedulesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventScheduleStartDate, Tags.UnderlyingComplexEventScheduleEndDate, Tags.UnderlyingComplexEventScheduleFrequencyPeriod, Tags.UnderlyingComplexEventScheduleFrequencyUnit, Tags.UnderlyingComplexEventScheduleRollConvention, 0 };

                        public NoUnderlyingComplexEventSchedulesGroup()
                          : base(Tags.NoUnderlyingComplexEventSchedules, Tags.UnderlyingComplexEventScheduleStartDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventSchedulesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleStartDate UnderlyingComplexEventScheduleStartDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val = new QuickFix.Fields.UnderlyingComplexEventScheduleStartDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            this.UnderlyingComplexEventScheduleStartDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleStartDate Get(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleStartDate val)
                        {
                            return IsSetUnderlyingComplexEventScheduleStartDate();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleStartDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleStartDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleEndDate UnderlyingComplexEventScheduleEndDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val = new QuickFix.Fields.UnderlyingComplexEventScheduleEndDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            this.UnderlyingComplexEventScheduleEndDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleEndDate Get(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleEndDate val)
                        {
                            return IsSetUnderlyingComplexEventScheduleEndDate();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleEndDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleEndDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod UnderlyingComplexEventScheduleFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val = new QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            this.UnderlyingComplexEventScheduleFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod Get(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyPeriod val)
                        {
                            return IsSetUnderlyingComplexEventScheduleFrequencyPeriod();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleFrequencyPeriod()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleFrequencyPeriod);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit UnderlyingComplexEventScheduleFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val = new QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            this.UnderlyingComplexEventScheduleFrequencyUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit Get(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleFrequencyUnit val)
                        {
                            return IsSetUnderlyingComplexEventScheduleFrequencyUnit();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleFrequencyUnit()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleFrequencyUnit);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention UnderlyingComplexEventScheduleRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val = new QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            this.UnderlyingComplexEventScheduleRollConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention Get(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventScheduleRollConvention val)
                        {
                            return IsSetUnderlyingComplexEventScheduleRollConvention();
                        }

                        public bool IsSetUnderlyingComplexEventScheduleRollConvention()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventScheduleRollConvention);
                        }

                    }
                    public class NoUnderlyingComplexEventPeriodDateTimesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventPeriodDate, Tags.UnderlyingComplexEventPeriodTime, 0 };

                        public NoUnderlyingComplexEventPeriodDateTimesGroup()
                          : base(Tags.NoUnderlyingComplexEventPeriodDateTimes, Tags.UnderlyingComplexEventPeriodDate, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventPeriodDateTimesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodDate UnderlyingComplexEventPeriodDate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventPeriodDate val = new QuickFix.Fields.UnderlyingComplexEventPeriodDate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            this.UnderlyingComplexEventPeriodDate = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodDate Get(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodDate val)
                        {
                            return IsSetUnderlyingComplexEventPeriodDate();
                        }

                        public bool IsSetUnderlyingComplexEventPeriodDate()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventPeriodDate);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventPeriodTime UnderlyingComplexEventPeriodTime
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventPeriodTime val = new QuickFix.Fields.UnderlyingComplexEventPeriodTime();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            this.UnderlyingComplexEventPeriodTime = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventPeriodTime Get(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventPeriodTime val)
                        {
                            return IsSetUnderlyingComplexEventPeriodTime();
                        }

                        public bool IsSetUnderlyingComplexEventPeriodTime()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventPeriodTime);
                        }

                    }
                    public class NoUnderlyingComplexEventAveragingObservationsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventAveragingObservationNumber, Tags.UnderlyingComplexEventAveragingWeight, 0 };

                        public NoUnderlyingComplexEventAveragingObservationsGroup()
                          : base(Tags.NoUnderlyingComplexEventAveragingObservations, Tags.UnderlyingComplexEventAveragingObservationNumber, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventAveragingObservationsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber UnderlyingComplexEventAveragingObservationNumber
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val = new QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            this.UnderlyingComplexEventAveragingObservationNumber = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber Get(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventAveragingObservationNumber val)
                        {
                            return IsSetUnderlyingComplexEventAveragingObservationNumber();
                        }

                        public bool IsSetUnderlyingComplexEventAveragingObservationNumber()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventAveragingObservationNumber);
                        }
                        public QuickFix.Fields.UnderlyingComplexEventAveragingWeight UnderlyingComplexEventAveragingWeight
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventAveragingWeight val = new QuickFix.Fields.UnderlyingComplexEventAveragingWeight();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            this.UnderlyingComplexEventAveragingWeight = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventAveragingWeight Get(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventAveragingWeight val)
                        {
                            return IsSetUnderlyingComplexEventAveragingWeight();
                        }

                        public bool IsSetUnderlyingComplexEventAveragingWeight()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventAveragingWeight);
                        }

                    }
                }
                public class NoUnderlyingComplexEventCreditEventSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventSource, 0 };

                    public NoUnderlyingComplexEventCreditEventSourcesGroup()
                      : base(Tags.NoUnderlyingComplexEventCreditEventSources, Tags.UnderlyingComplexEventCreditEventSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventCreditEventSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventSource UnderlyingComplexEventCreditEventSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventSource val = new QuickFix.Fields.UnderlyingComplexEventCreditEventSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        this.UnderlyingComplexEventCreditEventSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventSource Get(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventSource val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventSource();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventSource);
                    }

                }
                public class NoUnderlyingComplexEventCreditEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventType, Tags.UnderlyingComplexEventCreditEventValue, Tags.UnderlyingComplexEventCreditEventCurrency, Tags.UnderlyingComplexEventCreditEventPeriod, Tags.UnderlyingComplexEventCreditEventUnit, Tags.UnderlyingComplexEventCreditEventDayType, Tags.UnderlyingComplexEventCreditEventRateSource, Tags.NoUnderlyingComplexEventCreditEventQualifiers, 0 };

                    public NoUnderlyingComplexEventCreditEventsGroup()
                      : base(Tags.NoUnderlyingComplexEventCreditEvents, Tags.UnderlyingComplexEventCreditEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingComplexEventCreditEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventType UnderlyingComplexEventCreditEventType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventType val = new QuickFix.Fields.UnderlyingComplexEventCreditEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        this.UnderlyingComplexEventCreditEventType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventType Get(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventType val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventType();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventValue UnderlyingComplexEventCreditEventValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventValue val = new QuickFix.Fields.UnderlyingComplexEventCreditEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        this.UnderlyingComplexEventCreditEventValue = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventValue Get(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventValue val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventValue();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventValue()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventValue);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency UnderlyingComplexEventCreditEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val = new QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        this.UnderlyingComplexEventCreditEventCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency Get(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventCurrency val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventCurrency();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventCurrency()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventCurrency);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod UnderlyingComplexEventCreditEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val = new QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        this.UnderlyingComplexEventCreditEventPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod Get(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventPeriod val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventPeriod();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventPeriod()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventPeriod);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventUnit UnderlyingComplexEventCreditEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val = new QuickFix.Fields.UnderlyingComplexEventCreditEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        this.UnderlyingComplexEventCreditEventUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventUnit Get(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventUnit val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventUnit();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventUnit()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventUnit);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventDayType UnderlyingComplexEventCreditEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val = new QuickFix.Fields.UnderlyingComplexEventCreditEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        this.UnderlyingComplexEventCreditEventDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventDayType Get(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventDayType val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventDayType();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventDayType()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventDayType);
                    }
                    public QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource UnderlyingComplexEventCreditEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val = new QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        this.UnderlyingComplexEventCreditEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource Get(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventRateSource val)
                    {
                        return IsSetUnderlyingComplexEventCreditEventRateSource();
                    }

                    public bool IsSetUnderlyingComplexEventCreditEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingComplexEventCreditEventRateSource);
                    }
                    public QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers NoUnderlyingComplexEventCreditEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val = new QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        this.NoUnderlyingComplexEventCreditEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers Get(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingComplexEventCreditEventQualifiers val)
                    {
                        return IsSetNoUnderlyingComplexEventCreditEventQualifiers();
                    }

                    public bool IsSetNoUnderlyingComplexEventCreditEventQualifiers()
                    {
                        return IsSetField(Tags.NoUnderlyingComplexEventCreditEventQualifiers);
                    }
                    public class NoUnderlyingComplexEventCreditEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingComplexEventCreditEventQualifier, 0 };

                        public NoUnderlyingComplexEventCreditEventQualifiersGroup()
                          : base(Tags.NoUnderlyingComplexEventCreditEventQualifiers, Tags.UnderlyingComplexEventCreditEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingComplexEventCreditEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier UnderlyingComplexEventCreditEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val = new QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            this.UnderlyingComplexEventCreditEventQualifier = val;
                        }

                        public QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier Get(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingComplexEventCreditEventQualifier val)
                        {
                            return IsSetUnderlyingComplexEventCreditEventQualifier();
                        }

                        public bool IsSetUnderlyingComplexEventCreditEventQualifier()
                        {
                            return IsSetField(Tags.UnderlyingComplexEventCreditEventQualifier);
                        }

                    }
                }
            }
            public class NoUnderlyingBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingBusinessCenter, 0 };

                public NoUnderlyingBusinessCentersGroup()
                  : base(Tags.NoUnderlyingBusinessCenters, Tags.UnderlyingBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingBusinessCenter UnderlyingBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingBusinessCenter val = new QuickFix.Fields.UnderlyingBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    this.UnderlyingBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingBusinessCenter Get(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingBusinessCenter val)
                {
                    return IsSetUnderlyingBusinessCenter();
                }

                public bool IsSetUnderlyingBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingBusinessCenter);
                }

            }
            public class NoUnderlyingStreamsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingStreamType, Tags.UnderlyingStreamDesc, Tags.UnderlyingStreamPaySide, Tags.UnderlyingStreamReceiveSide, Tags.UnderlyingStreamNotional, Tags.UnderlyingStreamCurrency, Tags.UnderlyingStreamEffectiveDateUnadjusted, Tags.UnderlyingStreamEffectiveDateBusinessDayConvention, Tags.NoUnderlyingStreamEffectiveDateBusinessCenters, Tags.UnderlyingStreamEffectiveDateRelativeTo, Tags.UnderlyingStreamEffectiveDateOffsetPeriod, Tags.UnderlyingStreamEffectiveDateOffsetUnit, Tags.UnderlyingStreamEffectiveDateOffsetDayType, Tags.UnderlyingStreamEffectiveDateAdjusted, Tags.UnderlyingStreamTerminationDateUnadjusted, Tags.UnderlyingStreamTerminationDateBusinessDayConvention, Tags.NoUnderlyingStreamTerminationDateBusinessCenters, Tags.UnderlyingStreamTerminationDateRelativeTo, Tags.UnderlyingStreamTerminationDateOffsetPeriod, Tags.UnderlyingStreamTerminationDateOffsetUnit, Tags.UnderlyingStreamTerminationDateOffsetDayType, Tags.UnderlyingStreamTerminationDateAdjusted, Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention, Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted, Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention, Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateAdjusted, Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted, Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted, Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted, Tags.UnderlyingStreamCalculationFrequencyPeriod, Tags.UnderlyingStreamCalculationFrequencyUnit, Tags.UnderlyingStreamCalculationRollConvention, Tags.UnderlyingStreamCalculationPeriodDatesXID, Tags.UnderlyingStreamCalculationPeriodDatesXIDRef, Tags.NoUnderlyingStreamCalculationPeriodDates, Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod, Tags.UnderlyingStreamCalculationCorrectionPeriod, Tags.UnderlyingStreamCalculationCorrectionUnit, Tags.UnderlyingPaymentStreamType, Tags.UnderlyingPaymentStreamMarketRate, Tags.UnderlyingPaymentStreamDelayIndicator, Tags.UnderlyingPaymentStreamSettlCurrency, Tags.UnderlyingPaymentStreamDayCount, Tags.UnderlyingPaymentStreamAccrualDays, Tags.UnderlyingPaymentStreamDiscountType, Tags.UnderlyingPaymentStreamDiscountRate, Tags.UnderlyingPaymentStreamDiscountRateDayCount, Tags.UnderlyingPaymentStreamCompoundingMethod, Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator, Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters, Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod, Tags.UnderlyingPaymentStreamPaymentFrequencyUnit, Tags.UnderlyingPaymentStreamPaymentRollConvention, Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted, Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted, Tags.UnderlyingPaymentStreamPaymentDateRelativeTo, Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod, Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit, Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType, Tags.NoUnderlyingPaymentStreamPaymentDates, Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator, Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted, Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit, Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType, Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted, Tags.UnderlyingPaymentStreamResetDateRelativeTo, Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters, Tags.UnderlyingPaymentStreamResetFrequencyPeriod, Tags.UnderlyingPaymentStreamResetFrequencyUnit, Tags.UnderlyingPaymentStreamResetWeeklyRollConvention, Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo, Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit, Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType, Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted, Tags.UnderlyingPaymentStreamFixingDateRelativeTo, Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention, Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod, Tags.UnderlyingPaymentStreamFixingDateOffsetUnit, Tags.UnderlyingPaymentStreamFixingDateOffsetDayType, Tags.UnderlyingPaymentStreamFixingDateAdjusted, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit, Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType, Tags.NoUnderlyingPaymentStreamFixingDates, Tags.UnderlyingPaymentStreamRate, Tags.UnderlyingPaymentStreamFixedAmount, Tags.UnderlyingPaymentStreamRateOrAmountCurrency, Tags.UnderlyingPaymentStreamFutureValueNotional, Tags.UnderlyingPaymentStreamFutureValueDateAdjusted, Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure, Tags.UnderlyingPaymentStreamTotalFixedAmount, Tags.UnderlyingPaymentStreamWorldScaleRate, Tags.UnderlyingPaymentStreamContractPrice, Tags.UnderlyingPaymentStreamContractPriceCurrency, Tags.UnderlyingPaymentStreamRateIndex, Tags.UnderlyingPaymentStreamRateIndexSource, Tags.UnderlyingPaymentStreamRateIndexCurveUnit, Tags.UnderlyingPaymentStreamRateIndexCurvePeriod, Tags.UnderlyingPaymentStreamRateMultiplier, Tags.UnderlyingPaymentStreamRateSpread, Tags.UnderlyingPaymentStreamRateSpreadPositionType, Tags.UnderlyingPaymentStreamRateTreatment, Tags.UnderlyingPaymentStreamCapRate, Tags.UnderlyingPaymentStreamCapRateBuySide, Tags.UnderlyingPaymentStreamCapRateSellSide, Tags.UnderlyingPaymentStreamFloorRate, Tags.UnderlyingPaymentStreamFloorRateBuySide, Tags.UnderlyingPaymentStreamFloorRateSellSide, Tags.UnderlyingPaymentStreamInitialRate, Tags.UnderlyingPaymentStreamFinalRateRoundingDirection, Tags.UnderlyingPaymentStreamFinalRatePrecision, Tags.UnderlyingPaymentStreamAveragingMethod, Tags.UnderlyingPaymentStreamNegativeRateTreatment, Tags.UnderlyingPaymentStreamInflationLagPeriod, Tags.UnderlyingPaymentStreamInflationLagUnit, Tags.UnderlyingPaymentStreamInflationLagDayType, Tags.UnderlyingPaymentStreamInflationInterpolationMethod, Tags.UnderlyingPaymentStreamInflationIndexSource, Tags.UnderlyingPaymentStreamInflationPublicationSource, Tags.UnderlyingPaymentStreamInflationInitialIndexLevel, Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable, Tags.UnderlyingPaymentStreamFRADiscounting, Tags.UnderlyingPaymentStreamRateIndex2CurveUnit, Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod, Tags.UnderlyingPaymentStreamRateIndexLocation, Tags.UnderlyingPaymentStreamRateIndexLevel, Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure, Tags.UnderlyingPaymentStreamSettlLevel, Tags.UnderlyingPaymentStreamReferenceLevel, Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure, Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator, Tags.UnderlyingPaymentStreamRateSpreadCurrency, Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure, Tags.UnderlyingPaymentStreamRateConversionFactor, Tags.UnderlyingPaymentStreamRateSpreadType, Tags.UnderlyingPaymentStreamLastResetRate, Tags.UnderlyingPaymentStreamFinalRate, Tags.UnderlyingPaymentStreamCalculationLagPeriod, Tags.UnderlyingPaymentStreamCalculationLagUnit, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit, Tags.UnderlyingPaymentStreamPricingDayType, Tags.UnderlyingPaymentStreamPricingDayDistribution, Tags.UnderlyingPaymentStreamPricingDayCount, Tags.UnderlyingPaymentStreamPricingBusinessCalendar, Tags.UnderlyingPaymentStreamPricingBusinessDayConvention, Tags.NoUnderlyingPaymentStreamPricingBusinessCenters, Tags.NoUnderlyingPaymentStreamPricingDays, Tags.NoUnderlyingPaymentStreamPricingDates, Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted, Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo, Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType, Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted, Tags.UnderlyingPaymentStreamUnderlierRefID, Tags.UnderlyingPaymentStreamFormulaCurrency, Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod, Tags.UnderlyingPaymentStreamFormulaReferenceAmount, Tags.NoUnderlyingPaymentStreamFormulas, Tags.UnderlyingPaymentStreamFormulaImageLength, Tags.UnderlyingPaymentStreamFormulaImage, Tags.UnderlyingDividendReinvestmentIndicator, Tags.UnderlyingDividendEntitlementEvent, Tags.UnderlyingDividendAmountType, Tags.UnderlyingDividendUnderlierRefID, Tags.NoUnderlyingDividendPeriods, Tags.UnderlyingExtraordinaryDividendPartySide, Tags.UnderlyingExtraordinaryDividendAmountType, Tags.UnderlyingExtraordinaryDividendCurrency, Tags.UnderlyingExtraordinaryDividendDeterminationMethod, Tags.UnderlyingDividendFXTriggerDateRelativeTo, Tags.UnderlyingDividendFXTriggerDateOffsetPeriod, Tags.UnderlyingDividendFXTriggerDateOffsetUnit, Tags.UnderlyingDividendFXTriggerDateOffsetDayType, Tags.UnderlyingDividendFXTriggerDateUnadjusted, Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention, Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters, Tags.UnderlyingDividendFXTriggerDateAdjusted, Tags.UnderlyingDividendFloatingRateIndex, Tags.UnderlyingDividendFloatingRateIndexCurvePeriod, Tags.UnderlyingDividendFloatingRateIndexCurveUnit, Tags.UnderlyingDividendFloatingRateMultiplier, Tags.UnderlyingDividendFloatingRateSpread, Tags.UnderlyingDividendFloatingRateSpreadPositionType, Tags.UnderlyingDividendFloatingRateTreatment, Tags.UnderlyingDividendCapRate, Tags.UnderlyingDividendCapRateBuySide, Tags.UnderlyingDividendCapRateSellSide, Tags.UnderlyingDividendFloorRate, Tags.UnderlyingDividendFloorRateBuySide, Tags.UnderlyingDividendFloorRateSellSide, Tags.UnderlyingDividendInitialRate, Tags.UnderlyingDividendFinalRateRoundingDirection, Tags.UnderlyingDividendFinalRatePrecision, Tags.UnderlyingDividendAveragingMethod, Tags.UnderlyingDividendNegativeRateTreatment, Tags.UnderlyingDividendAccrualFixedRate, Tags.UnderlyingDividendAccrualPaymentDateRelativeTo, Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod, Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit, Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType, Tags.UnderlyingDividendAccrualPaymentDateUnadjusted, Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention, Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters, Tags.UnderlyingDividendAccrualPaymentDateAdjusted, Tags.UnderlyingDividendCompoundingMethod, Tags.UnderlyingDividendNumOfIndexUnits, Tags.UnderlyingDividendCashPercentage, Tags.UnderlyingDividendCashEquivalentPercentage, Tags.UnderlyingNonCashDividendTreatment, Tags.UnderlyingDividendComposition, Tags.UnderlyingSpecialDividendsIndicator, Tags.UnderlyingMaterialDividendsIndicator, Tags.UnderlyingOptionsExchangeDividendsIndicator, Tags.UnderlyingAdditionalDividendsIndicator, Tags.UnderlyingAllDividendsIndicator, Tags.UnderlyingReturnRateNotionalReset, Tags.NoUnderlyingReturnRates, Tags.UnderlyingPaymentStreamLinkInitialLevel, Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator, Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator, Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays, Tags.UnderlyingPaymentStreamLinkStrikePrice, Tags.UnderlyingPaymentStreamLinkStrikePriceType, Tags.UnderlyingPaymentStreamLinkMaximumBoundary, Tags.UnderlyingPaymentStreamLinkMinimumBoundary, Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries, Tags.UnderlyingPaymentStreamVarianceUnadjustedCap, Tags.UnderlyingPaymentStreamRealizedVarianceMethod, Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator, Tags.UnderlyingPaymentStreamNearestExchangeContractRefID, Tags.UnderlyingPaymentStreamVegaNotionalAmount, Tags.UnderlyingPaymentStreamRateIndexID, Tags.UnderlyingPaymentStreamRateIndexIDSource, Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention, Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType, Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource, Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage, Tags.NoUnderlyingNonDeliverableFixingDates, Tags.NoUnderlyingSettlRateFallbacks, Tags.UnderlyingPaymentStreamFlatRateIndicator, Tags.UnderlyingPaymentStreamFlatRateAmount, Tags.UnderlyingPaymentStreamFlatRateCurrency, Tags.UnderlyingPaymentStreamMaximumPaymentAmount, Tags.UnderlyingPaymentStreamMaximumPaymentCurrency, Tags.UnderlyingPaymentStreamMaximumTransactionAmount, Tags.UnderlyingPaymentStreamMaximumTransactionCurrency, Tags.UnderlyingPaymentStreamCashSettlIndicator, Tags.UnderlyingPaymentStreamCompoundingXIDRef, Tags.UnderlyingPaymentStreamCompoundingSpread, Tags.UnderlyingPaymentStreamInterpolationMethod, Tags.UnderlyingPaymentStreamInterpolationPeriod, Tags.UnderlyingPaymentStreamCompoundingFixedRate, Tags.UnderlyingPaymentStreamCompoundingRateIndex, Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod, Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit, Tags.UnderlyingPaymentStreamCompoundingRateMultiplier, Tags.UnderlyingPaymentStreamCompoundingRateSpread, Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType, Tags.UnderlyingPaymentStreamCompoundingRateTreatment, Tags.UnderlyingPaymentStreamCompoundingCapRate, Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide, Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide, Tags.UnderlyingPaymentStreamCompoundingFloorRate, Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide, Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide, Tags.UnderlyingPaymentStreamCompoundingInitialRate, Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection, Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision, Tags.UnderlyingPaymentStreamCompoundingAveragingMethod, Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment, Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention, Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters, Tags.NoUnderlyingPaymentStreamCompoundingDates, Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingPeriodSkip, Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted, Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted, Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted, Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit, Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType, Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted, Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod, Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit, Tags.UnderlyingPaymentStreamCompoundingRollConvention, Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted, Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted, Tags.UnderlyingPaymentStreamOtherDayCount, Tags.NoUnderlyingPaymentSchedules, Tags.NoUnderlyingPaymentStubs, Tags.UnderlyingStreamText, Tags.EncodedUnderlyingStreamTextLen, Tags.EncodedUnderlyingStreamText, Tags.UnderlyingStreamXID, Tags.UnderlyingStreamNotionalXIDRef, Tags.UnderlyingStreamNotionalFrequencyPeriod, Tags.UnderlyingStreamNotionalFrequencyUnit, Tags.UnderlyingStreamNotionalCommodityFrequency, Tags.UnderlyingStreamNotionalUnitOfMeasure, Tags.UnderlyingStreamTotalNotional, Tags.UnderlyingStreamTotalNotionalUnitOfMeasure, Tags.UnderlyingStreamCommodityBase, Tags.UnderlyingStreamCommodityType, Tags.UnderlyingStreamCommoditySecurityID, Tags.UnderlyingStreamCommoditySecurityIDSource, Tags.NoUnderlyingStreamCommodityAltIDs, Tags.UnderlyingStreamCommodityDesc, Tags.EncodedUnderlyingStreamCommodityDescLen, Tags.EncodedUnderlyingStreamCommodityDesc, Tags.NoUnderlyingStreamAssetAttributes, Tags.UnderlyingStreamCommodityUnitOfMeasure, Tags.UnderlyingStreamCommodityCurrency, Tags.UnderlyingStreamCommodityExchange, Tags.UnderlyingStreamCommodityRateSource, Tags.UnderlyingStreamCommodityRateReferencePage, Tags.UnderlyingStreamCommodityRateReferencePageHeading, Tags.UnderlyingStreamDataProvider, Tags.NoUnderlyingStreamCommodityDataSources, Tags.UnderlyingStreamCommodityPricingType, Tags.UnderlyingStreamCommodityNearbySettlDayPeriod, Tags.UnderlyingStreamCommodityNearbySettlDayUnit, Tags.UnderlyingStreamCommoditySettlDateUnadjusted, Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention, Tags.NoUnderlyingStreamCommoditySettlBusinessCenters, Tags.UnderlyingStreamCommoditySettlDateAdjusted, Tags.UnderlyingStreamCommoditySettlMonth, Tags.UnderlyingStreamCommoditySettlDateRollPeriod, Tags.UnderlyingStreamCommoditySettlDateRollUnit, Tags.UnderlyingStreamCommoditySettlDayType, Tags.NoUnderlyingStreamCommoditySettlPeriods, Tags.UnderlyingStreamCommodityXID, Tags.UnderlyingStreamCommodityXIDRef, Tags.UnderlyingStreamCommodityDeliveryPricingRegion, Tags.UnderlyingDeliveryStreamType, Tags.NoUnderlyingDeliveryStreamCommoditySources, Tags.UnderlyingDeliveryStreamPipeline, Tags.UnderlyingDeliveryStreamEntryPoint, Tags.UnderlyingDeliveryStreamWithdrawalPoint, Tags.UnderlyingDeliveryStreamDeliveryPoint, Tags.UnderlyingDeliveryStreamDeliveryRestriction, Tags.UnderlyingDeliveryStreamDeliveryContingency, Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide, Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator, Tags.UnderlyingDeliveryStreamRiskApportionment, Tags.UnderlyingDeliveryStreamRiskApportionmentSource, Tags.NoUnderlyingDeliveryStreamCycles, Tags.UnderlyingDeliveryStreamTitleTransferLocation, Tags.UnderlyingDeliveryStreamTitleTransferCondition, Tags.UnderlyingDeliveryStreamImporterOfRecord, Tags.UnderlyingDeliveryStreamNegativeTolerance, Tags.UnderlyingDeliveryStreamPositiveTolerance, Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure, Tags.UnderlyingDeliveryStreamToleranceType, Tags.UnderlyingDeliveryStreamToleranceOptionSide, Tags.UnderlyingDeliveryStreamTotalPositiveTolerance, Tags.UnderlyingDeliveryStreamTotalNegativeTolerance, Tags.UnderlyingDeliveryStreamNotionalConversionFactor, Tags.UnderlyingDeliveryStreamTransportEquipment, Tags.UnderlyingDeliveryStreamElectingPartySide, Tags.UnderlyingDeliveryStreamDeliveryPointSource, Tags.UnderlyingDeliveryStreamDeliveryPointDesc, Tags.UnderlyingDeliveryStreamRouteOrCharter, Tags.NoUnderlyingDeliverySchedules, Tags.UnderlyingStreamVersion, Tags.UnderlyingStreamVersionEffectiveDate, Tags.UnderlyingStreamNotionalDeterminationMethod, Tags.UnderlyingStreamNotionalAdjustments, 0 };

                public NoUnderlyingStreamsGroup()
                  : base(Tags.NoUnderlyingStreams, Tags.UnderlyingStreamType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingStreamsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingStreamType UnderlyingStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamType val = new QuickFix.Fields.UnderlyingStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamType val)
                {
                    this.UnderlyingStreamType = val;
                }

                public QuickFix.Fields.UnderlyingStreamType Get(QuickFix.Fields.UnderlyingStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamType val)
                {
                    return IsSetUnderlyingStreamType();
                }

                public bool IsSetUnderlyingStreamType()
                {
                    return IsSetField(Tags.UnderlyingStreamType);
                }
                public QuickFix.Fields.UnderlyingStreamDesc UnderlyingStreamDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamDesc val = new QuickFix.Fields.UnderlyingStreamDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    this.UnderlyingStreamDesc = val;
                }

                public QuickFix.Fields.UnderlyingStreamDesc Get(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamDesc val)
                {
                    return IsSetUnderlyingStreamDesc();
                }

                public bool IsSetUnderlyingStreamDesc()
                {
                    return IsSetField(Tags.UnderlyingStreamDesc);
                }
                public QuickFix.Fields.UnderlyingStreamPaySide UnderlyingStreamPaySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamPaySide val = new QuickFix.Fields.UnderlyingStreamPaySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    this.UnderlyingStreamPaySide = val;
                }

                public QuickFix.Fields.UnderlyingStreamPaySide Get(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamPaySide val)
                {
                    return IsSetUnderlyingStreamPaySide();
                }

                public bool IsSetUnderlyingStreamPaySide()
                {
                    return IsSetField(Tags.UnderlyingStreamPaySide);
                }
                public QuickFix.Fields.UnderlyingStreamReceiveSide UnderlyingStreamReceiveSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamReceiveSide val = new QuickFix.Fields.UnderlyingStreamReceiveSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    this.UnderlyingStreamReceiveSide = val;
                }

                public QuickFix.Fields.UnderlyingStreamReceiveSide Get(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamReceiveSide val)
                {
                    return IsSetUnderlyingStreamReceiveSide();
                }

                public bool IsSetUnderlyingStreamReceiveSide()
                {
                    return IsSetField(Tags.UnderlyingStreamReceiveSide);
                }
                public QuickFix.Fields.UnderlyingStreamNotional UnderlyingStreamNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotional val = new QuickFix.Fields.UnderlyingStreamNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    this.UnderlyingStreamNotional = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotional Get(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotional val)
                {
                    return IsSetUnderlyingStreamNotional();
                }

                public bool IsSetUnderlyingStreamNotional()
                {
                    return IsSetField(Tags.UnderlyingStreamNotional);
                }
                public QuickFix.Fields.UnderlyingStreamCurrency UnderlyingStreamCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCurrency val = new QuickFix.Fields.UnderlyingStreamCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    this.UnderlyingStreamCurrency = val;
                }

                public QuickFix.Fields.UnderlyingStreamCurrency Get(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCurrency val)
                {
                    return IsSetUnderlyingStreamCurrency();
                }

                public bool IsSetUnderlyingStreamCurrency()
                {
                    return IsSetField(Tags.UnderlyingStreamCurrency);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted UnderlyingStreamEffectiveDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    this.UnderlyingStreamEffectiveDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamEffectiveDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamEffectiveDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention UnderlyingStreamEffectiveDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamEffectiveDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamEffectiveDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamEffectiveDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters NoUnderlyingStreamEffectiveDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamEffectiveDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamEffectiveDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamEffectiveDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamEffectiveDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo UnderlyingStreamEffectiveDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val = new QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    this.UnderlyingStreamEffectiveDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo Get(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateRelativeTo val)
                {
                    return IsSetUnderlyingStreamEffectiveDateRelativeTo();
                }

                public bool IsSetUnderlyingStreamEffectiveDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod UnderlyingStreamEffectiveDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetPeriod val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetPeriod();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit UnderlyingStreamEffectiveDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetUnit val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetUnit();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType UnderlyingStreamEffectiveDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val = new QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    this.UnderlyingStreamEffectiveDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType Get(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateOffsetDayType val)
                {
                    return IsSetUnderlyingStreamEffectiveDateOffsetDayType();
                }

                public bool IsSetUnderlyingStreamEffectiveDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted UnderlyingStreamEffectiveDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val = new QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    this.UnderlyingStreamEffectiveDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted Get(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateAdjusted val)
                {
                    return IsSetUnderlyingStreamEffectiveDateAdjusted();
                }

                public bool IsSetUnderlyingStreamEffectiveDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamEffectiveDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted UnderlyingStreamTerminationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    this.UnderlyingStreamTerminationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamTerminationDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamTerminationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention UnderlyingStreamTerminationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamTerminationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamTerminationDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamTerminationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters NoUnderlyingStreamTerminationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamTerminationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamTerminationDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamTerminationDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamTerminationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamTerminationDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo UnderlyingStreamTerminationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val = new QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    this.UnderlyingStreamTerminationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo Get(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateRelativeTo val)
                {
                    return IsSetUnderlyingStreamTerminationDateRelativeTo();
                }

                public bool IsSetUnderlyingStreamTerminationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod UnderlyingStreamTerminationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    this.UnderlyingStreamTerminationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit UnderlyingStreamTerminationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    this.UnderlyingStreamTerminationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetUnit val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetUnit();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType UnderlyingStreamTerminationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val = new QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    this.UnderlyingStreamTerminationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType Get(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateOffsetDayType val)
                {
                    return IsSetUnderlyingStreamTerminationDateOffsetDayType();
                }

                public bool IsSetUnderlyingStreamTerminationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted UnderlyingStreamTerminationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val = new QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    this.UnderlyingStreamTerminationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted Get(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateAdjusted val)
                {
                    return IsSetUnderlyingStreamTerminationDateAdjusted();
                }

                public bool IsSetUnderlyingStreamTerminationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamTerminationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention UnderlyingStreamCalculationPeriodBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    this.UnderlyingStreamCalculationPeriodBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters NoUnderlyingStreamCalculationPeriodBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    this.NoUnderlyingStreamCalculationPeriodBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamCalculationPeriodBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamCalculationPeriodBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted UnderlyingStreamFirstPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention UnderlyingStreamFirstPeriodStartDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters NoUnderlyingStreamFirstPeriodStartDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    this.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamFirstPeriodStartDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamFirstPeriodStartDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted UnderlyingStreamFirstPeriodStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    this.UnderlyingStreamFirstPeriodStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateAdjusted val)
                {
                    return IsSetUnderlyingStreamFirstPeriodStartDateAdjusted();
                }

                public bool IsSetUnderlyingStreamFirstPeriodStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted UnderlyingStreamFirstRegularPeriodStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstRegularPeriodStartDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstRegularPeriodStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    this.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted UnderlyingStreamLastRegularPeriodEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    this.UnderlyingStreamLastRegularPeriodEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamLastRegularPeriodEndDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamLastRegularPeriodEndDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamLastRegularPeriodEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod UnderlyingStreamCalculationFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    this.UnderlyingStreamCalculationFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationFrequencyPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationFrequencyPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit UnderlyingStreamCalculationFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    this.UnderlyingStreamCalculationFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationFrequencyUnit val)
                {
                    return IsSetUnderlyingStreamCalculationFrequencyUnit();
                }

                public bool IsSetUnderlyingStreamCalculationFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationRollConvention UnderlyingStreamCalculationRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationRollConvention val = new QuickFix.Fields.UnderlyingStreamCalculationRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    this.UnderlyingStreamCalculationRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationRollConvention Get(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationRollConvention val)
                {
                    return IsSetUnderlyingStreamCalculationRollConvention();
                }

                public bool IsSetUnderlyingStreamCalculationRollConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationRollConvention);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID UnderlyingStreamCalculationPeriodDatesXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    this.UnderlyingStreamCalculationPeriodDatesXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXID val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodDatesXID();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodDatesXID()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodDatesXID);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef UnderlyingStreamCalculationPeriodDatesXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    this.UnderlyingStreamCalculationPeriodDatesXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDatesXIDRef val)
                {
                    return IsSetUnderlyingStreamCalculationPeriodDatesXIDRef();
                }

                public bool IsSetUnderlyingStreamCalculationPeriodDatesXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationPeriodDatesXIDRef);
                }
                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates NoUnderlyingStreamCalculationPeriodDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val = new QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    this.NoUnderlyingStreamCalculationPeriodDates = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates Get(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCalculationPeriodDates val)
                {
                    return IsSetNoUnderlyingStreamCalculationPeriodDates();
                }

                public bool IsSetNoUnderlyingStreamCalculationPeriodDates()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCalculationPeriodDates);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod UnderlyingStreamCalculationBalanceOfFirstPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    this.UnderlyingStreamCalculationBalanceOfFirstPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationBalanceOfFirstPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationBalanceOfFirstPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationBalanceOfFirstPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod UnderlyingStreamCalculationCorrectionPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val = new QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    this.UnderlyingStreamCalculationCorrectionPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod Get(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationCorrectionPeriod val)
                {
                    return IsSetUnderlyingStreamCalculationCorrectionPeriod();
                }

                public bool IsSetUnderlyingStreamCalculationCorrectionPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationCorrectionPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit UnderlyingStreamCalculationCorrectionUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val = new QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    this.UnderlyingStreamCalculationCorrectionUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit Get(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationCorrectionUnit val)
                {
                    return IsSetUnderlyingStreamCalculationCorrectionUnit();
                }

                public bool IsSetUnderlyingStreamCalculationCorrectionUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCalculationCorrectionUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamType UnderlyingPaymentStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamType val = new QuickFix.Fields.UnderlyingPaymentStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    this.UnderlyingPaymentStreamType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamType Get(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamType val)
                {
                    return IsSetUnderlyingPaymentStreamType();
                }

                public bool IsSetUnderlyingPaymentStreamType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMarketRate UnderlyingPaymentStreamMarketRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMarketRate val = new QuickFix.Fields.UnderlyingPaymentStreamMarketRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    this.UnderlyingPaymentStreamMarketRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMarketRate Get(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMarketRate val)
                {
                    return IsSetUnderlyingPaymentStreamMarketRate();
                }

                public bool IsSetUnderlyingPaymentStreamMarketRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMarketRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator UnderlyingPaymentStreamDelayIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    this.UnderlyingPaymentStreamDelayIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDelayIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamDelayIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamDelayIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDelayIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency UnderlyingPaymentStreamSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    this.UnderlyingPaymentStreamSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamSettlCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamSettlCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDayCount UnderlyingPaymentStreamDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    this.UnderlyingPaymentStreamDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamAccrualDays UnderlyingPaymentStreamAccrualDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val = new QuickFix.Fields.UnderlyingPaymentStreamAccrualDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    this.UnderlyingPaymentStreamAccrualDays = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamAccrualDays Get(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamAccrualDays val)
                {
                    return IsSetUnderlyingPaymentStreamAccrualDays();
                }

                public bool IsSetUnderlyingPaymentStreamAccrualDays()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamAccrualDays);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountType UnderlyingPaymentStreamDiscountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountType val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    this.UnderlyingPaymentStreamDiscountType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountType Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountType val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountType();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRate UnderlyingPaymentStreamDiscountRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    this.UnderlyingPaymentStreamDiscountRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRate Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountRate val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountRate();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount UnderlyingPaymentStreamDiscountRateDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    this.UnderlyingPaymentStreamDiscountRateDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDiscountRateDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamDiscountRateDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamDiscountRateDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDiscountRateDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod UnderlyingPaymentStreamCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    this.UnderlyingPaymentStreamCompoundingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator UnderlyingPaymentStreamInitialPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamInitialPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamInitialPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator UnderlyingPaymentStreamInterimPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamInterimPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamInterimPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator UnderlyingPaymentStreamFinalPrincipalExchangeIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    this.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPrincipalExchangeIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPrincipalExchangeIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention UnderlyingPaymentStreamPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters NoUnderlyingPaymentStreamPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod UnderlyingPaymentStreamPaymentFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamPaymentFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit UnderlyingPaymentStreamPaymentFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamPaymentFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention UnderlyingPaymentStreamPaymentRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    this.UnderlyingPaymentStreamPaymentRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted UnderlyingPaymentStreamFirstPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFirstPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamLastRegularPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamLastRegularPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo UnderlyingPaymentStreamPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod UnderlyingPaymentStreamPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit UnderlyingPaymentStreamPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType UnderlyingPaymentStreamPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates NoUnderlyingPaymentStreamPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    this.NoUnderlyingPaymentStreamPaymentDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPaymentDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamPaymentDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamPaymentDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPaymentDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    this.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted UnderlyingPaymentStreamFinalPricePaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFinalPricePaymentDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFinalPricePaymentDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo UnderlyingPaymentStreamResetDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamResetDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamResetDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamResetDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention UnderlyingPaymentStreamResetDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamResetDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamResetDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamResetDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters NoUnderlyingPaymentStreamResetDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamResetDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamResetDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamResetDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamResetDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod UnderlyingPaymentStreamResetFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamResetFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamResetFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamResetFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit UnderlyingPaymentStreamResetFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamResetFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamResetFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamResetFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention UnderlyingPaymentStreamResetWeeklyRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    this.UnderlyingPaymentStreamResetWeeklyRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetWeeklyRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamResetWeeklyRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamResetWeeklyRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamResetWeeklyRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo UnderlyingPaymentStreamInitialFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamInitialFixingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamInitialFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod UnderlyingPaymentStreamInitialFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit UnderlyingPaymentStreamInitialFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType UnderlyingPaymentStreamInitialFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted UnderlyingPaymentStreamInitialFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamInitialFixingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamInitialFixingDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamInitialFixingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo UnderlyingPaymentStreamFixingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFixingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention UnderlyingPaymentStreamFixingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamFixingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters NoUnderlyingPaymentStreamFixingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamFixingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamFixingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamFixingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod UnderlyingPaymentStreamFixingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit UnderlyingPaymentStreamFixingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType UnderlyingPaymentStreamFixingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFixingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted UnderlyingPaymentStreamFixingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFixingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFixingDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFixingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod UnderlyingPaymentStreamRateCutoffDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit UnderlyingPaymentStreamRateCutoffDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType UnderlyingPaymentStreamRateCutoffDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamRateCutoffDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateCutoffDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamRateCutoffDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamRateCutoffDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates NoUnderlyingPaymentStreamFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    this.NoUnderlyingPaymentStreamFixingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFixingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamFixingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamFixingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFixingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRate UnderlyingPaymentStreamRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRate val = new QuickFix.Fields.UnderlyingPaymentStreamRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    this.UnderlyingPaymentStreamRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRate Get(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRate val)
                {
                    return IsSetUnderlyingPaymentStreamRate();
                }

                public bool IsSetUnderlyingPaymentStreamRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmount UnderlyingPaymentStreamFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    this.UnderlyingPaymentStreamFixedAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixedAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFixedAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFixedAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixedAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency UnderlyingPaymentStreamRateOrAmountCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    this.UnderlyingPaymentStreamRateOrAmountCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateOrAmountCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamRateOrAmountCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamRateOrAmountCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateOrAmountCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional UnderlyingPaymentStreamFutureValueNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val = new QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    this.UnderlyingPaymentStreamFutureValueNotional = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional Get(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFutureValueNotional val)
                {
                    return IsSetUnderlyingPaymentStreamFutureValueNotional();
                }

                public bool IsSetUnderlyingPaymentStreamFutureValueNotional()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFutureValueNotional);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted UnderlyingPaymentStreamFutureValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFutureValueDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFutureValueDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFutureValueDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFutureValueDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFutureValueDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure UnderlyingPaymentStreamFixedAmountUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamFixedAmountUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixedAmountUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamFixedAmountUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamFixedAmountUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount UnderlyingPaymentStreamTotalFixedAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    this.UnderlyingPaymentStreamTotalFixedAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamTotalFixedAmount val)
                {
                    return IsSetUnderlyingPaymentStreamTotalFixedAmount();
                }

                public bool IsSetUnderlyingPaymentStreamTotalFixedAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamTotalFixedAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate UnderlyingPaymentStreamWorldScaleRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val = new QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    this.UnderlyingPaymentStreamWorldScaleRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate Get(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamWorldScaleRate val)
                {
                    return IsSetUnderlyingPaymentStreamWorldScaleRate();
                }

                public bool IsSetUnderlyingPaymentStreamWorldScaleRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamWorldScaleRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamContractPrice UnderlyingPaymentStreamContractPrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamContractPrice val = new QuickFix.Fields.UnderlyingPaymentStreamContractPrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    this.UnderlyingPaymentStreamContractPrice = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamContractPrice Get(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamContractPrice val)
                {
                    return IsSetUnderlyingPaymentStreamContractPrice();
                }

                public bool IsSetUnderlyingPaymentStreamContractPrice()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamContractPrice);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency UnderlyingPaymentStreamContractPriceCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    this.UnderlyingPaymentStreamContractPriceCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamContractPriceCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamContractPriceCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamContractPriceCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamContractPriceCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex UnderlyingPaymentStreamRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    this.UnderlyingPaymentStreamRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource UnderlyingPaymentStreamRateIndexSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    this.UnderlyingPaymentStreamRateIndexSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexSource val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexSource();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit UnderlyingPaymentStreamRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    this.UnderlyingPaymentStreamRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod UnderlyingPaymentStreamRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    this.UnderlyingPaymentStreamRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier UnderlyingPaymentStreamRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    this.UnderlyingPaymentStreamRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateMultiplier val)
                {
                    return IsSetUnderlyingPaymentStreamRateMultiplier();
                }

                public bool IsSetUnderlyingPaymentStreamRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpread UnderlyingPaymentStreamRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpread val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    this.UnderlyingPaymentStreamRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpread Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpread val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpread();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType UnderlyingPaymentStreamRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    this.UnderlyingPaymentStreamRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadPositionType val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadPositionType();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateTreatment UnderlyingPaymentStreamRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    this.UnderlyingPaymentStreamRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRate UnderlyingPaymentStreamCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRate val = new QuickFix.Fields.UnderlyingPaymentStreamCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    this.UnderlyingPaymentStreamCapRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRate Get(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRate val)
                {
                    return IsSetUnderlyingPaymentStreamCapRate();
                }

                public bool IsSetUnderlyingPaymentStreamCapRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide UnderlyingPaymentStreamCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCapRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide UnderlyingPaymentStreamCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCapRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCapRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRate UnderlyingPaymentStreamFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRate val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    this.UnderlyingPaymentStreamFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRate Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRate val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRate();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide UnderlyingPaymentStreamFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    this.UnderlyingPaymentStreamFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide UnderlyingPaymentStreamFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    this.UnderlyingPaymentStreamFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFloorRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamFloorRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInitialRate UnderlyingPaymentStreamInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInitialRate val = new QuickFix.Fields.UnderlyingPaymentStreamInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    this.UnderlyingPaymentStreamInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInitialRate Get(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialRate val)
                {
                    return IsSetUnderlyingPaymentStreamInitialRate();
                }

                public bool IsSetUnderlyingPaymentStreamInitialRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInitialRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection UnderlyingPaymentStreamFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    this.UnderlyingPaymentStreamFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision UnderlyingPaymentStreamFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    this.UnderlyingPaymentStreamFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRatePrecision val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRatePrecision();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod UnderlyingPaymentStreamAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    this.UnderlyingPaymentStreamAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamAveragingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamAveragingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment UnderlyingPaymentStreamNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    this.UnderlyingPaymentStreamNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNegativeRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamNegativeRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod UnderlyingPaymentStreamInflationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    this.UnderlyingPaymentStreamInflationLagPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit UnderlyingPaymentStreamInflationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    this.UnderlyingPaymentStreamInflationLagUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagUnit val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagUnit();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType UnderlyingPaymentStreamInflationLagDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val = new QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    this.UnderlyingPaymentStreamInflationLagDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType Get(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationLagDayType val)
                {
                    return IsSetUnderlyingPaymentStreamInflationLagDayType();
                }

                public bool IsSetUnderlyingPaymentStreamInflationLagDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationLagDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod UnderlyingPaymentStreamInflationInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    this.UnderlyingPaymentStreamInflationInterpolationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationInterpolationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamInflationInterpolationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamInflationInterpolationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationInterpolationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource UnderlyingPaymentStreamInflationIndexSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val = new QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    this.UnderlyingPaymentStreamInflationIndexSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource Get(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationIndexSource val)
                {
                    return IsSetUnderlyingPaymentStreamInflationIndexSource();
                }

                public bool IsSetUnderlyingPaymentStreamInflationIndexSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationIndexSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource UnderlyingPaymentStreamInflationPublicationSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val = new QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    this.UnderlyingPaymentStreamInflationPublicationSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource Get(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationPublicationSource val)
                {
                    return IsSetUnderlyingPaymentStreamInflationPublicationSource();
                }

                public bool IsSetUnderlyingPaymentStreamInflationPublicationSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationPublicationSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel UnderlyingPaymentStreamInflationInitialIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val = new QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    this.UnderlyingPaymentStreamInflationInitialIndexLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel Get(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationInitialIndexLevel val)
                {
                    return IsSetUnderlyingPaymentStreamInflationInitialIndexLevel();
                }

                public bool IsSetUnderlyingPaymentStreamInflationInitialIndexLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationInitialIndexLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable UnderlyingPaymentStreamInflationFallbackBondApplicable
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val = new QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    this.UnderlyingPaymentStreamInflationFallbackBondApplicable = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable Get(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInflationFallbackBondApplicable val)
                {
                    return IsSetUnderlyingPaymentStreamInflationFallbackBondApplicable();
                }

                public bool IsSetUnderlyingPaymentStreamInflationFallbackBondApplicable()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting UnderlyingPaymentStreamFRADiscounting
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val = new QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    this.UnderlyingPaymentStreamFRADiscounting = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting Get(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFRADiscounting val)
                {
                    return IsSetUnderlyingPaymentStreamFRADiscounting();
                }

                public bool IsSetUnderlyingPaymentStreamFRADiscounting()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFRADiscounting);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit UnderlyingPaymentStreamRateIndex2CurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    this.UnderlyingPaymentStreamRateIndex2CurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex2CurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex2CurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex2CurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod UnderlyingPaymentStreamRateIndex2CurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    this.UnderlyingPaymentStreamRateIndex2CurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndex2CurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndex2CurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndex2CurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation UnderlyingPaymentStreamRateIndexLocation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    this.UnderlyingPaymentStreamRateIndexLocation = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLocation val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexLocation();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexLocation()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexLocation);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel UnderlyingPaymentStreamRateIndexLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    this.UnderlyingPaymentStreamRateIndexLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexLevel val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexLevel();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure UnderlyingPaymentStreamRateIndexUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamRateIndexUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamSettlLevel UnderlyingPaymentStreamSettlLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val = new QuickFix.Fields.UnderlyingPaymentStreamSettlLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    this.UnderlyingPaymentStreamSettlLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamSettlLevel Get(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamSettlLevel val)
                {
                    return IsSetUnderlyingPaymentStreamSettlLevel();
                }

                public bool IsSetUnderlyingPaymentStreamSettlLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamSettlLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel UnderlyingPaymentStreamReferenceLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    this.UnderlyingPaymentStreamReferenceLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevel val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevel();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure UnderlyingPaymentStreamReferenceLevelUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevelUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevelUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    this.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency UnderlyingPaymentStreamRateSpreadCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    this.UnderlyingPaymentStreamRateSpreadCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure UnderlyingPaymentStreamRateSpreadUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    this.UnderlyingPaymentStreamRateSpreadUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadUnitOfMeasure val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadUnitOfMeasure();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor UnderlyingPaymentStreamRateConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val = new QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    this.UnderlyingPaymentStreamRateConversionFactor = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor Get(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateConversionFactor val)
                {
                    return IsSetUnderlyingPaymentStreamRateConversionFactor();
                }

                public bool IsSetUnderlyingPaymentStreamRateConversionFactor()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateConversionFactor);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType UnderlyingPaymentStreamRateSpreadType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val = new QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    this.UnderlyingPaymentStreamRateSpreadType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType Get(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateSpreadType val)
                {
                    return IsSetUnderlyingPaymentStreamRateSpreadType();
                }

                public bool IsSetUnderlyingPaymentStreamRateSpreadType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateSpreadType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLastResetRate UnderlyingPaymentStreamLastResetRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val = new QuickFix.Fields.UnderlyingPaymentStreamLastResetRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    this.UnderlyingPaymentStreamLastResetRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLastResetRate Get(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLastResetRate val)
                {
                    return IsSetUnderlyingPaymentStreamLastResetRate();
                }

                public bool IsSetUnderlyingPaymentStreamLastResetRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLastResetRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFinalRate UnderlyingPaymentStreamFinalRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFinalRate val = new QuickFix.Fields.UnderlyingPaymentStreamFinalRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    this.UnderlyingPaymentStreamFinalRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFinalRate Get(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFinalRate val)
                {
                    return IsSetUnderlyingPaymentStreamFinalRate();
                }

                public bool IsSetUnderlyingPaymentStreamFinalRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFinalRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod UnderlyingPaymentStreamCalculationLagPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    this.UnderlyingPaymentStreamCalculationLagPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCalculationLagPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCalculationLagPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCalculationLagPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit UnderlyingPaymentStreamCalculationLagUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    this.UnderlyingPaymentStreamCalculationLagUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCalculationLagUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCalculationLagUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCalculationLagUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCalculationLagUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod UnderlyingPaymentStreamFirstObservationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit UnderlyingPaymentStreamFirstObservationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayType UnderlyingPaymentStreamPricingDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    this.UnderlyingPaymentStreamPricingDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayType Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayType val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayType();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution UnderlyingPaymentStreamPricingDayDistribution
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    this.UnderlyingPaymentStreamPricingDayDistribution = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayDistribution val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayDistribution();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayDistribution()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayDistribution);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount UnderlyingPaymentStreamPricingDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    this.UnderlyingPaymentStreamPricingDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamPricingDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamPricingDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingDayCount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar UnderlyingPaymentStreamPricingBusinessCalendar
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    this.UnderlyingPaymentStreamPricingBusinessCalendar = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCalendar val)
                {
                    return IsSetUnderlyingPaymentStreamPricingBusinessCalendar();
                }

                public bool IsSetUnderlyingPaymentStreamPricingBusinessCalendar()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessCalendar);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention UnderlyingPaymentStreamPricingBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamPricingBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamPricingBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamPricingBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters NoUnderlyingPaymentStreamPricingBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamPricingBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays NoUnderlyingPaymentStreamPricingDays
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    this.NoUnderlyingPaymentStreamPricingDays = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDays val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingDays();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingDays()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingDays);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates NoUnderlyingPaymentStreamPricingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    this.NoUnderlyingPaymentStreamPricingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamPricingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamPricingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamPricingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamPricingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted UnderlyingPaymentStreamFirstObservationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo UnderlyingPaymentStreamFirstObservationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType UnderlyingPaymentStreamFirstObservationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted UnderlyingPaymentStreamFirstObservationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamFirstObservationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFirstObservationDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamFirstObservationDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamFirstObservationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID UnderlyingPaymentStreamUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val = new QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    this.UnderlyingPaymentStreamUnderlierRefID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID Get(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamUnderlierRefID val)
                {
                    return IsSetUnderlyingPaymentStreamUnderlierRefID();
                }

                public bool IsSetUnderlyingPaymentStreamUnderlierRefID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamUnderlierRefID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency UnderlyingPaymentStreamFormulaCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    this.UnderlyingPaymentStreamFormulaCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    this.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaCurrencyDeterminationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaCurrencyDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount UnderlyingPaymentStreamFormulaReferenceAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    this.UnderlyingPaymentStreamFormulaReferenceAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaReferenceAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaReferenceAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaReferenceAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaReferenceAmount);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamFormulas NoUnderlyingPaymentStreamFormulas
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val = new QuickFix.Fields.NoUnderlyingPaymentStreamFormulas();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    this.NoUnderlyingPaymentStreamFormulas = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamFormulas Get(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamFormulas val)
                {
                    return IsSetNoUnderlyingPaymentStreamFormulas();
                }

                public bool IsSetNoUnderlyingPaymentStreamFormulas()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamFormulas);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength UnderlyingPaymentStreamFormulaImageLength
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    this.UnderlyingPaymentStreamFormulaImageLength = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaImageLength val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaImageLength();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaImageLength()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaImageLength);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImage UnderlyingPaymentStreamFormulaImage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaImage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    this.UnderlyingPaymentStreamFormulaImage = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFormulaImage Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaImage val)
                {
                    return IsSetUnderlyingPaymentStreamFormulaImage();
                }

                public bool IsSetUnderlyingPaymentStreamFormulaImage()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFormulaImage);
                }
                public QuickFix.Fields.UnderlyingDividendReinvestmentIndicator UnderlyingDividendReinvestmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val = new QuickFix.Fields.UnderlyingDividendReinvestmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    this.UnderlyingDividendReinvestmentIndicator = val;
                }

                public QuickFix.Fields.UnderlyingDividendReinvestmentIndicator Get(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendReinvestmentIndicator val)
                {
                    return IsSetUnderlyingDividendReinvestmentIndicator();
                }

                public bool IsSetUnderlyingDividendReinvestmentIndicator()
                {
                    return IsSetField(Tags.UnderlyingDividendReinvestmentIndicator);
                }
                public QuickFix.Fields.UnderlyingDividendEntitlementEvent UnderlyingDividendEntitlementEvent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendEntitlementEvent val = new QuickFix.Fields.UnderlyingDividendEntitlementEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    this.UnderlyingDividendEntitlementEvent = val;
                }

                public QuickFix.Fields.UnderlyingDividendEntitlementEvent Get(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendEntitlementEvent val)
                {
                    return IsSetUnderlyingDividendEntitlementEvent();
                }

                public bool IsSetUnderlyingDividendEntitlementEvent()
                {
                    return IsSetField(Tags.UnderlyingDividendEntitlementEvent);
                }
                public QuickFix.Fields.UnderlyingDividendAmountType UnderlyingDividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAmountType val = new QuickFix.Fields.UnderlyingDividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    this.UnderlyingDividendAmountType = val;
                }

                public QuickFix.Fields.UnderlyingDividendAmountType Get(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAmountType val)
                {
                    return IsSetUnderlyingDividendAmountType();
                }

                public bool IsSetUnderlyingDividendAmountType()
                {
                    return IsSetField(Tags.UnderlyingDividendAmountType);
                }
                public QuickFix.Fields.UnderlyingDividendUnderlierRefID UnderlyingDividendUnderlierRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendUnderlierRefID val = new QuickFix.Fields.UnderlyingDividendUnderlierRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    this.UnderlyingDividendUnderlierRefID = val;
                }

                public QuickFix.Fields.UnderlyingDividendUnderlierRefID Get(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendUnderlierRefID val)
                {
                    return IsSetUnderlyingDividendUnderlierRefID();
                }

                public bool IsSetUnderlyingDividendUnderlierRefID()
                {
                    return IsSetField(Tags.UnderlyingDividendUnderlierRefID);
                }
                public QuickFix.Fields.NoUnderlyingDividendPeriods NoUnderlyingDividendPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendPeriods val = new QuickFix.Fields.NoUnderlyingDividendPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    this.NoUnderlyingDividendPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendPeriods Get(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPeriods val)
                {
                    return IsSetNoUnderlyingDividendPeriods();
                }

                public bool IsSetNoUnderlyingDividendPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingDividendPeriods);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide UnderlyingExtraordinaryDividendPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val = new QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    this.UnderlyingExtraordinaryDividendPartySide = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide Get(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendPartySide val)
                {
                    return IsSetUnderlyingExtraordinaryDividendPartySide();
                }

                public bool IsSetUnderlyingExtraordinaryDividendPartySide()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendPartySide);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType UnderlyingExtraordinaryDividendAmountType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val = new QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    this.UnderlyingExtraordinaryDividendAmountType = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType Get(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendAmountType val)
                {
                    return IsSetUnderlyingExtraordinaryDividendAmountType();
                }

                public bool IsSetUnderlyingExtraordinaryDividendAmountType()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendAmountType);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency UnderlyingExtraordinaryDividendCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val = new QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    this.UnderlyingExtraordinaryDividendCurrency = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency Get(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendCurrency val)
                {
                    return IsSetUnderlyingExtraordinaryDividendCurrency();
                }

                public bool IsSetUnderlyingExtraordinaryDividendCurrency()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendCurrency);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod UnderlyingExtraordinaryDividendDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val = new QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    this.UnderlyingExtraordinaryDividendDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod Get(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryDividendDeterminationMethod val)
                {
                    return IsSetUnderlyingExtraordinaryDividendDeterminationMethod();
                }

                public bool IsSetUnderlyingExtraordinaryDividendDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryDividendDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo UnderlyingDividendFXTriggerDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    this.UnderlyingDividendFXTriggerDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateRelativeTo val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateRelativeTo();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod UnderlyingDividendFXTriggerDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetPeriod val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetPeriod();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit UnderlyingDividendFXTriggerDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetUnit val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetUnit();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType UnderlyingDividendFXTriggerDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    this.UnderlyingDividendFXTriggerDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateOffsetDayType val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateOffsetDayType();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted UnderlyingDividendFXTriggerDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    this.UnderlyingDividendFXTriggerDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateUnadjusted val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateUnadjusted();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention UnderlyingDividendFXTriggerDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    this.UnderlyingDividendFXTriggerDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters NoUnderlyingDividendFXTriggerDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    this.NoUnderlyingDividendFXTriggerDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendFXTriggerDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingDividendFXTriggerDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingDividendFXTriggerDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted UnderlyingDividendFXTriggerDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    this.UnderlyingDividendFXTriggerDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateAdjusted val)
                {
                    return IsSetUnderlyingDividendFXTriggerDateAdjusted();
                }

                public bool IsSetUnderlyingDividendFXTriggerDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendFXTriggerDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndex UnderlyingDividendFloatingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndex val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    this.UnderlyingDividendFloatingRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndex Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndex val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndex();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndex()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndex);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod UnderlyingDividendFloatingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    this.UnderlyingDividendFloatingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit UnderlyingDividendFloatingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    this.UnderlyingDividendFloatingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingDividendFloatingRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingDividendFloatingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier UnderlyingDividendFloatingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val = new QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    this.UnderlyingDividendFloatingRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier Get(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateMultiplier val)
                {
                    return IsSetUnderlyingDividendFloatingRateMultiplier();
                }

                public bool IsSetUnderlyingDividendFloatingRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateSpread UnderlyingDividendFloatingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateSpread val = new QuickFix.Fields.UnderlyingDividendFloatingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    this.UnderlyingDividendFloatingRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateSpread Get(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateSpread val)
                {
                    return IsSetUnderlyingDividendFloatingRateSpread();
                }

                public bool IsSetUnderlyingDividendFloatingRateSpread()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateSpread);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType UnderlyingDividendFloatingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val = new QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    this.UnderlyingDividendFloatingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType Get(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateSpreadPositionType val)
                {
                    return IsSetUnderlyingDividendFloatingRateSpreadPositionType();
                }

                public bool IsSetUnderlyingDividendFloatingRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingDividendFloatingRateTreatment UnderlyingDividendFloatingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val = new QuickFix.Fields.UnderlyingDividendFloatingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    this.UnderlyingDividendFloatingRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloatingRateTreatment Get(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloatingRateTreatment val)
                {
                    return IsSetUnderlyingDividendFloatingRateTreatment();
                }

                public bool IsSetUnderlyingDividendFloatingRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingDividendFloatingRateTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendCapRate UnderlyingDividendCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRate val = new QuickFix.Fields.UnderlyingDividendCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    this.UnderlyingDividendCapRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRate Get(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRate val)
                {
                    return IsSetUnderlyingDividendCapRate();
                }

                public bool IsSetUnderlyingDividendCapRate()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRate);
                }
                public QuickFix.Fields.UnderlyingDividendCapRateBuySide UnderlyingDividendCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRateBuySide val = new QuickFix.Fields.UnderlyingDividendCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    this.UnderlyingDividendCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRateBuySide Get(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRateBuySide val)
                {
                    return IsSetUnderlyingDividendCapRateBuySide();
                }

                public bool IsSetUnderlyingDividendCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingDividendCapRateSellSide UnderlyingDividendCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCapRateSellSide val = new QuickFix.Fields.UnderlyingDividendCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    this.UnderlyingDividendCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingDividendCapRateSellSide Get(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCapRateSellSide val)
                {
                    return IsSetUnderlyingDividendCapRateSellSide();
                }

                public bool IsSetUnderlyingDividendCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingDividendCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRate UnderlyingDividendFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRate val = new QuickFix.Fields.UnderlyingDividendFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    this.UnderlyingDividendFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRate Get(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRate val)
                {
                    return IsSetUnderlyingDividendFloorRate();
                }

                public bool IsSetUnderlyingDividendFloorRate()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRate);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRateBuySide UnderlyingDividendFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRateBuySide val = new QuickFix.Fields.UnderlyingDividendFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    this.UnderlyingDividendFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRateBuySide Get(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRateBuySide val)
                {
                    return IsSetUnderlyingDividendFloorRateBuySide();
                }

                public bool IsSetUnderlyingDividendFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingDividendFloorRateSellSide UnderlyingDividendFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFloorRateSellSide val = new QuickFix.Fields.UnderlyingDividendFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    this.UnderlyingDividendFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingDividendFloorRateSellSide Get(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFloorRateSellSide val)
                {
                    return IsSetUnderlyingDividendFloorRateSellSide();
                }

                public bool IsSetUnderlyingDividendFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingDividendFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingDividendInitialRate UnderlyingDividendInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendInitialRate val = new QuickFix.Fields.UnderlyingDividendInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    this.UnderlyingDividendInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendInitialRate Get(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendInitialRate val)
                {
                    return IsSetUnderlyingDividendInitialRate();
                }

                public bool IsSetUnderlyingDividendInitialRate()
                {
                    return IsSetField(Tags.UnderlyingDividendInitialRate);
                }
                public QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection UnderlyingDividendFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    this.UnderlyingDividendFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingDividendFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingDividendFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingDividendFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingDividendFinalRatePrecision UnderlyingDividendFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendFinalRatePrecision val = new QuickFix.Fields.UnderlyingDividendFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    this.UnderlyingDividendFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingDividendFinalRatePrecision Get(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendFinalRatePrecision val)
                {
                    return IsSetUnderlyingDividendFinalRatePrecision();
                }

                public bool IsSetUnderlyingDividendFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingDividendFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingDividendAveragingMethod UnderlyingDividendAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAveragingMethod val = new QuickFix.Fields.UnderlyingDividendAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    this.UnderlyingDividendAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingDividendAveragingMethod Get(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAveragingMethod val)
                {
                    return IsSetUnderlyingDividendAveragingMethod();
                }

                public bool IsSetUnderlyingDividendAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingDividendAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingDividendNegativeRateTreatment UnderlyingDividendNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val = new QuickFix.Fields.UnderlyingDividendNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    this.UnderlyingDividendNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingDividendNegativeRateTreatment Get(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendNegativeRateTreatment val)
                {
                    return IsSetUnderlyingDividendNegativeRateTreatment();
                }

                public bool IsSetUnderlyingDividendNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingDividendNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualFixedRate UnderlyingDividendAccrualFixedRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualFixedRate val = new QuickFix.Fields.UnderlyingDividendAccrualFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    this.UnderlyingDividendAccrualFixedRate = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualFixedRate Get(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualFixedRate val)
                {
                    return IsSetUnderlyingDividendAccrualFixedRate();
                }

                public bool IsSetUnderlyingDividendAccrualFixedRate()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualFixedRate);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo UnderlyingDividendAccrualPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    this.UnderlyingDividendAccrualPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod UnderlyingDividendAccrualPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit UnderlyingDividendAccrualPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType UnderlyingDividendAccrualPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    this.UnderlyingDividendAccrualPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted UnderlyingDividendAccrualPaymentDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    this.UnderlyingDividendAccrualPaymentDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateUnadjusted val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateUnadjusted();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention UnderlyingDividendAccrualPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingDividendAccrualPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters NoUnderlyingDividendAccrualPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingDividendAccrualPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDividendAccrualPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingDividendAccrualPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingDividendAccrualPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted UnderlyingDividendAccrualPaymentDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    this.UnderlyingDividendAccrualPaymentDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateAdjusted val)
                {
                    return IsSetUnderlyingDividendAccrualPaymentDateAdjusted();
                }

                public bool IsSetUnderlyingDividendAccrualPaymentDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingDividendCompoundingMethod UnderlyingDividendCompoundingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCompoundingMethod val = new QuickFix.Fields.UnderlyingDividendCompoundingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    this.UnderlyingDividendCompoundingMethod = val;
                }

                public QuickFix.Fields.UnderlyingDividendCompoundingMethod Get(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCompoundingMethod val)
                {
                    return IsSetUnderlyingDividendCompoundingMethod();
                }

                public bool IsSetUnderlyingDividendCompoundingMethod()
                {
                    return IsSetField(Tags.UnderlyingDividendCompoundingMethod);
                }
                public QuickFix.Fields.UnderlyingDividendNumOfIndexUnits UnderlyingDividendNumOfIndexUnits
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val = new QuickFix.Fields.UnderlyingDividendNumOfIndexUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    this.UnderlyingDividendNumOfIndexUnits = val;
                }

                public QuickFix.Fields.UnderlyingDividendNumOfIndexUnits Get(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendNumOfIndexUnits val)
                {
                    return IsSetUnderlyingDividendNumOfIndexUnits();
                }

                public bool IsSetUnderlyingDividendNumOfIndexUnits()
                {
                    return IsSetField(Tags.UnderlyingDividendNumOfIndexUnits);
                }
                public QuickFix.Fields.UnderlyingDividendCashPercentage UnderlyingDividendCashPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCashPercentage val = new QuickFix.Fields.UnderlyingDividendCashPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    this.UnderlyingDividendCashPercentage = val;
                }

                public QuickFix.Fields.UnderlyingDividendCashPercentage Get(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCashPercentage val)
                {
                    return IsSetUnderlyingDividendCashPercentage();
                }

                public bool IsSetUnderlyingDividendCashPercentage()
                {
                    return IsSetField(Tags.UnderlyingDividendCashPercentage);
                }
                public QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage UnderlyingDividendCashEquivalentPercentage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val = new QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    this.UnderlyingDividendCashEquivalentPercentage = val;
                }

                public QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage Get(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendCashEquivalentPercentage val)
                {
                    return IsSetUnderlyingDividendCashEquivalentPercentage();
                }

                public bool IsSetUnderlyingDividendCashEquivalentPercentage()
                {
                    return IsSetField(Tags.UnderlyingDividendCashEquivalentPercentage);
                }
                public QuickFix.Fields.UnderlyingNonCashDividendTreatment UnderlyingNonCashDividendTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingNonCashDividendTreatment val = new QuickFix.Fields.UnderlyingNonCashDividendTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    this.UnderlyingNonCashDividendTreatment = val;
                }

                public QuickFix.Fields.UnderlyingNonCashDividendTreatment Get(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingNonCashDividendTreatment val)
                {
                    return IsSetUnderlyingNonCashDividendTreatment();
                }

                public bool IsSetUnderlyingNonCashDividendTreatment()
                {
                    return IsSetField(Tags.UnderlyingNonCashDividendTreatment);
                }
                public QuickFix.Fields.UnderlyingDividendComposition UnderlyingDividendComposition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendComposition val = new QuickFix.Fields.UnderlyingDividendComposition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    this.UnderlyingDividendComposition = val;
                }

                public QuickFix.Fields.UnderlyingDividendComposition Get(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendComposition val)
                {
                    return IsSetUnderlyingDividendComposition();
                }

                public bool IsSetUnderlyingDividendComposition()
                {
                    return IsSetField(Tags.UnderlyingDividendComposition);
                }
                public QuickFix.Fields.UnderlyingSpecialDividendsIndicator UnderlyingSpecialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSpecialDividendsIndicator val = new QuickFix.Fields.UnderlyingSpecialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    this.UnderlyingSpecialDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingSpecialDividendsIndicator Get(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSpecialDividendsIndicator val)
                {
                    return IsSetUnderlyingSpecialDividendsIndicator();
                }

                public bool IsSetUnderlyingSpecialDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingSpecialDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingMaterialDividendsIndicator UnderlyingMaterialDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMaterialDividendsIndicator val = new QuickFix.Fields.UnderlyingMaterialDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    this.UnderlyingMaterialDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingMaterialDividendsIndicator Get(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMaterialDividendsIndicator val)
                {
                    return IsSetUnderlyingMaterialDividendsIndicator();
                }

                public bool IsSetUnderlyingMaterialDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingMaterialDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator UnderlyingOptionsExchangeDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val = new QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    this.UnderlyingOptionsExchangeDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator Get(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionsExchangeDividendsIndicator val)
                {
                    return IsSetUnderlyingOptionsExchangeDividendsIndicator();
                }

                public bool IsSetUnderlyingOptionsExchangeDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingOptionsExchangeDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingAdditionalDividendsIndicator UnderlyingAdditionalDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val = new QuickFix.Fields.UnderlyingAdditionalDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    this.UnderlyingAdditionalDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalDividendsIndicator Get(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalDividendsIndicator val)
                {
                    return IsSetUnderlyingAdditionalDividendsIndicator();
                }

                public bool IsSetUnderlyingAdditionalDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingAllDividendsIndicator UnderlyingAllDividendsIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAllDividendsIndicator val = new QuickFix.Fields.UnderlyingAllDividendsIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    this.UnderlyingAllDividendsIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAllDividendsIndicator Get(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAllDividendsIndicator val)
                {
                    return IsSetUnderlyingAllDividendsIndicator();
                }

                public bool IsSetUnderlyingAllDividendsIndicator()
                {
                    return IsSetField(Tags.UnderlyingAllDividendsIndicator);
                }
                public QuickFix.Fields.UnderlyingReturnRateNotionalReset UnderlyingReturnRateNotionalReset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingReturnRateNotionalReset val = new QuickFix.Fields.UnderlyingReturnRateNotionalReset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    this.UnderlyingReturnRateNotionalReset = val;
                }

                public QuickFix.Fields.UnderlyingReturnRateNotionalReset Get(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingReturnRateNotionalReset val)
                {
                    return IsSetUnderlyingReturnRateNotionalReset();
                }

                public bool IsSetUnderlyingReturnRateNotionalReset()
                {
                    return IsSetField(Tags.UnderlyingReturnRateNotionalReset);
                }
                public QuickFix.Fields.NoUnderlyingReturnRates NoUnderlyingReturnRates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingReturnRates val = new QuickFix.Fields.NoUnderlyingReturnRates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    this.NoUnderlyingReturnRates = val;
                }

                public QuickFix.Fields.NoUnderlyingReturnRates Get(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRates val)
                {
                    return IsSetNoUnderlyingReturnRates();
                }

                public bool IsSetNoUnderlyingReturnRates()
                {
                    return IsSetField(Tags.NoUnderlyingReturnRates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel UnderlyingPaymentStreamLinkInitialLevel
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val = new QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    this.UnderlyingPaymentStreamLinkInitialLevel = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel Get(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkInitialLevel val)
                {
                    return IsSetUnderlyingPaymentStreamLinkInitialLevel();
                }

                public bool IsSetUnderlyingPaymentStreamLinkInitialLevel()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkInitialLevel);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator UnderlyingPaymentStreamLinkClosingLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    this.UnderlyingPaymentStreamLinkClosingLevelIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkClosingLevelIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamLinkClosingLevelIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamLinkClosingLevelIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator UnderlyingPaymentStreamLinkExpiringLevelIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    this.UnderlyingPaymentStreamLinkExpiringLevelIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkExpiringLevelIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamLinkExpiringLevelIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamLinkExpiringLevelIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays UnderlyingPaymentStreamLinkEstimatedTradingDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val = new QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    this.UnderlyingPaymentStreamLinkEstimatedTradingDays = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays Get(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkEstimatedTradingDays val)
                {
                    return IsSetUnderlyingPaymentStreamLinkEstimatedTradingDays();
                }

                public bool IsSetUnderlyingPaymentStreamLinkEstimatedTradingDays()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice UnderlyingPaymentStreamLinkStrikePrice
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val = new QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    this.UnderlyingPaymentStreamLinkStrikePrice = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice Get(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePrice val)
                {
                    return IsSetUnderlyingPaymentStreamLinkStrikePrice();
                }

                public bool IsSetUnderlyingPaymentStreamLinkStrikePrice()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkStrikePrice);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType UnderlyingPaymentStreamLinkStrikePriceType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val = new QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    this.UnderlyingPaymentStreamLinkStrikePriceType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType Get(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkStrikePriceType val)
                {
                    return IsSetUnderlyingPaymentStreamLinkStrikePriceType();
                }

                public bool IsSetUnderlyingPaymentStreamLinkStrikePriceType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkStrikePriceType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary UnderlyingPaymentStreamLinkMaximumBoundary
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val = new QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    this.UnderlyingPaymentStreamLinkMaximumBoundary = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary Get(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkMaximumBoundary val)
                {
                    return IsSetUnderlyingPaymentStreamLinkMaximumBoundary();
                }

                public bool IsSetUnderlyingPaymentStreamLinkMaximumBoundary()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkMaximumBoundary);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary UnderlyingPaymentStreamLinkMinimumBoundary
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val = new QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    this.UnderlyingPaymentStreamLinkMinimumBoundary = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary Get(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkMinimumBoundary val)
                {
                    return IsSetUnderlyingPaymentStreamLinkMinimumBoundary();
                }

                public bool IsSetUnderlyingPaymentStreamLinkMinimumBoundary()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkMinimumBoundary);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries UnderlyingPaymentStreamLinkNumberOfDataSeries
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val = new QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    this.UnderlyingPaymentStreamLinkNumberOfDataSeries = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries Get(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamLinkNumberOfDataSeries val)
                {
                    return IsSetUnderlyingPaymentStreamLinkNumberOfDataSeries();
                }

                public bool IsSetUnderlyingPaymentStreamLinkNumberOfDataSeries()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap UnderlyingPaymentStreamVarianceUnadjustedCap
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val = new QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    this.UnderlyingPaymentStreamVarianceUnadjustedCap = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap Get(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamVarianceUnadjustedCap val)
                {
                    return IsSetUnderlyingPaymentStreamVarianceUnadjustedCap();
                }

                public bool IsSetUnderlyingPaymentStreamVarianceUnadjustedCap()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamVarianceUnadjustedCap);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod UnderlyingPaymentStreamRealizedVarianceMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val = new QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    this.UnderlyingPaymentStreamRealizedVarianceMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod Get(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRealizedVarianceMethod val)
                {
                    return IsSetUnderlyingPaymentStreamRealizedVarianceMethod();
                }

                public bool IsSetUnderlyingPaymentStreamRealizedVarianceMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRealizedVarianceMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator UnderlyingPaymentStreamDaysAdjustmentIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    this.UnderlyingPaymentStreamDaysAdjustmentIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamDaysAdjustmentIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamDaysAdjustmentIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamDaysAdjustmentIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID UnderlyingPaymentStreamNearestExchangeContractRefID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val = new QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    this.UnderlyingPaymentStreamNearestExchangeContractRefID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID Get(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNearestExchangeContractRefID val)
                {
                    return IsSetUnderlyingPaymentStreamNearestExchangeContractRefID();
                }

                public bool IsSetUnderlyingPaymentStreamNearestExchangeContractRefID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNearestExchangeContractRefID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount UnderlyingPaymentStreamVegaNotionalAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val = new QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    this.UnderlyingPaymentStreamVegaNotionalAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount Get(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamVegaNotionalAmount val)
                {
                    return IsSetUnderlyingPaymentStreamVegaNotionalAmount();
                }

                public bool IsSetUnderlyingPaymentStreamVegaNotionalAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamVegaNotionalAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexID UnderlyingPaymentStreamRateIndexID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    this.UnderlyingPaymentStreamRateIndexID = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexID Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexID val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexID();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexID()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexID);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource UnderlyingPaymentStreamRateIndexIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val = new QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    this.UnderlyingPaymentStreamRateIndexIDSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource Get(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamRateIndexIDSource val)
                {
                    return IsSetUnderlyingPaymentStreamRateIndexIDSource();
                }

                public bool IsSetUnderlyingPaymentStreamRateIndexIDSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamRateIndexIDSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency UnderlyingPaymentStreamNonDeliverableRefCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableRefCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableRefCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableRefCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableRefCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource UnderlyingPaymentStreamNonDeliverableSettlRateSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableSettlRateSource = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlRateSource val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableSettlRateSource();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableSettlRateSource()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage UnderlyingPaymentStreamNonDeliverableSettlReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    this.UnderlyingPaymentStreamNonDeliverableSettlReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableSettlReferencePage val)
                {
                    return IsSetUnderlyingPaymentStreamNonDeliverableSettlReferencePage();
                }

                public bool IsSetUnderlyingPaymentStreamNonDeliverableSettlReferencePage()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage);
                }
                public QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates NoUnderlyingNonDeliverableFixingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val = new QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    this.NoUnderlyingNonDeliverableFixingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates Get(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingNonDeliverableFixingDates val)
                {
                    return IsSetNoUnderlyingNonDeliverableFixingDates();
                }

                public bool IsSetNoUnderlyingNonDeliverableFixingDates()
                {
                    return IsSetField(Tags.NoUnderlyingNonDeliverableFixingDates);
                }
                public QuickFix.Fields.NoUnderlyingSettlRateFallbacks NoUnderlyingSettlRateFallbacks
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingSettlRateFallbacks val = new QuickFix.Fields.NoUnderlyingSettlRateFallbacks();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    this.NoUnderlyingSettlRateFallbacks = val;
                }

                public QuickFix.Fields.NoUnderlyingSettlRateFallbacks Get(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingSettlRateFallbacks val)
                {
                    return IsSetNoUnderlyingSettlRateFallbacks();
                }

                public bool IsSetNoUnderlyingSettlRateFallbacks()
                {
                    return IsSetField(Tags.NoUnderlyingSettlRateFallbacks);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator UnderlyingPaymentStreamFlatRateIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    this.UnderlyingPaymentStreamFlatRateIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount UnderlyingPaymentStreamFlatRateAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    this.UnderlyingPaymentStreamFlatRateAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateAmount val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateAmount();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency UnderlyingPaymentStreamFlatRateCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    this.UnderlyingPaymentStreamFlatRateCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFlatRateCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamFlatRateCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamFlatRateCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamFlatRateCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount UnderlyingPaymentStreamMaximumPaymentAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    this.UnderlyingPaymentStreamMaximumPaymentAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentAmount val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumPaymentAmount();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumPaymentAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumPaymentAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency UnderlyingPaymentStreamMaximumPaymentCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    this.UnderlyingPaymentStreamMaximumPaymentCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumPaymentCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumPaymentCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumPaymentCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumPaymentCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount UnderlyingPaymentStreamMaximumTransactionAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    this.UnderlyingPaymentStreamMaximumTransactionAmount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionAmount val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumTransactionAmount();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumTransactionAmount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumTransactionAmount);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency UnderlyingPaymentStreamMaximumTransactionCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val = new QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    this.UnderlyingPaymentStreamMaximumTransactionCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency Get(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamMaximumTransactionCurrency val)
                {
                    return IsSetUnderlyingPaymentStreamMaximumTransactionCurrency();
                }

                public bool IsSetUnderlyingPaymentStreamMaximumTransactionCurrency()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamMaximumTransactionCurrency);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator UnderlyingPaymentStreamCashSettlIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val = new QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    this.UnderlyingPaymentStreamCashSettlIndicator = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator Get(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCashSettlIndicator val)
                {
                    return IsSetUnderlyingPaymentStreamCashSettlIndicator();
                }

                public bool IsSetUnderlyingPaymentStreamCashSettlIndicator()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCashSettlIndicator);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef UnderlyingPaymentStreamCompoundingXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    this.UnderlyingPaymentStreamCompoundingXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingXIDRef val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingXIDRef();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingXIDRef()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingXIDRef);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread UnderlyingPaymentStreamCompoundingSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    this.UnderlyingPaymentStreamCompoundingSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingSpread val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingSpread();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod UnderlyingPaymentStreamInterpolationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val = new QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    this.UnderlyingPaymentStreamInterpolationMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod Get(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterpolationMethod val)
                {
                    return IsSetUnderlyingPaymentStreamInterpolationMethod();
                }

                public bool IsSetUnderlyingPaymentStreamInterpolationMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterpolationMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod UnderlyingPaymentStreamInterpolationPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    this.UnderlyingPaymentStreamInterpolationPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInterpolationPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamInterpolationPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamInterpolationPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamInterpolationPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate UnderlyingPaymentStreamCompoundingFixedRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingFixedRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFixedRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFixedRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFixedRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFixedRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex UnderlyingPaymentStreamCompoundingRateIndex
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndex = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndex val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndex();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndex()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndex);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndexCurvePeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndexCurvePeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit UnderlyingPaymentStreamCompoundingRateIndexCurveUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateIndexCurveUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateIndexCurveUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier UnderlyingPaymentStreamCompoundingRateMultiplier
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateMultiplier = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateMultiplier val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateMultiplier();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateMultiplier()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateMultiplier);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread UnderlyingPaymentStreamCompoundingRateSpread
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateSpread = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpread val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateSpread();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateSpread()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateSpread);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType UnderlyingPaymentStreamCompoundingRateSpreadPositionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateSpreadPositionType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateSpreadPositionType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateSpreadPositionType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateSpreadPositionType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment UnderlyingPaymentStreamCompoundingRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    this.UnderlyingPaymentStreamCompoundingRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate UnderlyingPaymentStreamCompoundingCapRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide UnderlyingPaymentStreamCompoundingCapRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide UnderlyingPaymentStreamCompoundingCapRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCompoundingCapRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingCapRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingCapRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingCapRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate UnderlyingPaymentStreamCompoundingFloorRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide UnderlyingPaymentStreamCompoundingFloorRateBuySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRateBuySide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateBuySide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRateBuySide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRateBuySide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide UnderlyingPaymentStreamCompoundingFloorRateSellSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    this.UnderlyingPaymentStreamCompoundingFloorRateSellSide = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFloorRateSellSide val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFloorRateSellSide();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFloorRateSellSide()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate UnderlyingPaymentStreamCompoundingInitialRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    this.UnderlyingPaymentStreamCompoundingInitialRate = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingInitialRate val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingInitialRate();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingInitialRate()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingInitialRate);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    this.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFinalRateRoundingDirection();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFinalRateRoundingDirection()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision UnderlyingPaymentStreamCompoundingFinalRatePrecision
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    this.UnderlyingPaymentStreamCompoundingFinalRatePrecision = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFinalRatePrecision val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFinalRatePrecision();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFinalRatePrecision()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod UnderlyingPaymentStreamCompoundingAveragingMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    this.UnderlyingPaymentStreamCompoundingAveragingMethod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingAveragingMethod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingAveragingMethod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingAveragingMethod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingAveragingMethod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment UnderlyingPaymentStreamCompoundingNegativeRateTreatment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    this.UnderlyingPaymentStreamCompoundingNegativeRateTreatment = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingNegativeRateTreatment val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingNegativeRateTreatment();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingNegativeRateTreatment()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesBusinessDayConvention();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    this.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters val)
                {
                    return IsSetNoUnderlyingPaymentStreamCompoundingDatesBusinessCenters();
                }

                public bool IsSetNoUnderlyingPaymentStreamCompoundingDatesBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates NoUnderlyingPaymentStreamCompoundingDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val = new QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    this.NoUnderlyingPaymentStreamCompoundingDates = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates Get(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStreamCompoundingDates val)
                {
                    return IsSetNoUnderlyingPaymentStreamCompoundingDates();
                }

                public bool IsSetNoUnderlyingPaymentStreamCompoundingDates()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStreamCompoundingDates);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo UnderlyingPaymentStreamCompoundingDatesRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod UnderlyingPaymentStreamCompoundingDatesOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit UnderlyingPaymentStreamCompoundingDatesOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType UnderlyingPaymentStreamCompoundingDatesOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingDatesOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingDatesOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingDatesOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip UnderlyingPaymentStreamCompoundingPeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    this.UnderlyingPaymentStreamCompoundingPeriodSkip = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingPeriodSkip val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingPeriodSkip();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingPeriodSkip()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingPeriodSkip);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted UnderlyingPaymentStreamCompoundingStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo UnderlyingPaymentStreamCompoundingStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit UnderlyingPaymentStreamCompoundingStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType UnderlyingPaymentStreamCompoundingStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted UnderlyingPaymentStreamCompoundingStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingStartDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingStartDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted UnderlyingPaymentStreamCompoundingEndDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo UnderlyingPaymentStreamCompoundingEndDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateRelativeTo val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateRelativeTo();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit UnderlyingPaymentStreamCompoundingEndDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType UnderlyingPaymentStreamCompoundingEndDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetDayType();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted UnderlyingPaymentStreamCompoundingEndDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    this.UnderlyingPaymentStreamCompoundingEndDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingEndDateAdjusted val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingEndDateAdjusted();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingEndDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod UnderlyingPaymentStreamCompoundingFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    this.UnderlyingPaymentStreamCompoundingFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyPeriod val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFrequencyPeriod();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit UnderlyingPaymentStreamCompoundingFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    this.UnderlyingPaymentStreamCompoundingFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingFrequencyUnit val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingFrequencyUnit();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention UnderlyingPaymentStreamCompoundingRollConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    this.UnderlyingPaymentStreamCompoundingRollConvention = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingRollConvention val)
                {
                    return IsSetUnderlyingPaymentStreamCompoundingRollConvention();
                }

                public bool IsSetUnderlyingPaymentStreamCompoundingRollConvention()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamCompoundingRollConvention);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted UnderlyingPaymentStreamBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamBoundsFirstDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamBoundsFirstDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted UnderlyingPaymentStreamBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    this.UnderlyingPaymentStreamBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamBoundsLastDateUnadjusted val)
                {
                    return IsSetUnderlyingPaymentStreamBoundsLastDateUnadjusted();
                }

                public bool IsSetUnderlyingPaymentStreamBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount UnderlyingPaymentStreamOtherDayCount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val = new QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    this.UnderlyingPaymentStreamOtherDayCount = val;
                }

                public QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount Get(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamOtherDayCount val)
                {
                    return IsSetUnderlyingPaymentStreamOtherDayCount();
                }

                public bool IsSetUnderlyingPaymentStreamOtherDayCount()
                {
                    return IsSetField(Tags.UnderlyingPaymentStreamOtherDayCount);
                }
                public QuickFix.Fields.NoUnderlyingPaymentSchedules NoUnderlyingPaymentSchedules
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentSchedules val = new QuickFix.Fields.NoUnderlyingPaymentSchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    this.NoUnderlyingPaymentSchedules = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentSchedules Get(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentSchedules val)
                {
                    return IsSetNoUnderlyingPaymentSchedules();
                }

                public bool IsSetNoUnderlyingPaymentSchedules()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentSchedules);
                }
                public QuickFix.Fields.NoUnderlyingPaymentStubs NoUnderlyingPaymentStubs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPaymentStubs val = new QuickFix.Fields.NoUnderlyingPaymentStubs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    this.NoUnderlyingPaymentStubs = val;
                }

                public QuickFix.Fields.NoUnderlyingPaymentStubs Get(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubs val)
                {
                    return IsSetNoUnderlyingPaymentStubs();
                }

                public bool IsSetNoUnderlyingPaymentStubs()
                {
                    return IsSetField(Tags.NoUnderlyingPaymentStubs);
                }
                public QuickFix.Fields.UnderlyingStreamText UnderlyingStreamText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamText val = new QuickFix.Fields.UnderlyingStreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamText val)
                {
                    this.UnderlyingStreamText = val;
                }

                public QuickFix.Fields.UnderlyingStreamText Get(QuickFix.Fields.UnderlyingStreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamText val)
                {
                    return IsSetUnderlyingStreamText();
                }

                public bool IsSetUnderlyingStreamText()
                {
                    return IsSetField(Tags.UnderlyingStreamText);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamTextLen EncodedUnderlyingStreamTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamTextLen val = new QuickFix.Fields.EncodedUnderlyingStreamTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    this.EncodedUnderlyingStreamTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamTextLen Get(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamTextLen val)
                {
                    return IsSetEncodedUnderlyingStreamTextLen();
                }

                public bool IsSetEncodedUnderlyingStreamTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamText EncodedUnderlyingStreamText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamText val = new QuickFix.Fields.EncodedUnderlyingStreamText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    this.EncodedUnderlyingStreamText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamText Get(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamText val)
                {
                    return IsSetEncodedUnderlyingStreamText();
                }

                public bool IsSetEncodedUnderlyingStreamText()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamText);
                }
                public QuickFix.Fields.UnderlyingStreamXID UnderlyingStreamXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamXID val = new QuickFix.Fields.UnderlyingStreamXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    this.UnderlyingStreamXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamXID Get(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamXID val)
                {
                    return IsSetUnderlyingStreamXID();
                }

                public bool IsSetUnderlyingStreamXID()
                {
                    return IsSetField(Tags.UnderlyingStreamXID);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalXIDRef UnderlyingStreamNotionalXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalXIDRef val = new QuickFix.Fields.UnderlyingStreamNotionalXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    this.UnderlyingStreamNotionalXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalXIDRef Get(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalXIDRef val)
                {
                    return IsSetUnderlyingStreamNotionalXIDRef();
                }

                public bool IsSetUnderlyingStreamNotionalXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalXIDRef);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod UnderlyingStreamNotionalFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    this.UnderlyingStreamNotionalFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalFrequencyPeriod val)
                {
                    return IsSetUnderlyingStreamNotionalFrequencyPeriod();
                }

                public bool IsSetUnderlyingStreamNotionalFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit UnderlyingStreamNotionalFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    this.UnderlyingStreamNotionalFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalFrequencyUnit val)
                {
                    return IsSetUnderlyingStreamNotionalFrequencyUnit();
                }

                public bool IsSetUnderlyingStreamNotionalFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency UnderlyingStreamNotionalCommodityFrequency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val = new QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    this.UnderlyingStreamNotionalCommodityFrequency = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency Get(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalCommodityFrequency val)
                {
                    return IsSetUnderlyingStreamNotionalCommodityFrequency();
                }

                public bool IsSetUnderlyingStreamNotionalCommodityFrequency()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalCommodityFrequency);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure UnderlyingStreamNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    this.UnderlyingStreamNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamNotionalUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamTotalNotional UnderlyingStreamTotalNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTotalNotional val = new QuickFix.Fields.UnderlyingStreamTotalNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    this.UnderlyingStreamTotalNotional = val;
                }

                public QuickFix.Fields.UnderlyingStreamTotalNotional Get(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTotalNotional val)
                {
                    return IsSetUnderlyingStreamTotalNotional();
                }

                public bool IsSetUnderlyingStreamTotalNotional()
                {
                    return IsSetField(Tags.UnderlyingStreamTotalNotional);
                }
                public QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure UnderlyingStreamTotalNotionalUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    this.UnderlyingStreamTotalNotionalUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamTotalNotionalUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamTotalNotionalUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamTotalNotionalUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamTotalNotionalUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityBase UnderlyingStreamCommodityBase
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityBase val = new QuickFix.Fields.UnderlyingStreamCommodityBase();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    this.UnderlyingStreamCommodityBase = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityBase Get(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityBase val)
                {
                    return IsSetUnderlyingStreamCommodityBase();
                }

                public bool IsSetUnderlyingStreamCommodityBase()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityBase);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityType UnderlyingStreamCommodityType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityType val = new QuickFix.Fields.UnderlyingStreamCommodityType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    this.UnderlyingStreamCommodityType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityType Get(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityType val)
                {
                    return IsSetUnderlyingStreamCommodityType();
                }

                public bool IsSetUnderlyingStreamCommodityType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityType);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySecurityID UnderlyingStreamCommoditySecurityID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySecurityID val = new QuickFix.Fields.UnderlyingStreamCommoditySecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    this.UnderlyingStreamCommoditySecurityID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySecurityID Get(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySecurityID val)
                {
                    return IsSetUnderlyingStreamCommoditySecurityID();
                }

                public bool IsSetUnderlyingStreamCommoditySecurityID()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySecurityID);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource UnderlyingStreamCommoditySecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val = new QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    this.UnderlyingStreamCommoditySecurityIDSource = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource Get(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySecurityIDSource val)
                {
                    return IsSetUnderlyingStreamCommoditySecurityIDSource();
                }

                public bool IsSetUnderlyingStreamCommoditySecurityIDSource()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySecurityIDSource);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs NoUnderlyingStreamCommodityAltIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val = new QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    this.NoUnderlyingStreamCommodityAltIDs = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs Get(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommodityAltIDs val)
                {
                    return IsSetNoUnderlyingStreamCommodityAltIDs();
                }

                public bool IsSetNoUnderlyingStreamCommodityAltIDs()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommodityAltIDs);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityDesc UnderlyingStreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityDesc val = new QuickFix.Fields.UnderlyingStreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    this.UnderlyingStreamCommodityDesc = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityDesc Get(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDesc val)
                {
                    return IsSetUnderlyingStreamCommodityDesc();
                }

                public bool IsSetUnderlyingStreamCommodityDesc()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityDesc);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen EncodedUnderlyingStreamCommodityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val = new QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    this.EncodedUnderlyingStreamCommodityDescLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen Get(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamCommodityDescLen val)
                {
                    return IsSetEncodedUnderlyingStreamCommodityDescLen();
                }

                public bool IsSetEncodedUnderlyingStreamCommodityDescLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamCommodityDescLen);
                }
                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc EncodedUnderlyingStreamCommodityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val = new QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    this.EncodedUnderlyingStreamCommodityDesc = val;
                }

                public QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc Get(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingStreamCommodityDesc val)
                {
                    return IsSetEncodedUnderlyingStreamCommodityDesc();
                }

                public bool IsSetEncodedUnderlyingStreamCommodityDesc()
                {
                    return IsSetField(Tags.EncodedUnderlyingStreamCommodityDesc);
                }
                public QuickFix.Fields.NoUnderlyingStreamAssetAttributes NoUnderlyingStreamAssetAttributes
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamAssetAttributes val = new QuickFix.Fields.NoUnderlyingStreamAssetAttributes();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    this.NoUnderlyingStreamAssetAttributes = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamAssetAttributes Get(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamAssetAttributes val)
                {
                    return IsSetNoUnderlyingStreamAssetAttributes();
                }

                public bool IsSetNoUnderlyingStreamAssetAttributes()
                {
                    return IsSetField(Tags.NoUnderlyingStreamAssetAttributes);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure UnderlyingStreamCommodityUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    this.UnderlyingStreamCommodityUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityUnitOfMeasure val)
                {
                    return IsSetUnderlyingStreamCommodityUnitOfMeasure();
                }

                public bool IsSetUnderlyingStreamCommodityUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityCurrency UnderlyingStreamCommodityCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityCurrency val = new QuickFix.Fields.UnderlyingStreamCommodityCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    this.UnderlyingStreamCommodityCurrency = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityCurrency Get(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityCurrency val)
                {
                    return IsSetUnderlyingStreamCommodityCurrency();
                }

                public bool IsSetUnderlyingStreamCommodityCurrency()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityCurrency);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityExchange UnderlyingStreamCommodityExchange
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityExchange val = new QuickFix.Fields.UnderlyingStreamCommodityExchange();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    this.UnderlyingStreamCommodityExchange = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityExchange Get(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityExchange val)
                {
                    return IsSetUnderlyingStreamCommodityExchange();
                }

                public bool IsSetUnderlyingStreamCommodityExchange()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityExchange);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateSource UnderlyingStreamCommodityRateSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateSource val = new QuickFix.Fields.UnderlyingStreamCommodityRateSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    this.UnderlyingStreamCommodityRateSource = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateSource Get(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateSource val)
                {
                    return IsSetUnderlyingStreamCommodityRateSource();
                }

                public bool IsSetUnderlyingStreamCommodityRateSource()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateSource);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage UnderlyingStreamCommodityRateReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val = new QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    this.UnderlyingStreamCommodityRateReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage Get(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePage val)
                {
                    return IsSetUnderlyingStreamCommodityRateReferencePage();
                }

                public bool IsSetUnderlyingStreamCommodityRateReferencePage()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateReferencePage);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading UnderlyingStreamCommodityRateReferencePageHeading
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val = new QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    this.UnderlyingStreamCommodityRateReferencePageHeading = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading Get(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityRateReferencePageHeading val)
                {
                    return IsSetUnderlyingStreamCommodityRateReferencePageHeading();
                }

                public bool IsSetUnderlyingStreamCommodityRateReferencePageHeading()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityRateReferencePageHeading);
                }
                public QuickFix.Fields.UnderlyingStreamDataProvider UnderlyingStreamDataProvider
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamDataProvider val = new QuickFix.Fields.UnderlyingStreamDataProvider();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    this.UnderlyingStreamDataProvider = val;
                }

                public QuickFix.Fields.UnderlyingStreamDataProvider Get(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamDataProvider val)
                {
                    return IsSetUnderlyingStreamDataProvider();
                }

                public bool IsSetUnderlyingStreamDataProvider()
                {
                    return IsSetField(Tags.UnderlyingStreamDataProvider);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommodityDataSources NoUnderlyingStreamCommodityDataSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val = new QuickFix.Fields.NoUnderlyingStreamCommodityDataSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    this.NoUnderlyingStreamCommodityDataSources = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommodityDataSources Get(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommodityDataSources val)
                {
                    return IsSetNoUnderlyingStreamCommodityDataSources();
                }

                public bool IsSetNoUnderlyingStreamCommodityDataSources()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommodityDataSources);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityPricingType UnderlyingStreamCommodityPricingType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityPricingType val = new QuickFix.Fields.UnderlyingStreamCommodityPricingType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    this.UnderlyingStreamCommodityPricingType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityPricingType Get(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityPricingType val)
                {
                    return IsSetUnderlyingStreamCommodityPricingType();
                }

                public bool IsSetUnderlyingStreamCommodityPricingType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityPricingType);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod UnderlyingStreamCommodityNearbySettlDayPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val = new QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    this.UnderlyingStreamCommodityNearbySettlDayPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod Get(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayPeriod val)
                {
                    return IsSetUnderlyingStreamCommodityNearbySettlDayPeriod();
                }

                public bool IsSetUnderlyingStreamCommodityNearbySettlDayPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityNearbySettlDayPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit UnderlyingStreamCommodityNearbySettlDayUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val = new QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    this.UnderlyingStreamCommodityNearbySettlDayUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit Get(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityNearbySettlDayUnit val)
                {
                    return IsSetUnderlyingStreamCommodityNearbySettlDayUnit();
                }

                public bool IsSetUnderlyingStreamCommodityNearbySettlDayUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityNearbySettlDayUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted UnderlyingStreamCommoditySettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    this.UnderlyingStreamCommoditySettlDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateUnadjusted val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateUnadjusted();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention UnderlyingStreamCommoditySettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    this.UnderlyingStreamCommoditySettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters NoUnderlyingStreamCommoditySettlBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    this.NoUnderlyingStreamCommoditySettlBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlBusinessCenters val)
                {
                    return IsSetNoUnderlyingStreamCommoditySettlBusinessCenters();
                }

                public bool IsSetNoUnderlyingStreamCommoditySettlBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted UnderlyingStreamCommoditySettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    this.UnderlyingStreamCommoditySettlDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateAdjusted val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateAdjusted();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlMonth UnderlyingStreamCommoditySettlMonth
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val = new QuickFix.Fields.UnderlyingStreamCommoditySettlMonth();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    this.UnderlyingStreamCommoditySettlMonth = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlMonth Get(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlMonth val)
                {
                    return IsSetUnderlyingStreamCommoditySettlMonth();
                }

                public bool IsSetUnderlyingStreamCommoditySettlMonth()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlMonth);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod UnderlyingStreamCommoditySettlDateRollPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    this.UnderlyingStreamCommoditySettlDateRollPeriod = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollPeriod val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateRollPeriod();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateRollPeriod()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateRollPeriod);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit UnderlyingStreamCommoditySettlDateRollUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    this.UnderlyingStreamCommoditySettlDateRollUnit = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDateRollUnit val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDateRollUnit();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDateRollUnit()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDateRollUnit);
                }
                public QuickFix.Fields.UnderlyingStreamCommoditySettlDayType UnderlyingStreamCommoditySettlDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    this.UnderlyingStreamCommoditySettlDayType = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommoditySettlDayType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDayType val)
                {
                    return IsSetUnderlyingStreamCommoditySettlDayType();
                }

                public bool IsSetUnderlyingStreamCommoditySettlDayType()
                {
                    return IsSetField(Tags.UnderlyingStreamCommoditySettlDayType);
                }
                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods NoUnderlyingStreamCommoditySettlPeriods
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    this.NoUnderlyingStreamCommoditySettlPeriods = val;
                }

                public QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlPeriods val)
                {
                    return IsSetNoUnderlyingStreamCommoditySettlPeriods();
                }

                public bool IsSetNoUnderlyingStreamCommoditySettlPeriods()
                {
                    return IsSetField(Tags.NoUnderlyingStreamCommoditySettlPeriods);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityXID UnderlyingStreamCommodityXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityXID val = new QuickFix.Fields.UnderlyingStreamCommodityXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    this.UnderlyingStreamCommodityXID = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityXID Get(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityXID val)
                {
                    return IsSetUnderlyingStreamCommodityXID();
                }

                public bool IsSetUnderlyingStreamCommodityXID()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityXID);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityXIDRef UnderlyingStreamCommodityXIDRef
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityXIDRef val = new QuickFix.Fields.UnderlyingStreamCommodityXIDRef();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    this.UnderlyingStreamCommodityXIDRef = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityXIDRef Get(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityXIDRef val)
                {
                    return IsSetUnderlyingStreamCommodityXIDRef();
                }

                public bool IsSetUnderlyingStreamCommodityXIDRef()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityXIDRef);
                }
                public QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion UnderlyingStreamCommodityDeliveryPricingRegion
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val = new QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    this.UnderlyingStreamCommodityDeliveryPricingRegion = val;
                }

                public QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion Get(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDeliveryPricingRegion val)
                {
                    return IsSetUnderlyingStreamCommodityDeliveryPricingRegion();
                }

                public bool IsSetUnderlyingStreamCommodityDeliveryPricingRegion()
                {
                    return IsSetField(Tags.UnderlyingStreamCommodityDeliveryPricingRegion);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamType UnderlyingDeliveryStreamType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamType val = new QuickFix.Fields.UnderlyingDeliveryStreamType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    this.UnderlyingDeliveryStreamType = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamType Get(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamType val)
                {
                    return IsSetUnderlyingDeliveryStreamType();
                }

                public bool IsSetUnderlyingDeliveryStreamType()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamType);
                }
                public QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources NoUnderlyingDeliveryStreamCommoditySources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val = new QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    this.NoUnderlyingDeliveryStreamCommoditySources = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources Get(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryStreamCommoditySources val)
                {
                    return IsSetNoUnderlyingDeliveryStreamCommoditySources();
                }

                public bool IsSetNoUnderlyingDeliveryStreamCommoditySources()
                {
                    return IsSetField(Tags.NoUnderlyingDeliveryStreamCommoditySources);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamPipeline UnderlyingDeliveryStreamPipeline
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamPipeline val = new QuickFix.Fields.UnderlyingDeliveryStreamPipeline();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    this.UnderlyingDeliveryStreamPipeline = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamPipeline Get(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamPipeline val)
                {
                    return IsSetUnderlyingDeliveryStreamPipeline();
                }

                public bool IsSetUnderlyingDeliveryStreamPipeline()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamPipeline);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint UnderlyingDeliveryStreamEntryPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    this.UnderlyingDeliveryStreamEntryPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamEntryPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamEntryPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamEntryPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamEntryPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint UnderlyingDeliveryStreamWithdrawalPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    this.UnderlyingDeliveryStreamWithdrawalPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamWithdrawalPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamWithdrawalPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamWithdrawalPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamWithdrawalPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint UnderlyingDeliveryStreamDeliveryPoint
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPoint = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPoint val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPoint();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPoint()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPoint);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction UnderlyingDeliveryStreamDeliveryRestriction
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    this.UnderlyingDeliveryStreamDeliveryRestriction = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryRestriction val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryRestriction();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryRestriction()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryRestriction);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency UnderlyingDeliveryStreamDeliveryContingency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    this.UnderlyingDeliveryStreamDeliveryContingency = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingency val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryContingency();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryContingency()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryContingency);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide UnderlyingDeliveryStreamDeliveryContingentPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    this.UnderlyingDeliveryStreamDeliveryContingentPartySide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryContingentPartySide val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryContingentPartySide();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryContingentPartySide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator UnderlyingDeliveryStreamDeliverAtSourceIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    this.UnderlyingDeliveryStreamDeliverAtSourceIndicator = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliverAtSourceIndicator val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliverAtSourceIndicator();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliverAtSourceIndicator()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment UnderlyingDeliveryStreamRiskApportionment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val = new QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    this.UnderlyingDeliveryStreamRiskApportionment = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment Get(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionment val)
                {
                    return IsSetUnderlyingDeliveryStreamRiskApportionment();
                }

                public bool IsSetUnderlyingDeliveryStreamRiskApportionment()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRiskApportionment);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource UnderlyingDeliveryStreamRiskApportionmentSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val = new QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    this.UnderlyingDeliveryStreamRiskApportionmentSource = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource Get(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRiskApportionmentSource val)
                {
                    return IsSetUnderlyingDeliveryStreamRiskApportionmentSource();
                }

                public bool IsSetUnderlyingDeliveryStreamRiskApportionmentSource()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRiskApportionmentSource);
                }
                public QuickFix.Fields.NoUnderlyingDeliveryStreamCycles NoUnderlyingDeliveryStreamCycles
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val = new QuickFix.Fields.NoUnderlyingDeliveryStreamCycles();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    this.NoUnderlyingDeliveryStreamCycles = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliveryStreamCycles Get(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryStreamCycles val)
                {
                    return IsSetNoUnderlyingDeliveryStreamCycles();
                }

                public bool IsSetNoUnderlyingDeliveryStreamCycles()
                {
                    return IsSetField(Tags.NoUnderlyingDeliveryStreamCycles);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation UnderlyingDeliveryStreamTitleTransferLocation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val = new QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    this.UnderlyingDeliveryStreamTitleTransferLocation = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation Get(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferLocation val)
                {
                    return IsSetUnderlyingDeliveryStreamTitleTransferLocation();
                }

                public bool IsSetUnderlyingDeliveryStreamTitleTransferLocation()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTitleTransferLocation);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition UnderlyingDeliveryStreamTitleTransferCondition
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val = new QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    this.UnderlyingDeliveryStreamTitleTransferCondition = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition Get(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTitleTransferCondition val)
                {
                    return IsSetUnderlyingDeliveryStreamTitleTransferCondition();
                }

                public bool IsSetUnderlyingDeliveryStreamTitleTransferCondition()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTitleTransferCondition);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord UnderlyingDeliveryStreamImporterOfRecord
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val = new QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    this.UnderlyingDeliveryStreamImporterOfRecord = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord Get(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamImporterOfRecord val)
                {
                    return IsSetUnderlyingDeliveryStreamImporterOfRecord();
                }

                public bool IsSetUnderlyingDeliveryStreamImporterOfRecord()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamImporterOfRecord);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance UnderlyingDeliveryStreamNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    this.UnderlyingDeliveryStreamNegativeTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamNegativeTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamNegativeTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamNegativeTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamNegativeTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance UnderlyingDeliveryStreamPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    this.UnderlyingDeliveryStreamPositiveTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamPositiveTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamPositiveTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamPositiveTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamPositiveTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure UnderlyingDeliveryStreamToleranceUnitOfMeasure
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    this.UnderlyingDeliveryStreamToleranceUnitOfMeasure = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceUnitOfMeasure val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceUnitOfMeasure();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceUnitOfMeasure()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceType UnderlyingDeliveryStreamToleranceType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    this.UnderlyingDeliveryStreamToleranceType = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceType Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceType val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceType();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceType()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceType);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide UnderlyingDeliveryStreamToleranceOptionSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val = new QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    this.UnderlyingDeliveryStreamToleranceOptionSide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide Get(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamToleranceOptionSide val)
                {
                    return IsSetUnderlyingDeliveryStreamToleranceOptionSide();
                }

                public bool IsSetUnderlyingDeliveryStreamToleranceOptionSide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamToleranceOptionSide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance UnderlyingDeliveryStreamTotalPositiveTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    this.UnderlyingDeliveryStreamTotalPositiveTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTotalPositiveTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamTotalPositiveTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamTotalPositiveTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTotalPositiveTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance UnderlyingDeliveryStreamTotalNegativeTolerance
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    this.UnderlyingDeliveryStreamTotalNegativeTolerance = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTotalNegativeTolerance val)
                {
                    return IsSetUnderlyingDeliveryStreamTotalNegativeTolerance();
                }

                public bool IsSetUnderlyingDeliveryStreamTotalNegativeTolerance()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTotalNegativeTolerance);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor UnderlyingDeliveryStreamNotionalConversionFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val = new QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    this.UnderlyingDeliveryStreamNotionalConversionFactor = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor Get(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamNotionalConversionFactor val)
                {
                    return IsSetUnderlyingDeliveryStreamNotionalConversionFactor();
                }

                public bool IsSetUnderlyingDeliveryStreamNotionalConversionFactor()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamNotionalConversionFactor);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment UnderlyingDeliveryStreamTransportEquipment
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val = new QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    this.UnderlyingDeliveryStreamTransportEquipment = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment Get(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamTransportEquipment val)
                {
                    return IsSetUnderlyingDeliveryStreamTransportEquipment();
                }

                public bool IsSetUnderlyingDeliveryStreamTransportEquipment()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamTransportEquipment);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide UnderlyingDeliveryStreamElectingPartySide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val = new QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    this.UnderlyingDeliveryStreamElectingPartySide = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide Get(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamElectingPartySide val)
                {
                    return IsSetUnderlyingDeliveryStreamElectingPartySide();
                }

                public bool IsSetUnderlyingDeliveryStreamElectingPartySide()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamElectingPartySide);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource UnderlyingDeliveryStreamDeliveryPointSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPointSource = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointSource val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPointSource();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPointSource()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPointSource);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc UnderlyingDeliveryStreamDeliveryPointDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val = new QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    this.UnderlyingDeliveryStreamDeliveryPointDesc = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc Get(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamDeliveryPointDesc val)
                {
                    return IsSetUnderlyingDeliveryStreamDeliveryPointDesc();
                }

                public bool IsSetUnderlyingDeliveryStreamDeliveryPointDesc()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamDeliveryPointDesc);
                }
                public QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter UnderlyingDeliveryStreamRouteOrCharter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val = new QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    this.UnderlyingDeliveryStreamRouteOrCharter = val;
                }

                public QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter Get(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamRouteOrCharter val)
                {
                    return IsSetUnderlyingDeliveryStreamRouteOrCharter();
                }

                public bool IsSetUnderlyingDeliveryStreamRouteOrCharter()
                {
                    return IsSetField(Tags.UnderlyingDeliveryStreamRouteOrCharter);
                }
                public QuickFix.Fields.NoUnderlyingDeliverySchedules NoUnderlyingDeliverySchedules
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingDeliverySchedules val = new QuickFix.Fields.NoUnderlyingDeliverySchedules();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    this.NoUnderlyingDeliverySchedules = val;
                }

                public QuickFix.Fields.NoUnderlyingDeliverySchedules Get(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingDeliverySchedules val)
                {
                    return IsSetNoUnderlyingDeliverySchedules();
                }

                public bool IsSetNoUnderlyingDeliverySchedules()
                {
                    return IsSetField(Tags.NoUnderlyingDeliverySchedules);
                }
                public QuickFix.Fields.UnderlyingStreamVersion UnderlyingStreamVersion
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamVersion val = new QuickFix.Fields.UnderlyingStreamVersion();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    this.UnderlyingStreamVersion = val;
                }

                public QuickFix.Fields.UnderlyingStreamVersion Get(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamVersion val)
                {
                    return IsSetUnderlyingStreamVersion();
                }

                public bool IsSetUnderlyingStreamVersion()
                {
                    return IsSetField(Tags.UnderlyingStreamVersion);
                }
                public QuickFix.Fields.UnderlyingStreamVersionEffectiveDate UnderlyingStreamVersionEffectiveDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val = new QuickFix.Fields.UnderlyingStreamVersionEffectiveDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    this.UnderlyingStreamVersionEffectiveDate = val;
                }

                public QuickFix.Fields.UnderlyingStreamVersionEffectiveDate Get(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamVersionEffectiveDate val)
                {
                    return IsSetUnderlyingStreamVersionEffectiveDate();
                }

                public bool IsSetUnderlyingStreamVersionEffectiveDate()
                {
                    return IsSetField(Tags.UnderlyingStreamVersionEffectiveDate);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod UnderlyingStreamNotionalDeterminationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val = new QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    this.UnderlyingStreamNotionalDeterminationMethod = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod Get(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalDeterminationMethod val)
                {
                    return IsSetUnderlyingStreamNotionalDeterminationMethod();
                }

                public bool IsSetUnderlyingStreamNotionalDeterminationMethod()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalDeterminationMethod);
                }
                public QuickFix.Fields.UnderlyingStreamNotionalAdjustments UnderlyingStreamNotionalAdjustments
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingStreamNotionalAdjustments val = new QuickFix.Fields.UnderlyingStreamNotionalAdjustments();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    this.UnderlyingStreamNotionalAdjustments = val;
                }

                public QuickFix.Fields.UnderlyingStreamNotionalAdjustments Get(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingStreamNotionalAdjustments val)
                {
                    return IsSetUnderlyingStreamNotionalAdjustments();
                }

                public bool IsSetUnderlyingStreamNotionalAdjustments()
                {
                    return IsSetField(Tags.UnderlyingStreamNotionalAdjustments);
                }
                public class NoUnderlyingStreamEffectiveDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamEffectiveDateBusinessCenter, 0 };

                    public NoUnderlyingStreamEffectiveDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters, Tags.UnderlyingStreamEffectiveDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamEffectiveDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter UnderlyingStreamEffectiveDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        this.UnderlyingStreamEffectiveDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamEffectiveDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamEffectiveDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamEffectiveDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamEffectiveDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamTerminationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamTerminationDateBusinessCenter, 0 };

                    public NoUnderlyingStreamTerminationDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamTerminationDateBusinessCenters, Tags.UnderlyingStreamTerminationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamTerminationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter UnderlyingStreamTerminationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        this.UnderlyingStreamTerminationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamTerminationDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamTerminationDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamTerminationDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamTerminationDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCalculationPeriodBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCalculationPeriodBusinessCenter, 0 };

                    public NoUnderlyingStreamCalculationPeriodBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters, Tags.UnderlyingStreamCalculationPeriodBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCalculationPeriodBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter UnderlyingStreamCalculationPeriodBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        this.UnderlyingStreamCalculationPeriodBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter, 0 };

                    public NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters, Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamFirstPeriodStartDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter UnderlyingStreamFirstPeriodStartDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val = new QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        this.UnderlyingStreamFirstPeriodStartDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter Get(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamFirstPeriodStartDateBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamFirstPeriodStartDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamFirstPeriodStartDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCalculationPeriodDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCalculationPeriodDate, Tags.UnderlyingStreamCalculationPeriodDateType, 0 };

                    public NoUnderlyingStreamCalculationPeriodDatesGroup()
                      : base(Tags.NoUnderlyingStreamCalculationPeriodDates, Tags.UnderlyingStreamCalculationPeriodDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCalculationPeriodDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDate UnderlyingStreamCalculationPeriodDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        this.UnderlyingStreamCalculationPeriodDate = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDate Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDate val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodDate();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodDate()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodDate);
                    }
                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType UnderlyingStreamCalculationPeriodDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val = new QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        this.UnderlyingStreamCalculationPeriodDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType Get(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCalculationPeriodDateType val)
                    {
                        return IsSetUnderlyingStreamCalculationPeriodDateType();
                    }

                    public bool IsSetUnderlyingStreamCalculationPeriodDateType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCalculationPeriodDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters, Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter UnderlyingPaymentStreamPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPaymentDate, Tags.UnderlyingPaymentStreamPaymentDateType, 0 };

                    public NoUnderlyingPaymentStreamPaymentDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPaymentDates, Tags.UnderlyingPaymentStreamPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDate UnderlyingPaymentStreamPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        this.UnderlyingPaymentStreamPaymentDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDate Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDate val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType UnderlyingPaymentStreamPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val = new QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        this.UnderlyingPaymentStreamPaymentDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType Get(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPaymentDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamPaymentDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamPaymentDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPaymentDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamResetDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamResetDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamResetDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters, Tags.UnderlyingPaymentStreamResetDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamResetDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter UnderlyingPaymentStreamResetDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamResetDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamResetDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamResetDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamResetDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamResetDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamInitialFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter UnderlyingPaymentStreamInitialFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamInitialFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamInitialFixingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamInitialFixingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamInitialFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFixingDateBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters, Tags.UnderlyingPaymentStreamFixingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFixingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter UnderlyingPaymentStreamFixingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamFixingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFixingDate, Tags.UnderlyingPaymentStreamFixingDateType, 0 };

                    public NoUnderlyingPaymentStreamFixingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFixingDates, Tags.UnderlyingPaymentStreamFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDate UnderlyingPaymentStreamFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDate val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        this.UnderlyingPaymentStreamFixingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDate Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateType UnderlyingPaymentStreamFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        this.UnderlyingPaymentStreamFixingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFixingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFixingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamFixingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamFixingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFixingDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamPricingBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters, Tags.UnderlyingPaymentStreamPricingBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter UnderlyingPaymentStreamPricingBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamPricingBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingDaysGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingDayOfWeek, Tags.UnderlyingPaymentStreamPricingDayNumber, 0 };

                    public NoUnderlyingPaymentStreamPricingDaysGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingDays, Tags.UnderlyingPaymentStreamPricingDayOfWeek, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingDaysGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek UnderlyingPaymentStreamPricingDayOfWeek
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        this.UnderlyingPaymentStreamPricingDayOfWeek = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayOfWeek val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDayOfWeek();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDayOfWeek()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDayOfWeek);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber UnderlyingPaymentStreamPricingDayNumber
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        this.UnderlyingPaymentStreamPricingDayNumber = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDayNumber val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDayNumber();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDayNumber()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDayNumber);
                    }

                }
                public class NoUnderlyingPaymentStreamPricingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamPricingDate, Tags.UnderlyingPaymentStreamPricingDateType, 0 };

                    public NoUnderlyingPaymentStreamPricingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamPricingDates, Tags.UnderlyingPaymentStreamPricingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamPricingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDate UnderlyingPaymentStreamPricingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDate val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        this.UnderlyingPaymentStreamPricingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDate Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDateType UnderlyingPaymentStreamPricingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamPricingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        this.UnderlyingPaymentStreamPricingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamPricingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamPricingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamPricingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamPricingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamPricingDateType);
                    }

                }
                public class NoUnderlyingPaymentStreamFormulasGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamFormula, Tags.UnderlyingPaymentStreamFormulaDesc, Tags.UnderlyingPaymentStreamFormulaLength, 0 };

                    public NoUnderlyingPaymentStreamFormulasGroup()
                      : base(Tags.NoUnderlyingPaymentStreamFormulas, Tags.UnderlyingPaymentStreamFormula, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamFormulasGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormula UnderlyingPaymentStreamFormula
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormula val = new QuickFix.Fields.UnderlyingPaymentStreamFormula();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        this.UnderlyingPaymentStreamFormula = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormula Get(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormula val)
                    {
                        return IsSetUnderlyingPaymentStreamFormula();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormula()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormula);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc UnderlyingPaymentStreamFormulaDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        this.UnderlyingPaymentStreamFormulaDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaDesc val)
                    {
                        return IsSetUnderlyingPaymentStreamFormulaDesc();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormulaDesc()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormulaDesc);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaLength UnderlyingPaymentStreamFormulaLength
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val = new QuickFix.Fields.UnderlyingPaymentStreamFormulaLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        this.UnderlyingPaymentStreamFormulaLength = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamFormulaLength Get(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamFormulaLength val)
                    {
                        return IsSetUnderlyingPaymentStreamFormulaLength();
                    }

                    public bool IsSetUnderlyingPaymentStreamFormulaLength()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamFormulaLength);
                    }

                }
                public class NoUnderlyingDividendPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendPeriodSequence, Tags.UnderlyingDividendPeriodStartDateUnadjusted, Tags.UnderlyingDividendPeriodEndDateUnadjusted, Tags.UnderlyingDividendPeriodUnderlierRefID, Tags.UnderlyingDividendPeriodStrikePrice, Tags.UnderlyingDividendPeriodBusinessDayConvention, Tags.NoUnderlyingDividendPeriodBusinessCenters, Tags.UnderlyingDividendPeriodValuationDateUnadjusted, Tags.UnderlyingDividendPeriodValuationDateRelativeTo, Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod, Tags.UnderlyingDividendPeriodValuationDateOffsetUnit, Tags.UnderlyingDividendPeriodValuationDateOffsetDayType, Tags.UnderlyingDividendPeriodValuationDateAdjusted, Tags.UnderlyingDividendPeriodPaymentDateUnadjusted, Tags.UnderlyingDividendPeriodPaymentDateRelativeTo, Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod, Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit, Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType, Tags.UnderlyingDividendPeriodPaymentDateAdjusted, Tags.UnderlyingDividendPeriodXID, 0 };

                    public NoUnderlyingDividendPeriodsGroup()
                      : base(Tags.NoUnderlyingDividendPeriods, Tags.UnderlyingDividendPeriodSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodSequence UnderlyingDividendPeriodSequence
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodSequence val = new QuickFix.Fields.UnderlyingDividendPeriodSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        this.UnderlyingDividendPeriodSequence = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodSequence Get(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodSequence val)
                    {
                        return IsSetUnderlyingDividendPeriodSequence();
                    }

                    public bool IsSetUnderlyingDividendPeriodSequence()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodSequence);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted UnderlyingDividendPeriodStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted UnderlyingDividendPeriodEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID UnderlyingDividendPeriodUnderlierRefID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val = new QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        this.UnderlyingDividendPeriodUnderlierRefID = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID Get(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodUnderlierRefID val)
                    {
                        return IsSetUnderlyingDividendPeriodUnderlierRefID();
                    }

                    public bool IsSetUnderlyingDividendPeriodUnderlierRefID()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodUnderlierRefID);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodStrikePrice UnderlyingDividendPeriodStrikePrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val = new QuickFix.Fields.UnderlyingDividendPeriodStrikePrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        this.UnderlyingDividendPeriodStrikePrice = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodStrikePrice Get(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodStrikePrice val)
                    {
                        return IsSetUnderlyingDividendPeriodStrikePrice();
                    }

                    public bool IsSetUnderlyingDividendPeriodStrikePrice()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodStrikePrice);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention UnderlyingDividendPeriodBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val = new QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        this.UnderlyingDividendPeriodBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention Get(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodBusinessDayConvention val)
                    {
                        return IsSetUnderlyingDividendPeriodBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingDividendPeriodBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters NoUnderlyingDividendPeriodBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val = new QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        this.NoUnderlyingDividendPeriodBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters Get(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingDividendPeriodBusinessCenters val)
                    {
                        return IsSetNoUnderlyingDividendPeriodBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingDividendPeriodBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingDividendPeriodBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted UnderlyingDividendPeriodValuationDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodValuationDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo UnderlyingDividendPeriodValuationDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        this.UnderlyingDividendPeriodValuationDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateRelativeTo val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateRelativeTo();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod UnderlyingDividendPeriodValuationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit UnderlyingDividendPeriodValuationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetUnit val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType UnderlyingDividendPeriodValuationDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        this.UnderlyingDividendPeriodValuationDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateOffsetDayType val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted UnderlyingDividendPeriodValuationDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val = new QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        this.UnderlyingDividendPeriodValuationDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted Get(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodValuationDateAdjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodValuationDateAdjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodValuationDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodValuationDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted UnderlyingDividendPeriodPaymentDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateUnadjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateUnadjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo UnderlyingDividendPeriodPaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateRelativeTo val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateRelativeTo();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod UnderlyingDividendPeriodPaymentDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit UnderlyingDividendPeriodPaymentDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetUnit val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType UnderlyingDividendPeriodPaymentDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateOffsetDayType val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted UnderlyingDividendPeriodPaymentDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val = new QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        this.UnderlyingDividendPeriodPaymentDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted Get(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodPaymentDateAdjusted val)
                    {
                        return IsSetUnderlyingDividendPeriodPaymentDateAdjusted();
                    }

                    public bool IsSetUnderlyingDividendPeriodPaymentDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodPaymentDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingDividendPeriodXID UnderlyingDividendPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendPeriodXID val = new QuickFix.Fields.UnderlyingDividendPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        this.UnderlyingDividendPeriodXID = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendPeriodXID Get(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodXID val)
                    {
                        return IsSetUnderlyingDividendPeriodXID();
                    }

                    public bool IsSetUnderlyingDividendPeriodXID()
                    {
                        return IsSetField(Tags.UnderlyingDividendPeriodXID);
                    }
                    public class NoUnderlyingDividendPeriodBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingDividendPeriodBusinessCenter, 0 };

                        public NoUnderlyingDividendPeriodBusinessCentersGroup()
                          : base(Tags.NoUnderlyingDividendPeriodBusinessCenters, Tags.UnderlyingDividendPeriodBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingDividendPeriodBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter UnderlyingDividendPeriodBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val = new QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            this.UnderlyingDividendPeriodBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter Get(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDividendPeriodBusinessCenter val)
                        {
                            return IsSetUnderlyingDividendPeriodBusinessCenter();
                        }

                        public bool IsSetUnderlyingDividendPeriodBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingDividendPeriodBusinessCenter);
                        }

                    }
                }
                public class NoUnderlyingDividendFXTriggerDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendFXTriggerDateBusinessCenter, 0 };

                    public NoUnderlyingDividendFXTriggerDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters, Tags.UnderlyingDividendFXTriggerDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendFXTriggerDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter UnderlyingDividendFXTriggerDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val = new QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        this.UnderlyingDividendFXTriggerDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter Get(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendFXTriggerDateBusinessCenter val)
                    {
                        return IsSetUnderlyingDividendFXTriggerDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingDividendFXTriggerDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingDividendFXTriggerDateBusinessCenter);
                    }

                }
                public class NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters, Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDividendAccrualPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter UnderlyingDividendAccrualPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingDividendAccrualPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDividendAccrualPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingDividendAccrualPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingDividendAccrualPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingReturnRatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingReturnRatePriceSequence, Tags.UnderlyingReturnRateCommissionBasis, Tags.UnderlyingReturnRateCommissionAmount, Tags.UnderlyingReturnRateCommissionCurrency, Tags.UnderlyingReturnRateTotalCommissionPerTrade, Tags.UnderlyingReturnRateDeterminationMethod, Tags.NoUnderlyingReturnRatePrices, Tags.NoUnderlyingReturnRateFXConversions, Tags.UnderlyingReturnRateAmountRelativeTo, Tags.UnderlyingReturnRateQuoteMeasureType, Tags.UnderlyingReturnRateQuoteUnits, Tags.UnderlyingReturnRateQuoteMethod, Tags.UnderlyingReturnRateQuoteCurrency, Tags.UnderlyingReturnRateQuoteCurrencyType, Tags.UnderlyingReturnRateQuoteTimeType, Tags.UnderlyingReturnRateQuoteTime, Tags.UnderlyingReturnRateQuoteDate, Tags.UnderlyingReturnRateQuoteExpirationTime, Tags.UnderlyingReturnRateQuoteBusinessCenter, Tags.UnderlyingReturnRateQuoteExchange, Tags.NoUnderlyingReturnRateInformationSources, Tags.UnderlyingReturnRateQuotePricingModel, Tags.UnderlyingReturnRateCashFlowType, Tags.NoUnderlyingReturnRateDates, Tags.UnderlyingReturnRateValuationTimeType, Tags.UnderlyingReturnRateValuationTime, Tags.UnderlyingReturnRateValuationTimeBusinessCenter, Tags.UnderlyingReturnRateValuationPriceOption, Tags.UnderlyingReturnRateFinalPriceFallback, 0 };

                    public NoUnderlyingReturnRatesGroup()
                      : base(Tags.NoUnderlyingReturnRates, Tags.UnderlyingReturnRatePriceSequence, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingReturnRatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingReturnRatePriceSequence UnderlyingReturnRatePriceSequence
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRatePriceSequence val = new QuickFix.Fields.UnderlyingReturnRatePriceSequence();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        this.UnderlyingReturnRatePriceSequence = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRatePriceSequence Get(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceSequence val)
                    {
                        return IsSetUnderlyingReturnRatePriceSequence();
                    }

                    public bool IsSetUnderlyingReturnRatePriceSequence()
                    {
                        return IsSetField(Tags.UnderlyingReturnRatePriceSequence);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionBasis UnderlyingReturnRateCommissionBasis
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionBasis val = new QuickFix.Fields.UnderlyingReturnRateCommissionBasis();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        this.UnderlyingReturnRateCommissionBasis = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionBasis Get(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionBasis val)
                    {
                        return IsSetUnderlyingReturnRateCommissionBasis();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionBasis()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionBasis);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionAmount UnderlyingReturnRateCommissionAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionAmount val = new QuickFix.Fields.UnderlyingReturnRateCommissionAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        this.UnderlyingReturnRateCommissionAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionAmount Get(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionAmount val)
                    {
                        return IsSetUnderlyingReturnRateCommissionAmount();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionAmount()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionAmount);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCommissionCurrency UnderlyingReturnRateCommissionCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val = new QuickFix.Fields.UnderlyingReturnRateCommissionCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        this.UnderlyingReturnRateCommissionCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCommissionCurrency Get(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCommissionCurrency val)
                    {
                        return IsSetUnderlyingReturnRateCommissionCurrency();
                    }

                    public bool IsSetUnderlyingReturnRateCommissionCurrency()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCommissionCurrency);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade UnderlyingReturnRateTotalCommissionPerTrade
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val = new QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        this.UnderlyingReturnRateTotalCommissionPerTrade = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade Get(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateTotalCommissionPerTrade val)
                    {
                        return IsSetUnderlyingReturnRateTotalCommissionPerTrade();
                    }

                    public bool IsSetUnderlyingReturnRateTotalCommissionPerTrade()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateTotalCommissionPerTrade);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateDeterminationMethod UnderlyingReturnRateDeterminationMethod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val = new QuickFix.Fields.UnderlyingReturnRateDeterminationMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        this.UnderlyingReturnRateDeterminationMethod = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateDeterminationMethod Get(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateDeterminationMethod val)
                    {
                        return IsSetUnderlyingReturnRateDeterminationMethod();
                    }

                    public bool IsSetUnderlyingReturnRateDeterminationMethod()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateDeterminationMethod);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRatePrices NoUnderlyingReturnRatePrices
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRatePrices val = new QuickFix.Fields.NoUnderlyingReturnRatePrices();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        this.NoUnderlyingReturnRatePrices = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRatePrices Get(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRatePrices val)
                    {
                        return IsSetNoUnderlyingReturnRatePrices();
                    }

                    public bool IsSetNoUnderlyingReturnRatePrices()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRatePrices);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateFXConversions NoUnderlyingReturnRateFXConversions
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateFXConversions val = new QuickFix.Fields.NoUnderlyingReturnRateFXConversions();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        this.NoUnderlyingReturnRateFXConversions = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateFXConversions Get(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateFXConversions val)
                    {
                        return IsSetNoUnderlyingReturnRateFXConversions();
                    }

                    public bool IsSetNoUnderlyingReturnRateFXConversions()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateFXConversions);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo UnderlyingReturnRateAmountRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        this.UnderlyingReturnRateAmountRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateAmountRelativeTo val)
                    {
                        return IsSetUnderlyingReturnRateAmountRelativeTo();
                    }

                    public bool IsSetUnderlyingReturnRateAmountRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateAmountRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType UnderlyingReturnRateQuoteMeasureType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val = new QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        this.UnderlyingReturnRateQuoteMeasureType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType Get(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteMeasureType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteMeasureType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteMeasureType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteMeasureType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteUnits UnderlyingReturnRateQuoteUnits
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteUnits val = new QuickFix.Fields.UnderlyingReturnRateQuoteUnits();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        this.UnderlyingReturnRateQuoteUnits = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteUnits Get(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteUnits val)
                    {
                        return IsSetUnderlyingReturnRateQuoteUnits();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteUnits()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteUnits);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteMethod UnderlyingReturnRateQuoteMethod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteMethod val = new QuickFix.Fields.UnderlyingReturnRateQuoteMethod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        this.UnderlyingReturnRateQuoteMethod = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteMethod Get(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteMethod val)
                    {
                        return IsSetUnderlyingReturnRateQuoteMethod();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteMethod()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteMethod);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrency UnderlyingReturnRateQuoteCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val = new QuickFix.Fields.UnderlyingReturnRateQuoteCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        this.UnderlyingReturnRateQuoteCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrency Get(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteCurrency val)
                    {
                        return IsSetUnderlyingReturnRateQuoteCurrency();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteCurrency()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteCurrency);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType UnderlyingReturnRateQuoteCurrencyType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val = new QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        this.UnderlyingReturnRateQuoteCurrencyType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType Get(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteCurrencyType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteCurrencyType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteCurrencyType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteCurrencyType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteTimeType UnderlyingReturnRateQuoteTimeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val = new QuickFix.Fields.UnderlyingReturnRateQuoteTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        this.UnderlyingReturnRateQuoteTimeType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteTimeType Get(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteTimeType val)
                    {
                        return IsSetUnderlyingReturnRateQuoteTimeType();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteTimeType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteTimeType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteTime UnderlyingReturnRateQuoteTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteTime val = new QuickFix.Fields.UnderlyingReturnRateQuoteTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        this.UnderlyingReturnRateQuoteTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteTime Get(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteTime val)
                    {
                        return IsSetUnderlyingReturnRateQuoteTime();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteDate UnderlyingReturnRateQuoteDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteDate val = new QuickFix.Fields.UnderlyingReturnRateQuoteDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        this.UnderlyingReturnRateQuoteDate = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteDate Get(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteDate val)
                    {
                        return IsSetUnderlyingReturnRateQuoteDate();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteDate()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteDate);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime UnderlyingReturnRateQuoteExpirationTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val = new QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        this.UnderlyingReturnRateQuoteExpirationTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime Get(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteExpirationTime val)
                    {
                        return IsSetUnderlyingReturnRateQuoteExpirationTime();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteExpirationTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteExpirationTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter UnderlyingReturnRateQuoteBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        this.UnderlyingReturnRateQuoteBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteBusinessCenter val)
                    {
                        return IsSetUnderlyingReturnRateQuoteBusinessCenter();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuoteExchange UnderlyingReturnRateQuoteExchange
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuoteExchange val = new QuickFix.Fields.UnderlyingReturnRateQuoteExchange();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        this.UnderlyingReturnRateQuoteExchange = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuoteExchange Get(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuoteExchange val)
                    {
                        return IsSetUnderlyingReturnRateQuoteExchange();
                    }

                    public bool IsSetUnderlyingReturnRateQuoteExchange()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuoteExchange);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateInformationSources NoUnderlyingReturnRateInformationSources
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateInformationSources val = new QuickFix.Fields.NoUnderlyingReturnRateInformationSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        this.NoUnderlyingReturnRateInformationSources = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateInformationSources Get(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateInformationSources val)
                    {
                        return IsSetNoUnderlyingReturnRateInformationSources();
                    }

                    public bool IsSetNoUnderlyingReturnRateInformationSources()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateInformationSources);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateQuotePricingModel UnderlyingReturnRateQuotePricingModel
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val = new QuickFix.Fields.UnderlyingReturnRateQuotePricingModel();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        this.UnderlyingReturnRateQuotePricingModel = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateQuotePricingModel Get(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateQuotePricingModel val)
                    {
                        return IsSetUnderlyingReturnRateQuotePricingModel();
                    }

                    public bool IsSetUnderlyingReturnRateQuotePricingModel()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateQuotePricingModel);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateCashFlowType UnderlyingReturnRateCashFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateCashFlowType val = new QuickFix.Fields.UnderlyingReturnRateCashFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        this.UnderlyingReturnRateCashFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateCashFlowType Get(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateCashFlowType val)
                    {
                        return IsSetUnderlyingReturnRateCashFlowType();
                    }

                    public bool IsSetUnderlyingReturnRateCashFlowType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateCashFlowType);
                    }
                    public QuickFix.Fields.NoUnderlyingReturnRateDates NoUnderlyingReturnRateDates
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingReturnRateDates val = new QuickFix.Fields.NoUnderlyingReturnRateDates();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        this.NoUnderlyingReturnRateDates = val;
                    }

                    public QuickFix.Fields.NoUnderlyingReturnRateDates Get(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateDates val)
                    {
                        return IsSetNoUnderlyingReturnRateDates();
                    }

                    public bool IsSetNoUnderlyingReturnRateDates()
                    {
                        return IsSetField(Tags.NoUnderlyingReturnRateDates);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeType UnderlyingReturnRateValuationTimeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTimeType val = new QuickFix.Fields.UnderlyingReturnRateValuationTimeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        this.UnderlyingReturnRateValuationTimeType = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeType Get(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTimeType val)
                    {
                        return IsSetUnderlyingReturnRateValuationTimeType();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTimeType()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTimeType);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTime UnderlyingReturnRateValuationTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTime val = new QuickFix.Fields.UnderlyingReturnRateValuationTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        this.UnderlyingReturnRateValuationTime = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTime Get(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTime val)
                    {
                        return IsSetUnderlyingReturnRateValuationTime();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTime()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTime);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter UnderlyingReturnRateValuationTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        this.UnderlyingReturnRateValuationTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationTimeBusinessCenter val)
                    {
                        return IsSetUnderlyingReturnRateValuationTimeBusinessCenter();
                    }

                    public bool IsSetUnderlyingReturnRateValuationTimeBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationTimeBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateValuationPriceOption UnderlyingReturnRateValuationPriceOption
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val = new QuickFix.Fields.UnderlyingReturnRateValuationPriceOption();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        this.UnderlyingReturnRateValuationPriceOption = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateValuationPriceOption Get(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationPriceOption val)
                    {
                        return IsSetUnderlyingReturnRateValuationPriceOption();
                    }

                    public bool IsSetUnderlyingReturnRateValuationPriceOption()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateValuationPriceOption);
                    }
                    public QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback UnderlyingReturnRateFinalPriceFallback
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val = new QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        this.UnderlyingReturnRateFinalPriceFallback = val;
                    }

                    public QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback Get(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFinalPriceFallback val)
                    {
                        return IsSetUnderlyingReturnRateFinalPriceFallback();
                    }

                    public bool IsSetUnderlyingReturnRateFinalPriceFallback()
                    {
                        return IsSetField(Tags.UnderlyingReturnRateFinalPriceFallback);
                    }
                    public class NoUnderlyingReturnRatePricesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRatePriceBasis, Tags.UnderlyingReturnRatePrice, Tags.UnderlyingReturnRatePriceCurrency, Tags.UnderlyingReturnRatePriceType, 0 };

                        public NoUnderlyingReturnRatePricesGroup()
                          : base(Tags.NoUnderlyingReturnRatePrices, Tags.UnderlyingReturnRatePriceBasis, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRatePricesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceBasis UnderlyingReturnRatePriceBasis
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceBasis val = new QuickFix.Fields.UnderlyingReturnRatePriceBasis();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            this.UnderlyingReturnRatePriceBasis = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceBasis Get(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceBasis val)
                        {
                            return IsSetUnderlyingReturnRatePriceBasis();
                        }

                        public bool IsSetUnderlyingReturnRatePriceBasis()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceBasis);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePrice UnderlyingReturnRatePrice
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePrice val = new QuickFix.Fields.UnderlyingReturnRatePrice();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            this.UnderlyingReturnRatePrice = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePrice Get(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePrice val)
                        {
                            return IsSetUnderlyingReturnRatePrice();
                        }

                        public bool IsSetUnderlyingReturnRatePrice()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePrice);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePriceCurrency UnderlyingReturnRatePriceCurrency
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceCurrency val = new QuickFix.Fields.UnderlyingReturnRatePriceCurrency();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            this.UnderlyingReturnRatePriceCurrency = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceCurrency Get(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceCurrency val)
                        {
                            return IsSetUnderlyingReturnRatePriceCurrency();
                        }

                        public bool IsSetUnderlyingReturnRatePriceCurrency()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceCurrency);
                        }
                        public QuickFix.Fields.UnderlyingReturnRatePriceType UnderlyingReturnRatePriceType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRatePriceType val = new QuickFix.Fields.UnderlyingReturnRatePriceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            this.UnderlyingReturnRatePriceType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRatePriceType Get(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRatePriceType val)
                        {
                            return IsSetUnderlyingReturnRatePriceType();
                        }

                        public bool IsSetUnderlyingReturnRatePriceType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRatePriceType);
                        }

                    }
                    public class NoUnderlyingReturnRateFXConversionsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateFXCurrencySymbol, Tags.UnderlyingReturnRateFXRate, Tags.UnderlyingReturnRateFXRateCalc, 0 };

                        public NoUnderlyingReturnRateFXConversionsGroup()
                          : base(Tags.NoUnderlyingReturnRateFXConversions, Tags.UnderlyingReturnRateFXCurrencySymbol, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateFXConversionsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol UnderlyingReturnRateFXCurrencySymbol
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val = new QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            this.UnderlyingReturnRateFXCurrencySymbol = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol Get(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXCurrencySymbol val)
                        {
                            return IsSetUnderlyingReturnRateFXCurrencySymbol();
                        }

                        public bool IsSetUnderlyingReturnRateFXCurrencySymbol()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXCurrencySymbol);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateFXRate UnderlyingReturnRateFXRate
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXRate val = new QuickFix.Fields.UnderlyingReturnRateFXRate();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            this.UnderlyingReturnRateFXRate = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXRate Get(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXRate val)
                        {
                            return IsSetUnderlyingReturnRateFXRate();
                        }

                        public bool IsSetUnderlyingReturnRateFXRate()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXRate);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateFXRateCalc UnderlyingReturnRateFXRateCalc
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateFXRateCalc val = new QuickFix.Fields.UnderlyingReturnRateFXRateCalc();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            this.UnderlyingReturnRateFXRateCalc = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateFXRateCalc Get(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateFXRateCalc val)
                        {
                            return IsSetUnderlyingReturnRateFXRateCalc();
                        }

                        public bool IsSetUnderlyingReturnRateFXRateCalc()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateFXRateCalc);
                        }

                    }
                    public class NoUnderlyingReturnRateInformationSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateInformationSource, Tags.UnderlyingReturnRateReferencePage, Tags.UnderlyingReturnRateReferencePageHeading, 0 };

                        public NoUnderlyingReturnRateInformationSourcesGroup()
                          : base(Tags.NoUnderlyingReturnRateInformationSources, Tags.UnderlyingReturnRateInformationSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateInformationSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateInformationSource UnderlyingReturnRateInformationSource
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateInformationSource val = new QuickFix.Fields.UnderlyingReturnRateInformationSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            this.UnderlyingReturnRateInformationSource = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateInformationSource Get(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateInformationSource val)
                        {
                            return IsSetUnderlyingReturnRateInformationSource();
                        }

                        public bool IsSetUnderlyingReturnRateInformationSource()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateInformationSource);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateReferencePage UnderlyingReturnRateReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateReferencePage val = new QuickFix.Fields.UnderlyingReturnRateReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            this.UnderlyingReturnRateReferencePage = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateReferencePage Get(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateReferencePage val)
                        {
                            return IsSetUnderlyingReturnRateReferencePage();
                        }

                        public bool IsSetUnderlyingReturnRateReferencePage()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateReferencePage);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateReferencePageHeading UnderlyingReturnRateReferencePageHeading
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val = new QuickFix.Fields.UnderlyingReturnRateReferencePageHeading();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            this.UnderlyingReturnRateReferencePageHeading = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateReferencePageHeading Get(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateReferencePageHeading val)
                        {
                            return IsSetUnderlyingReturnRateReferencePageHeading();
                        }

                        public bool IsSetUnderlyingReturnRateReferencePageHeading()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateReferencePageHeading);
                        }

                    }
                    public class NoUnderlyingReturnRateDatesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingReturnRateDateMode, Tags.NoUnderlyingReturnRateValuationDates, Tags.UnderlyingReturnRateValuationDateRelativeTo, Tags.UnderlyingReturnRateValuationDateOffsetPeriod, Tags.UnderlyingReturnRateValuationDateOffsetUnit, Tags.UnderlyingReturnRateValuationDateOffsetDayType, Tags.UnderlyingReturnRateValuationStartDateUnadjusted, Tags.UnderlyingReturnRateValuationStartDateRelativeTo, Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod, Tags.UnderlyingReturnRateValuationStartDateOffsetUnit, Tags.UnderlyingReturnRateValuationStartDateOffsetDayType, Tags.UnderlyingReturnRateValuationStartDateAdjusted, Tags.UnderlyingReturnRateValuationEndDateUnadjusted, Tags.UnderlyingReturnRateValuationEndDateRelativeTo, Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod, Tags.UnderlyingReturnRateValuationEndDateOffsetUnit, Tags.UnderlyingReturnRateValuationEndDateOffsetDayType, Tags.UnderlyingReturnRateValuationEndDateAdjusted, Tags.UnderlyingReturnRateValuationFrequencyPeriod, Tags.UnderlyingReturnRateValuationFrequencyUnit, Tags.UnderlyingReturnRateValuationFrequencyRollConvention, Tags.UnderlyingReturnRateValuationDateBusinessDayConvention, Tags.NoUnderlyingReturnRateValuationDateBusinessCenters, 0 };

                        public NoUnderlyingReturnRateDatesGroup()
                          : base(Tags.NoUnderlyingReturnRateDates, Tags.UnderlyingReturnRateDateMode, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingReturnRateDatesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateDateMode UnderlyingReturnRateDateMode
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateDateMode val = new QuickFix.Fields.UnderlyingReturnRateDateMode();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            this.UnderlyingReturnRateDateMode = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateDateMode Get(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateDateMode val)
                        {
                            return IsSetUnderlyingReturnRateDateMode();
                        }

                        public bool IsSetUnderlyingReturnRateDateMode()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateDateMode);
                        }
                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDates NoUnderlyingReturnRateValuationDates
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingReturnRateValuationDates val = new QuickFix.Fields.NoUnderlyingReturnRateValuationDates();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            this.NoUnderlyingReturnRateValuationDates = val;
                        }

                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDates Get(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateValuationDates val)
                        {
                            return IsSetNoUnderlyingReturnRateValuationDates();
                        }

                        public bool IsSetNoUnderlyingReturnRateValuationDates()
                        {
                            return IsSetField(Tags.NoUnderlyingReturnRateValuationDates);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo UnderlyingReturnRateValuationDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod UnderlyingReturnRateValuationDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit UnderlyingReturnRateValuationDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType UnderlyingReturnRateValuationDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted UnderlyingReturnRateValuationStartDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            this.UnderlyingReturnRateValuationStartDateUnadjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateUnadjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateUnadjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateUnadjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateUnadjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo UnderlyingReturnRateValuationStartDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationStartDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod UnderlyingReturnRateValuationStartDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit UnderlyingReturnRateValuationStartDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType UnderlyingReturnRateValuationStartDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationStartDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted UnderlyingReturnRateValuationStartDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            this.UnderlyingReturnRateValuationStartDateAdjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationStartDateAdjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationStartDateAdjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationStartDateAdjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationStartDateAdjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted UnderlyingReturnRateValuationEndDateUnadjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            this.UnderlyingReturnRateValuationEndDateUnadjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateUnadjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateUnadjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateUnadjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateUnadjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo UnderlyingReturnRateValuationEndDateRelativeTo
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            this.UnderlyingReturnRateValuationEndDateRelativeTo = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateRelativeTo val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateRelativeTo();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateRelativeTo()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateRelativeTo);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod UnderlyingReturnRateValuationEndDateOffsetPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit UnderlyingReturnRateValuationEndDateOffsetUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType UnderlyingReturnRateValuationEndDateOffsetDayType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            this.UnderlyingReturnRateValuationEndDateOffsetDayType = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateOffsetDayType val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateOffsetDayType();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateOffsetDayType()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateOffsetDayType);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted UnderlyingReturnRateValuationEndDateAdjusted
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val = new QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            this.UnderlyingReturnRateValuationEndDateAdjusted = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted Get(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationEndDateAdjusted val)
                        {
                            return IsSetUnderlyingReturnRateValuationEndDateAdjusted();
                        }

                        public bool IsSetUnderlyingReturnRateValuationEndDateAdjusted()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationEndDateAdjusted);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod UnderlyingReturnRateValuationFrequencyPeriod
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyPeriod = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyPeriod val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyPeriod();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyPeriod()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyPeriod);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit UnderlyingReturnRateValuationFrequencyUnit
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyUnit = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyUnit val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyUnit();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyUnit()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyUnit);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention UnderlyingReturnRateValuationFrequencyRollConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val = new QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            this.UnderlyingReturnRateValuationFrequencyRollConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention Get(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationFrequencyRollConvention val)
                        {
                            return IsSetUnderlyingReturnRateValuationFrequencyRollConvention();
                        }

                        public bool IsSetUnderlyingReturnRateValuationFrequencyRollConvention()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationFrequencyRollConvention);
                        }
                        public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention UnderlyingReturnRateValuationDateBusinessDayConvention
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            this.UnderlyingReturnRateValuationDateBusinessDayConvention = val;
                        }

                        public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessDayConvention val)
                        {
                            return IsSetUnderlyingReturnRateValuationDateBusinessDayConvention();
                        }

                        public bool IsSetUnderlyingReturnRateValuationDateBusinessDayConvention()
                        {
                            return IsSetField(Tags.UnderlyingReturnRateValuationDateBusinessDayConvention);
                        }
                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters NoUnderlyingReturnRateValuationDateBusinessCenters
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            this.NoUnderlyingReturnRateValuationDateBusinessCenters = val;
                        }

                        public QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingReturnRateValuationDateBusinessCenters val)
                        {
                            return IsSetNoUnderlyingReturnRateValuationDateBusinessCenters();
                        }

                        public bool IsSetNoUnderlyingReturnRateValuationDateBusinessCenters()
                        {
                            return IsSetField(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters);
                        }
                        public class NoUnderlyingReturnRateValuationDatesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingReturnRateValuationDate, Tags.UnderlyingReturnRateValuationDateType, 0 };

                            public NoUnderlyingReturnRateValuationDatesGroup()
                              : base(Tags.NoUnderlyingReturnRateValuationDates, Tags.UnderlyingReturnRateValuationDate, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingReturnRateValuationDatesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDate UnderlyingReturnRateValuationDate
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDate val = new QuickFix.Fields.UnderlyingReturnRateValuationDate();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                this.UnderlyingReturnRateValuationDate = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDate Get(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDate val)
                            {
                                return IsSetUnderlyingReturnRateValuationDate();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDate()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDate);
                            }
                            public QuickFix.Fields.UnderlyingReturnRateValuationDateType UnderlyingReturnRateValuationDateType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDateType val = new QuickFix.Fields.UnderlyingReturnRateValuationDateType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                this.UnderlyingReturnRateValuationDateType = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateType Get(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateType val)
                            {
                                return IsSetUnderlyingReturnRateValuationDateType();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDateType()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDateType);
                            }

                        }
                        public class NoUnderlyingReturnRateValuationDateBusinessCentersGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingReturnRateValuationDateBusinessCenter, 0 };

                            public NoUnderlyingReturnRateValuationDateBusinessCentersGroup()
                              : base(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters, Tags.UnderlyingReturnRateValuationDateBusinessCenter, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingReturnRateValuationDateBusinessCentersGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter UnderlyingReturnRateValuationDateBusinessCenter
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val = new QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                this.UnderlyingReturnRateValuationDateBusinessCenter = val;
                            }

                            public QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter Get(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingReturnRateValuationDateBusinessCenter val)
                            {
                                return IsSetUnderlyingReturnRateValuationDateBusinessCenter();
                            }

                            public bool IsSetUnderlyingReturnRateValuationDateBusinessCenter()
                            {
                                return IsSetField(Tags.UnderlyingReturnRateValuationDateBusinessCenter);
                            }

                        }
                    }
                }
                public class NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters, Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter);
                    }

                }
                public class NoUnderlyingNonDeliverableFixingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingNonDeliverableFixingDate, Tags.UnderlyingNonDeliverableFixingDateType, 0 };

                    public NoUnderlyingNonDeliverableFixingDatesGroup()
                      : base(Tags.NoUnderlyingNonDeliverableFixingDates, Tags.UnderlyingNonDeliverableFixingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingNonDeliverableFixingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDate UnderlyingNonDeliverableFixingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingNonDeliverableFixingDate val = new QuickFix.Fields.UnderlyingNonDeliverableFixingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        this.UnderlyingNonDeliverableFixingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDate Get(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingNonDeliverableFixingDate val)
                    {
                        return IsSetUnderlyingNonDeliverableFixingDate();
                    }

                    public bool IsSetUnderlyingNonDeliverableFixingDate()
                    {
                        return IsSetField(Tags.UnderlyingNonDeliverableFixingDate);
                    }
                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDateType UnderlyingNonDeliverableFixingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val = new QuickFix.Fields.UnderlyingNonDeliverableFixingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        this.UnderlyingNonDeliverableFixingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingNonDeliverableFixingDateType Get(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingNonDeliverableFixingDateType val)
                    {
                        return IsSetUnderlyingNonDeliverableFixingDateType();
                    }

                    public bool IsSetUnderlyingNonDeliverableFixingDateType()
                    {
                        return IsSetField(Tags.UnderlyingNonDeliverableFixingDateType);
                    }

                }
                public class NoUnderlyingSettlRateFallbacksGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingSettlRatePostponementMaximumDays, Tags.UnderlyingSettlRateFallbackRateSource, Tags.UnderlyingSettlRateFallbackReferencePage, Tags.UnderlyingSettlRatePostponementSurvey, Tags.UnderlyingSettlRatePostponementCalculationAgent, 0 };

                    public NoUnderlyingSettlRateFallbacksGroup()
                      : base(Tags.NoUnderlyingSettlRateFallbacks, Tags.UnderlyingSettlRatePostponementMaximumDays, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingSettlRateFallbacksGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays UnderlyingSettlRatePostponementMaximumDays
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val = new QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        this.UnderlyingSettlRatePostponementMaximumDays = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays Get(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementMaximumDays val)
                    {
                        return IsSetUnderlyingSettlRatePostponementMaximumDays();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementMaximumDays()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementMaximumDays);
                    }
                    public QuickFix.Fields.UnderlyingSettlRateFallbackRateSource UnderlyingSettlRateFallbackRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val = new QuickFix.Fields.UnderlyingSettlRateFallbackRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        this.UnderlyingSettlRateFallbackRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRateFallbackRateSource Get(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRateFallbackRateSource val)
                    {
                        return IsSetUnderlyingSettlRateFallbackRateSource();
                    }

                    public bool IsSetUnderlyingSettlRateFallbackRateSource()
                    {
                        return IsSetField(Tags.UnderlyingSettlRateFallbackRateSource);
                    }
                    public QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage UnderlyingSettlRateFallbackReferencePage
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val = new QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        this.UnderlyingSettlRateFallbackReferencePage = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage Get(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRateFallbackReferencePage val)
                    {
                        return IsSetUnderlyingSettlRateFallbackReferencePage();
                    }

                    public bool IsSetUnderlyingSettlRateFallbackReferencePage()
                    {
                        return IsSetField(Tags.UnderlyingSettlRateFallbackReferencePage);
                    }
                    public QuickFix.Fields.UnderlyingSettlRatePostponementSurvey UnderlyingSettlRatePostponementSurvey
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val = new QuickFix.Fields.UnderlyingSettlRatePostponementSurvey();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        this.UnderlyingSettlRatePostponementSurvey = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementSurvey Get(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementSurvey val)
                    {
                        return IsSetUnderlyingSettlRatePostponementSurvey();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementSurvey()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementSurvey);
                    }
                    public QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent UnderlyingSettlRatePostponementCalculationAgent
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val = new QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        this.UnderlyingSettlRatePostponementCalculationAgent = val;
                    }

                    public QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent Get(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingSettlRatePostponementCalculationAgent val)
                    {
                        return IsSetUnderlyingSettlRatePostponementCalculationAgent();
                    }

                    public bool IsSetUnderlyingSettlRatePostponementCalculationAgent()
                    {
                        return IsSetField(Tags.UnderlyingSettlRatePostponementCalculationAgent);
                    }

                }
                public class NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter, 0 };

                    public NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup()
                      : base(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters, Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamCompoundingDatesBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter UnderlyingPaymentStreamCompoundingDatesBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDatesBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDatesBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDatesBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDatesBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter);
                    }

                }
                public class NoUnderlyingPaymentStreamCompoundingDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStreamCompoundingDate, Tags.UnderlyingPaymentStreamCompoundingDateType, 0 };

                    public NoUnderlyingPaymentStreamCompoundingDatesGroup()
                      : base(Tags.NoUnderlyingPaymentStreamCompoundingDates, Tags.UnderlyingPaymentStreamCompoundingDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStreamCompoundingDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate UnderlyingPaymentStreamCompoundingDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDate val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDate();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType UnderlyingPaymentStreamCompoundingDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val = new QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        this.UnderlyingPaymentStreamCompoundingDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType Get(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStreamCompoundingDateType val)
                    {
                        return IsSetUnderlyingPaymentStreamCompoundingDateType();
                    }

                    public bool IsSetUnderlyingPaymentStreamCompoundingDateType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStreamCompoundingDateType);
                    }

                }
                public class NoUnderlyingPaymentSchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleType, Tags.UnderlyingPaymentScheduleStubType, Tags.UnderlyingPaymentScheduleStartDateUnadjusted, Tags.UnderlyingPaymentScheduleEndDateUnadjusted, Tags.UnderlyingPaymentSchedulePaySide, Tags.UnderlyingPaymentScheduleReceiveSide, Tags.UnderlyingPaymentScheduleNotional, Tags.UnderlyingPaymentScheduleCurrency, Tags.UnderlyingPaymentScheduleRate, Tags.UnderlyingPaymentScheduleRateMultiplier, Tags.UnderlyingPaymentScheduleRateSpread, Tags.UnderlyingPaymentScheduleRateSpreadPositionType, Tags.UnderlyingPaymentScheduleFixedAmount, Tags.UnderlyingPaymentScheduleFixedCurrency, Tags.UnderlyingPaymentScheduleStepFrequencyPeriod, Tags.UnderlyingPaymentScheduleStepFrequencyUnit, Tags.UnderlyingPaymentScheduleStepOffsetValue, Tags.UnderlyingPaymentScheduleStepRate, Tags.UnderlyingPaymentScheduleStepOffsetRate, Tags.UnderlyingPaymentScheduleStepRelativeTo, Tags.NoUnderlyingPaymentScheduleRateSources, Tags.UnderlyingPaymentScheduleFixingDateUnadjusted, Tags.UnderlyingPaymentScheduleWeight, Tags.UnderlyingPaymentScheduleFixingDateRelativeTo, Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn, Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters, Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod, Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit, Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType, Tags.UnderlyingPaymentScheduleFixingDateAdjusted, Tags.UnderlyingPaymentScheduleFixingTime, Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter, Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo, Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention, Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit, Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType, Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted, Tags.UnderlyingPaymentScheduleXID, Tags.UnderlyingPaymentScheduleXIDRef, Tags.UnderlyingPaymentScheduleRateCurrency, Tags.UnderlyingPaymentScheduleRateUnitOfMeasure, Tags.UnderlyingPaymentScheduleRateConversionFactor, Tags.UnderlyingPaymentScheduleRateSpreadType, Tags.UnderlyingPaymentScheduleSettlPeriodPrice, Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency, Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure, Tags.UnderlyingPaymentScheduleStepUnitOfMeasure, Tags.UnderlyingPaymentScheduleFixingDayDistribution, Tags.UnderlyingPaymentScheduleFixingDayCount, Tags.NoUnderlyingPaymentScheduleFixingDays, Tags.UnderlyingPaymentScheduleFixingLagPeriod, Tags.UnderlyingPaymentScheduleFixingLagUnit, Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod, Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit, Tags.UnderlyingPaymentScheduleRateTreatment, 0 };

                    public NoUnderlyingPaymentSchedulesGroup()
                      : base(Tags.NoUnderlyingPaymentSchedules, Tags.UnderlyingPaymentScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentSchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleType UnderlyingPaymentScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleType val = new QuickFix.Fields.UnderlyingPaymentScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        this.UnderlyingPaymentScheduleType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleType Get(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleType val)
                    {
                        return IsSetUnderlyingPaymentScheduleType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStubType UnderlyingPaymentScheduleStubType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStubType val = new QuickFix.Fields.UnderlyingPaymentScheduleStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        this.UnderlyingPaymentScheduleStubType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStubType Get(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStubType val)
                    {
                        return IsSetUnderlyingPaymentScheduleStubType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStubType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStubType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted UnderlyingPaymentScheduleStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted UnderlyingPaymentScheduleEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentSchedulePaySide UnderlyingPaymentSchedulePaySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentSchedulePaySide val = new QuickFix.Fields.UnderlyingPaymentSchedulePaySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        this.UnderlyingPaymentSchedulePaySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentSchedulePaySide Get(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentSchedulePaySide val)
                    {
                        return IsSetUnderlyingPaymentSchedulePaySide();
                    }

                    public bool IsSetUnderlyingPaymentSchedulePaySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentSchedulePaySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide UnderlyingPaymentScheduleReceiveSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val = new QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        this.UnderlyingPaymentScheduleReceiveSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide Get(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleReceiveSide val)
                    {
                        return IsSetUnderlyingPaymentScheduleReceiveSide();
                    }

                    public bool IsSetUnderlyingPaymentScheduleReceiveSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleReceiveSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleNotional UnderlyingPaymentScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleNotional val = new QuickFix.Fields.UnderlyingPaymentScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        this.UnderlyingPaymentScheduleNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleNotional Get(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleNotional val)
                    {
                        return IsSetUnderlyingPaymentScheduleNotional();
                    }

                    public bool IsSetUnderlyingPaymentScheduleNotional()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleNotional);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleCurrency UnderlyingPaymentScheduleCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        this.UnderlyingPaymentScheduleCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRate UnderlyingPaymentScheduleRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRate val = new QuickFix.Fields.UnderlyingPaymentScheduleRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        this.UnderlyingPaymentScheduleRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRate Get(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier UnderlyingPaymentScheduleRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        this.UnderlyingPaymentScheduleRateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpread UnderlyingPaymentScheduleRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        this.UnderlyingPaymentScheduleRateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpread Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpread val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpread();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType UnderlyingPaymentScheduleRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentScheduleRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount UnderlyingPaymentScheduleFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val = new QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        this.UnderlyingPaymentScheduleFixedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount Get(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixedAmount val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixedAmount();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixedAmount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixedAmount);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency UnderlyingPaymentScheduleFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        this.UnderlyingPaymentScheduleFixedCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixedCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixedCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixedCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixedCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod UnderlyingPaymentScheduleStepFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        this.UnderlyingPaymentScheduleStepFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit UnderlyingPaymentScheduleStepFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        this.UnderlyingPaymentScheduleStepFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepFrequencyUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepFrequencyUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue UnderlyingPaymentScheduleStepOffsetValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val = new QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        this.UnderlyingPaymentScheduleStepOffsetValue = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue Get(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetValue val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepOffsetValue();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepOffsetValue()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepOffsetValue);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRate UnderlyingPaymentScheduleStepRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepRate val = new QuickFix.Fields.UnderlyingPaymentScheduleStepRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        this.UnderlyingPaymentScheduleStepRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRate Get(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate UnderlyingPaymentScheduleStepOffsetRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val = new QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        this.UnderlyingPaymentScheduleStepOffsetRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate Get(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepOffsetRate val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepOffsetRate();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepOffsetRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepOffsetRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo UnderlyingPaymentScheduleStepRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleStepRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepRelativeTo);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources NoUnderlyingPaymentScheduleRateSources
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val = new QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        this.NoUnderlyingPaymentScheduleRateSources = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources Get(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleRateSources val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleRateSources();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleRateSources()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleRateSources);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted UnderlyingPaymentScheduleFixingDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleWeight UnderlyingPaymentScheduleWeight
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleWeight val = new QuickFix.Fields.UnderlyingPaymentScheduleWeight();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        this.UnderlyingPaymentScheduleWeight = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleWeight Get(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleWeight val)
                    {
                        return IsSetUnderlyingPaymentScheduleWeight();
                    }

                    public bool IsSetUnderlyingPaymentScheduleWeight()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleWeight);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo UnderlyingPaymentScheduleFixingDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateBusinessDayCnvtn();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateBusinessDayCnvtn()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters NoUnderlyingPaymentScheduleFixingDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentScheduleFixingDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleFixingDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleFixingDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod UnderlyingPaymentScheduleFixingDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit UnderlyingPaymentScheduleFixingDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType UnderlyingPaymentScheduleFixingDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted UnderlyingPaymentScheduleFixingDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        this.UnderlyingPaymentScheduleFixingDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTime UnderlyingPaymentScheduleFixingTime
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingTime();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        this.UnderlyingPaymentScheduleFixingTime = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTime Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingTime val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingTime();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingTime()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingTime);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter UnderlyingPaymentScheduleFixingTimeBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        this.UnderlyingPaymentScheduleFixingTimeBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingTimeBusinessCenter val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingTimeBusinessCenter();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingTimeBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted UnderlyingPaymentScheduleInterimExchangeDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        this.UnderlyingPaymentScheduleInterimExchangeDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentScheduleInterimExchangeDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentScheduleInterimExchangeDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleXID UnderlyingPaymentScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleXID val = new QuickFix.Fields.UnderlyingPaymentScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        this.UnderlyingPaymentScheduleXID = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleXID Get(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleXID val)
                    {
                        return IsSetUnderlyingPaymentScheduleXID();
                    }

                    public bool IsSetUnderlyingPaymentScheduleXID()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleXID);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleXIDRef UnderlyingPaymentScheduleXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val = new QuickFix.Fields.UnderlyingPaymentScheduleXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        this.UnderlyingPaymentScheduleXIDRef = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleXIDRef Get(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleXIDRef val)
                    {
                        return IsSetUnderlyingPaymentScheduleXIDRef();
                    }

                    public bool IsSetUnderlyingPaymentScheduleXIDRef()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleXIDRef);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency UnderlyingPaymentScheduleRateCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        this.UnderlyingPaymentScheduleRateCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure UnderlyingPaymentScheduleRateUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleRateUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor UnderlyingPaymentScheduleRateConversionFactor
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val = new QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        this.UnderlyingPaymentScheduleRateConversionFactor = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor Get(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateConversionFactor val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateConversionFactor();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateConversionFactor()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateConversionFactor);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType UnderlyingPaymentScheduleRateSpreadType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        this.UnderlyingPaymentScheduleRateSpreadType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSpreadType val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateSpreadType();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateSpreadType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateSpreadType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice UnderlyingPaymentScheduleSettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPrice val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPrice();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPrice()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPrice);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency UnderlyingPaymentScheduleSettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceCurrency val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPriceCurrency();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure UnderlyingPaymentScheduleStepUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val = new QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        this.UnderlyingPaymentScheduleStepUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure Get(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleStepUnitOfMeasure val)
                    {
                        return IsSetUnderlyingPaymentScheduleStepUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingPaymentScheduleStepUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleStepUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution UnderlyingPaymentScheduleFixingDayDistribution
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        this.UnderlyingPaymentScheduleFixingDayDistribution = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayDistribution val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDayDistribution();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDayDistribution()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayDistribution);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount UnderlyingPaymentScheduleFixingDayCount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        this.UnderlyingPaymentScheduleFixingDayCount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayCount val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingDayCount();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingDayCount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayCount);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays NoUnderlyingPaymentScheduleFixingDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val = new QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        this.NoUnderlyingPaymentScheduleFixingDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays Get(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentScheduleFixingDays val)
                    {
                        return IsSetNoUnderlyingPaymentScheduleFixingDays();
                    }

                    public bool IsSetNoUnderlyingPaymentScheduleFixingDays()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentScheduleFixingDays);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod UnderlyingPaymentScheduleFixingLagPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingLagPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingLagPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingLagPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingLagPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit UnderlyingPaymentScheduleFixingLagUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingLagUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingLagUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingLagUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingLagUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingLagUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment UnderlyingPaymentScheduleRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val = new QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        this.UnderlyingPaymentScheduleRateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment Get(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateTreatment val)
                    {
                        return IsSetUnderlyingPaymentScheduleRateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentScheduleRateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentScheduleRateTreatment);
                    }
                    public class NoUnderlyingPaymentScheduleRateSourcesGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleRateSource, Tags.UnderlyingPaymentScheduleRateSourceType, Tags.UnderlyingPaymentScheduleReferencePage, 0 };

                        public NoUnderlyingPaymentScheduleRateSourcesGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleRateSources, Tags.UnderlyingPaymentScheduleRateSource, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleRateSourcesGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSource UnderlyingPaymentScheduleRateSource
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleRateSource val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSource();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            this.UnderlyingPaymentScheduleRateSource = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSource Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSource val)
                        {
                            return IsSetUnderlyingPaymentScheduleRateSource();
                        }

                        public bool IsSetUnderlyingPaymentScheduleRateSource()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleRateSource);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType UnderlyingPaymentScheduleRateSourceType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val = new QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            this.UnderlyingPaymentScheduleRateSourceType = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType Get(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleRateSourceType val)
                        {
                            return IsSetUnderlyingPaymentScheduleRateSourceType();
                        }

                        public bool IsSetUnderlyingPaymentScheduleRateSourceType()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleRateSourceType);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleReferencePage UnderlyingPaymentScheduleReferencePage
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val = new QuickFix.Fields.UnderlyingPaymentScheduleReferencePage();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            this.UnderlyingPaymentScheduleReferencePage = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleReferencePage Get(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleReferencePage val)
                        {
                            return IsSetUnderlyingPaymentScheduleReferencePage();
                        }

                        public bool IsSetUnderlyingPaymentScheduleReferencePage()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleReferencePage);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters, Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleFixingDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter UnderlyingPaymentScheduleFixingDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentScheduleFixingDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter, 0 };

                        public NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters, Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            this.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentScheduleFixingDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentScheduleFixingDayOfWeek, Tags.UnderlyingPaymentScheduleFixingDayNumber, 0 };

                        public NoUnderlyingPaymentScheduleFixingDaysGroup()
                          : base(Tags.NoUnderlyingPaymentScheduleFixingDays, Tags.UnderlyingPaymentScheduleFixingDayOfWeek, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentScheduleFixingDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek UnderlyingPaymentScheduleFixingDayOfWeek
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            this.UnderlyingPaymentScheduleFixingDayOfWeek = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayOfWeek val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDayOfWeek();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDayOfWeek()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayOfWeek);
                        }
                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber UnderlyingPaymentScheduleFixingDayNumber
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val = new QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            this.UnderlyingPaymentScheduleFixingDayNumber = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber Get(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentScheduleFixingDayNumber val)
                        {
                            return IsSetUnderlyingPaymentScheduleFixingDayNumber();
                        }

                        public bool IsSetUnderlyingPaymentScheduleFixingDayNumber()
                        {
                            return IsSetField(Tags.UnderlyingPaymentScheduleFixingDayNumber);
                        }

                    }
                }
                public class NoUnderlyingPaymentStubsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPaymentStubType, Tags.UnderlyingPaymentStubLength, Tags.UnderlyingPaymentStubRate, Tags.UnderlyingPaymentStubFixedAmount, Tags.UnderlyingPaymentStubFixedCurrency, Tags.UnderlyingPaymentStubIndex, Tags.UnderlyingPaymentStubIndexSource, Tags.UnderlyingPaymentStubIndexCurvePeriod, Tags.UnderlyingPaymentStubIndexCurveUnit, Tags.UnderlyingPaymentStubIndexRateMultiplier, Tags.UnderlyingPaymentStubIndexRateSpread, Tags.UnderlyingPaymentStubIndexRateSpreadPositionType, Tags.UnderlyingPaymentStubIndexRateTreatment, Tags.UnderlyingPaymentStubIndexCapRate, Tags.UnderlyingPaymentStubIndexCapRateBuySide, Tags.UnderlyingPaymentStubIndexCapRateSellSide, Tags.UnderlyingPaymentStubIndexFloorRate, Tags.UnderlyingPaymentStubIndexFloorRateBuySide, Tags.UnderlyingPaymentStubIndexFloorRateSellSide, Tags.UnderlyingPaymentStubIndex2, Tags.UnderlyingPaymentStubIndex2Source, Tags.UnderlyingPaymentStubIndex2CurvePeriod, Tags.UnderlyingPaymentStubIndex2CurveUnit, Tags.UnderlyingPaymentStubIndex2RateMultiplier, Tags.UnderlyingPaymentStubIndex2RateSpread, Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType, Tags.UnderlyingPaymentStubIndex2RateTreatment, Tags.UnderlyingPaymentStubIndex2CapRate, Tags.UnderlyingPaymentStubIndex2FloorRate, Tags.UnderlyingPaymentStubStartDateUnadjusted, Tags.UnderlyingPaymentStubStartDateBusinessDayConvention, Tags.NoUnderlyingPaymentStubStartDateBusinessCenters, Tags.UnderlyingPaymentStubStartDateRelativeTo, Tags.UnderlyingPaymentStubStartDateOffsetPeriod, Tags.UnderlyingPaymentStubStartDateOffsetUnit, Tags.UnderlyingPaymentStubStartDateOffsetDayType, Tags.UnderlyingPaymentStubStartDateAdjusted, Tags.UnderlyingPaymentStubEndDateUnadjusted, Tags.UnderlyingPaymentStubEndDateBusinessDayConvention, Tags.NoUnderlyingPaymentStubEndDateBusinessCenters, Tags.UnderlyingPaymentStubEndDateRelativeTo, Tags.UnderlyingPaymentStubEndDateOffsetPeriod, Tags.UnderlyingPaymentStubEndDateOffsetUnit, Tags.UnderlyingPaymentStubEndDateOffsetDayType, Tags.UnderlyingPaymentStubEndDateAdjusted, 0 };

                    public NoUnderlyingPaymentStubsGroup()
                      : base(Tags.NoUnderlyingPaymentStubs, Tags.UnderlyingPaymentStubType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPaymentStubsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubType UnderlyingPaymentStubType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubType val = new QuickFix.Fields.UnderlyingPaymentStubType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        this.UnderlyingPaymentStubType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubType Get(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubType val)
                    {
                        return IsSetUnderlyingPaymentStubType();
                    }

                    public bool IsSetUnderlyingPaymentStubType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubLength UnderlyingPaymentStubLength
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubLength val = new QuickFix.Fields.UnderlyingPaymentStubLength();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        this.UnderlyingPaymentStubLength = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubLength Get(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubLength val)
                    {
                        return IsSetUnderlyingPaymentStubLength();
                    }

                    public bool IsSetUnderlyingPaymentStubLength()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubLength);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubRate UnderlyingPaymentStubRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubRate val = new QuickFix.Fields.UnderlyingPaymentStubRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        this.UnderlyingPaymentStubRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubRate Get(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubRate val)
                    {
                        return IsSetUnderlyingPaymentStubRate();
                    }

                    public bool IsSetUnderlyingPaymentStubRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubFixedAmount UnderlyingPaymentStubFixedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubFixedAmount val = new QuickFix.Fields.UnderlyingPaymentStubFixedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        this.UnderlyingPaymentStubFixedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubFixedAmount Get(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubFixedAmount val)
                    {
                        return IsSetUnderlyingPaymentStubFixedAmount();
                    }

                    public bool IsSetUnderlyingPaymentStubFixedAmount()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubFixedAmount);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubFixedCurrency UnderlyingPaymentStubFixedCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val = new QuickFix.Fields.UnderlyingPaymentStubFixedCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        this.UnderlyingPaymentStubFixedCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubFixedCurrency Get(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubFixedCurrency val)
                    {
                        return IsSetUnderlyingPaymentStubFixedCurrency();
                    }

                    public bool IsSetUnderlyingPaymentStubFixedCurrency()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubFixedCurrency);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex UnderlyingPaymentStubIndex
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex val = new QuickFix.Fields.UnderlyingPaymentStubIndex();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        this.UnderlyingPaymentStubIndex = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex Get(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex val)
                    {
                        return IsSetUnderlyingPaymentStubIndex();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexSource UnderlyingPaymentStubIndexSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexSource val = new QuickFix.Fields.UnderlyingPaymentStubIndexSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        this.UnderlyingPaymentStubIndexSource = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexSource Get(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexSource val)
                    {
                        return IsSetUnderlyingPaymentStubIndexSource();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexSource()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexSource);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod UnderlyingPaymentStubIndexCurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        this.UnderlyingPaymentStubIndexCurvePeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCurvePeriod val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCurvePeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCurvePeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCurvePeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit UnderlyingPaymentStubIndexCurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val = new QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        this.UnderlyingPaymentStubIndexCurveUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit Get(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCurveUnit val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCurveUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCurveUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCurveUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier UnderlyingPaymentStubIndexRateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        this.UnderlyingPaymentStubIndexRateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread UnderlyingPaymentStubIndexRateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        this.UnderlyingPaymentStubIndexRateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpread val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateSpread();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType UnderlyingPaymentStubIndexRateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentStubIndexRateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment UnderlyingPaymentStubIndexRateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val = new QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        this.UnderlyingPaymentStubIndexRateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment Get(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexRateTreatment val)
                    {
                        return IsSetUnderlyingPaymentStubIndexRateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexRateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexRateTreatment);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRate UnderlyingPaymentStubIndexCapRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        this.UnderlyingPaymentStubIndexCapRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRate Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide UnderlyingPaymentStubIndexCapRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        this.UnderlyingPaymentStubIndexCapRateBuySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateBuySide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRateBuySide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRateBuySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRateBuySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide UnderlyingPaymentStubIndexCapRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        this.UnderlyingPaymentStubIndexCapRateSellSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexCapRateSellSide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexCapRateSellSide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexCapRateSellSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexCapRateSellSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate UnderlyingPaymentStubIndexFloorRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide UnderlyingPaymentStubIndexFloorRateBuySide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRateBuySide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateBuySide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRateBuySide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRateBuySide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRateBuySide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide UnderlyingPaymentStubIndexFloorRateSellSide
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val = new QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        this.UnderlyingPaymentStubIndexFloorRateSellSide = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide Get(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndexFloorRateSellSide val)
                    {
                        return IsSetUnderlyingPaymentStubIndexFloorRateSellSide();
                    }

                    public bool IsSetUnderlyingPaymentStubIndexFloorRateSellSide()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndexFloorRateSellSide);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2 UnderlyingPaymentStubIndex2
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2 val = new QuickFix.Fields.UnderlyingPaymentStubIndex2();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        this.UnderlyingPaymentStubIndex2 = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2 Get(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2 val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2Source UnderlyingPaymentStubIndex2Source
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2Source val = new QuickFix.Fields.UnderlyingPaymentStubIndex2Source();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        this.UnderlyingPaymentStubIndex2Source = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2Source Get(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2Source val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2Source();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2Source()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2Source);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod UnderlyingPaymentStubIndex2CurvePeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        this.UnderlyingPaymentStubIndex2CurvePeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CurvePeriod val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CurvePeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CurvePeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CurvePeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit UnderlyingPaymentStubIndex2CurveUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        this.UnderlyingPaymentStubIndex2CurveUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CurveUnit val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CurveUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CurveUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CurveUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier UnderlyingPaymentStubIndex2RateMultiplier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        this.UnderlyingPaymentStubIndex2RateMultiplier = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateMultiplier val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateMultiplier();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateMultiplier()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateMultiplier);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread UnderlyingPaymentStubIndex2RateSpread
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        this.UnderlyingPaymentStubIndex2RateSpread = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpread val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateSpread();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateSpread()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateSpread);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType UnderlyingPaymentStubIndex2RateSpreadPositionType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        this.UnderlyingPaymentStubIndex2RateSpreadPositionType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateSpreadPositionType val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateSpreadPositionType();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateSpreadPositionType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment UnderlyingPaymentStubIndex2RateTreatment
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val = new QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        this.UnderlyingPaymentStubIndex2RateTreatment = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment Get(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2RateTreatment val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2RateTreatment();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2RateTreatment()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2RateTreatment);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate UnderlyingPaymentStubIndex2CapRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val = new QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        this.UnderlyingPaymentStubIndex2CapRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate Get(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2CapRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2CapRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2CapRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2CapRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate UnderlyingPaymentStubIndex2FloorRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val = new QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        this.UnderlyingPaymentStubIndex2FloorRate = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate Get(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubIndex2FloorRate val)
                    {
                        return IsSetUnderlyingPaymentStubIndex2FloorRate();
                    }

                    public bool IsSetUnderlyingPaymentStubIndex2FloorRate()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubIndex2FloorRate);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted UnderlyingPaymentStubStartDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        this.UnderlyingPaymentStubStartDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention UnderlyingPaymentStubStartDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentStubStartDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters NoUnderlyingPaymentStubStartDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentStubStartDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubStartDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentStubStartDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentStubStartDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo UnderlyingPaymentStubStartDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        this.UnderlyingPaymentStubStartDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod UnderlyingPaymentStubStartDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit UnderlyingPaymentStubStartDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType UnderlyingPaymentStubStartDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentStubStartDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted UnderlyingPaymentStubStartDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        this.UnderlyingPaymentStubStartDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentStubStartDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubStartDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubStartDateAdjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted UnderlyingPaymentStubEndDateUnadjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val = new QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        this.UnderlyingPaymentStubEndDateUnadjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted Get(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateUnadjusted val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateUnadjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateUnadjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateUnadjusted);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention UnderlyingPaymentStubEndDateBusinessDayConvention
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        this.UnderlyingPaymentStubEndDateBusinessDayConvention = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessDayConvention val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateBusinessDayConvention();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateBusinessDayConvention()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateBusinessDayConvention);
                    }
                    public QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters NoUnderlyingPaymentStubEndDateBusinessCenters
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        this.NoUnderlyingPaymentStubEndDateBusinessCenters = val;
                    }

                    public QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingPaymentStubEndDateBusinessCenters val)
                    {
                        return IsSetNoUnderlyingPaymentStubEndDateBusinessCenters();
                    }

                    public bool IsSetNoUnderlyingPaymentStubEndDateBusinessCenters()
                    {
                        return IsSetField(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo UnderlyingPaymentStubEndDateRelativeTo
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val = new QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        this.UnderlyingPaymentStubEndDateRelativeTo = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo Get(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateRelativeTo val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateRelativeTo();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateRelativeTo()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateRelativeTo);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod UnderlyingPaymentStubEndDateOffsetPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetPeriod val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetPeriod();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetPeriod()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetPeriod);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit UnderlyingPaymentStubEndDateOffsetUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetUnit val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetUnit();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetUnit()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetUnit);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType UnderlyingPaymentStubEndDateOffsetDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val = new QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        this.UnderlyingPaymentStubEndDateOffsetDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType Get(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateOffsetDayType val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateOffsetDayType();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateOffsetDayType()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateOffsetDayType);
                    }
                    public QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted UnderlyingPaymentStubEndDateAdjusted
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val = new QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        this.UnderlyingPaymentStubEndDateAdjusted = val;
                    }

                    public QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted Get(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateAdjusted val)
                    {
                        return IsSetUnderlyingPaymentStubEndDateAdjusted();
                    }

                    public bool IsSetUnderlyingPaymentStubEndDateAdjusted()
                    {
                        return IsSetField(Tags.UnderlyingPaymentStubEndDateAdjusted);
                    }
                    public class NoUnderlyingPaymentStubStartDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentStubStartDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentStubStartDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters, Tags.UnderlyingPaymentStubStartDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentStubStartDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter UnderlyingPaymentStubStartDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentStubStartDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubStartDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentStubStartDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentStubStartDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentStubStartDateBusinessCenter);
                        }

                    }
                    public class NoUnderlyingPaymentStubEndDateBusinessCentersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingPaymentStubEndDateBusinessCenter, 0 };

                        public NoUnderlyingPaymentStubEndDateBusinessCentersGroup()
                          : base(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters, Tags.UnderlyingPaymentStubEndDateBusinessCenter, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingPaymentStubEndDateBusinessCentersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter UnderlyingPaymentStubEndDateBusinessCenter
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val = new QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            this.UnderlyingPaymentStubEndDateBusinessCenter = val;
                        }

                        public QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter Get(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingPaymentStubEndDateBusinessCenter val)
                        {
                            return IsSetUnderlyingPaymentStubEndDateBusinessCenter();
                        }

                        public bool IsSetUnderlyingPaymentStubEndDateBusinessCenter()
                        {
                            return IsSetField(Tags.UnderlyingPaymentStubEndDateBusinessCenter);
                        }

                    }
                }
                public class NoUnderlyingStreamCommodityAltIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommodityAltID, Tags.UnderlyingStreamCommodityAltIDSource, 0 };

                    public NoUnderlyingStreamCommodityAltIDsGroup()
                      : base(Tags.NoUnderlyingStreamCommodityAltIDs, Tags.UnderlyingStreamCommodityAltID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommodityAltIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltID UnderlyingStreamCommodityAltID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityAltID val = new QuickFix.Fields.UnderlyingStreamCommodityAltID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        this.UnderlyingStreamCommodityAltID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltID Get(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityAltID val)
                    {
                        return IsSetUnderlyingStreamCommodityAltID();
                    }

                    public bool IsSetUnderlyingStreamCommodityAltID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityAltID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommodityAltIDSource UnderlyingStreamCommodityAltIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val = new QuickFix.Fields.UnderlyingStreamCommodityAltIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        this.UnderlyingStreamCommodityAltIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityAltIDSource Get(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityAltIDSource val)
                    {
                        return IsSetUnderlyingStreamCommodityAltIDSource();
                    }

                    public bool IsSetUnderlyingStreamCommodityAltIDSource()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityAltIDSource);
                    }

                }
                public class NoUnderlyingStreamAssetAttributesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamAssetAttributeType, Tags.UnderlyingStreamAssetAttributeValue, Tags.UnderlyingStreamAssetAttributeLimit, 0 };

                    public NoUnderlyingStreamAssetAttributesGroup()
                      : base(Tags.NoUnderlyingStreamAssetAttributes, Tags.UnderlyingStreamAssetAttributeType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamAssetAttributesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeType UnderlyingStreamAssetAttributeType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeType val = new QuickFix.Fields.UnderlyingStreamAssetAttributeType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        this.UnderlyingStreamAssetAttributeType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeType Get(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeType val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeType();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeType()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeType);
                    }
                    public QuickFix.Fields.UnderlyingStreamAssetAttributeValue UnderlyingStreamAssetAttributeValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeValue val = new QuickFix.Fields.UnderlyingStreamAssetAttributeValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        this.UnderlyingStreamAssetAttributeValue = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeValue Get(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeValue val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeValue();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeValue()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeValue);
                    }
                    public QuickFix.Fields.UnderlyingStreamAssetAttributeLimit UnderlyingStreamAssetAttributeLimit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val = new QuickFix.Fields.UnderlyingStreamAssetAttributeLimit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        this.UnderlyingStreamAssetAttributeLimit = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamAssetAttributeLimit Get(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamAssetAttributeLimit val)
                    {
                        return IsSetUnderlyingStreamAssetAttributeLimit();
                    }

                    public bool IsSetUnderlyingStreamAssetAttributeLimit()
                    {
                        return IsSetField(Tags.UnderlyingStreamAssetAttributeLimit);
                    }

                }
                public class NoUnderlyingStreamCommodityDataSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommodityDataSourceID, Tags.UnderlyingStreamCommodityDataSourceIDType, 0 };

                    public NoUnderlyingStreamCommodityDataSourcesGroup()
                      : base(Tags.NoUnderlyingStreamCommodityDataSources, Tags.UnderlyingStreamCommodityDataSourceID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommodityDataSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceID UnderlyingStreamCommodityDataSourceID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val = new QuickFix.Fields.UnderlyingStreamCommodityDataSourceID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        this.UnderlyingStreamCommodityDataSourceID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceID Get(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDataSourceID val)
                    {
                        return IsSetUnderlyingStreamCommodityDataSourceID();
                    }

                    public bool IsSetUnderlyingStreamCommodityDataSourceID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityDataSourceID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType UnderlyingStreamCommodityDataSourceIDType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val = new QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        this.UnderlyingStreamCommodityDataSourceIDType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType Get(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommodityDataSourceIDType val)
                    {
                        return IsSetUnderlyingStreamCommodityDataSourceIDType();
                    }

                    public bool IsSetUnderlyingStreamCommodityDataSourceIDType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommodityDataSourceIDType);
                    }

                }
                public class NoUnderlyingStreamCommoditySettlBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlBusinessCenter, 0 };

                    public NoUnderlyingStreamCommoditySettlBusinessCentersGroup()
                      : base(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters, Tags.UnderlyingStreamCommoditySettlBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommoditySettlBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter UnderlyingStreamCommoditySettlBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val = new QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        this.UnderlyingStreamCommoditySettlBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter Get(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlBusinessCenter val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlBusinessCenter();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlBusinessCenter);
                    }

                }
                public class NoUnderlyingStreamCommoditySettlPeriodsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlCountry, Tags.UnderlyingStreamCommoditySettlTimeZone, Tags.UnderlyingStreamCommoditySettlFlowType, Tags.UnderlyingStreamCommoditySettlPeriodNotional, Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure, Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod, Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit, Tags.UnderlyingStreamCommoditySettlPeriodPrice, Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure, Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency, Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction, Tags.NoUnderlyingStreamCommoditySettlDays, Tags.UnderlyingStreamCommoditySettlPeriodXID, Tags.UnderlyingStreamCommoditySettlPeriodXIDRef, 0 };

                    public NoUnderlyingStreamCommoditySettlPeriodsGroup()
                      : base(Tags.NoUnderlyingStreamCommoditySettlPeriods, Tags.UnderlyingStreamCommoditySettlCountry, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingStreamCommoditySettlPeriodsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlCountry UnderlyingStreamCommoditySettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val = new QuickFix.Fields.UnderlyingStreamCommoditySettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        this.UnderlyingStreamCommoditySettlCountry = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlCountry Get(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlCountry val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlCountry();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlCountry()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlCountry);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone UnderlyingStreamCommoditySettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        this.UnderlyingStreamCommoditySettlTimeZone = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeZone val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlTimeZone();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlTimeZone()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlTimeZone);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType UnderlyingStreamCommoditySettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        this.UnderlyingStreamCommoditySettlFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlFlowType val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlFlowType();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlFlowType()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlFlowType);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional UnderlyingStreamCommoditySettlPeriodNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotional val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodNotional();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodNotional()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodNotional);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod UnderlyingStreamCommoditySettlPeriodFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit UnderlyingStreamCommoditySettlPeriodFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodFrequencyUnit val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodFrequencyUnit();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice UnderlyingStreamCommoditySettlPeriodPrice
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPrice = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPrice val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPrice();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPrice()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPrice);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency UnderlyingStreamCommoditySettlPeriodPriceCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodPriceCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodPriceCurrency val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodPriceCurrency();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodPriceCurrency()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction UnderlyingStreamCommoditySettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val = new QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        this.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction Get(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays NoUnderlyingStreamCommoditySettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        this.NoUnderlyingStreamCommoditySettlDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlDays val)
                    {
                        return IsSetNoUnderlyingStreamCommoditySettlDays();
                    }

                    public bool IsSetNoUnderlyingStreamCommoditySettlDays()
                    {
                        return IsSetField(Tags.NoUnderlyingStreamCommoditySettlDays);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID UnderlyingStreamCommoditySettlPeriodXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodXID = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXID val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodXID();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodXID()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodXID);
                    }
                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef UnderlyingStreamCommoditySettlPeriodXIDRef
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val = new QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        this.UnderlyingStreamCommoditySettlPeriodXIDRef = val;
                    }

                    public QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef Get(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlPeriodXIDRef val)
                    {
                        return IsSetUnderlyingStreamCommoditySettlPeriodXIDRef();
                    }

                    public bool IsSetUnderlyingStreamCommoditySettlPeriodXIDRef()
                    {
                        return IsSetField(Tags.UnderlyingStreamCommoditySettlPeriodXIDRef);
                    }
                    public class NoUnderlyingStreamCommoditySettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlDay, Tags.UnderlyingStreamCommoditySettlTotalHours, Tags.NoUnderlyingStreamCommoditySettlTimes, 0 };

                        public NoUnderlyingStreamCommoditySettlDaysGroup()
                          : base(Tags.NoUnderlyingStreamCommoditySettlDays, Tags.UnderlyingStreamCommoditySettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingStreamCommoditySettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlDay UnderlyingStreamCommoditySettlDay
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingStreamCommoditySettlDay val = new QuickFix.Fields.UnderlyingStreamCommoditySettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            this.UnderlyingStreamCommoditySettlDay = val;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlDay Get(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlDay val)
                        {
                            return IsSetUnderlyingStreamCommoditySettlDay();
                        }

                        public bool IsSetUnderlyingStreamCommoditySettlDay()
                        {
                            return IsSetField(Tags.UnderlyingStreamCommoditySettlDay);
                        }
                        public QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours UnderlyingStreamCommoditySettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            this.UnderlyingStreamCommoditySettlTotalHours = val;
                        }

                        public QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTotalHours val)
                        {
                            return IsSetUnderlyingStreamCommoditySettlTotalHours();
                        }

                        public bool IsSetUnderlyingStreamCommoditySettlTotalHours()
                        {
                            return IsSetField(Tags.UnderlyingStreamCommoditySettlTotalHours);
                        }
                        public QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes NoUnderlyingStreamCommoditySettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val = new QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            this.NoUnderlyingStreamCommoditySettlTimes = val;
                        }

                        public QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes Get(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingStreamCommoditySettlTimes val)
                        {
                            return IsSetNoUnderlyingStreamCommoditySettlTimes();
                        }

                        public bool IsSetNoUnderlyingStreamCommoditySettlTimes()
                        {
                            return IsSetField(Tags.NoUnderlyingStreamCommoditySettlTimes);
                        }
                        public class NoUnderlyingStreamCommoditySettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingStreamCommoditySettlStart, Tags.UnderlyingStreamCommoditySettlEnd, Tags.UnderlyingStreamCommoditySettlTimeType, 0 };

                            public NoUnderlyingStreamCommoditySettlTimesGroup()
                              : base(Tags.NoUnderlyingStreamCommoditySettlTimes, Tags.UnderlyingStreamCommoditySettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingStreamCommoditySettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlStart UnderlyingStreamCommoditySettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlStart val = new QuickFix.Fields.UnderlyingStreamCommoditySettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                this.UnderlyingStreamCommoditySettlStart = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlStart Get(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlStart val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlStart();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlStart()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlStart);
                            }
                            public QuickFix.Fields.UnderlyingStreamCommoditySettlEnd UnderlyingStreamCommoditySettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val = new QuickFix.Fields.UnderlyingStreamCommoditySettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                this.UnderlyingStreamCommoditySettlEnd = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlEnd Get(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlEnd val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlEnd();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlEnd()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlEnd);
                            }
                            public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType UnderlyingStreamCommoditySettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val = new QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                this.UnderlyingStreamCommoditySettlTimeType = val;
                            }

                            public QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType Get(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingStreamCommoditySettlTimeType val)
                            {
                                return IsSetUnderlyingStreamCommoditySettlTimeType();
                            }

                            public bool IsSetUnderlyingStreamCommoditySettlTimeType()
                            {
                                return IsSetField(Tags.UnderlyingStreamCommoditySettlTimeType);
                            }

                        }
                    }
                }
                public class NoUnderlyingDeliveryStreamCommoditySourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryStreamCommoditySource, 0 };

                    public NoUnderlyingDeliveryStreamCommoditySourcesGroup()
                      : base(Tags.NoUnderlyingDeliveryStreamCommoditySources, Tags.UnderlyingDeliveryStreamCommoditySource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliveryStreamCommoditySourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource UnderlyingDeliveryStreamCommoditySource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val = new QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        this.UnderlyingDeliveryStreamCommoditySource = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource Get(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamCommoditySource val)
                    {
                        return IsSetUnderlyingDeliveryStreamCommoditySource();
                    }

                    public bool IsSetUnderlyingDeliveryStreamCommoditySource()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryStreamCommoditySource);
                    }

                }
                public class NoUnderlyingDeliveryStreamCyclesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryStreamCycleDesc, Tags.EncodedUnderlyingDeliveryStreamCycleDescLen, Tags.EncodedUnderlyingDeliveryStreamCycleDesc, 0 };

                    public NoUnderlyingDeliveryStreamCyclesGroup()
                      : base(Tags.NoUnderlyingDeliveryStreamCycles, Tags.UnderlyingDeliveryStreamCycleDesc, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliveryStreamCyclesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc UnderlyingDeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val = new QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        this.UnderlyingDeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc Get(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryStreamCycleDesc val)
                    {
                        return IsSetUnderlyingDeliveryStreamCycleDesc();
                    }

                    public bool IsSetUnderlyingDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryStreamCycleDesc);
                    }
                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen EncodedUnderlyingDeliveryStreamCycleDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val = new QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        this.EncodedUnderlyingDeliveryStreamCycleDescLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen Get(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDescLen val)
                    {
                        return IsSetEncodedUnderlyingDeliveryStreamCycleDescLen();
                    }

                    public bool IsSetEncodedUnderlyingDeliveryStreamCycleDescLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingDeliveryStreamCycleDescLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc EncodedUnderlyingDeliveryStreamCycleDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val = new QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        this.EncodedUnderlyingDeliveryStreamCycleDesc = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc Get(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingDeliveryStreamCycleDesc val)
                    {
                        return IsSetEncodedUnderlyingDeliveryStreamCycleDesc();
                    }

                    public bool IsSetEncodedUnderlyingDeliveryStreamCycleDesc()
                    {
                        return IsSetField(Tags.EncodedUnderlyingDeliveryStreamCycleDesc);
                    }

                }
                public class NoUnderlyingDeliverySchedulesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleType, Tags.UnderlyingDeliveryScheduleXID, Tags.UnderlyingDeliveryScheduleNotional, Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure, Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency, Tags.UnderlyingDeliveryScheduleNegativeTolerance, Tags.UnderlyingDeliverySchedulePositiveTolerance, Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure, Tags.UnderlyingDeliveryScheduleToleranceType, Tags.UnderlyingDeliveryScheduleSettlCountry, Tags.UnderlyingDeliveryScheduleSettlTimeZone, Tags.UnderlyingDeliveryScheduleSettlFlowType, Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction, Tags.NoUnderlyingDeliveryScheduleSettlDays, 0 };

                    public NoUnderlyingDeliverySchedulesGroup()
                      : base(Tags.NoUnderlyingDeliverySchedules, Tags.UnderlyingDeliveryScheduleType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingDeliverySchedulesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleType UnderlyingDeliveryScheduleType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleType val = new QuickFix.Fields.UnderlyingDeliveryScheduleType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        this.UnderlyingDeliveryScheduleType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleType Get(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleXID UnderlyingDeliveryScheduleXID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleXID val = new QuickFix.Fields.UnderlyingDeliveryScheduleXID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        this.UnderlyingDeliveryScheduleXID = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleXID Get(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleXID val)
                    {
                        return IsSetUnderlyingDeliveryScheduleXID();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleXID()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleXID);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotional UnderlyingDeliveryScheduleNotional
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotional val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotional();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        this.UnderlyingDeliveryScheduleNotional = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotional Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotional val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotional();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotional()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotional);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure UnderlyingDeliveryScheduleNotionalUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        this.UnderlyingDeliveryScheduleNotionalUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalUnitOfMeasure val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotionalUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotionalUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency UnderlyingDeliveryScheduleNotionalCommodityFrequency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val = new QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        this.UnderlyingDeliveryScheduleNotionalCommodityFrequency = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency Get(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNotionalCommodityFrequency val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNotionalCommodityFrequency();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNotionalCommodityFrequency()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance UnderlyingDeliveryScheduleNegativeTolerance
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val = new QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        this.UnderlyingDeliveryScheduleNegativeTolerance = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance Get(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleNegativeTolerance val)
                    {
                        return IsSetUnderlyingDeliveryScheduleNegativeTolerance();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleNegativeTolerance()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleNegativeTolerance);
                    }
                    public QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance UnderlyingDeliverySchedulePositiveTolerance
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val = new QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        this.UnderlyingDeliverySchedulePositiveTolerance = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance Get(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliverySchedulePositiveTolerance val)
                    {
                        return IsSetUnderlyingDeliverySchedulePositiveTolerance();
                    }

                    public bool IsSetUnderlyingDeliverySchedulePositiveTolerance()
                    {
                        return IsSetField(Tags.UnderlyingDeliverySchedulePositiveTolerance);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure UnderlyingDeliveryScheduleToleranceUnitOfMeasure
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val = new QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        this.UnderlyingDeliveryScheduleToleranceUnitOfMeasure = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure Get(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceUnitOfMeasure val)
                    {
                        return IsSetUnderlyingDeliveryScheduleToleranceUnitOfMeasure();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleToleranceUnitOfMeasure()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType UnderlyingDeliveryScheduleToleranceType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val = new QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        this.UnderlyingDeliveryScheduleToleranceType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType Get(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleToleranceType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleToleranceType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleToleranceType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleToleranceType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry UnderlyingDeliveryScheduleSettlCountry
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        this.UnderlyingDeliveryScheduleSettlCountry = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlCountry val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlCountry();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlCountry()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlCountry);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone UnderlyingDeliveryScheduleSettlTimeZone
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        this.UnderlyingDeliveryScheduleSettlTimeZone = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeZone val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlTimeZone();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlTimeZone()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTimeZone);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType UnderlyingDeliveryScheduleSettlFlowType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        this.UnderlyingDeliveryScheduleSettlFlowType = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlFlowType val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlFlowType();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlFlowType()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlFlowType);
                    }
                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        this.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction = val;
                    }

                    public QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction val)
                    {
                        return IsSetUnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction();
                    }

                    public bool IsSetUnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction()
                    {
                        return IsSetField(Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction);
                    }
                    public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays NoUnderlyingDeliveryScheduleSettlDays
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val = new QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        this.NoUnderlyingDeliveryScheduleSettlDays = val;
                    }

                    public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays Get(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlDays val)
                    {
                        return IsSetNoUnderlyingDeliveryScheduleSettlDays();
                    }

                    public bool IsSetNoUnderlyingDeliveryScheduleSettlDays()
                    {
                        return IsSetField(Tags.NoUnderlyingDeliveryScheduleSettlDays);
                    }
                    public class NoUnderlyingDeliveryScheduleSettlDaysGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleSettlDay, Tags.UnderlyingDeliveryScheduleSettlTotalHours, Tags.NoUnderlyingDeliveryScheduleSettlTimes, 0 };

                        public NoUnderlyingDeliveryScheduleSettlDaysGroup()
                          : base(Tags.NoUnderlyingDeliveryScheduleSettlDays, Tags.UnderlyingDeliveryScheduleSettlDay, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingDeliveryScheduleSettlDaysGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay UnderlyingDeliveryScheduleSettlDay
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            this.UnderlyingDeliveryScheduleSettlDay = val;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlDay val)
                        {
                            return IsSetUnderlyingDeliveryScheduleSettlDay();
                        }

                        public bool IsSetUnderlyingDeliveryScheduleSettlDay()
                        {
                            return IsSetField(Tags.UnderlyingDeliveryScheduleSettlDay);
                        }
                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours UnderlyingDeliveryScheduleSettlTotalHours
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            this.UnderlyingDeliveryScheduleSettlTotalHours = val;
                        }

                        public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTotalHours val)
                        {
                            return IsSetUnderlyingDeliveryScheduleSettlTotalHours();
                        }

                        public bool IsSetUnderlyingDeliveryScheduleSettlTotalHours()
                        {
                            return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTotalHours);
                        }
                        public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes NoUnderlyingDeliveryScheduleSettlTimes
                        {
                            get
                            {
                                QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val = new QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            this.NoUnderlyingDeliveryScheduleSettlTimes = val;
                        }

                        public QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes Get(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.NoUnderlyingDeliveryScheduleSettlTimes val)
                        {
                            return IsSetNoUnderlyingDeliveryScheduleSettlTimes();
                        }

                        public bool IsSetNoUnderlyingDeliveryScheduleSettlTimes()
                        {
                            return IsSetField(Tags.NoUnderlyingDeliveryScheduleSettlTimes);
                        }
                        public class NoUnderlyingDeliveryScheduleSettlTimesGroup : Group
                        {
                            public static int[] fieldOrder = { Tags.UnderlyingDeliveryScheduleSettlStart, Tags.UnderlyingDeliveryScheduleSettlEnd, Tags.UnderlyingDeliveryScheduleSettlTimeType, 0 };

                            public NoUnderlyingDeliveryScheduleSettlTimesGroup()
                              : base(Tags.NoUnderlyingDeliveryScheduleSettlTimes, Tags.UnderlyingDeliveryScheduleSettlStart, fieldOrder)
                            {
                            }

                            public override Group Clone()
                            {
                                var clone = new NoUnderlyingDeliveryScheduleSettlTimesGroup();
                                clone.CopyStateFrom(this);
                                return clone;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart UnderlyingDeliveryScheduleSettlStart
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                this.UnderlyingDeliveryScheduleSettlStart = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlStart val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlStart();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlStart()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlStart);
                            }
                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd UnderlyingDeliveryScheduleSettlEnd
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                this.UnderlyingDeliveryScheduleSettlEnd = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlEnd val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlEnd();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlEnd()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlEnd);
                            }
                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType UnderlyingDeliveryScheduleSettlTimeType
                            {
                                get
                                {
                                    QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val = new QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType();
                                    GetField(val);
                                    return val;
                                }
                                set { SetField(value); }
                            }

                            public void Set(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                this.UnderlyingDeliveryScheduleSettlTimeType = val;
                            }

                            public QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType Get(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                GetField(val);
                                return val;
                            }

                            public bool IsSet(QuickFix.Fields.UnderlyingDeliveryScheduleSettlTimeType val)
                            {
                                return IsSetUnderlyingDeliveryScheduleSettlTimeType();
                            }

                            public bool IsSetUnderlyingDeliveryScheduleSettlTimeType()
                            {
                                return IsSetField(Tags.UnderlyingDeliveryScheduleSettlTimeType);
                            }

                        }
                    }
                }
            }
            public class NoUnderlyingAssetAttributesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingAssetAttributeType, Tags.UnderlyingAssetAttributeValue, Tags.UnderlyingAssetAttributeLimit, 0 };

                public NoUnderlyingAssetAttributesGroup()
                  : base(Tags.NoUnderlyingAssetAttributes, Tags.UnderlyingAssetAttributeType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingAssetAttributesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeType UnderlyingAssetAttributeType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeType val = new QuickFix.Fields.UnderlyingAssetAttributeType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    this.UnderlyingAssetAttributeType = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeType Get(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeType val)
                {
                    return IsSetUnderlyingAssetAttributeType();
                }

                public bool IsSetUnderlyingAssetAttributeType()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeType);
                }
                public QuickFix.Fields.UnderlyingAssetAttributeValue UnderlyingAssetAttributeValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeValue val = new QuickFix.Fields.UnderlyingAssetAttributeValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    this.UnderlyingAssetAttributeValue = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeValue Get(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeValue val)
                {
                    return IsSetUnderlyingAssetAttributeValue();
                }

                public bool IsSetUnderlyingAssetAttributeValue()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeValue);
                }
                public QuickFix.Fields.UnderlyingAssetAttributeLimit UnderlyingAssetAttributeLimit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAssetAttributeLimit val = new QuickFix.Fields.UnderlyingAssetAttributeLimit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    this.UnderlyingAssetAttributeLimit = val;
                }

                public QuickFix.Fields.UnderlyingAssetAttributeLimit Get(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAssetAttributeLimit val)
                {
                    return IsSetUnderlyingAssetAttributeLimit();
                }

                public bool IsSetUnderlyingAssetAttributeLimit()
                {
                    return IsSetField(Tags.UnderlyingAssetAttributeLimit);
                }

            }
            public class NoUnderlyingPricingDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingPricingDateBusinessCenter, 0 };

                public NoUnderlyingPricingDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingPricingDateBusinessCenters, Tags.UnderlyingPricingDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingPricingDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingPricingDateBusinessCenter UnderlyingPricingDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPricingDateBusinessCenter val = new QuickFix.Fields.UnderlyingPricingDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    this.UnderlyingPricingDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingPricingDateBusinessCenter Get(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPricingDateBusinessCenter val)
                {
                    return IsSetUnderlyingPricingDateBusinessCenter();
                }

                public bool IsSetUnderlyingPricingDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingPricingDateBusinessCenter);
                }

            }
            public class NoUnderlyingMarketDisruptionEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionEvent, Tags.UnderlyingMarketDisruptionValue, 0 };

                public NoUnderlyingMarketDisruptionEventsGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionEvents, Tags.UnderlyingMarketDisruptionEvent, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionEvent UnderlyingMarketDisruptionEvent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionEvent val = new QuickFix.Fields.UnderlyingMarketDisruptionEvent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    this.UnderlyingMarketDisruptionEvent = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionEvent Get(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionEvent val)
                {
                    return IsSetUnderlyingMarketDisruptionEvent();
                }

                public bool IsSetUnderlyingMarketDisruptionEvent()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionEvent);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionValue UnderlyingMarketDisruptionValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionValue val = new QuickFix.Fields.UnderlyingMarketDisruptionValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    this.UnderlyingMarketDisruptionValue = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionValue Get(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionValue val)
                {
                    return IsSetUnderlyingMarketDisruptionValue();
                }

                public bool IsSetUnderlyingMarketDisruptionValue()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionValue);
                }

            }
            public class NoUnderlyingMarketDisruptionFallbacksGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionFallbackType, Tags.UnderlyingMarketDisruptionFallbackValue, 0 };

                public NoUnderlyingMarketDisruptionFallbacksGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionFallbacks, Tags.UnderlyingMarketDisruptionFallbackType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionFallbacksGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackType UnderlyingMarketDisruptionFallbackType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    this.UnderlyingMarketDisruptionFallbackType = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackType Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackType val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackType();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackType()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackType);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue UnderlyingMarketDisruptionFallbackValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    this.UnderlyingMarketDisruptionFallbackValue = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackValue val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackValue();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackValue()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackValue);
                }

            }
            public class NoUnderlyingMarketDisruptionFallbackReferencePricesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingMarketDisruptionFallbackUnderlierType, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource, Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen, Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, Tags.UnderlyingMarketDisruptionFallbackOpenUnits, Tags.UnderlyingMarketDisruptionFallbackBasketCurrency, Tags.UnderlyingMarketDisruptionFallbackBasketDivisor, 0 };

                public NoUnderlyingMarketDisruptionFallbackReferencePricesGroup()
                  : base(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices, Tags.UnderlyingMarketDisruptionFallbackUnderlierType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingMarketDisruptionFallbackReferencePricesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType UnderlyingMarketDisruptionFallbackUnderlierType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierType = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierType val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierType();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierType()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierType);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID UnderlyingMarketDisruptionFallbackUnderlierSecurityID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityID = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityID val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityID();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityID()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val = new QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    this.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen Get(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen val)
                {
                    return IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen();
                }

                public bool IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen);
                }
                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val = new QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    this.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = val;
                }

                public QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Get(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc val)
                {
                    return IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc();
                }

                public bool IsSetEncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
                {
                    return IsSetField(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits UnderlyingMarketDisruptionFallbackOpenUnits
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    this.UnderlyingMarketDisruptionFallbackOpenUnits = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackOpenUnits val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackOpenUnits();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackOpenUnits()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackOpenUnits);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency UnderlyingMarketDisruptionFallbackBasketCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    this.UnderlyingMarketDisruptionFallbackBasketCurrency = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketCurrency val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackBasketCurrency();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackBasketCurrency()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackBasketCurrency);
                }
                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor UnderlyingMarketDisruptionFallbackBasketDivisor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val = new QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    this.UnderlyingMarketDisruptionFallbackBasketDivisor = val;
                }

                public QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor Get(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingMarketDisruptionFallbackBasketDivisor val)
                {
                    return IsSetUnderlyingMarketDisruptionFallbackBasketDivisor();
                }

                public bool IsSetUnderlyingMarketDisruptionFallbackBasketDivisor()
                {
                    return IsSetField(Tags.UnderlyingMarketDisruptionFallbackBasketDivisor);
                }

            }
            public class NoUnderlyingOptionExerciseBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseBusinessCenter, 0 };

                public NoUnderlyingOptionExerciseBusinessCentersGroup()
                  : base(Tags.NoUnderlyingOptionExerciseBusinessCenters, Tags.UnderlyingOptionExerciseBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter UnderlyingOptionExerciseBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    this.UnderlyingOptionExerciseBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseBusinessCenter val)
                {
                    return IsSetUnderlyingOptionExerciseBusinessCenter();
                }

                public bool IsSetUnderlyingOptionExerciseBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseBusinessCenter);
                }

            }
            public class NoUnderlyingOptionExerciseDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseDate, Tags.UnderlyingOptionExerciseDateType, 0 };

                public NoUnderlyingOptionExerciseDatesGroup()
                  : base(Tags.NoUnderlyingOptionExerciseDates, Tags.UnderlyingOptionExerciseDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDate UnderlyingOptionExerciseDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseDate val = new QuickFix.Fields.UnderlyingOptionExerciseDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    this.UnderlyingOptionExerciseDate = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDate Get(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseDate val)
                {
                    return IsSetUnderlyingOptionExerciseDate();
                }

                public bool IsSetUnderlyingOptionExerciseDate()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseDate);
                }
                public QuickFix.Fields.UnderlyingOptionExerciseDateType UnderlyingOptionExerciseDateType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseDateType val = new QuickFix.Fields.UnderlyingOptionExerciseDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    this.UnderlyingOptionExerciseDateType = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseDateType Get(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseDateType val)
                {
                    return IsSetUnderlyingOptionExerciseDateType();
                }

                public bool IsSetUnderlyingOptionExerciseDateType()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseDateType);
                }

            }
            public class NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter, 0 };

                public NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters, Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseExpirationDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter UnderlyingOptionExerciseExpirationDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    this.UnderlyingOptionExerciseExpirationDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateBusinessCenter val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDateBusinessCenter();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter);
                }

            }
            public class NoUnderlyingOptionExerciseExpirationDatesGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingOptionExerciseExpirationDate, Tags.UnderlyingOptionExerciseExpirationDateType, 0 };

                public NoUnderlyingOptionExerciseExpirationDatesGroup()
                  : base(Tags.NoUnderlyingOptionExerciseExpirationDates, Tags.UnderlyingOptionExerciseExpirationDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingOptionExerciseExpirationDatesGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDate UnderlyingOptionExerciseExpirationDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    this.UnderlyingOptionExerciseExpirationDate = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDate Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDate val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDate();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDate()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDate);
                }
                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType UnderlyingOptionExerciseExpirationDateType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val = new QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    this.UnderlyingOptionExerciseExpirationDateType = val;
                }

                public QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType Get(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingOptionExerciseExpirationDateType val)
                {
                    return IsSetUnderlyingOptionExerciseExpirationDateType();
                }

                public bool IsSetUnderlyingOptionExerciseExpirationDateType()
                {
                    return IsSetField(Tags.UnderlyingOptionExerciseExpirationDateType);
                }

            }
            public class NoUnderlyingSettlMethodElectionDateBusinessCentersGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingSettlMethodElectionDateBusinessCenter, 0 };

                public NoUnderlyingSettlMethodElectionDateBusinessCentersGroup()
                  : base(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters, Tags.UnderlyingSettlMethodElectionDateBusinessCenter, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingSettlMethodElectionDateBusinessCentersGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter UnderlyingSettlMethodElectionDateBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val = new QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    this.UnderlyingSettlMethodElectionDateBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter Get(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingSettlMethodElectionDateBusinessCenter val)
                {
                    return IsSetUnderlyingSettlMethodElectionDateBusinessCenter();
                }

                public bool IsSetUnderlyingSettlMethodElectionDateBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingSettlMethodElectionDateBusinessCenter);
                }

            }
            public class NoUnderlyingProvisionsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingProvisionType, Tags.UnderlyingProvisionDateUnadjusted, Tags.UnderlyingProvisionDateBusinessDayConvention, Tags.NoUnderlyingProvisionDateBusinessCenters, Tags.UnderlyingProvisionDateAdjusted, Tags.UnderlyingProvisionDateTenorPeriod, Tags.UnderlyingProvisionDateTenorUnit, Tags.UnderlyingProvisionCalculationAgent, Tags.UnderlyingProvisionOptionSinglePartyBuyerSide, Tags.UnderlyingProvisionOptionSinglePartySellerSide, Tags.UnderlyingProvisionCashSettlValueTime, Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter, Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention, Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters, Tags.UnderlyingProvisionCashSettlValueDateRelativeTo, Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod, Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit, Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType, Tags.UnderlyingProvisionCashSettlValueDateAdjusted, Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention, Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters, Tags.NoUnderlyingProvisionOptionExerciseFixedDates, Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod, Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit, Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod, Tags.UnderlyingProvisionOptionExerciseFrequencyUnit, Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit, Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType, Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted, Tags.UnderlyingProvisionOptionExercisePeriodSkip, Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted, Tags.UnderlyingProvisionOptionExerciseEarliestTime, Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter, Tags.UnderlyingProvisionOptionExerciseLatestTime, Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter, Tags.UnderlyingProvisionOptionExpirationDateUnadjusted, Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention, Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters, Tags.UnderlyingProvisionOptionExpirationDateRelativeTo, Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod, Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit, Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType, Tags.UnderlyingProvisionOptionExpirationDateAdjusted, Tags.UnderlyingProvisionOptionExpirationTime, Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention, Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted, Tags.UnderlyingProvisionOptionExerciseStyle, Tags.UnderlyingProvisionOptionExerciseMultipleNotional, Tags.UnderlyingProvisionOptionExerciseMinimumNotional, Tags.UnderlyingProvisionOptionExerciseMaximumNotional, Tags.UnderlyingProvisionOptionMinimumNumber, Tags.UnderlyingProvisionOptionMaximumNumber, Tags.UnderlyingProvisionOptionExerciseConfirmation, Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention, Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters, Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit, Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType, Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst, Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast, Tags.NoUnderlyingProvisionCashSettlPaymentDates, Tags.UnderlyingProvisionCashSettlMethod, Tags.UnderlyingProvisionCashSettlCurrency, Tags.UnderlyingProvisionCashSettlCurrency2, Tags.UnderlyingProvisionCashSettlQuoteType, Tags.UnderlyingProvisionCashSettlQuoteSource, Tags.UnderlyingProvisionCashSettlQuoteReferencePage, Tags.UnderlyingProvisionText, Tags.EncodedUnderlyingProvisionTextLen, Tags.EncodedUnderlyingProvisionText, Tags.NoUnderlyingProvisionPartyIDs, Tags.UnderlyingProvisionBreakFeeElection, Tags.UnderlyingProvisionBreakFeeRate, 0 };

                public NoUnderlyingProvisionsGroup()
                  : base(Tags.NoUnderlyingProvisions, Tags.UnderlyingProvisionType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingProvisionsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingProvisionType UnderlyingProvisionType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionType val = new QuickFix.Fields.UnderlyingProvisionType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    this.UnderlyingProvisionType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionType Get(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionType val)
                {
                    return IsSetUnderlyingProvisionType();
                }

                public bool IsSetUnderlyingProvisionType()
                {
                    return IsSetField(Tags.UnderlyingProvisionType);
                }
                public QuickFix.Fields.UnderlyingProvisionDateUnadjusted UnderlyingProvisionDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    this.UnderlyingProvisionDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention UnderlyingProvisionDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters NoUnderlyingProvisionDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionDateAdjusted UnderlyingProvisionDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    this.UnderlyingProvisionDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionDateTenorPeriod UnderlyingProvisionDateTenorPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val = new QuickFix.Fields.UnderlyingProvisionDateTenorPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    this.UnderlyingProvisionDateTenorPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateTenorPeriod Get(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateTenorPeriod val)
                {
                    return IsSetUnderlyingProvisionDateTenorPeriod();
                }

                public bool IsSetUnderlyingProvisionDateTenorPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateTenorPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionDateTenorUnit UnderlyingProvisionDateTenorUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionDateTenorUnit val = new QuickFix.Fields.UnderlyingProvisionDateTenorUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    this.UnderlyingProvisionDateTenorUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionDateTenorUnit Get(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateTenorUnit val)
                {
                    return IsSetUnderlyingProvisionDateTenorUnit();
                }

                public bool IsSetUnderlyingProvisionDateTenorUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionDateTenorUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCalculationAgent UnderlyingProvisionCalculationAgent
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCalculationAgent val = new QuickFix.Fields.UnderlyingProvisionCalculationAgent();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    this.UnderlyingProvisionCalculationAgent = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCalculationAgent Get(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCalculationAgent val)
                {
                    return IsSetUnderlyingProvisionCalculationAgent();
                }

                public bool IsSetUnderlyingProvisionCalculationAgent()
                {
                    return IsSetField(Tags.UnderlyingProvisionCalculationAgent);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide UnderlyingProvisionOptionSinglePartyBuyerSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val = new QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    this.UnderlyingProvisionOptionSinglePartyBuyerSide = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide Get(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionSinglePartyBuyerSide val)
                {
                    return IsSetUnderlyingProvisionOptionSinglePartyBuyerSide();
                }

                public bool IsSetUnderlyingProvisionOptionSinglePartyBuyerSide()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionSinglePartyBuyerSide);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide UnderlyingProvisionOptionSinglePartySellerSide
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val = new QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    this.UnderlyingProvisionOptionSinglePartySellerSide = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide Get(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionSinglePartySellerSide val)
                {
                    return IsSetUnderlyingProvisionOptionSinglePartySellerSide();
                }

                public bool IsSetUnderlyingProvisionOptionSinglePartySellerSide()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionSinglePartySellerSide);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTime UnderlyingProvisionCashSettlValueTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    this.UnderlyingProvisionCashSettlValueTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTime Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueTime val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueTime();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueTime);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter UnderlyingProvisionCashSettlValueTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionCashSettlValueTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention UnderlyingProvisionCashSettlValueDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionCashSettlValueDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters NoUnderlyingProvisionCashSettlValueDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionCashSettlValueDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlValueDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlValueDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlValueDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo UnderlyingProvisionCashSettlValueDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    this.UnderlyingProvisionCashSettlValueDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod UnderlyingProvisionCashSettlValueDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit UnderlyingProvisionCashSettlValueDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType UnderlyingProvisionCashSettlValueDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    this.UnderlyingProvisionCashSettlValueDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted UnderlyingProvisionCashSettlValueDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    this.UnderlyingProvisionCashSettlValueDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionCashSettlValueDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionCashSettlValueDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention UnderlyingProvisionOptionExerciseBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionExerciseBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters NoUnderlyingProvisionOptionExerciseBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionExerciseBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionExerciseBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionExerciseBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates NoUnderlyingProvisionOptionExerciseFixedDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val = new QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    this.NoUnderlyingProvisionOptionExerciseFixedDates = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates Get(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExerciseFixedDates val)
                {
                    return IsSetNoUnderlyingProvisionOptionExerciseFixedDates();
                }

                public bool IsSetNoUnderlyingProvisionOptionExerciseFixedDates()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExerciseFixedDates);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod UnderlyingProvisionOptionExerciseFrequencyPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseFrequencyPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseFrequencyPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseFrequencyPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit UnderlyingProvisionOptionExerciseFrequencyUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseFrequencyUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFrequencyUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseFrequencyUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseFrequencyUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseFrequencyUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted UnderlyingProvisionOptionExerciseStartDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo UnderlyingProvisionOptionExerciseStartDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod UnderlyingProvisionOptionExerciseStartDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit UnderlyingProvisionOptionExerciseStartDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType UnderlyingProvisionOptionExerciseStartDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted UnderlyingProvisionOptionExerciseStartDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseStartDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStartDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStartDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStartDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip UnderlyingProvisionOptionExercisePeriodSkip
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val = new QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    this.UnderlyingProvisionOptionExercisePeriodSkip = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip Get(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExercisePeriodSkip val)
                {
                    return IsSetUnderlyingProvisionOptionExercisePeriodSkip();
                }

                public bool IsSetUnderlyingProvisionOptionExercisePeriodSkip()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExercisePeriodSkip);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime UnderlyingProvisionOptionExerciseEarliestTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTime val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestTime();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime UnderlyingProvisionOptionExerciseLatestTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    this.UnderlyingProvisionOptionExerciseLatestTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTime val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseLatestTime();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseLatestTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseLatestTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseLatestTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseLatestTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted UnderlyingProvisionOptionExpirationDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionExpirationDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention UnderlyingProvisionOptionExpirationDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionExpirationDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters NoUnderlyingProvisionOptionExpirationDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionExpirationDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionExpirationDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionExpirationDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionExpirationDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo UnderlyingProvisionOptionExpirationDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionExpirationDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod UnderlyingProvisionOptionExpirationDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit UnderlyingProvisionOptionExpirationDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType UnderlyingProvisionOptionExpirationDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionExpirationDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted UnderlyingProvisionOptionExpirationDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionExpirationDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTime UnderlyingProvisionOptionExpirationTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    this.UnderlyingProvisionOptionExpirationTime = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTime Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationTime val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationTime();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationTime()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationTime);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter UnderlyingProvisionOptionExpirationTimeBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    this.UnderlyingProvisionOptionExpirationTimeBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationTimeBusinessCenter val)
                {
                    return IsSetUnderlyingProvisionOptionExpirationTimeBusinessCenter();
                }

                public bool IsSetUnderlyingProvisionOptionExpirationTimeBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    this.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted val)
                {
                    return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateAdjusted();
                }

                public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle UnderlyingProvisionOptionExerciseStyle
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    this.UnderlyingProvisionOptionExerciseStyle = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseStyle val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseStyle();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseStyle()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseStyle);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional UnderlyingProvisionOptionExerciseMultipleNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMultipleNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMultipleNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMultipleNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMultipleNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMultipleNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional UnderlyingProvisionOptionExerciseMinimumNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMinimumNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMinimumNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMinimumNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMinimumNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMinimumNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional UnderlyingProvisionOptionExerciseMaximumNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    this.UnderlyingProvisionOptionExerciseMaximumNotional = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseMaximumNotional val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseMaximumNotional();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseMaximumNotional()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseMaximumNotional);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber UnderlyingProvisionOptionMinimumNumber
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val = new QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    this.UnderlyingProvisionOptionMinimumNumber = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber Get(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionMinimumNumber val)
                {
                    return IsSetUnderlyingProvisionOptionMinimumNumber();
                }

                public bool IsSetUnderlyingProvisionOptionMinimumNumber()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionMinimumNumber);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber UnderlyingProvisionOptionMaximumNumber
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val = new QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    this.UnderlyingProvisionOptionMaximumNumber = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber Get(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionMaximumNumber val)
                {
                    return IsSetUnderlyingProvisionOptionMaximumNumber();
                }

                public bool IsSetUnderlyingProvisionOptionMaximumNumber()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionMaximumNumber);
                }
                public QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation UnderlyingProvisionOptionExerciseConfirmation
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    this.UnderlyingProvisionOptionExerciseConfirmation = val;
                }

                public QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseConfirmation val)
                {
                    return IsSetUnderlyingProvisionOptionExerciseConfirmation();
                }

                public bool IsSetUnderlyingProvisionOptionExerciseConfirmation()
                {
                    return IsSetField(Tags.UnderlyingProvisionOptionExerciseConfirmation);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    this.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlPaymentDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlPaymentDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo UnderlyingProvisionCashSettlPaymentDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRelativeTo val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRelativeTo();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod UnderlyingProvisionCashSettlPaymentDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetPeriod();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit UnderlyingProvisionCashSettlPaymentDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetUnit val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetUnit();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType UnderlyingProvisionCashSettlPaymentDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateOffsetDayType val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateOffsetDayType();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst UnderlyingProvisionCashSettlPaymentDateRangeFirst
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRangeFirst = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeFirst val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRangeFirst();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRangeFirst()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast UnderlyingProvisionCashSettlPaymentDateRangeLast
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    this.UnderlyingProvisionCashSettlPaymentDateRangeLast = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateRangeLast val)
                {
                    return IsSetUnderlyingProvisionCashSettlPaymentDateRangeLast();
                }

                public bool IsSetUnderlyingProvisionCashSettlPaymentDateRangeLast()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast);
                }
                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates NoUnderlyingProvisionCashSettlPaymentDates
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val = new QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    this.NoUnderlyingProvisionCashSettlPaymentDates = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates Get(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionCashSettlPaymentDates val)
                {
                    return IsSetNoUnderlyingProvisionCashSettlPaymentDates();
                }

                public bool IsSetNoUnderlyingProvisionCashSettlPaymentDates()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionCashSettlPaymentDates);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlMethod UnderlyingProvisionCashSettlMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlMethod val = new QuickFix.Fields.UnderlyingProvisionCashSettlMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    this.UnderlyingProvisionCashSettlMethod = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlMethod Get(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlMethod val)
                {
                    return IsSetUnderlyingProvisionCashSettlMethod();
                }

                public bool IsSetUnderlyingProvisionCashSettlMethod()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlMethod);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency UnderlyingProvisionCashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val = new QuickFix.Fields.UnderlyingProvisionCashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    this.UnderlyingProvisionCashSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency Get(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency val)
                {
                    return IsSetUnderlyingProvisionCashSettlCurrency();
                }

                public bool IsSetUnderlyingProvisionCashSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 UnderlyingProvisionCashSettlCurrency2
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val = new QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    this.UnderlyingProvisionCashSettlCurrency2 = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 Get(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlCurrency2 val)
                {
                    return IsSetUnderlyingProvisionCashSettlCurrency2();
                }

                public bool IsSetUnderlyingProvisionCashSettlCurrency2()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlCurrency2);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType UnderlyingProvisionCashSettlQuoteType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    this.UnderlyingProvisionCashSettlQuoteType = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteType val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteType();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteType()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteType);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource UnderlyingProvisionCashSettlQuoteSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    this.UnderlyingProvisionCashSettlQuoteSource = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteSource val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteSource();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteSource()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteSource);
                }
                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage UnderlyingProvisionCashSettlQuoteReferencePage
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val = new QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    this.UnderlyingProvisionCashSettlQuoteReferencePage = val;
                }

                public QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage Get(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlQuoteReferencePage val)
                {
                    return IsSetUnderlyingProvisionCashSettlQuoteReferencePage();
                }

                public bool IsSetUnderlyingProvisionCashSettlQuoteReferencePage()
                {
                    return IsSetField(Tags.UnderlyingProvisionCashSettlQuoteReferencePage);
                }
                public QuickFix.Fields.UnderlyingProvisionText UnderlyingProvisionText
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionText val = new QuickFix.Fields.UnderlyingProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    this.UnderlyingProvisionText = val;
                }

                public QuickFix.Fields.UnderlyingProvisionText Get(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionText val)
                {
                    return IsSetUnderlyingProvisionText();
                }

                public bool IsSetUnderlyingProvisionText()
                {
                    return IsSetField(Tags.UnderlyingProvisionText);
                }
                public QuickFix.Fields.EncodedUnderlyingProvisionTextLen EncodedUnderlyingProvisionTextLen
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingProvisionTextLen val = new QuickFix.Fields.EncodedUnderlyingProvisionTextLen();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    this.EncodedUnderlyingProvisionTextLen = val;
                }

                public QuickFix.Fields.EncodedUnderlyingProvisionTextLen Get(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingProvisionTextLen val)
                {
                    return IsSetEncodedUnderlyingProvisionTextLen();
                }

                public bool IsSetEncodedUnderlyingProvisionTextLen()
                {
                    return IsSetField(Tags.EncodedUnderlyingProvisionTextLen);
                }
                public QuickFix.Fields.EncodedUnderlyingProvisionText EncodedUnderlyingProvisionText
                {
                    get
                    {
                        QuickFix.Fields.EncodedUnderlyingProvisionText val = new QuickFix.Fields.EncodedUnderlyingProvisionText();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    this.EncodedUnderlyingProvisionText = val;
                }

                public QuickFix.Fields.EncodedUnderlyingProvisionText Get(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.EncodedUnderlyingProvisionText val)
                {
                    return IsSetEncodedUnderlyingProvisionText();
                }

                public bool IsSetEncodedUnderlyingProvisionText()
                {
                    return IsSetField(Tags.EncodedUnderlyingProvisionText);
                }
                public QuickFix.Fields.NoUnderlyingProvisionPartyIDs NoUnderlyingProvisionPartyIDs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProvisionPartyIDs val = new QuickFix.Fields.NoUnderlyingProvisionPartyIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    this.NoUnderlyingProvisionPartyIDs = val;
                }

                public QuickFix.Fields.NoUnderlyingProvisionPartyIDs Get(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionPartyIDs val)
                {
                    return IsSetNoUnderlyingProvisionPartyIDs();
                }

                public bool IsSetNoUnderlyingProvisionPartyIDs()
                {
                    return IsSetField(Tags.NoUnderlyingProvisionPartyIDs);
                }
                public QuickFix.Fields.UnderlyingProvisionBreakFeeElection UnderlyingProvisionBreakFeeElection
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionBreakFeeElection val = new QuickFix.Fields.UnderlyingProvisionBreakFeeElection();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    this.UnderlyingProvisionBreakFeeElection = val;
                }

                public QuickFix.Fields.UnderlyingProvisionBreakFeeElection Get(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionBreakFeeElection val)
                {
                    return IsSetUnderlyingProvisionBreakFeeElection();
                }

                public bool IsSetUnderlyingProvisionBreakFeeElection()
                {
                    return IsSetField(Tags.UnderlyingProvisionBreakFeeElection);
                }
                public QuickFix.Fields.UnderlyingProvisionBreakFeeRate UnderlyingProvisionBreakFeeRate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProvisionBreakFeeRate val = new QuickFix.Fields.UnderlyingProvisionBreakFeeRate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    this.UnderlyingProvisionBreakFeeRate = val;
                }

                public QuickFix.Fields.UnderlyingProvisionBreakFeeRate Get(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProvisionBreakFeeRate val)
                {
                    return IsSetUnderlyingProvisionBreakFeeRate();
                }

                public bool IsSetUnderlyingProvisionBreakFeeRate()
                {
                    return IsSetField(Tags.UnderlyingProvisionBreakFeeRate);
                }
                public class NoUnderlyingProvisionDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionDateBusinessCenters, Tags.UnderlyingProvisionDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionDateBusinessCenter UnderlyingProvisionDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters, Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlValueDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter UnderlyingProvisionCashSettlValueDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionCashSettlValueDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlValueDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionCashSettlValueDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlValueDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionExerciseBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExerciseBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionExerciseBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters, Tags.UnderlyingProvisionOptionExerciseBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExerciseBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter UnderlyingProvisionOptionExerciseBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionExerciseBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionExerciseFixedDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExerciseFixedDate, Tags.UnderlyingProvisionOptionExerciseFixedDateType, 0 };

                    public NoUnderlyingProvisionOptionExerciseFixedDatesGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExerciseFixedDates, Tags.UnderlyingProvisionOptionExerciseFixedDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExerciseFixedDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate UnderlyingProvisionOptionExerciseFixedDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        this.UnderlyingProvisionOptionExerciseFixedDate = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDate val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseFixedDate();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseFixedDate()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseFixedDate);
                    }
                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType UnderlyingProvisionOptionExerciseFixedDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val = new QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        this.UnderlyingProvisionOptionExerciseFixedDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType Get(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExerciseFixedDateType val)
                    {
                        return IsSetUnderlyingProvisionOptionExerciseFixedDateType();
                    }

                    public bool IsSetUnderlyingProvisionOptionExerciseFixedDateType()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExerciseFixedDateType);
                    }

                }
                public class NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters, Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionExpirationDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter UnderlyingProvisionOptionExpirationDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionExpirationDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionExpirationDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionExpirationDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionExpirationDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters, Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter, 0 };

                    public NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters, Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlPaymentDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter UnderlyingProvisionCashSettlPaymentDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateBusinessCenter val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter);
                    }

                }
                public class NoUnderlyingProvisionCashSettlPaymentDatesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionCashSettlPaymentDate, Tags.UnderlyingProvisionCashSettlPaymentDateType, 0 };

                    public NoUnderlyingProvisionCashSettlPaymentDatesGroup()
                      : base(Tags.NoUnderlyingProvisionCashSettlPaymentDates, Tags.UnderlyingProvisionCashSettlPaymentDate, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionCashSettlPaymentDatesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate UnderlyingProvisionCashSettlPaymentDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDate = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDate val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDate();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDate()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDate);
                    }
                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType UnderlyingProvisionCashSettlPaymentDateType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val = new QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        this.UnderlyingProvisionCashSettlPaymentDateType = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType Get(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionCashSettlPaymentDateType val)
                    {
                        return IsSetUnderlyingProvisionCashSettlPaymentDateType();
                    }

                    public bool IsSetUnderlyingProvisionCashSettlPaymentDateType()
                    {
                        return IsSetField(Tags.UnderlyingProvisionCashSettlPaymentDateType);
                    }

                }
                public class NoUnderlyingProvisionPartyIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProvisionPartyID, Tags.UnderlyingProvisionPartyIDSource, Tags.UnderlyingProvisionPartyRole, Tags.UnderlyingProvisionPartyRoleQualifier, Tags.NoUnderlyingProvisionPartySubIDs, 0 };

                    public NoUnderlyingProvisionPartyIDsGroup()
                      : base(Tags.NoUnderlyingProvisionPartyIDs, Tags.UnderlyingProvisionPartyID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProvisionPartyIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyID UnderlyingProvisionPartyID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyID val = new QuickFix.Fields.UnderlyingProvisionPartyID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        this.UnderlyingProvisionPartyID = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyID Get(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyID val)
                    {
                        return IsSetUnderlyingProvisionPartyID();
                    }

                    public bool IsSetUnderlyingProvisionPartyID()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyID);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyIDSource UnderlyingProvisionPartyIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyIDSource val = new QuickFix.Fields.UnderlyingProvisionPartyIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        this.UnderlyingProvisionPartyIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyIDSource Get(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyIDSource val)
                    {
                        return IsSetUnderlyingProvisionPartyIDSource();
                    }

                    public bool IsSetUnderlyingProvisionPartyIDSource()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyIDSource);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyRole UnderlyingProvisionPartyRole
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyRole val = new QuickFix.Fields.UnderlyingProvisionPartyRole();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        this.UnderlyingProvisionPartyRole = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyRole Get(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyRole val)
                    {
                        return IsSetUnderlyingProvisionPartyRole();
                    }

                    public bool IsSetUnderlyingProvisionPartyRole()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyRole);
                    }
                    public QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier UnderlyingProvisionPartyRoleQualifier
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val = new QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        this.UnderlyingProvisionPartyRoleQualifier = val;
                    }

                    public QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier Get(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartyRoleQualifier val)
                    {
                        return IsSetUnderlyingProvisionPartyRoleQualifier();
                    }

                    public bool IsSetUnderlyingProvisionPartyRoleQualifier()
                    {
                        return IsSetField(Tags.UnderlyingProvisionPartyRoleQualifier);
                    }
                    public QuickFix.Fields.NoUnderlyingProvisionPartySubIDs NoUnderlyingProvisionPartySubIDs
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val = new QuickFix.Fields.NoUnderlyingProvisionPartySubIDs();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        this.NoUnderlyingProvisionPartySubIDs = val;
                    }

                    public QuickFix.Fields.NoUnderlyingProvisionPartySubIDs Get(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingProvisionPartySubIDs val)
                    {
                        return IsSetNoUnderlyingProvisionPartySubIDs();
                    }

                    public bool IsSetNoUnderlyingProvisionPartySubIDs()
                    {
                        return IsSetField(Tags.NoUnderlyingProvisionPartySubIDs);
                    }
                    public class NoUnderlyingProvisionPartySubIDsGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingProvisionPartySubID, Tags.UnderlyingProvisionPartySubIDType, 0 };

                        public NoUnderlyingProvisionPartySubIDsGroup()
                          : base(Tags.NoUnderlyingProvisionPartySubIDs, Tags.UnderlyingProvisionPartySubID, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingProvisionPartySubIDsGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubID UnderlyingProvisionPartySubID
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProvisionPartySubID val = new QuickFix.Fields.UnderlyingProvisionPartySubID();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            this.UnderlyingProvisionPartySubID = val;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubID Get(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartySubID val)
                        {
                            return IsSetUnderlyingProvisionPartySubID();
                        }

                        public bool IsSetUnderlyingProvisionPartySubID()
                        {
                            return IsSetField(Tags.UnderlyingProvisionPartySubID);
                        }
                        public QuickFix.Fields.UnderlyingProvisionPartySubIDType UnderlyingProvisionPartySubIDType
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProvisionPartySubIDType val = new QuickFix.Fields.UnderlyingProvisionPartySubIDType();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            this.UnderlyingProvisionPartySubIDType = val;
                        }

                        public QuickFix.Fields.UnderlyingProvisionPartySubIDType Get(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProvisionPartySubIDType val)
                        {
                            return IsSetUnderlyingProvisionPartySubIDType();
                        }

                        public bool IsSetUnderlyingProvisionPartySubIDType()
                        {
                            return IsSetField(Tags.UnderlyingProvisionPartySubIDType);
                        }

                    }
                }
            }
            public class NoUnderlyingAdditionalTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator, Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator, Tags.NoUnderlyingAdditionalTermBondRefs, 0 };

                public NoUnderlyingAdditionalTermsGroup()
                  : base(Tags.NoUnderlyingAdditionalTerms, Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingAdditionalTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator UnderlyingAdditionalTermConditionPrecedentBondIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val = new QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    this.UnderlyingAdditionalTermConditionPrecedentBondIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator Get(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermConditionPrecedentBondIndicator val)
                {
                    return IsSetUnderlyingAdditionalTermConditionPrecedentBondIndicator();
                }

                public bool IsSetUnderlyingAdditionalTermConditionPrecedentBondIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator);
                }
                public QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator UnderlyingAdditionalTermDiscrepancyClauseIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val = new QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    this.UnderlyingAdditionalTermDiscrepancyClauseIndicator = val;
                }

                public QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator Get(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermDiscrepancyClauseIndicator val)
                {
                    return IsSetUnderlyingAdditionalTermDiscrepancyClauseIndicator();
                }

                public bool IsSetUnderlyingAdditionalTermDiscrepancyClauseIndicator()
                {
                    return IsSetField(Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator);
                }
                public QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs NoUnderlyingAdditionalTermBondRefs
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val = new QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    this.NoUnderlyingAdditionalTermBondRefs = val;
                }

                public QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs Get(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingAdditionalTermBondRefs val)
                {
                    return IsSetNoUnderlyingAdditionalTermBondRefs();
                }

                public bool IsSetNoUnderlyingAdditionalTermBondRefs()
                {
                    return IsSetField(Tags.NoUnderlyingAdditionalTermBondRefs);
                }
                public class NoUnderlyingAdditionalTermBondRefsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingAdditionalTermBondSecurityID, Tags.UnderlyingAdditionalTermBondSecurityIDSource, Tags.UnderlyingAdditionalTermBondDesc, Tags.EncodedUnderlyingAdditionalTermBondDescLen, Tags.EncodedUnderlyingAdditionalTermBondDesc, Tags.UnderlyingAdditionalTermBondCurrency, Tags.UnderlyingAdditionalTermBondIssuer, Tags.EncodedUnderlyingAdditionalTermBondIssuerLen, Tags.EncodedUnderlyingAdditionalTermBondIssuer, Tags.UnderlyingAdditionalTermBondSeniority, Tags.UnderlyingAdditionalTermBondCouponType, Tags.UnderlyingAdditionalTermBondCouponRate, Tags.UnderlyingAdditionalTermBondMaturityDate, Tags.UnderlyingAdditionalTermBondParValue, Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount, Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod, Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit, Tags.UnderlyingAdditionalTermBondDayCount, 0 };

                    public NoUnderlyingAdditionalTermBondRefsGroup()
                      : base(Tags.NoUnderlyingAdditionalTermBondRefs, Tags.UnderlyingAdditionalTermBondSecurityID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingAdditionalTermBondRefsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID UnderlyingAdditionalTermBondSecurityID
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val = new QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        this.UnderlyingAdditionalTermBondSecurityID = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID Get(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityID val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSecurityID();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSecurityID()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSecurityID);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource UnderlyingAdditionalTermBondSecurityIDSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val = new QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        this.UnderlyingAdditionalTermBondSecurityIDSource = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource Get(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSecurityIDSource val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSecurityIDSource();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSecurityIDSource()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSecurityIDSource);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondDesc UnderlyingAdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondDesc val = new QuickFix.Fields.UnderlyingAdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        this.UnderlyingAdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondDesc Get(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondDesc val)
                    {
                        return IsSetUnderlyingAdditionalTermBondDesc();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen EncodedUnderlyingAdditionalTermBondDescLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondDescLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDescLen val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondDescLen();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondDescLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondDescLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc EncodedUnderlyingAdditionalTermBondDesc
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondDesc = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondDesc val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondDesc();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondDesc()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondDesc);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrency UnderlyingAdditionalTermBondCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val = new QuickFix.Fields.UnderlyingAdditionalTermBondCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        this.UnderlyingAdditionalTermBondCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrency Get(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCurrency val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCurrency();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCurrency()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCurrency);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondIssuer UnderlyingAdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val = new QuickFix.Fields.UnderlyingAdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        this.UnderlyingAdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondIssuer Get(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondIssuer val)
                    {
                        return IsSetUnderlyingAdditionalTermBondIssuer();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen EncodedUnderlyingAdditionalTermBondIssuerLen
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondIssuerLen = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuerLen val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondIssuerLen();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondIssuerLen()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondIssuerLen);
                    }
                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer EncodedUnderlyingAdditionalTermBondIssuer
                    {
                        get
                        {
                            QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val = new QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        this.EncodedUnderlyingAdditionalTermBondIssuer = val;
                    }

                    public QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer Get(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.EncodedUnderlyingAdditionalTermBondIssuer val)
                    {
                        return IsSetEncodedUnderlyingAdditionalTermBondIssuer();
                    }

                    public bool IsSetEncodedUnderlyingAdditionalTermBondIssuer()
                    {
                        return IsSetField(Tags.EncodedUnderlyingAdditionalTermBondIssuer);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondSeniority UnderlyingAdditionalTermBondSeniority
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val = new QuickFix.Fields.UnderlyingAdditionalTermBondSeniority();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        this.UnderlyingAdditionalTermBondSeniority = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondSeniority Get(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondSeniority val)
                    {
                        return IsSetUnderlyingAdditionalTermBondSeniority();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondSeniority()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondSeniority);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponType UnderlyingAdditionalTermBondCouponType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        this.UnderlyingAdditionalTermBondCouponType = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponType Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponType val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponType();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponType()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponType);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate UnderlyingAdditionalTermBondCouponRate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        this.UnderlyingAdditionalTermBondCouponRate = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponRate val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponRate();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponRate()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponRate);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate UnderlyingAdditionalTermBondMaturityDate
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val = new QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        this.UnderlyingAdditionalTermBondMaturityDate = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate Get(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondMaturityDate val)
                    {
                        return IsSetUnderlyingAdditionalTermBondMaturityDate();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondMaturityDate()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondMaturityDate);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondParValue UnderlyingAdditionalTermBondParValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondParValue val = new QuickFix.Fields.UnderlyingAdditionalTermBondParValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        this.UnderlyingAdditionalTermBondParValue = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondParValue Get(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondParValue val)
                    {
                        return IsSetUnderlyingAdditionalTermBondParValue();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondParValue()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondParValue);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount UnderlyingAdditionalTermBondCurrentTotalIssuedAmount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val = new QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        this.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount Get(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCurrentTotalIssuedAmount();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCurrentTotalIssuedAmount()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod UnderlyingAdditionalTermBondCouponFrequencyPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        this.UnderlyingAdditionalTermBondCouponFrequencyPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyPeriod val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponFrequencyPeriod();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponFrequencyPeriod()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit UnderlyingAdditionalTermBondCouponFrequencyUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val = new QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        this.UnderlyingAdditionalTermBondCouponFrequencyUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit Get(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondCouponFrequencyUnit val)
                    {
                        return IsSetUnderlyingAdditionalTermBondCouponFrequencyUnit();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondCouponFrequencyUnit()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit);
                    }
                    public QuickFix.Fields.UnderlyingAdditionalTermBondDayCount UnderlyingAdditionalTermBondDayCount
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val = new QuickFix.Fields.UnderlyingAdditionalTermBondDayCount();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        this.UnderlyingAdditionalTermBondDayCount = val;
                    }

                    public QuickFix.Fields.UnderlyingAdditionalTermBondDayCount Get(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingAdditionalTermBondDayCount val)
                    {
                        return IsSetUnderlyingAdditionalTermBondDayCount();
                    }

                    public bool IsSetUnderlyingAdditionalTermBondDayCount()
                    {
                        return IsSetField(Tags.UnderlyingAdditionalTermBondDayCount);
                    }

                }
            }
            public class NoUnderlyingProtectionTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingProtectionTermNotional, Tags.UnderlyingProtectionTermCurrency, Tags.UnderlyingProtectionTermSellerNotifies, Tags.UnderlyingProtectionTermBuyerNotifies, Tags.UnderlyingProtectionTermEventBusinessCenter, Tags.UnderlyingProtectionTermStandardSources, Tags.UnderlyingProtectionTermEventMinimumSources, Tags.NoUnderlyingProtectionTermEventNewsSources, Tags.NoUnderlyingProtectionTermEvents, Tags.NoUnderlyingProtectionTermObligations, Tags.UnderlyingProtectionTermXID, 0 };

                public NoUnderlyingProtectionTermsGroup()
                  : base(Tags.NoUnderlyingProtectionTerms, Tags.UnderlyingProtectionTermNotional, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingProtectionTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingProtectionTermNotional UnderlyingProtectionTermNotional
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermNotional val = new QuickFix.Fields.UnderlyingProtectionTermNotional();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    this.UnderlyingProtectionTermNotional = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermNotional Get(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermNotional val)
                {
                    return IsSetUnderlyingProtectionTermNotional();
                }

                public bool IsSetUnderlyingProtectionTermNotional()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermNotional);
                }
                public QuickFix.Fields.UnderlyingProtectionTermCurrency UnderlyingProtectionTermCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermCurrency val = new QuickFix.Fields.UnderlyingProtectionTermCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    this.UnderlyingProtectionTermCurrency = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermCurrency Get(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermCurrency val)
                {
                    return IsSetUnderlyingProtectionTermCurrency();
                }

                public bool IsSetUnderlyingProtectionTermCurrency()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermCurrency);
                }
                public QuickFix.Fields.UnderlyingProtectionTermSellerNotifies UnderlyingProtectionTermSellerNotifies
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val = new QuickFix.Fields.UnderlyingProtectionTermSellerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    this.UnderlyingProtectionTermSellerNotifies = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermSellerNotifies Get(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermSellerNotifies val)
                {
                    return IsSetUnderlyingProtectionTermSellerNotifies();
                }

                public bool IsSetUnderlyingProtectionTermSellerNotifies()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermSellerNotifies);
                }
                public QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies UnderlyingProtectionTermBuyerNotifies
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val = new QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    this.UnderlyingProtectionTermBuyerNotifies = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies Get(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermBuyerNotifies val)
                {
                    return IsSetUnderlyingProtectionTermBuyerNotifies();
                }

                public bool IsSetUnderlyingProtectionTermBuyerNotifies()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermBuyerNotifies);
                }
                public QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter UnderlyingProtectionTermEventBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val = new QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    this.UnderlyingProtectionTermEventBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter Get(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventBusinessCenter val)
                {
                    return IsSetUnderlyingProtectionTermEventBusinessCenter();
                }

                public bool IsSetUnderlyingProtectionTermEventBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermEventBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingProtectionTermStandardSources UnderlyingProtectionTermStandardSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermStandardSources val = new QuickFix.Fields.UnderlyingProtectionTermStandardSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    this.UnderlyingProtectionTermStandardSources = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermStandardSources Get(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermStandardSources val)
                {
                    return IsSetUnderlyingProtectionTermStandardSources();
                }

                public bool IsSetUnderlyingProtectionTermStandardSources()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermStandardSources);
                }
                public QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources UnderlyingProtectionTermEventMinimumSources
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val = new QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    this.UnderlyingProtectionTermEventMinimumSources = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources Get(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventMinimumSources val)
                {
                    return IsSetUnderlyingProtectionTermEventMinimumSources();
                }

                public bool IsSetUnderlyingProtectionTermEventMinimumSources()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermEventMinimumSources);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources NoUnderlyingProtectionTermEventNewsSources
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val = new QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    this.NoUnderlyingProtectionTermEventNewsSources = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources Get(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEventNewsSources val)
                {
                    return IsSetNoUnderlyingProtectionTermEventNewsSources();
                }

                public bool IsSetNoUnderlyingProtectionTermEventNewsSources()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermEventNewsSources);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermEvents NoUnderlyingProtectionTermEvents
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermEvents val = new QuickFix.Fields.NoUnderlyingProtectionTermEvents();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    this.NoUnderlyingProtectionTermEvents = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermEvents Get(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEvents val)
                {
                    return IsSetNoUnderlyingProtectionTermEvents();
                }

                public bool IsSetNoUnderlyingProtectionTermEvents()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermEvents);
                }
                public QuickFix.Fields.NoUnderlyingProtectionTermObligations NoUnderlyingProtectionTermObligations
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingProtectionTermObligations val = new QuickFix.Fields.NoUnderlyingProtectionTermObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    this.NoUnderlyingProtectionTermObligations = val;
                }

                public QuickFix.Fields.NoUnderlyingProtectionTermObligations Get(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermObligations val)
                {
                    return IsSetNoUnderlyingProtectionTermObligations();
                }

                public bool IsSetNoUnderlyingProtectionTermObligations()
                {
                    return IsSetField(Tags.NoUnderlyingProtectionTermObligations);
                }
                public QuickFix.Fields.UnderlyingProtectionTermXID UnderlyingProtectionTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingProtectionTermXID val = new QuickFix.Fields.UnderlyingProtectionTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    this.UnderlyingProtectionTermXID = val;
                }

                public QuickFix.Fields.UnderlyingProtectionTermXID Get(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermXID val)
                {
                    return IsSetUnderlyingProtectionTermXID();
                }

                public bool IsSetUnderlyingProtectionTermXID()
                {
                    return IsSetField(Tags.UnderlyingProtectionTermXID);
                }
                public class NoUnderlyingProtectionTermEventNewsSourcesGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventNewsSource, 0 };

                    public NoUnderlyingProtectionTermEventNewsSourcesGroup()
                      : base(Tags.NoUnderlyingProtectionTermEventNewsSources, Tags.UnderlyingProtectionTermEventNewsSource, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermEventNewsSourcesGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventNewsSource UnderlyingProtectionTermEventNewsSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val = new QuickFix.Fields.UnderlyingProtectionTermEventNewsSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        this.UnderlyingProtectionTermEventNewsSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventNewsSource Get(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventNewsSource val)
                    {
                        return IsSetUnderlyingProtectionTermEventNewsSource();
                    }

                    public bool IsSetUnderlyingProtectionTermEventNewsSource()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventNewsSource);
                    }

                }
                public class NoUnderlyingProtectionTermEventsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventType, Tags.UnderlyingProtectionTermEventValue, Tags.UnderlyingProtectionTermEventCurrency, Tags.UnderlyingProtectionTermEventPeriod, Tags.UnderlyingProtectionTermEventUnit, Tags.UnderlyingProtectionTermEventDayType, Tags.UnderlyingProtectionTermEventRateSource, Tags.NoUnderlyingProtectionTermEventQualifiers, 0 };

                    public NoUnderlyingProtectionTermEventsGroup()
                      : base(Tags.NoUnderlyingProtectionTermEvents, Tags.UnderlyingProtectionTermEventType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermEventsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventType UnderlyingProtectionTermEventType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventType val = new QuickFix.Fields.UnderlyingProtectionTermEventType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        this.UnderlyingProtectionTermEventType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventType Get(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventType val)
                    {
                        return IsSetUnderlyingProtectionTermEventType();
                    }

                    public bool IsSetUnderlyingProtectionTermEventType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventValue UnderlyingProtectionTermEventValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventValue val = new QuickFix.Fields.UnderlyingProtectionTermEventValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        this.UnderlyingProtectionTermEventValue = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventValue Get(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventValue val)
                    {
                        return IsSetUnderlyingProtectionTermEventValue();
                    }

                    public bool IsSetUnderlyingProtectionTermEventValue()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventValue);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventCurrency UnderlyingProtectionTermEventCurrency
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventCurrency val = new QuickFix.Fields.UnderlyingProtectionTermEventCurrency();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        this.UnderlyingProtectionTermEventCurrency = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventCurrency Get(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventCurrency val)
                    {
                        return IsSetUnderlyingProtectionTermEventCurrency();
                    }

                    public bool IsSetUnderlyingProtectionTermEventCurrency()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventCurrency);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventPeriod UnderlyingProtectionTermEventPeriod
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventPeriod val = new QuickFix.Fields.UnderlyingProtectionTermEventPeriod();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        this.UnderlyingProtectionTermEventPeriod = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventPeriod Get(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventPeriod val)
                    {
                        return IsSetUnderlyingProtectionTermEventPeriod();
                    }

                    public bool IsSetUnderlyingProtectionTermEventPeriod()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventPeriod);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventUnit UnderlyingProtectionTermEventUnit
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventUnit val = new QuickFix.Fields.UnderlyingProtectionTermEventUnit();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        this.UnderlyingProtectionTermEventUnit = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventUnit Get(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventUnit val)
                    {
                        return IsSetUnderlyingProtectionTermEventUnit();
                    }

                    public bool IsSetUnderlyingProtectionTermEventUnit()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventUnit);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventDayType UnderlyingProtectionTermEventDayType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventDayType val = new QuickFix.Fields.UnderlyingProtectionTermEventDayType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        this.UnderlyingProtectionTermEventDayType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventDayType Get(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventDayType val)
                    {
                        return IsSetUnderlyingProtectionTermEventDayType();
                    }

                    public bool IsSetUnderlyingProtectionTermEventDayType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventDayType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermEventRateSource UnderlyingProtectionTermEventRateSource
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermEventRateSource val = new QuickFix.Fields.UnderlyingProtectionTermEventRateSource();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        this.UnderlyingProtectionTermEventRateSource = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermEventRateSource Get(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventRateSource val)
                    {
                        return IsSetUnderlyingProtectionTermEventRateSource();
                    }

                    public bool IsSetUnderlyingProtectionTermEventRateSource()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermEventRateSource);
                    }
                    public QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers NoUnderlyingProtectionTermEventQualifiers
                    {
                        get
                        {
                            QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val = new QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        this.NoUnderlyingProtectionTermEventQualifiers = val;
                    }

                    public QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers Get(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.NoUnderlyingProtectionTermEventQualifiers val)
                    {
                        return IsSetNoUnderlyingProtectionTermEventQualifiers();
                    }

                    public bool IsSetNoUnderlyingProtectionTermEventQualifiers()
                    {
                        return IsSetField(Tags.NoUnderlyingProtectionTermEventQualifiers);
                    }
                    public class NoUnderlyingProtectionTermEventQualifiersGroup : Group
                    {
                        public static int[] fieldOrder = { Tags.UnderlyingProtectionTermEventQualifier, 0 };

                        public NoUnderlyingProtectionTermEventQualifiersGroup()
                          : base(Tags.NoUnderlyingProtectionTermEventQualifiers, Tags.UnderlyingProtectionTermEventQualifier, fieldOrder)
                        {
                        }

                        public override Group Clone()
                        {
                            var clone = new NoUnderlyingProtectionTermEventQualifiersGroup();
                            clone.CopyStateFrom(this);
                            return clone;
                        }

                        public QuickFix.Fields.UnderlyingProtectionTermEventQualifier UnderlyingProtectionTermEventQualifier
                        {
                            get
                            {
                                QuickFix.Fields.UnderlyingProtectionTermEventQualifier val = new QuickFix.Fields.UnderlyingProtectionTermEventQualifier();
                                GetField(val);
                                return val;
                            }
                            set { SetField(value); }
                        }

                        public void Set(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            this.UnderlyingProtectionTermEventQualifier = val;
                        }

                        public QuickFix.Fields.UnderlyingProtectionTermEventQualifier Get(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            GetField(val);
                            return val;
                        }

                        public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermEventQualifier val)
                        {
                            return IsSetUnderlyingProtectionTermEventQualifier();
                        }

                        public bool IsSetUnderlyingProtectionTermEventQualifier()
                        {
                            return IsSetField(Tags.UnderlyingProtectionTermEventQualifier);
                        }

                    }
                }
                public class NoUnderlyingProtectionTermObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingProtectionTermObligationType, Tags.UnderlyingProtectionTermObligationValue, 0 };

                    public NoUnderlyingProtectionTermObligationsGroup()
                      : base(Tags.NoUnderlyingProtectionTermObligations, Tags.UnderlyingProtectionTermObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingProtectionTermObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationType UnderlyingProtectionTermObligationType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermObligationType val = new QuickFix.Fields.UnderlyingProtectionTermObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        this.UnderlyingProtectionTermObligationType = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationType Get(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermObligationType val)
                    {
                        return IsSetUnderlyingProtectionTermObligationType();
                    }

                    public bool IsSetUnderlyingProtectionTermObligationType()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermObligationType);
                    }
                    public QuickFix.Fields.UnderlyingProtectionTermObligationValue UnderlyingProtectionTermObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingProtectionTermObligationValue val = new QuickFix.Fields.UnderlyingProtectionTermObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        this.UnderlyingProtectionTermObligationValue = val;
                    }

                    public QuickFix.Fields.UnderlyingProtectionTermObligationValue Get(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingProtectionTermObligationValue val)
                    {
                        return IsSetUnderlyingProtectionTermObligationValue();
                    }

                    public bool IsSetUnderlyingProtectionTermObligationValue()
                    {
                        return IsSetField(Tags.UnderlyingProtectionTermObligationValue);
                    }

                }
            }
            public class NoUnderlyingCashSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingCashSettlCurrency, Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset, Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset, Tags.UnderlyingCashSettlNumOfValuationDates, Tags.UnderlyingCashSettlValuationTime, Tags.UnderlyingCashSettlBusinessCenter, Tags.UnderlyingCashSettlQuoteMethod, Tags.UnderlyingCashSettlQuoteAmount, Tags.UnderlyingCashSettlQuoteCurrency, Tags.UnderlyingCashSettlMinimumQuoteAmount, Tags.UnderlyingCashSettlMinimumQuoteCurrency, Tags.NoUnderlyingCashSettlDealers, Tags.UnderlyingCashSettlBusinessDays, Tags.UnderlyingCashSettlAmount, Tags.UnderlyingCashSettlRecoveryFactor, Tags.UnderlyingCashSettlFixedTermIndicator, Tags.UnderlyingCashSettlAccruedInterestIndicator, Tags.UnderlyingCashSettlValuationMethod, Tags.UnderlyingCashSettlTermXID, Tags.UnderlyingCashSettlPriceSource, Tags.UnderlyingCashSettlPriceDefault, Tags.UnderlyingCashSettlDateUnadjusted, Tags.UnderlyingCashSettlDateBusinessDayConvention, Tags.NoUnderlyingCashSettlDateBusinessCenters, Tags.UnderlyingCashSettlDateRelativeTo, Tags.UnderlyingCashSettlDateOffsetPeriod, Tags.UnderlyingCashSettlDateOffsetUnit, Tags.UnderlyingCashSettlDateOffsetDayType, Tags.UnderlyingCashSettlDateAdjusted, 0 };

                public NoUnderlyingCashSettlTermsGroup()
                  : base(Tags.NoUnderlyingCashSettlTerms, Tags.UnderlyingCashSettlCurrency, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingCashSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingCashSettlCurrency UnderlyingCashSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlCurrency val = new QuickFix.Fields.UnderlyingCashSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    this.UnderlyingCashSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlCurrency Get(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlCurrency val)
                {
                    return IsSetUnderlyingCashSettlCurrency();
                }

                public bool IsSetUnderlyingCashSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset UnderlyingCashSettlValuationFirstBusinessDayOffset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val = new QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    this.UnderlyingCashSettlValuationFirstBusinessDayOffset = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset Get(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationFirstBusinessDayOffset val)
                {
                    return IsSetUnderlyingCashSettlValuationFirstBusinessDayOffset();
                }

                public bool IsSetUnderlyingCashSettlValuationFirstBusinessDayOffset()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset UnderlyingCashSettlValuationSubsequentBusinessDaysOffset
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val = new QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    this.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset Get(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset val)
                {
                    return IsSetUnderlyingCashSettlValuationSubsequentBusinessDaysOffset();
                }

                public bool IsSetUnderlyingCashSettlValuationSubsequentBusinessDaysOffset()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset);
                }
                public QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates UnderlyingCashSettlNumOfValuationDates
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val = new QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    this.UnderlyingCashSettlNumOfValuationDates = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates Get(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlNumOfValuationDates val)
                {
                    return IsSetUnderlyingCashSettlNumOfValuationDates();
                }

                public bool IsSetUnderlyingCashSettlNumOfValuationDates()
                {
                    return IsSetField(Tags.UnderlyingCashSettlNumOfValuationDates);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationTime UnderlyingCashSettlValuationTime
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationTime val = new QuickFix.Fields.UnderlyingCashSettlValuationTime();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    this.UnderlyingCashSettlValuationTime = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationTime Get(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationTime val)
                {
                    return IsSetUnderlyingCashSettlValuationTime();
                }

                public bool IsSetUnderlyingCashSettlValuationTime()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationTime);
                }
                public QuickFix.Fields.UnderlyingCashSettlBusinessCenter UnderlyingCashSettlBusinessCenter
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlBusinessCenter val = new QuickFix.Fields.UnderlyingCashSettlBusinessCenter();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    this.UnderlyingCashSettlBusinessCenter = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlBusinessCenter Get(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlBusinessCenter val)
                {
                    return IsSetUnderlyingCashSettlBusinessCenter();
                }

                public bool IsSetUnderlyingCashSettlBusinessCenter()
                {
                    return IsSetField(Tags.UnderlyingCashSettlBusinessCenter);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteMethod UnderlyingCashSettlQuoteMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteMethod val = new QuickFix.Fields.UnderlyingCashSettlQuoteMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    this.UnderlyingCashSettlQuoteMethod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteMethod Get(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteMethod val)
                {
                    return IsSetUnderlyingCashSettlQuoteMethod();
                }

                public bool IsSetUnderlyingCashSettlQuoteMethod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteMethod);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteAmount UnderlyingCashSettlQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteAmount val = new QuickFix.Fields.UnderlyingCashSettlQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    this.UnderlyingCashSettlQuoteAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteAmount Get(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteAmount val)
                {
                    return IsSetUnderlyingCashSettlQuoteAmount();
                }

                public bool IsSetUnderlyingCashSettlQuoteAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlQuoteCurrency UnderlyingCashSettlQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val = new QuickFix.Fields.UnderlyingCashSettlQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    this.UnderlyingCashSettlQuoteCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlQuoteCurrency Get(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlQuoteCurrency val)
                {
                    return IsSetUnderlyingCashSettlQuoteCurrency();
                }

                public bool IsSetUnderlyingCashSettlQuoteCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlQuoteCurrency);
                }
                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount UnderlyingCashSettlMinimumQuoteAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val = new QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    this.UnderlyingCashSettlMinimumQuoteAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount Get(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteAmount val)
                {
                    return IsSetUnderlyingCashSettlMinimumQuoteAmount();
                }

                public bool IsSetUnderlyingCashSettlMinimumQuoteAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlMinimumQuoteAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency UnderlyingCashSettlMinimumQuoteCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val = new QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    this.UnderlyingCashSettlMinimumQuoteCurrency = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency Get(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlMinimumQuoteCurrency val)
                {
                    return IsSetUnderlyingCashSettlMinimumQuoteCurrency();
                }

                public bool IsSetUnderlyingCashSettlMinimumQuoteCurrency()
                {
                    return IsSetField(Tags.UnderlyingCashSettlMinimumQuoteCurrency);
                }
                public QuickFix.Fields.NoUnderlyingCashSettlDealers NoUnderlyingCashSettlDealers
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingCashSettlDealers val = new QuickFix.Fields.NoUnderlyingCashSettlDealers();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    this.NoUnderlyingCashSettlDealers = val;
                }

                public QuickFix.Fields.NoUnderlyingCashSettlDealers Get(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlDealers val)
                {
                    return IsSetNoUnderlyingCashSettlDealers();
                }

                public bool IsSetNoUnderlyingCashSettlDealers()
                {
                    return IsSetField(Tags.NoUnderlyingCashSettlDealers);
                }
                public QuickFix.Fields.UnderlyingCashSettlBusinessDays UnderlyingCashSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlBusinessDays val = new QuickFix.Fields.UnderlyingCashSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    this.UnderlyingCashSettlBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlBusinessDays Get(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlBusinessDays val)
                {
                    return IsSetUnderlyingCashSettlBusinessDays();
                }

                public bool IsSetUnderlyingCashSettlBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingCashSettlBusinessDays);
                }
                public QuickFix.Fields.UnderlyingCashSettlAmount UnderlyingCashSettlAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlAmount val = new QuickFix.Fields.UnderlyingCashSettlAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    this.UnderlyingCashSettlAmount = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlAmount Get(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlAmount val)
                {
                    return IsSetUnderlyingCashSettlAmount();
                }

                public bool IsSetUnderlyingCashSettlAmount()
                {
                    return IsSetField(Tags.UnderlyingCashSettlAmount);
                }
                public QuickFix.Fields.UnderlyingCashSettlRecoveryFactor UnderlyingCashSettlRecoveryFactor
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val = new QuickFix.Fields.UnderlyingCashSettlRecoveryFactor();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    this.UnderlyingCashSettlRecoveryFactor = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlRecoveryFactor Get(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlRecoveryFactor val)
                {
                    return IsSetUnderlyingCashSettlRecoveryFactor();
                }

                public bool IsSetUnderlyingCashSettlRecoveryFactor()
                {
                    return IsSetField(Tags.UnderlyingCashSettlRecoveryFactor);
                }
                public QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator UnderlyingCashSettlFixedTermIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val = new QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    this.UnderlyingCashSettlFixedTermIndicator = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator Get(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlFixedTermIndicator val)
                {
                    return IsSetUnderlyingCashSettlFixedTermIndicator();
                }

                public bool IsSetUnderlyingCashSettlFixedTermIndicator()
                {
                    return IsSetField(Tags.UnderlyingCashSettlFixedTermIndicator);
                }
                public QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator UnderlyingCashSettlAccruedInterestIndicator
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val = new QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    this.UnderlyingCashSettlAccruedInterestIndicator = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator Get(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlAccruedInterestIndicator val)
                {
                    return IsSetUnderlyingCashSettlAccruedInterestIndicator();
                }

                public bool IsSetUnderlyingCashSettlAccruedInterestIndicator()
                {
                    return IsSetField(Tags.UnderlyingCashSettlAccruedInterestIndicator);
                }
                public QuickFix.Fields.UnderlyingCashSettlValuationMethod UnderlyingCashSettlValuationMethod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlValuationMethod val = new QuickFix.Fields.UnderlyingCashSettlValuationMethod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    this.UnderlyingCashSettlValuationMethod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlValuationMethod Get(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlValuationMethod val)
                {
                    return IsSetUnderlyingCashSettlValuationMethod();
                }

                public bool IsSetUnderlyingCashSettlValuationMethod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlValuationMethod);
                }
                public QuickFix.Fields.UnderlyingCashSettlTermXID UnderlyingCashSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlTermXID val = new QuickFix.Fields.UnderlyingCashSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    this.UnderlyingCashSettlTermXID = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlTermXID Get(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlTermXID val)
                {
                    return IsSetUnderlyingCashSettlTermXID();
                }

                public bool IsSetUnderlyingCashSettlTermXID()
                {
                    return IsSetField(Tags.UnderlyingCashSettlTermXID);
                }
                public QuickFix.Fields.UnderlyingCashSettlPriceSource UnderlyingCashSettlPriceSource
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlPriceSource val = new QuickFix.Fields.UnderlyingCashSettlPriceSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    this.UnderlyingCashSettlPriceSource = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlPriceSource Get(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlPriceSource val)
                {
                    return IsSetUnderlyingCashSettlPriceSource();
                }

                public bool IsSetUnderlyingCashSettlPriceSource()
                {
                    return IsSetField(Tags.UnderlyingCashSettlPriceSource);
                }
                public QuickFix.Fields.UnderlyingCashSettlPriceDefault UnderlyingCashSettlPriceDefault
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlPriceDefault val = new QuickFix.Fields.UnderlyingCashSettlPriceDefault();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    this.UnderlyingCashSettlPriceDefault = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlPriceDefault Get(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlPriceDefault val)
                {
                    return IsSetUnderlyingCashSettlPriceDefault();
                }

                public bool IsSetUnderlyingCashSettlPriceDefault()
                {
                    return IsSetField(Tags.UnderlyingCashSettlPriceDefault);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateUnadjusted UnderlyingCashSettlDateUnadjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val = new QuickFix.Fields.UnderlyingCashSettlDateUnadjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    this.UnderlyingCashSettlDateUnadjusted = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateUnadjusted Get(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateUnadjusted val)
                {
                    return IsSetUnderlyingCashSettlDateUnadjusted();
                }

                public bool IsSetUnderlyingCashSettlDateUnadjusted()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateUnadjusted);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention UnderlyingCashSettlDateBusinessDayConvention
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val = new QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    this.UnderlyingCashSettlDateBusinessDayConvention = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention Get(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateBusinessDayConvention val)
                {
                    return IsSetUnderlyingCashSettlDateBusinessDayConvention();
                }

                public bool IsSetUnderlyingCashSettlDateBusinessDayConvention()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateBusinessDayConvention);
                }
                public QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters NoUnderlyingCashSettlDateBusinessCenters
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val = new QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    this.NoUnderlyingCashSettlDateBusinessCenters = val;
                }

                public QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters Get(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingCashSettlDateBusinessCenters val)
                {
                    return IsSetNoUnderlyingCashSettlDateBusinessCenters();
                }

                public bool IsSetNoUnderlyingCashSettlDateBusinessCenters()
                {
                    return IsSetField(Tags.NoUnderlyingCashSettlDateBusinessCenters);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateRelativeTo UnderlyingCashSettlDateRelativeTo
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val = new QuickFix.Fields.UnderlyingCashSettlDateRelativeTo();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    this.UnderlyingCashSettlDateRelativeTo = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateRelativeTo Get(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateRelativeTo val)
                {
                    return IsSetUnderlyingCashSettlDateRelativeTo();
                }

                public bool IsSetUnderlyingCashSettlDateRelativeTo()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateRelativeTo);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod UnderlyingCashSettlDateOffsetPeriod
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    this.UnderlyingCashSettlDateOffsetPeriod = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetPeriod val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetPeriod();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetPeriod()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetPeriod);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit UnderlyingCashSettlDateOffsetUnit
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    this.UnderlyingCashSettlDateOffsetUnit = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetUnit val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetUnit();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetUnit()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetUnit);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType UnderlyingCashSettlDateOffsetDayType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val = new QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    this.UnderlyingCashSettlDateOffsetDayType = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType Get(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateOffsetDayType val)
                {
                    return IsSetUnderlyingCashSettlDateOffsetDayType();
                }

                public bool IsSetUnderlyingCashSettlDateOffsetDayType()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateOffsetDayType);
                }
                public QuickFix.Fields.UnderlyingCashSettlDateAdjusted UnderlyingCashSettlDateAdjusted
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingCashSettlDateAdjusted val = new QuickFix.Fields.UnderlyingCashSettlDateAdjusted();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    this.UnderlyingCashSettlDateAdjusted = val;
                }

                public QuickFix.Fields.UnderlyingCashSettlDateAdjusted Get(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateAdjusted val)
                {
                    return IsSetUnderlyingCashSettlDateAdjusted();
                }

                public bool IsSetUnderlyingCashSettlDateAdjusted()
                {
                    return IsSetField(Tags.UnderlyingCashSettlDateAdjusted);
                }
                public class NoUnderlyingCashSettlDealersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingCashSettlDealer, 0 };

                    public NoUnderlyingCashSettlDealersGroup()
                      : base(Tags.NoUnderlyingCashSettlDealers, Tags.UnderlyingCashSettlDealer, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingCashSettlDealersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDealer UnderlyingCashSettlDealer
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingCashSettlDealer val = new QuickFix.Fields.UnderlyingCashSettlDealer();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        this.UnderlyingCashSettlDealer = val;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDealer Get(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDealer val)
                    {
                        return IsSetUnderlyingCashSettlDealer();
                    }

                    public bool IsSetUnderlyingCashSettlDealer()
                    {
                        return IsSetField(Tags.UnderlyingCashSettlDealer);
                    }

                }
                public class NoUnderlyingCashSettlDateBusinessCentersGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingCashSettlDateBusinessCenter, 0 };

                    public NoUnderlyingCashSettlDateBusinessCentersGroup()
                      : base(Tags.NoUnderlyingCashSettlDateBusinessCenters, Tags.UnderlyingCashSettlDateBusinessCenter, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingCashSettlDateBusinessCentersGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter UnderlyingCashSettlDateBusinessCenter
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val = new QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        this.UnderlyingCashSettlDateBusinessCenter = val;
                    }

                    public QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter Get(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingCashSettlDateBusinessCenter val)
                    {
                        return IsSetUnderlyingCashSettlDateBusinessCenter();
                    }

                    public bool IsSetUnderlyingCashSettlDateBusinessCenter()
                    {
                        return IsSetField(Tags.UnderlyingCashSettlDateBusinessCenter);
                    }

                }
            }
            public class NoUnderlyingPhysicalSettlTermsGroup : Group
            {
                public static int[] fieldOrder = { Tags.NoUnderlyingPhysicalSettlDeliverableObligations, Tags.UnderlyingPhysicalSettlCurrency, Tags.UnderlyingPhysicalSettlBusinessDays, Tags.UnderlyingPhysicalSettlMaximumBusinessDays, Tags.UnderlyingPhysicalSettlTermXID, 0 };

                public NoUnderlyingPhysicalSettlTermsGroup()
                  : base(Tags.NoUnderlyingPhysicalSettlTerms, Tags.NoUnderlyingPhysicalSettlDeliverableObligations, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingPhysicalSettlTermsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations NoUnderlyingPhysicalSettlDeliverableObligations
                {
                    get
                    {
                        QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val = new QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    this.NoUnderlyingPhysicalSettlDeliverableObligations = val;
                }

                public QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations Get(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoUnderlyingPhysicalSettlDeliverableObligations val)
                {
                    return IsSetNoUnderlyingPhysicalSettlDeliverableObligations();
                }

                public bool IsSetNoUnderlyingPhysicalSettlDeliverableObligations()
                {
                    return IsSetField(Tags.NoUnderlyingPhysicalSettlDeliverableObligations);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlCurrency UnderlyingPhysicalSettlCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlCurrency val = new QuickFix.Fields.UnderlyingPhysicalSettlCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    this.UnderlyingPhysicalSettlCurrency = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlCurrency Get(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlCurrency val)
                {
                    return IsSetUnderlyingPhysicalSettlCurrency();
                }

                public bool IsSetUnderlyingPhysicalSettlCurrency()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlCurrency);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays UnderlyingPhysicalSettlBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val = new QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    this.UnderlyingPhysicalSettlBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays Get(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlBusinessDays val)
                {
                    return IsSetUnderlyingPhysicalSettlBusinessDays();
                }

                public bool IsSetUnderlyingPhysicalSettlBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlBusinessDays);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays UnderlyingPhysicalSettlMaximumBusinessDays
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val = new QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    this.UnderlyingPhysicalSettlMaximumBusinessDays = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays Get(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlMaximumBusinessDays val)
                {
                    return IsSetUnderlyingPhysicalSettlMaximumBusinessDays();
                }

                public bool IsSetUnderlyingPhysicalSettlMaximumBusinessDays()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlMaximumBusinessDays);
                }
                public QuickFix.Fields.UnderlyingPhysicalSettlTermXID UnderlyingPhysicalSettlTermXID
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingPhysicalSettlTermXID val = new QuickFix.Fields.UnderlyingPhysicalSettlTermXID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    this.UnderlyingPhysicalSettlTermXID = val;
                }

                public QuickFix.Fields.UnderlyingPhysicalSettlTermXID Get(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlTermXID val)
                {
                    return IsSetUnderlyingPhysicalSettlTermXID();
                }

                public bool IsSetUnderlyingPhysicalSettlTermXID()
                {
                    return IsSetField(Tags.UnderlyingPhysicalSettlTermXID);
                }
                public class NoUnderlyingPhysicalSettlDeliverableObligationsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.UnderlyingPhysicalSettlDeliverableObligationType, Tags.UnderlyingPhysicalSettlDeliverableObligationValue, 0 };

                    public NoUnderlyingPhysicalSettlDeliverableObligationsGroup()
                      : base(Tags.NoUnderlyingPhysicalSettlDeliverableObligations, Tags.UnderlyingPhysicalSettlDeliverableObligationType, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoUnderlyingPhysicalSettlDeliverableObligationsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType UnderlyingPhysicalSettlDeliverableObligationType
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val = new QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        this.UnderlyingPhysicalSettlDeliverableObligationType = val;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType Get(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationType val)
                    {
                        return IsSetUnderlyingPhysicalSettlDeliverableObligationType();
                    }

                    public bool IsSetUnderlyingPhysicalSettlDeliverableObligationType()
                    {
                        return IsSetField(Tags.UnderlyingPhysicalSettlDeliverableObligationType);
                    }
                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue UnderlyingPhysicalSettlDeliverableObligationValue
                    {
                        get
                        {
                            QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val = new QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        this.UnderlyingPhysicalSettlDeliverableObligationValue = val;
                    }

                    public QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue Get(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.UnderlyingPhysicalSettlDeliverableObligationValue val)
                    {
                        return IsSetUnderlyingPhysicalSettlDeliverableObligationValue();
                    }

                    public bool IsSetUnderlyingPhysicalSettlDeliverableObligationValue()
                    {
                        return IsSetField(Tags.UnderlyingPhysicalSettlDeliverableObligationValue);
                    }

                }
            }
            public class NoUnderlyingRateSpreadStepsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingRateSpreadStepDate, Tags.UnderlyingRateSpreadStepValue, 0 };

                public NoUnderlyingRateSpreadStepsGroup()
                  : base(Tags.NoUnderlyingRateSpreadSteps, Tags.UnderlyingRateSpreadStepDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingRateSpreadStepsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepDate UnderlyingRateSpreadStepDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingRateSpreadStepDate val = new QuickFix.Fields.UnderlyingRateSpreadStepDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    this.UnderlyingRateSpreadStepDate = val;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepDate Get(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadStepDate val)
                {
                    return IsSetUnderlyingRateSpreadStepDate();
                }

                public bool IsSetUnderlyingRateSpreadStepDate()
                {
                    return IsSetField(Tags.UnderlyingRateSpreadStepDate);
                }
                public QuickFix.Fields.UnderlyingRateSpreadStepValue UnderlyingRateSpreadStepValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingRateSpreadStepValue val = new QuickFix.Fields.UnderlyingRateSpreadStepValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    this.UnderlyingRateSpreadStepValue = val;
                }

                public QuickFix.Fields.UnderlyingRateSpreadStepValue Get(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingRateSpreadStepValue val)
                {
                    return IsSetUnderlyingRateSpreadStepValue();
                }

                public bool IsSetUnderlyingRateSpreadStepValue()
                {
                    return IsSetField(Tags.UnderlyingRateSpreadStepValue);
                }

            }
            public class NoUnderlyingDividendPaymentsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingDividendPaymentDate, Tags.UnderlyingDividendPaymentAmount, Tags.UnderlyingDividendPaymentCurrency, Tags.UnderlyingDividendAccruedInterest, 0 };

                public NoUnderlyingDividendPaymentsGroup()
                  : base(Tags.NoUnderlyingDividendPayments, Tags.UnderlyingDividendPaymentDate, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingDividendPaymentsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentDate UnderlyingDividendPaymentDate
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentDate val = new QuickFix.Fields.UnderlyingDividendPaymentDate();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    this.UnderlyingDividendPaymentDate = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentDate Get(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentDate val)
                {
                    return IsSetUnderlyingDividendPaymentDate();
                }

                public bool IsSetUnderlyingDividendPaymentDate()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentDate);
                }
                public QuickFix.Fields.UnderlyingDividendPaymentAmount UnderlyingDividendPaymentAmount
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentAmount val = new QuickFix.Fields.UnderlyingDividendPaymentAmount();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    this.UnderlyingDividendPaymentAmount = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentAmount Get(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentAmount val)
                {
                    return IsSetUnderlyingDividendPaymentAmount();
                }

                public bool IsSetUnderlyingDividendPaymentAmount()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentAmount);
                }
                public QuickFix.Fields.UnderlyingDividendPaymentCurrency UnderlyingDividendPaymentCurrency
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendPaymentCurrency val = new QuickFix.Fields.UnderlyingDividendPaymentCurrency();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    this.UnderlyingDividendPaymentCurrency = val;
                }

                public QuickFix.Fields.UnderlyingDividendPaymentCurrency Get(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendPaymentCurrency val)
                {
                    return IsSetUnderlyingDividendPaymentCurrency();
                }

                public bool IsSetUnderlyingDividendPaymentCurrency()
                {
                    return IsSetField(Tags.UnderlyingDividendPaymentCurrency);
                }
                public QuickFix.Fields.UnderlyingDividendAccruedInterest UnderlyingDividendAccruedInterest
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingDividendAccruedInterest val = new QuickFix.Fields.UnderlyingDividendAccruedInterest();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    this.UnderlyingDividendAccruedInterest = val;
                }

                public QuickFix.Fields.UnderlyingDividendAccruedInterest Get(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingDividendAccruedInterest val)
                {
                    return IsSetUnderlyingDividendAccruedInterest();
                }

                public bool IsSetUnderlyingDividendAccruedInterest()
                {
                    return IsSetField(Tags.UnderlyingDividendAccruedInterest);
                }

            }
            public class NoUnderlyingExtraordinaryEventsGroup : Group
            {
                public static int[] fieldOrder = { Tags.UnderlyingExtraordinaryEventType, Tags.UnderlyingExtraordinaryEventValue, 0 };

                public NoUnderlyingExtraordinaryEventsGroup()
                  : base(Tags.NoUnderlyingExtraordinaryEvents, Tags.UnderlyingExtraordinaryEventType, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoUnderlyingExtraordinaryEventsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventType UnderlyingExtraordinaryEventType
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryEventType val = new QuickFix.Fields.UnderlyingExtraordinaryEventType();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    this.UnderlyingExtraordinaryEventType = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventType Get(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventType val)
                {
                    return IsSetUnderlyingExtraordinaryEventType();
                }

                public bool IsSetUnderlyingExtraordinaryEventType()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryEventType);
                }
                public QuickFix.Fields.UnderlyingExtraordinaryEventValue UnderlyingExtraordinaryEventValue
                {
                    get
                    {
                        QuickFix.Fields.UnderlyingExtraordinaryEventValue val = new QuickFix.Fields.UnderlyingExtraordinaryEventValue();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    this.UnderlyingExtraordinaryEventValue = val;
                }

                public QuickFix.Fields.UnderlyingExtraordinaryEventValue Get(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.UnderlyingExtraordinaryEventValue val)
                {
                    return IsSetUnderlyingExtraordinaryEventValue();
                }

                public bool IsSetUnderlyingExtraordinaryEventValue()
                {
                    return IsSetField(Tags.UnderlyingExtraordinaryEventValue);
                }

            }
            public class NoTargetPartyIDsGroup : Group
            {
                public static int[] fieldOrder = { Tags.TargetPartyID, Tags.TargetPartyIDSource, Tags.TargetPartyRole, Tags.TargetPartyRoleQualifier, Tags.NoTargetPartySubIDs, 0 };

                public NoTargetPartyIDsGroup()
                  : base(Tags.NoTargetPartyIDs, Tags.TargetPartyID, fieldOrder)
                {
                }

                public override Group Clone()
                {
                    var clone = new NoTargetPartyIDsGroup();
                    clone.CopyStateFrom(this);
                    return clone;
                }

                public QuickFix.Fields.TargetPartyID TargetPartyID
                {
                    get
                    {
                        QuickFix.Fields.TargetPartyID val = new QuickFix.Fields.TargetPartyID();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.TargetPartyID val)
                {
                    this.TargetPartyID = val;
                }

                public QuickFix.Fields.TargetPartyID Get(QuickFix.Fields.TargetPartyID val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.TargetPartyID val)
                {
                    return IsSetTargetPartyID();
                }

                public bool IsSetTargetPartyID()
                {
                    return IsSetField(Tags.TargetPartyID);
                }
                public QuickFix.Fields.TargetPartyIDSource TargetPartyIDSource
                {
                    get
                    {
                        QuickFix.Fields.TargetPartyIDSource val = new QuickFix.Fields.TargetPartyIDSource();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.TargetPartyIDSource val)
                {
                    this.TargetPartyIDSource = val;
                }

                public QuickFix.Fields.TargetPartyIDSource Get(QuickFix.Fields.TargetPartyIDSource val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.TargetPartyIDSource val)
                {
                    return IsSetTargetPartyIDSource();
                }

                public bool IsSetTargetPartyIDSource()
                {
                    return IsSetField(Tags.TargetPartyIDSource);
                }
                public QuickFix.Fields.TargetPartyRole TargetPartyRole
                {
                    get
                    {
                        QuickFix.Fields.TargetPartyRole val = new QuickFix.Fields.TargetPartyRole();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.TargetPartyRole val)
                {
                    this.TargetPartyRole = val;
                }

                public QuickFix.Fields.TargetPartyRole Get(QuickFix.Fields.TargetPartyRole val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.TargetPartyRole val)
                {
                    return IsSetTargetPartyRole();
                }

                public bool IsSetTargetPartyRole()
                {
                    return IsSetField(Tags.TargetPartyRole);
                }
                public QuickFix.Fields.TargetPartyRoleQualifier TargetPartyRoleQualifier
                {
                    get
                    {
                        QuickFix.Fields.TargetPartyRoleQualifier val = new QuickFix.Fields.TargetPartyRoleQualifier();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.TargetPartyRoleQualifier val)
                {
                    this.TargetPartyRoleQualifier = val;
                }

                public QuickFix.Fields.TargetPartyRoleQualifier Get(QuickFix.Fields.TargetPartyRoleQualifier val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.TargetPartyRoleQualifier val)
                {
                    return IsSetTargetPartyRoleQualifier();
                }

                public bool IsSetTargetPartyRoleQualifier()
                {
                    return IsSetField(Tags.TargetPartyRoleQualifier);
                }
                public QuickFix.Fields.NoTargetPartySubIDs NoTargetPartySubIDs
                {
                    get
                    {
                        QuickFix.Fields.NoTargetPartySubIDs val = new QuickFix.Fields.NoTargetPartySubIDs();
                        GetField(val);
                        return val;
                    }
                    set { SetField(value); }
                }

                public void Set(QuickFix.Fields.NoTargetPartySubIDs val)
                {
                    this.NoTargetPartySubIDs = val;
                }

                public QuickFix.Fields.NoTargetPartySubIDs Get(QuickFix.Fields.NoTargetPartySubIDs val)
                {
                    GetField(val);
                    return val;
                }

                public bool IsSet(QuickFix.Fields.NoTargetPartySubIDs val)
                {
                    return IsSetNoTargetPartySubIDs();
                }

                public bool IsSetNoTargetPartySubIDs()
                {
                    return IsSetField(Tags.NoTargetPartySubIDs);
                }
                public class NoTargetPartySubIDsGroup : Group
                {
                    public static int[] fieldOrder = { Tags.TargetPartySubID, Tags.TargetPartySubIDType, 0 };

                    public NoTargetPartySubIDsGroup()
                      : base(Tags.NoTargetPartySubIDs, Tags.TargetPartySubID, fieldOrder)
                    {
                    }

                    public override Group Clone()
                    {
                        var clone = new NoTargetPartySubIDsGroup();
                        clone.CopyStateFrom(this);
                        return clone;
                    }

                    public QuickFix.Fields.TargetPartySubID TargetPartySubID
                    {
                        get
                        {
                            QuickFix.Fields.TargetPartySubID val = new QuickFix.Fields.TargetPartySubID();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.TargetPartySubID val)
                    {
                        this.TargetPartySubID = val;
                    }

                    public QuickFix.Fields.TargetPartySubID Get(QuickFix.Fields.TargetPartySubID val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.TargetPartySubID val)
                    {
                        return IsSetTargetPartySubID();
                    }

                    public bool IsSetTargetPartySubID()
                    {
                        return IsSetField(Tags.TargetPartySubID);
                    }
                    public QuickFix.Fields.TargetPartySubIDType TargetPartySubIDType
                    {
                        get
                        {
                            QuickFix.Fields.TargetPartySubIDType val = new QuickFix.Fields.TargetPartySubIDType();
                            GetField(val);
                            return val;
                        }
                        set { SetField(value); }
                    }

                    public void Set(QuickFix.Fields.TargetPartySubIDType val)
                    {
                        this.TargetPartySubIDType = val;
                    }

                    public QuickFix.Fields.TargetPartySubIDType Get(QuickFix.Fields.TargetPartySubIDType val)
                    {
                        GetField(val);
                        return val;
                    }

                    public bool IsSet(QuickFix.Fields.TargetPartySubIDType val)
                    {
                        return IsSetTargetPartySubIDType();
                    }

                    public bool IsSetTargetPartySubIDType()
                    {
                        return IsSetField(Tags.TargetPartySubIDType);
                    }

                }
            }
        }
    }
}
