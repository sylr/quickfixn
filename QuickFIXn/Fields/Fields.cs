// This is a generated file.  Don't edit it directly!

using System;

namespace QuickFix.Fields
{
    /// <summary>
    /// Account Field
    /// </summary>/
    public sealed class Account : StringField
    {
        public const int TAG = 1;

        public Account()
            : base(Tags.Account) { }
        public Account(string val)
            : base(Tags.Account, val) { }

    }


    /// <summary>
    /// AdvId Field
    /// </summary>/
    public sealed class AdvId : StringField
    {
        public const int TAG = 2;

        public AdvId()
            : base(Tags.AdvId) { }
        public AdvId(string val)
            : base(Tags.AdvId, val) { }

    }


    /// <summary>
    /// AdvRefID Field
    /// </summary>/
    public sealed class AdvRefID : StringField
    {
        public const int TAG = 3;

        public AdvRefID()
            : base(Tags.AdvRefID) { }
        public AdvRefID(string val)
            : base(Tags.AdvRefID, val) { }

    }


    /// <summary>
    /// AdvSide Field
    /// </summary>/
    public sealed class AdvSide : CharField
    {
        public const int TAG = 4;

        public AdvSide()
            : base(Tags.AdvSide) { }
        public AdvSide(char val)
            : base(Tags.AdvSide, val) { }


        // Field Enumerations
        public const char BUY = 'B';
        public const char SELL = 'S';
        public const char TRADE = 'T';
        public const char CROSS = 'X';
    }


    /// <summary>
    /// AdvTransType Field
    /// </summary>/
    public sealed class AdvTransType : StringField
    {
        public const int TAG = 5;

        public AdvTransType()
            : base(Tags.AdvTransType) { }
        public AdvTransType(string val)
            : base(Tags.AdvTransType, val) { }


        // Field Enumerations
        public const string NEW = "N";
        public const string CANCEL = "C";
        public const string REPLACE = "R";
    }


    /// <summary>
    /// AvgPx Field
    /// </summary>/
    public sealed class AvgPx : DecimalField
    {
        public const int TAG = 6;

        public AvgPx()
            : base(Tags.AvgPx) { }
        public AvgPx(Decimal val)
            : base(Tags.AvgPx, val) { }

    }


    /// <summary>
    /// BeginSeqNo Field
    /// </summary>/
    public sealed class BeginSeqNo : IntField
    {
        public const int TAG = 7;

        public BeginSeqNo()
            : base(Tags.BeginSeqNo) { }
        public BeginSeqNo(int val)
            : base(Tags.BeginSeqNo, val) { }

    }


    /// <summary>
    /// BeginString Field
    /// </summary>/
    public sealed class BeginString : StringField
    {
        public const int TAG = 8;

        public BeginString()
            : base(Tags.BeginString) { }
        public BeginString(string val)
            : base(Tags.BeginString, val) { }

    }


    /// <summary>
    /// BodyLength Field
    /// </summary>/
    public sealed class BodyLength : IntField
    {
        public const int TAG = 9;

        public BodyLength()
            : base(Tags.BodyLength) { }
        public BodyLength(int val)
            : base(Tags.BodyLength, val) { }

    }


    /// <summary>
    /// CheckSum Field
    /// </summary>/
    public sealed class CheckSum : StringField
    {
        public const int TAG = 10;

        public CheckSum()
            : base(Tags.CheckSum) { }
        public CheckSum(string val)
            : base(Tags.CheckSum, val) { }

    }


    /// <summary>
    /// ClOrdID Field
    /// </summary>/
    public sealed class ClOrdID : StringField
    {
        public const int TAG = 11;

        public ClOrdID()
            : base(Tags.ClOrdID) { }
        public ClOrdID(string val)
            : base(Tags.ClOrdID, val) { }

    }


    /// <summary>
    /// Commission Field
    /// </summary>/
    public sealed class Commission : DecimalField
    {
        public const int TAG = 12;

        public Commission()
            : base(Tags.Commission) { }
        public Commission(Decimal val)
            : base(Tags.Commission, val) { }

    }


    /// <summary>
    /// CommType Field
    /// </summary>/
    public sealed class CommType : CharField
    {
        public const int TAG = 13;

        public CommType()
            : base(Tags.CommType) { }
        public CommType(char val)
            : base(Tags.CommType, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
        public const char PER_UNIT = '1';
        public const char PERCENTAGE_WAIVED_4 = '4';
        public const char PERCENTAGE_WAIVED_5 = '5';
        public const char PERCENTAGE = '2';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS = '5';
        public const char POINTS_PER_BOND_OR_OR_CONTRACT = '6';
        public const char PER_SHARE = '1';
        public const char PER_BOND = '6';
    }


    /// <summary>
    /// CumQty Field
    /// </summary>/
    public sealed class CumQty : DecimalField
    {
        public const int TAG = 14;

        public CumQty()
            : base(Tags.CumQty) { }
        public CumQty(Decimal val)
            : base(Tags.CumQty, val) { }

    }


    /// <summary>
    /// Currency Field
    /// </summary>/
    public sealed class Currency : StringField
    {
        public const int TAG = 15;

        public Currency()
            : base(Tags.Currency) { }
        public Currency(string val)
            : base(Tags.Currency, val) { }

    }


    /// <summary>
    /// EndSeqNo Field
    /// </summary>/
    public sealed class EndSeqNo : IntField
    {
        public const int TAG = 16;

        public EndSeqNo()
            : base(Tags.EndSeqNo) { }
        public EndSeqNo(int val)
            : base(Tags.EndSeqNo, val) { }

    }


    /// <summary>
    /// ExecID Field
    /// </summary>/
    public sealed class ExecID : StringField
    {
        public const int TAG = 17;

        public ExecID()
            : base(Tags.ExecID) { }
        public ExecID(string val)
            : base(Tags.ExecID, val) { }

    }


    /// <summary>
    /// ExecInst Field
    /// </summary>/
    public sealed class ExecInst : StringField
    {
        public const int TAG = 18;

        public ExecInst()
            : base(Tags.ExecInst) { }
        public ExecInst(string val)
            : base(Tags.ExecInst, val) { }


        // Field Enumerations
        public const string STAY_ON_OFFER_SIDE = "0";
        public const string NOT_HELD = "1";
        public const string WORK = "2";
        public const string GO_ALONG = "3";
        public const string OVER_THE_DAY = "4";
        public const string HELD = "5";
        public const string PARTICIPATE_DONT_INITIATE = "6";
        public const string STRICT_SCALE = "7";
        public const string TRY_TO_SCALE = "8";
        public const string STAY_ON_BID_SIDE = "9";
        public const string NO_CROSS = "A";
        public const string OK_TO_CROSS = "B";
        public const string CALL_FIRST = "C";
        public const string PERCENT_OF_VOLUME = "D";
        public const string DO_NOT_INCREASE = "E";
        public const string DO_NOT_REDUCE = "F";
        public const string ALL_OR_NONE = "G";
        public const string REINSTATE_ON_SYSTEM_FAILURE = "H";
        public const string INSTITUTIONS_ONLY = "I";
        public const string REINSTATE_ON_TRADING_HALT = "J";
        public const string CANCEL_ON_TRADING_HALT = "K";
        public const string LAST_PEG = "L";
        public const string MID_PRICE_PEG = "M";
        public const string NON_NEGOTIABLE = "N";
        public const string OPENING_PEG = "O";
        public const string MARKET_PEG = "P";
        public const string CANCEL_ON_SYSTEM_FAILURE = "Q";
        public const string PRIMARY_PEG = "R";
        public const string SUSPEND = "S";
        public const string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "T";
        public const string CUSTOMER_DISPLAY_INSTRUCTION = "U";
        public const string NETTING = "V";
        public const string PEG_TO_VWAP = "W";
        public const string TRADE_ALONG = "X";
        public const string TRY_TO_STOP = "Y";
        public const string CANCEL_IF_NOT_BEST = "Z";
        public const string TRAILING_STOP_PEG = "a";
        public const string STRICT_LIMIT = "b";
        public const string IGNORE_PRICE_VALIDITY_CHECKS = "c";
        public const string PEG_TO_LIMIT_PRICE = "d";
        public const string WORK_TO_TARGET_STRATEGY = "e";
        public const string INTERMARKET_SWEEP = "f";
        public const string EXTERNAL_ROUTING_ALLOWED = "g";
        public const string EXTERNAL_ROUTING_NOT_ALLOWED = "h";
        public const string IMBALANCE_ONLY = "i";
        public const string SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = "j";
        public const string BEST_EXECUTION = "k";
        public const string SUSPEND_ON_SYSTEM_FAILURE = "l";
        public const string SUSPEND_ON_TRADING_HALT = "m";
        public const string REINSTATE_ON_CONNECTION_LOSS = "n";
        public const string CANCEL_ON_CONNECTION_LOSS = "o";
        public const string SUSPEND_ON_CONNECTION_LOSS = "p";
        public const string RELEASE = "q";
        public const string EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED = "r";
        public const string EXECUTE_AS_DURATION_NEUTRAL = "s";
        public const string EXECUTE_AS_FX_NEUTRAL = "t";
        public const string MINIMUM_GUARANTEED_FILL_ELIGIBLE = "u";
        public const string BYPASS_NON_DISPLAYED_LIQUIDITY = "v";
        public const string LOCK = "w";
        public const string IGNORE_NOTIONAL_VALUE_CHECKS = "x";
        public const string TRADE_AT_REFERENCE_PRICE = "y";
        public const string ALLOW_FACILITATION = "z";
        public const string PARTICIPANT_DONT_INITIATE = "6";
        public const string RELEASE_FROM_SUSPENSION = "q";
        public const string REINSTATE_ON_SYSTEM_FAILUE = "H";
        public const string STAY_ON_BIDSIDE = "9";
        public const string STAY_ON_OFFERSIDE = "0";
        public const string MID_PRICE = "M";
        public const string FIXED_PEG = "T";
        public const string DO_NOT_INCREASE_DNI = "E";
        public const string DO_NOT_REDUCE_DNR = "F";
        public const string ALL_OR_NONE_AON = "G";
        public const string MIDPRICE_PEG = "M";
        public const string NONNEGOTIABLE = "N";
    }


    /// <summary>
    /// ExecRefID Field
    /// </summary>/
    public sealed class ExecRefID : StringField
    {
        public const int TAG = 19;

        public ExecRefID()
            : base(Tags.ExecRefID) { }
        public ExecRefID(string val)
            : base(Tags.ExecRefID, val) { }

    }


    /// <summary>
    /// ExecTransType Field
    /// </summary>/
    public sealed class ExecTransType : CharField
    {
        public const int TAG = 20;

        public ExecTransType()
            : base(Tags.ExecTransType) { }
        public ExecTransType(char val)
            : base(Tags.ExecTransType, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char CANCEL = '1';
        public const char CORRECT = '2';
        public const char STATUS = '3';
    }


    /// <summary>
    /// HandlInst Field
    /// </summary>/
    public sealed class HandlInst : CharField
    {
        public const int TAG = 21;

        public HandlInst()
            : base(Tags.HandlInst) { }
        public HandlInst(char val)
            : base(Tags.HandlInst, val) { }


        // Field Enumerations
        public const char AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTION = '1';
        public const char AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OK = '2';
        public const char MANUAL_ORDER_BEST_EXECUTION = '3';
        public const char AUTOMATED_EXECUTION_ORDER_PRIVATE = '1';
        public const char AUTOMATED_EXECUTION_ORDER_PUBLIC = '2';
        public const char MANUAL_ORDER = '3';
    }


    /// <summary>
    /// IDSource Field
    /// </summary>/
    public sealed class IDSource : StringField
    {
        public const int TAG = 22;

        public IDSource()
            : base(Tags.IDSource) { }
        public IDSource(string val)
            : base(Tags.IDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN_NUMBER = "4";
        public const string RIC_CODE = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
    }


    /// <summary>
    /// IOIid Field
    /// </summary>/
    public sealed class IOIid : StringField
    {
        public const int TAG = 23;

        public IOIid()
            : base(Tags.IOIid) { }
        public IOIid(string val)
            : base(Tags.IOIid, val) { }

    }


    /// <summary>
    /// IOIOthSvc Field
    /// </summary>/
    public sealed class IOIOthSvc : CharField
    {
        public const int TAG = 24;

        public IOIOthSvc()
            : base(Tags.IOIOthSvc) { }
        public IOIOthSvc(char val)
            : base(Tags.IOIOthSvc, val) { }

    }


    /// <summary>
    /// IOIQltyInd Field
    /// </summary>/
    public sealed class IOIQltyInd : CharField
    {
        public const int TAG = 25;

        public IOIQltyInd()
            : base(Tags.IOIQltyInd) { }
        public IOIQltyInd(char val)
            : base(Tags.IOIQltyInd, val) { }


        // Field Enumerations
        public const char HIGH = 'H';
        public const char LOW = 'L';
        public const char MEDIUM = 'M';
    }


    /// <summary>
    /// IOIRefID Field
    /// </summary>/
    public sealed class IOIRefID : StringField
    {
        public const int TAG = 26;

        public IOIRefID()
            : base(Tags.IOIRefID) { }
        public IOIRefID(string val)
            : base(Tags.IOIRefID, val) { }

    }


    /// <summary>
    /// IOIShares Field
    /// </summary>/
    public sealed class IOIShares : StringField
    {
        public const int TAG = 27;

        public IOIShares()
            : base(Tags.IOIShares) { }
        public IOIShares(string val)
            : base(Tags.IOIShares, val) { }

    }


    /// <summary>
    /// IOITransType Field
    /// </summary>/
    public sealed class IOITransType : CharField
    {
        public const int TAG = 28;

        public IOITransType()
            : base(Tags.IOITransType) { }
        public IOITransType(char val)
            : base(Tags.IOITransType, val) { }


        // Field Enumerations
        public const char NEW = 'N';
        public const char CANCEL = 'C';
        public const char REPLACE = 'R';
    }


    /// <summary>
    /// LastCapacity Field
    /// </summary>/
    public sealed class LastCapacity : CharField
    {
        public const int TAG = 29;

        public LastCapacity()
            : base(Tags.LastCapacity) { }
        public LastCapacity(char val)
            : base(Tags.LastCapacity, val) { }


        // Field Enumerations
        public const char AGENT = '1';
        public const char CROSS_AS_AGENT = '2';
        public const char CROSS_AS_PRINCIPAL = '3';
        public const char PRINCIPAL = '4';
        public const char RISKLESS_PRINCIPAL = '5';
    }


    /// <summary>
    /// LastMkt Field
    /// </summary>/
    public sealed class LastMkt : StringField
    {
        public const int TAG = 30;

        public LastMkt()
            : base(Tags.LastMkt) { }
        public LastMkt(string val)
            : base(Tags.LastMkt, val) { }

    }


    /// <summary>
    /// LastPx Field
    /// </summary>/
    public sealed class LastPx : DecimalField
    {
        public const int TAG = 31;

        public LastPx()
            : base(Tags.LastPx) { }
        public LastPx(Decimal val)
            : base(Tags.LastPx, val) { }

    }


    /// <summary>
    /// LastShares Field
    /// </summary>/
    public sealed class LastShares : DecimalField
    {
        public const int TAG = 32;

        public LastShares()
            : base(Tags.LastShares) { }
        public LastShares(Decimal val)
            : base(Tags.LastShares, val) { }

    }


    /// <summary>
    /// LinesOfText Field
    /// </summary>/
    public sealed class LinesOfText : IntField
    {
        public const int TAG = 33;

        public LinesOfText()
            : base(Tags.LinesOfText) { }
        public LinesOfText(int val)
            : base(Tags.LinesOfText, val) { }

    }


    /// <summary>
    /// MsgSeqNum Field
    /// </summary>/
    public sealed class MsgSeqNum : IntField
    {
        public const int TAG = 34;

        public MsgSeqNum()
            : base(Tags.MsgSeqNum) { }
        public MsgSeqNum(int val)
            : base(Tags.MsgSeqNum, val) { }

    }


    /// <summary>
    /// MsgType Field
    /// </summary>/
    public sealed class MsgType : StringField
    {
        public const int TAG = 35;

        public MsgType()
            : base(Tags.MsgType) { }
        public MsgType(string val)
            : base(Tags.MsgType, val) { }


        // Field Enumerations
        public const string HEARTBEAT = "0";
        public const string ORDERCANCELREJECT = "9";
        public const string TRADINGSESSIONLIST = "BJ";
        public const string TRADINGSESSIONLISTREQUEST = "BI";
        public const string SETTLEMENTOBLIGATIONREPORT = "BQ";
        public const string DERIVATIVESECURITYLISTUPDATEREPORT = "BR";
        public const string TRADINGSESSIONLISTUPDATEREPORT = "BS";
        public const string MARKETDEFINITIONREQUEST = "BT";
        public const string MARKETDEFINITION = "BU";
        public const string MARKETDEFINITIONUPDATEREPORT = "BV";
        public const string APPLICATIONMESSAGEREQUEST = "BW";
        public const string APPLICATIONMESSAGEREQUESTACK = "BX";
        public const string LOGON = "A";
        public const string APPLICATIONMESSAGEREPORT = "BY";
        public const string ORDERMASSACTIONREPORT = "BZ";
        public const string ORDERMASSACTIONREQUEST = "CA";
        public const string USERNOTIFICATION = "CB";
        public const string STREAMASSIGNMENTREQUEST = "CC";
        public const string STREAMASSIGNMENTREPORT = "CD";
        public const string STREAMASSIGNMENTREPORTACK = "CE";
        public const string PARTYDETAILSLISTREQUEST = "CF";
        public const string PARTYDETAILSLISTREPORT = "CG";
        public const string MARGINREQUIREMENTINQUIRY = "CH";
        public const string NEWS = "B";
        public const string MARGINREQUIREMENTINQUIRYACK = "CI";
        public const string MARGINREQUIREMENTREPORT = "CJ";
        public const string PARTYDETAILSLISTUPDATEREPORT = "CK";
        public const string PARTYRISKLIMITSREQUEST = "CL";
        public const string PARTYRISKLIMITSREPORT = "CM";
        public const string SECURITYMASSSTATUSREQUEST = "CN";
        public const string SECURITYMASSSTATUS = "CO";
        public const string ACCOUNTSUMMARYREPORT = "CQ";
        public const string PARTYRISKLIMITSUPDATEREPORT = "CR";
        public const string PARTYRISKLIMITSDEFINITIONREQUEST = "CS";
        public const string EMAIL = "C";
        public const string PARTYRISKLIMITSDEFINITIONREQUESTACK = "CT";
        public const string PARTYENTITLEMENTSREQUEST = "CU";
        public const string PARTYENTITLEMENTSREPORT = "CV";
        public const string QUOTEACK = "CW";
        public const string PARTYDETAILSDEFINITIONREQUEST = "CX";
        public const string PARTYDETAILSDEFINITIONREQUESTACK = "CY";
        public const string PARTYENTITLEMENTSUPDATEREPORT = "CZ";
        public const string PARTYENTITLEMENTSDEFINITIONREQUEST = "DA";
        public const string PARTYENTITLEMENTSDEFINITIONREQUESTACK = "DB";
        public const string TRADEMATCHREPORT = "DC";
        public const string NEWORDERSINGLE = "D";
        public const string TRADEMATCHREPORTACK = "DD";
        public const string PARTYRISKLIMITSREPORTACK = "DE";
        public const string PARTYRISKLIMITCHECKREQUEST = "DF";
        public const string PARTYRISKLIMITCHECKREQUESTACK = "DG";
        public const string PARTYACTIONREQUEST = "DH";
        public const string PARTYACTIONREPORT = "DI";
        public const string MASSORDER = "DJ";
        public const string MASSORDERACK = "DK";
        public const string POSITIONTRANSFERINSTRUCTION = "DL";
        public const string POSITIONTRANSFERINSTRUCTIONACK = "DM";
        public const string NEWORDERLIST = "E";
        public const string POSITIONTRANSFERREPORT = "DN";
        public const string MARKETDATASTATISTICSREQUEST = "DO";
        public const string MARKETDATASTATISTICSREPORT = "DP";
        public const string COLLATERALREPORTACK = "DQ";
        public const string MARKETDATAREPORT = "DR";
        public const string CROSSREQUEST = "DS";
        public const string CROSSREQUESTACK = "DT";
        public const string ALLOCATIONINSTRUCTIONALERTREQUEST = "DU";
        public const string ALLOCATIONINSTRUCTIONALERTREQUESTACK = "DV";
        public const string TRADEAGGREGATIONREQUEST = "DW";
        public const string ORDERCANCELREQUEST = "F";
        public const string TRADEAGGREGATIONREPORT = "DX";
        public const string PAYMANAGEMENTREPORT = "EA";
        public const string PAYMANAGEMENTREPORTACK = "EB";
        public const string PAYMANAGEMENTREQUEST = "DY";
        public const string PAYMANAGEMENTREQUESTACK = "DZ";
        public const string ORDERCANCELREPLACEREQUEST = "G";
        public const string ORDERSTATUSREQUEST = "H";
        public const string ALLOCATIONINSTRUCTION = "J";
        public const string TESTREQUEST = "1";
        public const string LISTCANCELREQUEST = "K";
        public const string LISTEXECUTE = "L";
        public const string LISTSTATUSREQUEST = "M";
        public const string LISTSTATUS = "N";
        public const string ALLOCATIONINSTRUCTIONACK = "P";
        public const string DONTKNOWTRADE = "Q";
        public const string QUOTEREQUEST = "R";
        public const string QUOTE = "S";
        public const string SETTLEMENTINSTRUCTIONS = "T";
        public const string MARKETDATAREQUEST = "V";
        public const string RESENDREQUEST = "2";
        public const string MARKETDATASNAPSHOTFULLREFRESH = "W";
        public const string MARKETDATAINCREMENTALREFRESH = "X";
        public const string MARKETDATAREQUESTREJECT = "Y";
        public const string QUOTECANCEL = "Z";
        public const string QUOTESTATUSREQUEST = "a";
        public const string MASSQUOTEACK = "b";
        public const string SECURITYDEFINITIONREQUEST = "c";
        public const string SECURITYDEFINITION = "d";
        public const string SECURITYSTATUSREQUEST = "e";
        public const string SECURITYSTATUS = "f";
        public const string REJECT = "3";
        public const string TRADINGSESSIONSTATUSREQUEST = "g";
        public const string TRADINGSESSIONSTATUS = "h";
        public const string MASSQUOTE = "i";
        public const string BUSINESSMESSAGEREJECT = "j";
        public const string BIDREQUEST = "k";
        public const string BIDRESPONSE = "l";
        public const string LISTSTRIKEPRICE = "m";
        public const string XMLNONFIX = "n";
        public const string REGISTRATIONINSTRUCTIONS = "o";
        public const string REGISTRATIONINSTRUCTIONSRESPONSE = "p";
        public const string SEQUENCERESET = "4";
        public const string ORDERMASSCANCELREQUEST = "q";
        public const string ORDERMASSCANCELREPORT = "r";
        public const string NEWORDERCROSS = "s";
        public const string CROSSORDERCANCELREPLACEREQUEST = "t";
        public const string CROSSORDERCANCELREQUEST = "u";
        public const string SECURITYTYPEREQUEST = "v";
        public const string SECURITYTYPES = "w";
        public const string SECURITYLISTREQUEST = "x";
        public const string SECURITYLIST = "y";
        public const string DERIVATIVESECURITYLISTREQUEST = "z";
        public const string LOGOUT = "5";
        public const string DERIVATIVESECURITYLIST = "AA";
        public const string NEWORDERMULTILEG = "AB";
        public const string MULTILEGORDERCANCELREPLACE = "AC";
        public const string TRADECAPTUREREPORTREQUEST = "AD";
        public const string TRADECAPTUREREPORT = "AE";
        public const string ORDERMASSSTATUSREQUEST = "AF";
        public const string QUOTEREQUESTREJECT = "AG";
        public const string RFQREQUEST = "AH";
        public const string QUOTESTATUSREPORT = "AI";
        public const string QUOTERESPONSE = "AJ";
        public const string IOI = "6";
        public const string CONFIRMATION = "AK";
        public const string POSITIONMAINTENANCEREQUEST = "AL";
        public const string POSITIONMAINTENANCEREPORT = "AM";
        public const string REQUESTFORPOSITIONS = "AN";
        public const string REQUESTFORPOSITIONSACK = "AO";
        public const string POSITIONREPORT = "AP";
        public const string TRADECAPTUREREPORTREQUESTACK = "AQ";
        public const string TRADECAPTUREREPORTACK = "AR";
        public const string ALLOCATIONREPORT = "AS";
        public const string ALLOCATIONREPORTACK = "AT";
        public const string ADVERTISEMENT = "7";
        public const string CONFIRMATIONACK = "AU";
        public const string SETTLEMENTINSTRUCTIONREQUEST = "AV";
        public const string ASSIGNMENTREPORT = "AW";
        public const string COLLATERALREQUEST = "AX";
        public const string COLLATERALASSIGNMENT = "AY";
        public const string COLLATERALRESPONSE = "AZ";
        public const string COLLATERALREPORT = "BA";
        public const string COLLATERALINQUIRY = "BB";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = "BC";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = "BD";
        public const string EXECUTIONREPORT = "8";
        public const string USERREQUEST = "BE";
        public const string USERRESPONSE = "BF";
        public const string COLLATERALINQUIRYACK = "BG";
        public const string CONFIRMATIONREQUEST = "BH";
        public const string CONTRARYINTENTIONREPORT = "BO";
        public const string SECURITYDEFINITIONUPDATEREPORT = "BP";
        public const string SECURITYLISTUPDATEREPORT = "BK";
        public const string ADJUSTEDPOSITIONREPORT = "BL";
        public const string ALLOCATIONINSTRUCTIONALERT = "BM";
        public const string EXECUTIONACK = "BN";
        public const string TEST_REQUEST = "1";
        public const string RESEND_REQUEST = "2";
        public const string SEQUENCE_RESET = "4";
        public const string INDICATION_OF_INTEREST = "6";
        public const string EXECUTION_REPORT = "8";
        public const string ORDER_CANCEL_REJECT = "9";
        public const string QUOTE_STATUS_REQUEST = "a";
        public const string DERIVATIVE_SECURITY_LIST = "AA";
        public const string NEW_ORDER_AB = "AB";
        public const string MULTILEG_ORDER_CANCEL_REPLACE = "AC";
        public const string TRADE_CAPTURE_REPORT_REQUEST = "AD";
        public const string TRADE_CAPTURE_REPORT = "AE";
        public const string ORDER_MASS_STATUS_REQUEST = "AF";
        public const string QUOTE_REQUEST_REJECT = "AG";
        public const string RFQ_REQUEST = "AH";
        public const string QUOTE_STATUS_REPORT = "AI";
        public const string QUOTE_RESPONSE = "AJ";
        public const string POSITION_MAINTENANCE_REQUEST = "AL";
        public const string POSITION_MAINTENANCE_REPORT = "AM";
        public const string REQUEST_FOR_POSITIONS = "AN";
        public const string REQUEST_FOR_POSITIONS_ACK = "AO";
        public const string POSITION_REPORT = "AP";
        public const string TRADE_CAPTURE_REPORT_REQUEST_ACK = "AQ";
        public const string TRADE_CAPTURE_REPORT_ACK = "AR";
        public const string ALLOCATION_REPORT = "AS";
        public const string ALLOCATION_REPORT_ACK = "AT";
        public const string CONFIRMATION_ACK = "AU";
        public const string SETTLEMENT_INSTRUCTION_REQUEST = "AV";
        public const string ASSIGNMENT_REPORT = "AW";
        public const string COLLATERAL_REQUEST = "AX";
        public const string COLLATERAL_ASSIGNMENT = "AY";
        public const string COLLATERAL_RESPONSE = "AZ";
        public const string MASS_QUOTE_ACKNOWLEDGEMENT = "b";
        public const string COLLATERAL_REPORT = "BA";
        public const string COLLATERAL_INQUIRY = "BB";
        public const string NETWORK_COUNTERPARTY_SYSTEM_STATUS_REQUEST = "BC";
        public const string NETWORK_COUNTERPARTY_SYSTEM_STATUS_RESPONSE = "BD";
        public const string USER_REQUEST = "BE";
        public const string USER_RESPONSE = "BF";
        public const string COLLATERAL_INQUIRY_ACK = "BG";
        public const string CONFIRMATION_REQUEST = "BH";
        public const string SECURITY_DEFINITION_REQUEST = "c";
        public const string SECURITY_DEFINITION = "d";
        public const string NEW_ORDER_D = "D";
        public const string SECURITY_STATUS_REQUEST = "e";
        public const string NEW_ORDER_E = "E";
        public const string ORDER_CANCEL_REQUEST = "F";
        public const string SECURITY_STATUS = "f";
        public const string ORDER_CANCEL_REPLACE_REQUEST = "G";
        public const string TRADING_SESSION_STATUS_REQUEST = "g";
        public const string ORDER_STATUS_REQUEST = "H";
        public const string TRADING_SESSION_STATUS = "h";
        public const string MASS_QUOTE = "i";
        public const string BUSINESS_MESSAGE_REJECT = "j";
        public const string ALLOCATION_INSTRUCTION = "J";
        public const string BID_REQUEST = "k";
        public const string LIST_CANCEL_REQUEST = "K";
        public const string BID_RESPONSE = "l";
        public const string LIST_EXECUTE = "L";
        public const string LIST_STRIKE_PRICE = "m";
        public const string LIST_STATUS_REQUEST = "M";
        public const string XML_MESSAGE = "n";
        public const string LIST_STATUS = "N";
        public const string REGISTRATION_INSTRUCTIONS = "o";
        public const string REGISTRATION_INSTRUCTIONS_RESPONSE = "p";
        public const string ALLOCATION_INSTRUCTION_ACK = "P";
        public const string ORDER_MASS_CANCEL_REQUEST = "q";
        public const string DONT_KNOW_TRADE = "Q";
        public const string QUOTE_REQUEST = "R";
        public const string ORDER_MASS_CANCEL_REPORT = "r";
        public const string NEW_ORDER_s = "s";
        public const string SETTLEMENT_INSTRUCTIONS = "T";
        public const string CROSS_ORDER_CANCEL_REPLACE_REQUEST = "t";
        public const string CROSS_ORDER_CANCEL_REQUEST = "u";
        public const string MARKET_DATA_REQUEST = "V";
        public const string SECURITY_TYPE_REQUEST = "v";
        public const string SECURITY_TYPES = "w";
        public const string MARKET_DATA_W = "W";
        public const string SECURITY_LIST_REQUEST = "x";
        public const string MARKET_DATA_X = "X";
        public const string MARKET_DATA_REQUEST_REJECT = "Y";
        public const string SECURITY_LIST = "y";
        public const string QUOTE_CANCEL = "Z";
        public const string DERIVATIVE_SECURITY_LIST_REQUEST = "z";
        public const string CONTRARY_INTENTION_REPORT = "BO";
        public const string SECURITY_DEFINITION_UPDATE_REPORT = "BP";
        public const string SECURITY_LIST_UPDATE_REPORT = "BK";
        public const string ADJUSTED_POSITION_REPORT = "BL";
        public const string ALLOCATION_INSTRUCTION_ALERT = "BM";
        public const string EXECUTION_ACKNOWLEDGEMENT = "BN";
        public const string TRADING_SESSION_LIST = "BJ";
        public const string TRADING_SESSION_LIST_REQUEST = "BI";
        public const string ORDER_SINGLE = "D";
        public const string ORDER_LIST = "E";
        public const string MARKET_DATA_SNAPSHOT_FULL_REFRESH = "W";
        public const string MARKET_DATA_INCREMENTAL_REFRESH = "X";
        public const string NEW_ORDER_CROSS = "s";
        public const string NEW_ORDER_MULTILEG = "AB";
        public const string NETWORK_STATUS_REQUEST = "BC";
        public const string NETWORK_STATUS_RESPONSE = "BD";
        public const string ORDER_CANCEL = "G";
        public const string ALLOCATION = "J";
        public const string ALLOCATION_ACK = "P";
        public const string MARKET_DATA_SNAPSHOT = "W";
        public const string CROSS_ORDER_CANCEL = "t";
        public const string MULTILEG_ORDER_CANCEL = "AC";
    }


    /// <summary>
    /// NewSeqNo Field
    /// </summary>/
    public sealed class NewSeqNo : IntField
    {
        public const int TAG = 36;

        public NewSeqNo()
            : base(Tags.NewSeqNo) { }
        public NewSeqNo(int val)
            : base(Tags.NewSeqNo, val) { }

    }


    /// <summary>
    /// OrderID Field
    /// </summary>/
    public sealed class OrderID : StringField
    {
        public const int TAG = 37;

        public OrderID()
            : base(Tags.OrderID) { }
        public OrderID(string val)
            : base(Tags.OrderID, val) { }

    }


    /// <summary>
    /// OrderQty Field
    /// </summary>/
    public sealed class OrderQty : DecimalField
    {
        public const int TAG = 38;

        public OrderQty()
            : base(Tags.OrderQty) { }
        public OrderQty(Decimal val)
            : base(Tags.OrderQty, val) { }

    }


    /// <summary>
    /// OrdStatus Field
    /// </summary>/
    public sealed class OrdStatus : CharField
    {
        public const int TAG = 39;

        public OrdStatus()
            : base(Tags.OrdStatus) { }
        public OrdStatus(char val)
            : base(Tags.OrdStatus, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char PARTIALLY_FILLED = '1';
        public const char FILLED = '2';
        public const char DONE_FOR_DAY = '3';
        public const char CANCELED = '4';
        public const char REPLACED = '5';
        public const char PENDING_CANCEL = '6';
        public const char STOPPED = '7';
        public const char REJECTED = '8';
        public const char SUSPENDED = '9';
        public const char PENDING_NEW = 'A';
        public const char CALCULATED = 'B';
        public const char EXPIRED = 'C';
        public const char ACCEPTED_FOR_BIDDING = 'D';
        public const char PENDING_REPLACE = 'E';
        public const char PENDING_CANCELREPLACE = '6';
    }


    /// <summary>
    /// OrdType Field
    /// </summary>/
    public sealed class OrdType : CharField
    {
        public const int TAG = 40;

        public OrdType()
            : base(Tags.OrdType) { }
        public OrdType(char val)
            : base(Tags.OrdType, val) { }


        // Field Enumerations
        public const char MARKET = '1';
        public const char LIMIT = '2';
        public const char STOP_STOP_LOSS = '3';
        public const char STOP_LIMIT = '4';
        public const char MARKET_ON_CLOSE = '5';
        public const char WITH_OR_WITHOUT = '6';
        public const char LIMIT_OR_BETTER = '7';
        public const char LIMIT_WITH_OR_WITHOUT = '8';
        public const char ON_BASIS = '9';
        public const char ON_CLOSE = 'A';
        public const char LIMIT_ON_CLOSE = 'B';
        public const char FOREX_MARKET = 'C';
        public const char PREVIOUSLY_QUOTED = 'D';
        public const char PREVIOUSLY_INDICATED = 'E';
        public const char FOREX_LIMIT = 'F';
        public const char FOREX_SWAP = 'G';
        public const char FOREX_PREVIOUSLY_QUOTED = 'H';
        public const char FUNARI = 'I';
        public const char MARKET_IF_TOUCHED = 'J';
        public const char MARKET_WITH_LEFT_OVER_AS_LIMIT = 'K';
        public const char PREVIOUS_FUND_VALUATION_POINT = 'L';
        public const char NEXT_FUND_VALUATION_POINT = 'M';
        public const char PEGGED = 'P';
        public const char COUNTER_ORDER_SELECTION = 'Q';
        public const char STOP_ON_BID_OR_OFFER = 'R';
        public const char STOP_LIMIT_ON_BID_OR_OFFER = 'S';
        public const char STOP = '3';
        public const char MARKET_WITH_LEFTOVER_AS_LIMIT = 'K';
        public const char FOREX = 'C';
    }


    /// <summary>
    /// OrigClOrdID Field
    /// </summary>/
    public sealed class OrigClOrdID : StringField
    {
        public const int TAG = 41;

        public OrigClOrdID()
            : base(Tags.OrigClOrdID) { }
        public OrigClOrdID(string val)
            : base(Tags.OrigClOrdID, val) { }

    }


    /// <summary>
    /// OrigTime Field
    /// </summary>/
    public sealed class OrigTime : DateTimeField
    {
        public const int TAG = 42;

        public OrigTime()
            : base(Tags.OrigTime) { }
        public OrigTime(DateTime val)
            : base(Tags.OrigTime, val) { }
        public OrigTime(DateTime val, bool showMilliseconds)
            : base(Tags.OrigTime, val, showMilliseconds) { }
        public OrigTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.OrigTime, val, precision) { }

    }


    /// <summary>
    /// PossDupFlag Field
    /// </summary>/
    public sealed class PossDupFlag : BooleanField
    {
        public const int TAG = 43;

        public PossDupFlag()
            : base(Tags.PossDupFlag) { }
        public PossDupFlag(Boolean val)
            : base(Tags.PossDupFlag, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean POSSIBLE_DUPLICATE = true;
        public const Boolean ORIGINAL_TRANSMISSION = false;
    }


    /// <summary>
    /// Price Field
    /// </summary>/
    public sealed class Price : DecimalField
    {
        public const int TAG = 44;

        public Price()
            : base(Tags.Price) { }
        public Price(Decimal val)
            : base(Tags.Price, val) { }

    }


    /// <summary>
    /// RefSeqNum Field
    /// </summary>/
    public sealed class RefSeqNum : IntField
    {
        public const int TAG = 45;

        public RefSeqNum()
            : base(Tags.RefSeqNum) { }
        public RefSeqNum(int val)
            : base(Tags.RefSeqNum, val) { }

    }


    /// <summary>
    /// RelatdSym Field
    /// </summary>/
    public sealed class RelatdSym : StringField
    {
        public const int TAG = 46;

        public RelatdSym()
            : base(Tags.RelatdSym) { }
        public RelatdSym(string val)
            : base(Tags.RelatdSym, val) { }

    }


    /// <summary>
    /// Rule80A Field
    /// </summary>/
    public sealed class Rule80A : CharField
    {
        public const int TAG = 47;

        public Rule80A()
            : base(Tags.Rule80A) { }
        public Rule80A(char val)
            : base(Tags.Rule80A, val) { }


        // Field Enumerations
        public const char AGENCY_SINGLE_ORDER = 'A';
        public const char SHORT_EXEMPT_TRANSACTION_B = 'B';
        public const char PROPRIETARY_NON_ALGORITHMIC_PROGRAM_TRADE = 'C';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM_ORG = 'D';
        public const char SHORT_EXEMPT_TRANSACTION_FOR_PRINCIPAL = 'E';
        public const char SHORT_EXEMPT_TRANSACTION_F = 'F';
        public const char SHORT_EXEMPT_TRANSACTION_H = 'H';
        public const char INDIVIDUAL_INVESTOR_SINGLE_ORDER = 'I';
        public const char PROPRIETARY_ALGORITHMIC_PROGRAM_TRADING = 'J';
        public const char AGENCY_ALGORITHMIC_PROGRAM_TRADING = 'K';
        public const char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_AFFLIATED_WITH_THE_FIRM_CLEARING_THE_TRADE = 'L';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_MEMBER = 'M';
        public const char AGENT_FOR_OTHER_MEMBER_NON_ALGORITHMIC_PROGRAM_TRADE = 'N';
        public const char PROPRIETARY_TRANSACTIONS_FOR_COMPETING_MARKET_MAKER_THAT_IS_AFFILIATED_WITH_THE_CLEARING_MEMBER = 'O';
        public const char PRINCIPAL = 'P';
        public const char TRANSACTIONS_FOR_THE_ACCOUNT_OF_A_NON_MEMBER_COMPTING_MARKET_MAKER = 'R';
        public const char SPECIALIST_TRADES = 'S';
        public const char TRANSACTIONS_FOR_THE_ACCOUNT_OF_AN_UNAFFILIATED_MEMBERS_COMPETING_MARKET_MAKER = 'T';
        public const char AGENCY_INDEX_ARBITRAGE = 'U';
        public const char ALL_OTHER_ORDERS_AS_AGENT_FOR_OTHER_MEMBER = 'W';
        public const char SHORT_EXEMPT_TRANSACTION_FOR_MEMBER_COMPETING_MARKET_MAKER_NOT_AFFILIATED_WITH_THE_FIRM_CLEARING_THE_TRADE = 'X';
        public const char AGENCY_NON_ALGORITHMIC_PROGRAM_TRADE = 'Y';
        public const char SHORT_EXEMPT_TRANSACTION_FOR_NON_MEMBER_COMPETING_MARKET_MAKER = 'Z';
        public const char PROGRAM_ORDER_NON_INDEX_ARB_FOR_MEMBER_FIRM_ORG = 'C';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER = 'J';
        public const char PROGRAM_ORDER_NON_INDEX_ARB_FOR_INDIVIDUAL_CUSTOMER = 'K';
        public const char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_MEMBER = 'N';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_OTHER_AGENCY = 'U';
        public const char PROGRAM_ORDER_NON_INDEX_ARB_FOR_OTHER_AGENCY = 'Y';
        public const char SHORT_EXEMPT_TRANSACTION_REFER_TO_A_TYPE = 'B';
        public const char PROGRAM_ORDER_NON_INDEX_ARB_FOR_MEMBER_FIRM = 'C';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRM = 'D';
        public const char SHORT_EXEMPT_TRANSACTION_REFER_TO_W_TYPE = 'F';
        public const char SHORT_EXEMPT_TRANSACTION_REFER_TO_I_TYPE = 'H';
        public const char INDIVIDUAL_INVESTOR = 'I';
        public const char SHORT_EXEMPT_AFFILIATED = 'L';
        public const char PROPRIETARY_AFFILIATED = 'O';
        public const char TRANSACTIONS_NON_MEMBER = 'R';
        public const char TRANSACTIONS_UNAFFILIATED_MEMBER = 'T';
        public const char SHORT_EXEMPT_NOT_AFFILIATED = 'X';
        public const char SHORT_EXEMPT_NONMEMBER = 'Z';
        public const char PROGRAM_ORDER_NONINDEX_ARB_FOR_MEMBER_FIRMORG = 'C';
        public const char PROGRAM_ORDER_INDEX_ARB_FOR_MEMBER_FIRMORG = 'D';
        public const char REGISTERED_EQUITY_MARKET_MAKER_TRADES = 'E';
        public const char PROGRAM_ORDER_NONINDEX_ARB_FOR_INDIVIDUAL_CUSTOMER = 'K';
        public const char PROGRAM_ORDER_NONINDEX_ARB_FOR_OTHER_MEMBER = 'N';
        public const char COMPETING_DEALER_TRADES_O = 'O';
        public const char COMPETING_DEALER_TRADES_R = 'R';
        public const char COMPETING_DEALER_TRADES_T = 'T';
        public const char PROGRAM_ORDER_NONINDEX_ARB_FOR_OTHER_AGENCY = 'Y';
    }


    /// <summary>
    /// SecurityID Field
    /// </summary>/
    public sealed class SecurityID : StringField
    {
        public const int TAG = 48;

        public SecurityID()
            : base(Tags.SecurityID) { }
        public SecurityID(string val)
            : base(Tags.SecurityID, val) { }

    }


    /// <summary>
    /// SenderCompID Field
    /// </summary>/
    public sealed class SenderCompID : StringField
    {
        public const int TAG = 49;

        public SenderCompID()
            : base(Tags.SenderCompID) { }
        public SenderCompID(string val)
            : base(Tags.SenderCompID, val) { }

    }


    /// <summary>
    /// SenderSubID Field
    /// </summary>/
    public sealed class SenderSubID : StringField
    {
        public const int TAG = 50;

        public SenderSubID()
            : base(Tags.SenderSubID) { }
        public SenderSubID(string val)
            : base(Tags.SenderSubID, val) { }

    }


    /// <summary>
    /// SendingTime Field
    /// </summary>/
    public sealed class SendingTime : DateTimeField
    {
        public const int TAG = 52;

        public SendingTime()
            : base(Tags.SendingTime) { }
        public SendingTime(DateTime val)
            : base(Tags.SendingTime, val) { }
        public SendingTime(DateTime val, bool showMilliseconds)
            : base(Tags.SendingTime, val, showMilliseconds) { }
        public SendingTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.SendingTime, val, precision) { }

    }


    /// <summary>
    /// Shares Field
    /// </summary>/
    public sealed class Shares : DecimalField
    {
        public const int TAG = 53;

        public Shares()
            : base(Tags.Shares) { }
        public Shares(Decimal val)
            : base(Tags.Shares, val) { }

    }


    /// <summary>
    /// Side Field
    /// </summary>/
    public sealed class Side : CharField
    {
        public const int TAG = 54;

        public Side()
            : base(Tags.Side) { }
        public Side(char val)
            : base(Tags.Side, val) { }


        // Field Enumerations
        public const char BUY = '1';
        public const char SELL = '2';
        public const char BUY_MINUS = '3';
        public const char SELL_PLUS = '4';
        public const char SELL_SHORT = '5';
        public const char SELL_SHORT_EXEMPT = '6';
        public const char UNDISCLOSED = '7';
        public const char CROSS = '8';
        public const char CROSS_SHORT = '9';
        public const char CROSS_SHORT_EXEMPT = 'A';
        public const char AS_DEFINED = 'B';
        public const char OPPOSITE = 'C';
        public const char SUBSCRIBE = 'D';
        public const char REDEEM = 'E';
        public const char LEND = 'F';
        public const char BORROW = 'G';
        public const char SELL_UNDISCLOSED = 'H';
        public const char CROSS_SHORT_EXXMPT = 'A';
        public const char D = '7';
    }


    /// <summary>
    /// Symbol Field
    /// </summary>/
    public sealed class Symbol : StringField
    {
        public const int TAG = 55;

        public Symbol()
            : base(Tags.Symbol) { }
        public Symbol(string val)
            : base(Tags.Symbol, val) { }

    }


    /// <summary>
    /// TargetCompID Field
    /// </summary>/
    public sealed class TargetCompID : StringField
    {
        public const int TAG = 56;

        public TargetCompID()
            : base(Tags.TargetCompID) { }
        public TargetCompID(string val)
            : base(Tags.TargetCompID, val) { }

    }


    /// <summary>
    /// TargetSubID Field
    /// </summary>/
    public sealed class TargetSubID : StringField
    {
        public const int TAG = 57;

        public TargetSubID()
            : base(Tags.TargetSubID) { }
        public TargetSubID(string val)
            : base(Tags.TargetSubID, val) { }

    }


    /// <summary>
    /// Text Field
    /// </summary>/
    public sealed class Text : StringField
    {
        public const int TAG = 58;

        public Text()
            : base(Tags.Text) { }
        public Text(string val)
            : base(Tags.Text, val) { }

    }


    /// <summary>
    /// TimeInForce Field
    /// </summary>/
    public sealed class TimeInForce : CharField
    {
        public const int TAG = 59;

        public TimeInForce()
            : base(Tags.TimeInForce) { }
        public TimeInForce(char val)
            : base(Tags.TimeInForce, val) { }


        // Field Enumerations
        public const char DAY = '0';
        public const char GOOD_TILL_CANCEL = '1';
        public const char AT_THE_OPENING = '2';
        public const char IMMEDIATE_OR_CANCEL = '3';
        public const char FILL_OR_KILL = '4';
        public const char GOOD_TILL_CROSSING = '5';
        public const char GOOD_TILL_DATE = '6';
        public const char AT_THE_CLOSE = '7';
        public const char GOOD_THROUGH_CROSSING = '8';
        public const char AT_CROSSING = '9';
        public const char GOOD_FOR_TIME = 'A';
        public const char GOOD_FOR_AUCTION = 'B';
        public const char GOOD_FOR_THIS_MONTH = 'C';
    }


    /// <summary>
    /// TransactTime Field
    /// </summary>/
    public sealed class TransactTime : DateTimeField
    {
        public const int TAG = 60;

        public TransactTime()
            : base(Tags.TransactTime) { }
        public TransactTime(DateTime val)
            : base(Tags.TransactTime, val) { }
        public TransactTime(DateTime val, bool showMilliseconds)
            : base(Tags.TransactTime, val, showMilliseconds) { }
        public TransactTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TransactTime, val, precision) { }

    }


    /// <summary>
    /// Urgency Field
    /// </summary>/
    public sealed class Urgency : CharField
    {
        public const int TAG = 61;

        public Urgency()
            : base(Tags.Urgency) { }
        public Urgency(char val)
            : base(Tags.Urgency, val) { }


        // Field Enumerations
        public const char NORMAL = '0';
        public const char FLASH = '1';
        public const char BACKGROUND = '2';
    }


    /// <summary>
    /// ValidUntilTime Field
    /// </summary>/
    public sealed class ValidUntilTime : DateTimeField
    {
        public const int TAG = 62;

        public ValidUntilTime()
            : base(Tags.ValidUntilTime) { }
        public ValidUntilTime(DateTime val)
            : base(Tags.ValidUntilTime, val) { }
        public ValidUntilTime(DateTime val, bool showMilliseconds)
            : base(Tags.ValidUntilTime, val, showMilliseconds) { }
        public ValidUntilTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ValidUntilTime, val, precision) { }

    }


    /// <summary>
    /// SettlmntTyp Field
    /// </summary>/
    public sealed class SettlmntTyp : CharField
    {
        public const int TAG = 63;

        public SettlmntTyp()
            : base(Tags.SettlmntTyp) { }
        public SettlmntTyp(char val)
            : base(Tags.SettlmntTyp, val) { }


        // Field Enumerations
        public const char REGULAR = '0';
        public const char CASH = '1';
        public const char NEXT_DAY = '2';
        public const char T_PLUS_2 = '3';
        public const char T_PLUS_3 = '4';
        public const char T_PLUS_4 = '5';
        public const char FUTURE = '6';
        public const char WHEN_AND_IF_ISSUED = '7';
        public const char SELLERS_OPTION = '8';
        public const char T_PLUS_5 = '9';
        public const char T_PLUS_1 = 'A';
        public const char TPLUS2 = '3';
        public const char TPLUS3 = '4';
        public const char TPLUS4 = '5';
        public const char WHEN_ISSUED = '7';
        public const char TPLUS5 = '9';
    }


    /// <summary>
    /// FutSettDate Field
    /// </summary>/
    public sealed class FutSettDate : StringField
    {
        public const int TAG = 64;

        public FutSettDate()
            : base(Tags.FutSettDate) { }
        public FutSettDate(string val)
            : base(Tags.FutSettDate, val) { }

    }


    /// <summary>
    /// SymbolSfx Field
    /// </summary>/
    public sealed class SymbolSfx : StringField
    {
        public const int TAG = 65;

        public SymbolSfx()
            : base(Tags.SymbolSfx) { }
        public SymbolSfx(string val)
            : base(Tags.SymbolSfx, val) { }


        // Field Enumerations
        public const string EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = "CD";
        public const string WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN = "WI";
        public const string WHEN_ISSUED = "WI";
        public const string A_EUCP_WITH_LUMP_SUM_INTEREST = "CD";
    }


    /// <summary>
    /// ListID Field
    /// </summary>/
    public sealed class ListID : StringField
    {
        public const int TAG = 66;

        public ListID()
            : base(Tags.ListID) { }
        public ListID(string val)
            : base(Tags.ListID, val) { }

    }


    /// <summary>
    /// ListSeqNo Field
    /// </summary>/
    public sealed class ListSeqNo : IntField
    {
        public const int TAG = 67;

        public ListSeqNo()
            : base(Tags.ListSeqNo) { }
        public ListSeqNo(int val)
            : base(Tags.ListSeqNo, val) { }

    }


    /// <summary>
    /// ListNoOrds Field
    /// </summary>/
    public sealed class ListNoOrds : IntField
    {
        public const int TAG = 68;

        public ListNoOrds()
            : base(Tags.ListNoOrds) { }
        public ListNoOrds(int val)
            : base(Tags.ListNoOrds, val) { }

    }


    /// <summary>
    /// ListExecInst Field
    /// </summary>/
    public sealed class ListExecInst : StringField
    {
        public const int TAG = 69;

        public ListExecInst()
            : base(Tags.ListExecInst) { }
        public ListExecInst(string val)
            : base(Tags.ListExecInst, val) { }

    }


    /// <summary>
    /// AllocID Field
    /// </summary>/
    public sealed class AllocID : StringField
    {
        public const int TAG = 70;

        public AllocID()
            : base(Tags.AllocID) { }
        public AllocID(string val)
            : base(Tags.AllocID, val) { }

    }


    /// <summary>
    /// AllocTransType Field
    /// </summary>/
    public sealed class AllocTransType : CharField
    {
        public const int TAG = 71;

        public AllocTransType()
            : base(Tags.AllocTransType) { }
        public AllocTransType(char val)
            : base(Tags.AllocTransType, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char REPLACE = '1';
        public const char CANCEL = '2';
        public const char PRELIMINARY = '3';
        public const char CALCULATED = '4';
        public const char CALCULATED_WITHOUT_PRELIMINARY = '5';
        public const char REVERSAL = '6';
    }


    /// <summary>
    /// RefAllocID Field
    /// </summary>/
    public sealed class RefAllocID : StringField
    {
        public const int TAG = 72;

        public RefAllocID()
            : base(Tags.RefAllocID) { }
        public RefAllocID(string val)
            : base(Tags.RefAllocID, val) { }

    }


    /// <summary>
    /// NoOrders Field
    /// </summary>/
    public sealed class NoOrders : IntField
    {
        public const int TAG = 73;

        public NoOrders()
            : base(Tags.NoOrders) { }
        public NoOrders(int val)
            : base(Tags.NoOrders, val) { }

    }


    /// <summary>
    /// AvgPrxPrecision Field
    /// </summary>/
    public sealed class AvgPrxPrecision : IntField
    {
        public const int TAG = 74;

        public AvgPrxPrecision()
            : base(Tags.AvgPrxPrecision) { }
        public AvgPrxPrecision(int val)
            : base(Tags.AvgPrxPrecision, val) { }

    }


    /// <summary>
    /// TradeDate Field
    /// </summary>/
    public sealed class TradeDate : StringField
    {
        public const int TAG = 75;

        public TradeDate()
            : base(Tags.TradeDate) { }
        public TradeDate(string val)
            : base(Tags.TradeDate, val) { }

    }


    /// <summary>
    /// ExecBroker Field
    /// </summary>/
    public sealed class ExecBroker : StringField
    {
        public const int TAG = 76;

        public ExecBroker()
            : base(Tags.ExecBroker) { }
        public ExecBroker(string val)
            : base(Tags.ExecBroker, val) { }

    }


    /// <summary>
    /// OpenClose Field
    /// </summary>/
    public sealed class OpenClose : CharField
    {
        public const int TAG = 77;

        public OpenClose()
            : base(Tags.OpenClose) { }
        public OpenClose(char val)
            : base(Tags.OpenClose, val) { }


        // Field Enumerations
        public const char OPEN = 'O';
        public const char CLOSE = 'C';
    }


    /// <summary>
    /// NoAllocs Field
    /// </summary>/
    public sealed class NoAllocs : IntField
    {
        public const int TAG = 78;

        public NoAllocs()
            : base(Tags.NoAllocs) { }
        public NoAllocs(int val)
            : base(Tags.NoAllocs, val) { }

    }


    /// <summary>
    /// AllocAccount Field
    /// </summary>/
    public sealed class AllocAccount : StringField
    {
        public const int TAG = 79;

        public AllocAccount()
            : base(Tags.AllocAccount) { }
        public AllocAccount(string val)
            : base(Tags.AllocAccount, val) { }

    }


    /// <summary>
    /// AllocShares Field
    /// </summary>/
    public sealed class AllocShares : DecimalField
    {
        public const int TAG = 80;

        public AllocShares()
            : base(Tags.AllocShares) { }
        public AllocShares(Decimal val)
            : base(Tags.AllocShares, val) { }

    }


    /// <summary>
    /// ProcessCode Field
    /// </summary>/
    public sealed class ProcessCode : CharField
    {
        public const int TAG = 81;

        public ProcessCode()
            : base(Tags.ProcessCode) { }
        public ProcessCode(char val)
            : base(Tags.ProcessCode, val) { }


        // Field Enumerations
        public const char REGULAR = '0';
        public const char SOFT_DOLLAR = '1';
        public const char STEP_IN = '2';
        public const char STEP_OUT = '3';
        public const char SOFT_DOLLAR_STEP_IN = '4';
        public const char SOFT_DOLLAR_STEP_OUT = '5';
        public const char PLAN_SPONSOR = '6';
        public const char STEPIN = '2';
        public const char STEPOUT = '3';
        public const char SOFTDOLLAR_STEPIN = '4';
        public const char SOFTDOLLAR_STEPOUT = '5';
    }


    /// <summary>
    /// NoRpts Field
    /// </summary>/
    public sealed class NoRpts : IntField
    {
        public const int TAG = 82;

        public NoRpts()
            : base(Tags.NoRpts) { }
        public NoRpts(int val)
            : base(Tags.NoRpts, val) { }

    }


    /// <summary>
    /// RptSeq Field
    /// </summary>/
    public sealed class RptSeq : IntField
    {
        public const int TAG = 83;

        public RptSeq()
            : base(Tags.RptSeq) { }
        public RptSeq(int val)
            : base(Tags.RptSeq, val) { }

    }


    /// <summary>
    /// CxlQty Field
    /// </summary>/
    public sealed class CxlQty : DecimalField
    {
        public const int TAG = 84;

        public CxlQty()
            : base(Tags.CxlQty) { }
        public CxlQty(Decimal val)
            : base(Tags.CxlQty, val) { }

    }


    /// <summary>
    /// NoDlvyInst Field
    /// </summary>/
    public sealed class NoDlvyInst : IntField
    {
        public const int TAG = 85;

        public NoDlvyInst()
            : base(Tags.NoDlvyInst) { }
        public NoDlvyInst(int val)
            : base(Tags.NoDlvyInst, val) { }

    }


    /// <summary>
    /// DlvyInst Field
    /// </summary>/
    public sealed class DlvyInst : StringField
    {
        public const int TAG = 86;

        public DlvyInst()
            : base(Tags.DlvyInst) { }
        public DlvyInst(string val)
            : base(Tags.DlvyInst, val) { }

    }


    /// <summary>
    /// AllocStatus Field
    /// </summary>/
    public sealed class AllocStatus : IntField
    {
        public const int TAG = 87;

        public AllocStatus()
            : base(Tags.AllocStatus) { }
        public AllocStatus(int val)
            : base(Tags.AllocStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int BLOCK_LEVEL_REJECT = 1;
        public const int ACCOUNT_LEVEL_REJECT = 2;
        public const int RECEIVED = 3;
        public const int INCOMPLETE = 4;
        public const int REJECTED_BY_INTERMEDIARY = 5;
        public const int ALLOCATION_PENDING = 6;
        public const int REVERSED = 7;
        public const int CANCELLED_BY_INTERMEDIARY = 8;
        public const int CLAIMED = 9;
        public const int REFUSED = 10;
        public const int PENDING_GIVE_UP_APPROVAL = 11;
        public const int CANCELLED = 12;
        public const int PENDING_TAKE_UP_APPROVAL = 13;
        public const int REVERSAL_PENDING = 14;
        public const int REJECTED = 1;
        public const int PARTIAL_ACCEPT = 2;
    }


    /// <summary>
    /// AllocRejCode Field
    /// </summary>/
    public sealed class AllocRejCode : IntField
    {
        public const int TAG = 88;

        public AllocRejCode()
            : base(Tags.AllocRejCode) { }
        public AllocRejCode(int val)
            : base(Tags.AllocRejCode, val) { }


        // Field Enumerations
        public const int UNKNOWN_OR_MISSING_ACCOUNT = 0;
        public const int INCORRECT_OR_MISSING_BLOCK_QUANTITY = 1;
        public const int INCORRECT_OR_MISSING_AVERAGE_PRICE = 2;
        public const int UNKNOWN_EXECUTING_BROKER_MNEMONIC = 3;
        public const int INCORRECT_OR_MISSING_COMMISSION = 4;
        public const int UNKNOWN_ORDERID = 5;
        public const int UNKNOWN_LISTID = 6;
        public const int OTHER_7 = 7;
        public const int INCORRECT_OR_MISSING_ALLOCATED_QUANTITY = 8;
        public const int CALCULATION_DIFFERENCE = 9;
        public const int UNKNOWN_OR_STALE_EXECID = 10;
        public const int MISMATCHED_DATA = 11;
        public const int UNKNOWN_CLORDID = 12;
        public const int WAREHOUSE_REQUEST_REJECTED = 13;
        public const int OTHER_99 = 99;
        public const int DUPLICATE_OR_MISSING_INDIVIDUALALLOCID = 14;
        public const int TRADE_NOT_RECOGNIZED = 15;
        public const int TRADE_PREVIOUSLY_ALLOCATED = 16;
        public const int INCORRECT_OR_MISSING_INSTRUMENT = 17;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_DATE = 18;
        public const int INCORRECT_OR_MISSING_FUND_ID_OR_FUND_NAME = 19;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_INSTRUCTIONS = 20;
        public const int INCORRECT_OR_MISSING_FEES = 21;
        public const int INCORRECT_OR_MISSING_TAX = 22;
        public const int UNKNOWN_OR_MISSING_PARTY = 23;
        public const int INCORRECT_OR_MISSING_SIDE = 24;
        public const int INCORRECT_OR_MISSING_NET_MONEY = 25;
        public const int INCORRECT_OR_MISSING_TRADE_DATE = 26;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_CURRENCY_INSTRUCTIONS = 27;
        public const int INCORRRECT_OR_MISSING_PROCESSCODE = 28;
        public const int UNKNOWN_ACCOUNT = 0;
        public const int INCORRECT_QUANTITY = 1;
        public const int INCORRECT_AVERAGEG_PRICE = 2;
        public const int COMMISSION_DIFFERENCE = 4;
        public const int OTHER = 7;
        public const int INCORRECT_ALLOCATED_QUANTITY = 8;
        public const int INCORRECT_AVERAGE_PRICE = 2;
        public const int UNKNOWN_OR_STALE_EXEC_ID = 10;
        public const int MISMATCHED_DATA_VALUE = 11;
    }


    /// <summary>
    /// Signature Field
    /// </summary>/
    public sealed class Signature : StringField
    {
        public const int TAG = 89;

        public Signature()
            : base(Tags.Signature) { }
        public Signature(string val)
            : base(Tags.Signature, val) { }

    }


    /// <summary>
    /// SecureDataLen Field
    /// </summary>/
    public sealed class SecureDataLen : IntField
    {
        public const int TAG = 90;

        public SecureDataLen()
            : base(Tags.SecureDataLen) { }
        public SecureDataLen(int val)
            : base(Tags.SecureDataLen, val) { }

    }


    /// <summary>
    /// SecureData Field
    /// </summary>/
    public sealed class SecureData : StringField
    {
        public const int TAG = 91;

        public SecureData()
            : base(Tags.SecureData) { }
        public SecureData(string val)
            : base(Tags.SecureData, val) { }

    }


    /// <summary>
    /// BrokerOfCredit Field
    /// </summary>/
    public sealed class BrokerOfCredit : StringField
    {
        public const int TAG = 92;

        public BrokerOfCredit()
            : base(Tags.BrokerOfCredit) { }
        public BrokerOfCredit(string val)
            : base(Tags.BrokerOfCredit, val) { }

    }


    /// <summary>
    /// SignatureLength Field
    /// </summary>/
    public sealed class SignatureLength : IntField
    {
        public const int TAG = 93;

        public SignatureLength()
            : base(Tags.SignatureLength) { }
        public SignatureLength(int val)
            : base(Tags.SignatureLength, val) { }

    }


    /// <summary>
    /// EmailType Field
    /// </summary>/
    public sealed class EmailType : CharField
    {
        public const int TAG = 94;

        public EmailType()
            : base(Tags.EmailType) { }
        public EmailType(char val)
            : base(Tags.EmailType, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char REPLY = '1';
        public const char ADMIN_REPLY = '2';
    }


    /// <summary>
    /// RawDataLength Field
    /// </summary>/
    public sealed class RawDataLength : IntField
    {
        public const int TAG = 95;

        public RawDataLength()
            : base(Tags.RawDataLength) { }
        public RawDataLength(int val)
            : base(Tags.RawDataLength, val) { }

    }


    /// <summary>
    /// RawData Field
    /// </summary>/
    public sealed class RawData : StringField
    {
        public const int TAG = 96;

        public RawData()
            : base(Tags.RawData) { }
        public RawData(string val)
            : base(Tags.RawData, val) { }

    }


    /// <summary>
    /// PossResend Field
    /// </summary>/
    public sealed class PossResend : BooleanField
    {
        public const int TAG = 97;

        public PossResend()
            : base(Tags.PossResend) { }
        public PossResend(Boolean val)
            : base(Tags.PossResend, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// EncryptMethod Field
    /// </summary>/
    public sealed class EncryptMethod : IntField
    {
        public const int TAG = 98;

        public EncryptMethod()
            : base(Tags.EncryptMethod) { }
        public EncryptMethod(int val)
            : base(Tags.EncryptMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int PKCS_1 = 1;
        public const int DES = 2;
        public const int PKCS_3 = 3;
        public const int PGP_4 = 4;
        public const int PGP_5 = 5;
        public const int PEM = 6;
        public const int NONE_OTHER = 0;
        public const int PKCS = 1;
        public const int PKCS_DES = 3;
        public const int PGP_DES = 4;
        public const int PGP_DES_MD5 = 5;
        public const int PEM_DES_MD5 = 6;
        public const int PKCS_PROPRIETARY = 1;
        public const int PKCSDES = 3;
        public const int PGPDES = 4;
        public const int PGPDESMD5 = 5;
        public const int PEMDESMD5 = 6;
    }


    /// <summary>
    /// StopPx Field
    /// </summary>/
    public sealed class StopPx : DecimalField
    {
        public const int TAG = 99;

        public StopPx()
            : base(Tags.StopPx) { }
        public StopPx(Decimal val)
            : base(Tags.StopPx, val) { }

    }


    /// <summary>
    /// ExDestination Field
    /// </summary>/
    public sealed class ExDestination : StringField
    {
        public const int TAG = 100;

        public ExDestination()
            : base(Tags.ExDestination) { }
        public ExDestination(string val)
            : base(Tags.ExDestination, val) { }


        // Field Enumerations
        public const string NONE = "0";
        public const string POSIT = "4";
    }


    /// <summary>
    /// CxlRejReason Field
    /// </summary>/
    public sealed class CxlRejReason : IntField
    {
        public const int TAG = 102;

        public CxlRejReason()
            : base(Tags.CxlRejReason) { }
        public CxlRejReason(int val)
            : base(Tags.CxlRejReason, val) { }


        // Field Enumerations
        public const int TOO_LATE_TO_CANCEL = 0;
        public const int UNKNOWN_ORDER = 1;
        public const int BROKER = 2;
        public const int ORDER_ALREADY_IN_PENDING_CANCEL_OR_PENDING_REPLACE_STATUS = 3;
        public const int UNABLE_TO_PROCESS_ORDER_MASS_CANCEL_REQUEST = 4;
        public const int ORIGORDMODTIME = 5;
        public const int DUPLICATE_CLORDID = 6;
        public const int PRICE_EXCEEDS_CURRENT_PRICE = 7;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND = 8;
        public const int INVALID_PRICE_INCREMENT = 18;
        public const int OTHER = 99;
        public const int BROKER_EXCHANGE_OPTION = 2;
        public const int ORIGORDMODTIME_DID_NOT_MATCH_LAST_TRANSACTTIME_OF_ORDER = 5;
        public const int DUPLICATE_CLORDID_RECEIVED = 6;
        public const int ALREADY_PENDING = 3;
        public const int BROKER_OPTION = 2;
    }


    /// <summary>
    /// OrdRejReason Field
    /// </summary>/
    public sealed class OrdRejReason : IntField
    {
        public const int TAG = 103;

        public OrdRejReason()
            : base(Tags.OrdRejReason) { }
        public OrdRejReason(int val)
            : base(Tags.OrdRejReason, val) { }


        // Field Enumerations
        public const int BROKER = 0;
        public const int UNKNOWN_SYMBOL = 1;
        public const int EXCHANGE_CLOSED = 2;
        public const int ORDER_EXCEEDS_LIMIT = 3;
        public const int TOO_LATE_TO_ENTER = 4;
        public const int UNKNOWN_ORDER = 5;
        public const int DUPLICATE_ORDER = 6;
        public const int DUPLICATE_OF_A_VERBALLY_COMMUNICATED_ORDER = 7;
        public const int STALE_ORDER = 8;
        public const int TRADE_ALONG_REQUIRED = 9;
        public const int INVALID_INVESTOR_ID = 10;
        public const int UNSUPPORTED_ORDER_CHARACTERISTIC = 11;
        public const int SURVEILLANCE_OPTION = 12;
        public const int INCORRECT_QUANTITY = 13;
        public const int INCORRECT_ALLOCATED_QUANTITY = 14;
        public const int UNKNOWN_ACCOUNT = 15;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND = 16;
        public const int INVALID_PRICE_INCREMENT = 18;
        public const int OTHER = 99;
        public const int REFERENCE_PRICE_NOT_AVAILABLE = 19;
        public const int NOTIONAL_VALUE_EXCEEDS_THRESHOLD = 20;
        public const int ALGORITHM_RISK_THRESHOLD_BREACHED = 21;
        public const int SHORT_SELL_NOT_PERMITTED = 22;
        public const int SHORT_SELL_REJECTED_DUE_TO_SECURITY_PRE_BORROW_RESTRICTION = 23;
        public const int SHORT_SELL_REJECTED_DUE_TO_ACCOUNT_PRE_BORROW_RESTRICTION = 24;
        public const int INSUFFICIENT_CREDIT_LIMIT = 25;
        public const int EXCEEDED_CLIP_SIZE_LIMIT = 26;
        public const int EXCEEDED_MAXIMUM_NOTIONAL_ORDER_AMOUNT = 27;
        public const int EXCEEDED_DV01_PV01_LIMIT = 28;
        public const int EXCEEDED_CS01_LIMIT = 29;
        public const int SURVEILLENCE_OPTION = 12;
        public const int BROKER_EXCHANGE_OPTION = 0;
        public const int BROKER_OPTION = 0;
        public const int DUPLICATE_VERBAL = 7;
        public const int DUPLICATE_VERBALYES = 7;
    }


    /// <summary>
    /// IOIQualifier Field
    /// </summary>/
    public sealed class IOIQualifier : CharField
    {
        public const int TAG = 104;

        public IOIQualifier()
            : base(Tags.IOIQualifier) { }
        public IOIQualifier(char val)
            : base(Tags.IOIQualifier, val) { }


        // Field Enumerations
        public const char ALL_OR_NONE = 'A';
        public const char MARKET_ON_CLOSE = 'B';
        public const char AT_THE_CLOSE = 'C';
        public const char VWAP = 'D';
        public const char IN_TOUCH_WITH = 'I';
        public const char LIMIT = 'L';
        public const char MORE_BEHIND = 'M';
        public const char AT_THE_OPEN = 'O';
        public const char TAKING_A_POSITION = 'P';
        public const char AT_THE_MARKET = 'Q';
        public const char READY_TO_TRADE = 'R';
        public const char INVENTORY_OR_PORTFOLIO_SHOWN = 'S';
        public const char THROUGH_THE_DAY = 'T';
        public const char VERSUS = 'V';
        public const char INDICATION = 'W';
        public const char CROSSING_OPPORTUNITY = 'X';
        public const char AT_THE_MIDPOINT = 'Y';
        public const char PRE_OPEN = 'Z';
        public const char AXE = 'E';
        public const char AXE_ON_BID = 'F';
        public const char AXE_ON_OFFER = 'G';
        public const char OUTSIDE_SPREAD = 'c';
        public const char CLIENT_NATURAL_BLOCK = 'N';
        public const char CLIENT_NATURAL_WORKING = 'H';
        public const char UNWIND = 'U';
        public const char POSITION_WANTED = 'J';
        public const char MARKET_MAKING = 'K';
        public const char QUANTITY_IS_NEGOTIABLE = '1';
        public const char ALLOW_LATE_BIDS = '2';
        public const char IMMEDIATE_OR_COUNTER = '3';
        public const char AUTO_TRADE = '4';
        public const char AUTOMATIC_SPOT = 'a';
        public const char PLATFORM_CALCULATED_SPOT = 'b';
        public const char DEFERRED_SPOT = 'd';
        public const char NEGOTIATED_SPOT = 'n';
        public const char PORTFOLIO_SHOWN = 'S';
        public const char INDIDCATION = 'W';
        public const char INDICATION_WORKING_AWAY = 'W';
        public const char PREOPEN = 'Z';
        public const char CURRENT_QUOTE = 'Q';
    }


    /// <summary>
    /// WaveNo Field
    /// </summary>/
    public sealed class WaveNo : StringField
    {
        public const int TAG = 105;

        public WaveNo()
            : base(Tags.WaveNo) { }
        public WaveNo(string val)
            : base(Tags.WaveNo, val) { }

    }


    /// <summary>
    /// Issuer Field
    /// </summary>/
    public sealed class Issuer : StringField
    {
        public const int TAG = 106;

        public Issuer()
            : base(Tags.Issuer) { }
        public Issuer(string val)
            : base(Tags.Issuer, val) { }

    }


    /// <summary>
    /// SecurityDesc Field
    /// </summary>/
    public sealed class SecurityDesc : StringField
    {
        public const int TAG = 107;

        public SecurityDesc()
            : base(Tags.SecurityDesc) { }
        public SecurityDesc(string val)
            : base(Tags.SecurityDesc, val) { }

    }


    /// <summary>
    /// HeartBtInt Field
    /// </summary>/
    public sealed class HeartBtInt : IntField
    {
        public const int TAG = 108;

        public HeartBtInt()
            : base(Tags.HeartBtInt) { }
        public HeartBtInt(int val)
            : base(Tags.HeartBtInt, val) { }

    }


    /// <summary>
    /// ClientID Field
    /// </summary>/
    public sealed class ClientID : StringField
    {
        public const int TAG = 109;

        public ClientID()
            : base(Tags.ClientID) { }
        public ClientID(string val)
            : base(Tags.ClientID, val) { }

    }


    /// <summary>
    /// MinQty Field
    /// </summary>/
    public sealed class MinQty : DecimalField
    {
        public const int TAG = 110;

        public MinQty()
            : base(Tags.MinQty) { }
        public MinQty(Decimal val)
            : base(Tags.MinQty, val) { }

    }


    /// <summary>
    /// MaxFloor Field
    /// </summary>/
    public sealed class MaxFloor : DecimalField
    {
        public const int TAG = 111;

        public MaxFloor()
            : base(Tags.MaxFloor) { }
        public MaxFloor(Decimal val)
            : base(Tags.MaxFloor, val) { }

    }


    /// <summary>
    /// TestReqID Field
    /// </summary>/
    public sealed class TestReqID : StringField
    {
        public const int TAG = 112;

        public TestReqID()
            : base(Tags.TestReqID) { }
        public TestReqID(string val)
            : base(Tags.TestReqID, val) { }

    }


    /// <summary>
    /// ReportToExch Field
    /// </summary>/
    public sealed class ReportToExch : BooleanField
    {
        public const int TAG = 113;

        public ReportToExch()
            : base(Tags.ReportToExch) { }
        public ReportToExch(Boolean val)
            : base(Tags.ReportToExch, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// LocateReqd Field
    /// </summary>/
    public sealed class LocateReqd : BooleanField
    {
        public const int TAG = 114;

        public LocateReqd()
            : base(Tags.LocateReqd) { }
        public LocateReqd(Boolean val)
            : base(Tags.LocateReqd, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// OnBehalfOfCompID Field
    /// </summary>/
    public sealed class OnBehalfOfCompID : StringField
    {
        public const int TAG = 115;

        public OnBehalfOfCompID()
            : base(Tags.OnBehalfOfCompID) { }
        public OnBehalfOfCompID(string val)
            : base(Tags.OnBehalfOfCompID, val) { }

    }


    /// <summary>
    /// OnBehalfOfSubID Field
    /// </summary>/
    public sealed class OnBehalfOfSubID : StringField
    {
        public const int TAG = 116;

        public OnBehalfOfSubID()
            : base(Tags.OnBehalfOfSubID) { }
        public OnBehalfOfSubID(string val)
            : base(Tags.OnBehalfOfSubID, val) { }

    }


    /// <summary>
    /// QuoteID Field
    /// </summary>/
    public sealed class QuoteID : StringField
    {
        public const int TAG = 117;

        public QuoteID()
            : base(Tags.QuoteID) { }
        public QuoteID(string val)
            : base(Tags.QuoteID, val) { }

    }


    /// <summary>
    /// NetMoney Field
    /// </summary>/
    public sealed class NetMoney : DecimalField
    {
        public const int TAG = 118;

        public NetMoney()
            : base(Tags.NetMoney) { }
        public NetMoney(Decimal val)
            : base(Tags.NetMoney, val) { }

    }


    /// <summary>
    /// SettlCurrAmt Field
    /// </summary>/
    public sealed class SettlCurrAmt : DecimalField
    {
        public const int TAG = 119;

        public SettlCurrAmt()
            : base(Tags.SettlCurrAmt) { }
        public SettlCurrAmt(Decimal val)
            : base(Tags.SettlCurrAmt, val) { }

    }


    /// <summary>
    /// SettlCurrency Field
    /// </summary>/
    public sealed class SettlCurrency : StringField
    {
        public const int TAG = 120;

        public SettlCurrency()
            : base(Tags.SettlCurrency) { }
        public SettlCurrency(string val)
            : base(Tags.SettlCurrency, val) { }

    }


    /// <summary>
    /// ForexReq Field
    /// </summary>/
    public sealed class ForexReq : BooleanField
    {
        public const int TAG = 121;

        public ForexReq()
            : base(Tags.ForexReq) { }
        public ForexReq(Boolean val)
            : base(Tags.ForexReq, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// OrigSendingTime Field
    /// </summary>/
    public sealed class OrigSendingTime : DateTimeField
    {
        public const int TAG = 122;

        public OrigSendingTime()
            : base(Tags.OrigSendingTime) { }
        public OrigSendingTime(DateTime val)
            : base(Tags.OrigSendingTime, val) { }
        public OrigSendingTime(DateTime val, bool showMilliseconds)
            : base(Tags.OrigSendingTime, val, showMilliseconds) { }
        public OrigSendingTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.OrigSendingTime, val, precision) { }

    }


    /// <summary>
    /// GapFillFlag Field
    /// </summary>/
    public sealed class GapFillFlag : BooleanField
    {
        public const int TAG = 123;

        public GapFillFlag()
            : base(Tags.GapFillFlag) { }
        public GapFillFlag(Boolean val)
            : base(Tags.GapFillFlag, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean GAP_FILL_MESSAGE_MSGSEQNUM_FIELD_VALID = true;
        public const Boolean SEQUENCE_RESET_IGNORE_MSGSEQNUM = false;
    }


    /// <summary>
    /// NoExecs Field
    /// </summary>/
    public sealed class NoExecs : IntField
    {
        public const int TAG = 124;

        public NoExecs()
            : base(Tags.NoExecs) { }
        public NoExecs(int val)
            : base(Tags.NoExecs, val) { }

    }


    /// <summary>
    /// CxlType Field
    /// </summary>/
    public sealed class CxlType : CharField
    {
        public const int TAG = 125;

        public CxlType()
            : base(Tags.CxlType) { }
        public CxlType(char val)
            : base(Tags.CxlType, val) { }


        // Field Enumerations
        public const char PARTIAL_CANCEL = 'P';
        public const char FULL_REMAINING_QUANTITY = 'F';
    }


    /// <summary>
    /// ExpireTime Field
    /// </summary>/
    public sealed class ExpireTime : DateTimeField
    {
        public const int TAG = 126;

        public ExpireTime()
            : base(Tags.ExpireTime) { }
        public ExpireTime(DateTime val)
            : base(Tags.ExpireTime, val) { }
        public ExpireTime(DateTime val, bool showMilliseconds)
            : base(Tags.ExpireTime, val, showMilliseconds) { }
        public ExpireTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ExpireTime, val, precision) { }

    }


    /// <summary>
    /// DKReason Field
    /// </summary>/
    public sealed class DKReason : CharField
    {
        public const int TAG = 127;

        public DKReason()
            : base(Tags.DKReason) { }
        public DKReason(char val)
            : base(Tags.DKReason, val) { }


        // Field Enumerations
        public const char UNKNOWN_SECURITY = 'A';
        public const char WRONG_SIDE = 'B';
        public const char QUANTITY_EXCEEDS_ORDER = 'C';
        public const char NO_MATCHING_ORDER = 'D';
        public const char PRICE_EXCEEDS_LIMIT = 'E';
        public const char CALCULATION_DIFFERENCE = 'F';
        public const char OTHER = 'Z';
        public const char NO_MATCHING_EXECUTIONREPORT = 'G';
        public const char UNKNOWN_SYMBOL = 'A';
    }


    /// <summary>
    /// DeliverToCompID Field
    /// </summary>/
    public sealed class DeliverToCompID : StringField
    {
        public const int TAG = 128;

        public DeliverToCompID()
            : base(Tags.DeliverToCompID) { }
        public DeliverToCompID(string val)
            : base(Tags.DeliverToCompID, val) { }

    }


    /// <summary>
    /// DeliverToSubID Field
    /// </summary>/
    public sealed class DeliverToSubID : StringField
    {
        public const int TAG = 129;

        public DeliverToSubID()
            : base(Tags.DeliverToSubID) { }
        public DeliverToSubID(string val)
            : base(Tags.DeliverToSubID, val) { }

    }


    /// <summary>
    /// IOINaturalFlag Field
    /// </summary>/
    public sealed class IOINaturalFlag : BooleanField
    {
        public const int TAG = 130;

        public IOINaturalFlag()
            : base(Tags.IOINaturalFlag) { }
        public IOINaturalFlag(Boolean val)
            : base(Tags.IOINaturalFlag, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean NATURAL = true;
        public const Boolean NOT_NATURAL = false;
    }


    /// <summary>
    /// QuoteReqID Field
    /// </summary>/
    public sealed class QuoteReqID : StringField
    {
        public const int TAG = 131;

        public QuoteReqID()
            : base(Tags.QuoteReqID) { }
        public QuoteReqID(string val)
            : base(Tags.QuoteReqID, val) { }

    }


    /// <summary>
    /// BidPx Field
    /// </summary>/
    public sealed class BidPx : DecimalField
    {
        public const int TAG = 132;

        public BidPx()
            : base(Tags.BidPx) { }
        public BidPx(Decimal val)
            : base(Tags.BidPx, val) { }

    }


    /// <summary>
    /// OfferPx Field
    /// </summary>/
    public sealed class OfferPx : DecimalField
    {
        public const int TAG = 133;

        public OfferPx()
            : base(Tags.OfferPx) { }
        public OfferPx(Decimal val)
            : base(Tags.OfferPx, val) { }

    }


    /// <summary>
    /// BidSize Field
    /// </summary>/
    public sealed class BidSize : DecimalField
    {
        public const int TAG = 134;

        public BidSize()
            : base(Tags.BidSize) { }
        public BidSize(Decimal val)
            : base(Tags.BidSize, val) { }

    }


    /// <summary>
    /// OfferSize Field
    /// </summary>/
    public sealed class OfferSize : DecimalField
    {
        public const int TAG = 135;

        public OfferSize()
            : base(Tags.OfferSize) { }
        public OfferSize(Decimal val)
            : base(Tags.OfferSize, val) { }

    }


    /// <summary>
    /// NoMiscFees Field
    /// </summary>/
    public sealed class NoMiscFees : IntField
    {
        public const int TAG = 136;

        public NoMiscFees()
            : base(Tags.NoMiscFees) { }
        public NoMiscFees(int val)
            : base(Tags.NoMiscFees, val) { }

    }


    /// <summary>
    /// MiscFeeAmt Field
    /// </summary>/
    public sealed class MiscFeeAmt : DecimalField
    {
        public const int TAG = 137;

        public MiscFeeAmt()
            : base(Tags.MiscFeeAmt) { }
        public MiscFeeAmt(Decimal val)
            : base(Tags.MiscFeeAmt, val) { }

    }


    /// <summary>
    /// MiscFeeCurr Field
    /// </summary>/
    public sealed class MiscFeeCurr : StringField
    {
        public const int TAG = 138;

        public MiscFeeCurr()
            : base(Tags.MiscFeeCurr) { }
        public MiscFeeCurr(string val)
            : base(Tags.MiscFeeCurr, val) { }

    }


    /// <summary>
    /// MiscFeeType Field
    /// </summary>/
    public sealed class MiscFeeType : StringField
    {
        public const int TAG = 139;

        public MiscFeeType()
            : base(Tags.MiscFeeType) { }
        public MiscFeeType(string val)
            : base(Tags.MiscFeeType, val) { }


        // Field Enumerations
        public const string REGULATORY = "1";
        public const string TAX = "2";
        public const string LOCAL_COMMISSION = "3";
        public const string EXCHANGE_FEES = "4";
        public const string STAMP = "5";
        public const string LEVY = "6";
        public const string OTHER = "7";
        public const string MARKUP = "8";
        public const string CONSUMPTION_TAX = "9";
        public const string PER_TRANSACTION = "10";
        public const string CONVERSION = "11";
        public const string AGENT = "12";
        public const string TRANSFER_FEE = "13";
        public const string SECURITY_LENDING = "14";
        public const string TRADE_REPORTING = "15";
        public const string TAX_ON_PRINCIPAL_AMOUNT = "16";
        public const string TAX_ON_ACCRUED_INTEREST_AMOUNT = "17";
        public const string NEW_ISSUANCE_FEE = "18";
        public const string SERVICE_FEE = "19";
        public const string ODD_LOT_FEE = "20";
        public const string AUCTION_FEE = "21";
        public const string VALUE_ADDED_TAX = "22";
        public const string SALES_TAX = "23";
        public const string EXECUTION_VENUE_FEE = "24";
        public const string ORDER_OR_QUOTE_ENTRY_FEE = "25";
        public const string ORDER_OR_QUOTE_MODIFICATION_FEE = "26";
        public const string ORDERS_OR_QUOTE_CANCELLATION_FEE = "27";
        public const string MARKET_DATA_ACCESS_FEE = "28";
        public const string MARKET_DATA_TERMINAL_FEE = "29";
        public const string MARKET_DATA_VOLUME_FEE = "30";
        public const string CLEARING_FEE = "31";
        public const string SETTLEMENT_FEE = "32";
        public const string REBATES = "33";
        public const string DISCOUNTS = "34";
        public const string PAYMENTS = "35";
        public const string NON_MONETARY_PAYMENTS = "36";
    }


    /// <summary>
    /// PrevClosePx Field
    /// </summary>/
    public sealed class PrevClosePx : DecimalField
    {
        public const int TAG = 140;

        public PrevClosePx()
            : base(Tags.PrevClosePx) { }
        public PrevClosePx(Decimal val)
            : base(Tags.PrevClosePx, val) { }

    }


    /// <summary>
    /// ResetSeqNumFlag Field
    /// </summary>/
    public sealed class ResetSeqNumFlag : BooleanField
    {
        public const int TAG = 141;

        public ResetSeqNumFlag()
            : base(Tags.ResetSeqNumFlag) { }
        public ResetSeqNumFlag(Boolean val)
            : base(Tags.ResetSeqNumFlag, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean YES_RESET_SEQUENCE_NUMBERS = true;
    }


    /// <summary>
    /// SenderLocationID Field
    /// </summary>/
    public sealed class SenderLocationID : StringField
    {
        public const int TAG = 142;

        public SenderLocationID()
            : base(Tags.SenderLocationID) { }
        public SenderLocationID(string val)
            : base(Tags.SenderLocationID, val) { }

    }


    /// <summary>
    /// TargetLocationID Field
    /// </summary>/
    public sealed class TargetLocationID : StringField
    {
        public const int TAG = 143;

        public TargetLocationID()
            : base(Tags.TargetLocationID) { }
        public TargetLocationID(string val)
            : base(Tags.TargetLocationID, val) { }

    }


    /// <summary>
    /// OnBehalfOfLocationID Field
    /// </summary>/
    public sealed class OnBehalfOfLocationID : StringField
    {
        public const int TAG = 144;

        public OnBehalfOfLocationID()
            : base(Tags.OnBehalfOfLocationID) { }
        public OnBehalfOfLocationID(string val)
            : base(Tags.OnBehalfOfLocationID, val) { }

    }


    /// <summary>
    /// DeliverToLocationID Field
    /// </summary>/
    public sealed class DeliverToLocationID : StringField
    {
        public const int TAG = 145;

        public DeliverToLocationID()
            : base(Tags.DeliverToLocationID) { }
        public DeliverToLocationID(string val)
            : base(Tags.DeliverToLocationID, val) { }

    }


    /// <summary>
    /// NoRelatedSym Field
    /// </summary>/
    public sealed class NoRelatedSym : IntField
    {
        public const int TAG = 146;

        public NoRelatedSym()
            : base(Tags.NoRelatedSym) { }
        public NoRelatedSym(int val)
            : base(Tags.NoRelatedSym, val) { }

    }


    /// <summary>
    /// Subject Field
    /// </summary>/
    public sealed class Subject : StringField
    {
        public const int TAG = 147;

        public Subject()
            : base(Tags.Subject) { }
        public Subject(string val)
            : base(Tags.Subject, val) { }

    }


    /// <summary>
    /// Headline Field
    /// </summary>/
    public sealed class Headline : StringField
    {
        public const int TAG = 148;

        public Headline()
            : base(Tags.Headline) { }
        public Headline(string val)
            : base(Tags.Headline, val) { }

    }


    /// <summary>
    /// URLLink Field
    /// </summary>/
    public sealed class URLLink : StringField
    {
        public const int TAG = 149;

        public URLLink()
            : base(Tags.URLLink) { }
        public URLLink(string val)
            : base(Tags.URLLink, val) { }

    }


    /// <summary>
    /// ExecType Field
    /// </summary>/
    public sealed class ExecType : CharField
    {
        public const int TAG = 150;

        public ExecType()
            : base(Tags.ExecType) { }
        public ExecType(char val)
            : base(Tags.ExecType, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char DONE_FOR_DAY = '3';
        public const char CANCELED = '4';
        public const char REPLACED = '5';
        public const char PENDING_CANCEL = '6';
        public const char STOPPED = '7';
        public const char REJECTED = '8';
        public const char SUSPENDED = '9';
        public const char PENDING_NEW = 'A';
        public const char CALCULATED = 'B';
        public const char EXPIRED = 'C';
        public const char RESTATED = 'D';
        public const char PENDING_REPLACE = 'E';
        public const char TRADE = 'F';
        public const char TRADE_CORRECT = 'G';
        public const char TRADE_CANCEL = 'H';
        public const char ORDER_STATUS = 'I';
        public const char TRADE_IN_A_CLEARING_HOLD = 'J';
        public const char TRADE_HAS_BEEN_RELEASED_TO_CLEARING = 'K';
        public const char TRIGGERED_OR_ACTIVATED_BY_SYSTEM = 'L';
        public const char LOCKED = 'M';
        public const char RELEASED = 'N';
        public const char PARTIAL_FILL = '1';
        public const char FILL = '2';
        public const char REPLACE = '5';
        public const char CANCELLED = '4';
        public const char PENDING_CANCELREPLACE = '6';
    }


    /// <summary>
    /// LeavesQty Field
    /// </summary>/
    public sealed class LeavesQty : DecimalField
    {
        public const int TAG = 151;

        public LeavesQty()
            : base(Tags.LeavesQty) { }
        public LeavesQty(Decimal val)
            : base(Tags.LeavesQty, val) { }

    }


    /// <summary>
    /// CashOrderQty Field
    /// </summary>/
    public sealed class CashOrderQty : DecimalField
    {
        public const int TAG = 152;

        public CashOrderQty()
            : base(Tags.CashOrderQty) { }
        public CashOrderQty(Decimal val)
            : base(Tags.CashOrderQty, val) { }

    }


    /// <summary>
    /// AllocAvgPx Field
    /// </summary>/
    public sealed class AllocAvgPx : DecimalField
    {
        public const int TAG = 153;

        public AllocAvgPx()
            : base(Tags.AllocAvgPx) { }
        public AllocAvgPx(Decimal val)
            : base(Tags.AllocAvgPx, val) { }

    }


    /// <summary>
    /// AllocNetMoney Field
    /// </summary>/
    public sealed class AllocNetMoney : DecimalField
    {
        public const int TAG = 154;

        public AllocNetMoney()
            : base(Tags.AllocNetMoney) { }
        public AllocNetMoney(Decimal val)
            : base(Tags.AllocNetMoney, val) { }

    }


    /// <summary>
    /// SettlCurrFxRate Field
    /// </summary>/
    public sealed class SettlCurrFxRate : DecimalField
    {
        public const int TAG = 155;

        public SettlCurrFxRate()
            : base(Tags.SettlCurrFxRate) { }
        public SettlCurrFxRate(Decimal val)
            : base(Tags.SettlCurrFxRate, val) { }

    }


    /// <summary>
    /// SettlCurrFxRateCalc Field
    /// </summary>/
    public sealed class SettlCurrFxRateCalc : CharField
    {
        public const int TAG = 156;

        public SettlCurrFxRateCalc()
            : base(Tags.SettlCurrFxRateCalc) { }
        public SettlCurrFxRateCalc(char val)
            : base(Tags.SettlCurrFxRateCalc, val) { }


        // Field Enumerations
        public const char MULTIPLY = 'M';
        public const char DIVIDE = 'D';
    }


    /// <summary>
    /// NumDaysInterest Field
    /// </summary>/
    public sealed class NumDaysInterest : IntField
    {
        public const int TAG = 157;

        public NumDaysInterest()
            : base(Tags.NumDaysInterest) { }
        public NumDaysInterest(int val)
            : base(Tags.NumDaysInterest, val) { }

    }


    /// <summary>
    /// AccruedInterestRate Field
    /// </summary>/
    public sealed class AccruedInterestRate : DecimalField
    {
        public const int TAG = 158;

        public AccruedInterestRate()
            : base(Tags.AccruedInterestRate) { }
        public AccruedInterestRate(Decimal val)
            : base(Tags.AccruedInterestRate, val) { }

    }


    /// <summary>
    /// AccruedInterestAmt Field
    /// </summary>/
    public sealed class AccruedInterestAmt : DecimalField
    {
        public const int TAG = 159;

        public AccruedInterestAmt()
            : base(Tags.AccruedInterestAmt) { }
        public AccruedInterestAmt(Decimal val)
            : base(Tags.AccruedInterestAmt, val) { }

    }


    /// <summary>
    /// SettlInstMode Field
    /// </summary>/
    public sealed class SettlInstMode : CharField
    {
        public const int TAG = 160;

        public SettlInstMode()
            : base(Tags.SettlInstMode) { }
        public SettlInstMode(char val)
            : base(Tags.SettlInstMode, val) { }


        // Field Enumerations
        public const char DEFAULT = '0';
        public const char STANDING_INSTRUCTIONS_PROVIDED = '1';
        public const char SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDING = '2';
        public const char SPECIFIC_ALLOCATION_ACCOUNT_STANDING = '3';
        public const char SPECIFIC_ORDER_FOR_A_SINGLE_ACCOUNT = '4';
        public const char REQUEST_REJECT = '5';
    }


    /// <summary>
    /// AllocText Field
    /// </summary>/
    public sealed class AllocText : StringField
    {
        public const int TAG = 161;

        public AllocText()
            : base(Tags.AllocText) { }
        public AllocText(string val)
            : base(Tags.AllocText, val) { }

    }


    /// <summary>
    /// SettlInstID Field
    /// </summary>/
    public sealed class SettlInstID : StringField
    {
        public const int TAG = 162;

        public SettlInstID()
            : base(Tags.SettlInstID) { }
        public SettlInstID(string val)
            : base(Tags.SettlInstID, val) { }

    }


    /// <summary>
    /// SettlInstTransType Field
    /// </summary>/
    public sealed class SettlInstTransType : CharField
    {
        public const int TAG = 163;

        public SettlInstTransType()
            : base(Tags.SettlInstTransType) { }
        public SettlInstTransType(char val)
            : base(Tags.SettlInstTransType, val) { }


        // Field Enumerations
        public const char NEW = 'N';
        public const char CANCEL = 'C';
        public const char REPLACE = 'R';
        public const char RESTATE = 'T';
    }


    /// <summary>
    /// EmailThreadID Field
    /// </summary>/
    public sealed class EmailThreadID : StringField
    {
        public const int TAG = 164;

        public EmailThreadID()
            : base(Tags.EmailThreadID) { }
        public EmailThreadID(string val)
            : base(Tags.EmailThreadID, val) { }

    }


    /// <summary>
    /// SettlInstSource Field
    /// </summary>/
    public sealed class SettlInstSource : CharField
    {
        public const int TAG = 165;

        public SettlInstSource()
            : base(Tags.SettlInstSource) { }
        public SettlInstSource(char val)
            : base(Tags.SettlInstSource, val) { }


        // Field Enumerations
        public const char BROKERS_INSTRUCTIONS = '1';
        public const char INSTITUTIONS_INSTRUCTIONS = '2';
        public const char INVESTOR = '3';
        public const char BROKER = '1';
        public const char INSTITUTION = '2';
    }


    /// <summary>
    /// SettlLocation Field
    /// </summary>/
    public sealed class SettlLocation : StringField
    {
        public const int TAG = 166;

        public SettlLocation()
            : base(Tags.SettlLocation) { }
        public SettlLocation(string val)
            : base(Tags.SettlLocation, val) { }


        // Field Enumerations
        public const string CEDEL = "CED";
        public const string DEPOSITORY_TRUST_COMPANY = "DTC";
        public const string EURO_CLEAR = "EUR";
        public const string FEDERAL_BOOK_ENTRY = "FED";
        public const string LOCAL_MARKET_SETTLE_LOCATION = "ISO_Country_Code";
        public const string PHYSICAL = "PNY";
        public const string PARTICIPANT_TRUST_COMPANY = "PTC";
        public const string EUROCLEAR = "EUR";
        public const string PARTICIPANT_TRUST_COMPANY_ISO_COUNTRY = "PTC";
    }


    /// <summary>
    /// SecurityType Field
    /// </summary>/
    public sealed class SecurityType : StringField
    {
        public const int TAG = 167;

        public SecurityType()
            : base(Tags.SecurityType) { }
        public SecurityType(string val)
            : base(Tags.SecurityType, val) { }


        // Field Enumerations
        public const string US_TREASURY_NOTE_UST = "UST";
        public const string US_TREASURY_BILL_USTB = "USTB";
        public const string EURO_SUPRANATIONAL_COUPONS = "EUSUPRA";
        public const string FEDERAL_AGENCY_COUPON = "FAC";
        public const string FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN";
        public const string PRIVATE_EXPORT_FUNDING = "PEF";
        public const string USD_SUPRANATIONAL_COUPONS = "SUPRA";
        public const string CORPORATE_BOND = "CORP";
        public const string CORPORATE_PRIVATE_PLACEMENT = "CPP";
        public const string CONVERTIBLE_BOND = "CB";
        public const string DUAL_CURRENCY = "DUAL";
        public const string EURO_CORPORATE_BOND = "EUCORP";
        public const string EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN";
        public const string US_CORPORATE_FLOATING_RATE_NOTES = "FRN";
        public const string INDEXED_LINKED = "XLINKD";
        public const string STRUCTURED_NOTES = "STRUCT";
        public const string YANKEE_CORPORATE_BOND = "YANK";
        public const string FOREIGN_EXCHANGE_CONTRACT = "FOR";
        public const string CREDIT_DEFAULT_SWAP = "CDS";
        public const string FUTURE = "FUT";
        public const string OPTION = "OPT";
        public const string OPTIONS_ON_FUTURES = "OOF";
        public const string OPTIONS_ON_PHYSICAL = "OOP";
        public const string INTEREST_RATE_SWAP = "IRS";
        public const string OPTIONS_ON_COMBO = "OOC";
        public const string COMMON_STOCK = "CS";
        public const string PREFERRED_STOCK = "PS";
        public const string REPURCHASE = "REPO";
        public const string FORWARD = "FORWARD";
        public const string BUY_SELLBACK = "BUYSELL";
        public const string SECURITIES_LOAN = "SECLOAN";
        public const string SECURITIES_PLEDGE = "SECPLEDGE";
        public const string BRADY_BOND = "BRADY";
        public const string CANADIAN_TREASURY_NOTES = "CAN";
        public const string CANADIAN_TREASURY_BILLS = "CTB";
        public const string EURO_SOVEREIGNS = "EUSOV";
        public const string CANADIAN_PROVINCIAL_BONDS = "PROV";
        public const string TREASURY_BILL = "TB";
        public const string US_TREASURY_BOND = "TBOND";
        public const string INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT";
        public const string US_TREASURY_BILL_TBILL = "TBILL";
        public const string TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS";
        public const string PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL";
        public const string PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN";
        public const string US_TREASURY_NOTE_TNOTE = "TNOTE";
        public const string TERM_LOAN = "TERM";
        public const string REVOLVER_LOAN = "RVLV";
        public const string REVOLVER_TERM_LOAN = "RVLVTRM";
        public const string BRIDGE_LOAN = "BRIDGE";
        public const string LETTER_OF_CREDIT = "LOFC";
        public const string SWING_LINE_FACILITY = "SWING";
        public const string DEBTOR_IN_POSSESSION = "DINP";
        public const string DEFAULTED = "DEFLTED";
        public const string WITHDRAWN = "WITHDRN";
        public const string REPLACED = "REPLACD";
        public const string MATURED = "MATURED";
        public const string AMENDED_RESTATED = "AMENDED";
        public const string RETIRED = "RETIRED";
        public const string BANKERS_ACCEPTANCE = "BA";
        public const string BANK_DEPOSITORY_NOTE = "BDN";
        public const string BANK_NOTES = "BN";
        public const string BILL_OF_EXCHANGES = "BOX";
        public const string CANADIAN_MONEY_MARKETS = "CAMM";
        public const string CERTIFICATE_OF_DEPOSIT = "CD";
        public const string CALL_LOANS = "CL";
        public const string COMMERCIAL_PAPER = "CP";
        public const string DEPOSIT_NOTES = "DN";
        public const string EURO_CERTIFICATE_OF_DEPOSIT = "EUCD";
        public const string EURO_COMMERCIAL_PAPER = "EUCP";
        public const string LIQUIDITY_NOTE = "LQN";
        public const string MEDIUM_TERM_NOTES = "MTN";
        public const string OVERNIGHT = "ONITE";
        public const string PROMISSORY_NOTE = "PN";
        public const string SHORT_TERM_LOAN_NOTE = "STN";
        public const string PLAZOS_FIJOS = "PZFJ";
        public const string SECURED_LIQUIDITY_NOTE = "SLQN";
        public const string TIME_DEPOSIT = "TD";
        public const string TERM_LIQUIDITY_NOTE = "TLQN";
        public const string EXTENDED_COMM_NOTE = "XCN";
        public const string YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD";
        public const string ASSET_BACKED_SECURITIES = "ABS";
        public const string CANADIAN_MORTGAGE_BONDS = "CMB";
        public const string CORP_MORTGAGE_BACKED_SECURITIES = "CMBS";
        public const string COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO";
        public const string IOETTE_MORTGAGE = "IET";
        public const string MORTGAGE_BACKED_SECURITIES = "MBS";
        public const string MORTGAGE_INTEREST_ONLY = "MIO";
        public const string MORTGAGE_PRINCIPAL_ONLY = "MPO";
        public const string MORTGAGE_PRIVATE_PLACEMENT = "MPP";
        public const string MISCELLANEOUS_PASS_THROUGH = "MPT";
        public const string PFANDBRIEFE = "PFAND";
        public const string TO_BE_ANNOUNCED = "TBA";
        public const string OTHER_ANTICIPATION_NOTES = "AN";
        public const string CERTIFICATE_OF_OBLIGATION = "COFO";
        public const string CERTIFICATE_OF_PARTICIPATION = "COFP";
        public const string GENERAL_OBLIGATION_BONDS = "GO";
        public const string MANDATORY_TENDER = "MT";
        public const string REVENUE_ANTICIPATION_NOTE = "RAN";
        public const string REVENUE_BONDS = "REV";
        public const string SPECIAL_ASSESSMENT = "SPCLA";
        public const string SPECIAL_OBLIGATION = "SPCLO";
        public const string SPECIAL_TAX = "SPCLT";
        public const string TAX_ANTICIPATION_NOTE = "TAN";
        public const string TAX_ALLOCATION = "TAXA";
        public const string TAX_EXEMPT_COMMERCIAL_PAPER = "TECP";
        public const string TAXABLE_MUNICIPAL_CP = "TMCP";
        public const string TAX_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string VARIABLE_RATE_DEMAND_NOTE = "VRDN";
        public const string WARRANT = "WAR";
        public const string MUTUAL_FUND = "MF";
        public const string MULTILEG_INSTRUMENT = "MLEG";
        public const string NO_SECURITY_TYPE = "NONE";
        public const string WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?";
        public const string CASH = "CASH";
        public const string NON_DELIVERABLE_FORWARD = "FXNDF";
        public const string FX_SPOT = "FXSPOT";
        public const string FX_FORWARD = "FXFWD";
        public const string FX_SWAP = "FXSWAP";
        public const string DELIVERY_VERSUS_PLEDGE = "DVPLDG";
        public const string COMMODITY_SWAP = "CMDTYSWAP";
        public const string SWAP_OPTION = "SWAPTION";
        public const string DERIVATIVE_FORWARD = "FWD";
        public const string TOTAL_RETURN_SWAP = "TRS";
        public const string CAP = "CAP";
        public const string COLLAR = "CLLR";
        public const string EXOTIC = "EXOTIC";
        public const string FLOOR = "FLR";
        public const string FORWARD_RATE_AGREEMENT = "FRA";
        public const string LOAN_LEASE = "LOANLEASE";
        public const string SPOT_FORWARD = "SPOTFWD";
        public const string TRANSMISSION = "XMISSION";
        public const string GENERAL_TYPE_FOR_A_CONTRACT_BASED_ON_AN_ESTABLISHED_INDEX = "INDEX";
        public const string COLLATERAL_BASKET = "COLLBSKT";
        public const string BOND_BASKET = "BDBSKT";
        public const string CONTRACT_FOR_DIFFERENCE = "CFD";
        public const string CORRELATION_SWAP = "CRLTNSWAP";
        public const string DIVIDEND_SWAP = "DVDNDSWAP";
        public const string EQUITY_BASKET = "EQBSKT";
        public const string EQUITY_FORWARD = "EQFWD";
        public const string RETURN_SWAP = "RTRNSWAP";
        public const string VARIANCE_SWAP = "VARSWAP";
        public const string NON_DELIVERABLE_SWAP = "FXNDS";
        public const string PORTFOLIO_SWAP = "PRTFLIOSWAP";
        public const string FUTURES_ON_A_SWAP = "FUTSWAP";
        public const string FORWARDS_ON_A_SWAP = "FWDSWAP";
        public const string FORWARD_FREIGHT_AGREEMENT = "FWDFRTAGMT";
        public const string SPREAD_BETTING = "SPREADBET";
        public const string OTHER = "Other";
        public const string DEPOSITORY_RECEIPTS = "DR";
        public const string EXCHANGE_TRADED_COMMODITY = "ETC";
        public const string EXCHANGE_TRADED_NOTE = "ETN";
        public const string SECURITIZED_DERIVATIVE = "SECDERIV";
        public const string STRUCTURED_FINANCE_PRODUCT = "SFP";
        public const string MARGIN_LOAN = "MRGNLOAN";
        public const string WILDCARD_ENTRY = "WLD";
        public const string US_TREASURY_NOTE = "TNOTE";
        public const string US_TREASURY_BILL = "TBILL";
        public const string AMENDED_AND_RESTATED = "AMENDED";
        public const string TAX_AND_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string MULTI_LEG_INSTRUMENT = "MLEG";
        public const string WILDCARD = "?";
        public const string CONVERTABLE_BOND = "CB";
        public const string INDEX_LINKED = "XLINKD";
        public const string PREFERED_STOCK = "PS";
        public const string US_TREASURY_NOTE_BOND = "UST";
        public const string LIQUIDITY_NOTES = "LQN";
        public const string OVERNITE = "ONITE";
        public const string PROMISSORY_NOTES = "PN";
        public const string REPURCHASE_AGREEMENT = "RP";
        public const string REVERSE_REPURCHASE_AGREEMENT = "RVRP";
        public const string AGENCY_POOLS = "POOL";
        public const string COLLATERALIZE_MORTGAGE_OBLIGATION = "CMO";
        public const string FEDERAL_HOUSING_AUTHORITY = "FHA";
        public const string FEDERAL_HOME_LOAN = "FHL";
        public const string FEDERAL_NATIONAL_MORTGAGE_ASSOCIATION = "FN";
        public const string GOVERNMENT_NATIONAL_MORTGAGE_ASSOCIATION = "GN";
        public const string TREASURIES_PLUS_AGENCY_DEBENTURE = "GOVT";
        public const string MISCELLANEOUS_PASSTHRU = "MPT";
        public const string MUNICIPAL_BOND = "MUNI";
        public const string NO_ISITC_SECURITY_TYPE = "NONE";
        public const string STUDENT_LOAN_MARKETING_ASSOCIATION = "SL";
        public const string CATS_TIGERS = "ZOO";
        public const string MORTGAGE_PRINCIPLE_ONLY = "MPO";
    }


    /// <summary>
    /// EffectiveTime Field
    /// </summary>/
    public sealed class EffectiveTime : DateTimeField
    {
        public const int TAG = 168;

        public EffectiveTime()
            : base(Tags.EffectiveTime) { }
        public EffectiveTime(DateTime val)
            : base(Tags.EffectiveTime, val) { }
        public EffectiveTime(DateTime val, bool showMilliseconds)
            : base(Tags.EffectiveTime, val, showMilliseconds) { }
        public EffectiveTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.EffectiveTime, val, precision) { }

    }


    /// <summary>
    /// StandInstDbType Field
    /// </summary>/
    public sealed class StandInstDbType : IntField
    {
        public const int TAG = 169;

        public StandInstDbType()
            : base(Tags.StandInstDbType) { }
        public StandInstDbType(int val)
            : base(Tags.StandInstDbType, val) { }


        // Field Enumerations
        public const int OTHER = 0;
        public const int DTC_SID = 1;
        public const int THOMSON_ALERT = 2;
        public const int A_GLOBAL_CUSTODIAN = 3;
        public const int ACCOUNTNET = 4;
    }


    /// <summary>
    /// StandInstDbName Field
    /// </summary>/
    public sealed class StandInstDbName : StringField
    {
        public const int TAG = 170;

        public StandInstDbName()
            : base(Tags.StandInstDbName) { }
        public StandInstDbName(string val)
            : base(Tags.StandInstDbName, val) { }

    }


    /// <summary>
    /// StandInstDbID Field
    /// </summary>/
    public sealed class StandInstDbID : StringField
    {
        public const int TAG = 171;

        public StandInstDbID()
            : base(Tags.StandInstDbID) { }
        public StandInstDbID(string val)
            : base(Tags.StandInstDbID, val) { }

    }


    /// <summary>
    /// SettlDeliveryType Field
    /// </summary>/
    public sealed class SettlDeliveryType : IntField
    {
        public const int TAG = 172;

        public SettlDeliveryType()
            : base(Tags.SettlDeliveryType) { }
        public SettlDeliveryType(int val)
            : base(Tags.SettlDeliveryType, val) { }


        // Field Enumerations
        public const int VERSUS_PAYMENT_DELIVER = 0;
        public const int FREE_DELIVER = 1;
        public const int TRI_PARTY = 2;
        public const int HOLD_IN_CUSTODY = 3;
        public const int VERSUS_PAYMENT = 0;
        public const int FREE = 1;
    }


    /// <summary>
    /// SettlDepositoryCode Field
    /// </summary>/
    public sealed class SettlDepositoryCode : StringField
    {
        public const int TAG = 173;

        public SettlDepositoryCode()
            : base(Tags.SettlDepositoryCode) { }
        public SettlDepositoryCode(string val)
            : base(Tags.SettlDepositoryCode, val) { }

    }


    /// <summary>
    /// SettlBrkrCode Field
    /// </summary>/
    public sealed class SettlBrkrCode : StringField
    {
        public const int TAG = 174;

        public SettlBrkrCode()
            : base(Tags.SettlBrkrCode) { }
        public SettlBrkrCode(string val)
            : base(Tags.SettlBrkrCode, val) { }

    }


    /// <summary>
    /// SettlInstCode Field
    /// </summary>/
    public sealed class SettlInstCode : StringField
    {
        public const int TAG = 175;

        public SettlInstCode()
            : base(Tags.SettlInstCode) { }
        public SettlInstCode(string val)
            : base(Tags.SettlInstCode, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentName Field
    /// </summary>/
    public sealed class SecuritySettlAgentName : StringField
    {
        public const int TAG = 176;

        public SecuritySettlAgentName()
            : base(Tags.SecuritySettlAgentName) { }
        public SecuritySettlAgentName(string val)
            : base(Tags.SecuritySettlAgentName, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentCode Field
    /// </summary>/
    public sealed class SecuritySettlAgentCode : StringField
    {
        public const int TAG = 177;

        public SecuritySettlAgentCode()
            : base(Tags.SecuritySettlAgentCode) { }
        public SecuritySettlAgentCode(string val)
            : base(Tags.SecuritySettlAgentCode, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentAcctNum Field
    /// </summary>/
    public sealed class SecuritySettlAgentAcctNum : StringField
    {
        public const int TAG = 178;

        public SecuritySettlAgentAcctNum()
            : base(Tags.SecuritySettlAgentAcctNum) { }
        public SecuritySettlAgentAcctNum(string val)
            : base(Tags.SecuritySettlAgentAcctNum, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentAcctName Field
    /// </summary>/
    public sealed class SecuritySettlAgentAcctName : StringField
    {
        public const int TAG = 179;

        public SecuritySettlAgentAcctName()
            : base(Tags.SecuritySettlAgentAcctName) { }
        public SecuritySettlAgentAcctName(string val)
            : base(Tags.SecuritySettlAgentAcctName, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentContactName Field
    /// </summary>/
    public sealed class SecuritySettlAgentContactName : StringField
    {
        public const int TAG = 180;

        public SecuritySettlAgentContactName()
            : base(Tags.SecuritySettlAgentContactName) { }
        public SecuritySettlAgentContactName(string val)
            : base(Tags.SecuritySettlAgentContactName, val) { }

    }


    /// <summary>
    /// SecuritySettlAgentContactPhone Field
    /// </summary>/
    public sealed class SecuritySettlAgentContactPhone : StringField
    {
        public const int TAG = 181;

        public SecuritySettlAgentContactPhone()
            : base(Tags.SecuritySettlAgentContactPhone) { }
        public SecuritySettlAgentContactPhone(string val)
            : base(Tags.SecuritySettlAgentContactPhone, val) { }

    }


    /// <summary>
    /// CashSettlAgentName Field
    /// </summary>/
    public sealed class CashSettlAgentName : StringField
    {
        public const int TAG = 182;

        public CashSettlAgentName()
            : base(Tags.CashSettlAgentName) { }
        public CashSettlAgentName(string val)
            : base(Tags.CashSettlAgentName, val) { }

    }


    /// <summary>
    /// CashSettlAgentCode Field
    /// </summary>/
    public sealed class CashSettlAgentCode : StringField
    {
        public const int TAG = 183;

        public CashSettlAgentCode()
            : base(Tags.CashSettlAgentCode) { }
        public CashSettlAgentCode(string val)
            : base(Tags.CashSettlAgentCode, val) { }

    }


    /// <summary>
    /// CashSettlAgentAcctNum Field
    /// </summary>/
    public sealed class CashSettlAgentAcctNum : StringField
    {
        public const int TAG = 184;

        public CashSettlAgentAcctNum()
            : base(Tags.CashSettlAgentAcctNum) { }
        public CashSettlAgentAcctNum(string val)
            : base(Tags.CashSettlAgentAcctNum, val) { }

    }


    /// <summary>
    /// CashSettlAgentAcctName Field
    /// </summary>/
    public sealed class CashSettlAgentAcctName : StringField
    {
        public const int TAG = 185;

        public CashSettlAgentAcctName()
            : base(Tags.CashSettlAgentAcctName) { }
        public CashSettlAgentAcctName(string val)
            : base(Tags.CashSettlAgentAcctName, val) { }

    }


    /// <summary>
    /// CashSettlAgentContactName Field
    /// </summary>/
    public sealed class CashSettlAgentContactName : StringField
    {
        public const int TAG = 186;

        public CashSettlAgentContactName()
            : base(Tags.CashSettlAgentContactName) { }
        public CashSettlAgentContactName(string val)
            : base(Tags.CashSettlAgentContactName, val) { }

    }


    /// <summary>
    /// CashSettlAgentContactPhone Field
    /// </summary>/
    public sealed class CashSettlAgentContactPhone : StringField
    {
        public const int TAG = 187;

        public CashSettlAgentContactPhone()
            : base(Tags.CashSettlAgentContactPhone) { }
        public CashSettlAgentContactPhone(string val)
            : base(Tags.CashSettlAgentContactPhone, val) { }

    }


    /// <summary>
    /// BidSpotRate Field
    /// </summary>/
    public sealed class BidSpotRate : DecimalField
    {
        public const int TAG = 188;

        public BidSpotRate()
            : base(Tags.BidSpotRate) { }
        public BidSpotRate(Decimal val)
            : base(Tags.BidSpotRate, val) { }

    }


    /// <summary>
    /// BidForwardPoints Field
    /// </summary>/
    public sealed class BidForwardPoints : DecimalField
    {
        public const int TAG = 189;

        public BidForwardPoints()
            : base(Tags.BidForwardPoints) { }
        public BidForwardPoints(Decimal val)
            : base(Tags.BidForwardPoints, val) { }

    }


    /// <summary>
    /// OfferSpotRate Field
    /// </summary>/
    public sealed class OfferSpotRate : DecimalField
    {
        public const int TAG = 190;

        public OfferSpotRate()
            : base(Tags.OfferSpotRate) { }
        public OfferSpotRate(Decimal val)
            : base(Tags.OfferSpotRate, val) { }

    }


    /// <summary>
    /// OfferForwardPoints Field
    /// </summary>/
    public sealed class OfferForwardPoints : DecimalField
    {
        public const int TAG = 191;

        public OfferForwardPoints()
            : base(Tags.OfferForwardPoints) { }
        public OfferForwardPoints(Decimal val)
            : base(Tags.OfferForwardPoints, val) { }

    }


    /// <summary>
    /// OrderQty2 Field
    /// </summary>/
    public sealed class OrderQty2 : DecimalField
    {
        public const int TAG = 192;

        public OrderQty2()
            : base(Tags.OrderQty2) { }
        public OrderQty2(Decimal val)
            : base(Tags.OrderQty2, val) { }

    }


    /// <summary>
    /// FutSettDate2 Field
    /// </summary>/
    public sealed class FutSettDate2 : StringField
    {
        public const int TAG = 193;

        public FutSettDate2()
            : base(Tags.FutSettDate2) { }
        public FutSettDate2(string val)
            : base(Tags.FutSettDate2, val) { }

    }


    /// <summary>
    /// LastSpotRate Field
    /// </summary>/
    public sealed class LastSpotRate : DecimalField
    {
        public const int TAG = 194;

        public LastSpotRate()
            : base(Tags.LastSpotRate) { }
        public LastSpotRate(Decimal val)
            : base(Tags.LastSpotRate, val) { }

    }


    /// <summary>
    /// LastForwardPoints Field
    /// </summary>/
    public sealed class LastForwardPoints : DecimalField
    {
        public const int TAG = 195;

        public LastForwardPoints()
            : base(Tags.LastForwardPoints) { }
        public LastForwardPoints(Decimal val)
            : base(Tags.LastForwardPoints, val) { }

    }


    /// <summary>
    /// AllocLinkID Field
    /// </summary>/
    public sealed class AllocLinkID : StringField
    {
        public const int TAG = 196;

        public AllocLinkID()
            : base(Tags.AllocLinkID) { }
        public AllocLinkID(string val)
            : base(Tags.AllocLinkID, val) { }

    }


    /// <summary>
    /// AllocLinkType Field
    /// </summary>/
    public sealed class AllocLinkType : IntField
    {
        public const int TAG = 197;

        public AllocLinkType()
            : base(Tags.AllocLinkType) { }
        public AllocLinkType(int val)
            : base(Tags.AllocLinkType, val) { }


        // Field Enumerations
        public const int FX_NETTING = 0;
        public const int FX_SWAP = 1;
        public const int F_X_NETTING = 0;
        public const int F_X_SWAP = 1;
    }


    /// <summary>
    /// SecondaryOrderID Field
    /// </summary>/
    public sealed class SecondaryOrderID : StringField
    {
        public const int TAG = 198;

        public SecondaryOrderID()
            : base(Tags.SecondaryOrderID) { }
        public SecondaryOrderID(string val)
            : base(Tags.SecondaryOrderID, val) { }

    }


    /// <summary>
    /// NoIOIQualifiers Field
    /// </summary>/
    public sealed class NoIOIQualifiers : IntField
    {
        public const int TAG = 199;

        public NoIOIQualifiers()
            : base(Tags.NoIOIQualifiers) { }
        public NoIOIQualifiers(int val)
            : base(Tags.NoIOIQualifiers, val) { }

    }


    /// <summary>
    /// MaturityMonthYear Field
    /// </summary>/
    public sealed class MaturityMonthYear : StringField
    {
        public const int TAG = 200;

        public MaturityMonthYear()
            : base(Tags.MaturityMonthYear) { }
        public MaturityMonthYear(string val)
            : base(Tags.MaturityMonthYear, val) { }

    }


    /// <summary>
    /// PutOrCall Field
    /// </summary>/
    public sealed class PutOrCall : IntField
    {
        public const int TAG = 201;

        public PutOrCall()
            : base(Tags.PutOrCall) { }
        public PutOrCall(int val)
            : base(Tags.PutOrCall, val) { }


        // Field Enumerations
        public const int PUT = 0;
        public const int CALL = 1;
        public const int OTHER = 2;
        public const int CHOOSER = 3;
    }


    /// <summary>
    /// StrikePrice Field
    /// </summary>/
    public sealed class StrikePrice : DecimalField
    {
        public const int TAG = 202;

        public StrikePrice()
            : base(Tags.StrikePrice) { }
        public StrikePrice(Decimal val)
            : base(Tags.StrikePrice, val) { }

    }


    /// <summary>
    /// CoveredOrUncovered Field
    /// </summary>/
    public sealed class CoveredOrUncovered : IntField
    {
        public const int TAG = 203;

        public CoveredOrUncovered()
            : base(Tags.CoveredOrUncovered) { }
        public CoveredOrUncovered(int val)
            : base(Tags.CoveredOrUncovered, val) { }


        // Field Enumerations
        public const int COVERED = 0;
        public const int UNCOVERED = 1;
    }


    /// <summary>
    /// CustomerOrFirm Field
    /// </summary>/
    public sealed class CustomerOrFirm : IntField
    {
        public const int TAG = 204;

        public CustomerOrFirm()
            : base(Tags.CustomerOrFirm) { }
        public CustomerOrFirm(int val)
            : base(Tags.CustomerOrFirm, val) { }


        // Field Enumerations
        public const int CUSTOMER = 0;
        public const int FIRM = 1;
    }


    /// <summary>
    /// MaturityDay Field
    /// </summary>/
    public sealed class MaturityDay : StringField
    {
        public const int TAG = 205;

        public MaturityDay()
            : base(Tags.MaturityDay) { }
        public MaturityDay(string val)
            : base(Tags.MaturityDay, val) { }

    }


    /// <summary>
    /// OptAttribute Field
    /// </summary>/
    public sealed class OptAttribute : CharField
    {
        public const int TAG = 206;

        public OptAttribute()
            : base(Tags.OptAttribute) { }
        public OptAttribute(char val)
            : base(Tags.OptAttribute, val) { }

    }


    /// <summary>
    /// SecurityExchange Field
    /// </summary>/
    public sealed class SecurityExchange : StringField
    {
        public const int TAG = 207;

        public SecurityExchange()
            : base(Tags.SecurityExchange) { }
        public SecurityExchange(string val)
            : base(Tags.SecurityExchange, val) { }

    }


    /// <summary>
    /// NotifyBrokerOfCredit Field
    /// </summary>/
    public sealed class NotifyBrokerOfCredit : BooleanField
    {
        public const int TAG = 208;

        public NotifyBrokerOfCredit()
            : base(Tags.NotifyBrokerOfCredit) { }
        public NotifyBrokerOfCredit(Boolean val)
            : base(Tags.NotifyBrokerOfCredit, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean DETAILS_SHOULD_BE_COMMUNICATED = true;
        public const Boolean DETAILS_SHOULD_NOT_BE_COMMUNICATED = false;
    }


    /// <summary>
    /// AllocHandlInst Field
    /// </summary>/
    public sealed class AllocHandlInst : IntField
    {
        public const int TAG = 209;

        public AllocHandlInst()
            : base(Tags.AllocHandlInst) { }
        public AllocHandlInst(int val)
            : base(Tags.AllocHandlInst, val) { }


        // Field Enumerations
        public const int MATCH = 1;
        public const int FORWARD = 2;
        public const int FORWARD_AND_MATCH = 3;
        public const int AUTO_CLAIM_GIVE_UP = 4;
    }


    /// <summary>
    /// MaxShow Field
    /// </summary>/
    public sealed class MaxShow : DecimalField
    {
        public const int TAG = 210;

        public MaxShow()
            : base(Tags.MaxShow) { }
        public MaxShow(Decimal val)
            : base(Tags.MaxShow, val) { }

    }


    /// <summary>
    /// PegDifference Field
    /// </summary>/
    public sealed class PegDifference : DecimalField
    {
        public const int TAG = 211;

        public PegDifference()
            : base(Tags.PegDifference) { }
        public PegDifference(Decimal val)
            : base(Tags.PegDifference, val) { }

    }


    /// <summary>
    /// TotNoOrders Field
    /// </summary>/
    public sealed class TotNoOrders : IntField
    {
        public const int TAG = 68;

        public TotNoOrders()
            : base(Tags.TotNoOrders) { }
        public TotNoOrders(int val)
            : base(Tags.TotNoOrders, val) { }

    }


    /// <summary>
    /// XmlDataLen Field
    /// </summary>/
    public sealed class XmlDataLen : IntField
    {
        public const int TAG = 212;

        public XmlDataLen()
            : base(Tags.XmlDataLen) { }
        public XmlDataLen(int val)
            : base(Tags.XmlDataLen, val) { }

    }


    /// <summary>
    /// XmlData Field
    /// </summary>/
    public sealed class XmlData : StringField
    {
        public const int TAG = 213;

        public XmlData()
            : base(Tags.XmlData) { }
        public XmlData(string val)
            : base(Tags.XmlData, val) { }

    }


    /// <summary>
    /// SettlInstRefID Field
    /// </summary>/
    public sealed class SettlInstRefID : StringField
    {
        public const int TAG = 214;

        public SettlInstRefID()
            : base(Tags.SettlInstRefID) { }
        public SettlInstRefID(string val)
            : base(Tags.SettlInstRefID, val) { }

    }


    /// <summary>
    /// NoRoutingIDs Field
    /// </summary>/
    public sealed class NoRoutingIDs : IntField
    {
        public const int TAG = 215;

        public NoRoutingIDs()
            : base(Tags.NoRoutingIDs) { }
        public NoRoutingIDs(int val)
            : base(Tags.NoRoutingIDs, val) { }

    }


    /// <summary>
    /// RoutingType Field
    /// </summary>/
    public sealed class RoutingType : IntField
    {
        public const int TAG = 216;

        public RoutingType()
            : base(Tags.RoutingType) { }
        public RoutingType(int val)
            : base(Tags.RoutingType, val) { }


        // Field Enumerations
        public const int TARGET_FIRM = 1;
        public const int TARGET_LIST = 2;
        public const int BLOCK_FIRM = 3;
        public const int BLOCK_LIST = 4;
        public const int TARGET_PERSON = 5;
        public const int BLOCK_PERSON = 6;
    }


    /// <summary>
    /// RoutingID Field
    /// </summary>/
    public sealed class RoutingID : StringField
    {
        public const int TAG = 217;

        public RoutingID()
            : base(Tags.RoutingID) { }
        public RoutingID(string val)
            : base(Tags.RoutingID, val) { }

    }


    /// <summary>
    /// SpreadToBenchmark Field
    /// </summary>/
    public sealed class SpreadToBenchmark : DecimalField
    {
        public const int TAG = 218;

        public SpreadToBenchmark()
            : base(Tags.SpreadToBenchmark) { }
        public SpreadToBenchmark(Decimal val)
            : base(Tags.SpreadToBenchmark, val) { }

    }


    /// <summary>
    /// Benchmark Field
    /// </summary>/
    public sealed class Benchmark : CharField
    {
        public const int TAG = 219;

        public Benchmark()
            : base(Tags.Benchmark) { }
        public Benchmark(char val)
            : base(Tags.Benchmark, val) { }


        // Field Enumerations
        public const char CURVE = '1';
        public const char VAL_5YR = '2';
        public const char OLD5 = '3';
        public const char VAL_10YR = '4';
        public const char OLD10 = '5';
        public const char VAL_30YR = '6';
        public const char OLD30 = '7';
        public const char VAL_3MOLIBOR = '8';
        public const char VAL_6MOLIBOR = '9';
        public const char FIVEYR = '2';
        public const char TENYR = '4';
        public const char THIRTYYR = '6';
        public const char THREEMOLIBOR = '8';
        public const char SIXMOLIBOR = '9';
    }


    /// <summary>
    /// CouponRate Field
    /// </summary>/
    public sealed class CouponRate : DecimalField
    {
        public const int TAG = 223;

        public CouponRate()
            : base(Tags.CouponRate) { }
        public CouponRate(Decimal val)
            : base(Tags.CouponRate, val) { }

    }


    /// <summary>
    /// ContractMultiplier Field
    /// </summary>/
    public sealed class ContractMultiplier : DecimalField
    {
        public const int TAG = 231;

        public ContractMultiplier()
            : base(Tags.ContractMultiplier) { }
        public ContractMultiplier(Decimal val)
            : base(Tags.ContractMultiplier, val) { }

    }


    /// <summary>
    /// MDReqID Field
    /// </summary>/
    public sealed class MDReqID : StringField
    {
        public const int TAG = 262;

        public MDReqID()
            : base(Tags.MDReqID) { }
        public MDReqID(string val)
            : base(Tags.MDReqID, val) { }

    }


    /// <summary>
    /// SubscriptionRequestType Field
    /// </summary>/
    public sealed class SubscriptionRequestType : CharField
    {
        public const int TAG = 263;

        public SubscriptionRequestType()
            : base(Tags.SubscriptionRequestType) { }
        public SubscriptionRequestType(char val)
            : base(Tags.SubscriptionRequestType, val) { }


        // Field Enumerations
        public const char SNAPSHOT = '0';
        public const char SNAPSHOT_PLUS_UPDATES = '1';
        public const char DISABLE_PREVIOUS_SNAPSHOT_PLUS_UPDATE_REQUEST = '2';
        public const char DISABLE_PREVIOUS = '2';
    }


    /// <summary>
    /// MarketDepth Field
    /// </summary>/
    public sealed class MarketDepth : IntField
    {
        public const int TAG = 264;

        public MarketDepth()
            : base(Tags.MarketDepth) { }
        public MarketDepth(int val)
            : base(Tags.MarketDepth, val) { }

    }


    /// <summary>
    /// MDUpdateType Field
    /// </summary>/
    public sealed class MDUpdateType : IntField
    {
        public const int TAG = 265;

        public MDUpdateType()
            : base(Tags.MDUpdateType) { }
        public MDUpdateType(int val)
            : base(Tags.MDUpdateType, val) { }


        // Field Enumerations
        public const int FULL_REFRESH = 0;
        public const int INCREMENTAL_REFRESH = 1;
    }


    /// <summary>
    /// AggregatedBook Field
    /// </summary>/
    public sealed class AggregatedBook : BooleanField
    {
        public const int TAG = 266;

        public AggregatedBook()
            : base(Tags.AggregatedBook) { }
        public AggregatedBook(Boolean val)
            : base(Tags.AggregatedBook, val) { }


        // Field Enumerations
        public const Boolean YES = true;
        public const Boolean NO = false;
        public const Boolean ONE_BOOK_ENTRY_PER_SIDE_PER_PRICE = true;
        public const Boolean MULTIPLE_ENTRIES_PER_SIDE_PER_PRICE_ALLOWED = false;
    }


    /// <summary>
    /// NoMDEntryTypes Field
    /// </summary>/
    public sealed class NoMDEntryTypes : IntField
    {
        public const int TAG = 267;

        public NoMDEntryTypes()
            : base(Tags.NoMDEntryTypes) { }
        public NoMDEntryTypes(int val)
            : base(Tags.NoMDEntryTypes, val) { }

    }


    /// <summary>
    /// NoMDEntries Field
    /// </summary>/
    public sealed class NoMDEntries : IntField
    {
        public const int TAG = 268;

        public NoMDEntries()
            : base(Tags.NoMDEntries) { }
        public NoMDEntries(int val)
            : base(Tags.NoMDEntries, val) { }

    }


    /// <summary>
    /// MDEntryType Field
    /// </summary>/
    public sealed class MDEntryType : CharField
    {
        public const int TAG = 269;

        public MDEntryType()
            : base(Tags.MDEntryType) { }
        public MDEntryType(char val)
            : base(Tags.MDEntryType, val) { }


        // Field Enumerations
        public const char BID = '0';
        public const char OFFER = '1';
        public const char TRADE = '2';
        public const char INDEX_VALUE = '3';
        public const char OPENING_PRICE = '4';
        public const char CLOSING_PRICE = '5';
        public const char SETTLEMENT_PRICE = '6';
        public const char TRADING_SESSION_HIGH_PRICE = '7';
        public const char TRADING_SESSION_LOW_PRICE = '8';
        public const char VOLUME_WEIGHTED_AVERAGE_PRICE = '9';
        public const char IMBALANCE = 'A';
        public const char TRADE_VOLUME = 'B';
        public const char OPEN_INTEREST = 'C';
        public const char COMPOSITE_UNDERLYING_PRICE = 'D';
        public const char SIMULATED_SELL_PRICE = 'E';
        public const char SIMULATED_BUY_PRICE = 'F';
        public const char MARGIN_RATE = 'G';
        public const char MID_PRICE = 'H';
        public const char EMPTY_BOOK = 'J';
        public const char SETTLE_HIGH_PRICE = 'K';
        public const char SETTLE_LOW_PRICE = 'L';
        public const char PRIOR_SETTLE_PRICE = 'M';
        public const char SESSION_HIGH_BID = 'N';
        public const char SESSION_LOW_OFFER = 'O';
        public const char EARLY_PRICES = 'P';
        public const char AUCTION_CLEARING_PRICE = 'Q';
        public const char SWAP_VALUE_FACTOR = 'S';
        public const char DAILY_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS = 'R';
        public const char CUMULATIVE_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS = 'T';
        public const char DAILY_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS = 'U';
        public const char CUMULATIVE_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS = 'V';
        public const char RECOVERY_RATE = 'Y';
        public const char RECOVERY_RATE_FOR_LONG_POSITIONS = 'Z';
        public const char RECOVERY_RATE_FOR_SHORT_POSITIONS = 'a';
        public const char FIXING_PRICE = 'W';
        public const char CASH_RATE = 'X';
        public const char MARKET_BID = 'b';
        public const char MARKET_OFFER = 'c';
        public const char SHORT_SALE_MINIMUM_PRICE = 'd';
        public const char PREVIOUS_CLOSING_PRICE = 'e';
        public const char THRESHOLD_LIMITS_AND_PRICE_BANDING = 'g';
        public const char DAILY_FINANCING_VALUE = 'h';
        public const char ACCRUED_FINANCING_VALUE = 'i';
        public const char TIME_WEIGHTED_AVERAGE_PRICE = 't';
        public const char TRADING_SESSION_VWAP_PRICE = '9';
    }


    /// <summary>
    /// MDEntryPx Field
    /// </summary>/
    public sealed class MDEntryPx : DecimalField
    {
        public const int TAG = 270;

        public MDEntryPx()
            : base(Tags.MDEntryPx) { }
        public MDEntryPx(Decimal val)
            : base(Tags.MDEntryPx, val) { }

    }


    /// <summary>
    /// MDEntrySize Field
    /// </summary>/
    public sealed class MDEntrySize : DecimalField
    {
        public const int TAG = 271;

        public MDEntrySize()
            : base(Tags.MDEntrySize) { }
        public MDEntrySize(Decimal val)
            : base(Tags.MDEntrySize, val) { }

    }


    /// <summary>
    /// MDEntryDate Field
    /// </summary>/
    public sealed class MDEntryDate : DateOnlyField
    {
        public const int TAG = 272;

        public MDEntryDate()
            : base(Tags.MDEntryDate) { }
        public MDEntryDate(DateTime val)
            : base(Tags.MDEntryDate, val) { }

    }


    /// <summary>
    /// MDEntryTime Field
    /// </summary>/
    public sealed class MDEntryTime : TimeOnlyField
    {
        public const int TAG = 273;

        public MDEntryTime()
            : base(Tags.MDEntryTime) { }
        public MDEntryTime(DateTime val)
            : base(Tags.MDEntryTime, val) { }
        public MDEntryTime(DateTime val, bool showMilliseconds)
            : base(Tags.MDEntryTime, val, showMilliseconds) { }
        public MDEntryTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDEntryTime, val, precision) { }

    }


    /// <summary>
    /// TickDirection Field
    /// </summary>/
    public sealed class TickDirection : CharField
    {
        public const int TAG = 274;

        public TickDirection()
            : base(Tags.TickDirection) { }
        public TickDirection(char val)
            : base(Tags.TickDirection, val) { }


        // Field Enumerations
        public const char PLUS_TICK = '0';
        public const char ZERO_PLUS_TICK = '1';
        public const char MINUS_TICK = '2';
        public const char ZERO_MINUS_TICK = '3';
        public const char ZEROPLUS_TICK = '1';
        public const char ZEROMINUS_TICK = '3';
    }


    /// <summary>
    /// MDMkt Field
    /// </summary>/
    public sealed class MDMkt : StringField
    {
        public const int TAG = 275;

        public MDMkt()
            : base(Tags.MDMkt) { }
        public MDMkt(string val)
            : base(Tags.MDMkt, val) { }

    }


    /// <summary>
    /// QuoteCondition Field
    /// </summary>/
    public sealed class QuoteCondition : StringField
    {
        public const int TAG = 276;

        public QuoteCondition()
            : base(Tags.QuoteCondition) { }
        public QuoteCondition(string val)
            : base(Tags.QuoteCondition, val) { }


        // Field Enumerations
        public const string OPEN_ACTIVE = "A";
        public const string CLOSED_INACTIVE = "B";
        public const string EXCHANGE_BEST = "C";
        public const string CONSOLIDATED_BEST = "D";
        public const string LOCKED = "E";
        public const string CROSSED = "F";
        public const string DEPTH = "G";
        public const string FAST_TRADING = "H";
        public const string NON_FIRM = "I";
        public const string MANUAL_SLOW_QUOTE = "L";
        public const string OUTRIGHT_PRICE = "J";
        public const string IMPLIED_PRICE = "K";
        public const string DEPTH_ON_OFFER = "M";
        public const string DEPTH_ON_BID = "N";
        public const string CLOSING = "O";
        public const string NEWS_DISSEMINATION = "P";
        public const string TRADING_RANGE = "Q";
        public const string ORDER_INFLUX = "R";
        public const string DUE_TO_RELATED = "S";
        public const string NEWS_PENDING = "T";
        public const string ADDITIONAL_INFO = "U";
        public const string ADDITIONAL_INFO_DUE_TO_RELATED = "V";
        public const string RESUME = "W";
        public const string VIEW_OF_COMMON = "X";
        public const string VOLUME_ALERT = "Y";
        public const string ORDER_IMBALANCE = "Z";
        public const string EQUIPMENT_CHANGEOVER = "a";
        public const string NO_OPEN = "b";
        public const string REGULAR_ETH = "c";
        public const string AUTOMATIC_EXECUTION = "d";
        public const string AUTOMATIC_EXECUTION_ETH = "e";
        public const string FAST_MARKET_ETH = "f";
        public const string INACTIVE_ETH = "g";
        public const string ROTATION = "h";
        public const string ROTATION_ETH = "i";
        public const string HALT = "j";
        public const string HALT_ETH = "k";
        public const string DUE_TO_NEWS_DISSEMINATION = "l";
        public const string DUE_TO_NEWS_PENDING = "m";
        public const string TRADING_RESUME = "n";
        public const string OUT_OF_SEQUENCE = "o";
        public const string BID_SPECIALIST = "p";
        public const string OFFER_SPECIALIST = "q";
        public const string BID_OFFER_SPECIALIST = "r";
        public const string END_OF_DAY_SAM = "s";
        public const string FORBIDDEN_SAM = "t";
        public const string FROZEN_SAM = "u";
        public const string PREOPENING_SAM = "v";
        public const string OPENING_SAM = "w";
        public const string OPEN_SAM = "x";
        public const string SURVEILLANCE_SAM = "y";
        public const string SUSPENDED_SAM = "z";
        public const string RESERVED_SAM = "0";
        public const string NO_ACTIVE_SAM = "1";
        public const string RESTRICTED = "2";
        public const string REST_OF_BOOK_VWAP = "3";
        public const string BETTER_PRICES_IN_CONDITIONAL_ORDERS = "4";
        public const string MEDIAN_PRICE = "5";
        public const string FULL_CURVE = "6";
        public const string FLAT_CURVE = "7";
        public const string OPEN = "A";
        public const string CLOSED = "B";
        public const string NONFIRM = "I";
    }


    /// <summary>
    /// TradeCondition Field
    /// </summary>/
    public sealed class TradeCondition : StringField
    {
        public const int TAG = 277;

        public TradeCondition()
            : base(Tags.TradeCondition) { }
        public TradeCondition(string val)
            : base(Tags.TradeCondition, val) { }


        // Field Enumerations
        public const string CASH = "A";
        public const string AVERAGE_PRICE_TRADE = "B";
        public const string CASH_TRADE = "C";
        public const string NEXT_DAY = "D";
        public const string OPENING_REOPENING_TRADE_DETAIL = "E";
        public const string INTRADAY_TRADE_DETAIL = "F";
        public const string RULE_127_TRADE = "G";
        public const string RULE_155_TRADE = "H";
        public const string SOLD_LAST = "I";
        public const string NEXT_DAY_TRADE = "J";
        public const string OPENED = "K";
        public const string SELLER = "L";
        public const string SOLD = "M";
        public const string STOPPED_STOCK = "N";
        public const string IMBALANCE_MORE_BUYERS = "P";
        public const string IMBALANCE_MORE_SELLERS = "Q";
        public const string OPENING_PRICE = "R";
        public const string BARGAIN_CONDITION = "S";
        public const string CONVERTED_PRICE_INDICATOR = "T";
        public const string EXCHANGE_LAST = "U";
        public const string FINAL_PRICE_OF_SESSION = "V";
        public const string EX_PIT = "W";
        public const string CROSSED_X = "X";
        public const string TRADES_RESULTING_FROM_MANUAL_SLOW_QUOTE = "Y";
        public const string TRADES_RESULTING_FROM_INTERMARKET_SWEEP = "Z";
        public const string VOLUME_ONLY = "a";
        public const string DIRECT_PLUS = "b";
        public const string ACQUISITION = "c";
        public const string BUNCHED = "d";
        public const string DISTRIBUTION = "e";
        public const string BUNCHED_SALE = "f";
        public const string SPLIT_TRADE = "g";
        public const string CANCEL_STOPPED = "h";
        public const string CANCEL_ETH = "i";
        public const string CANCEL_STOPPED_ETH = "j";
        public const string OUT_OF_SEQUENCE_ETH = "k";
        public const string CANCEL_LAST_ETH = "l";
        public const string SOLD_LAST_SALE_ETH = "m";
        public const string CANCEL_LAST = "n";
        public const string SOLD_LAST_SALE = "o";
        public const string CANCEL_OPEN = "p";
        public const string CANCEL_OPEN_ETH = "q";
        public const string OPENED_SALE_ETH = "r";
        public const string CANCEL_ONLY = "s";
        public const string CANCEL_ONLY_ETH = "t";
        public const string LATE_OPEN_ETH = "u";
        public const string AUTO_EXECUTION_ETH = "v";
        public const string REOPEN = "w";
        public const string REOPEN_ETH = "x";
        public const string ADJUSTED = "y";
        public const string ADJUSTED_ETH = "z";
        public const string SPREAD = "AA";
        public const string SPREAD_ETH = "AB";
        public const string STRADDLE = "AC";
        public const string STRADDLE_ETH = "AD";
        public const string STOPPED = "AE";
        public const string STOPPED_ETH = "AF";
        public const string REGULAR_ETH = "AG";
        public const string COMBO = "AH";
        public const string COMBO_ETH = "AI";
        public const string OFFICIAL_CLOSING_PRICE = "AJ";
        public const string PRIOR_REFERENCE_PRICE = "AK";
        public const string CANCEL = "0";
        public const string STOPPED_SOLD_LAST = "AL";
        public const string STOPPED_OUT_OF_SEQUENCE = "AM";
        public const string OFFICAL_CLOSING_PRICE = "AN";
        public const string CROSSED_AO = "AO";
        public const string FAST_MARKET = "AP";
        public const string AUTOMATIC_EXECUTION = "AQ";
        public const string FORM_T = "AR";
        public const string BASKET_INDEX = "AS";
        public const string BURST_BASKET = "AT";
        public const string QUOTE_SPREAD = "AV";
        public const string IMPLIED_TRADE = "1";
        public const string MARKETPLACE_ENTERED_TRADE = "2";
        public const string MULTI_ASSET_CLASS_MULTILEG_TRADE = "3";
        public const string MULTILEG_TO_MULTILEG_TRADE = "4";
        public const string SHORT_SALE_MINIMUM_PRICE = "5";
        public const string BENCHMARK = "6";
        public const string TRADE_THROUGH_EXEMPT = "AU";
        public const string LAST_AUCTION_PRICE = "AW";
        public const string HIGH_PRICE = "AX";
        public const string LOW_PRICE = "AY";
        public const string SYSTEMATIC_INTERNALISER = "AZ";
        public const string AWAY_MARKET = "BA";
        public const string MID_POINT_PRICE = "BB";
        public const string TRADED_BEFORE_ISSUE_DATE = "BC";
        public const string PREVIOUS_CLOSING_PRICE = "BD";
        public const string NATIONAL_BEST_BID_AND_OFFER = "BE";
        public const string OUTSIDE_SPREAD = "AV";
        public const string MULT_ASSET_CLASS_MULTILEG_TRADE = "3";
        public const string CASH_MARKET = "A";
        public const string NEXT_DAY_MARKET = "D";
        public const string RULE127 = "G";
        public const string RULE155 = "H";
        public const string OPENING = "E";
    }


    /// <summary>
    /// MDEntryID Field
    /// </summary>/
    public sealed class MDEntryID : StringField
    {
        public const int TAG = 278;

        public MDEntryID()
            : base(Tags.MDEntryID) { }
        public MDEntryID(string val)
            : base(Tags.MDEntryID, val) { }

    }


    /// <summary>
    /// MDUpdateAction Field
    /// </summary>/
    public sealed class MDUpdateAction : CharField
    {
        public const int TAG = 279;

        public MDUpdateAction()
            : base(Tags.MDUpdateAction) { }
        public MDUpdateAction(char val)
            : base(Tags.MDUpdateAction, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char CHANGE = '1';
        public const char DELETE = '2';
        public const char DELETE_THRU = '3';
        public const char DELETE_FROM = '4';
        public const char OVERLAY = '5';
    }


    /// <summary>
    /// MDEntryRefID Field
    /// </summary>/
    public sealed class MDEntryRefID : StringField
    {
        public const int TAG = 280;

        public MDEntryRefID()
            : base(Tags.MDEntryRefID) { }
        public MDEntryRefID(string val)
            : base(Tags.MDEntryRefID, val) { }

    }


    /// <summary>
    /// MDReqRejReason Field
    /// </summary>/
    public sealed class MDReqRejReason : CharField
    {
        public const int TAG = 281;

        public MDReqRejReason()
            : base(Tags.MDReqRejReason) { }
        public MDReqRejReason(char val)
            : base(Tags.MDReqRejReason, val) { }


        // Field Enumerations
        public const char UNKNOWN_SYMBOL = '0';
        public const char DUPLICATE_MDREQID = '1';
        public const char INSUFFICIENT_BANDWIDTH = '2';
        public const char INSUFFICIENT_PERMISSIONS = '3';
        public const char UNSUPPORTED_SUBSCRIPTIONREQUESTTYPE = '4';
        public const char UNSUPPORTED_MARKETDEPTH = '5';
        public const char UNSUPPORTED_MDUPDATETYPE = '6';
        public const char UNSUPPORTED_AGGREGATEDBOOK = '7';
        public const char UNSUPPORTED_MDENTRYTYPE = '8';
        public const char UNSUPPORTED_TRADINGSESSIONID = '9';
        public const char UNSUPPORTED_SCOPE = 'A';
        public const char UNSUPPORTED_OPENCLOSESETTLEFLAG = 'B';
        public const char UNSUPPORTED_MDIMPLICITDELETE = 'C';
        public const char INSUFFICIENT_CREDIT = 'D';
    }


    /// <summary>
    /// MDEntryOriginator Field
    /// </summary>/
    public sealed class MDEntryOriginator : StringField
    {
        public const int TAG = 282;

        public MDEntryOriginator()
            : base(Tags.MDEntryOriginator) { }
        public MDEntryOriginator(string val)
            : base(Tags.MDEntryOriginator, val) { }

    }


    /// <summary>
    /// LocationID Field
    /// </summary>/
    public sealed class LocationID : StringField
    {
        public const int TAG = 283;

        public LocationID()
            : base(Tags.LocationID) { }
        public LocationID(string val)
            : base(Tags.LocationID, val) { }

    }


    /// <summary>
    /// DeskID Field
    /// </summary>/
    public sealed class DeskID : StringField
    {
        public const int TAG = 284;

        public DeskID()
            : base(Tags.DeskID) { }
        public DeskID(string val)
            : base(Tags.DeskID, val) { }

    }


    /// <summary>
    /// DeleteReason Field
    /// </summary>/
    public sealed class DeleteReason : CharField
    {
        public const int TAG = 285;

        public DeleteReason()
            : base(Tags.DeleteReason) { }
        public DeleteReason(char val)
            : base(Tags.DeleteReason, val) { }


        // Field Enumerations
        public const char CANCELLATION = '0';
        public const char ERROR = '1';
        public const char CANCELATION_TRADE_BUST = '0';
        public const char CANCELATION = '0';
    }


    /// <summary>
    /// OpenCloseSettleFlag Field
    /// </summary>/
    public sealed class OpenCloseSettleFlag : StringField
    {
        public const int TAG = 286;

        public OpenCloseSettleFlag()
            : base(Tags.OpenCloseSettleFlag) { }
        public OpenCloseSettleFlag(string val)
            : base(Tags.OpenCloseSettleFlag, val) { }


        // Field Enumerations
        public const string DAILY_OPEN = "0";
        public const string SESSION_OPEN = "1";
        public const string DELIVERY_SETTLEMENT_PRICE = "2";
        public const string EXPECTED_PRICE = "3";
        public const string PRICE_FROM_PREVIOUS_BUSINESS_DAY = "4";
        public const string DAILY_OPEN_CLOSE__SETTLEMENT_PRICE = "0";
        public const string SESSION_OPEN_CLOSE__SETTLEMENT_PRICE = "1";
    }


    /// <summary>
    /// SellerDays Field
    /// </summary>/
    public sealed class SellerDays : IntField
    {
        public const int TAG = 287;

        public SellerDays()
            : base(Tags.SellerDays) { }
        public SellerDays(int val)
            : base(Tags.SellerDays, val) { }

    }


    /// <summary>
    /// MDEntryBuyer Field
    /// </summary>/
    public sealed class MDEntryBuyer : StringField
    {
        public const int TAG = 288;

        public MDEntryBuyer()
            : base(Tags.MDEntryBuyer) { }
        public MDEntryBuyer(string val)
            : base(Tags.MDEntryBuyer, val) { }

    }


    /// <summary>
    /// MDEntrySeller Field
    /// </summary>/
    public sealed class MDEntrySeller : StringField
    {
        public const int TAG = 289;

        public MDEntrySeller()
            : base(Tags.MDEntrySeller) { }
        public MDEntrySeller(string val)
            : base(Tags.MDEntrySeller, val) { }

    }


    /// <summary>
    /// MDEntryPositionNo Field
    /// </summary>/
    public sealed class MDEntryPositionNo : IntField
    {
        public const int TAG = 290;

        public MDEntryPositionNo()
            : base(Tags.MDEntryPositionNo) { }
        public MDEntryPositionNo(int val)
            : base(Tags.MDEntryPositionNo, val) { }

    }


    /// <summary>
    /// FinancialStatus Field
    /// </summary>/
    public sealed class FinancialStatus : StringField
    {
        public const int TAG = 291;

        public FinancialStatus()
            : base(Tags.FinancialStatus) { }
        public FinancialStatus(string val)
            : base(Tags.FinancialStatus, val) { }


        // Field Enumerations
        public const string BANKRUPT = "1";
        public const string PENDING_DELISTING = "2";
        public const string RESTRICTED = "3";
    }


    /// <summary>
    /// CorporateAction Field
    /// </summary>/
    public sealed class CorporateAction : StringField
    {
        public const int TAG = 292;

        public CorporateAction()
            : base(Tags.CorporateAction) { }
        public CorporateAction(string val)
            : base(Tags.CorporateAction, val) { }


        // Field Enumerations
        public const string EX_DIVIDEND = "A";
        public const string EX_DISTRIBUTION = "B";
        public const string EX_RIGHTS = "C";
        public const string NEW = "D";
        public const string EX_INTEREST = "E";
        public const string CASH_DIVIDEND = "F";
        public const string STOCK_DIVIDEND = "G";
        public const string NON_INTEGER_STOCK_SPLIT = "H";
        public const string REVERSE_STOCK_SPLIT = "I";
        public const string STANDARD_INTEGER_STOCK_SPLIT = "J";
        public const string POSITION_CONSOLIDATION = "K";
        public const string LIQUIDATION_REORGANIZATION = "L";
        public const string MERGER_REORGANIZATION = "M";
        public const string RIGHTS_OFFERING = "N";
        public const string SHAREHOLDER_MEETING = "O";
        public const string SPINOFF = "P";
        public const string TENDER_OFFER = "Q";
        public const string WARRANT = "R";
        public const string SPECIAL_ACTION = "S";
        public const string SYMBOL_CONVERSION = "T";
        public const string CUSIP = "U";
        public const string LEAP_ROLLOVER = "V";
        public const string SUCCESSION_EVENT = "W";
        public const string EXDIVIDEND = "A";
        public const string EXDISTRIBUTION = "B";
        public const string EXRIGHTS = "C";
        public const string EXINTEREST = "E";
    }


    /// <summary>
    /// DefBidSize Field
    /// </summary>/
    public sealed class DefBidSize : DecimalField
    {
        public const int TAG = 293;

        public DefBidSize()
            : base(Tags.DefBidSize) { }
        public DefBidSize(Decimal val)
            : base(Tags.DefBidSize, val) { }

    }


    /// <summary>
    /// DefOfferSize Field
    /// </summary>/
    public sealed class DefOfferSize : DecimalField
    {
        public const int TAG = 294;

        public DefOfferSize()
            : base(Tags.DefOfferSize) { }
        public DefOfferSize(Decimal val)
            : base(Tags.DefOfferSize, val) { }

    }


    /// <summary>
    /// NoQuoteEntries Field
    /// </summary>/
    public sealed class NoQuoteEntries : IntField
    {
        public const int TAG = 295;

        public NoQuoteEntries()
            : base(Tags.NoQuoteEntries) { }
        public NoQuoteEntries(int val)
            : base(Tags.NoQuoteEntries, val) { }

    }


    /// <summary>
    /// NoQuoteSets Field
    /// </summary>/
    public sealed class NoQuoteSets : IntField
    {
        public const int TAG = 296;

        public NoQuoteSets()
            : base(Tags.NoQuoteSets) { }
        public NoQuoteSets(int val)
            : base(Tags.NoQuoteSets, val) { }

    }


    /// <summary>
    /// QuoteAckStatus Field
    /// </summary>/
    public sealed class QuoteAckStatus : IntField
    {
        public const int TAG = 1865;

        public QuoteAckStatus()
            : base(Tags.QuoteAckStatus) { }
        public QuoteAckStatus(int val)
            : base(Tags.QuoteAckStatus, val) { }


        // Field Enumerations
        public const int RECEIVED_NOT_YET_PROCESSED = 0;
        public const int ACCEPTED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// QuoteCancelType Field
    /// </summary>/
    public sealed class QuoteCancelType : IntField
    {
        public const int TAG = 298;

        public QuoteCancelType()
            : base(Tags.QuoteCancelType) { }
        public QuoteCancelType(int val)
            : base(Tags.QuoteCancelType, val) { }


        // Field Enumerations
        public const int CANCEL_FOR_ONE_OR_MORE_SECURITIES = 1;
        public const int CANCEL_FOR_SECURITY_TYPE = 2;
        public const int CANCEL_FOR_UNDERLYING_SECURITY = 3;
        public const int CANCEL_ALL_QUOTES = 4;
        public const int CANCEL_SPECIFIED_SINGLE_QUOTE = 5;
        public const int CANCEL_BY_TYPE_OF_QUOTE = 6;
        public const int CANCEL_FOR_SECURITY_ISSUER = 7;
        public const int CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = 8;
        public const int CANCEL_FOR_SYMBOL = 1;
        public const int CANCEL_FOR_UNDERLYING_SYMBOL = 3;
        public const int CANCEL_QUOTE_SPECIFIED_IN_QUOTEID = 5;
    }


    /// <summary>
    /// QuoteEntryID Field
    /// </summary>/
    public sealed class QuoteEntryID : StringField
    {
        public const int TAG = 299;

        public QuoteEntryID()
            : base(Tags.QuoteEntryID) { }
        public QuoteEntryID(string val)
            : base(Tags.QuoteEntryID, val) { }

    }


    /// <summary>
    /// QuoteRejectReason Field
    /// </summary>/
    public sealed class QuoteRejectReason : IntField
    {
        public const int TAG = 300;

        public QuoteRejectReason()
            : base(Tags.QuoteRejectReason) { }
        public QuoteRejectReason(int val)
            : base(Tags.QuoteRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_SYMBOL = 1;
        public const int EXCHANGE = 2;
        public const int QUOTE_REQUEST_EXCEEDS_LIMIT = 3;
        public const int TOO_LATE_TO_ENTER = 4;
        public const int UNKNOWN_QUOTE = 5;
        public const int DUPLICATE_QUOTE = 6;
        public const int INVALID_BID_ASK_SPREAD = 7;
        public const int INVALID_PRICE = 8;
        public const int NOT_AUTHORIZED_TO_QUOTE_SECURITY = 9;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND_10 = 10;
        public const int QUOTE_LOCKED = 11;
        public const int OTHER = 99;
        public const int INVALID_OR_UNKNOWN_SECURITY_ISSUER = 12;
        public const int INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = 13;
        public const int NOTIONAL_VALUE_EXCEEDS_THRESHOLD = 14;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND_15 = 15;
        public const int REFERENCE_PRICE_NOT_AVAILABLE = 16;
        public const int INSUFFICIENT_CREDIT_LIMIT = 17;
        public const int EXCEEDED_CLIP_SIZE_LIMIT = 18;
        public const int EXCEEDED_MAXIMUM_NOTIONAL_ORDER_AMOUNT = 19;
        public const int EXCEEDED_DV01_PV01_LIMIT = 20;
        public const int EXCEEDED_CS01_LIMIT = 21;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND = 10;
        public const int EXCHANGE_CLOSED = 2;
        public const int DUPLICATE_QUOTE_7 = 6;
    }


    /// <summary>
    /// QuoteResponseLevel Field
    /// </summary>/
    public sealed class QuoteResponseLevel : IntField
    {
        public const int TAG = 301;

        public QuoteResponseLevel()
            : base(Tags.QuoteResponseLevel) { }
        public QuoteResponseLevel(int val)
            : base(Tags.QuoteResponseLevel, val) { }


        // Field Enumerations
        public const int NO_ACKNOWLEDGEMENT = 0;
        public const int ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES = 1;
        public const int ACKNOWLEDGE_EACH_QUOTE_MESSAGE = 2;
        public const int SUMMARY_ACKNOWLEDGEMENT = 3;
        public const int ACKNOWLEDGE_EACH_QUOTE_MESSAGES = 2;
    }


    /// <summary>
    /// QuoteSetID Field
    /// </summary>/
    public sealed class QuoteSetID : StringField
    {
        public const int TAG = 302;

        public QuoteSetID()
            : base(Tags.QuoteSetID) { }
        public QuoteSetID(string val)
            : base(Tags.QuoteSetID, val) { }

    }


    /// <summary>
    /// QuoteRequestType Field
    /// </summary>/
    public sealed class QuoteRequestType : IntField
    {
        public const int TAG = 303;

        public QuoteRequestType()
            : base(Tags.QuoteRequestType) { }
        public QuoteRequestType(int val)
            : base(Tags.QuoteRequestType, val) { }


        // Field Enumerations
        public const int MANUAL = 1;
        public const int AUTOMATIC = 2;
        public const int CONFIRM_QUOTE = 3;
    }


    /// <summary>
    /// TotQuoteEntries Field
    /// </summary>/
    public sealed class TotQuoteEntries : IntField
    {
        public const int TAG = 304;

        public TotQuoteEntries()
            : base(Tags.TotQuoteEntries) { }
        public TotQuoteEntries(int val)
            : base(Tags.TotQuoteEntries, val) { }

    }


    /// <summary>
    /// UnderlyingIDSource Field
    /// </summary>/
    public sealed class UnderlyingIDSource : StringField
    {
        public const int TAG = 305;

        public UnderlyingIDSource()
            : base(Tags.UnderlyingIDSource) { }
        public UnderlyingIDSource(string val)
            : base(Tags.UnderlyingIDSource, val) { }

    }


    /// <summary>
    /// UnderlyingIssuer Field
    /// </summary>/
    public sealed class UnderlyingIssuer : StringField
    {
        public const int TAG = 306;

        public UnderlyingIssuer()
            : base(Tags.UnderlyingIssuer) { }
        public UnderlyingIssuer(string val)
            : base(Tags.UnderlyingIssuer, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityDesc Field
    /// </summary>/
    public sealed class UnderlyingSecurityDesc : StringField
    {
        public const int TAG = 307;

        public UnderlyingSecurityDesc()
            : base(Tags.UnderlyingSecurityDesc) { }
        public UnderlyingSecurityDesc(string val)
            : base(Tags.UnderlyingSecurityDesc, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityExchange Field
    /// </summary>/
    public sealed class UnderlyingSecurityExchange : StringField
    {
        public const int TAG = 308;

        public UnderlyingSecurityExchange()
            : base(Tags.UnderlyingSecurityExchange) { }
        public UnderlyingSecurityExchange(string val)
            : base(Tags.UnderlyingSecurityExchange, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityID Field
    /// </summary>/
    public sealed class UnderlyingSecurityID : StringField
    {
        public const int TAG = 309;

        public UnderlyingSecurityID()
            : base(Tags.UnderlyingSecurityID) { }
        public UnderlyingSecurityID(string val)
            : base(Tags.UnderlyingSecurityID, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityType Field
    /// </summary>/
    public sealed class UnderlyingSecurityType : StringField
    {
        public const int TAG = 310;

        public UnderlyingSecurityType()
            : base(Tags.UnderlyingSecurityType) { }
        public UnderlyingSecurityType(string val)
            : base(Tags.UnderlyingSecurityType, val) { }


        // Field Enumerations
        public const string US_TREASURY_NOTE_UST = "UST";
        public const string US_TREASURY_BILL_USTB = "USTB";
        public const string EURO_SUPRANATIONAL_COUPONS = "EUSUPRA";
        public const string FEDERAL_AGENCY_COUPON = "FAC";
        public const string FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN";
        public const string PRIVATE_EXPORT_FUNDING = "PEF";
        public const string USD_SUPRANATIONAL_COUPONS = "SUPRA";
        public const string CORPORATE_BOND = "CORP";
        public const string CORPORATE_PRIVATE_PLACEMENT = "CPP";
        public const string CONVERTIBLE_BOND = "CB";
        public const string DUAL_CURRENCY = "DUAL";
        public const string EURO_CORPORATE_BOND = "EUCORP";
        public const string EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN";
        public const string US_CORPORATE_FLOATING_RATE_NOTES = "FRN";
        public const string INDEXED_LINKED = "XLINKD";
        public const string STRUCTURED_NOTES = "STRUCT";
        public const string YANKEE_CORPORATE_BOND = "YANK";
        public const string FOREIGN_EXCHANGE_CONTRACT = "FOR";
        public const string CREDIT_DEFAULT_SWAP = "CDS";
        public const string FUTURE = "FUT";
        public const string OPTION = "OPT";
        public const string OPTIONS_ON_FUTURES = "OOF";
        public const string OPTIONS_ON_PHYSICAL = "OOP";
        public const string INTEREST_RATE_SWAP = "IRS";
        public const string OPTIONS_ON_COMBO = "OOC";
        public const string COMMON_STOCK = "CS";
        public const string PREFERRED_STOCK = "PS";
        public const string REPURCHASE = "REPO";
        public const string FORWARD = "FORWARD";
        public const string BUY_SELLBACK = "BUYSELL";
        public const string SECURITIES_LOAN = "SECLOAN";
        public const string SECURITIES_PLEDGE = "SECPLEDGE";
        public const string BRADY_BOND = "BRADY";
        public const string CANADIAN_TREASURY_NOTES = "CAN";
        public const string CANADIAN_TREASURY_BILLS = "CTB";
        public const string EURO_SOVEREIGNS = "EUSOV";
        public const string CANADIAN_PROVINCIAL_BONDS = "PROV";
        public const string TREASURY_BILL = "TB";
        public const string US_TREASURY_BOND = "TBOND";
        public const string INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT";
        public const string US_TREASURY_BILL_TBILL = "TBILL";
        public const string TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS";
        public const string PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL";
        public const string PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN";
        public const string US_TREASURY_NOTE_TNOTE = "TNOTE";
        public const string TERM_LOAN = "TERM";
        public const string REVOLVER_LOAN = "RVLV";
        public const string REVOLVER_TERM_LOAN = "RVLVTRM";
        public const string BRIDGE_LOAN = "BRIDGE";
        public const string LETTER_OF_CREDIT = "LOFC";
        public const string SWING_LINE_FACILITY = "SWING";
        public const string DEBTOR_IN_POSSESSION = "DINP";
        public const string DEFAULTED = "DEFLTED";
        public const string WITHDRAWN = "WITHDRN";
        public const string REPLACED = "REPLACD";
        public const string MATURED = "MATURED";
        public const string AMENDED_RESTATED = "AMENDED";
        public const string RETIRED = "RETIRED";
        public const string BANKERS_ACCEPTANCE = "BA";
        public const string BANK_DEPOSITORY_NOTE = "BDN";
        public const string BANK_NOTES = "BN";
        public const string BILL_OF_EXCHANGES = "BOX";
        public const string CANADIAN_MONEY_MARKETS = "CAMM";
        public const string CERTIFICATE_OF_DEPOSIT = "CD";
        public const string CALL_LOANS = "CL";
        public const string COMMERCIAL_PAPER = "CP";
        public const string DEPOSIT_NOTES = "DN";
        public const string EURO_CERTIFICATE_OF_DEPOSIT = "EUCD";
        public const string EURO_COMMERCIAL_PAPER = "EUCP";
        public const string LIQUIDITY_NOTE = "LQN";
        public const string MEDIUM_TERM_NOTES = "MTN";
        public const string OVERNIGHT = "ONITE";
        public const string PROMISSORY_NOTE = "PN";
        public const string SHORT_TERM_LOAN_NOTE = "STN";
        public const string PLAZOS_FIJOS = "PZFJ";
        public const string SECURED_LIQUIDITY_NOTE = "SLQN";
        public const string TIME_DEPOSIT = "TD";
        public const string TERM_LIQUIDITY_NOTE = "TLQN";
        public const string EXTENDED_COMM_NOTE = "XCN";
        public const string YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD";
        public const string ASSET_BACKED_SECURITIES = "ABS";
        public const string CANADIAN_MORTGAGE_BONDS = "CMB";
        public const string CORP_MORTGAGE_BACKED_SECURITIES = "CMBS";
        public const string COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO";
        public const string IOETTE_MORTGAGE = "IET";
        public const string MORTGAGE_BACKED_SECURITIES = "MBS";
        public const string MORTGAGE_INTEREST_ONLY = "MIO";
        public const string MORTGAGE_PRINCIPAL_ONLY = "MPO";
        public const string MORTGAGE_PRIVATE_PLACEMENT = "MPP";
        public const string MISCELLANEOUS_PASS_THROUGH = "MPT";
        public const string PFANDBRIEFE = "PFAND";
        public const string TO_BE_ANNOUNCED = "TBA";
        public const string OTHER_ANTICIPATION_NOTES = "AN";
        public const string CERTIFICATE_OF_OBLIGATION = "COFO";
        public const string CERTIFICATE_OF_PARTICIPATION = "COFP";
        public const string GENERAL_OBLIGATION_BONDS = "GO";
        public const string MANDATORY_TENDER = "MT";
        public const string REVENUE_ANTICIPATION_NOTE = "RAN";
        public const string REVENUE_BONDS = "REV";
        public const string SPECIAL_ASSESSMENT = "SPCLA";
        public const string SPECIAL_OBLIGATION = "SPCLO";
        public const string SPECIAL_TAX = "SPCLT";
        public const string TAX_ANTICIPATION_NOTE = "TAN";
        public const string TAX_ALLOCATION = "TAXA";
        public const string TAX_EXEMPT_COMMERCIAL_PAPER = "TECP";
        public const string TAXABLE_MUNICIPAL_CP = "TMCP";
        public const string TAX_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string VARIABLE_RATE_DEMAND_NOTE = "VRDN";
        public const string WARRANT = "WAR";
        public const string MUTUAL_FUND = "MF";
        public const string MULTILEG_INSTRUMENT = "MLEG";
        public const string NO_SECURITY_TYPE = "NONE";
        public const string WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?";
        public const string CASH = "CASH";
        public const string NON_DELIVERABLE_FORWARD = "FXNDF";
        public const string FX_SPOT = "FXSPOT";
        public const string FX_FORWARD = "FXFWD";
        public const string FX_SWAP = "FXSWAP";
        public const string DELIVERY_VERSUS_PLEDGE = "DVPLDG";
        public const string COMMODITY_SWAP = "CMDTYSWAP";
        public const string SWAP_OPTION = "SWAPTION";
        public const string DERIVATIVE_FORWARD = "FWD";
        public const string TOTAL_RETURN_SWAP = "TRS";
        public const string CAP = "CAP";
        public const string COLLAR = "CLLR";
        public const string EXOTIC = "EXOTIC";
        public const string FLOOR = "FLR";
        public const string FORWARD_RATE_AGREEMENT = "FRA";
        public const string LOAN_LEASE = "LOANLEASE";
        public const string SPOT_FORWARD = "SPOTFWD";
        public const string TRANSMISSION = "XMISSION";
        public const string GENERAL_TYPE_FOR_A_CONTRACT_BASED_ON_AN_ESTABLISHED_INDEX = "INDEX";
        public const string COLLATERAL_BASKET = "COLLBSKT";
        public const string BOND_BASKET = "BDBSKT";
        public const string CONTRACT_FOR_DIFFERENCE = "CFD";
        public const string CORRELATION_SWAP = "CRLTNSWAP";
        public const string DIVIDEND_SWAP = "DVDNDSWAP";
        public const string EQUITY_BASKET = "EQBSKT";
        public const string EQUITY_FORWARD = "EQFWD";
        public const string RETURN_SWAP = "RTRNSWAP";
        public const string VARIANCE_SWAP = "VARSWAP";
        public const string NON_DELIVERABLE_SWAP = "FXNDS";
        public const string PORTFOLIO_SWAP = "PRTFLIOSWAP";
        public const string FUTURES_ON_A_SWAP = "FUTSWAP";
        public const string FORWARDS_ON_A_SWAP = "FWDSWAP";
        public const string FORWARD_FREIGHT_AGREEMENT = "FWDFRTAGMT";
        public const string SPREAD_BETTING = "SPREADBET";
        public const string OTHER = "Other";
        public const string DEPOSITORY_RECEIPTS = "DR";
        public const string EXCHANGE_TRADED_COMMODITY = "ETC";
        public const string EXCHANGE_TRADED_NOTE = "ETN";
        public const string SECURITIZED_DERIVATIVE = "SECDERIV";
        public const string STRUCTURED_FINANCE_PRODUCT = "SFP";
        public const string MARGIN_LOAN = "MRGNLOAN";
    }


    /// <summary>
    /// UnderlyingSymbol Field
    /// </summary>/
    public sealed class UnderlyingSymbol : StringField
    {
        public const int TAG = 311;

        public UnderlyingSymbol()
            : base(Tags.UnderlyingSymbol) { }
        public UnderlyingSymbol(string val)
            : base(Tags.UnderlyingSymbol, val) { }

    }


    /// <summary>
    /// UnderlyingSymbolSfx Field
    /// </summary>/
    public sealed class UnderlyingSymbolSfx : StringField
    {
        public const int TAG = 312;

        public UnderlyingSymbolSfx()
            : base(Tags.UnderlyingSymbolSfx) { }
        public UnderlyingSymbolSfx(string val)
            : base(Tags.UnderlyingSymbolSfx, val) { }


        // Field Enumerations
        public const string EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = "CD";
        public const string WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN = "WI";
    }


    /// <summary>
    /// UnderlyingMaturityMonthYear Field
    /// </summary>/
    public sealed class UnderlyingMaturityMonthYear : StringField
    {
        public const int TAG = 313;

        public UnderlyingMaturityMonthYear()
            : base(Tags.UnderlyingMaturityMonthYear) { }
        public UnderlyingMaturityMonthYear(string val)
            : base(Tags.UnderlyingMaturityMonthYear, val) { }

    }


    /// <summary>
    /// UnderlyingMaturityDay Field
    /// </summary>/
    public sealed class UnderlyingMaturityDay : StringField
    {
        public const int TAG = 314;

        public UnderlyingMaturityDay()
            : base(Tags.UnderlyingMaturityDay) { }
        public UnderlyingMaturityDay(string val)
            : base(Tags.UnderlyingMaturityDay, val) { }

    }


    /// <summary>
    /// UnderlyingPutOrCall Field
    /// </summary>/
    public sealed class UnderlyingPutOrCall : IntField
    {
        public const int TAG = 315;

        public UnderlyingPutOrCall()
            : base(Tags.UnderlyingPutOrCall) { }
        public UnderlyingPutOrCall(int val)
            : base(Tags.UnderlyingPutOrCall, val) { }


        // Field Enumerations
        public const int PUT = 0;
        public const int CALL = 1;
        public const int OTHER = 2;
        public const int CHOOSER = 3;
    }


    /// <summary>
    /// UnderlyingStrikePrice Field
    /// </summary>/
    public sealed class UnderlyingStrikePrice : DecimalField
    {
        public const int TAG = 316;

        public UnderlyingStrikePrice()
            : base(Tags.UnderlyingStrikePrice) { }
        public UnderlyingStrikePrice(Decimal val)
            : base(Tags.UnderlyingStrikePrice, val) { }

    }


    /// <summary>
    /// UnderlyingOptAttribute Field
    /// </summary>/
    public sealed class UnderlyingOptAttribute : CharField
    {
        public const int TAG = 317;

        public UnderlyingOptAttribute()
            : base(Tags.UnderlyingOptAttribute) { }
        public UnderlyingOptAttribute(char val)
            : base(Tags.UnderlyingOptAttribute, val) { }

    }


    /// <summary>
    /// UnderlyingCurrency Field
    /// </summary>/
    public sealed class UnderlyingCurrency : StringField
    {
        public const int TAG = 318;

        public UnderlyingCurrency()
            : base(Tags.UnderlyingCurrency) { }
        public UnderlyingCurrency(string val)
            : base(Tags.UnderlyingCurrency, val) { }

    }


    /// <summary>
    /// RatioQty Field
    /// </summary>/
    public sealed class RatioQty : DecimalField
    {
        public const int TAG = 319;

        public RatioQty()
            : base(Tags.RatioQty) { }
        public RatioQty(Decimal val)
            : base(Tags.RatioQty, val) { }

    }


    /// <summary>
    /// SecurityReqID Field
    /// </summary>/
    public sealed class SecurityReqID : StringField
    {
        public const int TAG = 320;

        public SecurityReqID()
            : base(Tags.SecurityReqID) { }
        public SecurityReqID(string val)
            : base(Tags.SecurityReqID, val) { }

    }


    /// <summary>
    /// SecurityRequestType Field
    /// </summary>/
    public sealed class SecurityRequestType : IntField
    {
        public const int TAG = 321;

        public SecurityRequestType()
            : base(Tags.SecurityRequestType) { }
        public SecurityRequestType(int val)
            : base(Tags.SecurityRequestType, val) { }


        // Field Enumerations
        public const int REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONS = 0;
        public const int REQUEST_SECURITY_IDENTITY_FOR_THE_SPECIFICATIONS_PROVIDED = 1;
        public const int REQUEST_LIST_SECURITY_TYPES = 2;
        public const int REQUEST_LIST_SECURITIES = 3;
        public const int SYMBOL = 4;
        public const int SECURITYTYPE_AND_OR_CFICODE = 5;
        public const int PRODUCT = 6;
        public const int TRADINGSESSIONID = 7;
        public const int ALL_SECURITIES = 8;
        public const int MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID = 9;
    }


    /// <summary>
    /// SecurityResponseID Field
    /// </summary>/
    public sealed class SecurityResponseID : StringField
    {
        public const int TAG = 322;

        public SecurityResponseID()
            : base(Tags.SecurityResponseID) { }
        public SecurityResponseID(string val)
            : base(Tags.SecurityResponseID, val) { }

    }


    /// <summary>
    /// SecurityResponseType Field
    /// </summary>/
    public sealed class SecurityResponseType : IntField
    {
        public const int TAG = 323;

        public SecurityResponseType()
            : base(Tags.SecurityResponseType) { }
        public SecurityResponseType(int val)
            : base(Tags.SecurityResponseType, val) { }


        // Field Enumerations
        public const int ACCEPT_SECURITY_PROPOSAL_AS_IS = 1;
        public const int ACCEPT_SECURITY_PROPOSAL_WITH_REVISIONS_AS_INDICATED_IN_THE_MESSAGE = 2;
        public const int LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUEST = 3;
        public const int LIST_OF_SECURITIES_RETURNED_PER_REQUEST = 4;
        public const int REJECT_SECURITY_PROPOSAL = 5;
        public const int CANNOT_MATCH_SELECTION_CRITERIA = 6;
        public const int CAN_NOT_MATCH_SELECTION_CRITERIA = 6;
    }


    /// <summary>
    /// SecurityStatusReqID Field
    /// </summary>/
    public sealed class SecurityStatusReqID : StringField
    {
        public const int TAG = 324;

        public SecurityStatusReqID()
            : base(Tags.SecurityStatusReqID) { }
        public SecurityStatusReqID(string val)
            : base(Tags.SecurityStatusReqID, val) { }

    }


    /// <summary>
    /// UnsolicitedIndicator Field
    /// </summary>/
    public sealed class UnsolicitedIndicator : BooleanField
    {
        public const int TAG = 325;

        public UnsolicitedIndicator()
            : base(Tags.UnsolicitedIndicator) { }
        public UnsolicitedIndicator(Boolean val)
            : base(Tags.UnsolicitedIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean MESSAGE_IS_BEING_SENT_UNSOLICITED = true;
        public const Boolean MESSAGE_IS_BEING_SENT_AS_A_RESULT_OF_A_PRIOR_REQUEST = false;
    }


    /// <summary>
    /// SecurityTradingStatus Field
    /// </summary>/
    public sealed class SecurityTradingStatus : IntField
    {
        public const int TAG = 326;

        public SecurityTradingStatus()
            : base(Tags.SecurityTradingStatus) { }
        public SecurityTradingStatus(int val)
            : base(Tags.SecurityTradingStatus, val) { }


        // Field Enumerations
        public const int OPENING_DELAY = 1;
        public const int TRADING_HALT = 2;
        public const int RESUME = 3;
        public const int NO_OPEN = 4;
        public const int PRICE_INDICATION = 5;
        public const int TRADING_RANGE_INDICATION = 6;
        public const int MARKET_IMBALANCE_BUY = 7;
        public const int MARKET_IMBALANCE_SELL = 8;
        public const int MARKET_ON_CLOSE_IMBALANCE_BUY = 9;
        public const int MARKET_ON_CLOSE_IMBALANCE_SELL = 10;
        public const int NO_MARKET_IMBALANCE = 12;
        public const int NO_MARKET_ON_CLOSE_IMBALANCE = 13;
        public const int ITS_PRE_OPENING = 14;
        public const int NEW_PRICE_INDICATION = 15;
        public const int TRADE_DISSEMINATION_TIME = 16;
        public const int READY_TO_TRADE = 17;
        public const int NOT_AVAILABLE_FOR_TRADING = 18;
        public const int NOT_TRADED_ON_THIS_MARKET = 19;
        public const int UNKNOWN_OR_INVALID = 20;
        public const int PRE_OPEN = 21;
        public const int OPENING_ROTATION = 22;
        public const int FAST_MARKET = 23;
        public const int PRE_CROSS = 24;
        public const int CROSS = 25;
        public const int POST_CLOSE = 26;
        public const int NO_CANCEL = 27;
        public const int VAL_11 = 11;
        public const int NO_OPEN_NO_RESUME = 4;
        public const int NOT_ASSIGNED = 11;
        public const int READY_TO_TRADE_START_OF_SESSION = 17;
        public const int NOT_AVAILABLE_FOR_TRADING_END_OF_SESSION = 18;
        public const int NO_OPENNO_RESUME = 4;
        public const int ITS_PREOPENING = 14;
    }


    /// <summary>
    /// HaltReason Field
    /// </summary>/
    public sealed class HaltReason : CharField
    {
        public const int TAG = 327;

        public HaltReason()
            : base(Tags.HaltReason) { }
        public HaltReason(char val)
            : base(Tags.HaltReason, val) { }


        // Field Enumerations
        public const char ORDER_IMBALANCE = 'I';
        public const char EQUIPMENT_CHANGEOVER = 'X';
        public const char NEWS_PENDING = 'P';
        public const char NEWS_DISSEMINATION = 'D';
        public const char ORDER_INFLUX = 'E';
        public const char ADDITIONAL_INFORMATION = 'M';
    }


    /// <summary>
    /// InViewOfCommon Field
    /// </summary>/
    public sealed class InViewOfCommon : BooleanField
    {
        public const int TAG = 328;

        public InViewOfCommon()
            : base(Tags.InViewOfCommon) { }
        public InViewOfCommon(Boolean val)
            : base(Tags.InViewOfCommon, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean HALT_WAS_DUE_TO_COMMON_STOCK_BEING_HALTED = true;
        public const Boolean HALT_WAS_NOT_RELATED_TO_A_HALT_OF_THE_COMMON_STOCK = false;
    }


    /// <summary>
    /// DueToRelated Field
    /// </summary>/
    public sealed class DueToRelated : BooleanField
    {
        public const int TAG = 329;

        public DueToRelated()
            : base(Tags.DueToRelated) { }
        public DueToRelated(Boolean val)
            : base(Tags.DueToRelated, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean HALT_WAS_DUE_TO_RELATED_SECURITY_BEING_HALTED = true;
        public const Boolean HALT_WAS_NOT_RELATED_TO_A_HALT_OF_THE_RELATED_SECURITY = false;
    }


    /// <summary>
    /// BuyVolume Field
    /// </summary>/
    public sealed class BuyVolume : DecimalField
    {
        public const int TAG = 330;

        public BuyVolume()
            : base(Tags.BuyVolume) { }
        public BuyVolume(Decimal val)
            : base(Tags.BuyVolume, val) { }

    }


    /// <summary>
    /// SellVolume Field
    /// </summary>/
    public sealed class SellVolume : DecimalField
    {
        public const int TAG = 331;

        public SellVolume()
            : base(Tags.SellVolume) { }
        public SellVolume(Decimal val)
            : base(Tags.SellVolume, val) { }

    }


    /// <summary>
    /// HighPx Field
    /// </summary>/
    public sealed class HighPx : DecimalField
    {
        public const int TAG = 332;

        public HighPx()
            : base(Tags.HighPx) { }
        public HighPx(Decimal val)
            : base(Tags.HighPx, val) { }

    }


    /// <summary>
    /// LowPx Field
    /// </summary>/
    public sealed class LowPx : DecimalField
    {
        public const int TAG = 333;

        public LowPx()
            : base(Tags.LowPx) { }
        public LowPx(Decimal val)
            : base(Tags.LowPx, val) { }

    }


    /// <summary>
    /// Adjustment Field
    /// </summary>/
    public sealed class Adjustment : IntField
    {
        public const int TAG = 334;

        public Adjustment()
            : base(Tags.Adjustment) { }
        public Adjustment(int val)
            : base(Tags.Adjustment, val) { }


        // Field Enumerations
        public const int CANCEL = 1;
        public const int ERROR = 2;
        public const int CORRECTION = 3;
    }


    /// <summary>
    /// TradSesReqID Field
    /// </summary>/
    public sealed class TradSesReqID : StringField
    {
        public const int TAG = 335;

        public TradSesReqID()
            : base(Tags.TradSesReqID) { }
        public TradSesReqID(string val)
            : base(Tags.TradSesReqID, val) { }

    }


    /// <summary>
    /// TradingSessionID Field
    /// </summary>/
    public sealed class TradingSessionID : StringField
    {
        public const int TAG = 336;

        public TradingSessionID()
            : base(Tags.TradingSessionID) { }
        public TradingSessionID(string val)
            : base(Tags.TradingSessionID, val) { }


        // Field Enumerations
        public const string DAY = "1";
        public const string HALFDAY = "2";
        public const string MORNING = "3";
        public const string AFTERNOON = "4";
        public const string EVENING = "5";
        public const string AFTER_HOURS = "6";
        public const string HOLIDAY = "7";
    }


    /// <summary>
    /// ContraTrader Field
    /// </summary>/
    public sealed class ContraTrader : StringField
    {
        public const int TAG = 337;

        public ContraTrader()
            : base(Tags.ContraTrader) { }
        public ContraTrader(string val)
            : base(Tags.ContraTrader, val) { }

    }


    /// <summary>
    /// TradSesMethod Field
    /// </summary>/
    public sealed class TradSesMethod : IntField
    {
        public const int TAG = 338;

        public TradSesMethod()
            : base(Tags.TradSesMethod) { }
        public TradSesMethod(int val)
            : base(Tags.TradSesMethod, val) { }


        // Field Enumerations
        public const int ELECTRONIC = 1;
        public const int OPEN_OUTCRY = 2;
        public const int TWO_PARTY = 3;
        public const int VOICE = 4;
    }


    /// <summary>
    /// TradSesMode Field
    /// </summary>/
    public sealed class TradSesMode : IntField
    {
        public const int TAG = 339;

        public TradSesMode()
            : base(Tags.TradSesMode) { }
        public TradSesMode(int val)
            : base(Tags.TradSesMode, val) { }


        // Field Enumerations
        public const int TESTING = 1;
        public const int SIMULATED = 2;
        public const int PRODUCTION = 3;
    }


    /// <summary>
    /// TradSesStatus Field
    /// </summary>/
    public sealed class TradSesStatus : IntField
    {
        public const int TAG = 340;

        public TradSesStatus()
            : base(Tags.TradSesStatus) { }
        public TradSesStatus(int val)
            : base(Tags.TradSesStatus, val) { }


        // Field Enumerations
        public const int UNKNOWN = 0;
        public const int HALTED = 1;
        public const int OPEN = 2;
        public const int CLOSED = 3;
        public const int PRE_OPEN = 4;
        public const int PRE_CLOSE = 5;
        public const int REQUEST_REJECTED = 6;
        public const int PREOPEN = 4;
        public const int PRECLOSE = 5;
    }


    /// <summary>
    /// TradSesStartTime Field
    /// </summary>/
    public sealed class TradSesStartTime : DateTimeField
    {
        public const int TAG = 341;

        public TradSesStartTime()
            : base(Tags.TradSesStartTime) { }
        public TradSesStartTime(DateTime val)
            : base(Tags.TradSesStartTime, val) { }
        public TradSesStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.TradSesStartTime, val, showMilliseconds) { }
        public TradSesStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradSesStartTime, val, precision) { }

    }


    /// <summary>
    /// TradSesOpenTime Field
    /// </summary>/
    public sealed class TradSesOpenTime : DateTimeField
    {
        public const int TAG = 342;

        public TradSesOpenTime()
            : base(Tags.TradSesOpenTime) { }
        public TradSesOpenTime(DateTime val)
            : base(Tags.TradSesOpenTime, val) { }
        public TradSesOpenTime(DateTime val, bool showMilliseconds)
            : base(Tags.TradSesOpenTime, val, showMilliseconds) { }
        public TradSesOpenTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradSesOpenTime, val, precision) { }

    }


    /// <summary>
    /// TradSesPreCloseTime Field
    /// </summary>/
    public sealed class TradSesPreCloseTime : DateTimeField
    {
        public const int TAG = 343;

        public TradSesPreCloseTime()
            : base(Tags.TradSesPreCloseTime) { }
        public TradSesPreCloseTime(DateTime val)
            : base(Tags.TradSesPreCloseTime, val) { }
        public TradSesPreCloseTime(DateTime val, bool showMilliseconds)
            : base(Tags.TradSesPreCloseTime, val, showMilliseconds) { }
        public TradSesPreCloseTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradSesPreCloseTime, val, precision) { }

    }


    /// <summary>
    /// TradSesCloseTime Field
    /// </summary>/
    public sealed class TradSesCloseTime : DateTimeField
    {
        public const int TAG = 344;

        public TradSesCloseTime()
            : base(Tags.TradSesCloseTime) { }
        public TradSesCloseTime(DateTime val)
            : base(Tags.TradSesCloseTime, val) { }
        public TradSesCloseTime(DateTime val, bool showMilliseconds)
            : base(Tags.TradSesCloseTime, val, showMilliseconds) { }
        public TradSesCloseTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradSesCloseTime, val, precision) { }

    }


    /// <summary>
    /// TradSesEndTime Field
    /// </summary>/
    public sealed class TradSesEndTime : DateTimeField
    {
        public const int TAG = 345;

        public TradSesEndTime()
            : base(Tags.TradSesEndTime) { }
        public TradSesEndTime(DateTime val)
            : base(Tags.TradSesEndTime, val) { }
        public TradSesEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.TradSesEndTime, val, showMilliseconds) { }
        public TradSesEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradSesEndTime, val, precision) { }

    }


    /// <summary>
    /// NumberOfOrders Field
    /// </summary>/
    public sealed class NumberOfOrders : IntField
    {
        public const int TAG = 346;

        public NumberOfOrders()
            : base(Tags.NumberOfOrders) { }
        public NumberOfOrders(int val)
            : base(Tags.NumberOfOrders, val) { }

    }


    /// <summary>
    /// MessageEncoding Field
    /// </summary>/
    public sealed class MessageEncoding : StringField
    {
        public const int TAG = 347;

        public MessageEncoding()
            : base(Tags.MessageEncoding) { }
        public MessageEncoding(string val)
            : base(Tags.MessageEncoding, val) { }


        // Field Enumerations
        public const string ISO_2022_JP = "ISO-2022-JP";
        public const string EUC_JP = "EUC-JP";
        public const string SHIFT_JIS = "SHIFT_JIS";
        public const string UTF_8 = "UTF-8";
    }


    /// <summary>
    /// EncodedIssuerLen Field
    /// </summary>/
    public sealed class EncodedIssuerLen : IntField
    {
        public const int TAG = 348;

        public EncodedIssuerLen()
            : base(Tags.EncodedIssuerLen) { }
        public EncodedIssuerLen(int val)
            : base(Tags.EncodedIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedIssuer Field
    /// </summary>/
    public sealed class EncodedIssuer : StringField
    {
        public const int TAG = 349;

        public EncodedIssuer()
            : base(Tags.EncodedIssuer) { }
        public EncodedIssuer(string val)
            : base(Tags.EncodedIssuer, val) { }

    }


    /// <summary>
    /// EncodedSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedSecurityDescLen : IntField
    {
        public const int TAG = 350;

        public EncodedSecurityDescLen()
            : base(Tags.EncodedSecurityDescLen) { }
        public EncodedSecurityDescLen(int val)
            : base(Tags.EncodedSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedSecurityDesc Field
    /// </summary>/
    public sealed class EncodedSecurityDesc : StringField
    {
        public const int TAG = 351;

        public EncodedSecurityDesc()
            : base(Tags.EncodedSecurityDesc) { }
        public EncodedSecurityDesc(string val)
            : base(Tags.EncodedSecurityDesc, val) { }

    }


    /// <summary>
    /// EncodedListExecInstLen Field
    /// </summary>/
    public sealed class EncodedListExecInstLen : IntField
    {
        public const int TAG = 352;

        public EncodedListExecInstLen()
            : base(Tags.EncodedListExecInstLen) { }
        public EncodedListExecInstLen(int val)
            : base(Tags.EncodedListExecInstLen, val) { }

    }


    /// <summary>
    /// EncodedListExecInst Field
    /// </summary>/
    public sealed class EncodedListExecInst : StringField
    {
        public const int TAG = 353;

        public EncodedListExecInst()
            : base(Tags.EncodedListExecInst) { }
        public EncodedListExecInst(string val)
            : base(Tags.EncodedListExecInst, val) { }

    }


    /// <summary>
    /// EncodedTextLen Field
    /// </summary>/
    public sealed class EncodedTextLen : IntField
    {
        public const int TAG = 354;

        public EncodedTextLen()
            : base(Tags.EncodedTextLen) { }
        public EncodedTextLen(int val)
            : base(Tags.EncodedTextLen, val) { }

    }


    /// <summary>
    /// EncodedText Field
    /// </summary>/
    public sealed class EncodedText : StringField
    {
        public const int TAG = 355;

        public EncodedText()
            : base(Tags.EncodedText) { }
        public EncodedText(string val)
            : base(Tags.EncodedText, val) { }

    }


    /// <summary>
    /// EncodedSubjectLen Field
    /// </summary>/
    public sealed class EncodedSubjectLen : IntField
    {
        public const int TAG = 356;

        public EncodedSubjectLen()
            : base(Tags.EncodedSubjectLen) { }
        public EncodedSubjectLen(int val)
            : base(Tags.EncodedSubjectLen, val) { }

    }


    /// <summary>
    /// EncodedSubject Field
    /// </summary>/
    public sealed class EncodedSubject : StringField
    {
        public const int TAG = 357;

        public EncodedSubject()
            : base(Tags.EncodedSubject) { }
        public EncodedSubject(string val)
            : base(Tags.EncodedSubject, val) { }

    }


    /// <summary>
    /// EncodedHeadlineLen Field
    /// </summary>/
    public sealed class EncodedHeadlineLen : IntField
    {
        public const int TAG = 358;

        public EncodedHeadlineLen()
            : base(Tags.EncodedHeadlineLen) { }
        public EncodedHeadlineLen(int val)
            : base(Tags.EncodedHeadlineLen, val) { }

    }


    /// <summary>
    /// EncodedHeadline Field
    /// </summary>/
    public sealed class EncodedHeadline : StringField
    {
        public const int TAG = 359;

        public EncodedHeadline()
            : base(Tags.EncodedHeadline) { }
        public EncodedHeadline(string val)
            : base(Tags.EncodedHeadline, val) { }

    }


    /// <summary>
    /// EncodedAllocTextLen Field
    /// </summary>/
    public sealed class EncodedAllocTextLen : IntField
    {
        public const int TAG = 360;

        public EncodedAllocTextLen()
            : base(Tags.EncodedAllocTextLen) { }
        public EncodedAllocTextLen(int val)
            : base(Tags.EncodedAllocTextLen, val) { }

    }


    /// <summary>
    /// EncodedAllocText Field
    /// </summary>/
    public sealed class EncodedAllocText : StringField
    {
        public const int TAG = 361;

        public EncodedAllocText()
            : base(Tags.EncodedAllocText) { }
        public EncodedAllocText(string val)
            : base(Tags.EncodedAllocText, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingIssuerLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingIssuerLen : IntField
    {
        public const int TAG = 362;

        public EncodedUnderlyingIssuerLen()
            : base(Tags.EncodedUnderlyingIssuerLen) { }
        public EncodedUnderlyingIssuerLen(int val)
            : base(Tags.EncodedUnderlyingIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingIssuer Field
    /// </summary>/
    public sealed class EncodedUnderlyingIssuer : StringField
    {
        public const int TAG = 363;

        public EncodedUnderlyingIssuer()
            : base(Tags.EncodedUnderlyingIssuer) { }
        public EncodedUnderlyingIssuer(string val)
            : base(Tags.EncodedUnderlyingIssuer, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingSecurityDescLen : IntField
    {
        public const int TAG = 364;

        public EncodedUnderlyingSecurityDescLen()
            : base(Tags.EncodedUnderlyingSecurityDescLen) { }
        public EncodedUnderlyingSecurityDescLen(int val)
            : base(Tags.EncodedUnderlyingSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingSecurityDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingSecurityDesc : StringField
    {
        public const int TAG = 365;

        public EncodedUnderlyingSecurityDesc()
            : base(Tags.EncodedUnderlyingSecurityDesc) { }
        public EncodedUnderlyingSecurityDesc(string val)
            : base(Tags.EncodedUnderlyingSecurityDesc, val) { }

    }


    /// <summary>
    /// AllocPrice Field
    /// </summary>/
    public sealed class AllocPrice : DecimalField
    {
        public const int TAG = 366;

        public AllocPrice()
            : base(Tags.AllocPrice) { }
        public AllocPrice(Decimal val)
            : base(Tags.AllocPrice, val) { }

    }


    /// <summary>
    /// QuoteSetValidUntilTime Field
    /// </summary>/
    public sealed class QuoteSetValidUntilTime : DateTimeField
    {
        public const int TAG = 367;

        public QuoteSetValidUntilTime()
            : base(Tags.QuoteSetValidUntilTime) { }
        public QuoteSetValidUntilTime(DateTime val)
            : base(Tags.QuoteSetValidUntilTime, val) { }
        public QuoteSetValidUntilTime(DateTime val, bool showMilliseconds)
            : base(Tags.QuoteSetValidUntilTime, val, showMilliseconds) { }
        public QuoteSetValidUntilTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.QuoteSetValidUntilTime, val, precision) { }

    }


    /// <summary>
    /// QuoteEntryRejectReason Field
    /// </summary>/
    public sealed class QuoteEntryRejectReason : IntField
    {
        public const int TAG = 368;

        public QuoteEntryRejectReason()
            : base(Tags.QuoteEntryRejectReason) { }
        public QuoteEntryRejectReason(int val)
            : base(Tags.QuoteEntryRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_SYMBOL = 1;
        public const int EXCHANGE = 2;
        public const int QUOTE_REQUEST_EXCEEDS_LIMIT = 3;
        public const int TOO_LATE_TO_ENTER = 4;
        public const int UNKNOWN_QUOTE = 5;
        public const int DUPLICATE_QUOTE = 6;
        public const int INVALID_BID_ASK_SPREAD = 7;
        public const int INVALID_PRICE = 8;
        public const int NOT_AUTHORIZED_TO_QUOTE_SECURITY = 9;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND_10 = 10;
        public const int QUOTE_LOCKED = 11;
        public const int OTHER = 99;
        public const int INVALID_OR_UNKNOWN_SECURITY_ISSUER = 12;
        public const int INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = 13;
        public const int NOTIONAL_VALUE_EXCEEDS_THRESHOLD = 14;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND_15 = 15;
        public const int REFERENCE_PRICE_NOT_AVAILABLE = 16;
        public const int INSUFFICIENT_CREDIT_LIMIT = 17;
        public const int EXCEEDED_CLIP_SIZE_LIMIT = 18;
        public const int EXCEEDED_MAXIMUM_NOTIONAL_ORDER_AMOUNT = 19;
        public const int EXCEEDED_DV01_PV01_LIMIT = 20;
        public const int EXCEEDED_CS01_LIMIT = 21;
        public const int EXHCNAGE = 2;
        public const int QUOTE_EXCEEDS_LIMIT = 3;
        public const int EXCHANGE_CLOSED = 2;
        public const int INVALID_BID = 7;
        public const int INVALID_BIDASK_SPREAD = 7;
    }


    /// <summary>
    /// LastMsgSeqNumProcessed Field
    /// </summary>/
    public sealed class LastMsgSeqNumProcessed : IntField
    {
        public const int TAG = 369;

        public LastMsgSeqNumProcessed()
            : base(Tags.LastMsgSeqNumProcessed) { }
        public LastMsgSeqNumProcessed(int val)
            : base(Tags.LastMsgSeqNumProcessed, val) { }

    }


    /// <summary>
    /// OnBehalfOfSendingTime Field
    /// </summary>/
    public sealed class OnBehalfOfSendingTime : DateTimeField
    {
        public const int TAG = 370;

        public OnBehalfOfSendingTime()
            : base(Tags.OnBehalfOfSendingTime) { }
        public OnBehalfOfSendingTime(DateTime val)
            : base(Tags.OnBehalfOfSendingTime, val) { }
        public OnBehalfOfSendingTime(DateTime val, bool showMilliseconds)
            : base(Tags.OnBehalfOfSendingTime, val, showMilliseconds) { }
        public OnBehalfOfSendingTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.OnBehalfOfSendingTime, val, precision) { }

    }


    /// <summary>
    /// RefTagID Field
    /// </summary>/
    public sealed class RefTagID : IntField
    {
        public const int TAG = 371;

        public RefTagID()
            : base(Tags.RefTagID) { }
        public RefTagID(int val)
            : base(Tags.RefTagID, val) { }

    }


    /// <summary>
    /// RefMsgType Field
    /// </summary>/
    public sealed class RefMsgType : StringField
    {
        public const int TAG = 372;

        public RefMsgType()
            : base(Tags.RefMsgType) { }
        public RefMsgType(string val)
            : base(Tags.RefMsgType, val) { }


        // Field Enumerations
        public const string HEARTBEAT = "0";
        public const string ORDERCANCELREJECT = "9";
        public const string TRADINGSESSIONLIST = "BJ";
        public const string TRADINGSESSIONLISTREQUEST = "BI";
        public const string SETTLEMENTOBLIGATIONREPORT = "BQ";
        public const string DERIVATIVESECURITYLISTUPDATEREPORT = "BR";
        public const string TRADINGSESSIONLISTUPDATEREPORT = "BS";
        public const string MARKETDEFINITIONREQUEST = "BT";
        public const string MARKETDEFINITION = "BU";
        public const string MARKETDEFINITIONUPDATEREPORT = "BV";
        public const string APPLICATIONMESSAGEREQUEST = "BW";
        public const string APPLICATIONMESSAGEREQUESTACK = "BX";
        public const string LOGON = "A";
        public const string APPLICATIONMESSAGEREPORT = "BY";
        public const string ORDERMASSACTIONREPORT = "BZ";
        public const string ORDERMASSACTIONREQUEST = "CA";
        public const string USERNOTIFICATION = "CB";
        public const string STREAMASSIGNMENTREQUEST = "CC";
        public const string STREAMASSIGNMENTREPORT = "CD";
        public const string STREAMASSIGNMENTREPORTACK = "CE";
        public const string PARTYDETAILSLISTREQUEST = "CF";
        public const string PARTYDETAILSLISTREPORT = "CG";
        public const string MARGINREQUIREMENTINQUIRY = "CH";
        public const string NEWS = "B";
        public const string MARGINREQUIREMENTINQUIRYACK = "CI";
        public const string MARGINREQUIREMENTREPORT = "CJ";
        public const string PARTYDETAILSLISTUPDATEREPORT = "CK";
        public const string PARTYRISKLIMITSREQUEST = "CL";
        public const string PARTYRISKLIMITSREPORT = "CM";
        public const string SECURITYMASSSTATUSREQUEST = "CN";
        public const string SECURITYMASSSTATUS = "CO";
        public const string ACCOUNTSUMMARYREPORT = "CQ";
        public const string PARTYRISKLIMITSUPDATEREPORT = "CR";
        public const string PARTYRISKLIMITSDEFINITIONREQUEST = "CS";
        public const string EMAIL = "C";
        public const string PARTYRISKLIMITSDEFINITIONREQUESTACK = "CT";
        public const string PARTYENTITLEMENTSREQUEST = "CU";
        public const string PARTYENTITLEMENTSREPORT = "CV";
        public const string QUOTEACK = "CW";
        public const string PARTYDETAILSDEFINITIONREQUEST = "CX";
        public const string PARTYDETAILSDEFINITIONREQUESTACK = "CY";
        public const string PARTYENTITLEMENTSUPDATEREPORT = "CZ";
        public const string PARTYENTITLEMENTSDEFINITIONREQUEST = "DA";
        public const string PARTYENTITLEMENTSDEFINITIONREQUESTACK = "DB";
        public const string TRADEMATCHREPORT = "DC";
        public const string NEWORDERSINGLE = "D";
        public const string TRADEMATCHREPORTACK = "DD";
        public const string PARTYRISKLIMITSREPORTACK = "DE";
        public const string PARTYRISKLIMITCHECKREQUEST = "DF";
        public const string PARTYRISKLIMITCHECKREQUESTACK = "DG";
        public const string PARTYACTIONREQUEST = "DH";
        public const string PARTYACTIONREPORT = "DI";
        public const string MASSORDER = "DJ";
        public const string MASSORDERACK = "DK";
        public const string POSITIONTRANSFERINSTRUCTION = "DL";
        public const string POSITIONTRANSFERINSTRUCTIONACK = "DM";
        public const string NEWORDERLIST = "E";
        public const string POSITIONTRANSFERREPORT = "DN";
        public const string MARKETDATASTATISTICSREQUEST = "DO";
        public const string MARKETDATASTATISTICSREPORT = "DP";
        public const string COLLATERALREPORTACK = "DQ";
        public const string MARKETDATAREPORT = "DR";
        public const string CROSSREQUEST = "DS";
        public const string CROSSREQUESTACK = "DT";
        public const string ALLOCATIONINSTRUCTIONALERTREQUEST = "DU";
        public const string ALLOCATIONINSTRUCTIONALERTREQUESTACK = "DV";
        public const string TRADEAGGREGATIONREQUEST = "DW";
        public const string ORDERCANCELREQUEST = "F";
        public const string TRADEAGGREGATIONREPORT = "DX";
        public const string PAYMANAGEMENTREPORT = "EA";
        public const string PAYMANAGEMENTREPORTACK = "EB";
        public const string PAYMANAGEMENTREQUEST = "DY";
        public const string PAYMANAGEMENTREQUESTACK = "DZ";
        public const string ORDERCANCELREPLACEREQUEST = "G";
        public const string ORDERSTATUSREQUEST = "H";
        public const string ALLOCATIONINSTRUCTION = "J";
        public const string TESTREQUEST = "1";
        public const string LISTCANCELREQUEST = "K";
        public const string LISTEXECUTE = "L";
        public const string LISTSTATUSREQUEST = "M";
        public const string LISTSTATUS = "N";
        public const string ALLOCATIONINSTRUCTIONACK = "P";
        public const string DONTKNOWTRADE = "Q";
        public const string QUOTEREQUEST = "R";
        public const string QUOTE = "S";
        public const string SETTLEMENTINSTRUCTIONS = "T";
        public const string MARKETDATAREQUEST = "V";
        public const string RESENDREQUEST = "2";
        public const string MARKETDATASNAPSHOTFULLREFRESH = "W";
        public const string MARKETDATAINCREMENTALREFRESH = "X";
        public const string MARKETDATAREQUESTREJECT = "Y";
        public const string QUOTECANCEL = "Z";
        public const string QUOTESTATUSREQUEST = "a";
        public const string MASSQUOTEACK = "b";
        public const string SECURITYDEFINITIONREQUEST = "c";
        public const string SECURITYDEFINITION = "d";
        public const string SECURITYSTATUSREQUEST = "e";
        public const string SECURITYSTATUS = "f";
        public const string REJECT = "3";
        public const string TRADINGSESSIONSTATUSREQUEST = "g";
        public const string TRADINGSESSIONSTATUS = "h";
        public const string MASSQUOTE = "i";
        public const string BUSINESSMESSAGEREJECT = "j";
        public const string BIDREQUEST = "k";
        public const string BIDRESPONSE = "l";
        public const string LISTSTRIKEPRICE = "m";
        public const string XMLNONFIX = "n";
        public const string REGISTRATIONINSTRUCTIONS = "o";
        public const string REGISTRATIONINSTRUCTIONSRESPONSE = "p";
        public const string SEQUENCERESET = "4";
        public const string ORDERMASSCANCELREQUEST = "q";
        public const string ORDERMASSCANCELREPORT = "r";
        public const string NEWORDERCROSS = "s";
        public const string CROSSORDERCANCELREPLACEREQUEST = "t";
        public const string CROSSORDERCANCELREQUEST = "u";
        public const string SECURITYTYPEREQUEST = "v";
        public const string SECURITYTYPES = "w";
        public const string SECURITYLISTREQUEST = "x";
        public const string SECURITYLIST = "y";
        public const string DERIVATIVESECURITYLISTREQUEST = "z";
        public const string LOGOUT = "5";
        public const string DERIVATIVESECURITYLIST = "AA";
        public const string NEWORDERMULTILEG = "AB";
        public const string MULTILEGORDERCANCELREPLACE = "AC";
        public const string TRADECAPTUREREPORTREQUEST = "AD";
        public const string TRADECAPTUREREPORT = "AE";
        public const string ORDERMASSSTATUSREQUEST = "AF";
        public const string QUOTEREQUESTREJECT = "AG";
        public const string RFQREQUEST = "AH";
        public const string QUOTESTATUSREPORT = "AI";
        public const string QUOTERESPONSE = "AJ";
        public const string IOI = "6";
        public const string CONFIRMATION = "AK";
        public const string POSITIONMAINTENANCEREQUEST = "AL";
        public const string POSITIONMAINTENANCEREPORT = "AM";
        public const string REQUESTFORPOSITIONS = "AN";
        public const string REQUESTFORPOSITIONSACK = "AO";
        public const string POSITIONREPORT = "AP";
        public const string TRADECAPTUREREPORTREQUESTACK = "AQ";
        public const string TRADECAPTUREREPORTACK = "AR";
        public const string ALLOCATIONREPORT = "AS";
        public const string ALLOCATIONREPORTACK = "AT";
        public const string ADVERTISEMENT = "7";
        public const string CONFIRMATIONACK = "AU";
        public const string SETTLEMENTINSTRUCTIONREQUEST = "AV";
        public const string ASSIGNMENTREPORT = "AW";
        public const string COLLATERALREQUEST = "AX";
        public const string COLLATERALASSIGNMENT = "AY";
        public const string COLLATERALRESPONSE = "AZ";
        public const string COLLATERALREPORT = "BA";
        public const string COLLATERALINQUIRY = "BB";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = "BC";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = "BD";
        public const string EXECUTIONREPORT = "8";
        public const string USERREQUEST = "BE";
        public const string USERRESPONSE = "BF";
        public const string COLLATERALINQUIRYACK = "BG";
        public const string CONFIRMATIONREQUEST = "BH";
        public const string CONTRARYINTENTIONREPORT = "BO";
        public const string SECURITYDEFINITIONUPDATEREPORT = "BP";
        public const string SECURITYLISTUPDATEREPORT = "BK";
        public const string ADJUSTEDPOSITIONREPORT = "BL";
        public const string ALLOCATIONINSTRUCTIONALERT = "BM";
        public const string EXECUTIONACK = "BN";
    }


    /// <summary>
    /// SessionRejectReason Field
    /// </summary>/
    public sealed class SessionRejectReason : IntField
    {
        public const int TAG = 373;

        public SessionRejectReason()
            : base(Tags.SessionRejectReason) { }
        public SessionRejectReason(int val)
            : base(Tags.SessionRejectReason, val) { }


        // Field Enumerations
        public const int INVALID_TAG_NUMBER = 0;
        public const int REQUIRED_TAG_MISSING = 1;
        public const int TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE = 2;
        public const int UNDEFINED_TAG = 3;
        public const int TAG_SPECIFIED_WITHOUT_A_VALUE = 4;
        public const int VALUE_IS_INCORRECT = 5;
        public const int INCORRECT_DATA_FORMAT_FOR_VALUE = 6;
        public const int DECRYPTION_PROBLEM = 7;
        public const int SIGNATURE_PROBLEM = 8;
        public const int COMPID_PROBLEM = 9;
        public const int SENDINGTIME_ACCURACY_PROBLEM = 10;
        public const int INVALID_MSGTYPE = 11;
        public const int XML_VALIDATION_ERROR = 12;
        public const int TAG_APPEARS_MORE_THAN_ONCE = 13;
        public const int TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER = 14;
        public const int REPEATING_GROUP_FIELDS_OUT_OF_ORDER = 15;
        public const int INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP = 16;
        public const int NON_DATA_VALUE_INCLUDES_FIELD_DELIMITER = 17;
        public const int INVALID_UNSUPPORTED_APPLICATION_VERSION = 18;
        public const int OTHER = 99;
        public const int E = 11;
    }


    /// <summary>
    /// BidRequestTransType Field
    /// </summary>/
    public sealed class BidRequestTransType : CharField
    {
        public const int TAG = 374;

        public BidRequestTransType()
            : base(Tags.BidRequestTransType) { }
        public BidRequestTransType(char val)
            : base(Tags.BidRequestTransType, val) { }


        // Field Enumerations
        public const char CANCEL = 'C';
        public const char NO = 'N';
        public const char NEW = 'N';
    }


    /// <summary>
    /// ContraBroker Field
    /// </summary>/
    public sealed class ContraBroker : StringField
    {
        public const int TAG = 375;

        public ContraBroker()
            : base(Tags.ContraBroker) { }
        public ContraBroker(string val)
            : base(Tags.ContraBroker, val) { }

    }


    /// <summary>
    /// ComplianceID Field
    /// </summary>/
    public sealed class ComplianceID : StringField
    {
        public const int TAG = 376;

        public ComplianceID()
            : base(Tags.ComplianceID) { }
        public ComplianceID(string val)
            : base(Tags.ComplianceID, val) { }

    }


    /// <summary>
    /// SolicitedFlag Field
    /// </summary>/
    public sealed class SolicitedFlag : BooleanField
    {
        public const int TAG = 377;

        public SolicitedFlag()
            : base(Tags.SolicitedFlag) { }
        public SolicitedFlag(Boolean val)
            : base(Tags.SolicitedFlag, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean WAS_SOLCITIED = true;
        public const Boolean WAS_NOT_SOLICITED = false;
    }


    /// <summary>
    /// ExecRestatementReason Field
    /// </summary>/
    public sealed class ExecRestatementReason : IntField
    {
        public const int TAG = 378;

        public ExecRestatementReason()
            : base(Tags.ExecRestatementReason) { }
        public ExecRestatementReason(int val)
            : base(Tags.ExecRestatementReason, val) { }


        // Field Enumerations
        public const int GT_CORPORATE_ACTION = 0;
        public const int GT_RENEWAL = 1;
        public const int VERBAL_CHANGE = 2;
        public const int REPRICING_OF_ORDER = 3;
        public const int BROKER_OPTION = 4;
        public const int PARTIAL_DECLINE_OF_ORDERQTY = 5;
        public const int CANCEL_ON_TRADING_HALT = 6;
        public const int CANCEL_ON_SYSTEM_FAILURE = 7;
        public const int MARKET = 8;
        public const int CANCELED_NOT_BEST = 9;
        public const int WAREHOUSE_RECAP = 10;
        public const int PEG_REFRESH = 11;
        public const int OTHER = 99;
        public const int CANCEL_ON_CONNECTION_LOSS = 12;
        public const int CANCEL_ON_LOGOUT = 13;
        public const int ASSIGN_TIME_PRIORITY = 14;
        public const int CANCELLED_TRADE_PRICE_VIOLATION = 15;
        public const int CANCELLED_CROSS_IMBALANCE = 16;
        public const int GT_RENEWAL_RESTATEMENT = 1;
        public const int MARKET_OPTION = 8;
    }


    /// <summary>
    /// BusinessRejectRefID Field
    /// </summary>/
    public sealed class BusinessRejectRefID : StringField
    {
        public const int TAG = 379;

        public BusinessRejectRefID()
            : base(Tags.BusinessRejectRefID) { }
        public BusinessRejectRefID(string val)
            : base(Tags.BusinessRejectRefID, val) { }

    }


    /// <summary>
    /// BusinessRejectReason Field
    /// </summary>/
    public sealed class BusinessRejectReason : IntField
    {
        public const int TAG = 380;

        public BusinessRejectReason()
            : base(Tags.BusinessRejectReason) { }
        public BusinessRejectReason(int val)
            : base(Tags.BusinessRejectReason, val) { }


        // Field Enumerations
        public const int OTHER = 0;
        public const int UNKNOWN_ID = 1;
        public const int UNKNOWN_SECURITY = 2;
        public const int UNSUPPORTED_MESSAGE_TYPE = 3;
        public const int APPLICATION_NOT_AVAILABLE = 4;
        public const int CONDITIONALLY_REQUIRED_FIELD_MISSING = 5;
        public const int NOT_AUTHORIZED = 6;
        public const int DELIVERTO_FIRM_NOT_AVAILABLE_AT_THIS_TIME = 7;
        public const int INVALID_PRICE_INCREMENT = 18;
        public const int THROTTLE_LIMIT_EXCEEDED = 8;
        public const int THROTTLE_LIMIT_EXCEEDED_SESSION_WILL_BE_DISCONNECTED = 9;
        public const int THROTTLED_MESSAGES_REJECTED_ON_REQUEST = 10;
        public const int UNKNOWN_MESSAGE_TYPE = 3;
        public const int UNKOWN_ID = 1;
    }


    /// <summary>
    /// GrossTradeAmt Field
    /// </summary>/
    public sealed class GrossTradeAmt : DecimalField
    {
        public const int TAG = 381;

        public GrossTradeAmt()
            : base(Tags.GrossTradeAmt) { }
        public GrossTradeAmt(Decimal val)
            : base(Tags.GrossTradeAmt, val) { }

    }


    /// <summary>
    /// NoContraBrokers Field
    /// </summary>/
    public sealed class NoContraBrokers : IntField
    {
        public const int TAG = 382;

        public NoContraBrokers()
            : base(Tags.NoContraBrokers) { }
        public NoContraBrokers(int val)
            : base(Tags.NoContraBrokers, val) { }

    }


    /// <summary>
    /// MaxMessageSize Field
    /// </summary>/
    public sealed class MaxMessageSize : IntField
    {
        public const int TAG = 383;

        public MaxMessageSize()
            : base(Tags.MaxMessageSize) { }
        public MaxMessageSize(int val)
            : base(Tags.MaxMessageSize, val) { }

    }


    /// <summary>
    /// NoMsgTypes Field
    /// </summary>/
    public sealed class NoMsgTypes : IntField
    {
        public const int TAG = 384;

        public NoMsgTypes()
            : base(Tags.NoMsgTypes) { }
        public NoMsgTypes(int val)
            : base(Tags.NoMsgTypes, val) { }

    }


    /// <summary>
    /// MsgDirection Field
    /// </summary>/
    public sealed class MsgDirection : CharField
    {
        public const int TAG = 385;

        public MsgDirection()
            : base(Tags.MsgDirection) { }
        public MsgDirection(char val)
            : base(Tags.MsgDirection, val) { }


        // Field Enumerations
        public const char RECEIVE = 'R';
        public const char SEND = 'S';
    }


    /// <summary>
    /// NoTradingSessions Field
    /// </summary>/
    public sealed class NoTradingSessions : IntField
    {
        public const int TAG = 386;

        public NoTradingSessions()
            : base(Tags.NoTradingSessions) { }
        public NoTradingSessions(int val)
            : base(Tags.NoTradingSessions, val) { }

    }


    /// <summary>
    /// TotalVolumeTraded Field
    /// </summary>/
    public sealed class TotalVolumeTraded : DecimalField
    {
        public const int TAG = 387;

        public TotalVolumeTraded()
            : base(Tags.TotalVolumeTraded) { }
        public TotalVolumeTraded(Decimal val)
            : base(Tags.TotalVolumeTraded, val) { }

    }


    /// <summary>
    /// DiscretionInst Field
    /// </summary>/
    public sealed class DiscretionInst : CharField
    {
        public const int TAG = 388;

        public DiscretionInst()
            : base(Tags.DiscretionInst) { }
        public DiscretionInst(char val)
            : base(Tags.DiscretionInst, val) { }


        // Field Enumerations
        public const char RELATED_TO_DISPLAYED_PRICE = '0';
        public const char RELATED_TO_MARKET_PRICE = '1';
        public const char RELATED_TO_PRIMARY_PRICE = '2';
        public const char RELATED_TO_LOCAL_PRIMARY_PRICE = '3';
        public const char RELATED_TO_MIDPOINT_PRICE = '4';
        public const char RELATED_TO_LAST_TRADE_PRICE = '5';
        public const char RELATED_TO_VWAP = '6';
        public const char AVERAGE_PRICE_GUARANTEE = '7';
    }


    /// <summary>
    /// DiscretionOffset Field
    /// </summary>/
    public sealed class DiscretionOffset : DecimalField
    {
        public const int TAG = 389;

        public DiscretionOffset()
            : base(Tags.DiscretionOffset) { }
        public DiscretionOffset(Decimal val)
            : base(Tags.DiscretionOffset, val) { }

    }


    /// <summary>
    /// BidID Field
    /// </summary>/
    public sealed class BidID : StringField
    {
        public const int TAG = 390;

        public BidID()
            : base(Tags.BidID) { }
        public BidID(string val)
            : base(Tags.BidID, val) { }

    }


    /// <summary>
    /// ClientBidID Field
    /// </summary>/
    public sealed class ClientBidID : StringField
    {
        public const int TAG = 391;

        public ClientBidID()
            : base(Tags.ClientBidID) { }
        public ClientBidID(string val)
            : base(Tags.ClientBidID, val) { }

    }


    /// <summary>
    /// ListName Field
    /// </summary>/
    public sealed class ListName : StringField
    {
        public const int TAG = 392;

        public ListName()
            : base(Tags.ListName) { }
        public ListName(string val)
            : base(Tags.ListName, val) { }

    }


    /// <summary>
    /// TotalNumSecurities Field
    /// </summary>/
    public sealed class TotalNumSecurities : IntField
    {
        public const int TAG = 393;

        public TotalNumSecurities()
            : base(Tags.TotalNumSecurities) { }
        public TotalNumSecurities(int val)
            : base(Tags.TotalNumSecurities, val) { }

    }


    /// <summary>
    /// BidType Field
    /// </summary>/
    public sealed class BidType : IntField
    {
        public const int TAG = 394;

        public BidType()
            : base(Tags.BidType) { }
        public BidType(int val)
            : base(Tags.BidType, val) { }


        // Field Enumerations
        public const int NON_DISCLOSED_STYLE = 1;
        public const int DISCLOSED_SYTLE = 2;
        public const int NO_BIDDING_PROCESS = 3;
        public const int NON_DISCLOSED = 1;
        public const int DISCLOSED_STYLE = 2;
    }


    /// <summary>
    /// NumTickets Field
    /// </summary>/
    public sealed class NumTickets : IntField
    {
        public const int TAG = 395;

        public NumTickets()
            : base(Tags.NumTickets) { }
        public NumTickets(int val)
            : base(Tags.NumTickets, val) { }

    }


    /// <summary>
    /// SideValue1 Field
    /// </summary>/
    public sealed class SideValue1 : DecimalField
    {
        public const int TAG = 396;

        public SideValue1()
            : base(Tags.SideValue1) { }
        public SideValue1(Decimal val)
            : base(Tags.SideValue1, val) { }

    }


    /// <summary>
    /// SideValue2 Field
    /// </summary>/
    public sealed class SideValue2 : DecimalField
    {
        public const int TAG = 397;

        public SideValue2()
            : base(Tags.SideValue2) { }
        public SideValue2(Decimal val)
            : base(Tags.SideValue2, val) { }

    }


    /// <summary>
    /// NoBidDescriptors Field
    /// </summary>/
    public sealed class NoBidDescriptors : IntField
    {
        public const int TAG = 398;

        public NoBidDescriptors()
            : base(Tags.NoBidDescriptors) { }
        public NoBidDescriptors(int val)
            : base(Tags.NoBidDescriptors, val) { }

    }


    /// <summary>
    /// BidDescriptorType Field
    /// </summary>/
    public sealed class BidDescriptorType : IntField
    {
        public const int TAG = 399;

        public BidDescriptorType()
            : base(Tags.BidDescriptorType) { }
        public BidDescriptorType(int val)
            : base(Tags.BidDescriptorType, val) { }


        // Field Enumerations
        public const int SECTOR = 1;
        public const int COUNTRY = 2;
        public const int INDEX = 3;
    }


    /// <summary>
    /// BidDescriptor Field
    /// </summary>/
    public sealed class BidDescriptor : StringField
    {
        public const int TAG = 400;

        public BidDescriptor()
            : base(Tags.BidDescriptor) { }
        public BidDescriptor(string val)
            : base(Tags.BidDescriptor, val) { }

    }


    /// <summary>
    /// SideValueInd Field
    /// </summary>/
    public sealed class SideValueInd : IntField
    {
        public const int TAG = 401;

        public SideValueInd()
            : base(Tags.SideValueInd) { }
        public SideValueInd(int val)
            : base(Tags.SideValueInd, val) { }


        // Field Enumerations
        public const int SIDE_VALUE_1 = 1;
        public const int SIDE_VALUE_2 = 2;
        public const int SIDEVALUE1 = 1;
        public const int SIDEVALUE2 = 2;
        public const int SIDEVALUE_2 = 2;
    }


    /// <summary>
    /// LiquidityPctLow Field
    /// </summary>/
    public sealed class LiquidityPctLow : DecimalField
    {
        public const int TAG = 402;

        public LiquidityPctLow()
            : base(Tags.LiquidityPctLow) { }
        public LiquidityPctLow(Decimal val)
            : base(Tags.LiquidityPctLow, val) { }

    }


    /// <summary>
    /// LiquidityPctHigh Field
    /// </summary>/
    public sealed class LiquidityPctHigh : DecimalField
    {
        public const int TAG = 403;

        public LiquidityPctHigh()
            : base(Tags.LiquidityPctHigh) { }
        public LiquidityPctHigh(Decimal val)
            : base(Tags.LiquidityPctHigh, val) { }

    }


    /// <summary>
    /// LiquidityValue Field
    /// </summary>/
    public sealed class LiquidityValue : DecimalField
    {
        public const int TAG = 404;

        public LiquidityValue()
            : base(Tags.LiquidityValue) { }
        public LiquidityValue(Decimal val)
            : base(Tags.LiquidityValue, val) { }

    }


    /// <summary>
    /// EFPTrackingError Field
    /// </summary>/
    public sealed class EFPTrackingError : DecimalField
    {
        public const int TAG = 405;

        public EFPTrackingError()
            : base(Tags.EFPTrackingError) { }
        public EFPTrackingError(Decimal val)
            : base(Tags.EFPTrackingError, val) { }

    }


    /// <summary>
    /// FairValue Field
    /// </summary>/
    public sealed class FairValue : DecimalField
    {
        public const int TAG = 406;

        public FairValue()
            : base(Tags.FairValue) { }
        public FairValue(Decimal val)
            : base(Tags.FairValue, val) { }

    }


    /// <summary>
    /// OutsideIndexPct Field
    /// </summary>/
    public sealed class OutsideIndexPct : DecimalField
    {
        public const int TAG = 407;

        public OutsideIndexPct()
            : base(Tags.OutsideIndexPct) { }
        public OutsideIndexPct(Decimal val)
            : base(Tags.OutsideIndexPct, val) { }

    }


    /// <summary>
    /// ValueOfFutures Field
    /// </summary>/
    public sealed class ValueOfFutures : DecimalField
    {
        public const int TAG = 408;

        public ValueOfFutures()
            : base(Tags.ValueOfFutures) { }
        public ValueOfFutures(Decimal val)
            : base(Tags.ValueOfFutures, val) { }

    }


    /// <summary>
    /// LiquidityIndType Field
    /// </summary>/
    public sealed class LiquidityIndType : IntField
    {
        public const int TAG = 409;

        public LiquidityIndType()
            : base(Tags.LiquidityIndType) { }
        public LiquidityIndType(int val)
            : base(Tags.LiquidityIndType, val) { }


        // Field Enumerations
        public const int VAL_5_DAY_MOVING_AVERAGE = 1;
        public const int VAL_20_DAY_MOVING_AVERAGE = 2;
        public const int NORMAL_MARKET_SIZE = 3;
        public const int OTHER = 4;
        public const int FIVEDAY_MOVING_AVERAGE = 1;
        public const int TWENTYDAY_MOVING_AVERAGE = 2;
    }


    /// <summary>
    /// WtAverageLiquidity Field
    /// </summary>/
    public sealed class WtAverageLiquidity : DecimalField
    {
        public const int TAG = 410;

        public WtAverageLiquidity()
            : base(Tags.WtAverageLiquidity) { }
        public WtAverageLiquidity(Decimal val)
            : base(Tags.WtAverageLiquidity, val) { }

    }


    /// <summary>
    /// ExchangeForPhysical Field
    /// </summary>/
    public sealed class ExchangeForPhysical : BooleanField
    {
        public const int TAG = 411;

        public ExchangeForPhysical()
            : base(Tags.ExchangeForPhysical) { }
        public ExchangeForPhysical(Boolean val)
            : base(Tags.ExchangeForPhysical, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
        public const Boolean TRUE = true;
        public const Boolean FALSE = false;
    }


    /// <summary>
    /// OutMainCntryUIndex Field
    /// </summary>/
    public sealed class OutMainCntryUIndex : DecimalField
    {
        public const int TAG = 412;

        public OutMainCntryUIndex()
            : base(Tags.OutMainCntryUIndex) { }
        public OutMainCntryUIndex(Decimal val)
            : base(Tags.OutMainCntryUIndex, val) { }

    }


    /// <summary>
    /// CrossPercent Field
    /// </summary>/
    public sealed class CrossPercent : DecimalField
    {
        public const int TAG = 413;

        public CrossPercent()
            : base(Tags.CrossPercent) { }
        public CrossPercent(Decimal val)
            : base(Tags.CrossPercent, val) { }

    }


    /// <summary>
    /// ProgRptReqs Field
    /// </summary>/
    public sealed class ProgRptReqs : IntField
    {
        public const int TAG = 414;

        public ProgRptReqs()
            : base(Tags.ProgRptReqs) { }
        public ProgRptReqs(int val)
            : base(Tags.ProgRptReqs, val) { }


        // Field Enumerations
        public const int BUY_SIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUE_REQUEST = 1;
        public const int SELL_SIDE_PERIODICALLY_SENDS_STATUS_USING_LIST_STATUS_PERIOD_OPTIONALLY_SPECIFIED_IN_PROGRESSPERIOD = 2;
        public const int REAL_TIME_EXECUTION_REPORTS = 3;
        public const int BUYSIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUSREQUEST = 1;
        public const int SELLSIDE_PERIODICALLY_SENDS_STATUS_USING_LISTSTATUS = 2;
    }


    /// <summary>
    /// ProgPeriodInterval Field
    /// </summary>/
    public sealed class ProgPeriodInterval : IntField
    {
        public const int TAG = 415;

        public ProgPeriodInterval()
            : base(Tags.ProgPeriodInterval) { }
        public ProgPeriodInterval(int val)
            : base(Tags.ProgPeriodInterval, val) { }

    }


    /// <summary>
    /// IncTaxInd Field
    /// </summary>/
    public sealed class IncTaxInd : IntField
    {
        public const int TAG = 416;

        public IncTaxInd()
            : base(Tags.IncTaxInd) { }
        public IncTaxInd(int val)
            : base(Tags.IncTaxInd, val) { }


        // Field Enumerations
        public const int NET = 1;
        public const int GROSS = 2;
    }


    /// <summary>
    /// NumBidders Field
    /// </summary>/
    public sealed class NumBidders : IntField
    {
        public const int TAG = 417;

        public NumBidders()
            : base(Tags.NumBidders) { }
        public NumBidders(int val)
            : base(Tags.NumBidders, val) { }

    }


    /// <summary>
    /// TradeType Field
    /// </summary>/
    public sealed class TradeType : CharField
    {
        public const int TAG = 418;

        public TradeType()
            : base(Tags.TradeType) { }
        public TradeType(char val)
            : base(Tags.TradeType, val) { }

    }


    /// <summary>
    /// BasisPxType Field
    /// </summary>/
    public sealed class BasisPxType : CharField
    {
        public const int TAG = 419;

        public BasisPxType()
            : base(Tags.BasisPxType) { }
        public BasisPxType(char val)
            : base(Tags.BasisPxType, val) { }


        // Field Enumerations
        public const char CLOSING_PRICE_AT_MORNING_SESSION = '2';
        public const char CLOSING_PRICE = '3';
        public const char CURRENT_PRICE = '4';
        public const char SQ = '5';
        public const char VWAP_THROUGH_A_DAY = '6';
        public const char VWAP_THROUGH_A_MORNING_SESSION = '7';
        public const char VWAP_THROUGH_AN_AFTERNOON_SESSION = '8';
        public const char VWAP_THROUGH_A_DAY_EXCEPT_YORI = '9';
        public const char VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORI = 'A';
        public const char VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORI = 'B';
        public const char STRIKE = 'C';
        public const char OPEN = 'D';
        public const char OTHERS = 'Z';
        public const char CLOSING_PRICE_AT_MORNINGN_SESSION = '2';
    }


    /// <summary>
    /// NoBidComponents Field
    /// </summary>/
    public sealed class NoBidComponents : IntField
    {
        public const int TAG = 420;

        public NoBidComponents()
            : base(Tags.NoBidComponents) { }
        public NoBidComponents(int val)
            : base(Tags.NoBidComponents, val) { }

    }


    /// <summary>
    /// Country Field
    /// </summary>/
    public sealed class Country : StringField
    {
        public const int TAG = 421;

        public Country()
            : base(Tags.Country) { }
        public Country(string val)
            : base(Tags.Country, val) { }

    }


    /// <summary>
    /// TotNoStrikes Field
    /// </summary>/
    public sealed class TotNoStrikes : IntField
    {
        public const int TAG = 422;

        public TotNoStrikes()
            : base(Tags.TotNoStrikes) { }
        public TotNoStrikes(int val)
            : base(Tags.TotNoStrikes, val) { }

    }


    /// <summary>
    /// PriceType Field
    /// </summary>/
    public sealed class PriceType : IntField
    {
        public const int TAG = 423;

        public PriceType()
            : base(Tags.PriceType) { }
        public PriceType(int val)
            : base(Tags.PriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
        public const int PRODUCT_TICKS_IN_HALFS = 13;
        public const int PRODUCT_TICKS_IN_EIGHTS = 15;
        public const int PRODUCT_TICKS_IN_SIXTY_FORTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTS = 19;
        public const int PER_SHARE = 2;
        public const int BASIS_POINTS_RELATIVE_TO_BENCHMARK = 6;
    }


    /// <summary>
    /// DayOrderQty Field
    /// </summary>/
    public sealed class DayOrderQty : DecimalField
    {
        public const int TAG = 424;

        public DayOrderQty()
            : base(Tags.DayOrderQty) { }
        public DayOrderQty(Decimal val)
            : base(Tags.DayOrderQty, val) { }

    }


    /// <summary>
    /// DayCumQty Field
    /// </summary>/
    public sealed class DayCumQty : DecimalField
    {
        public const int TAG = 425;

        public DayCumQty()
            : base(Tags.DayCumQty) { }
        public DayCumQty(Decimal val)
            : base(Tags.DayCumQty, val) { }

    }


    /// <summary>
    /// DayAvgPx Field
    /// </summary>/
    public sealed class DayAvgPx : DecimalField
    {
        public const int TAG = 426;

        public DayAvgPx()
            : base(Tags.DayAvgPx) { }
        public DayAvgPx(Decimal val)
            : base(Tags.DayAvgPx, val) { }

    }


    /// <summary>
    /// GTBookingInst Field
    /// </summary>/
    public sealed class GTBookingInst : IntField
    {
        public const int TAG = 427;

        public GTBookingInst()
            : base(Tags.GTBookingInst) { }
        public GTBookingInst(int val)
            : base(Tags.GTBookingInst, val) { }


        // Field Enumerations
        public const int BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION = 0;
        public const int ACCUMULATE_EXECUTIONS_UNTIL_ORDER_IS_FILLED_OR_EXPIRES = 1;
        public const int ACCUMULATE_UNTIL_VERBALLY_NOTIFIED_OTHERWISE = 2;
        public const int ACCUMULATE_EXECTUIONS_UNTIL_FORDER_IS_FILLED_OR_EXPIRES = 1;
        public const int ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE = 2;
    }


    /// <summary>
    /// NoStrikes Field
    /// </summary>/
    public sealed class NoStrikes : IntField
    {
        public const int TAG = 428;

        public NoStrikes()
            : base(Tags.NoStrikes) { }
        public NoStrikes(int val)
            : base(Tags.NoStrikes, val) { }

    }


    /// <summary>
    /// ListStatusType Field
    /// </summary>/
    public sealed class ListStatusType : IntField
    {
        public const int TAG = 429;

        public ListStatusType()
            : base(Tags.ListStatusType) { }
        public ListStatusType(int val)
            : base(Tags.ListStatusType, val) { }


        // Field Enumerations
        public const int ACK = 1;
        public const int RESPONSE = 2;
        public const int TIMED = 3;
        public const int EXEC_STARTED = 4;
        public const int ALL_DONE = 5;
        public const int ALERT = 6;
        public const int EXECSTARTED = 4;
        public const int ALLDONE = 5;
    }


    /// <summary>
    /// NetGrossInd Field
    /// </summary>/
    public sealed class NetGrossInd : IntField
    {
        public const int TAG = 430;

        public NetGrossInd()
            : base(Tags.NetGrossInd) { }
        public NetGrossInd(int val)
            : base(Tags.NetGrossInd, val) { }


        // Field Enumerations
        public const int NET = 1;
        public const int GROSS = 2;
    }


    /// <summary>
    /// ListOrderStatus Field
    /// </summary>/
    public sealed class ListOrderStatus : IntField
    {
        public const int TAG = 431;

        public ListOrderStatus()
            : base(Tags.ListOrderStatus) { }
        public ListOrderStatus(int val)
            : base(Tags.ListOrderStatus, val) { }


        // Field Enumerations
        public const int IN_BIDDING_PROCESS = 1;
        public const int RECEIVED_FOR_EXECUTION = 2;
        public const int EXECUTING = 3;
        public const int CANCELLING = 4;
        public const int ALERT = 5;
        public const int ALL_DONE = 6;
        public const int REJECT = 7;
        public const int INBIDDINGPROCESS = 1;
        public const int RECEIVEDFOREXECUTION = 2;
        public const int CANCELING = 4;
    }


    /// <summary>
    /// ExpireDate Field
    /// </summary>/
    public sealed class ExpireDate : StringField
    {
        public const int TAG = 432;

        public ExpireDate()
            : base(Tags.ExpireDate) { }
        public ExpireDate(string val)
            : base(Tags.ExpireDate, val) { }

    }


    /// <summary>
    /// ListExecInstType Field
    /// </summary>/
    public sealed class ListExecInstType : CharField
    {
        public const int TAG = 433;

        public ListExecInstType()
            : base(Tags.ListExecInstType) { }
        public ListExecInstType(char val)
            : base(Tags.ListExecInstType, val) { }


        // Field Enumerations
        public const char IMMEDIATE = '1';
        public const char WAIT_FOR_EXECUT_INSTRUCTION = '2';
        public const char EXCHANGE_SWITCH_CIV_ORDER_3 = '3';
        public const char EXCHANGE_SWITCH_CIV_ORDER_4 = '4';
        public const char EXCHANGE_SWITCH_CIV_ORDER_5 = '5';
        public const char WAIT_FOR_EXECUTE_INSTRUCTION = '2';
        public const char EXCHANGE_SWITCH_CIV_ORDER_SELL_DRIVEN = '3';
        public const char EXCHANGE_SWITCH_CIV_ORDER_BUY_DRIVEN_CASH_TOP_UP = '4';
        public const char EXCHANGE_SWITCH_CIV_ORDER_BUY_DRIVEN_CASH_WITHDRAW = '5';
    }


    /// <summary>
    /// CxlRejResponseTo Field
    /// </summary>/
    public sealed class CxlRejResponseTo : CharField
    {
        public const int TAG = 434;

        public CxlRejResponseTo()
            : base(Tags.CxlRejResponseTo) { }
        public CxlRejResponseTo(char val)
            : base(Tags.CxlRejResponseTo, val) { }


        // Field Enumerations
        public const char ORDER_CANCEL_REQUEST = '1';
        public const char ORDER_CANCEL_REPLACE_REQUEST = '2';
    }


    /// <summary>
    /// UnderlyingCouponRate Field
    /// </summary>/
    public sealed class UnderlyingCouponRate : DecimalField
    {
        public const int TAG = 435;

        public UnderlyingCouponRate()
            : base(Tags.UnderlyingCouponRate) { }
        public UnderlyingCouponRate(Decimal val)
            : base(Tags.UnderlyingCouponRate, val) { }

    }


    /// <summary>
    /// UnderlyingContractMultiplier Field
    /// </summary>/
    public sealed class UnderlyingContractMultiplier : DecimalField
    {
        public const int TAG = 436;

        public UnderlyingContractMultiplier()
            : base(Tags.UnderlyingContractMultiplier) { }
        public UnderlyingContractMultiplier(Decimal val)
            : base(Tags.UnderlyingContractMultiplier, val) { }

    }


    /// <summary>
    /// ContraTradeQty Field
    /// </summary>/
    public sealed class ContraTradeQty : DecimalField
    {
        public const int TAG = 437;

        public ContraTradeQty()
            : base(Tags.ContraTradeQty) { }
        public ContraTradeQty(Decimal val)
            : base(Tags.ContraTradeQty, val) { }

    }


    /// <summary>
    /// ContraTradeTime Field
    /// </summary>/
    public sealed class ContraTradeTime : DateTimeField
    {
        public const int TAG = 438;

        public ContraTradeTime()
            : base(Tags.ContraTradeTime) { }
        public ContraTradeTime(DateTime val)
            : base(Tags.ContraTradeTime, val) { }
        public ContraTradeTime(DateTime val, bool showMilliseconds)
            : base(Tags.ContraTradeTime, val, showMilliseconds) { }
        public ContraTradeTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ContraTradeTime, val, precision) { }

    }


    /// <summary>
    /// ClearingFirm Field
    /// </summary>/
    public sealed class ClearingFirm : StringField
    {
        public const int TAG = 439;

        public ClearingFirm()
            : base(Tags.ClearingFirm) { }
        public ClearingFirm(string val)
            : base(Tags.ClearingFirm, val) { }

    }


    /// <summary>
    /// ClearingAccount Field
    /// </summary>/
    public sealed class ClearingAccount : StringField
    {
        public const int TAG = 440;

        public ClearingAccount()
            : base(Tags.ClearingAccount) { }
        public ClearingAccount(string val)
            : base(Tags.ClearingAccount, val) { }

    }


    /// <summary>
    /// LiquidityNumSecurities Field
    /// </summary>/
    public sealed class LiquidityNumSecurities : IntField
    {
        public const int TAG = 441;

        public LiquidityNumSecurities()
            : base(Tags.LiquidityNumSecurities) { }
        public LiquidityNumSecurities(int val)
            : base(Tags.LiquidityNumSecurities, val) { }

    }


    /// <summary>
    /// MultiLegReportingType Field
    /// </summary>/
    public sealed class MultiLegReportingType : CharField
    {
        public const int TAG = 442;

        public MultiLegReportingType()
            : base(Tags.MultiLegReportingType) { }
        public MultiLegReportingType(char val)
            : base(Tags.MultiLegReportingType, val) { }


        // Field Enumerations
        public const char SINGLE_SECURITY = '1';
        public const char INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITY = '2';
        public const char MULTI_LEG_SECURITY = '3';
        public const char INDIVIDUAL_LEG_OF_A_MULTILEG_SECURITY = '2';
    }


    /// <summary>
    /// StrikeTime Field
    /// </summary>/
    public sealed class StrikeTime : DateTimeField
    {
        public const int TAG = 443;

        public StrikeTime()
            : base(Tags.StrikeTime) { }
        public StrikeTime(DateTime val)
            : base(Tags.StrikeTime, val) { }
        public StrikeTime(DateTime val, bool showMilliseconds)
            : base(Tags.StrikeTime, val, showMilliseconds) { }
        public StrikeTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.StrikeTime, val, precision) { }

    }


    /// <summary>
    /// ListStatusText Field
    /// </summary>/
    public sealed class ListStatusText : StringField
    {
        public const int TAG = 444;

        public ListStatusText()
            : base(Tags.ListStatusText) { }
        public ListStatusText(string val)
            : base(Tags.ListStatusText, val) { }

    }


    /// <summary>
    /// EncodedListStatusTextLen Field
    /// </summary>/
    public sealed class EncodedListStatusTextLen : IntField
    {
        public const int TAG = 445;

        public EncodedListStatusTextLen()
            : base(Tags.EncodedListStatusTextLen) { }
        public EncodedListStatusTextLen(int val)
            : base(Tags.EncodedListStatusTextLen, val) { }

    }


    /// <summary>
    /// EncodedListStatusText Field
    /// </summary>/
    public sealed class EncodedListStatusText : StringField
    {
        public const int TAG = 446;

        public EncodedListStatusText()
            : base(Tags.EncodedListStatusText) { }
        public EncodedListStatusText(string val)
            : base(Tags.EncodedListStatusText, val) { }

    }


    /// <summary>
    /// SecurityIDSource Field
    /// </summary>/
    public sealed class SecurityIDSource : StringField
    {
        public const int TAG = 22;

        public SecurityIDSource()
            : base(Tags.SecurityIDSource) { }
        public SecurityIDSource(string val)
            : base(Tags.SecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
        public const string ISIN_NUMBER = "4";
        public const string RIC_CODE = "5";
        public const string CLEARING_HOUSE_CLEARING_ORGANIZATION = "H";
        public const string OPTIONS_PRICE_REPORTING_AUTHORITY = "J";
    }


    /// <summary>
    /// IOIQty Field
    /// </summary>/
    public sealed class IOIQty : StringField
    {
        public const int TAG = 27;

        public IOIQty()
            : base(Tags.IOIQty) { }
        public IOIQty(string val)
            : base(Tags.IOIQty, val) { }


        // Field Enumerations
        public const string SMALL = "S";
        public const string MEDIUM = "M";
        public const string LARGE = "L";
        public const string UNDISCLOSED_QUANTITY = "U";
        public const string VAL_1000000000 = "0";
    }


    /// <summary>
    /// LastQty Field
    /// </summary>/
    public sealed class LastQty : DecimalField
    {
        public const int TAG = 32;

        public LastQty()
            : base(Tags.LastQty) { }
        public LastQty(Decimal val)
            : base(Tags.LastQty, val) { }

    }


    /// <summary>
    /// SendingDate Field
    /// </summary>/
    public sealed class SendingDate : StringField
    {
        public const int TAG = 51;

        public SendingDate()
            : base(Tags.SendingDate) { }
        public SendingDate(string val)
            : base(Tags.SendingDate, val) { }

    }


    /// <summary>
    /// Quantity Field
    /// </summary>/
    public sealed class Quantity : DecimalField
    {
        public const int TAG = 53;

        public Quantity()
            : base(Tags.Quantity) { }
        public Quantity(Decimal val)
            : base(Tags.Quantity, val) { }

    }


    /// <summary>
    /// PositionEffect Field
    /// </summary>/
    public sealed class PositionEffect : CharField
    {
        public const int TAG = 77;

        public PositionEffect()
            : base(Tags.PositionEffect) { }
        public PositionEffect(char val)
            : base(Tags.PositionEffect, val) { }


        // Field Enumerations
        public const char CLOSE = 'C';
        public const char FIFO = 'F';
        public const char OPEN = 'O';
        public const char ROLLED = 'R';
        public const char CLOSE_BUT_NOTIFY_ON_OPEN = 'N';
        public const char DEFAULT = 'D';
    }


    /// <summary>
    /// AllocQty Field
    /// </summary>/
    public sealed class AllocQty : DecimalField
    {
        public const int TAG = 80;

        public AllocQty()
            : base(Tags.AllocQty) { }
        public AllocQty(Decimal val)
            : base(Tags.AllocQty, val) { }

    }


    /// <summary>
    /// Spread Field
    /// </summary>/
    public sealed class Spread : DecimalField
    {
        public const int TAG = 218;

        public Spread()
            : base(Tags.Spread) { }
        public Spread(Decimal val)
            : base(Tags.Spread, val) { }

    }


    /// <summary>
    /// BenchmarkCurveCurrency Field
    /// </summary>/
    public sealed class BenchmarkCurveCurrency : StringField
    {
        public const int TAG = 220;

        public BenchmarkCurveCurrency()
            : base(Tags.BenchmarkCurveCurrency) { }
        public BenchmarkCurveCurrency(string val)
            : base(Tags.BenchmarkCurveCurrency, val) { }

    }


    /// <summary>
    /// BenchmarkCurveName Field
    /// </summary>/
    public sealed class BenchmarkCurveName : StringField
    {
        public const int TAG = 221;

        public BenchmarkCurveName()
            : base(Tags.BenchmarkCurveName) { }
        public BenchmarkCurveName(string val)
            : base(Tags.BenchmarkCurveName, val) { }


        // Field Enumerations
        public const string EONIA = "EONIA";
        public const string EUREPO = "EUREPO";
        public const string EURIBOR = "Euribor";
        public const string FUTURESWAP = "FutureSWAP";
        public const string LIBID = "LIBID";
        public const string LIBOR = "LIBOR";
        public const string MUNIAAA = "MuniAAA";
        public const string OTHER = "OTHER";
        public const string PFANDBRIEFE = "Pfandbriefe";
        public const string SONIA = "SONIA";
        public const string SWAP = "SWAP";
        public const string TREASURY = "Treasury";
        public const string US_FEDERAL_RESERVE_FED_FUNDS_EFFECTIVE_RATE = "FEDEFF";
        public const string US_FED_FUNDS_TARGET_RATE = "FEDOPEN";
        public const string EURO_INTERBANK_OFFER_RATE = "EURIBOR";
        public const string AUSTRALIAN_BANK_BILL_SWAP_RATE = "AUBSW";
        public const string BUDAPEST_BANK_OFFERED_RATE = "BUBOR";
        public const string CANADIAN_DOLLAR_OFFERED_RATE = "CDOR";
        public const string COPENHAGEN_INTERBANK_OFFERED_RATE = "CIBOR";
        public const string EURO_OVERNIGHT_INDEX_AVERAGE_SWAP_RATE = "EONIASWAP";
        public const string EURO_SHORT_TERM_RATE = "ESTR";
        public const string EURO_DOLLAR_RATE = "EURODOLLAR";
        public const string EURO_SWISS_FRANC_RATE = "EUROSWISS";
        public const string DTCC_GENERAL_COLLATERAL_FINANCE_REPO_INDEX = "GCFREPO";
        public const string ICE_SWAP_RATE = "ISDAFIX";
        public const string JOHANNESBURG_INTERBANK_AGREED_RATE = "JIBAR";
        public const string MOSCOW_PRIME_OFFERED_RATE = "MOSPRIM";
        public const string NIGERIA_THREE_MONTH_INTERBANK_RATE = "NIBOR";
        public const string CZECH_REPUBLIC_INTERBANK_OFFERED_RATE = "PRIBOR";
        public const string SECURED_OVERNIGHT_FINANCING_RATE = "SOFR";
        public const string STOCKHOLM_INTERBANK_OFFERED_RATE = "STIBOR";
        public const string BANK_OF_ISRAEL_INTERBANK_OFFERED_RATE = "TELBOR";
        public const string TOKYO_INTERBANK_OFFERED_RATE = "TIBOR";
        public const string WARSAW_INTERBANK_OFFERED_RATE = "WIBOR";
    }


    /// <summary>
    /// BenchmarkCurvePoint Field
    /// </summary>/
    public sealed class BenchmarkCurvePoint : StringField
    {
        public const int TAG = 222;

        public BenchmarkCurvePoint()
            : base(Tags.BenchmarkCurvePoint) { }
        public BenchmarkCurvePoint(string val)
            : base(Tags.BenchmarkCurvePoint, val) { }

    }


    /// <summary>
    /// CouponPaymentDate Field
    /// </summary>/
    public sealed class CouponPaymentDate : StringField
    {
        public const int TAG = 224;

        public CouponPaymentDate()
            : base(Tags.CouponPaymentDate) { }
        public CouponPaymentDate(string val)
            : base(Tags.CouponPaymentDate, val) { }

    }


    /// <summary>
    /// IssueDate Field
    /// </summary>/
    public sealed class IssueDate : StringField
    {
        public const int TAG = 225;

        public IssueDate()
            : base(Tags.IssueDate) { }
        public IssueDate(string val)
            : base(Tags.IssueDate, val) { }

    }


    /// <summary>
    /// RepurchaseTerm Field
    /// </summary>/
    public sealed class RepurchaseTerm : IntField
    {
        public const int TAG = 226;

        public RepurchaseTerm()
            : base(Tags.RepurchaseTerm) { }
        public RepurchaseTerm(int val)
            : base(Tags.RepurchaseTerm, val) { }

    }


    /// <summary>
    /// RepurchaseRate Field
    /// </summary>/
    public sealed class RepurchaseRate : DecimalField
    {
        public const int TAG = 227;

        public RepurchaseRate()
            : base(Tags.RepurchaseRate) { }
        public RepurchaseRate(Decimal val)
            : base(Tags.RepurchaseRate, val) { }

    }


    /// <summary>
    /// Factor Field
    /// </summary>/
    public sealed class Factor : DecimalField
    {
        public const int TAG = 228;

        public Factor()
            : base(Tags.Factor) { }
        public Factor(Decimal val)
            : base(Tags.Factor, val) { }

    }


    /// <summary>
    /// TradeOriginationDate Field
    /// </summary>/
    public sealed class TradeOriginationDate : StringField
    {
        public const int TAG = 229;

        public TradeOriginationDate()
            : base(Tags.TradeOriginationDate) { }
        public TradeOriginationDate(string val)
            : base(Tags.TradeOriginationDate, val) { }

    }


    /// <summary>
    /// ExDate Field
    /// </summary>/
    public sealed class ExDate : StringField
    {
        public const int TAG = 230;

        public ExDate()
            : base(Tags.ExDate) { }
        public ExDate(string val)
            : base(Tags.ExDate, val) { }

    }


    /// <summary>
    /// NoStipulations Field
    /// </summary>/
    public sealed class NoStipulations : IntField
    {
        public const int TAG = 232;

        public NoStipulations()
            : base(Tags.NoStipulations) { }
        public NoStipulations(int val)
            : base(Tags.NoStipulations, val) { }

    }


    /// <summary>
    /// StipulationType Field
    /// </summary>/
    public sealed class StipulationType : StringField
    {
        public const int TAG = 233;

        public StipulationType()
            : base(Tags.StipulationType) { }
        public StipulationType(string val)
            : base(Tags.StipulationType, val) { }


        // Field Enumerations
        public const string ALTERNATIVE_MINIMUM_TAX = "AMT";
        public const string AUTO_REINVESTMENT_AT_RATE_OR_BETTER = "AUTOREINV";
        public const string BANK_QUALIFIED = "BANKQUAL";
        public const string BARGAIN_CONDITIONS = "BGNCON";
        public const string COUPON_RANGE = "COUPON";
        public const string ISO_CURRENCY_CODE = "CURRENCY";
        public const string CUSTOM_START_END_DATE = "CUSTOMDATE";
        public const string GEOGRAPHICS_AND_RANGE = "GEOG";
        public const string VALUATION_DISCOUNT = "HAIRCUT";
        public const string INSURED = "INSURED";
        public const string YEAR_OR_YEAR_MONTH_OF_ISSUE = "ISSUE";
        public const string ISSUERS_TICKER = "ISSUER";
        public const string ISSUE_SIZE_RANGE = "ISSUESIZE";
        public const string LOOKBACK_DAYS = "LOOKBACK";
        public const string EXPLICIT_LOT_IDENTIFIER = "LOT";
        public const string LOT_VARIANCE = "LOTVAR";
        public const string MATURITY_YEAR_AND_MONTH = "MAT";
        public const string MATURITY_RANGE = "MATURITY";
        public const string MAXIMUM_SUBSTITUTIONS = "MAXSUBS";
        public const string MINIMUM_DENOMINATION = "MINDNOM";
        public const string MINIMUM_INCREMENT = "MININCR";
        public const string MINIMUM_QUANTITY = "MINQTY";
        public const string PAYMENT_FREQUENCY_CALENDAR = "PAYFREQ";
        public const string NUMBER_OF_PIECES = "PIECES";
        public const string POOLS_MAXIMUM = "PMAX";
        public const string POOLS_PER_LOT = "PPL";
        public const string POOLS_PER_MILLION = "PPM";
        public const string POOLS_PER_TRADE = "PPT";
        public const string PRICE_RANGE = "PRICE";
        public const string PRICING_FREQUENCY = "PRICEFREQ";
        public const string PRODUCTION_YEAR = "PROD";
        public const string CALL_PROTECTION = "PROTECT";
        public const string PURPOSE = "PURPOSE";
        public const string BENCHMARK_PRICE_SOURCE = "PXSOURCE";
        public const string RATING_SOURCE_AND_RANGE = "RATING";
        public const string TYPE_OF_REDEMPTION = "REDEMPTION";
        public const string RESTRICTED = "RESTRICTED";
        public const string MARKET_SECTOR = "SECTOR";
        public const string SECURITY_TYPE_INCLUDED_OR_EXCLUDED = "SECTYPE";
        public const string STRUCTURE = "STRUCT";
        public const string SUBSTITUTIONS_FREQUENCY = "SUBSFREQ";
        public const string SUBSTITUTIONS_LEFT = "SUBSLEFT";
        public const string FREEFORM_TEXT = "TEXT";
        public const string TRADE_VARIANCE = "TRDVAR";
        public const string WEIGHTED_AVERAGE_COUPON = "WAC";
        public const string WEIGHTED_AVERAGE_LIFE_COUPON = "WAL";
        public const string WEIGHTED_AVERAGE_LOAN_AGE = "WALA";
        public const string WEIGHTED_AVERAGE_MATURITY = "WAM";
        public const string WHOLE_POOL = "WHOLE";
        public const string YIELD_RANGE = "YIELD";
        public const string AVERAGE_FICO_SCORE = "AVFICO";
        public const string AVERAGE_LOAN_SIZE = "AVSIZE";
        public const string MAXIMUM_LOAN_BALANCE = "MAXBAL";
        public const string POOL_IDENTIFIER = "POOL";
        public const string TYPE_OF_ROLL_TRADE = "ROLLTYPE";
        public const string REFERENCE_TO_ROLLING_OR_CLOSING_TRADE = "REFTRADE";
        public const string PRINCIPAL_TO_ROLLING_OR_CLOSING_TRADE = "REFPRIN";
        public const string INTEREST_OF_ROLLING_OR_CLOSING_TRADE = "REFINT";
        public const string AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET = "AVAILQTY";
        public const string BROKERS_SALES_CREDIT = "BROKERCREDIT";
        public const string OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALPX";
        public const string OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALQTY";
        public const string THE_MINIMUM_RESIDUAL_OFFER_QUANTITY = "LEAVEQTY";
        public const string MAXIMUM_ORDER_SIZE = "MAXORDQTY";
        public const string ORDER_QUANTITY_INCREMENT = "ORDRINCR";
        public const string PRIMARY_OR_SECONDARY_MARKET_INDICATOR = "PRIMARY";
        public const string BROKER_SALES_CREDIT_OVERRIDE = "SALESCREDITOVR";
        public const string TRADERS_CREDIT = "TRADERCREDIT";
        public const string DISCOUNT_RATE = "DISCOUNT";
        public const string YIELD_TO_MATURITY = "YTM";
        public const string ABSOLUTE_PREPAYMENT_SPEED = "ABS";
        public const string CONSTANT_PREPAYMENT_PENALTY = "CPP";
        public const string CONSTANT_PREPAYMENT_RATE = "CPR";
        public const string CONSTANT_PREPAYMENT_YIELD = "CPY";
        public const string FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE = "HEP";
        public const string PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE = "MHP";
        public const string MONTHLY_PREPAYMENT_RATE = "MPR";
        public const string PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE = "PPC";
        public const string PERCENT_OF_BMA_PREPAYMENT_CURVE = "PSA";
        public const string SINGLE_MONTHLY_MORTALITY = "SMM";
        public const string ORIGINAL_AMOUNT = "ORIGAMT";
        public const string POOL_EFFECTIVE_DATE = "POOLEFFDT";
        public const string POOL_INITIAL_FACTOR = "POOLINITFCTR";
        public const string TRANCHE_IDENTIFIER = "TRANCHE";
        public const string SUBSTITUTION = "SUBSTITUTION";
        public const string INCURRED_RECOVERY = "INCURRCVY";
        public const string ADDITIONAL_TERM = "ADDTRM";
        public const string MODIFIED_EQUITY_DELIVERY = "MODEQTYDLVY";
        public const string NO_REFERENCE_OBLIGATION = "NOREFOBLIG";
        public const string UNKNOWN_REFERENCE_OBLIGATION = "UNKREFOBLIG";
        public const string ALL_GUARANTEES = "ALLGUARANTEES";
        public const string REFERENCE_PRICE = "REFPX";
        public const string REFERENCE_POLICY = "REFPOLICY";
        public const string SECURED_LIST = "SECRDLIST";
        public const string MULTIPLE_EXCHANGE_FALLBACK = "MULTEXCHFLLBCK";
        public const string COMPONENT_SECURITY_FALLBACK = "COMPSECFLLBCK";
        public const string LOCAL_JURISDICTION = "LOCLJRSDCTN";
        public const string RELEVANT_JURISDICTION = "RELVJRSDCTN";
        public const string INTEREST_PAYOFF_OF_ROLLING_OR_AMENDING_TRADE = "PAYOFF";
        public const string PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE = "REFPRIN";
        public const string AMT = "AMT";
        public const string AUTO_REINVESTMENT_AT_OR_BETTER = "AUTOREINV";
        public const string GEOGRAPHICS_AND_PERCENT_RANGE = "GEOG";
        public const string SECURITYTYPE_INCLUDED_OR_EXCLUDED = "SECTYPE";
    }


    /// <summary>
    /// StipulationValue Field
    /// </summary>/
    public sealed class StipulationValue : StringField
    {
        public const int TAG = 234;

        public StipulationValue()
            : base(Tags.StipulationValue) { }
        public StipulationValue(string val)
            : base(Tags.StipulationValue, val) { }


        // Field Enumerations
        public const string SPECIAL_CUM_DIVIDEND = "CD";
        public const string SPECIAL_EX_DIVIDEND = "XD";
        public const string SPECIAL_CUM_COUPON = "CC";
        public const string SPECIAL_EX_COUPON = "XC";
        public const string SPECIAL_CUM_BONUS = "CB";
        public const string SPECIAL_EX_BONUS = "XB";
        public const string SPECIAL_CUM_RIGHTS = "CR";
        public const string SPECIAL_EX_RIGHTS = "XR";
        public const string SPECIAL_CUM_CAPITAL_REPAYMENTS = "CP";
        public const string SPECIAL_EX_CAPITAL_REPAYMENTS = "XP";
        public const string CASH_SETTLEMENT = "CS";
        public const string SPECIAL_PRICE = "SP";
        public const string REPORT_FOR_EUROPEAN_EQUITY_MARKET_SECURITIES = "TR";
        public const string GUARANTEED_DELIVERY = "GD";
    }


    /// <summary>
    /// YieldType Field
    /// </summary>/
    public sealed class YieldType : StringField
    {
        public const int TAG = 235;

        public YieldType()
            : base(Tags.YieldType) { }
        public YieldType(string val)
            : base(Tags.YieldType, val) { }


        // Field Enumerations
        public const string AFTER_TAX_YIELD = "AFTERTAX";
        public const string ANNUAL_YIELD = "ANNUAL";
        public const string YIELD_AT_ISSUE = "ATISSUE";
        public const string YIELD_TO_AVG_MATURITY = "AVGMATURITY";
        public const string BOOK_YIELD = "BOOK";
        public const string YIELD_TO_NEXT_CALL = "CALL";
        public const string YIELD_CHANGE_SINCE_CLOSE = "CHANGE";
        public const string CLOSING_YIELD = "CLOSE";
        public const string COMPOUND_YIELD = "COMPOUND";
        public const string CURRENT_YIELD = "CURRENT";
        public const string GVNT_EQUIVALENT_YIELD = "GOVTEQUIV";
        public const string TRUE_GROSS_YIELD = "GROSS";
        public const string YIELD_WITH_INFLATION_ASSUMPTION = "INFLATION";
        public const string INVERSE_FLOATER_BOND_YIELD = "INVERSEFLOATER";
        public const string MOST_RECENT_CLOSING_YIELD = "LASTCLOSE";
        public const string CLOSING_YIELD_MOST_RECENT_MONTH = "LASTMONTH";
        public const string CLOSING_YIELD_MOST_RECENT_QUARTER = "LASTQUARTER";
        public const string CLOSING_YIELD_MOST_RECENT_YEAR = "LASTYEAR";
        public const string YIELD_TO_LONGEST_AVERAGE_LIFE = "LONGAVGLIFE";
        public const string MARK_TO_MARKET_YIELD = "MARK";
        public const string YIELD_TO_MATURITY = "MATURITY";
        public const string YIELD_TO_NEXT_REFUND = "NEXTREFUND";
        public const string OPEN_AVERAGE_YIELD = "OPENAVG";
        public const string PREVIOUS_CLOSE_YIELD = "PREVCLOSE";
        public const string PROCEEDS_YIELD = "PROCEEDS";
        public const string YIELD_TO_NEXT_PUT = "PUT";
        public const string SEMI_ANNUAL_YIELD = "SEMIANNUAL";
        public const string YIELD_TO_SHORTEST_AVERAGE_LIFE = "SHORTAVGLIFE";
        public const string SIMPLE_YIELD = "SIMPLE";
        public const string TAX_EQUIVALENT_YIELD = "TAXEQUIV";
        public const string YIELD_TO_TENDER_DATE = "TENDER";
        public const string TRUE_YIELD = "TRUE";
        public const string YIELD_VALUE_OF_1_32 = "VALUE1_32";
        public const string YIELD_TO_WORST = "WORST";
        public const string YIELD_TO_AVERAGE_MATURITY = "AVGMATURITY";
        public const string GOVERNMENT_EQUIVALENT_YIELD = "GOVTEQUIV";
        public const string YIELD_TO_AVERAGE_LIFE = "AVGLIFE";
        public const string YIELD_TO_LONGEST_AVERAGE = "LONGEST";
        public const string YIELD_TO_SHORTEST_AVERAGE = "SHORTEST";
        public const string YIELD_TO_WORST_CONVENTION = "WORST";
    }


    /// <summary>
    /// Yield Field
    /// </summary>/
    public sealed class Yield : DecimalField
    {
        public const int TAG = 236;

        public Yield()
            : base(Tags.Yield) { }
        public Yield(Decimal val)
            : base(Tags.Yield, val) { }

    }


    /// <summary>
    /// TotalTakedown Field
    /// </summary>/
    public sealed class TotalTakedown : DecimalField
    {
        public const int TAG = 237;

        public TotalTakedown()
            : base(Tags.TotalTakedown) { }
        public TotalTakedown(Decimal val)
            : base(Tags.TotalTakedown, val) { }

    }


    /// <summary>
    /// Concession Field
    /// </summary>/
    public sealed class Concession : DecimalField
    {
        public const int TAG = 238;

        public Concession()
            : base(Tags.Concession) { }
        public Concession(Decimal val)
            : base(Tags.Concession, val) { }

    }


    /// <summary>
    /// RepoCollateralSecurityType Field
    /// </summary>/
    public sealed class RepoCollateralSecurityType : StringField
    {
        public const int TAG = 239;

        public RepoCollateralSecurityType()
            : base(Tags.RepoCollateralSecurityType) { }
        public RepoCollateralSecurityType(string val)
            : base(Tags.RepoCollateralSecurityType, val) { }

    }


    /// <summary>
    /// RedemptionDate Field
    /// </summary>/
    public sealed class RedemptionDate : StringField
    {
        public const int TAG = 240;

        public RedemptionDate()
            : base(Tags.RedemptionDate) { }
        public RedemptionDate(string val)
            : base(Tags.RedemptionDate, val) { }

    }


    /// <summary>
    /// UnderlyingCouponPaymentDate Field
    /// </summary>/
    public sealed class UnderlyingCouponPaymentDate : StringField
    {
        public const int TAG = 241;

        public UnderlyingCouponPaymentDate()
            : base(Tags.UnderlyingCouponPaymentDate) { }
        public UnderlyingCouponPaymentDate(string val)
            : base(Tags.UnderlyingCouponPaymentDate, val) { }

    }


    /// <summary>
    /// UnderlyingIssueDate Field
    /// </summary>/
    public sealed class UnderlyingIssueDate : StringField
    {
        public const int TAG = 242;

        public UnderlyingIssueDate()
            : base(Tags.UnderlyingIssueDate) { }
        public UnderlyingIssueDate(string val)
            : base(Tags.UnderlyingIssueDate, val) { }

    }


    /// <summary>
    /// UnderlyingRepoCollateralSecurityType Field
    /// </summary>/
    public sealed class UnderlyingRepoCollateralSecurityType : StringField
    {
        public const int TAG = 243;

        public UnderlyingRepoCollateralSecurityType()
            : base(Tags.UnderlyingRepoCollateralSecurityType) { }
        public UnderlyingRepoCollateralSecurityType(string val)
            : base(Tags.UnderlyingRepoCollateralSecurityType, val) { }

    }


    /// <summary>
    /// UnderlyingRepurchaseTerm Field
    /// </summary>/
    public sealed class UnderlyingRepurchaseTerm : IntField
    {
        public const int TAG = 244;

        public UnderlyingRepurchaseTerm()
            : base(Tags.UnderlyingRepurchaseTerm) { }
        public UnderlyingRepurchaseTerm(int val)
            : base(Tags.UnderlyingRepurchaseTerm, val) { }

    }


    /// <summary>
    /// UnderlyingRepurchaseRate Field
    /// </summary>/
    public sealed class UnderlyingRepurchaseRate : DecimalField
    {
        public const int TAG = 245;

        public UnderlyingRepurchaseRate()
            : base(Tags.UnderlyingRepurchaseRate) { }
        public UnderlyingRepurchaseRate(Decimal val)
            : base(Tags.UnderlyingRepurchaseRate, val) { }

    }


    /// <summary>
    /// UnderlyingFactor Field
    /// </summary>/
    public sealed class UnderlyingFactor : DecimalField
    {
        public const int TAG = 246;

        public UnderlyingFactor()
            : base(Tags.UnderlyingFactor) { }
        public UnderlyingFactor(Decimal val)
            : base(Tags.UnderlyingFactor, val) { }

    }


    /// <summary>
    /// UnderlyingRedemptionDate Field
    /// </summary>/
    public sealed class UnderlyingRedemptionDate : StringField
    {
        public const int TAG = 247;

        public UnderlyingRedemptionDate()
            : base(Tags.UnderlyingRedemptionDate) { }
        public UnderlyingRedemptionDate(string val)
            : base(Tags.UnderlyingRedemptionDate, val) { }

    }


    /// <summary>
    /// LegCouponPaymentDate Field
    /// </summary>/
    public sealed class LegCouponPaymentDate : StringField
    {
        public const int TAG = 248;

        public LegCouponPaymentDate()
            : base(Tags.LegCouponPaymentDate) { }
        public LegCouponPaymentDate(string val)
            : base(Tags.LegCouponPaymentDate, val) { }

    }


    /// <summary>
    /// LegIssueDate Field
    /// </summary>/
    public sealed class LegIssueDate : StringField
    {
        public const int TAG = 249;

        public LegIssueDate()
            : base(Tags.LegIssueDate) { }
        public LegIssueDate(string val)
            : base(Tags.LegIssueDate, val) { }

    }


    /// <summary>
    /// LegRepoCollateralSecurityType Field
    /// </summary>/
    public sealed class LegRepoCollateralSecurityType : StringField
    {
        public const int TAG = 250;

        public LegRepoCollateralSecurityType()
            : base(Tags.LegRepoCollateralSecurityType) { }
        public LegRepoCollateralSecurityType(string val)
            : base(Tags.LegRepoCollateralSecurityType, val) { }

    }


    /// <summary>
    /// LegRepurchaseTerm Field
    /// </summary>/
    public sealed class LegRepurchaseTerm : IntField
    {
        public const int TAG = 251;

        public LegRepurchaseTerm()
            : base(Tags.LegRepurchaseTerm) { }
        public LegRepurchaseTerm(int val)
            : base(Tags.LegRepurchaseTerm, val) { }

    }


    /// <summary>
    /// LegRepurchaseRate Field
    /// </summary>/
    public sealed class LegRepurchaseRate : DecimalField
    {
        public const int TAG = 252;

        public LegRepurchaseRate()
            : base(Tags.LegRepurchaseRate) { }
        public LegRepurchaseRate(Decimal val)
            : base(Tags.LegRepurchaseRate, val) { }

    }


    /// <summary>
    /// LegFactor Field
    /// </summary>/
    public sealed class LegFactor : DecimalField
    {
        public const int TAG = 253;

        public LegFactor()
            : base(Tags.LegFactor) { }
        public LegFactor(Decimal val)
            : base(Tags.LegFactor, val) { }

    }


    /// <summary>
    /// LegRedemptionDate Field
    /// </summary>/
    public sealed class LegRedemptionDate : StringField
    {
        public const int TAG = 254;

        public LegRedemptionDate()
            : base(Tags.LegRedemptionDate) { }
        public LegRedemptionDate(string val)
            : base(Tags.LegRedemptionDate, val) { }

    }


    /// <summary>
    /// CreditRating Field
    /// </summary>/
    public sealed class CreditRating : StringField
    {
        public const int TAG = 255;

        public CreditRating()
            : base(Tags.CreditRating) { }
        public CreditRating(string val)
            : base(Tags.CreditRating, val) { }

    }


    /// <summary>
    /// UnderlyingCreditRating Field
    /// </summary>/
    public sealed class UnderlyingCreditRating : StringField
    {
        public const int TAG = 256;

        public UnderlyingCreditRating()
            : base(Tags.UnderlyingCreditRating) { }
        public UnderlyingCreditRating(string val)
            : base(Tags.UnderlyingCreditRating, val) { }

    }


    /// <summary>
    /// LegCreditRating Field
    /// </summary>/
    public sealed class LegCreditRating : StringField
    {
        public const int TAG = 257;

        public LegCreditRating()
            : base(Tags.LegCreditRating) { }
        public LegCreditRating(string val)
            : base(Tags.LegCreditRating, val) { }

    }


    /// <summary>
    /// TradedFlatSwitch Field
    /// </summary>/
    public sealed class TradedFlatSwitch : BooleanField
    {
        public const int TAG = 258;

        public TradedFlatSwitch()
            : base(Tags.TradedFlatSwitch) { }
        public TradedFlatSwitch(Boolean val)
            : base(Tags.TradedFlatSwitch, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// BasisFeatureDate Field
    /// </summary>/
    public sealed class BasisFeatureDate : StringField
    {
        public const int TAG = 259;

        public BasisFeatureDate()
            : base(Tags.BasisFeatureDate) { }
        public BasisFeatureDate(string val)
            : base(Tags.BasisFeatureDate, val) { }

    }


    /// <summary>
    /// BasisFeaturePrice Field
    /// </summary>/
    public sealed class BasisFeaturePrice : DecimalField
    {
        public const int TAG = 260;

        public BasisFeaturePrice()
            : base(Tags.BasisFeaturePrice) { }
        public BasisFeaturePrice(Decimal val)
            : base(Tags.BasisFeaturePrice, val) { }

    }


    /// <summary>
    /// QuoteStatus Field
    /// </summary>/
    public sealed class QuoteStatus : IntField
    {
        public const int TAG = 297;

        public QuoteStatus()
            : base(Tags.QuoteStatus) { }
        public QuoteStatus(int val)
            : base(Tags.QuoteStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int CANCELED_FOR_SPECIFIC_SECURITIES = 1;
        public const int CANCELED_FOR_SPECIFIC_SECURITYTYPES = 2;
        public const int CANCELED_FOR_UNDERLYING = 3;
        public const int CANCELED_ALL = 4;
        public const int REJECTED = 5;
        public const int REMOVED_FROM_MARKET = 6;
        public const int EXPIRED = 7;
        public const int QUERY = 8;
        public const int QUOTE_NOT_FOUND = 9;
        public const int PENDING = 10;
        public const int PASS = 11;
        public const int LOCKED_MARKET_WARNING = 12;
        public const int CROSSED_MARKET_WARNING = 13;
        public const int CANCELED_DUE_TO_LOCKED_MARKET = 14;
        public const int CANCELED_DUE_TO_CROSSED_MARKET = 15;
        public const int ACTIVE = 16;
        public const int CANCELED = 17;
        public const int UNSOLICITED_QUOTE_REPLENISHMENT = 18;
        public const int PENDING_END_TRADE = 19;
        public const int TOO_LATE_TO_END = 20;
        public const int TRADED = 21;
        public const int TRADED_AND_REMOVED = 22;
        public const int CONTRACT_TERMINATED = 23;
        public const int CANCEL_FOR_SYMBOL = 1;
        public const int CROSS_MARKET_WARNING = 13;
        public const int CANCELED_DUE_TO_LOCK_MARKET = 14;
        public const int CANCELED_DUE_TO_CROSS_MARKET = 15;
        public const int CANCELED_FOR_SECURITY_TYPE = 2;
        public const int CANCELED_FOR_SYMBOL = 1;
    }


    /// <summary>
    /// UnderlyingSecurityIDSource Field
    /// </summary>/
    public sealed class UnderlyingSecurityIDSource : StringField
    {
        public const int TAG = 305;

        public UnderlyingSecurityIDSource()
            : base(Tags.UnderlyingSecurityIDSource) { }
        public UnderlyingSecurityIDSource(string val)
            : base(Tags.UnderlyingSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// PartyIDSource Field
    /// </summary>/
    public sealed class PartyIDSource : CharField
    {
        public const int TAG = 447;

        public PartyIDSource()
            : base(Tags.PartyIDSource) { }
        public PartyIDSource(char val)
            : base(Tags.PartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
        public const char MIC = 'G';
        public const char PROPRIETARY_CUSTOM_CODE = 'D';
        public const char TAIWANESE_TRADING_ACCOUNT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY_NUMBER = '4';
        public const char CHINESE_B_SHARE = '5';
        public const char US_EMPLOYER_IDENTIFICATION_NUMBER = '8';
        public const char DIRECTED_BROKER = 'I';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII = '2';
    }


    /// <summary>
    /// PartyID Field
    /// </summary>/
    public sealed class PartyID : StringField
    {
        public const int TAG = 448;

        public PartyID()
            : base(Tags.PartyID) { }
        public PartyID(string val)
            : base(Tags.PartyID, val) { }

    }


    /// <summary>
    /// TotalVolumeTradedDate Field
    /// </summary>/
    public sealed class TotalVolumeTradedDate : DateOnlyField
    {
        public const int TAG = 449;

        public TotalVolumeTradedDate()
            : base(Tags.TotalVolumeTradedDate) { }
        public TotalVolumeTradedDate(DateTime val)
            : base(Tags.TotalVolumeTradedDate, val) { }

    }


    /// <summary>
    /// TotalVolumeTradedTime Field
    /// </summary>/
    public sealed class TotalVolumeTradedTime : TimeOnlyField
    {
        public const int TAG = 450;

        public TotalVolumeTradedTime()
            : base(Tags.TotalVolumeTradedTime) { }
        public TotalVolumeTradedTime(DateTime val)
            : base(Tags.TotalVolumeTradedTime, val) { }
        public TotalVolumeTradedTime(DateTime val, bool showMilliseconds)
            : base(Tags.TotalVolumeTradedTime, val, showMilliseconds) { }
        public TotalVolumeTradedTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TotalVolumeTradedTime, val, precision) { }

    }


    /// <summary>
    /// NetChgPrevDay Field
    /// </summary>/
    public sealed class NetChgPrevDay : DecimalField
    {
        public const int TAG = 451;

        public NetChgPrevDay()
            : base(Tags.NetChgPrevDay) { }
        public NetChgPrevDay(Decimal val)
            : base(Tags.NetChgPrevDay, val) { }

    }


    /// <summary>
    /// PartyRole Field
    /// </summary>/
    public sealed class PartyRole : IntField
    {
        public const int TAG = 452;

        public PartyRole()
            : base(Tags.PartyRole) { }
        public PartyRole(int val)
            : base(Tags.PartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
        public const int FORIEGN_FIRM = 46;
        public const int BROKERCLEARINGID = 81;
        public const int LOCATE_LENDING_FIRM = 8;
    }


    /// <summary>
    /// NoPartyIDs Field
    /// </summary>/
    public sealed class NoPartyIDs : IntField
    {
        public const int TAG = 453;

        public NoPartyIDs()
            : base(Tags.NoPartyIDs) { }
        public NoPartyIDs(int val)
            : base(Tags.NoPartyIDs, val) { }

    }


    /// <summary>
    /// NoSecurityAltID Field
    /// </summary>/
    public sealed class NoSecurityAltID : IntField
    {
        public const int TAG = 454;

        public NoSecurityAltID()
            : base(Tags.NoSecurityAltID) { }
        public NoSecurityAltID(int val)
            : base(Tags.NoSecurityAltID, val) { }

    }


    /// <summary>
    /// SecurityAltID Field
    /// </summary>/
    public sealed class SecurityAltID : StringField
    {
        public const int TAG = 455;

        public SecurityAltID()
            : base(Tags.SecurityAltID) { }
        public SecurityAltID(string val)
            : base(Tags.SecurityAltID, val) { }

    }


    /// <summary>
    /// SecurityAltIDSource Field
    /// </summary>/
    public sealed class SecurityAltIDSource : StringField
    {
        public const int TAG = 456;

        public SecurityAltIDSource()
            : base(Tags.SecurityAltIDSource) { }
        public SecurityAltIDSource(string val)
            : base(Tags.SecurityAltIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// NoUnderlyingSecurityAltID Field
    /// </summary>/
    public sealed class NoUnderlyingSecurityAltID : IntField
    {
        public const int TAG = 457;

        public NoUnderlyingSecurityAltID()
            : base(Tags.NoUnderlyingSecurityAltID) { }
        public NoUnderlyingSecurityAltID(int val)
            : base(Tags.NoUnderlyingSecurityAltID, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityAltID Field
    /// </summary>/
    public sealed class UnderlyingSecurityAltID : StringField
    {
        public const int TAG = 458;

        public UnderlyingSecurityAltID()
            : base(Tags.UnderlyingSecurityAltID) { }
        public UnderlyingSecurityAltID(string val)
            : base(Tags.UnderlyingSecurityAltID, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityAltIDSource Field
    /// </summary>/
    public sealed class UnderlyingSecurityAltIDSource : StringField
    {
        public const int TAG = 459;

        public UnderlyingSecurityAltIDSource()
            : base(Tags.UnderlyingSecurityAltIDSource) { }
        public UnderlyingSecurityAltIDSource(string val)
            : base(Tags.UnderlyingSecurityAltIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// Product Field
    /// </summary>/
    public sealed class Product : IntField
    {
        public const int TAG = 460;

        public Product()
            : base(Tags.Product) { }
        public Product(int val)
            : base(Tags.Product, val) { }


        // Field Enumerations
        public const int AGENCY = 1;
        public const int COMMODITY = 2;
        public const int CORPORATE = 3;
        public const int CURRENCY = 4;
        public const int EQUITY = 5;
        public const int GOVERNMENT = 6;
        public const int INDEX = 7;
        public const int LOAN = 8;
        public const int MONEYMARKET = 9;
        public const int MORTGAGE = 10;
        public const int MUNICIPAL = 11;
        public const int OTHER = 12;
        public const int FINANCING = 13;
    }


    /// <summary>
    /// CFICode Field
    /// </summary>/
    public sealed class CFICode : StringField
    {
        public const int TAG = 461;

        public CFICode()
            : base(Tags.CFICode) { }
        public CFICode(string val)
            : base(Tags.CFICode, val) { }

    }


    /// <summary>
    /// UnderlyingProduct Field
    /// </summary>/
    public sealed class UnderlyingProduct : IntField
    {
        public const int TAG = 462;

        public UnderlyingProduct()
            : base(Tags.UnderlyingProduct) { }
        public UnderlyingProduct(int val)
            : base(Tags.UnderlyingProduct, val) { }


        // Field Enumerations
        public const int AGENCY = 1;
        public const int COMMODITY = 2;
        public const int CORPORATE = 3;
        public const int CURRENCY = 4;
        public const int EQUITY = 5;
        public const int GOVERNMENT = 6;
        public const int INDEX = 7;
        public const int LOAN = 8;
        public const int MONEYMARKET = 9;
        public const int MORTGAGE = 10;
        public const int MUNICIPAL = 11;
        public const int OTHER = 12;
        public const int FINANCING = 13;
    }


    /// <summary>
    /// UnderlyingCFICode Field
    /// </summary>/
    public sealed class UnderlyingCFICode : StringField
    {
        public const int TAG = 463;

        public UnderlyingCFICode()
            : base(Tags.UnderlyingCFICode) { }
        public UnderlyingCFICode(string val)
            : base(Tags.UnderlyingCFICode, val) { }

    }


    /// <summary>
    /// TestMessageIndicator Field
    /// </summary>/
    public sealed class TestMessageIndicator : BooleanField
    {
        public const int TAG = 464;

        public TestMessageIndicator()
            : base(Tags.TestMessageIndicator) { }
        public TestMessageIndicator(Boolean val)
            : base(Tags.TestMessageIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// QuantityType Field
    /// </summary>/
    public sealed class QuantityType : IntField
    {
        public const int TAG = 465;

        public QuantityType()
            : base(Tags.QuantityType) { }
        public QuantityType(int val)
            : base(Tags.QuantityType, val) { }


        // Field Enumerations
        public const int SHARES = 1;
        public const int BONDS = 2;
        public const int CURRENTFACE = 3;
        public const int ORIGINALFACE = 4;
        public const int CURRENCY = 5;
        public const int CONTRACTS = 6;
        public const int OTHER = 7;
        public const int PAR = 8;
    }


    /// <summary>
    /// BookingRefID Field
    /// </summary>/
    public sealed class BookingRefID : StringField
    {
        public const int TAG = 466;

        public BookingRefID()
            : base(Tags.BookingRefID) { }
        public BookingRefID(string val)
            : base(Tags.BookingRefID, val) { }

    }


    /// <summary>
    /// IndividualAllocID Field
    /// </summary>/
    public sealed class IndividualAllocID : StringField
    {
        public const int TAG = 467;

        public IndividualAllocID()
            : base(Tags.IndividualAllocID) { }
        public IndividualAllocID(string val)
            : base(Tags.IndividualAllocID, val) { }

    }


    /// <summary>
    /// RoundingDirection Field
    /// </summary>/
    public sealed class RoundingDirection : CharField
    {
        public const int TAG = 468;

        public RoundingDirection()
            : base(Tags.RoundingDirection) { }
        public RoundingDirection(char val)
            : base(Tags.RoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// RoundingModulus Field
    /// </summary>/
    public sealed class RoundingModulus : DecimalField
    {
        public const int TAG = 469;

        public RoundingModulus()
            : base(Tags.RoundingModulus) { }
        public RoundingModulus(Decimal val)
            : base(Tags.RoundingModulus, val) { }

    }


    /// <summary>
    /// CountryOfIssue Field
    /// </summary>/
    public sealed class CountryOfIssue : StringField
    {
        public const int TAG = 470;

        public CountryOfIssue()
            : base(Tags.CountryOfIssue) { }
        public CountryOfIssue(string val)
            : base(Tags.CountryOfIssue, val) { }

    }


    /// <summary>
    /// StateOrProvinceOfIssue Field
    /// </summary>/
    public sealed class StateOrProvinceOfIssue : StringField
    {
        public const int TAG = 471;

        public StateOrProvinceOfIssue()
            : base(Tags.StateOrProvinceOfIssue) { }
        public StateOrProvinceOfIssue(string val)
            : base(Tags.StateOrProvinceOfIssue, val) { }

    }


    /// <summary>
    /// LocaleOfIssue Field
    /// </summary>/
    public sealed class LocaleOfIssue : StringField
    {
        public const int TAG = 472;

        public LocaleOfIssue()
            : base(Tags.LocaleOfIssue) { }
        public LocaleOfIssue(string val)
            : base(Tags.LocaleOfIssue, val) { }

    }


    /// <summary>
    /// NoRegistDtls Field
    /// </summary>/
    public sealed class NoRegistDtls : IntField
    {
        public const int TAG = 473;

        public NoRegistDtls()
            : base(Tags.NoRegistDtls) { }
        public NoRegistDtls(int val)
            : base(Tags.NoRegistDtls, val) { }

    }


    /// <summary>
    /// MailingDtls Field
    /// </summary>/
    public sealed class MailingDtls : StringField
    {
        public const int TAG = 474;

        public MailingDtls()
            : base(Tags.MailingDtls) { }
        public MailingDtls(string val)
            : base(Tags.MailingDtls, val) { }

    }


    /// <summary>
    /// InvestorCountryOfResidence Field
    /// </summary>/
    public sealed class InvestorCountryOfResidence : StringField
    {
        public const int TAG = 475;

        public InvestorCountryOfResidence()
            : base(Tags.InvestorCountryOfResidence) { }
        public InvestorCountryOfResidence(string val)
            : base(Tags.InvestorCountryOfResidence, val) { }

    }


    /// <summary>
    /// PaymentRef Field
    /// </summary>/
    public sealed class PaymentRef : StringField
    {
        public const int TAG = 476;

        public PaymentRef()
            : base(Tags.PaymentRef) { }
        public PaymentRef(string val)
            : base(Tags.PaymentRef, val) { }

    }


    /// <summary>
    /// DistribPaymentMethod Field
    /// </summary>/
    public sealed class DistribPaymentMethod : IntField
    {
        public const int TAG = 477;

        public DistribPaymentMethod()
            : base(Tags.DistribPaymentMethod) { }
        public DistribPaymentMethod(int val)
            : base(Tags.DistribPaymentMethod, val) { }


        // Field Enumerations
        public const int CREST = 1;
        public const int NSCC = 2;
        public const int EUROCLEAR = 3;
        public const int CLEARSTREAM = 4;
        public const int CHEQUE = 5;
        public const int TELEGRAPHIC_TRANSFER = 6;
        public const int FED_WIRE = 7;
        public const int DIRECT_CREDIT = 8;
        public const int ACH_CREDIT = 9;
        public const int BPAY = 10;
        public const int HIGH_VALUE_CLEARING_SYSTEM_HVACS = 11;
        public const int REINVEST_IN_FUND = 12;
        public const int FEDWIRE = 7;
        public const int HIGH_VALUE_CLEARING_SYSTEM = 11;
    }


    /// <summary>
    /// CashDistribCurr Field
    /// </summary>/
    public sealed class CashDistribCurr : StringField
    {
        public const int TAG = 478;

        public CashDistribCurr()
            : base(Tags.CashDistribCurr) { }
        public CashDistribCurr(string val)
            : base(Tags.CashDistribCurr, val) { }

    }


    /// <summary>
    /// CommCurrency Field
    /// </summary>/
    public sealed class CommCurrency : StringField
    {
        public const int TAG = 479;

        public CommCurrency()
            : base(Tags.CommCurrency) { }
        public CommCurrency(string val)
            : base(Tags.CommCurrency, val) { }

    }


    /// <summary>
    /// CancellationRights Field
    /// </summary>/
    public sealed class CancellationRights : CharField
    {
        public const int TAG = 480;

        public CancellationRights()
            : base(Tags.CancellationRights) { }
        public CancellationRights(char val)
            : base(Tags.CancellationRights, val) { }


        // Field Enumerations
        public const char YES = 'Y';
        public const char NO_N = 'N';
        public const char NO_M = 'M';
        public const char NO_O = 'O';
        public const char NO_EXECUTION_ONLY = 'N';
        public const char NO_WAIVER_AGREEMENT = 'M';
        public const char NO_INSTITUTIONAL = 'O';
    }


    /// <summary>
    /// MoneyLaunderingStatus Field
    /// </summary>/
    public sealed class MoneyLaunderingStatus : CharField
    {
        public const int TAG = 481;

        public MoneyLaunderingStatus()
            : base(Tags.MoneyLaunderingStatus) { }
        public MoneyLaunderingStatus(char val)
            : base(Tags.MoneyLaunderingStatus, val) { }


        // Field Enumerations
        public const char PASSED = 'Y';
        public const char NOT_CHECKED = 'N';
        public const char EXEMPT_1 = '1';
        public const char EXEMPT_2 = '2';
        public const char EXEMPT_3 = '3';
        public const char EXEMPT_BELOW_THE_LIMIT = '1';
        public const char EXEMPT_CLIENT_MONEY_TYPE_EXEMPTION = '2';
        public const char EXEMPT_AUTHORISED_CREDIT_OR_FINANCIAL_INSTITUTION = '3';
    }


    /// <summary>
    /// MailingInst Field
    /// </summary>/
    public sealed class MailingInst : StringField
    {
        public const int TAG = 482;

        public MailingInst()
            : base(Tags.MailingInst) { }
        public MailingInst(string val)
            : base(Tags.MailingInst, val) { }

    }


    /// <summary>
    /// TransBkdTime Field
    /// </summary>/
    public sealed class TransBkdTime : DateTimeField
    {
        public const int TAG = 483;

        public TransBkdTime()
            : base(Tags.TransBkdTime) { }
        public TransBkdTime(DateTime val)
            : base(Tags.TransBkdTime, val) { }
        public TransBkdTime(DateTime val, bool showMilliseconds)
            : base(Tags.TransBkdTime, val, showMilliseconds) { }
        public TransBkdTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TransBkdTime, val, precision) { }

    }


    /// <summary>
    /// ExecPriceType Field
    /// </summary>/
    public sealed class ExecPriceType : CharField
    {
        public const int TAG = 484;

        public ExecPriceType()
            : base(Tags.ExecPriceType) { }
        public ExecPriceType(char val)
            : base(Tags.ExecPriceType, val) { }


        // Field Enumerations
        public const char BID_PRICE = 'B';
        public const char CREATION_PRICE = 'C';
        public const char CREATION_PRICE_PLUS_ADJUSTMENT_PERCENT = 'D';
        public const char CREATION_PRICE_PLUS_ADJUSTMENT_AMOUNT = 'E';
        public const char OFFER_PRICE = 'O';
        public const char OFFER_PRICE_MINUS_ADJUSTMENT_PERCENT = 'P';
        public const char OFFER_PRICE_MINUS_ADJUSTMENT_AMOUNT = 'Q';
        public const char SINGLE_PRICE = 'S';
    }


    /// <summary>
    /// ExecPriceAdjustment Field
    /// </summary>/
    public sealed class ExecPriceAdjustment : DecimalField
    {
        public const int TAG = 485;

        public ExecPriceAdjustment()
            : base(Tags.ExecPriceAdjustment) { }
        public ExecPriceAdjustment(Decimal val)
            : base(Tags.ExecPriceAdjustment, val) { }

    }


    /// <summary>
    /// DateOfBirth Field
    /// </summary>/
    public sealed class DateOfBirth : StringField
    {
        public const int TAG = 486;

        public DateOfBirth()
            : base(Tags.DateOfBirth) { }
        public DateOfBirth(string val)
            : base(Tags.DateOfBirth, val) { }

    }


    /// <summary>
    /// TradeReportTransType Field
    /// </summary>/
    public sealed class TradeReportTransType : IntField
    {
        public const int TAG = 487;

        public TradeReportTransType()
            : base(Tags.TradeReportTransType) { }
        public TradeReportTransType(int val)
            : base(Tags.TradeReportTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int CANCEL = 1;
        public const int REPLACE = 2;
        public const int RELEASE = 3;
        public const int REVERSE = 4;
        public const int CANCEL_DUE_TO_BACK_OUT_OF_TRADE = 5;
    }


    /// <summary>
    /// CardHolderName Field
    /// </summary>/
    public sealed class CardHolderName : StringField
    {
        public const int TAG = 488;

        public CardHolderName()
            : base(Tags.CardHolderName) { }
        public CardHolderName(string val)
            : base(Tags.CardHolderName, val) { }

    }


    /// <summary>
    /// CardNumber Field
    /// </summary>/
    public sealed class CardNumber : StringField
    {
        public const int TAG = 489;

        public CardNumber()
            : base(Tags.CardNumber) { }
        public CardNumber(string val)
            : base(Tags.CardNumber, val) { }

    }


    /// <summary>
    /// CardExpDate Field
    /// </summary>/
    public sealed class CardExpDate : StringField
    {
        public const int TAG = 490;

        public CardExpDate()
            : base(Tags.CardExpDate) { }
        public CardExpDate(string val)
            : base(Tags.CardExpDate, val) { }

    }


    /// <summary>
    /// CardIssNo Field
    /// </summary>/
    public sealed class CardIssNo : StringField
    {
        public const int TAG = 491;

        public CardIssNo()
            : base(Tags.CardIssNo) { }
        public CardIssNo(string val)
            : base(Tags.CardIssNo, val) { }

    }


    /// <summary>
    /// PaymentMethod Field
    /// </summary>/
    public sealed class PaymentMethod : IntField
    {
        public const int TAG = 492;

        public PaymentMethod()
            : base(Tags.PaymentMethod) { }
        public PaymentMethod(int val)
            : base(Tags.PaymentMethod, val) { }


        // Field Enumerations
        public const int CREST = 1;
        public const int NSCC = 2;
        public const int EUROCLEAR = 3;
        public const int CLEARSTREAM = 4;
        public const int CHEQUE = 5;
        public const int TELEGRAPHIC_TRANSFER = 6;
        public const int FED_WIRE = 7;
        public const int DEBIT_CARD = 8;
        public const int DIRECT_DEBIT = 9;
        public const int DIRECT_CREDIT = 10;
        public const int CREDIT_CARD = 11;
        public const int ACH_DEBIT = 12;
        public const int ACH_CREDIT = 13;
        public const int BPAY = 14;
        public const int HIGH_VALUE_CLEARING_SYSTEM = 15;
        public const int CHIPS = 16;
        public const int SWIFT = 17;
        public const int CHAPS = 18;
        public const int SIC = 19;
        public const int EUROSIC = 20;
        public const int FEDWIRE = 7;
    }


    /// <summary>
    /// RegistAcctType Field
    /// </summary>/
    public sealed class RegistAcctType : StringField
    {
        public const int TAG = 493;

        public RegistAcctType()
            : base(Tags.RegistAcctType) { }
        public RegistAcctType(string val)
            : base(Tags.RegistAcctType, val) { }

    }


    /// <summary>
    /// Designation Field
    /// </summary>/
    public sealed class Designation : StringField
    {
        public const int TAG = 494;

        public Designation()
            : base(Tags.Designation) { }
        public Designation(string val)
            : base(Tags.Designation, val) { }

    }


    /// <summary>
    /// TaxAdvantageType Field
    /// </summary>/
    public sealed class TaxAdvantageType : IntField
    {
        public const int TAG = 495;

        public TaxAdvantageType()
            : base(Tags.TaxAdvantageType) { }
        public TaxAdvantageType(int val)
            : base(Tags.TaxAdvantageType, val) { }


        // Field Enumerations
        public const int NONE_NOT_APPLICABLE = 0;
        public const int MAXI_ISA = 1;
        public const int TESSA = 2;
        public const int MINI_CASH_ISA = 3;
        public const int MINI_STOCKS_AND_SHARES_ISA = 4;
        public const int MINI_INSURANCE_ISA = 5;
        public const int CURRENT_YEAR_PAYMENT = 6;
        public const int PRIOR_YEAR_PAYMENT = 7;
        public const int ASSET_TRANSFER = 8;
        public const int EMPLOYEE_9 = 9;
        public const int EMPLOYEE_10 = 10;
        public const int EMPLOYER_11 = 11;
        public const int EMPLOYER_12 = 12;
        public const int NON_FUND_PROTOTYPE_IRA = 13;
        public const int NON_FUND_QUALIFIED_PLAN = 14;
        public const int DEFINED_CONTRIBUTION_PLAN = 15;
        public const int INDIVIDUAL_RETIREMENT_ACCOUNT_16 = 16;
        public const int INDIVIDUAL_RETIREMENT_ACCOUNT_17 = 17;
        public const int KEOGH = 18;
        public const int PROFIT_SHARING_PLAN = 19;
        public const int VAL_401 = 20;
        public const int SELF_DIRECTED_IRA = 21;
        public const int VAL_403 = 22;
        public const int VAL_457 = 23;
        public const int ROTH_IRA_24 = 24;
        public const int ROTH_IRA_25 = 25;
        public const int ROTH_CONVERSION_IRA_26 = 26;
        public const int ROTH_CONVERSION_IRA_27 = 27;
        public const int EDUCATION_IRA_28 = 28;
        public const int EDUCATION_IRA_29 = 29;
        public const int OTHER = 999;
        public const int NONE = 0;
        public const int EMPLOYEE_PRIOR_YEAR = 9;
    }


    /// <summary>
    /// RegistRejReasonText Field
    /// </summary>/
    public sealed class RegistRejReasonText : StringField
    {
        public const int TAG = 496;

        public RegistRejReasonText()
            : base(Tags.RegistRejReasonText) { }
        public RegistRejReasonText(string val)
            : base(Tags.RegistRejReasonText, val) { }

    }


    /// <summary>
    /// FundRenewWaiv Field
    /// </summary>/
    public sealed class FundRenewWaiv : CharField
    {
        public const int TAG = 497;

        public FundRenewWaiv()
            : base(Tags.FundRenewWaiv) { }
        public FundRenewWaiv(char val)
            : base(Tags.FundRenewWaiv, val) { }


        // Field Enumerations
        public const char NO = 'N';
        public const char YES = 'Y';
    }


    /// <summary>
    /// CashDistribAgentName Field
    /// </summary>/
    public sealed class CashDistribAgentName : StringField
    {
        public const int TAG = 498;

        public CashDistribAgentName()
            : base(Tags.CashDistribAgentName) { }
        public CashDistribAgentName(string val)
            : base(Tags.CashDistribAgentName, val) { }

    }


    /// <summary>
    /// CashDistribAgentCode Field
    /// </summary>/
    public sealed class CashDistribAgentCode : StringField
    {
        public const int TAG = 499;

        public CashDistribAgentCode()
            : base(Tags.CashDistribAgentCode) { }
        public CashDistribAgentCode(string val)
            : base(Tags.CashDistribAgentCode, val) { }

    }


    /// <summary>
    /// CashDistribAgentAcctNumber Field
    /// </summary>/
    public sealed class CashDistribAgentAcctNumber : StringField
    {
        public const int TAG = 500;

        public CashDistribAgentAcctNumber()
            : base(Tags.CashDistribAgentAcctNumber) { }
        public CashDistribAgentAcctNumber(string val)
            : base(Tags.CashDistribAgentAcctNumber, val) { }

    }


    /// <summary>
    /// CashDistribPayRef Field
    /// </summary>/
    public sealed class CashDistribPayRef : StringField
    {
        public const int TAG = 501;

        public CashDistribPayRef()
            : base(Tags.CashDistribPayRef) { }
        public CashDistribPayRef(string val)
            : base(Tags.CashDistribPayRef, val) { }

    }


    /// <summary>
    /// CashDistribAgentAcctName Field
    /// </summary>/
    public sealed class CashDistribAgentAcctName : StringField
    {
        public const int TAG = 502;

        public CashDistribAgentAcctName()
            : base(Tags.CashDistribAgentAcctName) { }
        public CashDistribAgentAcctName(string val)
            : base(Tags.CashDistribAgentAcctName, val) { }

    }


    /// <summary>
    /// CardStartDate Field
    /// </summary>/
    public sealed class CardStartDate : StringField
    {
        public const int TAG = 503;

        public CardStartDate()
            : base(Tags.CardStartDate) { }
        public CardStartDate(string val)
            : base(Tags.CardStartDate, val) { }

    }


    /// <summary>
    /// PaymentDate Field
    /// </summary>/
    public sealed class PaymentDate : StringField
    {
        public const int TAG = 504;

        public PaymentDate()
            : base(Tags.PaymentDate) { }
        public PaymentDate(string val)
            : base(Tags.PaymentDate, val) { }

    }


    /// <summary>
    /// PaymentRemitterID Field
    /// </summary>/
    public sealed class PaymentRemitterID : StringField
    {
        public const int TAG = 505;

        public PaymentRemitterID()
            : base(Tags.PaymentRemitterID) { }
        public PaymentRemitterID(string val)
            : base(Tags.PaymentRemitterID, val) { }

    }


    /// <summary>
    /// RegistStatus Field
    /// </summary>/
    public sealed class RegistStatus : CharField
    {
        public const int TAG = 506;

        public RegistStatus()
            : base(Tags.RegistStatus) { }
        public RegistStatus(char val)
            : base(Tags.RegistStatus, val) { }


        // Field Enumerations
        public const char ACCEPTED = 'A';
        public const char REJECTED = 'R';
        public const char HELD = 'H';
        public const char REMINDER = 'N';
    }


    /// <summary>
    /// RegistRejReasonCode Field
    /// </summary>/
    public sealed class RegistRejReasonCode : IntField
    {
        public const int TAG = 507;

        public RegistRejReasonCode()
            : base(Tags.RegistRejReasonCode) { }
        public RegistRejReasonCode(int val)
            : base(Tags.RegistRejReasonCode, val) { }


        // Field Enumerations
        public const int INVALID_UNACCEPTABLE_ACCOUNT_TYPE = 1;
        public const int INVALID_UNACCEPTABLE_TAX_EXEMPT_TYPE = 2;
        public const int INVALID_UNACCEPTABLE_OWNERSHIP_TYPE = 3;
        public const int INVALID_UNACCEPTABLE_NO_REG_DETAILS = 4;
        public const int INVALID_UNACCEPTABLE_REG_SEQ_NO = 5;
        public const int INVALID_UNACCEPTABLE_REG_DETAILS = 6;
        public const int INVALID_UNACCEPTABLE_MAILING_DETAILS = 7;
        public const int INVALID_UNACCEPTABLE_MAILING_INSTRUCTIONS = 8;
        public const int INVALID_UNACCEPTABLE_INVESTOR_ID = 9;
        public const int INVALID_UNACEEPTABLE_INVESTOR_ID_SOURCE = 10;
        public const int INVALID_UNACCEPTABLE_DATE_OF_BIRTH = 11;
        public const int INVALID_UNACCEPTABLE_INVESTOR_COUNTRY_OF_RESIDENCE = 12;
        public const int INVALID_UNACCEPTABLE_NO_DISTRIB_INSTNS = 13;
        public const int INVALID_UNACCEPTABLE_DISTRIB_PERCENTAGE = 14;
        public const int INVALID_UNACCEPTABLE_DISTRIB_PAYMENT_METHOD = 15;
        public const int INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NAME = 16;
        public const int INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_CODE = 17;
        public const int INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NUM = 18;
        public const int OTHER = 99;
        public const int INVALID_UNACCEPTABLE_NO_REG_DETLS = 4;
        public const int INVALID_UNACCEPTABLE_REG_DTLS = 6;
        public const int INVALID_UNACCEPTABLE_MAILING_DTLS = 7;
        public const int INVALID_UNACCEPTABLE_MAILING_INST = 8;
        public const int INVALID_UNACCEPTABLE_INVESTOR_ID_SOURCE = 10;
        public const int INVALID_UNACCEPTABLE_NODISTRIBINSTNS = 13;
    }


    /// <summary>
    /// RegistRefID Field
    /// </summary>/
    public sealed class RegistRefID : StringField
    {
        public const int TAG = 508;

        public RegistRefID()
            : base(Tags.RegistRefID) { }
        public RegistRefID(string val)
            : base(Tags.RegistRefID, val) { }

    }


    /// <summary>
    /// RegistDetls Field
    /// </summary>/
    public sealed class RegistDetls : StringField
    {
        public const int TAG = 509;

        public RegistDetls()
            : base(Tags.RegistDetls) { }
        public RegistDetls(string val)
            : base(Tags.RegistDetls, val) { }

    }


    /// <summary>
    /// NoDistribInsts Field
    /// </summary>/
    public sealed class NoDistribInsts : IntField
    {
        public const int TAG = 510;

        public NoDistribInsts()
            : base(Tags.NoDistribInsts) { }
        public NoDistribInsts(int val)
            : base(Tags.NoDistribInsts, val) { }

    }


    /// <summary>
    /// RegistEmail Field
    /// </summary>/
    public sealed class RegistEmail : StringField
    {
        public const int TAG = 511;

        public RegistEmail()
            : base(Tags.RegistEmail) { }
        public RegistEmail(string val)
            : base(Tags.RegistEmail, val) { }

    }


    /// <summary>
    /// DistribPercentage Field
    /// </summary>/
    public sealed class DistribPercentage : DecimalField
    {
        public const int TAG = 512;

        public DistribPercentage()
            : base(Tags.DistribPercentage) { }
        public DistribPercentage(Decimal val)
            : base(Tags.DistribPercentage, val) { }

    }


    /// <summary>
    /// RegistID Field
    /// </summary>/
    public sealed class RegistID : StringField
    {
        public const int TAG = 513;

        public RegistID()
            : base(Tags.RegistID) { }
        public RegistID(string val)
            : base(Tags.RegistID, val) { }

    }


    /// <summary>
    /// RegistTransType Field
    /// </summary>/
    public sealed class RegistTransType : CharField
    {
        public const int TAG = 514;

        public RegistTransType()
            : base(Tags.RegistTransType) { }
        public RegistTransType(char val)
            : base(Tags.RegistTransType, val) { }


        // Field Enumerations
        public const char NEW = '0';
        public const char CANCEL = '2';
        public const char REPLACE = '1';
    }


    /// <summary>
    /// ExecValuationPoint Field
    /// </summary>/
    public sealed class ExecValuationPoint : DateTimeField
    {
        public const int TAG = 515;

        public ExecValuationPoint()
            : base(Tags.ExecValuationPoint) { }
        public ExecValuationPoint(DateTime val)
            : base(Tags.ExecValuationPoint, val) { }
        public ExecValuationPoint(DateTime val, bool showMilliseconds)
            : base(Tags.ExecValuationPoint, val, showMilliseconds) { }
        public ExecValuationPoint(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ExecValuationPoint, val, precision) { }

    }


    /// <summary>
    /// OrderPercent Field
    /// </summary>/
    public sealed class OrderPercent : DecimalField
    {
        public const int TAG = 516;

        public OrderPercent()
            : base(Tags.OrderPercent) { }
        public OrderPercent(Decimal val)
            : base(Tags.OrderPercent, val) { }

    }


    /// <summary>
    /// OwnershipType Field
    /// </summary>/
    public sealed class OwnershipType : CharField
    {
        public const int TAG = 517;

        public OwnershipType()
            : base(Tags.OwnershipType) { }
        public OwnershipType(char val)
            : base(Tags.OwnershipType, val) { }


        // Field Enumerations
        public const char JOINT_INVESTORS = 'J';
        public const char TENANTS_IN_COMMON = 'T';
        public const char JOINT_TRUSTEES = '2';
    }


    /// <summary>
    /// NoContAmts Field
    /// </summary>/
    public sealed class NoContAmts : IntField
    {
        public const int TAG = 518;

        public NoContAmts()
            : base(Tags.NoContAmts) { }
        public NoContAmts(int val)
            : base(Tags.NoContAmts, val) { }

    }


    /// <summary>
    /// ContAmtType Field
    /// </summary>/
    public sealed class ContAmtType : IntField
    {
        public const int TAG = 519;

        public ContAmtType()
            : base(Tags.ContAmtType) { }
        public ContAmtType(int val)
            : base(Tags.ContAmtType, val) { }


        // Field Enumerations
        public const int COMMISSION_AMOUNT = 1;
        public const int COMMISSION_PERCENT = 2;
        public const int INITIAL_CHARGE_AMOUNT = 3;
        public const int INITIAL_CHARGE_PERCENT = 4;
        public const int DISCOUNT_AMOUNT = 5;
        public const int DISCOUNT_PERCENT = 6;
        public const int DILUTION_LEVY_AMOUNT = 7;
        public const int DILUTION_LEVY_PERCENT = 8;
        public const int EXIT_CHARGE_AMOUNT = 9;
        public const int EXIT_CHARGE_PERCENT = 10;
        public const int FUND_BASED_RENEWAL_COMMISSION_PERCENT = 11;
        public const int PROJECTED_FUND_VALUE = 12;
        public const int FUND_BASED_RENEWAL_COMMISSION_AMOUNT_13 = 13;
        public const int FUND_BASED_RENEWAL_COMMISSION_AMOUNT_14 = 14;
        public const int NET_SETTLEMENT_AMOUNT = 15;
    }


    /// <summary>
    /// ContAmtValue Field
    /// </summary>/
    public sealed class ContAmtValue : DecimalField
    {
        public const int TAG = 520;

        public ContAmtValue()
            : base(Tags.ContAmtValue) { }
        public ContAmtValue(Decimal val)
            : base(Tags.ContAmtValue, val) { }

    }


    /// <summary>
    /// ContAmtCurr Field
    /// </summary>/
    public sealed class ContAmtCurr : StringField
    {
        public const int TAG = 521;

        public ContAmtCurr()
            : base(Tags.ContAmtCurr) { }
        public ContAmtCurr(string val)
            : base(Tags.ContAmtCurr, val) { }

    }


    /// <summary>
    /// OwnerType Field
    /// </summary>/
    public sealed class OwnerType : IntField
    {
        public const int TAG = 522;

        public OwnerType()
            : base(Tags.OwnerType) { }
        public OwnerType(int val)
            : base(Tags.OwnerType, val) { }


        // Field Enumerations
        public const int INDIVIDUAL_INVESTOR = 1;
        public const int PUBLIC_COMPANY = 2;
        public const int PRIVATE_COMPANY = 3;
        public const int INDIVIDUAL_TRUSTEE = 4;
        public const int COMPANY_TRUSTEE = 5;
        public const int PENSION_PLAN = 6;
        public const int CUSTODIAN_UNDER_GIFTS_TO_MINORS_ACT = 7;
        public const int TRUSTS = 8;
        public const int FIDUCIARIES = 9;
        public const int NETWORKING_SUB_ACCOUNT = 10;
        public const int NON_PROFIT_ORGANIZATION = 11;
        public const int CORPORATE_BODY = 12;
        public const int NOMINEE = 13;
        public const int INSTITUTIONAL_CUSTOMER = 14;
        public const int COMBINED = 15;
        public const int MEMBER_FIRM_EMPLOYEE_OR_ASSOCIATED_PERSON = 16;
        public const int MARKET_MAKING_ACCOUNT = 17;
        public const int PROPRIETARY_ACCOUNT = 18;
        public const int NON_BROKER_DEALER = 19;
        public const int UNKNOWN_BENEFICIAL_OWNER_TYPE = 20;
        public const int ERROR_ACCOUNT_OF_FIRM = 21;
        public const int FIRM_AGENCY_AVERAGE_PRICE_ACCOUNT = 22;
    }


    /// <summary>
    /// PartySubID Field
    /// </summary>/
    public sealed class PartySubID : StringField
    {
        public const int TAG = 523;

        public PartySubID()
            : base(Tags.PartySubID) { }
        public PartySubID(string val)
            : base(Tags.PartySubID, val) { }

    }


    /// <summary>
    /// NestedPartyID Field
    /// </summary>/
    public sealed class NestedPartyID : StringField
    {
        public const int TAG = 524;

        public NestedPartyID()
            : base(Tags.NestedPartyID) { }
        public NestedPartyID(string val)
            : base(Tags.NestedPartyID, val) { }

    }


    /// <summary>
    /// NestedPartyIDSource Field
    /// </summary>/
    public sealed class NestedPartyIDSource : CharField
    {
        public const int TAG = 525;

        public NestedPartyIDSource()
            : base(Tags.NestedPartyIDSource) { }
        public NestedPartyIDSource(char val)
            : base(Tags.NestedPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// SecondaryClOrdID Field
    /// </summary>/
    public sealed class SecondaryClOrdID : StringField
    {
        public const int TAG = 526;

        public SecondaryClOrdID()
            : base(Tags.SecondaryClOrdID) { }
        public SecondaryClOrdID(string val)
            : base(Tags.SecondaryClOrdID, val) { }

    }


    /// <summary>
    /// SecondaryExecID Field
    /// </summary>/
    public sealed class SecondaryExecID : StringField
    {
        public const int TAG = 527;

        public SecondaryExecID()
            : base(Tags.SecondaryExecID) { }
        public SecondaryExecID(string val)
            : base(Tags.SecondaryExecID, val) { }

    }


    /// <summary>
    /// OrderCapacity Field
    /// </summary>/
    public sealed class OrderCapacity : CharField
    {
        public const int TAG = 528;

        public OrderCapacity()
            : base(Tags.OrderCapacity) { }
        public OrderCapacity(char val)
            : base(Tags.OrderCapacity, val) { }


        // Field Enumerations
        public const char AGENCY = 'A';
        public const char PROPRIETARY = 'G';
        public const char INDIVIDUAL = 'I';
        public const char PRINCIPAL = 'P';
        public const char RISKLESS_PRINCIPAL = 'R';
        public const char AGENT_FOR_OTHER_MEMBER = 'W';
        public const char MIXED_CAPACITY = 'M';
    }


    /// <summary>
    /// OrderRestrictions Field
    /// </summary>/
    public sealed class OrderRestrictions : StringField
    {
        public const int TAG = 529;

        public OrderRestrictions()
            : base(Tags.OrderRestrictions) { }
        public OrderRestrictions(string val)
            : base(Tags.OrderRestrictions, val) { }


        // Field Enumerations
        public const string PROGRAM_TRADE = "1";
        public const string INDEX_ARBITRAGE = "2";
        public const string NON_INDEX_ARBITRAGE = "3";
        public const string COMPETING_MARKET_MAKER = "4";
        public const string ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY = "5";
        public const string ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_OF_A_DERIVATIVE_SECURITY = "6";
        public const string FOREIGN_ENTITY = "7";
        public const string EXTERNAL_MARKET_PARTICIPANT = "8";
        public const string EXTERNAL_INTER_CONNECTED_MARKET_LINKAGE = "9";
        public const string RISKLESS_ARBITRAGE = "A";
        public const string ISSUER_HOLDING = "B";
        public const string ISSUE_PRICE_STABILIZATION = "C";
        public const string NON_ALGORITHMIC = "D";
        public const string ALGORITHMIC = "E";
        public const string CROSS = "F";
        public const string INSIDER_ACCOUNT = "G";
        public const string SIGNIFICANT_SHAREHOLDER = "H";
        public const string NORMAL_COURSE_ISSUER_BID = "I";
        public const string ACTING_AS_MARKET_MAKER_OF_SPECIALIST_IN_THE_UNDERLYING_SECURITY_OF_A_DERIVATIVE_SEUCIRTY = "6";
        public const string EXTNERAL_INTER_CONNECTED_MARKET_LINKAGE = "9";
    }


    /// <summary>
    /// MassCancelRequestType Field
    /// </summary>/
    public sealed class MassCancelRequestType : CharField
    {
        public const int TAG = 530;

        public MassCancelRequestType()
            : base(Tags.MassCancelRequestType) { }
        public MassCancelRequestType(char val)
            : base(Tags.MassCancelRequestType, val) { }


        // Field Enumerations
        public const char CANCEL_ORDERS_FOR_A_SECURITY = '1';
        public const char CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY = '2';
        public const char CANCEL_ORDERS_FOR_A_PRODUCT = '3';
        public const char CANCEL_ORDERS_FOR_A_CFICODE = '4';
        public const char CANCEL_ORDERS_FOR_A_SECURITYTYPE = '5';
        public const char CANCEL_ORDERS_FOR_A_TRADING_SESSION = '6';
        public const char CANCEL_ALL_ORDERS = '7';
        public const char CANCEL_ORDERS_FOR_A_MARKET = '8';
        public const char CANCEL_ORDERS_FOR_A_MARKET_SEGMENT = '9';
        public const char CANCEL_ORDERS_FOR_A_SECURITY_GROUP = 'A';
        public const char CANCEL_FOR_SECURITY_ISSUER = 'B';
        public const char CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = 'C';
    }


    /// <summary>
    /// MassCancelResponse Field
    /// </summary>/
    public sealed class MassCancelResponse : CharField
    {
        public const int TAG = 531;

        public MassCancelResponse()
            : base(Tags.MassCancelResponse) { }
        public MassCancelResponse(char val)
            : base(Tags.MassCancelResponse, val) { }


        // Field Enumerations
        public const char CANCEL_REQUEST_REJECTED = '0';
        public const char CANCEL_ORDERS_FOR_A_SECURITY = '1';
        public const char CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY = '2';
        public const char CANCEL_ORDERS_FOR_A_PRODUCT = '3';
        public const char CANCEL_ORDERS_FOR_A_CFICODE = '4';
        public const char CANCEL_ORDERS_FOR_A_SECURITYTYPE = '5';
        public const char CANCEL_ORDERS_FOR_A_TRADING_SESSION = '6';
        public const char CANCEL_ALL_ORDERS = '7';
        public const char CANCEL_ORDERS_FOR_A_MARKET = '8';
        public const char CANCEL_ORDERS_FOR_A_MARKET_SEGMENT = '9';
        public const char CANCEL_ORDERS_FOR_A_SECURITY_GROUP = 'A';
        public const char CANCEL_ORDERS_FOR_A_SECURITIES_ISSUER = 'B';
        public const char CANCEL_ORDERS_FOR_ISSUER_OF_UNDERLYING_SECURITY = 'C';
    }


    /// <summary>
    /// MassCancelRejectReason Field
    /// </summary>/
    public sealed class MassCancelRejectReason : IntField
    {
        public const int TAG = 532;

        public MassCancelRejectReason()
            : base(Tags.MassCancelRejectReason) { }
        public MassCancelRejectReason(int val)
            : base(Tags.MassCancelRejectReason, val) { }


        // Field Enumerations
        public const int MASS_CANCEL_NOT_SUPPORTED = 0;
        public const int INVALID_OR_UNKNOWN_SECURITY = 1;
        public const int INVALID_OR_UNKOWN_UNDERLYING_SECURITY = 2;
        public const int INVALID_OR_UNKNOWN_PRODUCT = 3;
        public const int INVALID_OR_UNKNOWN_CFICODE = 4;
        public const int INVALID_OR_UNKNOWN_SECURITYTYPE = 5;
        public const int INVALID_OR_UNKNOWN_TRADING_SESSION = 6;
        public const int INVALID_OR_UNKNOWN_MARKET = 7;
        public const int INVALID_OR_UNKOWN_MARKET_SEGMENT = 8;
        public const int INVALID_OR_UNKNOWN_SECURITY_GROUP = 9;
        public const int OTHER = 99;
        public const int INVALID_OR_UNKNOWN_SECURITY_ISSUER = 10;
        public const int INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = 11;
        public const int INVALID_OR_UNKNOWN_UNDERLYING = 2;
        public const int INVALID_OR_UNKNOWN_SECURITY_TYPE = 5;
    }


    /// <summary>
    /// TotalAffectedOrders Field
    /// </summary>/
    public sealed class TotalAffectedOrders : IntField
    {
        public const int TAG = 533;

        public TotalAffectedOrders()
            : base(Tags.TotalAffectedOrders) { }
        public TotalAffectedOrders(int val)
            : base(Tags.TotalAffectedOrders, val) { }

    }


    /// <summary>
    /// NoAffectedOrders Field
    /// </summary>/
    public sealed class NoAffectedOrders : IntField
    {
        public const int TAG = 534;

        public NoAffectedOrders()
            : base(Tags.NoAffectedOrders) { }
        public NoAffectedOrders(int val)
            : base(Tags.NoAffectedOrders, val) { }

    }


    /// <summary>
    /// AffectedOrderID Field
    /// </summary>/
    public sealed class AffectedOrderID : StringField
    {
        public const int TAG = 535;

        public AffectedOrderID()
            : base(Tags.AffectedOrderID) { }
        public AffectedOrderID(string val)
            : base(Tags.AffectedOrderID, val) { }

    }


    /// <summary>
    /// AffectedSecondaryOrderID Field
    /// </summary>/
    public sealed class AffectedSecondaryOrderID : StringField
    {
        public const int TAG = 536;

        public AffectedSecondaryOrderID()
            : base(Tags.AffectedSecondaryOrderID) { }
        public AffectedSecondaryOrderID(string val)
            : base(Tags.AffectedSecondaryOrderID, val) { }

    }


    /// <summary>
    /// QuoteType Field
    /// </summary>/
    public sealed class QuoteType : IntField
    {
        public const int TAG = 537;

        public QuoteType()
            : base(Tags.QuoteType) { }
        public QuoteType(int val)
            : base(Tags.QuoteType, val) { }


        // Field Enumerations
        public const int INDICATIVE = 0;
        public const int TRADEABLE = 1;
        public const int RESTRICTED_TRADEABLE = 2;
        public const int COUNTER = 3;
        public const int INITIALLY_TRADEABLE = 4;
    }


    /// <summary>
    /// NestedPartyRole Field
    /// </summary>/
    public sealed class NestedPartyRole : IntField
    {
        public const int TAG = 538;

        public NestedPartyRole()
            : base(Tags.NestedPartyRole) { }
        public NestedPartyRole(int val)
            : base(Tags.NestedPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoNestedPartyIDs Field
    /// </summary>/
    public sealed class NoNestedPartyIDs : IntField
    {
        public const int TAG = 539;

        public NoNestedPartyIDs()
            : base(Tags.NoNestedPartyIDs) { }
        public NoNestedPartyIDs(int val)
            : base(Tags.NoNestedPartyIDs, val) { }

    }


    /// <summary>
    /// TotalAccruedInterestAmt Field
    /// </summary>/
    public sealed class TotalAccruedInterestAmt : DecimalField
    {
        public const int TAG = 540;

        public TotalAccruedInterestAmt()
            : base(Tags.TotalAccruedInterestAmt) { }
        public TotalAccruedInterestAmt(Decimal val)
            : base(Tags.TotalAccruedInterestAmt, val) { }

    }


    /// <summary>
    /// MaturityDate Field
    /// </summary>/
    public sealed class MaturityDate : StringField
    {
        public const int TAG = 541;

        public MaturityDate()
            : base(Tags.MaturityDate) { }
        public MaturityDate(string val)
            : base(Tags.MaturityDate, val) { }

    }


    /// <summary>
    /// UnderlyingMaturityDate Field
    /// </summary>/
    public sealed class UnderlyingMaturityDate : StringField
    {
        public const int TAG = 542;

        public UnderlyingMaturityDate()
            : base(Tags.UnderlyingMaturityDate) { }
        public UnderlyingMaturityDate(string val)
            : base(Tags.UnderlyingMaturityDate, val) { }

    }


    /// <summary>
    /// InstrRegistry Field
    /// </summary>/
    public sealed class InstrRegistry : StringField
    {
        public const int TAG = 543;

        public InstrRegistry()
            : base(Tags.InstrRegistry) { }
        public InstrRegistry(string val)
            : base(Tags.InstrRegistry, val) { }


        // Field Enumerations
        public const string COUNTRY_IN_WHICH_REGISTRY_IS_KEPT = "Code";
        public const string PHYSICAL_OR_BEARER = "ZZ";
    }


    /// <summary>
    /// CashMargin Field
    /// </summary>/
    public sealed class CashMargin : CharField
    {
        public const int TAG = 544;

        public CashMargin()
            : base(Tags.CashMargin) { }
        public CashMargin(char val)
            : base(Tags.CashMargin, val) { }


        // Field Enumerations
        public const char CASH = '1';
        public const char MARGIN_OPEN = '2';
        public const char MARGIN_CLOSE = '3';
    }


    /// <summary>
    /// NestedPartySubID Field
    /// </summary>/
    public sealed class NestedPartySubID : StringField
    {
        public const int TAG = 545;

        public NestedPartySubID()
            : base(Tags.NestedPartySubID) { }
        public NestedPartySubID(string val)
            : base(Tags.NestedPartySubID, val) { }

    }


    /// <summary>
    /// Scope Field
    /// </summary>/
    public sealed class Scope : StringField
    {
        public const int TAG = 546;

        public Scope()
            : base(Tags.Scope) { }
        public Scope(string val)
            : base(Tags.Scope, val) { }


        // Field Enumerations
        public const string LOCAL_MARKET = "1";
        public const string NATIONAL = "2";
        public const string GLOBAL = "3";
        public const string LOCAL = "1";
    }


    /// <summary>
    /// MDImplicitDelete Field
    /// </summary>/
    public sealed class MDImplicitDelete : BooleanField
    {
        public const int TAG = 547;

        public MDImplicitDelete()
            : base(Tags.MDImplicitDelete) { }
        public MDImplicitDelete(Boolean val)
            : base(Tags.MDImplicitDelete, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// CrossID Field
    /// </summary>/
    public sealed class CrossID : StringField
    {
        public const int TAG = 548;

        public CrossID()
            : base(Tags.CrossID) { }
        public CrossID(string val)
            : base(Tags.CrossID, val) { }

    }


    /// <summary>
    /// CrossType Field
    /// </summary>/
    public sealed class CrossType : IntField
    {
        public const int TAG = 549;

        public CrossType()
            : base(Tags.CrossType) { }
        public CrossType(int val)
            : base(Tags.CrossType, val) { }


        // Field Enumerations
        public const int ALL_OR_NONE_CROSS = 1;
        public const int IMMEDIATE_OR_CANCEL_CROSS = 2;
        public const int ONE_SIDED_CROSS = 3;
        public const int CROSS_EXECUTED_AGAINST_BOOK = 4;
        public const int BASIS_CROSS = 5;
        public const int CONTINGENT_CROSS = 6;
        public const int VOLUME_WEIGHTED_AVERAGE_PRICE = 7;
        public const int SPECIAL_TRADING_SESSION_CROSS = 8;
        public const int CUSTOMER_TO_CUSTOMER_CROSS = 9;
        public const int CROSS_AON = 1;
        public const int CROSS_IOC = 2;
        public const int CROSS_ONE_SIDE = 3;
        public const int CROSS_SAME_PRICE = 4;
        public const int CROSS_TRADE_WHICH_IS_EXECUTED_COMPLETELY_OR_NOT = 1;
        public const int CROSS_TRADE_WHICH_IS_EXECUTED_PARTIALLY_AND_THE_REST_IS_CANCELLED = 2;
        public const int CROSS_TRADE_WHICH_IS_PARTIALLY_EXECUTED_WITH_THE_UNFILLED_PORTIONS_REMAINING_ACTIVE = 3;
        public const int CROSS_TRADE_IS_EXECUTED_WITH_EXISTING_ORDERS_WITH_THE_SAME_PRICE = 4;
    }


    /// <summary>
    /// CrossPrioritization Field
    /// </summary>/
    public sealed class CrossPrioritization : IntField
    {
        public const int TAG = 550;

        public CrossPrioritization()
            : base(Tags.CrossPrioritization) { }
        public CrossPrioritization(int val)
            : base(Tags.CrossPrioritization, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int BUY_SIDE_IS_PRIORITIZED = 1;
        public const int SELL_SIDE_IS_PRIORITIZED = 2;
    }


    /// <summary>
    /// OrigCrossID Field
    /// </summary>/
    public sealed class OrigCrossID : StringField
    {
        public const int TAG = 551;

        public OrigCrossID()
            : base(Tags.OrigCrossID) { }
        public OrigCrossID(string val)
            : base(Tags.OrigCrossID, val) { }

    }


    /// <summary>
    /// NoSides Field
    /// </summary>/
    public sealed class NoSides : IntField
    {
        public const int TAG = 552;

        public NoSides()
            : base(Tags.NoSides) { }
        public NoSides(int val)
            : base(Tags.NoSides, val) { }


        // Field Enumerations
        public const int ONE_SIDE = 1;
        public const int BOTH_SIDES = 2;
    }


    /// <summary>
    /// Username Field
    /// </summary>/
    public sealed class Username : StringField
    {
        public const int TAG = 553;

        public Username()
            : base(Tags.Username) { }
        public Username(string val)
            : base(Tags.Username, val) { }

    }


    /// <summary>
    /// Password Field
    /// </summary>/
    public sealed class Password : StringField
    {
        public const int TAG = 554;

        public Password()
            : base(Tags.Password) { }
        public Password(string val)
            : base(Tags.Password, val) { }

    }


    /// <summary>
    /// NoLegs Field
    /// </summary>/
    public sealed class NoLegs : IntField
    {
        public const int TAG = 555;

        public NoLegs()
            : base(Tags.NoLegs) { }
        public NoLegs(int val)
            : base(Tags.NoLegs, val) { }

    }


    /// <summary>
    /// LegCurrency Field
    /// </summary>/
    public sealed class LegCurrency : StringField
    {
        public const int TAG = 556;

        public LegCurrency()
            : base(Tags.LegCurrency) { }
        public LegCurrency(string val)
            : base(Tags.LegCurrency, val) { }

    }


    /// <summary>
    /// TotalNumSecurityTypes Field
    /// </summary>/
    public sealed class TotalNumSecurityTypes : IntField
    {
        public const int TAG = 557;

        public TotalNumSecurityTypes()
            : base(Tags.TotalNumSecurityTypes) { }
        public TotalNumSecurityTypes(int val)
            : base(Tags.TotalNumSecurityTypes, val) { }

    }


    /// <summary>
    /// NoSecurityTypes Field
    /// </summary>/
    public sealed class NoSecurityTypes : IntField
    {
        public const int TAG = 558;

        public NoSecurityTypes()
            : base(Tags.NoSecurityTypes) { }
        public NoSecurityTypes(int val)
            : base(Tags.NoSecurityTypes, val) { }

    }


    /// <summary>
    /// SecurityListRequestType Field
    /// </summary>/
    public sealed class SecurityListRequestType : IntField
    {
        public const int TAG = 559;

        public SecurityListRequestType()
            : base(Tags.SecurityListRequestType) { }
        public SecurityListRequestType(int val)
            : base(Tags.SecurityListRequestType, val) { }


        // Field Enumerations
        public const int SYMBOL = 0;
        public const int SECURITYTYPE_AND_OR_CFICODE = 1;
        public const int PRODUCT = 2;
        public const int TRADINGSESSIONID = 3;
        public const int ALL_SECURITIES = 4;
        public const int MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID = 5;
        public const int SECURITYTYPE_AND = 1;
    }


    /// <summary>
    /// SecurityRequestResult Field
    /// </summary>/
    public sealed class SecurityRequestResult : IntField
    {
        public const int TAG = 560;

        public SecurityRequestResult()
            : base(Tags.SecurityRequestResult) { }
        public SecurityRequestResult(int val)
            : base(Tags.SecurityRequestResult, val) { }


        // Field Enumerations
        public const int VALID_REQUEST = 0;
        public const int INVALID_OR_UNSUPPORTED_REQUEST = 1;
        public const int NO_INSTRUMENTS_FOUND_THAT_MATCH_SELECTION_CRITERIA = 2;
        public const int NOT_AUTHORIZED_TO_RETRIEVE_INSTRUMENT_DATA = 3;
        public const int INSTRUMENT_DATA_TEMPORARILY_UNAVAILABLE = 4;
        public const int REQUEST_FOR_INSTRUMENT_DATA_NOT_SUPPORTED = 5;
    }


    /// <summary>
    /// RoundLot Field
    /// </summary>/
    public sealed class RoundLot : DecimalField
    {
        public const int TAG = 561;

        public RoundLot()
            : base(Tags.RoundLot) { }
        public RoundLot(Decimal val)
            : base(Tags.RoundLot, val) { }

    }


    /// <summary>
    /// MinTradeVol Field
    /// </summary>/
    public sealed class MinTradeVol : DecimalField
    {
        public const int TAG = 562;

        public MinTradeVol()
            : base(Tags.MinTradeVol) { }
        public MinTradeVol(Decimal val)
            : base(Tags.MinTradeVol, val) { }

    }


    /// <summary>
    /// MultiLegRptTypeReq Field
    /// </summary>/
    public sealed class MultiLegRptTypeReq : IntField
    {
        public const int TAG = 563;

        public MultiLegRptTypeReq()
            : base(Tags.MultiLegRptTypeReq) { }
        public MultiLegRptTypeReq(int val)
            : base(Tags.MultiLegRptTypeReq, val) { }


        // Field Enumerations
        public const int REPORT_BY_MULITLEG_SECURITY_ONLY = 0;
        public const int REPORT_BY_MULTILEG_SECURITY_AND_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY = 1;
        public const int REPORT_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY_ONLY = 2;
    }


    /// <summary>
    /// LegPositionEffect Field
    /// </summary>/
    public sealed class LegPositionEffect : CharField
    {
        public const int TAG = 564;

        public LegPositionEffect()
            : base(Tags.LegPositionEffect) { }
        public LegPositionEffect(char val)
            : base(Tags.LegPositionEffect, val) { }


        // Field Enumerations
        public const char CLOSE = 'C';
        public const char FIFO = 'F';
        public const char OPEN = 'O';
        public const char ROLLED = 'R';
        public const char CLOSE_BUT_NOTIFY_ON_OPEN = 'N';
        public const char DEFAULT = 'D';
    }


    /// <summary>
    /// LegCoveredOrUncovered Field
    /// </summary>/
    public sealed class LegCoveredOrUncovered : IntField
    {
        public const int TAG = 565;

        public LegCoveredOrUncovered()
            : base(Tags.LegCoveredOrUncovered) { }
        public LegCoveredOrUncovered(int val)
            : base(Tags.LegCoveredOrUncovered, val) { }


        // Field Enumerations
        public const int COVERED = 0;
        public const int UNCOVERED = 1;
    }


    /// <summary>
    /// LegPrice Field
    /// </summary>/
    public sealed class LegPrice : DecimalField
    {
        public const int TAG = 566;

        public LegPrice()
            : base(Tags.LegPrice) { }
        public LegPrice(Decimal val)
            : base(Tags.LegPrice, val) { }

    }


    /// <summary>
    /// TradSesStatusRejReason Field
    /// </summary>/
    public sealed class TradSesStatusRejReason : IntField
    {
        public const int TAG = 567;

        public TradSesStatusRejReason()
            : base(Tags.TradSesStatusRejReason) { }
        public TradSesStatusRejReason(int val)
            : base(Tags.TradSesStatusRejReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_OR_INVALID_TRADINGSESSIONID = 1;
        public const int OTHER = 99;
    }


    /// <summary>
    /// TradeRequestID Field
    /// </summary>/
    public sealed class TradeRequestID : StringField
    {
        public const int TAG = 568;

        public TradeRequestID()
            : base(Tags.TradeRequestID) { }
        public TradeRequestID(string val)
            : base(Tags.TradeRequestID, val) { }

    }


    /// <summary>
    /// TradeRequestType Field
    /// </summary>/
    public sealed class TradeRequestType : IntField
    {
        public const int TAG = 569;

        public TradeRequestType()
            : base(Tags.TradeRequestType) { }
        public TradeRequestType(int val)
            : base(Tags.TradeRequestType, val) { }


        // Field Enumerations
        public const int ALL_TRADES = 0;
        public const int MATCHED_TRADES_MATCHING_CRITERIA_PROVIDED_ON_REQUEST = 1;
        public const int UNMATCHED_TRADES_THAT_MATCH_CRITERIA = 2;
        public const int UNREPORTED_TRADES_THAT_MATCH_CRITERIA = 3;
        public const int ADVISORIES_THAT_MATCH_CRITERIA = 4;
    }


    /// <summary>
    /// PreviouslyReported Field
    /// </summary>/
    public sealed class PreviouslyReported : BooleanField
    {
        public const int TAG = 570;

        public PreviouslyReported()
            : base(Tags.PreviouslyReported) { }
        public PreviouslyReported(Boolean val)
            : base(Tags.PreviouslyReported, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// TradeReportID Field
    /// </summary>/
    public sealed class TradeReportID : StringField
    {
        public const int TAG = 571;

        public TradeReportID()
            : base(Tags.TradeReportID) { }
        public TradeReportID(string val)
            : base(Tags.TradeReportID, val) { }

    }


    /// <summary>
    /// TradeReportRefID Field
    /// </summary>/
    public sealed class TradeReportRefID : StringField
    {
        public const int TAG = 572;

        public TradeReportRefID()
            : base(Tags.TradeReportRefID) { }
        public TradeReportRefID(string val)
            : base(Tags.TradeReportRefID, val) { }

    }


    /// <summary>
    /// MatchStatus Field
    /// </summary>/
    public sealed class MatchStatus : CharField
    {
        public const int TAG = 573;

        public MatchStatus()
            : base(Tags.MatchStatus) { }
        public MatchStatus(char val)
            : base(Tags.MatchStatus, val) { }


        // Field Enumerations
        public const char COMPARED_MATCHED_OR_AFFIRMED = '0';
        public const char UNCOMPARED_UNMATCHED_OR_UNAFFIRMED = '1';
        public const char ADVISORY_OR_ALERT = '2';
        public const char MISMATCHED = '3';
        public const char UNCOMPARED_UNMATCHED_OR_UNAFFIRED = '1';
        public const char COMPARED = '0';
        public const char UNCOMPARED = '1';
    }


    /// <summary>
    /// MatchType Field
    /// </summary>/
    public sealed class MatchType : StringField
    {
        public const int TAG = 574;

        public MatchType()
            : base(Tags.MatchType) { }
        public MatchType(string val)
            : base(Tags.MatchType, val) { }


        // Field Enumerations
        public const string ONE_PARTY_TRADE_REPORT = "1";
        public const string TWO_PARTY_TRADE_REPORT = "2";
        public const string CONFIRMED_TRADE_REPORT = "3";
        public const string AUTO_MATCH = "4";
        public const string CROSS_AUCTION = "5";
        public const string COUNTER_ORDER_SELECTION = "6";
        public const string CALL_AUCTION = "7";
        public const string ISSUING_BUY_BACK_AUCTION = "8";
        public const string ACT_ACCEPTED_TRADE = "M3";
        public const string ACT_DEFAULT_TRADE = "M4";
        public const string ACT_DEFAULT_AFTER_M2 = "M5";
        public const string ACT_M6_MATCH = "M6";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_AND_EXECUTION_TIME = "A1";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES = "A2";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AND_EXECUTION_TIME = "A3";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES = "A4";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME = "A5";
        public const string COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST_ACCEPTS_PAIR_OFFS = "AQ";
        public const string SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIED = "S1";
        public const string SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S2";
        public const string SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S3";
        public const string SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S4";
        public const string SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED = "S5";
        public const string EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_TIMES_ACT_M1_MATCH = "M1";
        public const string SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH = "M2";
        public const string OCS_LOCKED_IN_NON_ACT = "MT";
        public const string SYSTEMATIC_INTERNALISER = "9";
        public const string AUTO_MATCH_WITH_LAST_LOOK = "10";
        public const string CROSS_AUCTION_WITH_LAST_LOOK = "11";
        public const string ONE_PARTY_PRIVATELY_NEGOTIATED_TRADE_REPORT = "60";
        public const string TWO_PARTY_PRIVATELY_NEGOTIATED_TRADE_REPORT = "61";
        public const string CONTINUOUS_AUTO_MATCH = "62";
        public const string CROSS_AUCTION_63 = "63";
        public const string COUNTER_ORDER_SELECTION_64 = "64";
        public const string CALL_AUCTION_65 = "65";
        public const string CROSS_AUCTION_5 = "5";
        public const string COUNTER_ORDER_SELECTION_6 = "6";
        public const string CALL_AUCTION_7 = "7";
        public const string EXACT_MATCH_PLUS_FOUR_BADGES_AND_EXECUTION_TIME = "A1";
        public const string EXACT_MATCH_PLUS_FOUR_BADGES = "A2";
        public const string EXACT_MATCH_PLUS_TWO_BADGES_AND_EXECUTION_TIME = "A3";
        public const string EXACT_MATCH_PLUS_TWO_BADGES = "A4";
        public const string EXACT_MATCH_PLUS_EXECUTION_TIME = "A5";
        public const string COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST_ACCEPTS = "AQ";
        public const string SUMMARIZED_MATCH_USING_A1 = "S1";
        public const string SUMMARIZED_MATCH_USING_A2 = "S2";
        public const string SUMMARIZED_MATCH_USING_A3 = "S3";
        public const string SUMMARIZED_MATCH_USING_A4 = "S4";
        public const string SUMMARIZED_MATCH_USING_A5 = "S5";
        public const string EXACT_MATCH_MINUS_BADGES_AND_EXECUTION_TIME = "M1";
        public const string SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES = "M2";
        public const string OCS_LOCKED_IN = "MT";
        public const string ACT_M1_MATCH = "M1";
        public const string ACT_M2_MATCH = "M2";
        public const string NON_ACT = "MT";
    }


    /// <summary>
    /// OddLot Field
    /// </summary>/
    public sealed class OddLot : BooleanField
    {
        public const int TAG = 575;

        public OddLot()
            : base(Tags.OddLot) { }
        public OddLot(Boolean val)
            : base(Tags.OddLot, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// NoClearingInstructions Field
    /// </summary>/
    public sealed class NoClearingInstructions : IntField
    {
        public const int TAG = 576;

        public NoClearingInstructions()
            : base(Tags.NoClearingInstructions) { }
        public NoClearingInstructions(int val)
            : base(Tags.NoClearingInstructions, val) { }

    }


    /// <summary>
    /// ClearingInstruction Field
    /// </summary>/
    public sealed class ClearingInstruction : IntField
    {
        public const int TAG = 577;

        public ClearingInstruction()
            : base(Tags.ClearingInstruction) { }
        public ClearingInstruction(int val)
            : base(Tags.ClearingInstruction, val) { }


        // Field Enumerations
        public const int PROCESS_NORMALLY = 0;
        public const int EXCLUDE_FROM_ALL_NETTING = 1;
        public const int BILATERAL_NETTING_ONLY = 2;
        public const int EX_CLEARING = 3;
        public const int SPECIAL_TRADE = 4;
        public const int MULTILATERAL_NETTING = 5;
        public const int CLEAR_AGAINST_CENTRAL_COUNTERPARTY = 6;
        public const int EXCLUDE_FROM_CENTRAL_COUNTERPARTY = 7;
        public const int MANUAL_MODE = 8;
        public const int AUTOMATIC_POSTING_MODE = 9;
        public const int AUTOMATIC_GIVE_UP_MODE = 10;
        public const int QUALIFIED_SERVICE_REPRESENTATIVE_QSR = 11;
        public const int CUSTOMER_TRADE = 12;
        public const int SELF_CLEARING = 13;
        public const int BUY_IN = 14;
        public const int QUALIFIED_SERVICE_REPRESENTATIVE = 11;
    }


    /// <summary>
    /// TradeInputSource Field
    /// </summary>/
    public sealed class TradeInputSource : StringField
    {
        public const int TAG = 578;

        public TradeInputSource()
            : base(Tags.TradeInputSource) { }
        public TradeInputSource(string val)
            : base(Tags.TradeInputSource, val) { }

    }


    /// <summary>
    /// TradeInputDevice Field
    /// </summary>/
    public sealed class TradeInputDevice : StringField
    {
        public const int TAG = 579;

        public TradeInputDevice()
            : base(Tags.TradeInputDevice) { }
        public TradeInputDevice(string val)
            : base(Tags.TradeInputDevice, val) { }

    }


    /// <summary>
    /// NoDates Field
    /// </summary>/
    public sealed class NoDates : IntField
    {
        public const int TAG = 580;

        public NoDates()
            : base(Tags.NoDates) { }
        public NoDates(int val)
            : base(Tags.NoDates, val) { }

    }


    /// <summary>
    /// AccountType Field
    /// </summary>/
    public sealed class AccountType : IntField
    {
        public const int TAG = 581;

        public AccountType()
            : base(Tags.AccountType) { }
        public AccountType(int val)
            : base(Tags.AccountType, val) { }


        // Field Enumerations
        public const int ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_THE_BOOKS = 1;
        public const int ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS = 2;
        public const int HOUSE_TRADER = 3;
        public const int FLOOR_TRADER = 4;
        public const int ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED = 6;
        public const int ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED = 7;
        public const int JOINT_BACK_OFFICE_ACCOUNT = 8;
        public const int EQUITIES_SPECIALIST = 9;
        public const int OPTIONS_MARKET_MAKER = 10;
        public const int OPTIONS_FIRM_ACCOUNT = 11;
        public const int ACCOUNT_FOR_CUSTOMER_AND_NON_CUSTOMER_ORDERS = 12;
        public const int ACCOUNT_FOR_ORDERS_FROM_MULTIPLE_CUSTOMERS = 13;
        public const int ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_BOOKS = 1;
        public const int JOINT_BACKOFFICE_ACCOUNT = 8;
    }


    /// <summary>
    /// CustOrderCapacity Field
    /// </summary>/
    public sealed class CustOrderCapacity : IntField
    {
        public const int TAG = 582;

        public CustOrderCapacity()
            : base(Tags.CustOrderCapacity) { }
        public CustOrderCapacity(int val)
            : base(Tags.CustOrderCapacity, val) { }


        // Field Enumerations
        public const int MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT = 1;
        public const int CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT = 2;
        public const int MEMBER_TRADING_FOR_ANOTHER_MEMBER = 3;
        public const int ALL_OTHER = 4;
        public const int RETAIL_CUSTOMER = 5;
    }


    /// <summary>
    /// ClOrdLinkID Field
    /// </summary>/
    public sealed class ClOrdLinkID : StringField
    {
        public const int TAG = 583;

        public ClOrdLinkID()
            : base(Tags.ClOrdLinkID) { }
        public ClOrdLinkID(string val)
            : base(Tags.ClOrdLinkID, val) { }

    }


    /// <summary>
    /// MassStatusReqID Field
    /// </summary>/
    public sealed class MassStatusReqID : StringField
    {
        public const int TAG = 584;

        public MassStatusReqID()
            : base(Tags.MassStatusReqID) { }
        public MassStatusReqID(string val)
            : base(Tags.MassStatusReqID, val) { }

    }


    /// <summary>
    /// MassStatusReqType Field
    /// </summary>/
    public sealed class MassStatusReqType : IntField
    {
        public const int TAG = 585;

        public MassStatusReqType()
            : base(Tags.MassStatusReqType) { }
        public MassStatusReqType(int val)
            : base(Tags.MassStatusReqType, val) { }


        // Field Enumerations
        public const int STATUS_FOR_ORDERS_FOR_A_SECURITY = 1;
        public const int STATUS_FOR_ORDERS_FOR_AN_UNDERLYING_SECURITY = 2;
        public const int STATUS_FOR_ORDERS_FOR_A_PRODUCT = 3;
        public const int STATUS_FOR_ORDERS_FOR_A_CFICODE = 4;
        public const int STATUS_FOR_ORDERS_FOR_A_SECURITYTYPE = 5;
        public const int STATUS_FOR_ORDERS_FOR_A_TRADING_SESSION = 6;
        public const int STATUS_FOR_ALL_ORDERS = 7;
        public const int STATUS_FOR_ORDERS_FOR_A_PARTYID = 8;
        public const int STATUS_FOR_SECURITY_ISSUER = 9;
        public const int STATUS_FOR_ISSUER_OF_UNDERLYING_SECURITY = 10;
    }


    /// <summary>
    /// OrigOrdModTime Field
    /// </summary>/
    public sealed class OrigOrdModTime : DateTimeField
    {
        public const int TAG = 586;

        public OrigOrdModTime()
            : base(Tags.OrigOrdModTime) { }
        public OrigOrdModTime(DateTime val)
            : base(Tags.OrigOrdModTime, val) { }
        public OrigOrdModTime(DateTime val, bool showMilliseconds)
            : base(Tags.OrigOrdModTime, val, showMilliseconds) { }
        public OrigOrdModTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.OrigOrdModTime, val, precision) { }

    }


    /// <summary>
    /// LegSettlmntTyp Field
    /// </summary>/
    public sealed class LegSettlmntTyp : CharField
    {
        public const int TAG = 587;

        public LegSettlmntTyp()
            : base(Tags.LegSettlmntTyp) { }
        public LegSettlmntTyp(char val)
            : base(Tags.LegSettlmntTyp, val) { }

    }


    /// <summary>
    /// LegFutSettDate Field
    /// </summary>/
    public sealed class LegFutSettDate : StringField
    {
        public const int TAG = 588;

        public LegFutSettDate()
            : base(Tags.LegFutSettDate) { }
        public LegFutSettDate(string val)
            : base(Tags.LegFutSettDate, val) { }

    }


    /// <summary>
    /// DayBookingInst Field
    /// </summary>/
    public sealed class DayBookingInst : CharField
    {
        public const int TAG = 589;

        public DayBookingInst()
            : base(Tags.DayBookingInst) { }
        public DayBookingInst(char val)
            : base(Tags.DayBookingInst, val) { }


        // Field Enumerations
        public const char CAN_TRIGGER_BOOKING_WITHOUT_REFERENCE_TO_THE_ORDER_INITIATOR = '0';
        public const char SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING = '1';
        public const char ACCUMULATE = '2';
    }


    /// <summary>
    /// BookingUnit Field
    /// </summary>/
    public sealed class BookingUnit : CharField
    {
        public const int TAG = 590;

        public BookingUnit()
            : base(Tags.BookingUnit) { }
        public BookingUnit(char val)
            : base(Tags.BookingUnit, val) { }


        // Field Enumerations
        public const char EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT = '0';
        public const char AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER_AND_BOOK_ONE_TRADE_PER_ORDER = '1';
        public const char AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL_SIDE_AND_SETTLEMENT_DATE = '2';
    }


    /// <summary>
    /// PreallocMethod Field
    /// </summary>/
    public sealed class PreallocMethod : CharField
    {
        public const int TAG = 591;

        public PreallocMethod()
            : base(Tags.PreallocMethod) { }
        public PreallocMethod(char val)
            : base(Tags.PreallocMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = '0';
        public const char DO_NOT_PRO_RATA = '1';
    }


    /// <summary>
    /// UnderlyingCountryOfIssue Field
    /// </summary>/
    public sealed class UnderlyingCountryOfIssue : StringField
    {
        public const int TAG = 592;

        public UnderlyingCountryOfIssue()
            : base(Tags.UnderlyingCountryOfIssue) { }
        public UnderlyingCountryOfIssue(string val)
            : base(Tags.UnderlyingCountryOfIssue, val) { }

    }


    /// <summary>
    /// UnderlyingStateOrProvinceOfIssue Field
    /// </summary>/
    public sealed class UnderlyingStateOrProvinceOfIssue : StringField
    {
        public const int TAG = 593;

        public UnderlyingStateOrProvinceOfIssue()
            : base(Tags.UnderlyingStateOrProvinceOfIssue) { }
        public UnderlyingStateOrProvinceOfIssue(string val)
            : base(Tags.UnderlyingStateOrProvinceOfIssue, val) { }

    }


    /// <summary>
    /// UnderlyingLocaleOfIssue Field
    /// </summary>/
    public sealed class UnderlyingLocaleOfIssue : StringField
    {
        public const int TAG = 594;

        public UnderlyingLocaleOfIssue()
            : base(Tags.UnderlyingLocaleOfIssue) { }
        public UnderlyingLocaleOfIssue(string val)
            : base(Tags.UnderlyingLocaleOfIssue, val) { }

    }


    /// <summary>
    /// UnderlyingInstrRegistry Field
    /// </summary>/
    public sealed class UnderlyingInstrRegistry : StringField
    {
        public const int TAG = 595;

        public UnderlyingInstrRegistry()
            : base(Tags.UnderlyingInstrRegistry) { }
        public UnderlyingInstrRegistry(string val)
            : base(Tags.UnderlyingInstrRegistry, val) { }

    }


    /// <summary>
    /// LegCountryOfIssue Field
    /// </summary>/
    public sealed class LegCountryOfIssue : StringField
    {
        public const int TAG = 596;

        public LegCountryOfIssue()
            : base(Tags.LegCountryOfIssue) { }
        public LegCountryOfIssue(string val)
            : base(Tags.LegCountryOfIssue, val) { }

    }


    /// <summary>
    /// LegStateOrProvinceOfIssue Field
    /// </summary>/
    public sealed class LegStateOrProvinceOfIssue : StringField
    {
        public const int TAG = 597;

        public LegStateOrProvinceOfIssue()
            : base(Tags.LegStateOrProvinceOfIssue) { }
        public LegStateOrProvinceOfIssue(string val)
            : base(Tags.LegStateOrProvinceOfIssue, val) { }

    }


    /// <summary>
    /// LegLocaleOfIssue Field
    /// </summary>/
    public sealed class LegLocaleOfIssue : StringField
    {
        public const int TAG = 598;

        public LegLocaleOfIssue()
            : base(Tags.LegLocaleOfIssue) { }
        public LegLocaleOfIssue(string val)
            : base(Tags.LegLocaleOfIssue, val) { }

    }


    /// <summary>
    /// LegInstrRegistry Field
    /// </summary>/
    public sealed class LegInstrRegistry : StringField
    {
        public const int TAG = 599;

        public LegInstrRegistry()
            : base(Tags.LegInstrRegistry) { }
        public LegInstrRegistry(string val)
            : base(Tags.LegInstrRegistry, val) { }

    }


    /// <summary>
    /// LegSymbol Field
    /// </summary>/
    public sealed class LegSymbol : StringField
    {
        public const int TAG = 600;

        public LegSymbol()
            : base(Tags.LegSymbol) { }
        public LegSymbol(string val)
            : base(Tags.LegSymbol, val) { }

    }


    /// <summary>
    /// LegSymbolSfx Field
    /// </summary>/
    public sealed class LegSymbolSfx : StringField
    {
        public const int TAG = 601;

        public LegSymbolSfx()
            : base(Tags.LegSymbolSfx) { }
        public LegSymbolSfx(string val)
            : base(Tags.LegSymbolSfx, val) { }


        // Field Enumerations
        public const string EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = "CD";
        public const string WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN = "WI";
    }


    /// <summary>
    /// LegSecurityID Field
    /// </summary>/
    public sealed class LegSecurityID : StringField
    {
        public const int TAG = 602;

        public LegSecurityID()
            : base(Tags.LegSecurityID) { }
        public LegSecurityID(string val)
            : base(Tags.LegSecurityID, val) { }

    }


    /// <summary>
    /// LegSecurityIDSource Field
    /// </summary>/
    public sealed class LegSecurityIDSource : StringField
    {
        public const int TAG = 603;

        public LegSecurityIDSource()
            : base(Tags.LegSecurityIDSource) { }
        public LegSecurityIDSource(string val)
            : base(Tags.LegSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// NoLegSecurityAltID Field
    /// </summary>/
    public sealed class NoLegSecurityAltID : IntField
    {
        public const int TAG = 604;

        public NoLegSecurityAltID()
            : base(Tags.NoLegSecurityAltID) { }
        public NoLegSecurityAltID(int val)
            : base(Tags.NoLegSecurityAltID, val) { }

    }


    /// <summary>
    /// LegSecurityAltID Field
    /// </summary>/
    public sealed class LegSecurityAltID : StringField
    {
        public const int TAG = 605;

        public LegSecurityAltID()
            : base(Tags.LegSecurityAltID) { }
        public LegSecurityAltID(string val)
            : base(Tags.LegSecurityAltID, val) { }

    }


    /// <summary>
    /// LegSecurityAltIDSource Field
    /// </summary>/
    public sealed class LegSecurityAltIDSource : StringField
    {
        public const int TAG = 606;

        public LegSecurityAltIDSource()
            : base(Tags.LegSecurityAltIDSource) { }
        public LegSecurityAltIDSource(string val)
            : base(Tags.LegSecurityAltIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegProduct Field
    /// </summary>/
    public sealed class LegProduct : IntField
    {
        public const int TAG = 607;

        public LegProduct()
            : base(Tags.LegProduct) { }
        public LegProduct(int val)
            : base(Tags.LegProduct, val) { }


        // Field Enumerations
        public const int AGENCY = 1;
        public const int COMMODITY = 2;
        public const int CORPORATE = 3;
        public const int CURRENCY = 4;
        public const int EQUITY = 5;
        public const int GOVERNMENT = 6;
        public const int INDEX = 7;
        public const int LOAN = 8;
        public const int MONEYMARKET = 9;
        public const int MORTGAGE = 10;
        public const int MUNICIPAL = 11;
        public const int OTHER = 12;
        public const int FINANCING = 13;
    }


    /// <summary>
    /// LegCFICode Field
    /// </summary>/
    public sealed class LegCFICode : StringField
    {
        public const int TAG = 608;

        public LegCFICode()
            : base(Tags.LegCFICode) { }
        public LegCFICode(string val)
            : base(Tags.LegCFICode, val) { }

    }


    /// <summary>
    /// LegSecurityType Field
    /// </summary>/
    public sealed class LegSecurityType : StringField
    {
        public const int TAG = 609;

        public LegSecurityType()
            : base(Tags.LegSecurityType) { }
        public LegSecurityType(string val)
            : base(Tags.LegSecurityType, val) { }


        // Field Enumerations
        public const string US_TREASURY_NOTE_UST = "UST";
        public const string US_TREASURY_BILL_USTB = "USTB";
        public const string EURO_SUPRANATIONAL_COUPONS = "EUSUPRA";
        public const string FEDERAL_AGENCY_COUPON = "FAC";
        public const string FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN";
        public const string PRIVATE_EXPORT_FUNDING = "PEF";
        public const string USD_SUPRANATIONAL_COUPONS = "SUPRA";
        public const string CORPORATE_BOND = "CORP";
        public const string CORPORATE_PRIVATE_PLACEMENT = "CPP";
        public const string CONVERTIBLE_BOND = "CB";
        public const string DUAL_CURRENCY = "DUAL";
        public const string EURO_CORPORATE_BOND = "EUCORP";
        public const string EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN";
        public const string US_CORPORATE_FLOATING_RATE_NOTES = "FRN";
        public const string INDEXED_LINKED = "XLINKD";
        public const string STRUCTURED_NOTES = "STRUCT";
        public const string YANKEE_CORPORATE_BOND = "YANK";
        public const string FOREIGN_EXCHANGE_CONTRACT = "FOR";
        public const string CREDIT_DEFAULT_SWAP = "CDS";
        public const string FUTURE = "FUT";
        public const string OPTION = "OPT";
        public const string OPTIONS_ON_FUTURES = "OOF";
        public const string OPTIONS_ON_PHYSICAL = "OOP";
        public const string INTEREST_RATE_SWAP = "IRS";
        public const string OPTIONS_ON_COMBO = "OOC";
        public const string COMMON_STOCK = "CS";
        public const string PREFERRED_STOCK = "PS";
        public const string REPURCHASE = "REPO";
        public const string FORWARD = "FORWARD";
        public const string BUY_SELLBACK = "BUYSELL";
        public const string SECURITIES_LOAN = "SECLOAN";
        public const string SECURITIES_PLEDGE = "SECPLEDGE";
        public const string BRADY_BOND = "BRADY";
        public const string CANADIAN_TREASURY_NOTES = "CAN";
        public const string CANADIAN_TREASURY_BILLS = "CTB";
        public const string EURO_SOVEREIGNS = "EUSOV";
        public const string CANADIAN_PROVINCIAL_BONDS = "PROV";
        public const string TREASURY_BILL = "TB";
        public const string US_TREASURY_BOND = "TBOND";
        public const string INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT";
        public const string US_TREASURY_BILL_TBILL = "TBILL";
        public const string TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS";
        public const string PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL";
        public const string PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN";
        public const string US_TREASURY_NOTE_TNOTE = "TNOTE";
        public const string TERM_LOAN = "TERM";
        public const string REVOLVER_LOAN = "RVLV";
        public const string REVOLVER_TERM_LOAN = "RVLVTRM";
        public const string BRIDGE_LOAN = "BRIDGE";
        public const string LETTER_OF_CREDIT = "LOFC";
        public const string SWING_LINE_FACILITY = "SWING";
        public const string DEBTOR_IN_POSSESSION = "DINP";
        public const string DEFAULTED = "DEFLTED";
        public const string WITHDRAWN = "WITHDRN";
        public const string REPLACED = "REPLACD";
        public const string MATURED = "MATURED";
        public const string AMENDED_RESTATED = "AMENDED";
        public const string RETIRED = "RETIRED";
        public const string BANKERS_ACCEPTANCE = "BA";
        public const string BANK_DEPOSITORY_NOTE = "BDN";
        public const string BANK_NOTES = "BN";
        public const string BILL_OF_EXCHANGES = "BOX";
        public const string CANADIAN_MONEY_MARKETS = "CAMM";
        public const string CERTIFICATE_OF_DEPOSIT = "CD";
        public const string CALL_LOANS = "CL";
        public const string COMMERCIAL_PAPER = "CP";
        public const string DEPOSIT_NOTES = "DN";
        public const string EURO_CERTIFICATE_OF_DEPOSIT = "EUCD";
        public const string EURO_COMMERCIAL_PAPER = "EUCP";
        public const string LIQUIDITY_NOTE = "LQN";
        public const string MEDIUM_TERM_NOTES = "MTN";
        public const string OVERNIGHT = "ONITE";
        public const string PROMISSORY_NOTE = "PN";
        public const string SHORT_TERM_LOAN_NOTE = "STN";
        public const string PLAZOS_FIJOS = "PZFJ";
        public const string SECURED_LIQUIDITY_NOTE = "SLQN";
        public const string TIME_DEPOSIT = "TD";
        public const string TERM_LIQUIDITY_NOTE = "TLQN";
        public const string EXTENDED_COMM_NOTE = "XCN";
        public const string YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD";
        public const string ASSET_BACKED_SECURITIES = "ABS";
        public const string CANADIAN_MORTGAGE_BONDS = "CMB";
        public const string CORP_MORTGAGE_BACKED_SECURITIES = "CMBS";
        public const string COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO";
        public const string IOETTE_MORTGAGE = "IET";
        public const string MORTGAGE_BACKED_SECURITIES = "MBS";
        public const string MORTGAGE_INTEREST_ONLY = "MIO";
        public const string MORTGAGE_PRINCIPAL_ONLY = "MPO";
        public const string MORTGAGE_PRIVATE_PLACEMENT = "MPP";
        public const string MISCELLANEOUS_PASS_THROUGH = "MPT";
        public const string PFANDBRIEFE = "PFAND";
        public const string TO_BE_ANNOUNCED = "TBA";
        public const string OTHER_ANTICIPATION_NOTES = "AN";
        public const string CERTIFICATE_OF_OBLIGATION = "COFO";
        public const string CERTIFICATE_OF_PARTICIPATION = "COFP";
        public const string GENERAL_OBLIGATION_BONDS = "GO";
        public const string MANDATORY_TENDER = "MT";
        public const string REVENUE_ANTICIPATION_NOTE = "RAN";
        public const string REVENUE_BONDS = "REV";
        public const string SPECIAL_ASSESSMENT = "SPCLA";
        public const string SPECIAL_OBLIGATION = "SPCLO";
        public const string SPECIAL_TAX = "SPCLT";
        public const string TAX_ANTICIPATION_NOTE = "TAN";
        public const string TAX_ALLOCATION = "TAXA";
        public const string TAX_EXEMPT_COMMERCIAL_PAPER = "TECP";
        public const string TAXABLE_MUNICIPAL_CP = "TMCP";
        public const string TAX_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string VARIABLE_RATE_DEMAND_NOTE = "VRDN";
        public const string WARRANT = "WAR";
        public const string MUTUAL_FUND = "MF";
        public const string MULTILEG_INSTRUMENT = "MLEG";
        public const string NO_SECURITY_TYPE = "NONE";
        public const string WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?";
        public const string CASH = "CASH";
        public const string NON_DELIVERABLE_FORWARD = "FXNDF";
        public const string FX_SPOT = "FXSPOT";
        public const string FX_FORWARD = "FXFWD";
        public const string FX_SWAP = "FXSWAP";
        public const string DELIVERY_VERSUS_PLEDGE = "DVPLDG";
        public const string COMMODITY_SWAP = "CMDTYSWAP";
        public const string SWAP_OPTION = "SWAPTION";
        public const string DERIVATIVE_FORWARD = "FWD";
        public const string TOTAL_RETURN_SWAP = "TRS";
        public const string CAP = "CAP";
        public const string COLLAR = "CLLR";
        public const string EXOTIC = "EXOTIC";
        public const string FLOOR = "FLR";
        public const string FORWARD_RATE_AGREEMENT = "FRA";
        public const string LOAN_LEASE = "LOANLEASE";
        public const string SPOT_FORWARD = "SPOTFWD";
        public const string TRANSMISSION = "XMISSION";
        public const string GENERAL_TYPE_FOR_A_CONTRACT_BASED_ON_AN_ESTABLISHED_INDEX = "INDEX";
        public const string COLLATERAL_BASKET = "COLLBSKT";
        public const string BOND_BASKET = "BDBSKT";
        public const string CONTRACT_FOR_DIFFERENCE = "CFD";
        public const string CORRELATION_SWAP = "CRLTNSWAP";
        public const string DIVIDEND_SWAP = "DVDNDSWAP";
        public const string EQUITY_BASKET = "EQBSKT";
        public const string EQUITY_FORWARD = "EQFWD";
        public const string RETURN_SWAP = "RTRNSWAP";
        public const string VARIANCE_SWAP = "VARSWAP";
        public const string NON_DELIVERABLE_SWAP = "FXNDS";
        public const string PORTFOLIO_SWAP = "PRTFLIOSWAP";
        public const string FUTURES_ON_A_SWAP = "FUTSWAP";
        public const string FORWARDS_ON_A_SWAP = "FWDSWAP";
        public const string FORWARD_FREIGHT_AGREEMENT = "FWDFRTAGMT";
        public const string SPREAD_BETTING = "SPREADBET";
        public const string OTHER = "Other";
        public const string DEPOSITORY_RECEIPTS = "DR";
        public const string EXCHANGE_TRADED_COMMODITY = "ETC";
        public const string EXCHANGE_TRADED_NOTE = "ETN";
        public const string SECURITIZED_DERIVATIVE = "SECDERIV";
        public const string STRUCTURED_FINANCE_PRODUCT = "SFP";
        public const string MARGIN_LOAN = "MRGNLOAN";
    }


    /// <summary>
    /// LegMaturityMonthYear Field
    /// </summary>/
    public sealed class LegMaturityMonthYear : StringField
    {
        public const int TAG = 610;

        public LegMaturityMonthYear()
            : base(Tags.LegMaturityMonthYear) { }
        public LegMaturityMonthYear(string val)
            : base(Tags.LegMaturityMonthYear, val) { }

    }


    /// <summary>
    /// LegMaturityDate Field
    /// </summary>/
    public sealed class LegMaturityDate : StringField
    {
        public const int TAG = 611;

        public LegMaturityDate()
            : base(Tags.LegMaturityDate) { }
        public LegMaturityDate(string val)
            : base(Tags.LegMaturityDate, val) { }

    }


    /// <summary>
    /// LegStrikePrice Field
    /// </summary>/
    public sealed class LegStrikePrice : DecimalField
    {
        public const int TAG = 612;

        public LegStrikePrice()
            : base(Tags.LegStrikePrice) { }
        public LegStrikePrice(Decimal val)
            : base(Tags.LegStrikePrice, val) { }

    }


    /// <summary>
    /// LegOptAttribute Field
    /// </summary>/
    public sealed class LegOptAttribute : CharField
    {
        public const int TAG = 613;

        public LegOptAttribute()
            : base(Tags.LegOptAttribute) { }
        public LegOptAttribute(char val)
            : base(Tags.LegOptAttribute, val) { }

    }


    /// <summary>
    /// LegContractMultiplier Field
    /// </summary>/
    public sealed class LegContractMultiplier : DecimalField
    {
        public const int TAG = 614;

        public LegContractMultiplier()
            : base(Tags.LegContractMultiplier) { }
        public LegContractMultiplier(Decimal val)
            : base(Tags.LegContractMultiplier, val) { }

    }


    /// <summary>
    /// LegCouponRate Field
    /// </summary>/
    public sealed class LegCouponRate : DecimalField
    {
        public const int TAG = 615;

        public LegCouponRate()
            : base(Tags.LegCouponRate) { }
        public LegCouponRate(Decimal val)
            : base(Tags.LegCouponRate, val) { }

    }


    /// <summary>
    /// LegSecurityExchange Field
    /// </summary>/
    public sealed class LegSecurityExchange : StringField
    {
        public const int TAG = 616;

        public LegSecurityExchange()
            : base(Tags.LegSecurityExchange) { }
        public LegSecurityExchange(string val)
            : base(Tags.LegSecurityExchange, val) { }

    }


    /// <summary>
    /// LegIssuer Field
    /// </summary>/
    public sealed class LegIssuer : StringField
    {
        public const int TAG = 617;

        public LegIssuer()
            : base(Tags.LegIssuer) { }
        public LegIssuer(string val)
            : base(Tags.LegIssuer, val) { }

    }


    /// <summary>
    /// EncodedLegIssuerLen Field
    /// </summary>/
    public sealed class EncodedLegIssuerLen : IntField
    {
        public const int TAG = 618;

        public EncodedLegIssuerLen()
            : base(Tags.EncodedLegIssuerLen) { }
        public EncodedLegIssuerLen(int val)
            : base(Tags.EncodedLegIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedLegIssuer Field
    /// </summary>/
    public sealed class EncodedLegIssuer : StringField
    {
        public const int TAG = 619;

        public EncodedLegIssuer()
            : base(Tags.EncodedLegIssuer) { }
        public EncodedLegIssuer(string val)
            : base(Tags.EncodedLegIssuer, val) { }

    }


    /// <summary>
    /// LegSecurityDesc Field
    /// </summary>/
    public sealed class LegSecurityDesc : StringField
    {
        public const int TAG = 620;

        public LegSecurityDesc()
            : base(Tags.LegSecurityDesc) { }
        public LegSecurityDesc(string val)
            : base(Tags.LegSecurityDesc, val) { }

    }


    /// <summary>
    /// EncodedLegSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedLegSecurityDescLen : IntField
    {
        public const int TAG = 621;

        public EncodedLegSecurityDescLen()
            : base(Tags.EncodedLegSecurityDescLen) { }
        public EncodedLegSecurityDescLen(int val)
            : base(Tags.EncodedLegSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegSecurityDesc Field
    /// </summary>/
    public sealed class EncodedLegSecurityDesc : StringField
    {
        public const int TAG = 622;

        public EncodedLegSecurityDesc()
            : base(Tags.EncodedLegSecurityDesc) { }
        public EncodedLegSecurityDesc(string val)
            : base(Tags.EncodedLegSecurityDesc, val) { }

    }


    /// <summary>
    /// LegRatioQty Field
    /// </summary>/
    public sealed class LegRatioQty : DecimalField
    {
        public const int TAG = 623;

        public LegRatioQty()
            : base(Tags.LegRatioQty) { }
        public LegRatioQty(Decimal val)
            : base(Tags.LegRatioQty, val) { }

    }


    /// <summary>
    /// LegSide Field
    /// </summary>/
    public sealed class LegSide : CharField
    {
        public const int TAG = 624;

        public LegSide()
            : base(Tags.LegSide) { }
        public LegSide(char val)
            : base(Tags.LegSide, val) { }


        // Field Enumerations
        public const char BUY = '1';
        public const char SELL = '2';
        public const char BUY_MINUS = '3';
        public const char SELL_PLUS = '4';
        public const char SELL_SHORT = '5';
        public const char SELL_SHORT_EXEMPT = '6';
        public const char UNDISCLOSED = '7';
        public const char CROSS = '8';
        public const char CROSS_SHORT = '9';
        public const char CROSS_SHORT_EXEMPT = 'A';
        public const char AS_DEFINED = 'B';
        public const char OPPOSITE = 'C';
        public const char SUBSCRIBE = 'D';
        public const char REDEEM = 'E';
        public const char LEND = 'F';
        public const char BORROW = 'G';
        public const char SELL_UNDISCLOSED = 'H';
    }


    /// <summary>
    /// TradingSessionSubID Field
    /// </summary>/
    public sealed class TradingSessionSubID : StringField
    {
        public const int TAG = 625;

        public TradingSessionSubID()
            : base(Tags.TradingSessionSubID) { }
        public TradingSessionSubID(string val)
            : base(Tags.TradingSessionSubID, val) { }


        // Field Enumerations
        public const string PRE_TRADING = "1";
        public const string OPENING_OR_OPENING_AUCTION = "2";
        public const string VAL_3 = "3";
        public const string CLOSING_OR_CLOSING_AUCTION = "4";
        public const string POST_TRADING = "5";
        public const string SCHEDULED_INTRADAY_AUCTION = "6";
        public const string QUIESCENT = "7";
        public const string ANY_AUCTION = "8";
        public const string UNSCHEDULED_INTRADAY_AUCTION = "9";
        public const string OUT_OF_MAIN_SESSION_TRADING = "10";
        public const string PRIVATE_AUCTION = "11";
        public const string PUBLIC_AUCTION = "12";
        public const string GROUP_AUCTION = "13";
        public const string INTRADAY_AUCTION = "6";
    }


    /// <summary>
    /// AllocType Field
    /// </summary>/
    public sealed class AllocType : IntField
    {
        public const int TAG = 626;

        public AllocType()
            : base(Tags.AllocType) { }
        public AllocType(int val)
            : base(Tags.AllocType, val) { }


        // Field Enumerations
        public const int CALCULATED = 1;
        public const int PRELIMINARY = 2;
        public const int SELLSIDE_CALCULATED_USING_PRELIMINARY = 3;
        public const int SELLSIDE_CALCULATEDD_WITHOUT_PRELIMINARY = 4;
        public const int READY_TO_BOOK_SINGLE_ORDER = 5;
        public const int BUYSIDE_READY_TO_BOOK = 6;
        public const int WAREHOUSE_INSTRUCTION = 7;
        public const int REQUEST_TO_INTERMEDIARY = 8;
        public const int ACCEPT = 9;
        public const int REJECT = 10;
        public const int ACCEPT_PENDING = 11;
        public const int INCOMPLETE_GROUP = 12;
        public const int COMPLETE_GROUP = 13;
        public const int REVERSAL_PENDING = 14;
        public const int REOPEN_GROUP = 15;
        public const int CANCEL_GROUP = 16;
        public const int GIVE_UP = 17;
        public const int TAKE_UP = 18;
        public const int REFUSE_TAKE_UP = 19;
        public const int INITIATE_REVERSAL = 20;
        public const int REVERSE = 21;
        public const int REFUSE_REVERSAL = 22;
        public const int SUB_ALLOCATION_GIVE_UP = 23;
        public const int APPROVE_GIVE_UP = 24;
        public const int APPROVE_TAKE_UP = 25;
        public const int NOTIONAL_VALUE_AVERAGE_PRICE_GROUP_ALLOCATION = 26;
        public const int SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY = 4;
        public const int READY_TO_BOOK = 5;
        public const int BUYSIDE_CALCULATED = 1;
        public const int BUYSIDE_PRELIMINARY = 2;
        public const int BUYSIDE_READY_TO_BOOK_SINGLE_ORDER = 5;
        public const int BUYSIDE_READY_TO_BOOK_COMBINED_SET_OF_ORDERS = 6;
    }


    /// <summary>
    /// NoHops Field
    /// </summary>/
    public sealed class NoHops : IntField
    {
        public const int TAG = 627;

        public NoHops()
            : base(Tags.NoHops) { }
        public NoHops(int val)
            : base(Tags.NoHops, val) { }

    }


    /// <summary>
    /// HopCompID Field
    /// </summary>/
    public sealed class HopCompID : StringField
    {
        public const int TAG = 628;

        public HopCompID()
            : base(Tags.HopCompID) { }
        public HopCompID(string val)
            : base(Tags.HopCompID, val) { }

    }


    /// <summary>
    /// HopSendingTime Field
    /// </summary>/
    public sealed class HopSendingTime : DateTimeField
    {
        public const int TAG = 629;

        public HopSendingTime()
            : base(Tags.HopSendingTime) { }
        public HopSendingTime(DateTime val)
            : base(Tags.HopSendingTime, val) { }
        public HopSendingTime(DateTime val, bool showMilliseconds)
            : base(Tags.HopSendingTime, val, showMilliseconds) { }
        public HopSendingTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.HopSendingTime, val, precision) { }

    }


    /// <summary>
    /// HopRefID Field
    /// </summary>/
    public sealed class HopRefID : IntField
    {
        public const int TAG = 630;

        public HopRefID()
            : base(Tags.HopRefID) { }
        public HopRefID(int val)
            : base(Tags.HopRefID, val) { }

    }


    /// <summary>
    /// MidPx Field
    /// </summary>/
    public sealed class MidPx : DecimalField
    {
        public const int TAG = 631;

        public MidPx()
            : base(Tags.MidPx) { }
        public MidPx(Decimal val)
            : base(Tags.MidPx, val) { }

    }


    /// <summary>
    /// BidYield Field
    /// </summary>/
    public sealed class BidYield : DecimalField
    {
        public const int TAG = 632;

        public BidYield()
            : base(Tags.BidYield) { }
        public BidYield(Decimal val)
            : base(Tags.BidYield, val) { }

    }


    /// <summary>
    /// MidYield Field
    /// </summary>/
    public sealed class MidYield : DecimalField
    {
        public const int TAG = 633;

        public MidYield()
            : base(Tags.MidYield) { }
        public MidYield(Decimal val)
            : base(Tags.MidYield, val) { }

    }


    /// <summary>
    /// OfferYield Field
    /// </summary>/
    public sealed class OfferYield : DecimalField
    {
        public const int TAG = 634;

        public OfferYield()
            : base(Tags.OfferYield) { }
        public OfferYield(Decimal val)
            : base(Tags.OfferYield, val) { }

    }


    /// <summary>
    /// ClearingFeeIndicator Field
    /// </summary>/
    public sealed class ClearingFeeIndicator : StringField
    {
        public const int TAG = 635;

        public ClearingFeeIndicator()
            : base(Tags.ClearingFeeIndicator) { }
        public ClearingFeeIndicator(string val)
            : base(Tags.ClearingFeeIndicator, val) { }


        // Field Enumerations
        public const string VAL_1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "1";
        public const string VAL_2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "2";
        public const string VAL_3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "3";
        public const string VAL_4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "4";
        public const string VAL_5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "5";
        public const string VAL_6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT = "9";
        public const string CBOE_MEMBER = "B";
        public const string NON_MEMBER_AND_CUSTOMER = "C";
        public const string EQUITY_MEMBER_AND_CLEARING_MEMBER = "E";
        public const string FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_BROKERS = "F";
        public const string VAL_106H_AND_106J_FIRMS = "H";
        public const string GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS = "I";
        public const string LESSEE_106F_EMPLOYEES = "L";
        public const string ALL_OTHER_OWNERSHIP_TYPES = "M";
        public const string FIRMS_106H_AND_106J = "H";
        public const string LESSEE_AND_106F_EMPLOYEES = "L";
    }


    /// <summary>
    /// WorkingIndicator Field
    /// </summary>/
    public sealed class WorkingIndicator : BooleanField
    {
        public const int TAG = 636;

        public WorkingIndicator()
            : base(Tags.WorkingIndicator) { }
        public WorkingIndicator(Boolean val)
            : base(Tags.WorkingIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// LegLastPx Field
    /// </summary>/
    public sealed class LegLastPx : DecimalField
    {
        public const int TAG = 637;

        public LegLastPx()
            : base(Tags.LegLastPx) { }
        public LegLastPx(Decimal val)
            : base(Tags.LegLastPx, val) { }

    }


    /// <summary>
    /// PriorityIndicator Field
    /// </summary>/
    public sealed class PriorityIndicator : IntField
    {
        public const int TAG = 638;

        public PriorityIndicator()
            : base(Tags.PriorityIndicator) { }
        public PriorityIndicator(int val)
            : base(Tags.PriorityIndicator, val) { }


        // Field Enumerations
        public const int PRIORITY_UNCHANGED = 0;
        public const int LOST_PRIORITY_AS_RESULT_OF_ORDER_CHANGE = 1;
    }


    /// <summary>
    /// PriceImprovement Field
    /// </summary>/
    public sealed class PriceImprovement : DecimalField
    {
        public const int TAG = 639;

        public PriceImprovement()
            : base(Tags.PriceImprovement) { }
        public PriceImprovement(Decimal val)
            : base(Tags.PriceImprovement, val) { }

    }


    /// <summary>
    /// Price2 Field
    /// </summary>/
    public sealed class Price2 : DecimalField
    {
        public const int TAG = 640;

        public Price2()
            : base(Tags.Price2) { }
        public Price2(Decimal val)
            : base(Tags.Price2, val) { }

    }


    /// <summary>
    /// LastForwardPoints2 Field
    /// </summary>/
    public sealed class LastForwardPoints2 : DecimalField
    {
        public const int TAG = 641;

        public LastForwardPoints2()
            : base(Tags.LastForwardPoints2) { }
        public LastForwardPoints2(Decimal val)
            : base(Tags.LastForwardPoints2, val) { }

    }


    /// <summary>
    /// BidForwardPoints2 Field
    /// </summary>/
    public sealed class BidForwardPoints2 : DecimalField
    {
        public const int TAG = 642;

        public BidForwardPoints2()
            : base(Tags.BidForwardPoints2) { }
        public BidForwardPoints2(Decimal val)
            : base(Tags.BidForwardPoints2, val) { }

    }


    /// <summary>
    /// OfferForwardPoints2 Field
    /// </summary>/
    public sealed class OfferForwardPoints2 : DecimalField
    {
        public const int TAG = 643;

        public OfferForwardPoints2()
            : base(Tags.OfferForwardPoints2) { }
        public OfferForwardPoints2(Decimal val)
            : base(Tags.OfferForwardPoints2, val) { }

    }


    /// <summary>
    /// RFQReqID Field
    /// </summary>/
    public sealed class RFQReqID : StringField
    {
        public const int TAG = 644;

        public RFQReqID()
            : base(Tags.RFQReqID) { }
        public RFQReqID(string val)
            : base(Tags.RFQReqID, val) { }

    }


    /// <summary>
    /// MktBidPx Field
    /// </summary>/
    public sealed class MktBidPx : DecimalField
    {
        public const int TAG = 645;

        public MktBidPx()
            : base(Tags.MktBidPx) { }
        public MktBidPx(Decimal val)
            : base(Tags.MktBidPx, val) { }

    }


    /// <summary>
    /// MktOfferPx Field
    /// </summary>/
    public sealed class MktOfferPx : DecimalField
    {
        public const int TAG = 646;

        public MktOfferPx()
            : base(Tags.MktOfferPx) { }
        public MktOfferPx(Decimal val)
            : base(Tags.MktOfferPx, val) { }

    }


    /// <summary>
    /// MinBidSize Field
    /// </summary>/
    public sealed class MinBidSize : DecimalField
    {
        public const int TAG = 647;

        public MinBidSize()
            : base(Tags.MinBidSize) { }
        public MinBidSize(Decimal val)
            : base(Tags.MinBidSize, val) { }

    }


    /// <summary>
    /// MinOfferSize Field
    /// </summary>/
    public sealed class MinOfferSize : DecimalField
    {
        public const int TAG = 648;

        public MinOfferSize()
            : base(Tags.MinOfferSize) { }
        public MinOfferSize(Decimal val)
            : base(Tags.MinOfferSize, val) { }

    }


    /// <summary>
    /// QuoteStatusReqID Field
    /// </summary>/
    public sealed class QuoteStatusReqID : StringField
    {
        public const int TAG = 649;

        public QuoteStatusReqID()
            : base(Tags.QuoteStatusReqID) { }
        public QuoteStatusReqID(string val)
            : base(Tags.QuoteStatusReqID, val) { }

    }


    /// <summary>
    /// LegalConfirm Field
    /// </summary>/
    public sealed class LegalConfirm : BooleanField
    {
        public const int TAG = 650;

        public LegalConfirm()
            : base(Tags.LegalConfirm) { }
        public LegalConfirm(Boolean val)
            : base(Tags.LegalConfirm, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// UnderlyingLastPx Field
    /// </summary>/
    public sealed class UnderlyingLastPx : DecimalField
    {
        public const int TAG = 651;

        public UnderlyingLastPx()
            : base(Tags.UnderlyingLastPx) { }
        public UnderlyingLastPx(Decimal val)
            : base(Tags.UnderlyingLastPx, val) { }

    }


    /// <summary>
    /// UnderlyingLastQty Field
    /// </summary>/
    public sealed class UnderlyingLastQty : DecimalField
    {
        public const int TAG = 652;

        public UnderlyingLastQty()
            : base(Tags.UnderlyingLastQty) { }
        public UnderlyingLastQty(Decimal val)
            : base(Tags.UnderlyingLastQty, val) { }

    }


    /// <summary>
    /// SecDefStatus Field
    /// </summary>/
    public sealed class SecDefStatus : IntField
    {
        public const int TAG = 653;

        public SecDefStatus()
            : base(Tags.SecDefStatus) { }
        public SecDefStatus(int val)
            : base(Tags.SecDefStatus, val) { }


        // Field Enumerations
        public const int PENDING_APPROVAL = 0;
        public const int APPROVED = 1;
        public const int REJECTED = 2;
        public const int UNAUTHORIZED_REQUEST = 3;
        public const int INVALID_DEFINITION_REQUEST = 4;
    }


    /// <summary>
    /// LegRefID Field
    /// </summary>/
    public sealed class LegRefID : StringField
    {
        public const int TAG = 654;

        public LegRefID()
            : base(Tags.LegRefID) { }
        public LegRefID(string val)
            : base(Tags.LegRefID, val) { }

    }


    /// <summary>
    /// ContraLegRefID Field
    /// </summary>/
    public sealed class ContraLegRefID : StringField
    {
        public const int TAG = 655;

        public ContraLegRefID()
            : base(Tags.ContraLegRefID) { }
        public ContraLegRefID(string val)
            : base(Tags.ContraLegRefID, val) { }

    }


    /// <summary>
    /// SettlCurrBidFxRate Field
    /// </summary>/
    public sealed class SettlCurrBidFxRate : DecimalField
    {
        public const int TAG = 656;

        public SettlCurrBidFxRate()
            : base(Tags.SettlCurrBidFxRate) { }
        public SettlCurrBidFxRate(Decimal val)
            : base(Tags.SettlCurrBidFxRate, val) { }

    }


    /// <summary>
    /// SettlCurrOfferFxRate Field
    /// </summary>/
    public sealed class SettlCurrOfferFxRate : DecimalField
    {
        public const int TAG = 657;

        public SettlCurrOfferFxRate()
            : base(Tags.SettlCurrOfferFxRate) { }
        public SettlCurrOfferFxRate(Decimal val)
            : base(Tags.SettlCurrOfferFxRate, val) { }

    }


    /// <summary>
    /// QuoteRequestRejectReason Field
    /// </summary>/
    public sealed class QuoteRequestRejectReason : IntField
    {
        public const int TAG = 658;

        public QuoteRequestRejectReason()
            : base(Tags.QuoteRequestRejectReason) { }
        public QuoteRequestRejectReason(int val)
            : base(Tags.QuoteRequestRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_SYMBOL = 1;
        public const int EXCHANGE = 2;
        public const int QUOTE_REQUEST_EXCEEDS_LIMIT = 3;
        public const int TOO_LATE_TO_ENTER = 4;
        public const int INVALID_PRICE = 5;
        public const int NOT_AUTHORIZED_TO_REQUEST_QUOTE = 6;
        public const int NO_MATCH_FOR_INQUIRY = 7;
        public const int NO_MARKET_FOR_INSTRUMENT = 8;
        public const int NO_INVENTORY = 9;
        public const int PASS = 10;
        public const int INSUFFICIENT_CREDIT = 11;
        public const int OTHER = 99;
        public const int EXCEEDED_CLIP_SIZE_LIMIT = 12;
        public const int EXCEEDED_MAXIMUM_NOTIONAL_ORDER_AMOUNT = 13;
        public const int EXCEEDED_DV01_PV01_LIMIT = 14;
        public const int EXCEEDED_CS01_LIMIT = 15;
        public const int EXCHANGE_CLOSED = 2;
    }


    /// <summary>
    /// SideComplianceID Field
    /// </summary>/
    public sealed class SideComplianceID : StringField
    {
        public const int TAG = 659;

        public SideComplianceID()
            : base(Tags.SideComplianceID) { }
        public SideComplianceID(string val)
            : base(Tags.SideComplianceID, val) { }

    }


    /// <summary>
    /// SettlType Field
    /// </summary>/
    public sealed class SettlType : StringField
    {
        public const int TAG = 63;

        public SettlType()
            : base(Tags.SettlType) { }
        public SettlType(string val)
            : base(Tags.SettlType, val) { }


        // Field Enumerations
        public const string REGULAR = "0";
        public const string CASH = "1";
        public const string NEXT_DAY = "2";
        public const string T_PLUS_2 = "3";
        public const string T_PLUS_3 = "4";
        public const string T_PLUS_4 = "5";
        public const string FUTURE = "6";
        public const string WHEN_AND_IF_ISSUED = "7";
        public const string SELLERS_OPTION = "8";
        public const string T_PLUS_5 = "9";
        public const string BROKEN_DATE = "B";
        public const string FX_SPOT_NEXT_SETTLEMENT = "C";
    }


    /// <summary>
    /// SettlDate Field
    /// </summary>/
    public sealed class SettlDate : StringField
    {
        public const int TAG = 64;

        public SettlDate()
            : base(Tags.SettlDate) { }
        public SettlDate(string val)
            : base(Tags.SettlDate, val) { }

    }


    /// <summary>
    /// AvgPxPrecision Field
    /// </summary>/
    public sealed class AvgPxPrecision : IntField
    {
        public const int TAG = 74;

        public AvgPxPrecision()
            : base(Tags.AvgPxPrecision) { }
        public AvgPxPrecision(int val)
            : base(Tags.AvgPxPrecision, val) { }

    }


    /// <summary>
    /// SettlDate2 Field
    /// </summary>/
    public sealed class SettlDate2 : StringField
    {
        public const int TAG = 193;

        public SettlDate2()
            : base(Tags.SettlDate2) { }
        public SettlDate2(string val)
            : base(Tags.SettlDate2, val) { }

    }


    /// <summary>
    /// PegOffsetValue Field
    /// </summary>/
    public sealed class PegOffsetValue : DecimalField
    {
        public const int TAG = 211;

        public PegOffsetValue()
            : base(Tags.PegOffsetValue) { }
        public PegOffsetValue(Decimal val)
            : base(Tags.PegOffsetValue, val) { }

    }


    /// <summary>
    /// OpenCloseSettlFlag Field
    /// </summary>/
    public sealed class OpenCloseSettlFlag : StringField
    {
        public const int TAG = 286;

        public OpenCloseSettlFlag()
            : base(Tags.OpenCloseSettlFlag) { }
        public OpenCloseSettlFlag(string val)
            : base(Tags.OpenCloseSettlFlag, val) { }


        // Field Enumerations
        public const string DAILY_OPEN = "0";
        public const string SESSION_OPEN = "1";
        public const string DELIVERY_SETTLEMENT_ENTRY = "2";
        public const string EXPECTED_ENTRY = "3";
        public const string ENTRY_FROM_PREVIOUS_BUSINESS_DAY = "4";
        public const string THEORETICAL_PRICE_VALUE = "5";
        public const string DAILY_OPEN_CLOSE_SETTLEMENT_ENTRY = "0";
        public const string SESSION_OPEN_CLOSE_SETTLEMENT_ENTRY = "1";
    }


    /// <summary>
    /// TotNoQuoteEntries Field
    /// </summary>/
    public sealed class TotNoQuoteEntries : IntField
    {
        public const int TAG = 304;

        public TotNoQuoteEntries()
            : base(Tags.TotNoQuoteEntries) { }
        public TotNoQuoteEntries(int val)
            : base(Tags.TotNoQuoteEntries, val) { }

    }


    /// <summary>
    /// DiscretionOffsetValue Field
    /// </summary>/
    public sealed class DiscretionOffsetValue : DecimalField
    {
        public const int TAG = 389;

        public DiscretionOffsetValue()
            : base(Tags.DiscretionOffsetValue) { }
        public DiscretionOffsetValue(Decimal val)
            : base(Tags.DiscretionOffsetValue, val) { }

    }


    /// <summary>
    /// TotNoRelatedSym Field
    /// </summary>/
    public sealed class TotNoRelatedSym : IntField
    {
        public const int TAG = 393;

        public TotNoRelatedSym()
            : base(Tags.TotNoRelatedSym) { }
        public TotNoRelatedSym(int val)
            : base(Tags.TotNoRelatedSym, val) { }

    }


    /// <summary>
    /// BidTradeType Field
    /// </summary>/
    public sealed class BidTradeType : CharField
    {
        public const int TAG = 418;

        public BidTradeType()
            : base(Tags.BidTradeType) { }
        public BidTradeType(char val)
            : base(Tags.BidTradeType, val) { }


        // Field Enumerations
        public const char AGENCY = 'A';
        public const char VWAP_GUARANTEE = 'G';
        public const char GUARANTEED_CLOSE = 'J';
        public const char RISK_TRADE = 'R';
    }


    /// <summary>
    /// CardIssNum Field
    /// </summary>/
    public sealed class CardIssNum : StringField
    {
        public const int TAG = 491;

        public CardIssNum()
            : base(Tags.CardIssNum) { }
        public CardIssNum(string val)
            : base(Tags.CardIssNum, val) { }

    }


    /// <summary>
    /// RegistDtls Field
    /// </summary>/
    public sealed class RegistDtls : StringField
    {
        public const int TAG = 509;

        public RegistDtls()
            : base(Tags.RegistDtls) { }
        public RegistDtls(string val)
            : base(Tags.RegistDtls, val) { }

    }


    /// <summary>
    /// TotNoSecurityTypes Field
    /// </summary>/
    public sealed class TotNoSecurityTypes : IntField
    {
        public const int TAG = 557;

        public TotNoSecurityTypes()
            : base(Tags.TotNoSecurityTypes) { }
        public TotNoSecurityTypes(int val)
            : base(Tags.TotNoSecurityTypes, val) { }

    }


    /// <summary>
    /// LegSettlType Field
    /// </summary>/
    public sealed class LegSettlType : StringField
    {
        public const int TAG = 587;

        public LegSettlType()
            : base(Tags.LegSettlType) { }
        public LegSettlType(string val)
            : base(Tags.LegSettlType, val) { }


        // Field Enumerations
        public const string REGULAR = "0";
        public const string CASH = "1";
        public const string NEXT_DAY = "2";
        public const string T_PLUS_2 = "3";
        public const string T_PLUS_3 = "4";
        public const string T_PLUS_4 = "5";
        public const string FUTURE = "6";
        public const string WHEN_AND_IF_ISSUED = "7";
        public const string SELLERS_OPTION = "8";
        public const string T_PLUS_5 = "9";
        public const string BROKEN_DATE = "B";
        public const string FX_SPOT_NEXT_SETTLEMENT = "C";
    }


    /// <summary>
    /// LegSettlDate Field
    /// </summary>/
    public sealed class LegSettlDate : StringField
    {
        public const int TAG = 588;

        public LegSettlDate()
            : base(Tags.LegSettlDate) { }
        public LegSettlDate(string val)
            : base(Tags.LegSettlDate, val) { }

    }


    /// <summary>
    /// AcctIDSource Field
    /// </summary>/
    public sealed class AcctIDSource : IntField
    {
        public const int TAG = 660;

        public AcctIDSource()
            : base(Tags.AcctIDSource) { }
        public AcctIDSource(int val)
            : base(Tags.AcctIDSource, val) { }


        // Field Enumerations
        public const int BIC = 1;
        public const int SID_CODE = 2;
        public const int TFM = 3;
        public const int OMGEO = 4;
        public const int DTCC_CODE = 5;
        public const int OTHER = 99;
        public const int SPECIAL_SEGREGATED_ACCOUNT_ID = 6;
    }


    /// <summary>
    /// AllocAcctIDSource Field
    /// </summary>/
    public sealed class AllocAcctIDSource : IntField
    {
        public const int TAG = 661;

        public AllocAcctIDSource()
            : base(Tags.AllocAcctIDSource) { }
        public AllocAcctIDSource(int val)
            : base(Tags.AllocAcctIDSource, val) { }


        // Field Enumerations
        public const int BIC = 1;
        public const int SID_CODE = 2;
        public const int TFM = 3;
        public const int OMGEO = 4;
        public const int DTCC_CODE = 5;
        public const int OTHER = 99;
        public const int SPECIAL_SEGREGATED_ACCOUNT_ID = 6;
    }


    /// <summary>
    /// BenchmarkPrice Field
    /// </summary>/
    public sealed class BenchmarkPrice : DecimalField
    {
        public const int TAG = 662;

        public BenchmarkPrice()
            : base(Tags.BenchmarkPrice) { }
        public BenchmarkPrice(Decimal val)
            : base(Tags.BenchmarkPrice, val) { }

    }


    /// <summary>
    /// BenchmarkPriceType Field
    /// </summary>/
    public sealed class BenchmarkPriceType : IntField
    {
        public const int TAG = 663;

        public BenchmarkPriceType()
            : base(Tags.BenchmarkPriceType) { }
        public BenchmarkPriceType(int val)
            : base(Tags.BenchmarkPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// ConfirmID Field
    /// </summary>/
    public sealed class ConfirmID : StringField
    {
        public const int TAG = 664;

        public ConfirmID()
            : base(Tags.ConfirmID) { }
        public ConfirmID(string val)
            : base(Tags.ConfirmID, val) { }

    }


    /// <summary>
    /// ConfirmStatus Field
    /// </summary>/
    public sealed class ConfirmStatus : IntField
    {
        public const int TAG = 665;

        public ConfirmStatus()
            : base(Tags.ConfirmStatus) { }
        public ConfirmStatus(int val)
            : base(Tags.ConfirmStatus, val) { }


        // Field Enumerations
        public const int RECEIVED = 1;
        public const int MISMATCHED_ACCOUNT = 2;
        public const int MISSING_SETTLEMENT_INSTRUCTIONS = 3;
        public const int CONFIRMED = 4;
        public const int REQUEST_REJECTED = 5;
    }


    /// <summary>
    /// ConfirmTransType Field
    /// </summary>/
    public sealed class ConfirmTransType : IntField
    {
        public const int TAG = 666;

        public ConfirmTransType()
            : base(Tags.ConfirmTransType) { }
        public ConfirmTransType(int val)
            : base(Tags.ConfirmTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int REPLACE = 1;
        public const int CANCEL = 2;
    }


    /// <summary>
    /// ContractSettlMonth Field
    /// </summary>/
    public sealed class ContractSettlMonth : StringField
    {
        public const int TAG = 667;

        public ContractSettlMonth()
            : base(Tags.ContractSettlMonth) { }
        public ContractSettlMonth(string val)
            : base(Tags.ContractSettlMonth, val) { }

    }


    /// <summary>
    /// DeliveryForm Field
    /// </summary>/
    public sealed class DeliveryForm : IntField
    {
        public const int TAG = 668;

        public DeliveryForm()
            : base(Tags.DeliveryForm) { }
        public DeliveryForm(int val)
            : base(Tags.DeliveryForm, val) { }


        // Field Enumerations
        public const int BOOK_ENTRY = 1;
        public const int BEARER = 2;
        public const int BOOKENTRY = 1;
    }


    /// <summary>
    /// LastParPx Field
    /// </summary>/
    public sealed class LastParPx : DecimalField
    {
        public const int TAG = 669;

        public LastParPx()
            : base(Tags.LastParPx) { }
        public LastParPx(Decimal val)
            : base(Tags.LastParPx, val) { }

    }


    /// <summary>
    /// NoLegAllocs Field
    /// </summary>/
    public sealed class NoLegAllocs : IntField
    {
        public const int TAG = 670;

        public NoLegAllocs()
            : base(Tags.NoLegAllocs) { }
        public NoLegAllocs(int val)
            : base(Tags.NoLegAllocs, val) { }

    }


    /// <summary>
    /// LegAllocAccount Field
    /// </summary>/
    public sealed class LegAllocAccount : StringField
    {
        public const int TAG = 671;

        public LegAllocAccount()
            : base(Tags.LegAllocAccount) { }
        public LegAllocAccount(string val)
            : base(Tags.LegAllocAccount, val) { }

    }


    /// <summary>
    /// LegIndividualAllocID Field
    /// </summary>/
    public sealed class LegIndividualAllocID : StringField
    {
        public const int TAG = 672;

        public LegIndividualAllocID()
            : base(Tags.LegIndividualAllocID) { }
        public LegIndividualAllocID(string val)
            : base(Tags.LegIndividualAllocID, val) { }

    }


    /// <summary>
    /// LegAllocQty Field
    /// </summary>/
    public sealed class LegAllocQty : DecimalField
    {
        public const int TAG = 673;

        public LegAllocQty()
            : base(Tags.LegAllocQty) { }
        public LegAllocQty(Decimal val)
            : base(Tags.LegAllocQty, val) { }

    }


    /// <summary>
    /// LegAllocAcctIDSource Field
    /// </summary>/
    public sealed class LegAllocAcctIDSource : StringField
    {
        public const int TAG = 674;

        public LegAllocAcctIDSource()
            : base(Tags.LegAllocAcctIDSource) { }
        public LegAllocAcctIDSource(string val)
            : base(Tags.LegAllocAcctIDSource, val) { }

    }


    /// <summary>
    /// LegSettlCurrency Field
    /// </summary>/
    public sealed class LegSettlCurrency : StringField
    {
        public const int TAG = 675;

        public LegSettlCurrency()
            : base(Tags.LegSettlCurrency) { }
        public LegSettlCurrency(string val)
            : base(Tags.LegSettlCurrency, val) { }

    }


    /// <summary>
    /// LegBenchmarkCurveCurrency Field
    /// </summary>/
    public sealed class LegBenchmarkCurveCurrency : StringField
    {
        public const int TAG = 676;

        public LegBenchmarkCurveCurrency()
            : base(Tags.LegBenchmarkCurveCurrency) { }
        public LegBenchmarkCurveCurrency(string val)
            : base(Tags.LegBenchmarkCurveCurrency, val) { }

    }


    /// <summary>
    /// LegBenchmarkCurveName Field
    /// </summary>/
    public sealed class LegBenchmarkCurveName : StringField
    {
        public const int TAG = 677;

        public LegBenchmarkCurveName()
            : base(Tags.LegBenchmarkCurveName) { }
        public LegBenchmarkCurveName(string val)
            : base(Tags.LegBenchmarkCurveName, val) { }


        // Field Enumerations
        public const string EONIA = "EONIA";
        public const string EUREPO = "EUREPO";
        public const string EURIBOR = "Euribor";
        public const string FUTURESWAP = "FutureSWAP";
        public const string LIBID = "LIBID";
        public const string LIBOR = "LIBOR";
        public const string MUNIAAA = "MuniAAA";
        public const string OTHER = "OTHER";
        public const string PFANDBRIEFE = "Pfandbriefe";
        public const string SONIA = "SONIA";
        public const string SWAP = "SWAP";
        public const string TREASURY = "Treasury";
        public const string US_FEDERAL_RESERVE_FED_FUNDS_EFFECTIVE_RATE = "FEDEFF";
        public const string US_FED_FUNDS_TARGET_RATE = "FEDOPEN";
        public const string EURO_INTERBANK_OFFER_RATE = "EURIBOR";
        public const string AUSTRALIAN_BANK_BILL_SWAP_RATE = "AUBSW";
        public const string BUDAPEST_BANK_OFFERED_RATE = "BUBOR";
        public const string CANADIAN_DOLLAR_OFFERED_RATE = "CDOR";
        public const string COPENHAGEN_INTERBANK_OFFERED_RATE = "CIBOR";
        public const string EURO_OVERNIGHT_INDEX_AVERAGE_SWAP_RATE = "EONIASWAP";
        public const string EURO_SHORT_TERM_RATE = "ESTR";
        public const string EURO_DOLLAR_RATE = "EURODOLLAR";
        public const string EURO_SWISS_FRANC_RATE = "EUROSWISS";
        public const string DTCC_GENERAL_COLLATERAL_FINANCE_REPO_INDEX = "GCFREPO";
        public const string ICE_SWAP_RATE = "ISDAFIX";
        public const string JOHANNESBURG_INTERBANK_AGREED_RATE = "JIBAR";
        public const string MOSCOW_PRIME_OFFERED_RATE = "MOSPRIM";
        public const string NIGERIA_THREE_MONTH_INTERBANK_RATE = "NIBOR";
        public const string CZECH_REPUBLIC_INTERBANK_OFFERED_RATE = "PRIBOR";
        public const string SECURED_OVERNIGHT_FINANCING_RATE = "SOFR";
        public const string STOCKHOLM_INTERBANK_OFFERED_RATE = "STIBOR";
        public const string BANK_OF_ISRAEL_INTERBANK_OFFERED_RATE = "TELBOR";
        public const string TOKYO_INTERBANK_OFFERED_RATE = "TIBOR";
        public const string WARSAW_INTERBANK_OFFERED_RATE = "WIBOR";
    }


    /// <summary>
    /// LegBenchmarkCurvePoint Field
    /// </summary>/
    public sealed class LegBenchmarkCurvePoint : StringField
    {
        public const int TAG = 678;

        public LegBenchmarkCurvePoint()
            : base(Tags.LegBenchmarkCurvePoint) { }
        public LegBenchmarkCurvePoint(string val)
            : base(Tags.LegBenchmarkCurvePoint, val) { }

    }


    /// <summary>
    /// LegBenchmarkPrice Field
    /// </summary>/
    public sealed class LegBenchmarkPrice : DecimalField
    {
        public const int TAG = 679;

        public LegBenchmarkPrice()
            : base(Tags.LegBenchmarkPrice) { }
        public LegBenchmarkPrice(Decimal val)
            : base(Tags.LegBenchmarkPrice, val) { }

    }


    /// <summary>
    /// LegBenchmarkPriceType Field
    /// </summary>/
    public sealed class LegBenchmarkPriceType : IntField
    {
        public const int TAG = 680;

        public LegBenchmarkPriceType()
            : base(Tags.LegBenchmarkPriceType) { }
        public LegBenchmarkPriceType(int val)
            : base(Tags.LegBenchmarkPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// LegBidPx Field
    /// </summary>/
    public sealed class LegBidPx : DecimalField
    {
        public const int TAG = 681;

        public LegBidPx()
            : base(Tags.LegBidPx) { }
        public LegBidPx(Decimal val)
            : base(Tags.LegBidPx, val) { }

    }


    /// <summary>
    /// LegIOIQty Field
    /// </summary>/
    public sealed class LegIOIQty : StringField
    {
        public const int TAG = 682;

        public LegIOIQty()
            : base(Tags.LegIOIQty) { }
        public LegIOIQty(string val)
            : base(Tags.LegIOIQty, val) { }


        // Field Enumerations
        public const string SMALL = "S";
        public const string MEDIUM = "M";
        public const string LARGE = "L";
        public const string UNDISCLOSED_QUANTITY = "U";
    }


    /// <summary>
    /// NoLegStipulations Field
    /// </summary>/
    public sealed class NoLegStipulations : IntField
    {
        public const int TAG = 683;

        public NoLegStipulations()
            : base(Tags.NoLegStipulations) { }
        public NoLegStipulations(int val)
            : base(Tags.NoLegStipulations, val) { }

    }


    /// <summary>
    /// LegOfferPx Field
    /// </summary>/
    public sealed class LegOfferPx : DecimalField
    {
        public const int TAG = 684;

        public LegOfferPx()
            : base(Tags.LegOfferPx) { }
        public LegOfferPx(Decimal val)
            : base(Tags.LegOfferPx, val) { }

    }


    /// <summary>
    /// LegOrderQty Field
    /// </summary>/
    public sealed class LegOrderQty : DecimalField
    {
        public const int TAG = 685;

        public LegOrderQty()
            : base(Tags.LegOrderQty) { }
        public LegOrderQty(Decimal val)
            : base(Tags.LegOrderQty, val) { }

    }


    /// <summary>
    /// LegPriceType Field
    /// </summary>/
    public sealed class LegPriceType : IntField
    {
        public const int TAG = 686;

        public LegPriceType()
            : base(Tags.LegPriceType) { }
        public LegPriceType(int val)
            : base(Tags.LegPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// LegQty Field
    /// </summary>/
    public sealed class LegQty : DecimalField
    {
        public const int TAG = 687;

        public LegQty()
            : base(Tags.LegQty) { }
        public LegQty(Decimal val)
            : base(Tags.LegQty, val) { }

    }


    /// <summary>
    /// LegStipulationType Field
    /// </summary>/
    public sealed class LegStipulationType : StringField
    {
        public const int TAG = 688;

        public LegStipulationType()
            : base(Tags.LegStipulationType) { }
        public LegStipulationType(string val)
            : base(Tags.LegStipulationType, val) { }


        // Field Enumerations
        public const string ALTERNATIVE_MINIMUM_TAX = "AMT";
        public const string AUTO_REINVESTMENT_AT_RATE_OR_BETTER = "AUTOREINV";
        public const string BANK_QUALIFIED = "BANKQUAL";
        public const string BARGAIN_CONDITIONS = "BGNCON";
        public const string COUPON_RANGE = "COUPON";
        public const string ISO_CURRENCY_CODE = "CURRENCY";
        public const string CUSTOM_START_END_DATE = "CUSTOMDATE";
        public const string GEOGRAPHICS_AND_RANGE = "GEOG";
        public const string VALUATION_DISCOUNT = "HAIRCUT";
        public const string INSURED = "INSURED";
        public const string YEAR_OR_YEAR_MONTH_OF_ISSUE = "ISSUE";
        public const string ISSUERS_TICKER = "ISSUER";
        public const string ISSUE_SIZE_RANGE = "ISSUESIZE";
        public const string LOOKBACK_DAYS = "LOOKBACK";
        public const string EXPLICIT_LOT_IDENTIFIER = "LOT";
        public const string LOT_VARIANCE = "LOTVAR";
        public const string MATURITY_YEAR_AND_MONTH = "MAT";
        public const string MATURITY_RANGE = "MATURITY";
        public const string MAXIMUM_SUBSTITUTIONS = "MAXSUBS";
        public const string MINIMUM_DENOMINATION = "MINDNOM";
        public const string MINIMUM_INCREMENT = "MININCR";
        public const string MINIMUM_QUANTITY = "MINQTY";
        public const string PAYMENT_FREQUENCY_CALENDAR = "PAYFREQ";
        public const string NUMBER_OF_PIECES = "PIECES";
        public const string POOLS_MAXIMUM = "PMAX";
        public const string POOLS_PER_LOT = "PPL";
        public const string POOLS_PER_MILLION = "PPM";
        public const string POOLS_PER_TRADE = "PPT";
        public const string PRICE_RANGE = "PRICE";
        public const string PRICING_FREQUENCY = "PRICEFREQ";
        public const string PRODUCTION_YEAR = "PROD";
        public const string CALL_PROTECTION = "PROTECT";
        public const string PURPOSE = "PURPOSE";
        public const string BENCHMARK_PRICE_SOURCE = "PXSOURCE";
        public const string RATING_SOURCE_AND_RANGE = "RATING";
        public const string TYPE_OF_REDEMPTION = "REDEMPTION";
        public const string RESTRICTED = "RESTRICTED";
        public const string MARKET_SECTOR = "SECTOR";
        public const string SECURITY_TYPE_INCLUDED_OR_EXCLUDED = "SECTYPE";
        public const string STRUCTURE = "STRUCT";
        public const string SUBSTITUTIONS_FREQUENCY = "SUBSFREQ";
        public const string SUBSTITUTIONS_LEFT = "SUBSLEFT";
        public const string FREEFORM_TEXT = "TEXT";
        public const string TRADE_VARIANCE = "TRDVAR";
        public const string WEIGHTED_AVERAGE_COUPON = "WAC";
        public const string WEIGHTED_AVERAGE_LIFE_COUPON = "WAL";
        public const string WEIGHTED_AVERAGE_LOAN_AGE = "WALA";
        public const string WEIGHTED_AVERAGE_MATURITY = "WAM";
        public const string WHOLE_POOL = "WHOLE";
        public const string YIELD_RANGE = "YIELD";
        public const string AVERAGE_FICO_SCORE = "AVFICO";
        public const string AVERAGE_LOAN_SIZE = "AVSIZE";
        public const string MAXIMUM_LOAN_BALANCE = "MAXBAL";
        public const string POOL_IDENTIFIER = "POOL";
        public const string TYPE_OF_ROLL_TRADE = "ROLLTYPE";
        public const string REFERENCE_TO_ROLLING_OR_CLOSING_TRADE = "REFTRADE";
        public const string PRINCIPAL_TO_ROLLING_OR_CLOSING_TRADE = "REFPRIN";
        public const string INTEREST_OF_ROLLING_OR_CLOSING_TRADE = "REFINT";
        public const string AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET = "AVAILQTY";
        public const string BROKERS_SALES_CREDIT = "BROKERCREDIT";
        public const string OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALPX";
        public const string OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALQTY";
        public const string THE_MINIMUM_RESIDUAL_OFFER_QUANTITY = "LEAVEQTY";
        public const string MAXIMUM_ORDER_SIZE = "MAXORDQTY";
        public const string ORDER_QUANTITY_INCREMENT = "ORDRINCR";
        public const string PRIMARY_OR_SECONDARY_MARKET_INDICATOR = "PRIMARY";
        public const string BROKER_SALES_CREDIT_OVERRIDE = "SALESCREDITOVR";
        public const string TRADERS_CREDIT = "TRADERCREDIT";
        public const string DISCOUNT_RATE = "DISCOUNT";
        public const string YIELD_TO_MATURITY = "YTM";
        public const string ABSOLUTE_PREPAYMENT_SPEED = "ABS";
        public const string CONSTANT_PREPAYMENT_PENALTY = "CPP";
        public const string CONSTANT_PREPAYMENT_RATE = "CPR";
        public const string CONSTANT_PREPAYMENT_YIELD = "CPY";
        public const string FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE = "HEP";
        public const string PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE = "MHP";
        public const string MONTHLY_PREPAYMENT_RATE = "MPR";
        public const string PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE = "PPC";
        public const string PERCENT_OF_BMA_PREPAYMENT_CURVE = "PSA";
        public const string SINGLE_MONTHLY_MORTALITY = "SMM";
        public const string ORIGINAL_AMOUNT = "ORIGAMT";
        public const string POOL_EFFECTIVE_DATE = "POOLEFFDT";
        public const string POOL_INITIAL_FACTOR = "POOLINITFCTR";
        public const string TRANCHE_IDENTIFIER = "TRANCHE";
        public const string SUBSTITUTION = "SUBSTITUTION";
        public const string INCURRED_RECOVERY = "INCURRCVY";
        public const string ADDITIONAL_TERM = "ADDTRM";
        public const string MODIFIED_EQUITY_DELIVERY = "MODEQTYDLVY";
        public const string NO_REFERENCE_OBLIGATION = "NOREFOBLIG";
        public const string UNKNOWN_REFERENCE_OBLIGATION = "UNKREFOBLIG";
        public const string ALL_GUARANTEES = "ALLGUARANTEES";
        public const string REFERENCE_PRICE = "REFPX";
        public const string REFERENCE_POLICY = "REFPOLICY";
        public const string SECURED_LIST = "SECRDLIST";
        public const string MULTIPLE_EXCHANGE_FALLBACK = "MULTEXCHFLLBCK";
        public const string COMPONENT_SECURITY_FALLBACK = "COMPSECFLLBCK";
        public const string LOCAL_JURISDICTION = "LOCLJRSDCTN";
        public const string RELEVANT_JURISDICTION = "RELVJRSDCTN";
        public const string INTEREST_PAYOFF_OF_ROLLING_OR_AMENDING_TRADE = "PAYOFF";
    }


    /// <summary>
    /// LegStipulationValue Field
    /// </summary>/
    public sealed class LegStipulationValue : StringField
    {
        public const int TAG = 689;

        public LegStipulationValue()
            : base(Tags.LegStipulationValue) { }
        public LegStipulationValue(string val)
            : base(Tags.LegStipulationValue, val) { }

    }


    /// <summary>
    /// LegSwapType Field
    /// </summary>/
    public sealed class LegSwapType : IntField
    {
        public const int TAG = 690;

        public LegSwapType()
            : base(Tags.LegSwapType) { }
        public LegSwapType(int val)
            : base(Tags.LegSwapType, val) { }


        // Field Enumerations
        public const int PAR_FOR_PAR = 1;
        public const int MODIFIED_DURATION = 2;
        public const int RISK = 4;
        public const int PROCEEDS = 5;
    }


    /// <summary>
    /// Pool Field
    /// </summary>/
    public sealed class Pool : StringField
    {
        public const int TAG = 691;

        public Pool()
            : base(Tags.Pool) { }
        public Pool(string val)
            : base(Tags.Pool, val) { }

    }


    /// <summary>
    /// QuotePriceType Field
    /// </summary>/
    public sealed class QuotePriceType : IntField
    {
        public const int TAG = 692;

        public QuotePriceType()
            : base(Tags.QuotePriceType) { }
        public QuotePriceType(int val)
            : base(Tags.QuotePriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD_SPREAD = 9;
        public const int YIELD = 10;
        public const int PRICE_SPREAD = 12;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
        public const int PERCENT = 1;
        public const int PER_SHARE = 2;
        public const int BASIS_POINTS_RELATIVE_TO_BENCHMARK = 6;
    }


    /// <summary>
    /// QuoteRespID Field
    /// </summary>/
    public sealed class QuoteRespID : StringField
    {
        public const int TAG = 693;

        public QuoteRespID()
            : base(Tags.QuoteRespID) { }
        public QuoteRespID(string val)
            : base(Tags.QuoteRespID, val) { }

    }


    /// <summary>
    /// QuoteRespType Field
    /// </summary>/
    public sealed class QuoteRespType : IntField
    {
        public const int TAG = 694;

        public QuoteRespType()
            : base(Tags.QuoteRespType) { }
        public QuoteRespType(int val)
            : base(Tags.QuoteRespType, val) { }


        // Field Enumerations
        public const int HIT_LIFT = 1;
        public const int COUNTER = 2;
        public const int EXPIRED = 3;
        public const int COVER = 4;
        public const int DONE_AWAY = 5;
        public const int PASS = 6;
        public const int END_TRADE = 7;
        public const int TIMED_OUT = 8;
        public const int TIED = 9;
        public const int TIED_COVER = 10;
        public const int ACCEPT = 11;
        public const int TERMINATE_CONTRACT = 12;
    }


    /// <summary>
    /// QuoteQualifier Field
    /// </summary>/
    public sealed class QuoteQualifier : CharField
    {
        public const int TAG = 695;

        public QuoteQualifier()
            : base(Tags.QuoteQualifier) { }
        public QuoteQualifier(char val)
            : base(Tags.QuoteQualifier, val) { }


        // Field Enumerations
        public const char ALL_OR_NONE = 'A';
        public const char MARKET_ON_CLOSE = 'B';
        public const char AT_THE_CLOSE = 'C';
        public const char VWAP = 'D';
        public const char IN_TOUCH_WITH = 'I';
        public const char LIMIT = 'L';
        public const char MORE_BEHIND = 'M';
        public const char AT_THE_OPEN = 'O';
        public const char TAKING_A_POSITION = 'P';
        public const char AT_THE_MARKET = 'Q';
        public const char READY_TO_TRADE = 'R';
        public const char INVENTORY_OR_PORTFOLIO_SHOWN = 'S';
        public const char THROUGH_THE_DAY = 'T';
        public const char VERSUS = 'V';
        public const char INDICATION = 'W';
        public const char CROSSING_OPPORTUNITY = 'X';
        public const char AT_THE_MIDPOINT = 'Y';
        public const char PRE_OPEN = 'Z';
        public const char AXE = 'E';
        public const char AXE_ON_BID = 'F';
        public const char AXE_ON_OFFER = 'G';
        public const char OUTSIDE_SPREAD = 'c';
        public const char CLIENT_NATURAL_BLOCK = 'N';
        public const char CLIENT_NATURAL_WORKING = 'H';
        public const char UNWIND = 'U';
        public const char POSITION_WANTED = 'J';
        public const char MARKET_MAKING = 'K';
        public const char QUANTITY_IS_NEGOTIABLE = '1';
        public const char ALLOW_LATE_BIDS = '2';
        public const char IMMEDIATE_OR_COUNTER = '3';
        public const char AUTO_TRADE = '4';
        public const char AUTOMATIC_SPOT = 'a';
        public const char PLATFORM_CALCULATED_SPOT = 'b';
        public const char DEFERRED_SPOT = 'd';
        public const char NEGOTIATED_SPOT = 'n';
    }


    /// <summary>
    /// YieldRedemptionDate Field
    /// </summary>/
    public sealed class YieldRedemptionDate : StringField
    {
        public const int TAG = 696;

        public YieldRedemptionDate()
            : base(Tags.YieldRedemptionDate) { }
        public YieldRedemptionDate(string val)
            : base(Tags.YieldRedemptionDate, val) { }

    }


    /// <summary>
    /// YieldRedemptionPrice Field
    /// </summary>/
    public sealed class YieldRedemptionPrice : DecimalField
    {
        public const int TAG = 697;

        public YieldRedemptionPrice()
            : base(Tags.YieldRedemptionPrice) { }
        public YieldRedemptionPrice(Decimal val)
            : base(Tags.YieldRedemptionPrice, val) { }

    }


    /// <summary>
    /// YieldRedemptionPriceType Field
    /// </summary>/
    public sealed class YieldRedemptionPriceType : IntField
    {
        public const int TAG = 698;

        public YieldRedemptionPriceType()
            : base(Tags.YieldRedemptionPriceType) { }
        public YieldRedemptionPriceType(int val)
            : base(Tags.YieldRedemptionPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// BenchmarkSecurityID Field
    /// </summary>/
    public sealed class BenchmarkSecurityID : StringField
    {
        public const int TAG = 699;

        public BenchmarkSecurityID()
            : base(Tags.BenchmarkSecurityID) { }
        public BenchmarkSecurityID(string val)
            : base(Tags.BenchmarkSecurityID, val) { }

    }


    /// <summary>
    /// ReversalIndicator Field
    /// </summary>/
    public sealed class ReversalIndicator : BooleanField
    {
        public const int TAG = 700;

        public ReversalIndicator()
            : base(Tags.ReversalIndicator) { }
        public ReversalIndicator(Boolean val)
            : base(Tags.ReversalIndicator, val) { }

    }


    /// <summary>
    /// YieldCalcDate Field
    /// </summary>/
    public sealed class YieldCalcDate : StringField
    {
        public const int TAG = 701;

        public YieldCalcDate()
            : base(Tags.YieldCalcDate) { }
        public YieldCalcDate(string val)
            : base(Tags.YieldCalcDate, val) { }

    }


    /// <summary>
    /// NoPositions Field
    /// </summary>/
    public sealed class NoPositions : IntField
    {
        public const int TAG = 702;

        public NoPositions()
            : base(Tags.NoPositions) { }
        public NoPositions(int val)
            : base(Tags.NoPositions, val) { }

    }


    /// <summary>
    /// PosType Field
    /// </summary>/
    public sealed class PosType : StringField
    {
        public const int TAG = 703;

        public PosType()
            : base(Tags.PosType) { }
        public PosType(string val)
            : base(Tags.PosType, val) { }


        // Field Enumerations
        public const string ALLOCATION_TRADE_QTY = "ALC";
        public const string OPTION_ASSIGNMENT = "AS";
        public const string AS_OF_TRADE_QTY = "ASF";
        public const string DELIVERY_QTY = "DLV";
        public const string ELECTRONIC_TRADE_QTY = "ETR";
        public const string OPTION_EXERCISE_QTY = "EX";
        public const string END_OF_DAY_QTY = "FIN";
        public const string INTRA_SPREAD_QTY = "IAS";
        public const string INTER_SPREAD_QTY = "IES";
        public const string ADJUSTMENT_QTY = "PA";
        public const string PIT_TRADE_QTY = "PIT";
        public const string START_OF_DAY_QTY = "SOD";
        public const string INTEGRAL_SPLIT = "SPL";
        public const string TRANSACTION_FROM_ASSIGNMENT = "TA";
        public const string TOTAL_TRANSACTION_QTY = "TOT";
        public const string TRANSACTION_QUANTITY = "TQ";
        public const string TRANSFER_TRADE_QTY = "TRF";
        public const string TRANSACTION_FROM_EXERCISE = "TX";
        public const string CROSS_MARGIN_QTY = "XM";
        public const string RECEIVE_QUANTITY = "RCV";
        public const string CORPORATE_ACTION_ADJUSTMENT = "CAA";
        public const string DELIVERY_NOTICE_QTY = "DN";
        public const string EXCHANGE_FOR_PHYSICAL_QTY = "EP";
        public const string PRIVATELY_NEGOTIATED_TRADE_QTY = "PNTN";
        public const string NET_DELTA_QTY = "DLT";
        public const string CREDIT_EVENT_ADJUSTMENT = "CEA";
        public const string SUCCESSION_EVENT_ADJUSTMENT = "SEA";
        public const string NET_QTY = "NET";
        public const string GROSS_QTY = "GRS";
        public const string INTRADAY_QTY = "ITD";
        public const string GROSS_NON_DELTA_ADJUSTED_SWAPTION_POSITION = "NDAS";
        public const string DELTA_ADJUSTED_PAIRED_SWAPTION_POSITION = "DAS";
        public const string EXPIRING_QUANTITY = "EXP";
        public const string QUANTITY_NOT_EXERCISED = "UNEX";
        public const string REQUESTED_EXERCISE_QUANTITY = "REQ";
        public const string CASH_FUTURES_EQUIVALENT_QUANTITY = "CFE";
        public const string LOAN_OR_BORROWED_QUANTITY = "SECLN";
    }


    /// <summary>
    /// LongQty Field
    /// </summary>/
    public sealed class LongQty : DecimalField
    {
        public const int TAG = 704;

        public LongQty()
            : base(Tags.LongQty) { }
        public LongQty(Decimal val)
            : base(Tags.LongQty, val) { }

    }


    /// <summary>
    /// ShortQty Field
    /// </summary>/
    public sealed class ShortQty : DecimalField
    {
        public const int TAG = 705;

        public ShortQty()
            : base(Tags.ShortQty) { }
        public ShortQty(Decimal val)
            : base(Tags.ShortQty, val) { }

    }


    /// <summary>
    /// PosQtyStatus Field
    /// </summary>/
    public sealed class PosQtyStatus : IntField
    {
        public const int TAG = 706;

        public PosQtyStatus()
            : base(Tags.PosQtyStatus) { }
        public PosQtyStatus(int val)
            : base(Tags.PosQtyStatus, val) { }


        // Field Enumerations
        public const int SUBMITTED = 0;
        public const int ACCEPTED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// PosAmtType Field
    /// </summary>/
    public sealed class PosAmtType : StringField
    {
        public const int TAG = 707;

        public PosAmtType()
            : base(Tags.PosAmtType) { }
        public PosAmtType(string val)
            : base(Tags.PosAmtType, val) { }


        // Field Enumerations
        public const string CASH_AMOUNT = "CASH";
        public const string CASH_RESIDUAL_AMOUNT = "CRES";
        public const string FINAL_MARK_TO_MARKET_AMOUNT = "FMTM";
        public const string INCREMENTAL_MARK_TO_MARKET = "IMTM";
        public const string PREMIUM_AMOUNT = "PREM";
        public const string START_OF_DAY_MARK_TO_MARKET = "SMTM";
        public const string TRADE_VARIATION_AMOUNT = "TVAR";
        public const string VALUE_ADJUSTED_AMOUNT = "VADJ";
        public const string SETTLEMENT_VALUE = "SETL";
        public const string INITIAL_TRADE_COUPON_AMOUNT = "ICPN";
        public const string ACCRUED_COUPON_AMOUNT = "ACPN";
        public const string COUPON_AMOUNT = "CPN";
        public const string INCREMENTAL_ACCRUED_COUPON = "IACPN";
        public const string COLLATERALIZED_MARK_TO_MARKET = "CMTM";
        public const string INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET = "ICMTM";
        public const string COMPENSATION_AMOUNT = "DLV";
        public const string TOTAL_BANKED_AMOUNT = "BANK";
        public const string TOTAL_COLLATERALIZED_AMOUNT = "COLAT";
        public const string LONG_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "LSNV";
        public const string SHORT_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "SSNV";
        public const string START_OF_DAY_ACCRUED_COUPON = "SACPN";
        public const string NET_PRESENT_VALUE = "NPV";
        public const string START_OF_DAY_NET_PRESENT_VALUE = "SNPV";
        public const string NET_CASH_FLOW = "NCF";
        public const string PRESENT_VALUE_OF_ALL_FEES = "PVFEES";
        public const string PRESENT_VALUE_OF_ONE_BASIS_POINTS = "PV01";
        public const string THE_FIVE_YEAR_EQUIVALENT_NOTIONAL_AMOUNT = "5YREN";
        public const string UNDISCOUNTED_MARK_TO_MARKET = "UMTM";
        public const string MARK_TO_MODEL = "MTD";
        public const string MARK_TO_MARKET_VARIANCE = "VMTM";
        public const string MARK_TO_MODEL_VARIANCE = "VMTD";
        public const string UPFRONT_PAYMENT = "UPFRNT";
        public const string END_VALUE = "ENDV";
        public const string OUTSTANDING_MARGIN_LOAN = "MGNLN";
        public const string LOAN_VALUE = "LNVL";
        public const string INCREMENTAL_MARK_TO_MARKET_AMOUNT = "IMTM";
        public const string START_OF_DAY_MARK_TO_MARKET_AMOUNT = "SMTM";
    }


    /// <summary>
    /// PosAmt Field
    /// </summary>/
    public sealed class PosAmt : DecimalField
    {
        public const int TAG = 708;

        public PosAmt()
            : base(Tags.PosAmt) { }
        public PosAmt(Decimal val)
            : base(Tags.PosAmt, val) { }

    }


    /// <summary>
    /// PosTransType Field
    /// </summary>/
    public sealed class PosTransType : IntField
    {
        public const int TAG = 709;

        public PosTransType()
            : base(Tags.PosTransType) { }
        public PosTransType(int val)
            : base(Tags.PosTransType, val) { }


        // Field Enumerations
        public const int EXERCISE = 1;
        public const int DO_NOT_EXERCISE = 2;
        public const int POSITION_ADJUSTMENT = 3;
        public const int POSITION_CHANGE_SUBMISSION = 4;
        public const int PLEDGE = 5;
        public const int LARGE_TRADER_SUBMISSION = 6;
        public const int LARGE_POSITIONS_REPORTING_SUBMISSION = 7;
        public const int LONG_HOLDINGS = 8;
        public const int INTERNAL_TRANSFER = 9;
        public const int TRANSFER_OF_FIRM = 10;
        public const int EXTERNAL_TRANSFER = 11;
        public const int CORPORATE_ACTION = 12;
        public const int NOTIFICATION = 13;
        public const int POSITION_CREATION = 14;
        public const int CLOSE_OUT = 15;
        public const int REOPEN = 16;
        public const int POSITION_CHANGE_SUBMISSION_MARGIN_DISPOSITION = 4;
    }


    /// <summary>
    /// PosReqID Field
    /// </summary>/
    public sealed class PosReqID : StringField
    {
        public const int TAG = 710;

        public PosReqID()
            : base(Tags.PosReqID) { }
        public PosReqID(string val)
            : base(Tags.PosReqID, val) { }

    }


    /// <summary>
    /// NoUnderlyings Field
    /// </summary>/
    public sealed class NoUnderlyings : IntField
    {
        public const int TAG = 711;

        public NoUnderlyings()
            : base(Tags.NoUnderlyings) { }
        public NoUnderlyings(int val)
            : base(Tags.NoUnderlyings, val) { }

    }


    /// <summary>
    /// PosMaintAction Field
    /// </summary>/
    public sealed class PosMaintAction : IntField
    {
        public const int TAG = 712;

        public PosMaintAction()
            : base(Tags.PosMaintAction) { }
        public PosMaintAction(int val)
            : base(Tags.PosMaintAction, val) { }


        // Field Enumerations
        public const int NEW = 1;
        public const int REPLACE = 2;
        public const int CANCEL = 3;
        public const int REVERSE = 4;
    }


    /// <summary>
    /// OrigPosReqRefID Field
    /// </summary>/
    public sealed class OrigPosReqRefID : StringField
    {
        public const int TAG = 713;

        public OrigPosReqRefID()
            : base(Tags.OrigPosReqRefID) { }
        public OrigPosReqRefID(string val)
            : base(Tags.OrigPosReqRefID, val) { }

    }


    /// <summary>
    /// PosMaintRptRefID Field
    /// </summary>/
    public sealed class PosMaintRptRefID : StringField
    {
        public const int TAG = 714;

        public PosMaintRptRefID()
            : base(Tags.PosMaintRptRefID) { }
        public PosMaintRptRefID(string val)
            : base(Tags.PosMaintRptRefID, val) { }

    }


    /// <summary>
    /// ClearingBusinessDate Field
    /// </summary>/
    public sealed class ClearingBusinessDate : StringField
    {
        public const int TAG = 715;

        public ClearingBusinessDate()
            : base(Tags.ClearingBusinessDate) { }
        public ClearingBusinessDate(string val)
            : base(Tags.ClearingBusinessDate, val) { }

    }


    /// <summary>
    /// SettlSessID Field
    /// </summary>/
    public sealed class SettlSessID : StringField
    {
        public const int TAG = 716;

        public SettlSessID()
            : base(Tags.SettlSessID) { }
        public SettlSessID(string val)
            : base(Tags.SettlSessID, val) { }


        // Field Enumerations
        public const string INTRADAY = "ITD";
        public const string REGULAR_TRADING_HOURS = "RTH";
        public const string ELECTRONIC_TRADING_HOURS = "ETH";
        public const string END_OF_DAY = "EOD";
    }


    /// <summary>
    /// SettlSessSubID Field
    /// </summary>/
    public sealed class SettlSessSubID : StringField
    {
        public const int TAG = 717;

        public SettlSessSubID()
            : base(Tags.SettlSessSubID) { }
        public SettlSessSubID(string val)
            : base(Tags.SettlSessSubID, val) { }

    }


    /// <summary>
    /// AdjustmentType Field
    /// </summary>/
    public sealed class AdjustmentType : IntField
    {
        public const int TAG = 718;

        public AdjustmentType()
            : base(Tags.AdjustmentType) { }
        public AdjustmentType(int val)
            : base(Tags.AdjustmentType, val) { }


        // Field Enumerations
        public const int PROCESS_REQUEST_AS_MARGIN_DISPOSITION = 0;
        public const int DELTA_PLUS = 1;
        public const int DELTA_MINUS = 2;
        public const int FINAL = 3;
        public const int CUSTOMER_SPECIFIC_POSITION = 4;
    }


    /// <summary>
    /// ContraryInstructionIndicator Field
    /// </summary>/
    public sealed class ContraryInstructionIndicator : BooleanField
    {
        public const int TAG = 719;

        public ContraryInstructionIndicator()
            : base(Tags.ContraryInstructionIndicator) { }
        public ContraryInstructionIndicator(Boolean val)
            : base(Tags.ContraryInstructionIndicator, val) { }

    }


    /// <summary>
    /// PriorSpreadIndicator Field
    /// </summary>/
    public sealed class PriorSpreadIndicator : BooleanField
    {
        public const int TAG = 720;

        public PriorSpreadIndicator()
            : base(Tags.PriorSpreadIndicator) { }
        public PriorSpreadIndicator(Boolean val)
            : base(Tags.PriorSpreadIndicator, val) { }

    }


    /// <summary>
    /// PosMaintRptID Field
    /// </summary>/
    public sealed class PosMaintRptID : StringField
    {
        public const int TAG = 721;

        public PosMaintRptID()
            : base(Tags.PosMaintRptID) { }
        public PosMaintRptID(string val)
            : base(Tags.PosMaintRptID, val) { }

    }


    /// <summary>
    /// PosMaintStatus Field
    /// </summary>/
    public sealed class PosMaintStatus : IntField
    {
        public const int TAG = 722;

        public PosMaintStatus()
            : base(Tags.PosMaintStatus) { }
        public PosMaintStatus(int val)
            : base(Tags.PosMaintStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_WARNINGS = 1;
        public const int REJECTED = 2;
        public const int COMPLETED = 3;
        public const int COMPLETED_WITH_WARNINGS = 4;
    }


    /// <summary>
    /// PosMaintResult Field
    /// </summary>/
    public sealed class PosMaintResult : IntField
    {
        public const int TAG = 723;

        public PosMaintResult()
            : base(Tags.PosMaintResult) { }
        public PosMaintResult(int val)
            : base(Tags.PosMaintResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL_COMPLETION = 0;
        public const int REJECTED = 1;
        public const int OTHER = 99;
        public const int SUCCESSFUL_COMPLETION_NO_WARNINGS_OR_ERRORS = 0;
    }


    /// <summary>
    /// PosReqType Field
    /// </summary>/
    public sealed class PosReqType : IntField
    {
        public const int TAG = 724;

        public PosReqType()
            : base(Tags.PosReqType) { }
        public PosReqType(int val)
            : base(Tags.PosReqType, val) { }


        // Field Enumerations
        public const int POSITIONS = 0;
        public const int TRADES = 1;
        public const int EXERCISES = 2;
        public const int ASSIGNMENTS = 3;
        public const int SETTLEMENT_ACTIVITY = 4;
        public const int BACKOUT_MESSAGE = 5;
        public const int DELTA_POSITIONS = 6;
        public const int NET_POSITION = 7;
        public const int LARGE_POSITIONS_REPORTING = 8;
        public const int EXERCISE_POSITION_REPORTING_SUBMISSION = 9;
        public const int POSITION_LIMIT_REPORTING_SUBMISSION = 10;
    }


    /// <summary>
    /// ResponseTransportType Field
    /// </summary>/
    public sealed class ResponseTransportType : IntField
    {
        public const int TAG = 725;

        public ResponseTransportType()
            : base(Tags.ResponseTransportType) { }
        public ResponseTransportType(int val)
            : base(Tags.ResponseTransportType, val) { }


        // Field Enumerations
        public const int IN_BAND = 0;
        public const int OUT_OF_BAND = 1;
        public const int INBAND = 0;
    }


    /// <summary>
    /// ResponseDestination Field
    /// </summary>/
    public sealed class ResponseDestination : StringField
    {
        public const int TAG = 726;

        public ResponseDestination()
            : base(Tags.ResponseDestination) { }
        public ResponseDestination(string val)
            : base(Tags.ResponseDestination, val) { }

    }


    /// <summary>
    /// TotalNumPosReports Field
    /// </summary>/
    public sealed class TotalNumPosReports : IntField
    {
        public const int TAG = 727;

        public TotalNumPosReports()
            : base(Tags.TotalNumPosReports) { }
        public TotalNumPosReports(int val)
            : base(Tags.TotalNumPosReports, val) { }

    }


    /// <summary>
    /// PosReqResult Field
    /// </summary>/
    public sealed class PosReqResult : IntField
    {
        public const int TAG = 728;

        public PosReqResult()
            : base(Tags.PosReqResult) { }
        public PosReqResult(int val)
            : base(Tags.PosReqResult, val) { }


        // Field Enumerations
        public const int VALID_REQUEST = 0;
        public const int INVALID_OR_UNSUPPORTED_REQUEST = 1;
        public const int NO_POSITIONS_FOUND_THAT_MATCH_CRITERIA = 2;
        public const int NOT_AUTHORIZED_TO_REQUEST_POSITIONS = 3;
        public const int REQUEST_FOR_POSITION_NOT_SUPPORTED = 4;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PosReqStatus Field
    /// </summary>/
    public sealed class PosReqStatus : IntField
    {
        public const int TAG = 729;

        public PosReqStatus()
            : base(Tags.PosReqStatus) { }
        public PosReqStatus(int val)
            : base(Tags.PosReqStatus, val) { }


        // Field Enumerations
        public const int COMPLETED = 0;
        public const int COMPLETED_WITH_WARNINGS = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// SettlPrice Field
    /// </summary>/
    public sealed class SettlPrice : DecimalField
    {
        public const int TAG = 730;

        public SettlPrice()
            : base(Tags.SettlPrice) { }
        public SettlPrice(Decimal val)
            : base(Tags.SettlPrice, val) { }

    }


    /// <summary>
    /// SettlPriceType Field
    /// </summary>/
    public sealed class SettlPriceType : IntField
    {
        public const int TAG = 731;

        public SettlPriceType()
            : base(Tags.SettlPriceType) { }
        public SettlPriceType(int val)
            : base(Tags.SettlPriceType, val) { }


        // Field Enumerations
        public const int FINAL = 1;
        public const int THEORETICAL = 2;
    }


    /// <summary>
    /// UnderlyingSettlPrice Field
    /// </summary>/
    public sealed class UnderlyingSettlPrice : DecimalField
    {
        public const int TAG = 732;

        public UnderlyingSettlPrice()
            : base(Tags.UnderlyingSettlPrice) { }
        public UnderlyingSettlPrice(Decimal val)
            : base(Tags.UnderlyingSettlPrice, val) { }

    }


    /// <summary>
    /// UnderlyingSettlPriceType Field
    /// </summary>/
    public sealed class UnderlyingSettlPriceType : IntField
    {
        public const int TAG = 733;

        public UnderlyingSettlPriceType()
            : base(Tags.UnderlyingSettlPriceType) { }
        public UnderlyingSettlPriceType(int val)
            : base(Tags.UnderlyingSettlPriceType, val) { }


        // Field Enumerations
        public const int FINAL = 1;
        public const int THEORETICAL = 2;
    }


    /// <summary>
    /// PriorSettlPrice Field
    /// </summary>/
    public sealed class PriorSettlPrice : DecimalField
    {
        public const int TAG = 734;

        public PriorSettlPrice()
            : base(Tags.PriorSettlPrice) { }
        public PriorSettlPrice(Decimal val)
            : base(Tags.PriorSettlPrice, val) { }

    }


    /// <summary>
    /// NoQuoteQualifiers Field
    /// </summary>/
    public sealed class NoQuoteQualifiers : IntField
    {
        public const int TAG = 735;

        public NoQuoteQualifiers()
            : base(Tags.NoQuoteQualifiers) { }
        public NoQuoteQualifiers(int val)
            : base(Tags.NoQuoteQualifiers, val) { }

    }


    /// <summary>
    /// AllocSettlCurrency Field
    /// </summary>/
    public sealed class AllocSettlCurrency : StringField
    {
        public const int TAG = 736;

        public AllocSettlCurrency()
            : base(Tags.AllocSettlCurrency) { }
        public AllocSettlCurrency(string val)
            : base(Tags.AllocSettlCurrency, val) { }

    }


    /// <summary>
    /// AllocSettlCurrAmt Field
    /// </summary>/
    public sealed class AllocSettlCurrAmt : DecimalField
    {
        public const int TAG = 737;

        public AllocSettlCurrAmt()
            : base(Tags.AllocSettlCurrAmt) { }
        public AllocSettlCurrAmt(Decimal val)
            : base(Tags.AllocSettlCurrAmt, val) { }

    }


    /// <summary>
    /// InterestAtMaturity Field
    /// </summary>/
    public sealed class InterestAtMaturity : DecimalField
    {
        public const int TAG = 738;

        public InterestAtMaturity()
            : base(Tags.InterestAtMaturity) { }
        public InterestAtMaturity(Decimal val)
            : base(Tags.InterestAtMaturity, val) { }

    }


    /// <summary>
    /// LegDatedDate Field
    /// </summary>/
    public sealed class LegDatedDate : StringField
    {
        public const int TAG = 739;

        public LegDatedDate()
            : base(Tags.LegDatedDate) { }
        public LegDatedDate(string val)
            : base(Tags.LegDatedDate, val) { }

    }


    /// <summary>
    /// LegPool Field
    /// </summary>/
    public sealed class LegPool : StringField
    {
        public const int TAG = 740;

        public LegPool()
            : base(Tags.LegPool) { }
        public LegPool(string val)
            : base(Tags.LegPool, val) { }

    }


    /// <summary>
    /// AllocInterestAtMaturity Field
    /// </summary>/
    public sealed class AllocInterestAtMaturity : DecimalField
    {
        public const int TAG = 741;

        public AllocInterestAtMaturity()
            : base(Tags.AllocInterestAtMaturity) { }
        public AllocInterestAtMaturity(Decimal val)
            : base(Tags.AllocInterestAtMaturity, val) { }

    }


    /// <summary>
    /// AllocAccruedInterestAmt Field
    /// </summary>/
    public sealed class AllocAccruedInterestAmt : DecimalField
    {
        public const int TAG = 742;

        public AllocAccruedInterestAmt()
            : base(Tags.AllocAccruedInterestAmt) { }
        public AllocAccruedInterestAmt(Decimal val)
            : base(Tags.AllocAccruedInterestAmt, val) { }

    }


    /// <summary>
    /// DeliveryDate Field
    /// </summary>/
    public sealed class DeliveryDate : StringField
    {
        public const int TAG = 743;

        public DeliveryDate()
            : base(Tags.DeliveryDate) { }
        public DeliveryDate(string val)
            : base(Tags.DeliveryDate, val) { }

    }


    /// <summary>
    /// AssignmentMethod Field
    /// </summary>/
    public sealed class AssignmentMethod : CharField
    {
        public const int TAG = 744;

        public AssignmentMethod()
            : base(Tags.AssignmentMethod) { }
        public AssignmentMethod(char val)
            : base(Tags.AssignmentMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = 'P';
        public const char RANDOM = 'R';
        public const char PRORATA = 'P';
    }


    /// <summary>
    /// AssignmentUnit Field
    /// </summary>/
    public sealed class AssignmentUnit : DecimalField
    {
        public const int TAG = 745;

        public AssignmentUnit()
            : base(Tags.AssignmentUnit) { }
        public AssignmentUnit(Decimal val)
            : base(Tags.AssignmentUnit, val) { }

    }


    /// <summary>
    /// OpenInterest Field
    /// </summary>/
    public sealed class OpenInterest : DecimalField
    {
        public const int TAG = 746;

        public OpenInterest()
            : base(Tags.OpenInterest) { }
        public OpenInterest(Decimal val)
            : base(Tags.OpenInterest, val) { }

    }


    /// <summary>
    /// ExerciseMethod Field
    /// </summary>/
    public sealed class ExerciseMethod : CharField
    {
        public const int TAG = 747;

        public ExerciseMethod()
            : base(Tags.ExerciseMethod) { }
        public ExerciseMethod(char val)
            : base(Tags.ExerciseMethod, val) { }


        // Field Enumerations
        public const char AUTOMATIC = 'A';
        public const char MANUAL = 'M';
    }


    /// <summary>
    /// TotNumTradeReports Field
    /// </summary>/
    public sealed class TotNumTradeReports : IntField
    {
        public const int TAG = 748;

        public TotNumTradeReports()
            : base(Tags.TotNumTradeReports) { }
        public TotNumTradeReports(int val)
            : base(Tags.TotNumTradeReports, val) { }

    }


    /// <summary>
    /// TradeRequestResult Field
    /// </summary>/
    public sealed class TradeRequestResult : IntField
    {
        public const int TAG = 749;

        public TradeRequestResult()
            : base(Tags.TradeRequestResult) { }
        public TradeRequestResult(int val)
            : base(Tags.TradeRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_OR_UNKNOWN_INSTRUMENT = 1;
        public const int INVALID_TYPE_OF_TRADE_REQUESTED = 2;
        public const int INVALID_PARTIES = 3;
        public const int INVALID_TRANSPORT_TYPE_REQUESTED = 4;
        public const int INVALID_DESTINATION_REQUESTED = 5;
        public const int TRADEREQUESTTYPE_NOT_SUPPORTED = 8;
        public const int NOT_AUTHORIZED = 9;
        public const int OTHER = 99;
        public const int UNAUTHORIZED_ROR_TRADE_CAPTURE_REPORT_REQUEST = 9;
        public const int UNAUTHORIZED_FOR_TRADE_CAPTURE_REPORT_REQUEST = 9;
        public const int YIELD = 10;
    }


    /// <summary>
    /// TradeRequestStatus Field
    /// </summary>/
    public sealed class TradeRequestStatus : IntField
    {
        public const int TAG = 750;

        public TradeRequestStatus()
            : base(Tags.TradeRequestStatus) { }
        public TradeRequestStatus(int val)
            : base(Tags.TradeRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int COMPLETED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// TradeReportRejectReason Field
    /// </summary>/
    public sealed class TradeReportRejectReason : IntField
    {
        public const int TAG = 751;

        public TradeReportRejectReason()
            : base(Tags.TradeReportRejectReason) { }
        public TradeReportRejectReason(int val)
            : base(Tags.TradeReportRejectReason, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY_INFORMATION = 1;
        public const int UNKNOWN_INSTRUMENT = 2;
        public const int UNAUTHORIZED_TO_REPORT_TRADES = 3;
        public const int INVALID_TRADE_TYPE = 4;
        public const int OTHER = 99;
        public const int PRICE_EXCEEDS_CURRENT_PRICE_BAND = 5;
        public const int REFERENCE_PRICE_NOT_AVAILABLE = 6;
        public const int NOTIONAL_VALUE_EXCEEDS_THRESHOLD = 7;
        public const int INVALID_PARTY_ONFORMATION = 1;
        public const int YIELD = 10;
    }


    /// <summary>
    /// SideMultiLegReportingType Field
    /// </summary>/
    public sealed class SideMultiLegReportingType : IntField
    {
        public const int TAG = 752;

        public SideMultiLegReportingType()
            : base(Tags.SideMultiLegReportingType) { }
        public SideMultiLegReportingType(int val)
            : base(Tags.SideMultiLegReportingType, val) { }


        // Field Enumerations
        public const int SINGLE_SECURITY = 1;
        public const int INDIVIDUAL_LEG_OF_A_MULTILEG_SECURITY = 2;
        public const int MULTILEG_SECURITY = 3;
        public const int INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITY = 2;
        public const int MULTI_LEG_SECURITY = 3;
    }


    /// <summary>
    /// NoPosAmt Field
    /// </summary>/
    public sealed class NoPosAmt : IntField
    {
        public const int TAG = 753;

        public NoPosAmt()
            : base(Tags.NoPosAmt) { }
        public NoPosAmt(int val)
            : base(Tags.NoPosAmt, val) { }

    }


    /// <summary>
    /// AutoAcceptIndicator Field
    /// </summary>/
    public sealed class AutoAcceptIndicator : BooleanField
    {
        public const int TAG = 754;

        public AutoAcceptIndicator()
            : base(Tags.AutoAcceptIndicator) { }
        public AutoAcceptIndicator(Boolean val)
            : base(Tags.AutoAcceptIndicator, val) { }

    }


    /// <summary>
    /// AllocReportID Field
    /// </summary>/
    public sealed class AllocReportID : StringField
    {
        public const int TAG = 755;

        public AllocReportID()
            : base(Tags.AllocReportID) { }
        public AllocReportID(string val)
            : base(Tags.AllocReportID, val) { }

    }


    /// <summary>
    /// NoNested2PartyIDs Field
    /// </summary>/
    public sealed class NoNested2PartyIDs : IntField
    {
        public const int TAG = 756;

        public NoNested2PartyIDs()
            : base(Tags.NoNested2PartyIDs) { }
        public NoNested2PartyIDs(int val)
            : base(Tags.NoNested2PartyIDs, val) { }

    }


    /// <summary>
    /// Nested2PartyID Field
    /// </summary>/
    public sealed class Nested2PartyID : StringField
    {
        public const int TAG = 757;

        public Nested2PartyID()
            : base(Tags.Nested2PartyID) { }
        public Nested2PartyID(string val)
            : base(Tags.Nested2PartyID, val) { }

    }


    /// <summary>
    /// Nested2PartyIDSource Field
    /// </summary>/
    public sealed class Nested2PartyIDSource : CharField
    {
        public const int TAG = 758;

        public Nested2PartyIDSource()
            : base(Tags.Nested2PartyIDSource) { }
        public Nested2PartyIDSource(char val)
            : base(Tags.Nested2PartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// Nested2PartyRole Field
    /// </summary>/
    public sealed class Nested2PartyRole : IntField
    {
        public const int TAG = 759;

        public Nested2PartyRole()
            : base(Tags.Nested2PartyRole) { }
        public Nested2PartyRole(int val)
            : base(Tags.Nested2PartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// Nested2PartySubID Field
    /// </summary>/
    public sealed class Nested2PartySubID : StringField
    {
        public const int TAG = 760;

        public Nested2PartySubID()
            : base(Tags.Nested2PartySubID) { }
        public Nested2PartySubID(string val)
            : base(Tags.Nested2PartySubID, val) { }

    }


    /// <summary>
    /// BenchmarkSecurityIDSource Field
    /// </summary>/
    public sealed class BenchmarkSecurityIDSource : StringField
    {
        public const int TAG = 761;

        public BenchmarkSecurityIDSource()
            : base(Tags.BenchmarkSecurityIDSource) { }
        public BenchmarkSecurityIDSource(string val)
            : base(Tags.BenchmarkSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// SecuritySubType Field
    /// </summary>/
    public sealed class SecuritySubType : StringField
    {
        public const int TAG = 762;

        public SecuritySubType()
            : base(Tags.SecuritySubType) { }
        public SecuritySubType(string val)
            : base(Tags.SecuritySubType, val) { }

    }


    /// <summary>
    /// UnderlyingSecuritySubType Field
    /// </summary>/
    public sealed class UnderlyingSecuritySubType : StringField
    {
        public const int TAG = 763;

        public UnderlyingSecuritySubType()
            : base(Tags.UnderlyingSecuritySubType) { }
        public UnderlyingSecuritySubType(string val)
            : base(Tags.UnderlyingSecuritySubType, val) { }

    }


    /// <summary>
    /// LegSecuritySubType Field
    /// </summary>/
    public sealed class LegSecuritySubType : StringField
    {
        public const int TAG = 764;

        public LegSecuritySubType()
            : base(Tags.LegSecuritySubType) { }
        public LegSecuritySubType(string val)
            : base(Tags.LegSecuritySubType, val) { }

    }


    /// <summary>
    /// AllowableOneSidednessPct Field
    /// </summary>/
    public sealed class AllowableOneSidednessPct : DecimalField
    {
        public const int TAG = 765;

        public AllowableOneSidednessPct()
            : base(Tags.AllowableOneSidednessPct) { }
        public AllowableOneSidednessPct(Decimal val)
            : base(Tags.AllowableOneSidednessPct, val) { }

    }


    /// <summary>
    /// AllowableOneSidednessValue Field
    /// </summary>/
    public sealed class AllowableOneSidednessValue : DecimalField
    {
        public const int TAG = 766;

        public AllowableOneSidednessValue()
            : base(Tags.AllowableOneSidednessValue) { }
        public AllowableOneSidednessValue(Decimal val)
            : base(Tags.AllowableOneSidednessValue, val) { }

    }


    /// <summary>
    /// AllowableOneSidednessCurr Field
    /// </summary>/
    public sealed class AllowableOneSidednessCurr : StringField
    {
        public const int TAG = 767;

        public AllowableOneSidednessCurr()
            : base(Tags.AllowableOneSidednessCurr) { }
        public AllowableOneSidednessCurr(string val)
            : base(Tags.AllowableOneSidednessCurr, val) { }

    }


    /// <summary>
    /// NoTrdRegTimestamps Field
    /// </summary>/
    public sealed class NoTrdRegTimestamps : IntField
    {
        public const int TAG = 768;

        public NoTrdRegTimestamps()
            : base(Tags.NoTrdRegTimestamps) { }
        public NoTrdRegTimestamps(int val)
            : base(Tags.NoTrdRegTimestamps, val) { }

    }


    /// <summary>
    /// TrdRegTimestamp Field
    /// </summary>/
    public sealed class TrdRegTimestamp : DateTimeField
    {
        public const int TAG = 769;

        public TrdRegTimestamp()
            : base(Tags.TrdRegTimestamp) { }
        public TrdRegTimestamp(DateTime val)
            : base(Tags.TrdRegTimestamp, val) { }
        public TrdRegTimestamp(DateTime val, bool showMilliseconds)
            : base(Tags.TrdRegTimestamp, val, showMilliseconds) { }
        public TrdRegTimestamp(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TrdRegTimestamp, val, precision) { }

    }


    /// <summary>
    /// TrdRegTimestampType Field
    /// </summary>/
    public sealed class TrdRegTimestampType : IntField
    {
        public const int TAG = 770;

        public TrdRegTimestampType()
            : base(Tags.TrdRegTimestampType) { }
        public TrdRegTimestampType(int val)
            : base(Tags.TrdRegTimestampType, val) { }


        // Field Enumerations
        public const int EXECUTION_TIME = 1;
        public const int TIME_IN = 2;
        public const int TIME_OUT = 3;
        public const int BROKER_RECEIPT = 4;
        public const int BROKER_EXECUTION = 5;
        public const int DESK_RECEIPT = 6;
        public const int SUBMISSION_TO_CLEARING = 7;
        public const int TIME_PRIORITY = 8;
        public const int ORDERBOOK_ENTRY_TIME = 9;
        public const int ORDER_SUBMISSION_TIME = 10;
        public const int PUBLICLY_REPORTED = 11;
        public const int PUBLIC_REPORT_UPDATED = 12;
        public const int NON_PUBLICLY_REPORTED = 13;
        public const int NON_PUBLIC_REPORT_UPDATED = 14;
        public const int SUBMITTED_FOR_CONFIRMATION = 15;
        public const int UPDATED_FOR_CONFIRMATION = 16;
        public const int CONFIRMED = 17;
        public const int UPDATED_FOR_CLEARING = 18;
        public const int CLEARED = 19;
        public const int ALLOCATIONS_SUBMITTED = 20;
        public const int ALLOCATIONS_UPDATED = 21;
        public const int ALLOCATIONS_COMPLETED = 22;
        public const int SUBMITTED_TO_REPOSITORY = 23;
        public const int POST_TRADE_CONTINUATION_EVENT = 24;
        public const int POST_TRADE_VALUATION = 25;
        public const int PREVIOUS_TIME_PRIORITY = 26;
        public const int IDENTIFIER_ASSIGNED = 27;
        public const int PREVIOUS_IDENTIFIER_ASSIGNED = 28;
        public const int ORDER_CANCELLATION_TIME = 29;
        public const int ORDER_MODIFICATION_TIME = 30;
        public const int ORDER_ROUTING_TIME = 31;
        public const int TRADE_CANCELLATION_TIME = 32;
        public const int TRADE_MODIFICATION_TIME = 33;
        public const int REFERENCE_TIME_FOR_NBBO = 34;
    }


    /// <summary>
    /// TrdRegTimestampOrigin Field
    /// </summary>/
    public sealed class TrdRegTimestampOrigin : StringField
    {
        public const int TAG = 771;

        public TrdRegTimestampOrigin()
            : base(Tags.TrdRegTimestampOrigin) { }
        public TrdRegTimestampOrigin(string val)
            : base(Tags.TrdRegTimestampOrigin, val) { }

    }


    /// <summary>
    /// ConfirmRefID Field
    /// </summary>/
    public sealed class ConfirmRefID : StringField
    {
        public const int TAG = 772;

        public ConfirmRefID()
            : base(Tags.ConfirmRefID) { }
        public ConfirmRefID(string val)
            : base(Tags.ConfirmRefID, val) { }

    }


    /// <summary>
    /// ConfirmType Field
    /// </summary>/
    public sealed class ConfirmType : IntField
    {
        public const int TAG = 773;

        public ConfirmType()
            : base(Tags.ConfirmType) { }
        public ConfirmType(int val)
            : base(Tags.ConfirmType, val) { }


        // Field Enumerations
        public const int STATUS = 1;
        public const int CONFIRMATION = 2;
        public const int CONFIRMATION_REQUEST_REJECTED = 3;
    }


    /// <summary>
    /// ConfirmRejReason Field
    /// </summary>/
    public sealed class ConfirmRejReason : IntField
    {
        public const int TAG = 774;

        public ConfirmRejReason()
            : base(Tags.ConfirmRejReason) { }
        public ConfirmRejReason(int val)
            : base(Tags.ConfirmRejReason, val) { }


        // Field Enumerations
        public const int INCORRECT_OR_MISSING_ACCOUNT = 1;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_INSTRUCTIONS = 2;
        public const int OTHER = 99;
        public const int UNKNOWN_OR_MISSING_INDIVIDUALALLOCID = 3;
        public const int TRANSACTION_NOT_RECOGNIZED = 4;
        public const int DUPLICATE_TRANSACTION = 5;
        public const int INCORRECT_OR_MISSING_INSTRUMENT = 6;
        public const int INCORRECT_OR_MISSING_PRICE = 7;
        public const int INCORRECT_OR_MISSING_COMMISSION = 8;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_DATE = 9;
        public const int INCORRECT_OR_MISSING_FUND_ID_OR_FUND_NAME = 10;
        public const int INCORRECT_OR_MISSING_QUANTITY = 11;
        public const int INCORRECT_OR_MISSING_FEES = 12;
        public const int INCORRECT_OR_MISSING_TAX = 13;
        public const int INCORRECT_OR_MISSING_PARTY = 14;
        public const int INCORRECT_OR_MISSING_SIDE = 15;
        public const int INCORRECT_OR_MISSING_NET_MONEY = 16;
        public const int INCORRECT_OR_MISSING_TRADE_DATE = 17;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_CURRENCY_INSTRUCTIONS = 18;
        public const int INCORRECT_OR_MISSING_CAPACITY = 19;
        public const int MISMATCHED_ACCOUNT = 1;
        public const int MISSING_SETTLEMENT_INSTRUCTIONS = 2;
    }


    /// <summary>
    /// BookingType Field
    /// </summary>/
    public sealed class BookingType : IntField
    {
        public const int TAG = 775;

        public BookingType()
            : base(Tags.BookingType) { }
        public BookingType(int val)
            : base(Tags.BookingType, val) { }


        // Field Enumerations
        public const int REGULAR_BOOKING = 0;
        public const int CFD = 1;
        public const int TOTAL_RETURN_SWAP = 2;
    }


    /// <summary>
    /// IndividualAllocRejCode Field
    /// </summary>/
    public sealed class IndividualAllocRejCode : IntField
    {
        public const int TAG = 776;

        public IndividualAllocRejCode()
            : base(Tags.IndividualAllocRejCode) { }
        public IndividualAllocRejCode(int val)
            : base(Tags.IndividualAllocRejCode, val) { }


        // Field Enumerations
        public const int UNKNOWN_OR_MISSING_ACCOUNT = 0;
        public const int INCORRECT_OR_MISSING_BLOCK_QUANTITY = 1;
        public const int INCORRECT_OR_MISSING_AVERAGE_PRICE = 2;
        public const int UNKNOWN_EXECUTING_BROKER_MNEMONIC = 3;
        public const int INCORRECT_OR_MISSING_COMMISSION = 4;
        public const int UNKNOWN_ORDERID = 5;
        public const int UNKNOWN_LISTID = 6;
        public const int OTHER_7 = 7;
        public const int INCORRECT_OR_MISSING_ALLOCATED_QUANTITY = 8;
        public const int CALCULATION_DIFFERENCE = 9;
        public const int UNKNOWN_OR_STALE_EXECID = 10;
        public const int MISMATCHED_DATA = 11;
        public const int UNKNOWN_CLORDID = 12;
        public const int WAREHOUSE_REQUEST_REJECTED = 13;
        public const int OTHER_99 = 99;
        public const int DUPLICATE_OR_MISSING_INDIVIDUALALLOCID = 14;
        public const int TRADE_NOT_RECOGNIZED = 15;
        public const int TRADE_PREVIOUSLY_ALLOCATED = 16;
        public const int INCORRECT_OR_MISSING_INSTRUMENT = 17;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_DATE = 18;
        public const int INCORRECT_OR_MISSING_FUND_ID_OR_FUND_NAME = 19;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_INSTRUCTIONS = 20;
        public const int INCORRECT_OR_MISSING_FEES = 21;
        public const int INCORRECT_OR_MISSING_TAX = 22;
        public const int UNKNOWN_OR_MISSING_PARTY = 23;
        public const int INCORRECT_OR_MISSING_SIDE = 24;
        public const int INCORRECT_OR_MISSING_NET_MONEY = 25;
        public const int INCORRECT_OR_MISSING_TRADE_DATE = 26;
        public const int INCORRECT_OR_MISSING_SETTLEMENT_CURRENCY_INSTRUCTIONS = 27;
        public const int INCORRRECT_OR_MISSING_PROCESSCODE = 28;
    }


    /// <summary>
    /// SettlInstMsgID Field
    /// </summary>/
    public sealed class SettlInstMsgID : StringField
    {
        public const int TAG = 777;

        public SettlInstMsgID()
            : base(Tags.SettlInstMsgID) { }
        public SettlInstMsgID(string val)
            : base(Tags.SettlInstMsgID, val) { }

    }


    /// <summary>
    /// NoSettlInst Field
    /// </summary>/
    public sealed class NoSettlInst : IntField
    {
        public const int TAG = 778;

        public NoSettlInst()
            : base(Tags.NoSettlInst) { }
        public NoSettlInst(int val)
            : base(Tags.NoSettlInst, val) { }

    }


    /// <summary>
    /// LastUpdateTime Field
    /// </summary>/
    public sealed class LastUpdateTime : DateTimeField
    {
        public const int TAG = 779;

        public LastUpdateTime()
            : base(Tags.LastUpdateTime) { }
        public LastUpdateTime(DateTime val)
            : base(Tags.LastUpdateTime, val) { }
        public LastUpdateTime(DateTime val, bool showMilliseconds)
            : base(Tags.LastUpdateTime, val, showMilliseconds) { }
        public LastUpdateTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.LastUpdateTime, val, precision) { }

    }


    /// <summary>
    /// AllocSettlInstType Field
    /// </summary>/
    public sealed class AllocSettlInstType : IntField
    {
        public const int TAG = 780;

        public AllocSettlInstType()
            : base(Tags.AllocSettlInstType) { }
        public AllocSettlInstType(int val)
            : base(Tags.AllocSettlInstType, val) { }


        // Field Enumerations
        public const int USE_DEFAULT_INSTRUCTIONS = 0;
        public const int DERIVE_FROM_PARAMETERS_PROVIDED = 1;
        public const int FULL_DETAILS_PROVIDED = 2;
        public const int SSI_DB_IDS_PROVIDED = 3;
        public const int PHONE_FOR_INSTRUCTIONS = 4;
    }


    /// <summary>
    /// NoSettlPartyIDs Field
    /// </summary>/
    public sealed class NoSettlPartyIDs : IntField
    {
        public const int TAG = 781;

        public NoSettlPartyIDs()
            : base(Tags.NoSettlPartyIDs) { }
        public NoSettlPartyIDs(int val)
            : base(Tags.NoSettlPartyIDs, val) { }

    }


    /// <summary>
    /// SettlPartyID Field
    /// </summary>/
    public sealed class SettlPartyID : StringField
    {
        public const int TAG = 782;

        public SettlPartyID()
            : base(Tags.SettlPartyID) { }
        public SettlPartyID(string val)
            : base(Tags.SettlPartyID, val) { }

    }


    /// <summary>
    /// SettlPartyIDSource Field
    /// </summary>/
    public sealed class SettlPartyIDSource : CharField
    {
        public const int TAG = 783;

        public SettlPartyIDSource()
            : base(Tags.SettlPartyIDSource) { }
        public SettlPartyIDSource(char val)
            : base(Tags.SettlPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// SettlPartyRole Field
    /// </summary>/
    public sealed class SettlPartyRole : IntField
    {
        public const int TAG = 784;

        public SettlPartyRole()
            : base(Tags.SettlPartyRole) { }
        public SettlPartyRole(int val)
            : base(Tags.SettlPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// SettlPartySubID Field
    /// </summary>/
    public sealed class SettlPartySubID : StringField
    {
        public const int TAG = 785;

        public SettlPartySubID()
            : base(Tags.SettlPartySubID) { }
        public SettlPartySubID(string val)
            : base(Tags.SettlPartySubID, val) { }

    }


    /// <summary>
    /// SettlPartySubIDType Field
    /// </summary>/
    public sealed class SettlPartySubIDType : IntField
    {
        public const int TAG = 786;

        public SettlPartySubIDType()
            : base(Tags.SettlPartySubIDType) { }
        public SettlPartySubIDType(int val)
            : base(Tags.SettlPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// DlvyInstType Field
    /// </summary>/
    public sealed class DlvyInstType : CharField
    {
        public const int TAG = 787;

        public DlvyInstType()
            : base(Tags.DlvyInstType) { }
        public DlvyInstType(char val)
            : base(Tags.DlvyInstType, val) { }


        // Field Enumerations
        public const char CASH = 'C';
        public const char SECURITIES = 'S';
    }


    /// <summary>
    /// TerminationType Field
    /// </summary>/
    public sealed class TerminationType : IntField
    {
        public const int TAG = 788;

        public TerminationType()
            : base(Tags.TerminationType) { }
        public TerminationType(int val)
            : base(Tags.TerminationType, val) { }


        // Field Enumerations
        public const int OVERNIGHT = 1;
        public const int TERM = 2;
        public const int FLEXIBLE = 3;
        public const int OPEN = 4;
    }


    /// <summary>
    /// NextExpectedMsgSeqNum Field
    /// </summary>/
    public sealed class NextExpectedMsgSeqNum : IntField
    {
        public const int TAG = 789;

        public NextExpectedMsgSeqNum()
            : base(Tags.NextExpectedMsgSeqNum) { }
        public NextExpectedMsgSeqNum(int val)
            : base(Tags.NextExpectedMsgSeqNum, val) { }

    }


    /// <summary>
    /// OrdStatusReqID Field
    /// </summary>/
    public sealed class OrdStatusReqID : StringField
    {
        public const int TAG = 790;

        public OrdStatusReqID()
            : base(Tags.OrdStatusReqID) { }
        public OrdStatusReqID(string val)
            : base(Tags.OrdStatusReqID, val) { }

    }


    /// <summary>
    /// SettlInstReqID Field
    /// </summary>/
    public sealed class SettlInstReqID : StringField
    {
        public const int TAG = 791;

        public SettlInstReqID()
            : base(Tags.SettlInstReqID) { }
        public SettlInstReqID(string val)
            : base(Tags.SettlInstReqID, val) { }

    }


    /// <summary>
    /// SettlInstReqRejCode Field
    /// </summary>/
    public sealed class SettlInstReqRejCode : IntField
    {
        public const int TAG = 792;

        public SettlInstReqRejCode()
            : base(Tags.SettlInstReqRejCode) { }
        public SettlInstReqRejCode(int val)
            : base(Tags.SettlInstReqRejCode, val) { }


        // Field Enumerations
        public const int UNABLE_TO_PROCESS_REQUEST = 0;
        public const int UNKNOWN_ACCOUNT = 1;
        public const int NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// SecondaryAllocID Field
    /// </summary>/
    public sealed class SecondaryAllocID : StringField
    {
        public const int TAG = 793;

        public SecondaryAllocID()
            : base(Tags.SecondaryAllocID) { }
        public SecondaryAllocID(string val)
            : base(Tags.SecondaryAllocID, val) { }

    }


    /// <summary>
    /// AllocReportType Field
    /// </summary>/
    public sealed class AllocReportType : IntField
    {
        public const int TAG = 794;

        public AllocReportType()
            : base(Tags.AllocReportType) { }
        public AllocReportType(int val)
            : base(Tags.AllocReportType, val) { }


        // Field Enumerations
        public const int PRELIMINARY_REQUEST_TO_INTERMEDIARY = 2;
        public const int SELLSIDE_CALCULATED_USING_PRELIMINARY = 3;
        public const int SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY = 4;
        public const int WAREHOUSE_RECAP = 5;
        public const int REQUEST_TO_INTERMEDIARY = 8;
        public const int ACCEPT = 9;
        public const int REJECT = 10;
        public const int ACCEPT_PENDING = 11;
        public const int COMPLETE = 12;
        public const int REVERSE_PENDING = 14;
        public const int GIVE_UP = 15;
        public const int TAKE_UP = 16;
        public const int REVERSAL = 17;
        public const int ALLEGED_REVERSAL = 18;
        public const int SUB_ALLOCATION_GIVE_UP = 19;
    }


    /// <summary>
    /// AllocReportRefID Field
    /// </summary>/
    public sealed class AllocReportRefID : StringField
    {
        public const int TAG = 795;

        public AllocReportRefID()
            : base(Tags.AllocReportRefID) { }
        public AllocReportRefID(string val)
            : base(Tags.AllocReportRefID, val) { }

    }


    /// <summary>
    /// AllocCancReplaceReason Field
    /// </summary>/
    public sealed class AllocCancReplaceReason : IntField
    {
        public const int TAG = 796;

        public AllocCancReplaceReason()
            : base(Tags.AllocCancReplaceReason) { }
        public AllocCancReplaceReason(int val)
            : base(Tags.AllocCancReplaceReason, val) { }


        // Field Enumerations
        public const int ORIGINAL_DETAILS_INCOMPLETE_INCORRECT = 1;
        public const int CHANGE_IN_UNDERLYING_ORDER_DETAILS = 2;
        public const int OTHER = 99;
        public const int CANCELLED_BY_GIVE_UP_FIRM = 3;
    }


    /// <summary>
    /// CopyMsgIndicator Field
    /// </summary>/
    public sealed class CopyMsgIndicator : BooleanField
    {
        public const int TAG = 797;

        public CopyMsgIndicator()
            : base(Tags.CopyMsgIndicator) { }
        public CopyMsgIndicator(Boolean val)
            : base(Tags.CopyMsgIndicator, val) { }

    }


    /// <summary>
    /// AllocAccountType Field
    /// </summary>/
    public sealed class AllocAccountType : IntField
    {
        public const int TAG = 798;

        public AllocAccountType()
            : base(Tags.AllocAccountType) { }
        public AllocAccountType(int val)
            : base(Tags.AllocAccountType, val) { }


        // Field Enumerations
        public const int ACCOUNT_IS_CARRIED_PN_CUSTOMER_SIDE_OF_BOOKS = 1;
        public const int ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS = 2;
        public const int HOUSE_TRADER = 3;
        public const int FLOOR_TRADER = 4;
        public const int ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED = 6;
        public const int ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED = 7;
        public const int JOINT_BACK_OFFICE_ACCOUNT = 8;
        public const int ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_BOOKS = 1;
        public const int JOINT_BACKOFFICE_ACCOUNT = 8;
    }


    /// <summary>
    /// OrderAvgPx Field
    /// </summary>/
    public sealed class OrderAvgPx : DecimalField
    {
        public const int TAG = 799;

        public OrderAvgPx()
            : base(Tags.OrderAvgPx) { }
        public OrderAvgPx(Decimal val)
            : base(Tags.OrderAvgPx, val) { }

    }


    /// <summary>
    /// OrderBookingQty Field
    /// </summary>/
    public sealed class OrderBookingQty : DecimalField
    {
        public const int TAG = 800;

        public OrderBookingQty()
            : base(Tags.OrderBookingQty) { }
        public OrderBookingQty(Decimal val)
            : base(Tags.OrderBookingQty, val) { }

    }


    /// <summary>
    /// NoSettlPartySubIDs Field
    /// </summary>/
    public sealed class NoSettlPartySubIDs : IntField
    {
        public const int TAG = 801;

        public NoSettlPartySubIDs()
            : base(Tags.NoSettlPartySubIDs) { }
        public NoSettlPartySubIDs(int val)
            : base(Tags.NoSettlPartySubIDs, val) { }

    }


    /// <summary>
    /// NoPartySubIDs Field
    /// </summary>/
    public sealed class NoPartySubIDs : IntField
    {
        public const int TAG = 802;

        public NoPartySubIDs()
            : base(Tags.NoPartySubIDs) { }
        public NoPartySubIDs(int val)
            : base(Tags.NoPartySubIDs, val) { }

    }


    /// <summary>
    /// PartySubIDType Field
    /// </summary>/
    public sealed class PartySubIDType : IntField
    {
        public const int TAG = 803;

        public PartySubIDType()
            : base(Tags.PartySubIDType) { }
        public PartySubIDType(int val)
            : base(Tags.PartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoNestedPartySubIDs Field
    /// </summary>/
    public sealed class NoNestedPartySubIDs : IntField
    {
        public const int TAG = 804;

        public NoNestedPartySubIDs()
            : base(Tags.NoNestedPartySubIDs) { }
        public NoNestedPartySubIDs(int val)
            : base(Tags.NoNestedPartySubIDs, val) { }

    }


    /// <summary>
    /// NestedPartySubIDType Field
    /// </summary>/
    public sealed class NestedPartySubIDType : IntField
    {
        public const int TAG = 805;

        public NestedPartySubIDType()
            : base(Tags.NestedPartySubIDType) { }
        public NestedPartySubIDType(int val)
            : base(Tags.NestedPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoNested2PartySubIDs Field
    /// </summary>/
    public sealed class NoNested2PartySubIDs : IntField
    {
        public const int TAG = 806;

        public NoNested2PartySubIDs()
            : base(Tags.NoNested2PartySubIDs) { }
        public NoNested2PartySubIDs(int val)
            : base(Tags.NoNested2PartySubIDs, val) { }

    }


    /// <summary>
    /// Nested2PartySubIDType Field
    /// </summary>/
    public sealed class Nested2PartySubIDType : IntField
    {
        public const int TAG = 807;

        public Nested2PartySubIDType()
            : base(Tags.Nested2PartySubIDType) { }
        public Nested2PartySubIDType(int val)
            : base(Tags.Nested2PartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// AllocIntermedReqType Field
    /// </summary>/
    public sealed class AllocIntermedReqType : IntField
    {
        public const int TAG = 808;

        public AllocIntermedReqType()
            : base(Tags.AllocIntermedReqType) { }
        public AllocIntermedReqType(int val)
            : base(Tags.AllocIntermedReqType, val) { }


        // Field Enumerations
        public const int PENDING_ACCEPT = 1;
        public const int PENDING_RELEASE = 2;
        public const int PENDING_REVERSAL = 3;
        public const int ACCEPT = 4;
        public const int BLOCK_LEVEL_REJECT = 5;
        public const int ACCOUNT_LEVEL_REJECT = 6;
    }


    /// <summary>
    /// UnderlyingPx Field
    /// </summary>/
    public sealed class UnderlyingPx : DecimalField
    {
        public const int TAG = 810;

        public UnderlyingPx()
            : base(Tags.UnderlyingPx) { }
        public UnderlyingPx(Decimal val)
            : base(Tags.UnderlyingPx, val) { }

    }


    /// <summary>
    /// PriceDelta Field
    /// </summary>/
    public sealed class PriceDelta : DecimalField
    {
        public const int TAG = 811;

        public PriceDelta()
            : base(Tags.PriceDelta) { }
        public PriceDelta(Decimal val)
            : base(Tags.PriceDelta, val) { }

    }


    /// <summary>
    /// ApplQueueMax Field
    /// </summary>/
    public sealed class ApplQueueMax : IntField
    {
        public const int TAG = 812;

        public ApplQueueMax()
            : base(Tags.ApplQueueMax) { }
        public ApplQueueMax(int val)
            : base(Tags.ApplQueueMax, val) { }

    }


    /// <summary>
    /// ApplQueueDepth Field
    /// </summary>/
    public sealed class ApplQueueDepth : IntField
    {
        public const int TAG = 813;

        public ApplQueueDepth()
            : base(Tags.ApplQueueDepth) { }
        public ApplQueueDepth(int val)
            : base(Tags.ApplQueueDepth, val) { }

    }


    /// <summary>
    /// ApplQueueResolution Field
    /// </summary>/
    public sealed class ApplQueueResolution : IntField
    {
        public const int TAG = 814;

        public ApplQueueResolution()
            : base(Tags.ApplQueueResolution) { }
        public ApplQueueResolution(int val)
            : base(Tags.ApplQueueResolution, val) { }


        // Field Enumerations
        public const int NO_ACTION_TAKEN = 0;
        public const int QUEUE_FLUSHED = 1;
        public const int OVERLAY_LAST = 2;
        public const int END_SESSION = 3;
    }


    /// <summary>
    /// ApplQueueAction Field
    /// </summary>/
    public sealed class ApplQueueAction : IntField
    {
        public const int TAG = 815;

        public ApplQueueAction()
            : base(Tags.ApplQueueAction) { }
        public ApplQueueAction(int val)
            : base(Tags.ApplQueueAction, val) { }


        // Field Enumerations
        public const int NO_ACTION_TAKEN = 0;
        public const int QUEUE_FLUSHED = 1;
        public const int OVERLAY_LAST = 2;
        public const int END_SESSION = 3;
    }


    /// <summary>
    /// NoAltMDSource Field
    /// </summary>/
    public sealed class NoAltMDSource : IntField
    {
        public const int TAG = 816;

        public NoAltMDSource()
            : base(Tags.NoAltMDSource) { }
        public NoAltMDSource(int val)
            : base(Tags.NoAltMDSource, val) { }

    }


    /// <summary>
    /// AltMDSourceID Field
    /// </summary>/
    public sealed class AltMDSourceID : StringField
    {
        public const int TAG = 817;

        public AltMDSourceID()
            : base(Tags.AltMDSourceID) { }
        public AltMDSourceID(string val)
            : base(Tags.AltMDSourceID, val) { }

    }


    /// <summary>
    /// SecondaryTradeReportID Field
    /// </summary>/
    public sealed class SecondaryTradeReportID : StringField
    {
        public const int TAG = 818;

        public SecondaryTradeReportID()
            : base(Tags.SecondaryTradeReportID) { }
        public SecondaryTradeReportID(string val)
            : base(Tags.SecondaryTradeReportID, val) { }

    }


    /// <summary>
    /// AvgPxIndicator Field
    /// </summary>/
    public sealed class AvgPxIndicator : IntField
    {
        public const int TAG = 819;

        public AvgPxIndicator()
            : base(Tags.AvgPxIndicator) { }
        public AvgPxIndicator(int val)
            : base(Tags.AvgPxIndicator, val) { }


        // Field Enumerations
        public const int NO_AVERAGE_PRICING = 0;
        public const int TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_AVGPXGROUPID = 1;
        public const int LAST_TRADE_OF_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_AVGPXGROUPID = 2;
        public const int TRADE_IS_PART_OF_A_NOTIONAL_VALUE_AVERAGE_PRICE_GROUP = 3;
        public const int TRADE_IS_AVERAGE_PRICED = 4;
        public const int TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID = 1;
        public const int LAST_TRADE_IS_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID = 2;
        public const int LAST_TRADE_IN_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID = 2;
    }


    /// <summary>
    /// TradeLinkID Field
    /// </summary>/
    public sealed class TradeLinkID : StringField
    {
        public const int TAG = 820;

        public TradeLinkID()
            : base(Tags.TradeLinkID) { }
        public TradeLinkID(string val)
            : base(Tags.TradeLinkID, val) { }

    }


    /// <summary>
    /// OrderInputDevice Field
    /// </summary>/
    public sealed class OrderInputDevice : StringField
    {
        public const int TAG = 821;

        public OrderInputDevice()
            : base(Tags.OrderInputDevice) { }
        public OrderInputDevice(string val)
            : base(Tags.OrderInputDevice, val) { }

    }


    /// <summary>
    /// UnderlyingTradingSessionID Field
    /// </summary>/
    public sealed class UnderlyingTradingSessionID : StringField
    {
        public const int TAG = 822;

        public UnderlyingTradingSessionID()
            : base(Tags.UnderlyingTradingSessionID) { }
        public UnderlyingTradingSessionID(string val)
            : base(Tags.UnderlyingTradingSessionID, val) { }

    }


    /// <summary>
    /// UnderlyingTradingSessionSubID Field
    /// </summary>/
    public sealed class UnderlyingTradingSessionSubID : StringField
    {
        public const int TAG = 823;

        public UnderlyingTradingSessionSubID()
            : base(Tags.UnderlyingTradingSessionSubID) { }
        public UnderlyingTradingSessionSubID(string val)
            : base(Tags.UnderlyingTradingSessionSubID, val) { }

    }


    /// <summary>
    /// TradeLegRefID Field
    /// </summary>/
    public sealed class TradeLegRefID : StringField
    {
        public const int TAG = 824;

        public TradeLegRefID()
            : base(Tags.TradeLegRefID) { }
        public TradeLegRefID(string val)
            : base(Tags.TradeLegRefID, val) { }

    }


    /// <summary>
    /// ExchangeRule Field
    /// </summary>/
    public sealed class ExchangeRule : StringField
    {
        public const int TAG = 825;

        public ExchangeRule()
            : base(Tags.ExchangeRule) { }
        public ExchangeRule(string val)
            : base(Tags.ExchangeRule, val) { }

    }


    /// <summary>
    /// TradeAllocIndicator Field
    /// </summary>/
    public sealed class TradeAllocIndicator : IntField
    {
        public const int TAG = 826;

        public TradeAllocIndicator()
            : base(Tags.TradeAllocIndicator) { }
        public TradeAllocIndicator(int val)
            : base(Tags.TradeAllocIndicator, val) { }


        // Field Enumerations
        public const int ALLOCATION_NOT_REQUIRED = 0;
        public const int ALLOCATION_REQUIRED = 1;
        public const int USE_ALLOCATION_PROVIDED_WITH_THE_TRADE = 2;
        public const int ALLOCATION_GIVE_UP_EXECUTOR = 3;
        public const int ALLOCATION_FROM_EXECUTOR = 4;
        public const int ALLOCATION_TO_CLAIM_ACCOUNT = 5;
        public const int TRADE_SPLIT = 6;
    }


    /// <summary>
    /// ExpirationCycle Field
    /// </summary>/
    public sealed class ExpirationCycle : IntField
    {
        public const int TAG = 827;

        public ExpirationCycle()
            : base(Tags.ExpirationCycle) { }
        public ExpirationCycle(int val)
            : base(Tags.ExpirationCycle, val) { }


        // Field Enumerations
        public const int EXPIRE_ON_TRADING_SESSION_CLOSE = 0;
        public const int EXPIRE_ON_TRADING_SESSION_OPEN = 1;
        public const int TRADING_ELIGIBILITY_EXPIRATION_SPECIFIED_IN_THE_DATE_AND_TIME_FIELDS_EVENTDATE = 2;
    }


    /// <summary>
    /// TrdType Field
    /// </summary>/
    public sealed class TrdType : IntField
    {
        public const int TAG = 828;

        public TrdType()
            : base(Tags.TrdType) { }
        public TrdType(int val)
            : base(Tags.TrdType, val) { }


        // Field Enumerations
        public const int REGULAR_TRADE = 0;
        public const int BLOCK_TRADE_1 = 1;
        public const int EXCHANGE_FOR_PHYSICAL = 2;
        public const int TRANSFER = 3;
        public const int LATE_TRADE = 4;
        public const int T_TRADE = 5;
        public const int WEIGHTED_AVERAGE_PRICE_TRADE = 6;
        public const int BUNCHED_TRADE = 7;
        public const int LATE_BUNCHED_TRADE = 8;
        public const int PRIOR_REFERENCE_PRICE_TRADE = 9;
        public const int AFTER_HOURS_TRADE = 10;
        public const int EXCHANGE_FOR_RISK = 11;
        public const int EXCHANGE_FOR_SWAP = 12;
        public const int EXCHANGE_OF_FUTURES_FOR_IN_MARKET_FUTURES = 13;
        public const int EXCHANGE_OF_OPTIONS_FOR_OPTIONS = 14;
        public const int TRADING_AT_SETTLEMENT = 15;
        public const int ALL_OR_NONE = 16;
        public const int FUTURES_LARGE_ORDER_EXECUTION = 17;
        public const int EXCHANGE_OF_FUTURES_FOR_EXTERNAL_MARKET_FUTURES = 18;
        public const int OPTION_INTERIM_TRADE = 19;
        public const int OPTION_CABINET_TRADE = 20;
        public const int PRIVATELY_NEGOTIATED_TRADE = 22;
        public const int SUBSTITUTION_OF_FUTURES_FOR_FORWARDS = 23;
        public const int NON_STANDARD_SETTLEMENT = 48;
        public const int DERIVATIVE_RELATED_TRANSACTION = 49;
        public const int PORTFOLIO_TRADE = 50;
        public const int VOLUME_WEIGHTED_AVERAGE_TRADE = 51;
        public const int EXCHANGE_GRANTED_TRADE = 52;
        public const int REPURCHASE_AGREEMENT = 53;
        public const int OTC = 54;
        public const int EXCHANGE_BASIS_FACILITY = 55;
        public const int ERROR_TRADE = 24;
        public const int SPECIAL_CUM_DIVIDEND = 25;
        public const int SPECIAL_EX_DIVIDEND = 26;
        public const int SPECIAL_CUM_COUPON = 27;
        public const int SPECIAL_EX_COUPON = 28;
        public const int CASH_SETTLEMENT = 29;
        public const int SPECIAL_PRICE = 30;
        public const int GUARANTEED_DELIVERY = 31;
        public const int SPECIAL_CUM_RIGHTS = 32;
        public const int SPECIAL_EX_RIGHTS = 33;
        public const int SPECIAL_CUM_CAPITAL_REPAYMENTS = 34;
        public const int SPECIAL_EX_CAPITAL_REPAYMENTS = 35;
        public const int SPECIAL_CUM_BONUS = 36;
        public const int SPECIAL_EX_BONUS = 37;
        public const int BLOCK_TRADE_38 = 38;
        public const int WORKED_PRINCIPAL_TRADE = 39;
        public const int BLOCK_TRADES = 40;
        public const int NAME_CHANGE = 41;
        public const int PORTFOLIO_TRANSFER = 42;
        public const int PROROGATION_BUY = 43;
        public const int PROROGATION_SELL = 44;
        public const int OPTION_EXERCISE = 45;
        public const int DELTA_NEUTRAL_TRANSACTION = 46;
        public const int FINANCING_TRANSACTION = 47;
        public const int OPENING_TRADE = 56;
        public const int NETTED_TRADE = 57;
        public const int BLOCK_SWAP_TRADE = 58;
        public const int GIVE_UP_GIVE_IN_TRADE = 61;
        public const int DARK_TRADE = 62;
        public const int TECHNICAL_TRADE = 63;
        public const int BENCHMARK = 64;
        public const int CREDIT_EVENT_TRADE = 59;
        public const int SUCCESSION_EVENT_TRADE = 60;
        public const int PACKAGE_TRADE = 65;
        public const int ROLL_TRADE = 66;
        public const int EFP = 2;
        public const int EXCHANGE_OF_FUTURES_FOR = 13;
        public const int EXCHANGE_OF_FUTURES_FOR_FUTURES = 18;
        public const int PRIVATELY_NEGOTIATED_TRADES = 22;
        public const int BLOCK_TRADE = 1;
    }


    /// <summary>
    /// TrdSubType Field
    /// </summary>/
    public sealed class TrdSubType : IntField
    {
        public const int TAG = 829;

        public TrdSubType()
            : base(Tags.TrdSubType) { }
        public TrdSubType(int val)
            : base(Tags.TrdSubType, val) { }


        // Field Enumerations
        public const int CMTA = 0;
        public const int INTERNAL_TRANSFER_OR_ADJUSTMENT = 1;
        public const int EXTERNAL_TRANSFER_OR_TRANSFER_OF_ACCOUNT = 2;
        public const int REJECT_FOR_SUBMITTING_SIDE = 3;
        public const int ADVISORY_FOR_CONTRA_SIDE = 4;
        public const int OFFSET_DUE_TO_AN_ALLOCATION = 5;
        public const int ONSET_DUE_TO_AN_ALLOCATION = 6;
        public const int DIFFERENTIAL_SPREAD = 7;
        public const int IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHT = 8;
        public const int TRANSACTION_FROM_EXERCISE = 9;
        public const int TRANSACTION_FROM_ASSIGNMENT = 10;
        public const int ACATS = 11;
        public const int OFF_HOURS_TRADE = 33;
        public const int ON_HOURS_TRADE = 34;
        public const int OTC_QUOTE = 35;
        public const int CONVERTED_SWAP = 36;
        public const int AI = 14;
        public const int B = 15;
        public const int K = 16;
        public const int LC = 17;
        public const int M = 18;
        public const int N = 19;
        public const int NM = 20;
        public const int NR = 21;
        public const int P = 22;
        public const int PA = 23;
        public const int PC = 24;
        public const int PN = 25;
        public const int R = 26;
        public const int RO = 27;
        public const int RT = 28;
        public const int SW = 29;
        public const int T = 30;
        public const int WN = 31;
        public const int WT = 32;
        public const int CROSSED_TRADE = 37;
        public const int INTERIM_PROTECTED_TRADE = 38;
        public const int LARGE_IN_SCALE = 39;
        public const int WASH_TRADE = 40;
        public const int TRADE_AT_SETTLEMENT = 41;
        public const int TRADE_AT_MARKER = 43;
        public const int AUCTION_TRADE = 42;
        public const int DEFAULT = 44;
        public const int RESTRUCTURING = 45;
        public const int MERGER = 46;
        public const int SPIN_OFF = 47;
        public const int MULTILATERAL_COMPRESSION = 48;
        public const int BALANCING = 50;
        public const int BASIS_TRADE_INDEX_CLOSE = 51;
        public const int TRADE_AT_CASH_OPEN = 52;
        public const int TRADE_SUBMITTED_TO_VENUE_FOR_CLEARING_AND_SETTLEMENT = 53;
        public const int BILATERAL_COMPRESSION = 54;
        public const int ONSET_DUT_TO_AN_ALLOCATION = 6;
    }


    /// <summary>
    /// TransferReason Field
    /// </summary>/
    public sealed class TransferReason : StringField
    {
        public const int TAG = 830;

        public TransferReason()
            : base(Tags.TransferReason) { }
        public TransferReason(string val)
            : base(Tags.TransferReason, val) { }

    }


    /// <summary>
    /// AsgnReqID Field
    /// </summary>/
    public sealed class AsgnReqID : StringField
    {
        public const int TAG = 831;

        public AsgnReqID()
            : base(Tags.AsgnReqID) { }
        public AsgnReqID(string val)
            : base(Tags.AsgnReqID, val) { }

    }


    /// <summary>
    /// TotNumAssignmentReports Field
    /// </summary>/
    public sealed class TotNumAssignmentReports : IntField
    {
        public const int TAG = 832;

        public TotNumAssignmentReports()
            : base(Tags.TotNumAssignmentReports) { }
        public TotNumAssignmentReports(int val)
            : base(Tags.TotNumAssignmentReports, val) { }

    }


    /// <summary>
    /// AsgnRptID Field
    /// </summary>/
    public sealed class AsgnRptID : StringField
    {
        public const int TAG = 833;

        public AsgnRptID()
            : base(Tags.AsgnRptID) { }
        public AsgnRptID(string val)
            : base(Tags.AsgnRptID, val) { }

    }


    /// <summary>
    /// ThresholdAmount Field
    /// </summary>/
    public sealed class ThresholdAmount : DecimalField
    {
        public const int TAG = 834;

        public ThresholdAmount()
            : base(Tags.ThresholdAmount) { }
        public ThresholdAmount(Decimal val)
            : base(Tags.ThresholdAmount, val) { }

    }


    /// <summary>
    /// PegMoveType Field
    /// </summary>/
    public sealed class PegMoveType : IntField
    {
        public const int TAG = 835;

        public PegMoveType()
            : base(Tags.PegMoveType) { }
        public PegMoveType(int val)
            : base(Tags.PegMoveType, val) { }


        // Field Enumerations
        public const int FLOATING = 0;
        public const int FIXED = 1;
    }


    /// <summary>
    /// PegOffsetType Field
    /// </summary>/
    public sealed class PegOffsetType : IntField
    {
        public const int TAG = 836;

        public PegOffsetType()
            : base(Tags.PegOffsetType) { }
        public PegOffsetType(int val)
            : base(Tags.PegOffsetType, val) { }


        // Field Enumerations
        public const int PRICE = 0;
        public const int BASIS_POINTS = 1;
        public const int TICKS = 2;
        public const int PRICE_TIER = 3;
        public const int PERCENTAGE = 4;
        public const int PRICE_TIER_LEVEL = 3;
    }


    /// <summary>
    /// PegLimitType Field
    /// </summary>/
    public sealed class PegLimitType : IntField
    {
        public const int TAG = 837;

        public PegLimitType()
            : base(Tags.PegLimitType) { }
        public PegLimitType(int val)
            : base(Tags.PegLimitType, val) { }


        // Field Enumerations
        public const int OR_BETTER = 0;
        public const int STRICT = 1;
        public const int OR_WORSE = 2;
    }


    /// <summary>
    /// PegRoundDirection Field
    /// </summary>/
    public sealed class PegRoundDirection : IntField
    {
        public const int TAG = 838;

        public PegRoundDirection()
            : base(Tags.PegRoundDirection) { }
        public PegRoundDirection(int val)
            : base(Tags.PegRoundDirection, val) { }


        // Field Enumerations
        public const int MORE_AGGRESSIVE = 1;
        public const int MORE_PASSIVE = 2;
    }


    /// <summary>
    /// PeggedPrice Field
    /// </summary>/
    public sealed class PeggedPrice : DecimalField
    {
        public const int TAG = 839;

        public PeggedPrice()
            : base(Tags.PeggedPrice) { }
        public PeggedPrice(Decimal val)
            : base(Tags.PeggedPrice, val) { }

    }


    /// <summary>
    /// PegScope Field
    /// </summary>/
    public sealed class PegScope : IntField
    {
        public const int TAG = 840;

        public PegScope()
            : base(Tags.PegScope) { }
        public PegScope(int val)
            : base(Tags.PegScope, val) { }


        // Field Enumerations
        public const int LOCAL = 1;
        public const int NATIONAL = 2;
        public const int GLOBAL = 3;
        public const int NATIONAL_EXCLUDING_LOCAL = 4;
        public const int NATIONAL_XXCLUDING_LOCAL = 4;
    }


    /// <summary>
    /// DiscretionMoveType Field
    /// </summary>/
    public sealed class DiscretionMoveType : IntField
    {
        public const int TAG = 841;

        public DiscretionMoveType()
            : base(Tags.DiscretionMoveType) { }
        public DiscretionMoveType(int val)
            : base(Tags.DiscretionMoveType, val) { }


        // Field Enumerations
        public const int FLOATING = 0;
        public const int FIXED = 1;
    }


    /// <summary>
    /// DiscretionOffsetType Field
    /// </summary>/
    public sealed class DiscretionOffsetType : IntField
    {
        public const int TAG = 842;

        public DiscretionOffsetType()
            : base(Tags.DiscretionOffsetType) { }
        public DiscretionOffsetType(int val)
            : base(Tags.DiscretionOffsetType, val) { }


        // Field Enumerations
        public const int PRICE = 0;
        public const int BASIS_POINTS = 1;
        public const int TICKS = 2;
        public const int PRICE_TIER = 3;
        public const int PRICE_TIER_LEVEL = 3;
    }


    /// <summary>
    /// DiscretionLimitType Field
    /// </summary>/
    public sealed class DiscretionLimitType : IntField
    {
        public const int TAG = 843;

        public DiscretionLimitType()
            : base(Tags.DiscretionLimitType) { }
        public DiscretionLimitType(int val)
            : base(Tags.DiscretionLimitType, val) { }


        // Field Enumerations
        public const int OR_BETTER = 0;
        public const int STRICT = 1;
        public const int OR_WORSE = 2;
    }


    /// <summary>
    /// DiscretionRoundDirection Field
    /// </summary>/
    public sealed class DiscretionRoundDirection : IntField
    {
        public const int TAG = 844;

        public DiscretionRoundDirection()
            : base(Tags.DiscretionRoundDirection) { }
        public DiscretionRoundDirection(int val)
            : base(Tags.DiscretionRoundDirection, val) { }


        // Field Enumerations
        public const int MORE_AGGRESSIVE = 1;
        public const int MORE_PASSIVE = 2;
    }


    /// <summary>
    /// DiscretionPrice Field
    /// </summary>/
    public sealed class DiscretionPrice : DecimalField
    {
        public const int TAG = 845;

        public DiscretionPrice()
            : base(Tags.DiscretionPrice) { }
        public DiscretionPrice(Decimal val)
            : base(Tags.DiscretionPrice, val) { }

    }


    /// <summary>
    /// DiscretionScope Field
    /// </summary>/
    public sealed class DiscretionScope : IntField
    {
        public const int TAG = 846;

        public DiscretionScope()
            : base(Tags.DiscretionScope) { }
        public DiscretionScope(int val)
            : base(Tags.DiscretionScope, val) { }


        // Field Enumerations
        public const int LOCAL = 1;
        public const int NATIONAL = 2;
        public const int GLOBAL = 3;
        public const int NATIONAL_EXCLUDING_LOCAL = 4;
    }


    /// <summary>
    /// TargetStrategy Field
    /// </summary>/
    public sealed class TargetStrategy : IntField
    {
        public const int TAG = 847;

        public TargetStrategy()
            : base(Tags.TargetStrategy) { }
        public TargetStrategy(int val)
            : base(Tags.TargetStrategy, val) { }


        // Field Enumerations
        public const int VWAP = 1;
        public const int PARTICIPATE = 2;
        public const int MININIZE_MARKET_IMPACT = 3;
    }


    /// <summary>
    /// TargetStrategyParameters Field
    /// </summary>/
    public sealed class TargetStrategyParameters : StringField
    {
        public const int TAG = 848;

        public TargetStrategyParameters()
            : base(Tags.TargetStrategyParameters) { }
        public TargetStrategyParameters(string val)
            : base(Tags.TargetStrategyParameters, val) { }

    }


    /// <summary>
    /// ParticipationRate Field
    /// </summary>/
    public sealed class ParticipationRate : DecimalField
    {
        public const int TAG = 849;

        public ParticipationRate()
            : base(Tags.ParticipationRate) { }
        public ParticipationRate(Decimal val)
            : base(Tags.ParticipationRate, val) { }

    }


    /// <summary>
    /// TargetStrategyPerformance Field
    /// </summary>/
    public sealed class TargetStrategyPerformance : DecimalField
    {
        public const int TAG = 850;

        public TargetStrategyPerformance()
            : base(Tags.TargetStrategyPerformance) { }
        public TargetStrategyPerformance(Decimal val)
            : base(Tags.TargetStrategyPerformance, val) { }

    }


    /// <summary>
    /// LastLiquidityInd Field
    /// </summary>/
    public sealed class LastLiquidityInd : IntField
    {
        public const int TAG = 851;

        public LastLiquidityInd()
            : base(Tags.LastLiquidityInd) { }
        public LastLiquidityInd(int val)
            : base(Tags.LastLiquidityInd, val) { }


        // Field Enumerations
        public const int ADDED_LIQUIDITY = 1;
        public const int REMOVED_LIQUIDITY = 2;
        public const int LIQUIDITY_ROUTED_OUT = 3;
        public const int AUCTION_EXECUTION = 4;
        public const int TRIGGERED_STOP_ORDER = 5;
        public const int TRIGGERED_CONTINGENCY_ORDER = 6;
        public const int TRIGGERED_MARKET_ORDER = 7;
        public const int NEITHER_ADDED_NOR_REMOVED_LIQUIDITY = 0;
        public const int REMOVED_LIQUIDITY_AFTER_FIRM_ORDER_COMMITMENT = 8;
        public const int AUCTION_EXECUTION_AFTER_FIRM_ORDER_COMMITMENT = 9;
        public const int AUCTION = 4;
    }


    /// <summary>
    /// PublishTrdIndicator Field
    /// </summary>/
    public sealed class PublishTrdIndicator : BooleanField
    {
        public const int TAG = 852;

        public PublishTrdIndicator()
            : base(Tags.PublishTrdIndicator) { }
        public PublishTrdIndicator(Boolean val)
            : base(Tags.PublishTrdIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// ShortSaleReason Field
    /// </summary>/
    public sealed class ShortSaleReason : IntField
    {
        public const int TAG = 853;

        public ShortSaleReason()
            : base(Tags.ShortSaleReason) { }
        public ShortSaleReason(int val)
            : base(Tags.ShortSaleReason, val) { }


        // Field Enumerations
        public const int DEALER_SOLD_SHORT = 0;
        public const int DEALER_SOLD_SHORT_EXEMPT = 1;
        public const int SELLING_CUSTOMER_SOLD_SHORT = 2;
        public const int SELLING_CUSTOMER_SOLD_SHORT_EXEMPT = 3;
        public const int QUALIFIED_SERVICE_REPRESENTATIVE = 4;
        public const int QSR_OR_AGU_CONTRA_SIDE_SOLD_SHORT_EXEMPT = 5;
        public const int QUALIFED_SERVICE_REPRESENTATIVE_OR_AUTOMATIC_GIVEUP_CONTRA_SIDE_SOLD_SHORT = 4;
    }


    /// <summary>
    /// QtyType Field
    /// </summary>/
    public sealed class QtyType : IntField
    {
        public const int TAG = 854;

        public QtyType()
            : base(Tags.QtyType) { }
        public QtyType(int val)
            : base(Tags.QtyType, val) { }


        // Field Enumerations
        public const int UNITS = 0;
        public const int CONTRACTS = 1;
        public const int UNIT_OF_MEASURE_PER_TIME_UNIT = 2;
        public const int UNITS_OF_MEASURE_PER_TIME_UNIT = 2;
    }


    /// <summary>
    /// SecondaryTrdType Field
    /// </summary>/
    public sealed class SecondaryTrdType : IntField
    {
        public const int TAG = 855;

        public SecondaryTrdType()
            : base(Tags.SecondaryTrdType) { }
        public SecondaryTrdType(int val)
            : base(Tags.SecondaryTrdType, val) { }


        // Field Enumerations
        public const int REGULAR_TRADE = 0;
        public const int BLOCK_TRADE_1 = 1;
        public const int EXCHANGE_FOR_PHYSICAL = 2;
        public const int TRANSFER = 3;
        public const int LATE_TRADE = 4;
        public const int T_TRADE = 5;
        public const int WEIGHTED_AVERAGE_PRICE_TRADE = 6;
        public const int BUNCHED_TRADE = 7;
        public const int LATE_BUNCHED_TRADE = 8;
        public const int PRIOR_REFERENCE_PRICE_TRADE = 9;
        public const int AFTER_HOURS_TRADE = 10;
        public const int EXCHANGE_FOR_RISK = 11;
        public const int EXCHANGE_FOR_SWAP = 12;
        public const int EXCHANGE_OF_FUTURES_FOR_IN_MARKET_FUTURES = 13;
        public const int EXCHANGE_OF_OPTIONS_FOR_OPTIONS = 14;
        public const int TRADING_AT_SETTLEMENT = 15;
        public const int ALL_OR_NONE = 16;
        public const int FUTURES_LARGE_ORDER_EXECUTION = 17;
        public const int EXCHANGE_OF_FUTURES_FOR_EXTERNAL_MARKET_FUTURES = 18;
        public const int OPTION_INTERIM_TRADE = 19;
        public const int OPTION_CABINET_TRADE = 20;
        public const int PRIVATELY_NEGOTIATED_TRADE = 22;
        public const int SUBSTITUTION_OF_FUTURES_FOR_FORWARDS = 23;
        public const int NON_STANDARD_SETTLEMENT = 48;
        public const int DERIVATIVE_RELATED_TRANSACTION = 49;
        public const int PORTFOLIO_TRADE = 50;
        public const int VOLUME_WEIGHTED_AVERAGE_TRADE = 51;
        public const int EXCHANGE_GRANTED_TRADE = 52;
        public const int REPURCHASE_AGREEMENT = 53;
        public const int OTC = 54;
        public const int EXCHANGE_BASIS_FACILITY = 55;
        public const int ERROR_TRADE = 24;
        public const int SPECIAL_CUM_DIVIDEND = 25;
        public const int SPECIAL_EX_DIVIDEND = 26;
        public const int SPECIAL_CUM_COUPON = 27;
        public const int SPECIAL_EX_COUPON = 28;
        public const int CASH_SETTLEMENT = 29;
        public const int SPECIAL_PRICE = 30;
        public const int GUARANTEED_DELIVERY = 31;
        public const int SPECIAL_CUM_RIGHTS = 32;
        public const int SPECIAL_EX_RIGHTS = 33;
        public const int SPECIAL_CUM_CAPITAL_REPAYMENTS = 34;
        public const int SPECIAL_EX_CAPITAL_REPAYMENTS = 35;
        public const int SPECIAL_CUM_BONUS = 36;
        public const int SPECIAL_EX_BONUS = 37;
        public const int BLOCK_TRADE_38 = 38;
        public const int WORKED_PRINCIPAL_TRADE = 39;
        public const int BLOCK_TRADES = 40;
        public const int NAME_CHANGE = 41;
        public const int PORTFOLIO_TRANSFER = 42;
        public const int PROROGATION_BUY = 43;
        public const int PROROGATION_SELL = 44;
        public const int OPTION_EXERCISE = 45;
        public const int DELTA_NEUTRAL_TRANSACTION = 46;
        public const int FINANCING_TRANSACTION = 47;
        public const int OPENING_TRADE = 56;
        public const int NETTED_TRADE = 57;
        public const int BLOCK_SWAP_TRADE = 58;
        public const int GIVE_UP_GIVE_IN_TRADE = 61;
        public const int DARK_TRADE = 62;
        public const int TECHNICAL_TRADE = 63;
        public const int BENCHMARK = 64;
        public const int CREDIT_EVENT_TRADE = 59;
        public const int SUCCESSION_EVENT_TRADE = 60;
        public const int PACKAGE_TRADE = 65;
        public const int ROLL_TRADE = 66;
    }


    /// <summary>
    /// TradeReportType Field
    /// </summary>/
    public sealed class TradeReportType : IntField
    {
        public const int TAG = 856;

        public TradeReportType()
            : base(Tags.TradeReportType) { }
        public TradeReportType(int val)
            : base(Tags.TradeReportType, val) { }


        // Field Enumerations
        public const int SUBMIT = 0;
        public const int ALLEGED_1 = 1;
        public const int ACCEPT = 2;
        public const int DECLINE = 3;
        public const int ADDENDUM = 4;
        public const int NO_WAS = 5;
        public const int TRADE_REPORT_CANCEL = 6;
        public const int VAL_7 = 7;
        public const int DEFAULTED = 8;
        public const int INVALID_CMTA = 9;
        public const int PENDED = 10;
        public const int ALLEGED_NEW = 11;
        public const int ALLEGED_ADDENDUM = 12;
        public const int ALLEGED_NO_WAS = 13;
        public const int ALLEGED_TRADE_REPORT_CANCEL = 14;
        public const int ALLEGED_15 = 15;
        public const int VERIFY = 16;
        public const int DISPUTE = 17;
        public const int NON_MATERIAL_UPDATE = 18;
        public const int ALLEGED = 1;
        public const int LOCKED_IN_TRADE_BREAK = 7;
    }


    /// <summary>
    /// AllocNoOrdersType Field
    /// </summary>/
    public sealed class AllocNoOrdersType : IntField
    {
        public const int TAG = 857;

        public AllocNoOrdersType()
            : base(Tags.AllocNoOrdersType) { }
        public AllocNoOrdersType(int val)
            : base(Tags.AllocNoOrdersType, val) { }


        // Field Enumerations
        public const int NOT_SPECIFIED = 0;
        public const int EXPLICIT_LIST_PROVIDED = 1;
    }


    /// <summary>
    /// SharedCommission Field
    /// </summary>/
    public sealed class SharedCommission : DecimalField
    {
        public const int TAG = 858;

        public SharedCommission()
            : base(Tags.SharedCommission) { }
        public SharedCommission(Decimal val)
            : base(Tags.SharedCommission, val) { }

    }


    /// <summary>
    /// ConfirmReqID Field
    /// </summary>/
    public sealed class ConfirmReqID : StringField
    {
        public const int TAG = 859;

        public ConfirmReqID()
            : base(Tags.ConfirmReqID) { }
        public ConfirmReqID(string val)
            : base(Tags.ConfirmReqID, val) { }

    }


    /// <summary>
    /// AvgParPx Field
    /// </summary>/
    public sealed class AvgParPx : DecimalField
    {
        public const int TAG = 860;

        public AvgParPx()
            : base(Tags.AvgParPx) { }
        public AvgParPx(Decimal val)
            : base(Tags.AvgParPx, val) { }

    }


    /// <summary>
    /// ReportedPx Field
    /// </summary>/
    public sealed class ReportedPx : DecimalField
    {
        public const int TAG = 861;

        public ReportedPx()
            : base(Tags.ReportedPx) { }
        public ReportedPx(Decimal val)
            : base(Tags.ReportedPx, val) { }

    }


    /// <summary>
    /// NoCapacities Field
    /// </summary>/
    public sealed class NoCapacities : IntField
    {
        public const int TAG = 862;

        public NoCapacities()
            : base(Tags.NoCapacities) { }
        public NoCapacities(int val)
            : base(Tags.NoCapacities, val) { }

    }


    /// <summary>
    /// OrderCapacityQty Field
    /// </summary>/
    public sealed class OrderCapacityQty : DecimalField
    {
        public const int TAG = 863;

        public OrderCapacityQty()
            : base(Tags.OrderCapacityQty) { }
        public OrderCapacityQty(Decimal val)
            : base(Tags.OrderCapacityQty, val) { }

    }


    /// <summary>
    /// NoEvents Field
    /// </summary>/
    public sealed class NoEvents : IntField
    {
        public const int TAG = 864;

        public NoEvents()
            : base(Tags.NoEvents) { }
        public NoEvents(int val)
            : base(Tags.NoEvents, val) { }

    }


    /// <summary>
    /// EventType Field
    /// </summary>/
    public sealed class EventType : IntField
    {
        public const int TAG = 865;

        public EventType()
            : base(Tags.EventType) { }
        public EventType(int val)
            : base(Tags.EventType, val) { }


        // Field Enumerations
        public const int PUT = 1;
        public const int CALL = 2;
        public const int TENDER = 3;
        public const int SINKING_FUND_CALL = 4;
        public const int ACTIVATION = 5;
        public const int INACTIVATION = 6;
        public const int LAST_ELIGIBLE_TRADE_DATE = 7;
        public const int SWAP_START_DATE = 8;
        public const int SWAP_END_DATE = 9;
        public const int SWAP_ROLL_DATE = 10;
        public const int SWAP_NEXT_START_DATE = 11;
        public const int SWAP_NEXT_ROLL_DATE = 12;
        public const int FIRST_DELIVERY_DATE = 13;
        public const int LAST_DELIVERY_DATE = 14;
        public const int INITIAL_INVENTORY_DUE_DATE = 15;
        public const int FINAL_INVENTORY_DUE_DATE = 16;
        public const int FIRST_INTENT_DATE = 17;
        public const int LAST_INTENT_DATE = 18;
        public const int POSITION_REMOVAL_DATE = 19;
        public const int OTHER = 99;
        public const int MINIMUM_NOTICE = 20;
        public const int DELIVERY_START_TIME = 21;
        public const int DELIVERY_END_TIME = 22;
        public const int FIRST_NOTICE_DATE = 23;
        public const int LAST_NOTICE_DATE = 24;
        public const int FIRST_EXERCISE_DATE = 25;
        public const int REDEMPTION_DATE = 26;
        public const int TRADE_CONTINUATION_EFFECTIVE_DATE = 27;
        public const int INACTIVIATION = 6;
    }


    /// <summary>
    /// EventDate Field
    /// </summary>/
    public sealed class EventDate : StringField
    {
        public const int TAG = 866;

        public EventDate()
            : base(Tags.EventDate) { }
        public EventDate(string val)
            : base(Tags.EventDate, val) { }

    }


    /// <summary>
    /// EventPx Field
    /// </summary>/
    public sealed class EventPx : DecimalField
    {
        public const int TAG = 867;

        public EventPx()
            : base(Tags.EventPx) { }
        public EventPx(Decimal val)
            : base(Tags.EventPx, val) { }

    }


    /// <summary>
    /// EventText Field
    /// </summary>/
    public sealed class EventText : StringField
    {
        public const int TAG = 868;

        public EventText()
            : base(Tags.EventText) { }
        public EventText(string val)
            : base(Tags.EventText, val) { }

    }


    /// <summary>
    /// PctAtRisk Field
    /// </summary>/
    public sealed class PctAtRisk : DecimalField
    {
        public const int TAG = 869;

        public PctAtRisk()
            : base(Tags.PctAtRisk) { }
        public PctAtRisk(Decimal val)
            : base(Tags.PctAtRisk, val) { }

    }


    /// <summary>
    /// NoInstrAttrib Field
    /// </summary>/
    public sealed class NoInstrAttrib : IntField
    {
        public const int TAG = 870;

        public NoInstrAttrib()
            : base(Tags.NoInstrAttrib) { }
        public NoInstrAttrib(int val)
            : base(Tags.NoInstrAttrib, val) { }

    }


    /// <summary>
    /// InstrAttribType Field
    /// </summary>/
    public sealed class InstrAttribType : IntField
    {
        public const int TAG = 871;

        public InstrAttribType()
            : base(Tags.InstrAttribType) { }
        public InstrAttribType(int val)
            : base(Tags.InstrAttribType, val) { }


        // Field Enumerations
        public const int FLAT = 1;
        public const int ZERO_COUPON = 2;
        public const int INTEREST_BEARING = 3;
        public const int NO_PERIODIC_PAYMENTS = 4;
        public const int VARIABLE_RATE = 5;
        public const int LESS_FEE_FOR_PUT = 6;
        public const int STEPPED_COUPON = 7;
        public const int COUPON_PERIOD = 8;
        public const int WHEN_AND_IF_ISSUED = 9;
        public const int ORIGINAL_ISSUE_DISCOUNT = 10;
        public const int CALLABLE_PUTTABLE = 11;
        public const int ESCROWED_TO_MATURITY = 12;
        public const int ESCROWED_TO_REDEMPTION_DATE = 13;
        public const int PRE_REFUNDED = 14;
        public const int IN_DEFAULT = 15;
        public const int UNRATED = 16;
        public const int TAXABLE = 17;
        public const int INDEXED = 18;
        public const int SUBJECT_TO_ALTERNATIVE_MINIMUM_TAX = 19;
        public const int ORIGINAL_ISSUE_DISCOUNT_PRICE = 20;
        public const int CALLABLE_BELOW_MATURITY_VALUE = 21;
        public const int CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTERED = 22;
        public const int PRICE_TICK_RULES_FOR_SECURITY = 23;
        public const int TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITY = 24;
        public const int INSTRUMENT_DENOMINATOR = 25;
        public const int INSTRUMENT_NUMERATOR = 26;
        public const int INSTRUMENT_PRICE_PRECISION = 27;
        public const int INSTRUMENT_STRIKE_PRICE = 28;
        public const int TRADEABLE_INDICATOR = 29;
        public const int TEXT = 99;
        public const int INSTRUMENT_IS_ELIGIBLE_TO_ACCEPT_ANONYMOUS_ORDERS = 30;
        public const int MINIMUM_GUARANTEED_FILL_VOLUME = 31;
        public const int MINIMUM_GUARANTEED_FILL_STATUS = 32;
        public const int TRADE_AT_SETTLEMENT = 33;
        public const int TEST_INSTRUMENT = 34;
        public const int DUMMY_INSTRUMENT = 35;
        public const int NEGATIVE_SETTLEMENT_PRICE_ELIGIBILITY = 36;
        public const int NEGATIVE_STRIKE_PRICE_ELIGIBILITY = 37;
        public const int US_STANDARD_CONTRACT_INDICATOR = 38;
        public const int ADMITTED_TO_TRADING_ON_A_TRADING_VENUE = 39;
        public const int AVERAGE_DAILY_NOTIONAL_AMOUNT = 40;
        public const int AVERAGE_DAILY_NUMBER_OF_TRADES = 41;
        public const int ORIGINAL_ISSUE_DISCOUNT_PRICE_SUPPLY_PRICE_IN_THE_INSTRATTRIBVALUE = 20;
        public const int TEXT_SUPPLY_THE_TEXT_OF_THE_ATTRIBUTE_OR_DISCLAIMER_IN_THE_INSTRATTRIBVALUE = 99;
    }


    /// <summary>
    /// InstrAttribValue Field
    /// </summary>/
    public sealed class InstrAttribValue : StringField
    {
        public const int TAG = 872;

        public InstrAttribValue()
            : base(Tags.InstrAttribValue) { }
        public InstrAttribValue(string val)
            : base(Tags.InstrAttribValue, val) { }

    }


    /// <summary>
    /// DatedDate Field
    /// </summary>/
    public sealed class DatedDate : StringField
    {
        public const int TAG = 873;

        public DatedDate()
            : base(Tags.DatedDate) { }
        public DatedDate(string val)
            : base(Tags.DatedDate, val) { }

    }


    /// <summary>
    /// InterestAccrualDate Field
    /// </summary>/
    public sealed class InterestAccrualDate : StringField
    {
        public const int TAG = 874;

        public InterestAccrualDate()
            : base(Tags.InterestAccrualDate) { }
        public InterestAccrualDate(string val)
            : base(Tags.InterestAccrualDate, val) { }

    }


    /// <summary>
    /// CPProgram Field
    /// </summary>/
    public sealed class CPProgram : IntField
    {
        public const int TAG = 875;

        public CPProgram()
            : base(Tags.CPProgram) { }
        public CPProgram(int val)
            : base(Tags.CPProgram, val) { }


        // Field Enumerations
        public const int VAL_3_1 = 1;
        public const int VAL_4 = 2;
        public const int OTHER = 99;
        public const int VAL_3_3 = 3;
        public const int VAL_3_4 = 4;
        public const int VAL_3_5 = 5;
        public const int VAL_3_6 = 6;
        public const int VAL_3_7 = 7;
        public const int VAL_3_8 = 8;
        public const int VAL_3 = 1;
    }


    /// <summary>
    /// CPRegType Field
    /// </summary>/
    public sealed class CPRegType : StringField
    {
        public const int TAG = 876;

        public CPRegType()
            : base(Tags.CPRegType) { }
        public CPRegType(string val)
            : base(Tags.CPRegType, val) { }

    }


    /// <summary>
    /// UnderlyingCPProgram Field
    /// </summary>/
    public sealed class UnderlyingCPProgram : IntField
    {
        public const int TAG = 877;

        public UnderlyingCPProgram()
            : base(Tags.UnderlyingCPProgram) { }
        public UnderlyingCPProgram(int val)
            : base(Tags.UnderlyingCPProgram, val) { }


        // Field Enumerations
        public const int VAL_3_1 = 1;
        public const int VAL_4 = 2;
        public const int OTHER = 99;
        public const int VAL_3_3 = 3;
        public const int VAL_3_4 = 4;
        public const int VAL_3_5 = 5;
        public const int VAL_3_6 = 6;
        public const int VAL_3_7 = 7;
        public const int VAL_3_8 = 8;
    }


    /// <summary>
    /// UnderlyingCPRegType Field
    /// </summary>/
    public sealed class UnderlyingCPRegType : StringField
    {
        public const int TAG = 878;

        public UnderlyingCPRegType()
            : base(Tags.UnderlyingCPRegType) { }
        public UnderlyingCPRegType(string val)
            : base(Tags.UnderlyingCPRegType, val) { }

    }


    /// <summary>
    /// UnderlyingQty Field
    /// </summary>/
    public sealed class UnderlyingQty : DecimalField
    {
        public const int TAG = 879;

        public UnderlyingQty()
            : base(Tags.UnderlyingQty) { }
        public UnderlyingQty(Decimal val)
            : base(Tags.UnderlyingQty, val) { }

    }


    /// <summary>
    /// TrdMatchID Field
    /// </summary>/
    public sealed class TrdMatchID : StringField
    {
        public const int TAG = 880;

        public TrdMatchID()
            : base(Tags.TrdMatchID) { }
        public TrdMatchID(string val)
            : base(Tags.TrdMatchID, val) { }

    }


    /// <summary>
    /// SecondaryTradeReportRefID Field
    /// </summary>/
    public sealed class SecondaryTradeReportRefID : StringField
    {
        public const int TAG = 881;

        public SecondaryTradeReportRefID()
            : base(Tags.SecondaryTradeReportRefID) { }
        public SecondaryTradeReportRefID(string val)
            : base(Tags.SecondaryTradeReportRefID, val) { }

    }


    /// <summary>
    /// UnderlyingDirtyPrice Field
    /// </summary>/
    public sealed class UnderlyingDirtyPrice : DecimalField
    {
        public const int TAG = 882;

        public UnderlyingDirtyPrice()
            : base(Tags.UnderlyingDirtyPrice) { }
        public UnderlyingDirtyPrice(Decimal val)
            : base(Tags.UnderlyingDirtyPrice, val) { }

    }


    /// <summary>
    /// UnderlyingEndPrice Field
    /// </summary>/
    public sealed class UnderlyingEndPrice : DecimalField
    {
        public const int TAG = 883;

        public UnderlyingEndPrice()
            : base(Tags.UnderlyingEndPrice) { }
        public UnderlyingEndPrice(Decimal val)
            : base(Tags.UnderlyingEndPrice, val) { }

    }


    /// <summary>
    /// UnderlyingStartValue Field
    /// </summary>/
    public sealed class UnderlyingStartValue : DecimalField
    {
        public const int TAG = 884;

        public UnderlyingStartValue()
            : base(Tags.UnderlyingStartValue) { }
        public UnderlyingStartValue(Decimal val)
            : base(Tags.UnderlyingStartValue, val) { }

    }


    /// <summary>
    /// UnderlyingCurrentValue Field
    /// </summary>/
    public sealed class UnderlyingCurrentValue : DecimalField
    {
        public const int TAG = 885;

        public UnderlyingCurrentValue()
            : base(Tags.UnderlyingCurrentValue) { }
        public UnderlyingCurrentValue(Decimal val)
            : base(Tags.UnderlyingCurrentValue, val) { }

    }


    /// <summary>
    /// UnderlyingEndValue Field
    /// </summary>/
    public sealed class UnderlyingEndValue : DecimalField
    {
        public const int TAG = 886;

        public UnderlyingEndValue()
            : base(Tags.UnderlyingEndValue) { }
        public UnderlyingEndValue(Decimal val)
            : base(Tags.UnderlyingEndValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingStips Field
    /// </summary>/
    public sealed class NoUnderlyingStips : IntField
    {
        public const int TAG = 887;

        public NoUnderlyingStips()
            : base(Tags.NoUnderlyingStips) { }
        public NoUnderlyingStips(int val)
            : base(Tags.NoUnderlyingStips, val) { }

    }


    /// <summary>
    /// UnderlyingStipType Field
    /// </summary>/
    public sealed class UnderlyingStipType : StringField
    {
        public const int TAG = 888;

        public UnderlyingStipType()
            : base(Tags.UnderlyingStipType) { }
        public UnderlyingStipType(string val)
            : base(Tags.UnderlyingStipType, val) { }


        // Field Enumerations
        public const string ALTERNATIVE_MINIMUM_TAX = "AMT";
        public const string AUTO_REINVESTMENT_AT_RATE_OR_BETTER = "AUTOREINV";
        public const string BANK_QUALIFIED = "BANKQUAL";
        public const string BARGAIN_CONDITIONS = "BGNCON";
        public const string COUPON_RANGE = "COUPON";
        public const string ISO_CURRENCY_CODE = "CURRENCY";
        public const string CUSTOM_START_END_DATE = "CUSTOMDATE";
        public const string GEOGRAPHICS_AND_RANGE = "GEOG";
        public const string VALUATION_DISCOUNT = "HAIRCUT";
        public const string INSURED = "INSURED";
        public const string YEAR_OR_YEAR_MONTH_OF_ISSUE = "ISSUE";
        public const string ISSUERS_TICKER = "ISSUER";
        public const string ISSUE_SIZE_RANGE = "ISSUESIZE";
        public const string LOOKBACK_DAYS = "LOOKBACK";
        public const string EXPLICIT_LOT_IDENTIFIER = "LOT";
        public const string LOT_VARIANCE = "LOTVAR";
        public const string MATURITY_YEAR_AND_MONTH = "MAT";
        public const string MATURITY_RANGE = "MATURITY";
        public const string MAXIMUM_SUBSTITUTIONS = "MAXSUBS";
        public const string MINIMUM_DENOMINATION = "MINDNOM";
        public const string MINIMUM_INCREMENT = "MININCR";
        public const string MINIMUM_QUANTITY = "MINQTY";
        public const string PAYMENT_FREQUENCY_CALENDAR = "PAYFREQ";
        public const string NUMBER_OF_PIECES = "PIECES";
        public const string POOLS_MAXIMUM = "PMAX";
        public const string POOLS_PER_LOT = "PPL";
        public const string POOLS_PER_MILLION = "PPM";
        public const string POOLS_PER_TRADE = "PPT";
        public const string PRICE_RANGE = "PRICE";
        public const string PRICING_FREQUENCY = "PRICEFREQ";
        public const string PRODUCTION_YEAR = "PROD";
        public const string CALL_PROTECTION = "PROTECT";
        public const string PURPOSE = "PURPOSE";
        public const string BENCHMARK_PRICE_SOURCE = "PXSOURCE";
        public const string RATING_SOURCE_AND_RANGE = "RATING";
        public const string TYPE_OF_REDEMPTION = "REDEMPTION";
        public const string RESTRICTED = "RESTRICTED";
        public const string MARKET_SECTOR = "SECTOR";
        public const string SECURITY_TYPE_INCLUDED_OR_EXCLUDED = "SECTYPE";
        public const string STRUCTURE = "STRUCT";
        public const string SUBSTITUTIONS_FREQUENCY = "SUBSFREQ";
        public const string SUBSTITUTIONS_LEFT = "SUBSLEFT";
        public const string FREEFORM_TEXT = "TEXT";
        public const string TRADE_VARIANCE = "TRDVAR";
        public const string WEIGHTED_AVERAGE_COUPON = "WAC";
        public const string WEIGHTED_AVERAGE_LIFE_COUPON = "WAL";
        public const string WEIGHTED_AVERAGE_LOAN_AGE = "WALA";
        public const string WEIGHTED_AVERAGE_MATURITY = "WAM";
        public const string WHOLE_POOL = "WHOLE";
        public const string YIELD_RANGE = "YIELD";
        public const string AVERAGE_FICO_SCORE = "AVFICO";
        public const string AVERAGE_LOAN_SIZE = "AVSIZE";
        public const string MAXIMUM_LOAN_BALANCE = "MAXBAL";
        public const string POOL_IDENTIFIER = "POOL";
        public const string TYPE_OF_ROLL_TRADE = "ROLLTYPE";
        public const string REFERENCE_TO_ROLLING_OR_CLOSING_TRADE = "REFTRADE";
        public const string PRINCIPAL_TO_ROLLING_OR_CLOSING_TRADE = "REFPRIN";
        public const string INTEREST_OF_ROLLING_OR_CLOSING_TRADE = "REFINT";
        public const string AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET = "AVAILQTY";
        public const string BROKERS_SALES_CREDIT = "BROKERCREDIT";
        public const string OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALPX";
        public const string OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS = "INTERNALQTY";
        public const string THE_MINIMUM_RESIDUAL_OFFER_QUANTITY = "LEAVEQTY";
        public const string MAXIMUM_ORDER_SIZE = "MAXORDQTY";
        public const string ORDER_QUANTITY_INCREMENT = "ORDRINCR";
        public const string PRIMARY_OR_SECONDARY_MARKET_INDICATOR = "PRIMARY";
        public const string BROKER_SALES_CREDIT_OVERRIDE = "SALESCREDITOVR";
        public const string TRADERS_CREDIT = "TRADERCREDIT";
        public const string DISCOUNT_RATE = "DISCOUNT";
        public const string YIELD_TO_MATURITY = "YTM";
        public const string ABSOLUTE_PREPAYMENT_SPEED = "ABS";
        public const string CONSTANT_PREPAYMENT_PENALTY = "CPP";
        public const string CONSTANT_PREPAYMENT_RATE = "CPR";
        public const string CONSTANT_PREPAYMENT_YIELD = "CPY";
        public const string FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE = "HEP";
        public const string PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE = "MHP";
        public const string MONTHLY_PREPAYMENT_RATE = "MPR";
        public const string PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE = "PPC";
        public const string PERCENT_OF_BMA_PREPAYMENT_CURVE = "PSA";
        public const string SINGLE_MONTHLY_MORTALITY = "SMM";
        public const string ORIGINAL_AMOUNT = "ORIGAMT";
        public const string POOL_EFFECTIVE_DATE = "POOLEFFDT";
        public const string POOL_INITIAL_FACTOR = "POOLINITFCTR";
        public const string TRANCHE_IDENTIFIER = "TRANCHE";
        public const string SUBSTITUTION = "SUBSTITUTION";
        public const string INCURRED_RECOVERY = "INCURRCVY";
        public const string ADDITIONAL_TERM = "ADDTRM";
        public const string MODIFIED_EQUITY_DELIVERY = "MODEQTYDLVY";
        public const string NO_REFERENCE_OBLIGATION = "NOREFOBLIG";
        public const string UNKNOWN_REFERENCE_OBLIGATION = "UNKREFOBLIG";
        public const string ALL_GUARANTEES = "ALLGUARANTEES";
        public const string REFERENCE_PRICE = "REFPX";
        public const string REFERENCE_POLICY = "REFPOLICY";
        public const string SECURED_LIST = "SECRDLIST";
        public const string MULTIPLE_EXCHANGE_FALLBACK = "MULTEXCHFLLBCK";
        public const string COMPONENT_SECURITY_FALLBACK = "COMPSECFLLBCK";
        public const string LOCAL_JURISDICTION = "LOCLJRSDCTN";
        public const string RELEVANT_JURISDICTION = "RELVJRSDCTN";
        public const string INTEREST_PAYOFF_OF_ROLLING_OR_AMENDING_TRADE = "PAYOFF";
    }


    /// <summary>
    /// UnderlyingStipValue Field
    /// </summary>/
    public sealed class UnderlyingStipValue : StringField
    {
        public const int TAG = 889;

        public UnderlyingStipValue()
            : base(Tags.UnderlyingStipValue) { }
        public UnderlyingStipValue(string val)
            : base(Tags.UnderlyingStipValue, val) { }

    }


    /// <summary>
    /// MaturityNetMoney Field
    /// </summary>/
    public sealed class MaturityNetMoney : DecimalField
    {
        public const int TAG = 890;

        public MaturityNetMoney()
            : base(Tags.MaturityNetMoney) { }
        public MaturityNetMoney(Decimal val)
            : base(Tags.MaturityNetMoney, val) { }

    }


    /// <summary>
    /// MiscFeeBasis Field
    /// </summary>/
    public sealed class MiscFeeBasis : IntField
    {
        public const int TAG = 891;

        public MiscFeeBasis()
            : base(Tags.MiscFeeBasis) { }
        public MiscFeeBasis(int val)
            : base(Tags.MiscFeeBasis, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PER_UNIT = 1;
        public const int PERCENTAGE = 2;
    }


    /// <summary>
    /// TotNoAllocs Field
    /// </summary>/
    public sealed class TotNoAllocs : IntField
    {
        public const int TAG = 892;

        public TotNoAllocs()
            : base(Tags.TotNoAllocs) { }
        public TotNoAllocs(int val)
            : base(Tags.TotNoAllocs, val) { }

    }


    /// <summary>
    /// LastFragment Field
    /// </summary>/
    public sealed class LastFragment : BooleanField
    {
        public const int TAG = 893;

        public LastFragment()
            : base(Tags.LastFragment) { }
        public LastFragment(Boolean val)
            : base(Tags.LastFragment, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// CollReqID Field
    /// </summary>/
    public sealed class CollReqID : StringField
    {
        public const int TAG = 894;

        public CollReqID()
            : base(Tags.CollReqID) { }
        public CollReqID(string val)
            : base(Tags.CollReqID, val) { }

    }


    /// <summary>
    /// CollAsgnReason Field
    /// </summary>/
    public sealed class CollAsgnReason : IntField
    {
        public const int TAG = 895;

        public CollAsgnReason()
            : base(Tags.CollAsgnReason) { }
        public CollAsgnReason(int val)
            : base(Tags.CollAsgnReason, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int SCHEDULED = 1;
        public const int TIME_WARNING = 2;
        public const int MARGIN_DEFICIENCY = 3;
        public const int MARGIN_EXCESS = 4;
        public const int FORWARD_COLLATERAL_DEMAND = 5;
        public const int EVENT_OF_DEFAULT = 6;
        public const int ADVERSE_TAX_EVENT = 7;
        public const int TRANSFER_DEPOSIT = 8;
        public const int TRANSFER_WITHDRAWAL = 9;
        public const int PLEDGE = 10;
    }


    /// <summary>
    /// CollInquiryQualifier Field
    /// </summary>/
    public sealed class CollInquiryQualifier : IntField
    {
        public const int TAG = 896;

        public CollInquiryQualifier()
            : base(Tags.CollInquiryQualifier) { }
        public CollInquiryQualifier(int val)
            : base(Tags.CollInquiryQualifier, val) { }


        // Field Enumerations
        public const int TRADE_DATE = 0;
        public const int GC_INSTRUMENT = 1;
        public const int COLLATERAL_INSTRUMENT = 2;
        public const int SUBSTITUTION_ELIGIBLE = 3;
        public const int NOT_ASSIGNED = 4;
        public const int PARTIALLY_ASSIGNED = 5;
        public const int FULLY_ASSIGNED = 6;
        public const int OUTSTANDING_TRADES = 7;
        public const int TRADEDATE = 0;
        public const int COLLATERALINSTRUMENT = 2;
    }


    /// <summary>
    /// NoTrades Field
    /// </summary>/
    public sealed class NoTrades : IntField
    {
        public const int TAG = 897;

        public NoTrades()
            : base(Tags.NoTrades) { }
        public NoTrades(int val)
            : base(Tags.NoTrades, val) { }

    }


    /// <summary>
    /// MarginRatio Field
    /// </summary>/
    public sealed class MarginRatio : DecimalField
    {
        public const int TAG = 898;

        public MarginRatio()
            : base(Tags.MarginRatio) { }
        public MarginRatio(Decimal val)
            : base(Tags.MarginRatio, val) { }

    }


    /// <summary>
    /// MarginExcess Field
    /// </summary>/
    public sealed class MarginExcess : DecimalField
    {
        public const int TAG = 899;

        public MarginExcess()
            : base(Tags.MarginExcess) { }
        public MarginExcess(Decimal val)
            : base(Tags.MarginExcess, val) { }

    }


    /// <summary>
    /// TotalNetValue Field
    /// </summary>/
    public sealed class TotalNetValue : DecimalField
    {
        public const int TAG = 900;

        public TotalNetValue()
            : base(Tags.TotalNetValue) { }
        public TotalNetValue(Decimal val)
            : base(Tags.TotalNetValue, val) { }

    }


    /// <summary>
    /// CashOutstanding Field
    /// </summary>/
    public sealed class CashOutstanding : DecimalField
    {
        public const int TAG = 901;

        public CashOutstanding()
            : base(Tags.CashOutstanding) { }
        public CashOutstanding(Decimal val)
            : base(Tags.CashOutstanding, val) { }

    }


    /// <summary>
    /// CollAsgnID Field
    /// </summary>/
    public sealed class CollAsgnID : StringField
    {
        public const int TAG = 902;

        public CollAsgnID()
            : base(Tags.CollAsgnID) { }
        public CollAsgnID(string val)
            : base(Tags.CollAsgnID, val) { }

    }


    /// <summary>
    /// CollAsgnTransType Field
    /// </summary>/
    public sealed class CollAsgnTransType : IntField
    {
        public const int TAG = 903;

        public CollAsgnTransType()
            : base(Tags.CollAsgnTransType) { }
        public CollAsgnTransType(int val)
            : base(Tags.CollAsgnTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int REPLACE = 1;
        public const int CANCEL = 2;
        public const int RELEASE = 3;
        public const int REVERSE = 4;
    }


    /// <summary>
    /// CollRespID Field
    /// </summary>/
    public sealed class CollRespID : StringField
    {
        public const int TAG = 904;

        public CollRespID()
            : base(Tags.CollRespID) { }
        public CollRespID(string val)
            : base(Tags.CollRespID, val) { }

    }


    /// <summary>
    /// CollAsgnRespType Field
    /// </summary>/
    public sealed class CollAsgnRespType : IntField
    {
        public const int TAG = 905;

        public CollAsgnRespType()
            : base(Tags.CollAsgnRespType) { }
        public CollAsgnRespType(int val)
            : base(Tags.CollAsgnRespType, val) { }


        // Field Enumerations
        public const int RECEIVED = 0;
        public const int ACCEPTED = 1;
        public const int DECLINED = 2;
        public const int REJECTED = 3;
        public const int TRANSACTION_PENDING = 4;
        public const int TRANSACTION_COMPLETED_WITH_WARNING = 5;
    }


    /// <summary>
    /// CollAsgnRejectReason Field
    /// </summary>/
    public sealed class CollAsgnRejectReason : IntField
    {
        public const int TAG = 906;

        public CollAsgnRejectReason()
            : base(Tags.CollAsgnRejectReason) { }
        public CollAsgnRejectReason(int val)
            : base(Tags.CollAsgnRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_DEAL = 0;
        public const int UNKNOWN_OR_INVALID_INSTRUMENT = 1;
        public const int UNAUTHORIZED_TRANSACTION = 2;
        public const int INSUFFICIENT_COLLATERAL = 3;
        public const int INVALID_TYPE_OF_COLLATERAL = 4;
        public const int EXCESSIVE_SUBSTITUTION = 5;
        public const int OTHER = 99;
    }


    /// <summary>
    /// CollAsgnRefID Field
    /// </summary>/
    public sealed class CollAsgnRefID : StringField
    {
        public const int TAG = 907;

        public CollAsgnRefID()
            : base(Tags.CollAsgnRefID) { }
        public CollAsgnRefID(string val)
            : base(Tags.CollAsgnRefID, val) { }

    }


    /// <summary>
    /// CollRptID Field
    /// </summary>/
    public sealed class CollRptID : StringField
    {
        public const int TAG = 908;

        public CollRptID()
            : base(Tags.CollRptID) { }
        public CollRptID(string val)
            : base(Tags.CollRptID, val) { }

    }


    /// <summary>
    /// CollInquiryID Field
    /// </summary>/
    public sealed class CollInquiryID : StringField
    {
        public const int TAG = 909;

        public CollInquiryID()
            : base(Tags.CollInquiryID) { }
        public CollInquiryID(string val)
            : base(Tags.CollInquiryID, val) { }

    }


    /// <summary>
    /// CollStatus Field
    /// </summary>/
    public sealed class CollStatus : IntField
    {
        public const int TAG = 910;

        public CollStatus()
            : base(Tags.CollStatus) { }
        public CollStatus(int val)
            : base(Tags.CollStatus, val) { }


        // Field Enumerations
        public const int UNASSIGNED = 0;
        public const int PARTIALLY_ASSIGNED = 1;
        public const int ASSIGNMENT_PROPOSED = 2;
        public const int ASSIGNED = 3;
        public const int CHALLENGED = 4;
        public const int REUSED = 5;
    }


    /// <summary>
    /// TotNumReports Field
    /// </summary>/
    public sealed class TotNumReports : IntField
    {
        public const int TAG = 911;

        public TotNumReports()
            : base(Tags.TotNumReports) { }
        public TotNumReports(int val)
            : base(Tags.TotNumReports, val) { }

    }


    /// <summary>
    /// LastRptRequested Field
    /// </summary>/
    public sealed class LastRptRequested : BooleanField
    {
        public const int TAG = 912;

        public LastRptRequested()
            : base(Tags.LastRptRequested) { }
        public LastRptRequested(Boolean val)
            : base(Tags.LastRptRequested, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// AgreementDesc Field
    /// </summary>/
    public sealed class AgreementDesc : StringField
    {
        public const int TAG = 913;

        public AgreementDesc()
            : base(Tags.AgreementDesc) { }
        public AgreementDesc(string val)
            : base(Tags.AgreementDesc, val) { }

    }


    /// <summary>
    /// AgreementID Field
    /// </summary>/
    public sealed class AgreementID : StringField
    {
        public const int TAG = 914;

        public AgreementID()
            : base(Tags.AgreementID) { }
        public AgreementID(string val)
            : base(Tags.AgreementID, val) { }

    }


    /// <summary>
    /// AgreementDate Field
    /// </summary>/
    public sealed class AgreementDate : StringField
    {
        public const int TAG = 915;

        public AgreementDate()
            : base(Tags.AgreementDate) { }
        public AgreementDate(string val)
            : base(Tags.AgreementDate, val) { }

    }


    /// <summary>
    /// StartDate Field
    /// </summary>/
    public sealed class StartDate : StringField
    {
        public const int TAG = 916;

        public StartDate()
            : base(Tags.StartDate) { }
        public StartDate(string val)
            : base(Tags.StartDate, val) { }

    }


    /// <summary>
    /// EndDate Field
    /// </summary>/
    public sealed class EndDate : StringField
    {
        public const int TAG = 917;

        public EndDate()
            : base(Tags.EndDate) { }
        public EndDate(string val)
            : base(Tags.EndDate, val) { }

    }


    /// <summary>
    /// AgreementCurrency Field
    /// </summary>/
    public sealed class AgreementCurrency : StringField
    {
        public const int TAG = 918;

        public AgreementCurrency()
            : base(Tags.AgreementCurrency) { }
        public AgreementCurrency(string val)
            : base(Tags.AgreementCurrency, val) { }

    }


    /// <summary>
    /// DeliveryType Field
    /// </summary>/
    public sealed class DeliveryType : IntField
    {
        public const int TAG = 919;

        public DeliveryType()
            : base(Tags.DeliveryType) { }
        public DeliveryType(int val)
            : base(Tags.DeliveryType, val) { }


        // Field Enumerations
        public const int VERSUS_PAYMENT_DELIVER = 0;
        public const int FREE_DELIVER = 1;
        public const int TRI_PARTY = 2;
        public const int HOLD_IN_CUSTODY = 3;
        public const int DELIVER_BY_VALUE = 4;
        public const int VERSUS_PAYMENT = 0;
        public const int FREE = 1;
    }


    /// <summary>
    /// EndAccruedInterestAmt Field
    /// </summary>/
    public sealed class EndAccruedInterestAmt : DecimalField
    {
        public const int TAG = 920;

        public EndAccruedInterestAmt()
            : base(Tags.EndAccruedInterestAmt) { }
        public EndAccruedInterestAmt(Decimal val)
            : base(Tags.EndAccruedInterestAmt, val) { }

    }


    /// <summary>
    /// StartCash Field
    /// </summary>/
    public sealed class StartCash : DecimalField
    {
        public const int TAG = 921;

        public StartCash()
            : base(Tags.StartCash) { }
        public StartCash(Decimal val)
            : base(Tags.StartCash, val) { }

    }


    /// <summary>
    /// EndCash Field
    /// </summary>/
    public sealed class EndCash : DecimalField
    {
        public const int TAG = 922;

        public EndCash()
            : base(Tags.EndCash) { }
        public EndCash(Decimal val)
            : base(Tags.EndCash, val) { }

    }


    /// <summary>
    /// UserRequestID Field
    /// </summary>/
    public sealed class UserRequestID : StringField
    {
        public const int TAG = 923;

        public UserRequestID()
            : base(Tags.UserRequestID) { }
        public UserRequestID(string val)
            : base(Tags.UserRequestID, val) { }

    }


    /// <summary>
    /// UserRequestType Field
    /// </summary>/
    public sealed class UserRequestType : IntField
    {
        public const int TAG = 924;

        public UserRequestType()
            : base(Tags.UserRequestType) { }
        public UserRequestType(int val)
            : base(Tags.UserRequestType, val) { }


        // Field Enumerations
        public const int LOG_ON_USER = 1;
        public const int LOG_OFF_USER = 2;
        public const int CHANGE_PASSWORD_FOR_USER = 3;
        public const int REQUEST_INDIVIDUAL_USER_STATUS = 4;
        public const int REQUEST_THROTTLE_LIMIT = 5;
        public const int LOGONUSER = 1;
        public const int LOGOFFUSER = 2;
        public const int CHANGEPASSWORDFORUSER = 3;
    }


    /// <summary>
    /// NewPassword Field
    /// </summary>/
    public sealed class NewPassword : StringField
    {
        public const int TAG = 925;

        public NewPassword()
            : base(Tags.NewPassword) { }
        public NewPassword(string val)
            : base(Tags.NewPassword, val) { }

    }


    /// <summary>
    /// UserStatus Field
    /// </summary>/
    public sealed class UserStatus : IntField
    {
        public const int TAG = 926;

        public UserStatus()
            : base(Tags.UserStatus) { }
        public UserStatus(int val)
            : base(Tags.UserStatus, val) { }


        // Field Enumerations
        public const int LOGGED_IN = 1;
        public const int NOT_LOGGED_IN = 2;
        public const int USER_NOT_RECOGNISED = 3;
        public const int PASSWORD_INCORRECT = 4;
        public const int PASSWORD_CHANGED = 5;
        public const int OTHER = 6;
        public const int FORCED_USER_LOGOUT_BY_EXCHANGE = 7;
        public const int SESSION_SHUTDOWN_WARNING = 8;
        public const int THROTTLE_PARAMETERS_CHANGED = 9;
    }


    /// <summary>
    /// UserStatusText Field
    /// </summary>/
    public sealed class UserStatusText : StringField
    {
        public const int TAG = 927;

        public UserStatusText()
            : base(Tags.UserStatusText) { }
        public UserStatusText(string val)
            : base(Tags.UserStatusText, val) { }

    }


    /// <summary>
    /// StatusValue Field
    /// </summary>/
    public sealed class StatusValue : IntField
    {
        public const int TAG = 928;

        public StatusValue()
            : base(Tags.StatusValue) { }
        public StatusValue(int val)
            : base(Tags.StatusValue, val) { }


        // Field Enumerations
        public const int CONNECTED = 1;
        public const int NOT_CONNECTED_2 = 2;
        public const int NOT_CONNECTED_3 = 3;
        public const int IN_PROCESS = 4;
        public const int NOT_CONNECTED_DOWN_EXPECTED_UP = 2;
        public const int NOT_CONNECTED_DOWN_EXPECTED_DOWN = 3;
    }


    /// <summary>
    /// StatusText Field
    /// </summary>/
    public sealed class StatusText : StringField
    {
        public const int TAG = 929;

        public StatusText()
            : base(Tags.StatusText) { }
        public StatusText(string val)
            : base(Tags.StatusText, val) { }

    }


    /// <summary>
    /// RefCompID Field
    /// </summary>/
    public sealed class RefCompID : StringField
    {
        public const int TAG = 930;

        public RefCompID()
            : base(Tags.RefCompID) { }
        public RefCompID(string val)
            : base(Tags.RefCompID, val) { }

    }


    /// <summary>
    /// RefSubID Field
    /// </summary>/
    public sealed class RefSubID : StringField
    {
        public const int TAG = 931;

        public RefSubID()
            : base(Tags.RefSubID) { }
        public RefSubID(string val)
            : base(Tags.RefSubID, val) { }

    }


    /// <summary>
    /// NetworkResponseID Field
    /// </summary>/
    public sealed class NetworkResponseID : StringField
    {
        public const int TAG = 932;

        public NetworkResponseID()
            : base(Tags.NetworkResponseID) { }
        public NetworkResponseID(string val)
            : base(Tags.NetworkResponseID, val) { }

    }


    /// <summary>
    /// NetworkRequestID Field
    /// </summary>/
    public sealed class NetworkRequestID : StringField
    {
        public const int TAG = 933;

        public NetworkRequestID()
            : base(Tags.NetworkRequestID) { }
        public NetworkRequestID(string val)
            : base(Tags.NetworkRequestID, val) { }

    }


    /// <summary>
    /// LastNetworkResponseID Field
    /// </summary>/
    public sealed class LastNetworkResponseID : StringField
    {
        public const int TAG = 934;

        public LastNetworkResponseID()
            : base(Tags.LastNetworkResponseID) { }
        public LastNetworkResponseID(string val)
            : base(Tags.LastNetworkResponseID, val) { }

    }


    /// <summary>
    /// NetworkRequestType Field
    /// </summary>/
    public sealed class NetworkRequestType : IntField
    {
        public const int TAG = 935;

        public NetworkRequestType()
            : base(Tags.NetworkRequestType) { }
        public NetworkRequestType(int val)
            : base(Tags.NetworkRequestType, val) { }


        // Field Enumerations
        public const int SNAPSHOT = 1;
        public const int SUBSCRIBE = 2;
        public const int STOP_SUBSCRIBING = 4;
        public const int LEVEL_OF_DETAIL_THEN_NOCOMPIDS_BECOMES_REQUIRED = 8;
        public const int LEVEL_OF_DETAIL = 8;
    }


    /// <summary>
    /// NoCompIDs Field
    /// </summary>/
    public sealed class NoCompIDs : IntField
    {
        public const int TAG = 936;

        public NoCompIDs()
            : base(Tags.NoCompIDs) { }
        public NoCompIDs(int val)
            : base(Tags.NoCompIDs, val) { }

    }


    /// <summary>
    /// NetworkStatusResponseType Field
    /// </summary>/
    public sealed class NetworkStatusResponseType : IntField
    {
        public const int TAG = 937;

        public NetworkStatusResponseType()
            : base(Tags.NetworkStatusResponseType) { }
        public NetworkStatusResponseType(int val)
            : base(Tags.NetworkStatusResponseType, val) { }


        // Field Enumerations
        public const int FULL = 1;
        public const int INCREMENTAL_UPDATE = 2;
    }


    /// <summary>
    /// NoCollInquiryQualifier Field
    /// </summary>/
    public sealed class NoCollInquiryQualifier : IntField
    {
        public const int TAG = 938;

        public NoCollInquiryQualifier()
            : base(Tags.NoCollInquiryQualifier) { }
        public NoCollInquiryQualifier(int val)
            : base(Tags.NoCollInquiryQualifier, val) { }

    }


    /// <summary>
    /// TrdRptStatus Field
    /// </summary>/
    public sealed class TrdRptStatus : IntField
    {
        public const int TAG = 939;

        public TrdRptStatus()
            : base(Tags.TrdRptStatus) { }
        public TrdRptStatus(int val)
            : base(Tags.TrdRptStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
        public const int ACCEPTED_WITH_ERRORS = 3;
        public const int CANCELLED = 2;
        public const int PENDING_NEW = 4;
        public const int PENDING_CANCEL = 5;
        public const int PENDING_REPLACE = 6;
        public const int TERMINATED = 7;
        public const int PENDING_VERIFICATION = 8;
        public const int DEEMED_VERIFIED = 9;
        public const int VERIFIED = 10;
        public const int DISPUTED = 11;
    }


    /// <summary>
    /// AffirmStatus Field
    /// </summary>/
    public sealed class AffirmStatus : IntField
    {
        public const int TAG = 940;

        public AffirmStatus()
            : base(Tags.AffirmStatus) { }
        public AffirmStatus(int val)
            : base(Tags.AffirmStatus, val) { }


        // Field Enumerations
        public const int RECEIVED = 1;
        public const int CONFIRM_REJECTED_IE_NOT_AFFIRMED = 2;
        public const int AFFIRMED = 3;
        public const int CONFIRM_REJECTED = 2;
    }


    /// <summary>
    /// UnderlyingStrikeCurrency Field
    /// </summary>/
    public sealed class UnderlyingStrikeCurrency : StringField
    {
        public const int TAG = 941;

        public UnderlyingStrikeCurrency()
            : base(Tags.UnderlyingStrikeCurrency) { }
        public UnderlyingStrikeCurrency(string val)
            : base(Tags.UnderlyingStrikeCurrency, val) { }

    }


    /// <summary>
    /// LegStrikeCurrency Field
    /// </summary>/
    public sealed class LegStrikeCurrency : StringField
    {
        public const int TAG = 942;

        public LegStrikeCurrency()
            : base(Tags.LegStrikeCurrency) { }
        public LegStrikeCurrency(string val)
            : base(Tags.LegStrikeCurrency, val) { }

    }


    /// <summary>
    /// TimeBracket Field
    /// </summary>/
    public sealed class TimeBracket : StringField
    {
        public const int TAG = 943;

        public TimeBracket()
            : base(Tags.TimeBracket) { }
        public TimeBracket(string val)
            : base(Tags.TimeBracket, val) { }

    }


    /// <summary>
    /// CollAction Field
    /// </summary>/
    public sealed class CollAction : IntField
    {
        public const int TAG = 944;

        public CollAction()
            : base(Tags.CollAction) { }
        public CollAction(int val)
            : base(Tags.CollAction, val) { }


        // Field Enumerations
        public const int RETAIN = 0;
        public const int ADD = 1;
        public const int REMOVE = 2;
    }


    /// <summary>
    /// CollInquiryStatus Field
    /// </summary>/
    public sealed class CollInquiryStatus : IntField
    {
        public const int TAG = 945;

        public CollInquiryStatus()
            : base(Tags.CollInquiryStatus) { }
        public CollInquiryStatus(int val)
            : base(Tags.CollInquiryStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_WARNINGS = 1;
        public const int COMPLETED = 2;
        public const int COMPLETED_WITH_WARNINGS = 3;
        public const int REJECTED = 4;
    }


    /// <summary>
    /// CollInquiryResult Field
    /// </summary>/
    public sealed class CollInquiryResult : IntField
    {
        public const int TAG = 946;

        public CollInquiryResult()
            : base(Tags.CollInquiryResult) { }
        public CollInquiryResult(int val)
            : base(Tags.CollInquiryResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_OR_UNKNOWN_INSTRUMENT = 1;
        public const int INVALID_OR_UNKNOWN_COLLATERAL_TYPE = 2;
        public const int INVALID_PARTIES = 3;
        public const int INVALID_TRANSPORT_TYPE_REQUESTED = 4;
        public const int INVALID_DESTINATION_REQUESTED = 5;
        public const int NO_COLLATERAL_FOUND_FOR_THE_TRADE_SPECIFIED = 6;
        public const int NO_COLLATERAL_FOUND_FOR_THE_ORDER_SPECIFIED = 7;
        public const int COLLATERAL_INQUIRY_TYPE_NOT_SUPPORTED = 8;
        public const int UNAUTHORIZED_FOR_COLLATERAL_INQUIRY = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// StrikeCurrency Field
    /// </summary>/
    public sealed class StrikeCurrency : StringField
    {
        public const int TAG = 947;

        public StrikeCurrency()
            : base(Tags.StrikeCurrency) { }
        public StrikeCurrency(string val)
            : base(Tags.StrikeCurrency, val) { }

    }


    /// <summary>
    /// NoNested3PartyIDs Field
    /// </summary>/
    public sealed class NoNested3PartyIDs : IntField
    {
        public const int TAG = 948;

        public NoNested3PartyIDs()
            : base(Tags.NoNested3PartyIDs) { }
        public NoNested3PartyIDs(int val)
            : base(Tags.NoNested3PartyIDs, val) { }

    }


    /// <summary>
    /// Nested3PartyID Field
    /// </summary>/
    public sealed class Nested3PartyID : StringField
    {
        public const int TAG = 949;

        public Nested3PartyID()
            : base(Tags.Nested3PartyID) { }
        public Nested3PartyID(string val)
            : base(Tags.Nested3PartyID, val) { }

    }


    /// <summary>
    /// Nested3PartyIDSource Field
    /// </summary>/
    public sealed class Nested3PartyIDSource : CharField
    {
        public const int TAG = 950;

        public Nested3PartyIDSource()
            : base(Tags.Nested3PartyIDSource) { }
        public Nested3PartyIDSource(char val)
            : base(Tags.Nested3PartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// Nested3PartyRole Field
    /// </summary>/
    public sealed class Nested3PartyRole : IntField
    {
        public const int TAG = 951;

        public Nested3PartyRole()
            : base(Tags.Nested3PartyRole) { }
        public Nested3PartyRole(int val)
            : base(Tags.Nested3PartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoNested3PartySubIDs Field
    /// </summary>/
    public sealed class NoNested3PartySubIDs : IntField
    {
        public const int TAG = 952;

        public NoNested3PartySubIDs()
            : base(Tags.NoNested3PartySubIDs) { }
        public NoNested3PartySubIDs(int val)
            : base(Tags.NoNested3PartySubIDs, val) { }

    }


    /// <summary>
    /// Nested3PartySubID Field
    /// </summary>/
    public sealed class Nested3PartySubID : StringField
    {
        public const int TAG = 953;

        public Nested3PartySubID()
            : base(Tags.Nested3PartySubID) { }
        public Nested3PartySubID(string val)
            : base(Tags.Nested3PartySubID, val) { }

    }


    /// <summary>
    /// Nested3PartySubIDType Field
    /// </summary>/
    public sealed class Nested3PartySubIDType : IntField
    {
        public const int TAG = 954;

        public Nested3PartySubIDType()
            : base(Tags.Nested3PartySubIDType) { }
        public Nested3PartySubIDType(int val)
            : base(Tags.Nested3PartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// LegContractSettlMonth Field
    /// </summary>/
    public sealed class LegContractSettlMonth : StringField
    {
        public const int TAG = 955;

        public LegContractSettlMonth()
            : base(Tags.LegContractSettlMonth) { }
        public LegContractSettlMonth(string val)
            : base(Tags.LegContractSettlMonth, val) { }

    }


    /// <summary>
    /// LegInterestAccrualDate Field
    /// </summary>/
    public sealed class LegInterestAccrualDate : StringField
    {
        public const int TAG = 956;

        public LegInterestAccrualDate()
            : base(Tags.LegInterestAccrualDate) { }
        public LegInterestAccrualDate(string val)
            : base(Tags.LegInterestAccrualDate, val) { }

    }


    /// <summary>
    /// IOIID Field
    /// </summary>/
    public sealed class IOIID : StringField
    {
        public const int TAG = 23;

        public IOIID()
            : base(Tags.IOIID) { }
        public IOIID(string val)
            : base(Tags.IOIID, val) { }

    }


    /// <summary>
    /// NoLinesOfText Field
    /// </summary>/
    public sealed class NoLinesOfText : IntField
    {
        public const int TAG = 33;

        public NoLinesOfText()
            : base(Tags.NoLinesOfText) { }
        public NoLinesOfText(int val)
            : base(Tags.NoLinesOfText, val) { }

    }


    /// <summary>
    /// HaltReasonChar Field
    /// </summary>/
    public sealed class HaltReasonChar : CharField
    {
        public const int TAG = 327;

        public HaltReasonChar()
            : base(Tags.HaltReasonChar) { }
        public HaltReasonChar(char val)
            : base(Tags.HaltReasonChar, val) { }


        // Field Enumerations
        public const char NEWS_DISSEMINATION = 'D';
        public const char ORDER_INFLUX = 'E';
        public const char ORDER_IMBALANCE = 'I';
        public const char ADDITIONAL_INFORMATION = 'M';
        public const char NEW_PENDING = 'P';
        public const char EQUIPMENT_CHANGEOVER = 'X';
    }


    /// <summary>
    /// NoStrategyParameters Field
    /// </summary>/
    public sealed class NoStrategyParameters : IntField
    {
        public const int TAG = 957;

        public NoStrategyParameters()
            : base(Tags.NoStrategyParameters) { }
        public NoStrategyParameters(int val)
            : base(Tags.NoStrategyParameters, val) { }

    }


    /// <summary>
    /// StrategyParameterName Field
    /// </summary>/
    public sealed class StrategyParameterName : StringField
    {
        public const int TAG = 958;

        public StrategyParameterName()
            : base(Tags.StrategyParameterName) { }
        public StrategyParameterName(string val)
            : base(Tags.StrategyParameterName, val) { }

    }


    /// <summary>
    /// StrategyParameterType Field
    /// </summary>/
    public sealed class StrategyParameterType : IntField
    {
        public const int TAG = 959;

        public StrategyParameterType()
            : base(Tags.StrategyParameterType) { }
        public StrategyParameterType(int val)
            : base(Tags.StrategyParameterType, val) { }


        // Field Enumerations
        public const int INT = 1;
        public const int LENGTH = 2;
        public const int NUMINGROUP = 3;
        public const int SEQNUM = 4;
        public const int TAGNUM = 5;
        public const int FLOAT = 6;
        public const int QTY = 7;
        public const int PRICE = 8;
        public const int PRICEOFFSET = 9;
        public const int AMT = 10;
        public const int PERCENTAGE = 11;
        public const int CHAR = 12;
        public const int BOOLEAN = 13;
        public const int STRING = 14;
        public const int MULTIPLECHARVALUE = 15;
        public const int CURRENCY = 16;
        public const int EXCHANGE = 17;
        public const int MONTHYEAR = 18;
        public const int UTCTIMESTAMP = 19;
        public const int UTCTIMEONLY = 20;
        public const int LOCALMKTDATE = 21;
        public const int UTCDATEONLY = 22;
        public const int DATA = 23;
        public const int MULTIPLESTRINGVALUE = 24;
        public const int COUNTRY = 25;
        public const int LANGUAGE = 26;
        public const int TZTIMEONLY = 27;
        public const int TZTIMESTAMP = 28;
        public const int TENOR = 29;
        public const int MONTH_YEAR = 18;
        public const int LOCALMKTTIME = 21;
        public const int UTCDATE = 22;
    }


    /// <summary>
    /// StrategyParameterValue Field
    /// </summary>/
    public sealed class StrategyParameterValue : StringField
    {
        public const int TAG = 960;

        public StrategyParameterValue()
            : base(Tags.StrategyParameterValue) { }
        public StrategyParameterValue(string val)
            : base(Tags.StrategyParameterValue, val) { }

    }


    /// <summary>
    /// HostCrossID Field
    /// </summary>/
    public sealed class HostCrossID : StringField
    {
        public const int TAG = 961;

        public HostCrossID()
            : base(Tags.HostCrossID) { }
        public HostCrossID(string val)
            : base(Tags.HostCrossID, val) { }

    }


    /// <summary>
    /// SideTimeInForce Field
    /// </summary>/
    public sealed class SideTimeInForce : DateTimeField
    {
        public const int TAG = 962;

        public SideTimeInForce()
            : base(Tags.SideTimeInForce) { }
        public SideTimeInForce(DateTime val)
            : base(Tags.SideTimeInForce, val) { }
        public SideTimeInForce(DateTime val, bool showMilliseconds)
            : base(Tags.SideTimeInForce, val, showMilliseconds) { }
        public SideTimeInForce(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.SideTimeInForce, val, precision) { }

    }


    /// <summary>
    /// MDReportID Field
    /// </summary>/
    public sealed class MDReportID : IntField
    {
        public const int TAG = 963;

        public MDReportID()
            : base(Tags.MDReportID) { }
        public MDReportID(int val)
            : base(Tags.MDReportID, val) { }

    }


    /// <summary>
    /// SecurityReportID Field
    /// </summary>/
    public sealed class SecurityReportID : IntField
    {
        public const int TAG = 964;

        public SecurityReportID()
            : base(Tags.SecurityReportID) { }
        public SecurityReportID(int val)
            : base(Tags.SecurityReportID, val) { }

    }


    /// <summary>
    /// SecurityStat Field
    /// </summary>/
    public sealed class SecurityStat : StringField
    {
        public const int TAG = 965;

        public SecurityStat()
            : base(Tags.SecurityStat) { }
        public SecurityStat(string val)
            : base(Tags.SecurityStat, val) { }


        // Field Enumerations
        public const string ACTIVE = "1";
        public const string INACTIVE = "2";
    }


    /// <summary>
    /// SettleOnOpenFlag Field
    /// </summary>/
    public sealed class SettleOnOpenFlag : StringField
    {
        public const int TAG = 966;

        public SettleOnOpenFlag()
            : base(Tags.SettleOnOpenFlag) { }
        public SettleOnOpenFlag(string val)
            : base(Tags.SettleOnOpenFlag, val) { }

    }


    /// <summary>
    /// StrikeMultiplier Field
    /// </summary>/
    public sealed class StrikeMultiplier : DecimalField
    {
        public const int TAG = 967;

        public StrikeMultiplier()
            : base(Tags.StrikeMultiplier) { }
        public StrikeMultiplier(Decimal val)
            : base(Tags.StrikeMultiplier, val) { }

    }


    /// <summary>
    /// StrikeValue Field
    /// </summary>/
    public sealed class StrikeValue : DecimalField
    {
        public const int TAG = 968;

        public StrikeValue()
            : base(Tags.StrikeValue) { }
        public StrikeValue(Decimal val)
            : base(Tags.StrikeValue, val) { }

    }


    /// <summary>
    /// MinPriceIncrement Field
    /// </summary>/
    public sealed class MinPriceIncrement : DecimalField
    {
        public const int TAG = 969;

        public MinPriceIncrement()
            : base(Tags.MinPriceIncrement) { }
        public MinPriceIncrement(Decimal val)
            : base(Tags.MinPriceIncrement, val) { }

    }


    /// <summary>
    /// PositionLimit Field
    /// </summary>/
    public sealed class PositionLimit : IntField
    {
        public const int TAG = 970;

        public PositionLimit()
            : base(Tags.PositionLimit) { }
        public PositionLimit(int val)
            : base(Tags.PositionLimit, val) { }

    }


    /// <summary>
    /// NTPositionLimit Field
    /// </summary>/
    public sealed class NTPositionLimit : IntField
    {
        public const int TAG = 971;

        public NTPositionLimit()
            : base(Tags.NTPositionLimit) { }
        public NTPositionLimit(int val)
            : base(Tags.NTPositionLimit, val) { }

    }


    /// <summary>
    /// UnderlyingAllocationPercent Field
    /// </summary>/
    public sealed class UnderlyingAllocationPercent : DecimalField
    {
        public const int TAG = 972;

        public UnderlyingAllocationPercent()
            : base(Tags.UnderlyingAllocationPercent) { }
        public UnderlyingAllocationPercent(Decimal val)
            : base(Tags.UnderlyingAllocationPercent, val) { }

    }


    /// <summary>
    /// UnderlyingCashAmount Field
    /// </summary>/
    public sealed class UnderlyingCashAmount : DecimalField
    {
        public const int TAG = 973;

        public UnderlyingCashAmount()
            : base(Tags.UnderlyingCashAmount) { }
        public UnderlyingCashAmount(Decimal val)
            : base(Tags.UnderlyingCashAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCashType Field
    /// </summary>/
    public sealed class UnderlyingCashType : StringField
    {
        public const int TAG = 974;

        public UnderlyingCashType()
            : base(Tags.UnderlyingCashType) { }
        public UnderlyingCashType(string val)
            : base(Tags.UnderlyingCashType, val) { }


        // Field Enumerations
        public const string FIXED = "FIXED";
        public const string DIFF = "DIFF";
    }


    /// <summary>
    /// UnderlyingSettlementType Field
    /// </summary>/
    public sealed class UnderlyingSettlementType : IntField
    {
        public const int TAG = 975;

        public UnderlyingSettlementType()
            : base(Tags.UnderlyingSettlementType) { }
        public UnderlyingSettlementType(int val)
            : base(Tags.UnderlyingSettlementType, val) { }


        // Field Enumerations
        public const int T_PLUS_1 = 2;
        public const int T_PLUS_3 = 4;
        public const int T_PLUS_4 = 5;
    }


    /// <summary>
    /// QuantityDate Field
    /// </summary>/
    public sealed class QuantityDate : StringField
    {
        public const int TAG = 976;

        public QuantityDate()
            : base(Tags.QuantityDate) { }
        public QuantityDate(string val)
            : base(Tags.QuantityDate, val) { }

    }


    /// <summary>
    /// ContIntRptID Field
    /// </summary>/
    public sealed class ContIntRptID : StringField
    {
        public const int TAG = 977;

        public ContIntRptID()
            : base(Tags.ContIntRptID) { }
        public ContIntRptID(string val)
            : base(Tags.ContIntRptID, val) { }

    }


    /// <summary>
    /// LateIndicator Field
    /// </summary>/
    public sealed class LateIndicator : BooleanField
    {
        public const int TAG = 978;

        public LateIndicator()
            : base(Tags.LateIndicator) { }
        public LateIndicator(Boolean val)
            : base(Tags.LateIndicator, val) { }

    }


    /// <summary>
    /// InputSource Field
    /// </summary>/
    public sealed class InputSource : StringField
    {
        public const int TAG = 979;

        public InputSource()
            : base(Tags.InputSource) { }
        public InputSource(string val)
            : base(Tags.InputSource, val) { }

    }


    /// <summary>
    /// SecurityUpdateAction Field
    /// </summary>/
    public sealed class SecurityUpdateAction : CharField
    {
        public const int TAG = 980;

        public SecurityUpdateAction()
            : base(Tags.SecurityUpdateAction) { }
        public SecurityUpdateAction(char val)
            : base(Tags.SecurityUpdateAction, val) { }


        // Field Enumerations
        public const char ADD = 'A';
        public const char DELETE = 'D';
        public const char MODIFY = 'M';
    }


    /// <summary>
    /// NoExpiration Field
    /// </summary>/
    public sealed class NoExpiration : IntField
    {
        public const int TAG = 981;

        public NoExpiration()
            : base(Tags.NoExpiration) { }
        public NoExpiration(int val)
            : base(Tags.NoExpiration, val) { }

    }


    /// <summary>
    /// ExpType Field
    /// </summary>/
    public sealed class ExpType : IntField
    {
        public const int TAG = 982;

        public ExpType()
            : base(Tags.ExpType) { }
        public ExpType(int val)
            : base(Tags.ExpType, val) { }


        // Field Enumerations
        public const int AUTO_EXERCISE = 1;
        public const int NON_AUTO_EXERCISE = 2;
        public const int FINAL_WILL_BE_EXERCISED = 3;
        public const int CONTRARY_INTENTION = 4;
        public const int DIFFERENCE = 5;
    }


    /// <summary>
    /// ExpQty Field
    /// </summary>/
    public sealed class ExpQty : DecimalField
    {
        public const int TAG = 983;

        public ExpQty()
            : base(Tags.ExpQty) { }
        public ExpQty(Decimal val)
            : base(Tags.ExpQty, val) { }

    }


    /// <summary>
    /// NoUnderlyingAmounts Field
    /// </summary>/
    public sealed class NoUnderlyingAmounts : IntField
    {
        public const int TAG = 984;

        public NoUnderlyingAmounts()
            : base(Tags.NoUnderlyingAmounts) { }
        public NoUnderlyingAmounts(int val)
            : base(Tags.NoUnderlyingAmounts, val) { }

    }


    /// <summary>
    /// UnderlyingPayAmount Field
    /// </summary>/
    public sealed class UnderlyingPayAmount : DecimalField
    {
        public const int TAG = 985;

        public UnderlyingPayAmount()
            : base(Tags.UnderlyingPayAmount) { }
        public UnderlyingPayAmount(Decimal val)
            : base(Tags.UnderlyingPayAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCollectAmount Field
    /// </summary>/
    public sealed class UnderlyingCollectAmount : DecimalField
    {
        public const int TAG = 986;

        public UnderlyingCollectAmount()
            : base(Tags.UnderlyingCollectAmount) { }
        public UnderlyingCollectAmount(Decimal val)
            : base(Tags.UnderlyingCollectAmount, val) { }

    }


    /// <summary>
    /// UnderlyingSettlementDate Field
    /// </summary>/
    public sealed class UnderlyingSettlementDate : StringField
    {
        public const int TAG = 987;

        public UnderlyingSettlementDate()
            : base(Tags.UnderlyingSettlementDate) { }
        public UnderlyingSettlementDate(string val)
            : base(Tags.UnderlyingSettlementDate, val) { }

    }


    /// <summary>
    /// UnderlyingSettlementStatus Field
    /// </summary>/
    public sealed class UnderlyingSettlementStatus : StringField
    {
        public const int TAG = 988;

        public UnderlyingSettlementStatus()
            : base(Tags.UnderlyingSettlementStatus) { }
        public UnderlyingSettlementStatus(string val)
            : base(Tags.UnderlyingSettlementStatus, val) { }

    }


    /// <summary>
    /// SecondaryIndividualAllocID Field
    /// </summary>/
    public sealed class SecondaryIndividualAllocID : StringField
    {
        public const int TAG = 989;

        public SecondaryIndividualAllocID()
            : base(Tags.SecondaryIndividualAllocID) { }
        public SecondaryIndividualAllocID(string val)
            : base(Tags.SecondaryIndividualAllocID, val) { }

    }


    /// <summary>
    /// LegReportID Field
    /// </summary>/
    public sealed class LegReportID : StringField
    {
        public const int TAG = 990;

        public LegReportID()
            : base(Tags.LegReportID) { }
        public LegReportID(string val)
            : base(Tags.LegReportID, val) { }

    }


    /// <summary>
    /// RndPx Field
    /// </summary>/
    public sealed class RndPx : DecimalField
    {
        public const int TAG = 991;

        public RndPx()
            : base(Tags.RndPx) { }
        public RndPx(Decimal val)
            : base(Tags.RndPx, val) { }

    }


    /// <summary>
    /// IndividualAllocType Field
    /// </summary>/
    public sealed class IndividualAllocType : IntField
    {
        public const int TAG = 992;

        public IndividualAllocType()
            : base(Tags.IndividualAllocType) { }
        public IndividualAllocType(int val)
            : base(Tags.IndividualAllocType, val) { }


        // Field Enumerations
        public const int SUB_ALLOCATE = 1;
        public const int THIRD_PARTY_ALLOCATION = 2;
    }


    /// <summary>
    /// AllocCustomerCapacity Field
    /// </summary>/
    public sealed class AllocCustomerCapacity : StringField
    {
        public const int TAG = 993;

        public AllocCustomerCapacity()
            : base(Tags.AllocCustomerCapacity) { }
        public AllocCustomerCapacity(string val)
            : base(Tags.AllocCustomerCapacity, val) { }

    }


    /// <summary>
    /// TierCode Field
    /// </summary>/
    public sealed class TierCode : StringField
    {
        public const int TAG = 994;

        public TierCode()
            : base(Tags.TierCode) { }
        public TierCode(string val)
            : base(Tags.TierCode, val) { }

    }


    /// <summary>
    /// UnitOfMeasure Field
    /// </summary>/
    public sealed class UnitOfMeasure : StringField
    {
        public const int TAG = 996;

        public UnitOfMeasure()
            : base(Tags.UnitOfMeasure) { }
        public UnitOfMeasure(string val)
            : base(Tags.UnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// TimeUnit Field
    /// </summary>/
    public sealed class TimeUnit : StringField
    {
        public const int TAG = 997;

        public TimeUnit()
            : base(Tags.TimeUnit) { }
        public TimeUnit(string val)
            : base(Tags.TimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// UnderlyingUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingUnitOfMeasure : StringField
    {
        public const int TAG = 998;

        public UnderlyingUnitOfMeasure()
            : base(Tags.UnderlyingUnitOfMeasure) { }
        public UnderlyingUnitOfMeasure(string val)
            : base(Tags.UnderlyingUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegUnitOfMeasure Field
    /// </summary>/
    public sealed class LegUnitOfMeasure : StringField
    {
        public const int TAG = 999;

        public LegUnitOfMeasure()
            : base(Tags.LegUnitOfMeasure) { }
        public LegUnitOfMeasure(string val)
            : base(Tags.LegUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingTimeUnit Field
    /// </summary>/
    public sealed class UnderlyingTimeUnit : StringField
    {
        public const int TAG = 1000;

        public UnderlyingTimeUnit()
            : base(Tags.UnderlyingTimeUnit) { }
        public UnderlyingTimeUnit(string val)
            : base(Tags.UnderlyingTimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// LegTimeUnit Field
    /// </summary>/
    public sealed class LegTimeUnit : StringField
    {
        public const int TAG = 1001;

        public LegTimeUnit()
            : base(Tags.LegTimeUnit) { }
        public LegTimeUnit(string val)
            : base(Tags.LegTimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// AllocMethod Field
    /// </summary>/
    public sealed class AllocMethod : IntField
    {
        public const int TAG = 1002;

        public AllocMethod()
            : base(Tags.AllocMethod) { }
        public AllocMethod(int val)
            : base(Tags.AllocMethod, val) { }


        // Field Enumerations
        public const int AUTOMATIC = 1;
        public const int GUARANTOR = 2;
        public const int MANUAL = 3;
        public const int BROKER_ASSIGNED = 4;
    }


    /// <summary>
    /// TradeID Field
    /// </summary>/
    public sealed class TradeID : StringField
    {
        public const int TAG = 1003;

        public TradeID()
            : base(Tags.TradeID) { }
        public TradeID(string val)
            : base(Tags.TradeID, val) { }

    }


    /// <summary>
    /// SideTradeReportID Field
    /// </summary>/
    public sealed class SideTradeReportID : StringField
    {
        public const int TAG = 1005;

        public SideTradeReportID()
            : base(Tags.SideTradeReportID) { }
        public SideTradeReportID(string val)
            : base(Tags.SideTradeReportID, val) { }

    }


    /// <summary>
    /// SideFillStationCd Field
    /// </summary>/
    public sealed class SideFillStationCd : StringField
    {
        public const int TAG = 1006;

        public SideFillStationCd()
            : base(Tags.SideFillStationCd) { }
        public SideFillStationCd(string val)
            : base(Tags.SideFillStationCd, val) { }

    }


    /// <summary>
    /// SideReasonCd Field
    /// </summary>/
    public sealed class SideReasonCd : StringField
    {
        public const int TAG = 1007;

        public SideReasonCd()
            : base(Tags.SideReasonCd) { }
        public SideReasonCd(string val)
            : base(Tags.SideReasonCd, val) { }

    }


    /// <summary>
    /// SideTrdSubTyp Field
    /// </summary>/
    public sealed class SideTrdSubTyp : IntField
    {
        public const int TAG = 1008;

        public SideTrdSubTyp()
            : base(Tags.SideTrdSubTyp) { }
        public SideTrdSubTyp(int val)
            : base(Tags.SideTrdSubTyp, val) { }


        // Field Enumerations
        public const int CMTA = 0;
        public const int INTERNAL_TRANSFER_OR_ADJUSTMENT = 1;
        public const int EXTERNAL_TRANSFER_OR_TRANSFER_OF_ACCOUNT = 2;
        public const int REJECT_FOR_SUBMITTING_SIDE = 3;
        public const int ADVISORY_FOR_CONTRA_SIDE = 4;
        public const int OFFSET_DUE_TO_AN_ALLOCATION = 5;
        public const int ONSET_DUE_TO_AN_ALLOCATION = 6;
        public const int DIFFERENTIAL_SPREAD = 7;
        public const int IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHT = 8;
        public const int TRANSACTION_FROM_EXERCISE = 9;
        public const int TRANSACTION_FROM_ASSIGNMENT = 10;
        public const int ACATS = 11;
        public const int OFF_HOURS_TRADE = 33;
        public const int ON_HOURS_TRADE = 34;
        public const int OTC_QUOTE = 35;
        public const int CONVERTED_SWAP = 36;
        public const int AI = 14;
        public const int B = 15;
        public const int K = 16;
        public const int LC = 17;
        public const int M = 18;
        public const int N = 19;
        public const int NM = 20;
        public const int NR = 21;
        public const int P = 22;
        public const int PA = 23;
        public const int PC = 24;
        public const int PN = 25;
        public const int R = 26;
        public const int RO = 27;
        public const int RT = 28;
        public const int SW = 29;
        public const int T = 30;
        public const int WN = 31;
        public const int WT = 32;
        public const int CROSSED_TRADE = 37;
        public const int INTERIM_PROTECTED_TRADE = 38;
        public const int LARGE_IN_SCALE = 39;
        public const int WASH_TRADE = 40;
        public const int TRADE_AT_SETTLEMENT = 41;
        public const int TRADE_AT_MARKER = 43;
        public const int AUCTION_TRADE = 42;
        public const int DEFAULT = 44;
        public const int RESTRUCTURING = 45;
        public const int MERGER = 46;
        public const int SPIN_OFF = 47;
        public const int MULTILATERAL_COMPRESSION = 48;
        public const int BALANCING = 50;
        public const int BASIS_TRADE_INDEX_CLOSE = 51;
        public const int TRADE_AT_CASH_OPEN = 52;
        public const int TRADE_SUBMITTED_TO_VENUE_FOR_CLEARING_AND_SETTLEMENT = 53;
        public const int BILATERAL_COMPRESSION = 54;
        public const int INTERNAL_TRANSFER = 1;
        public const int EXTERNAL_TRANSFER = 2;
        public const int REJECT_FOR_SUBMITTING_TRADE = 3;
    }


    /// <summary>
    /// SideQty Field
    /// </summary>/
    public sealed class SideQty : IntField
    {
        public const int TAG = 1009;

        public SideQty()
            : base(Tags.SideQty) { }
        public SideQty(int val)
            : base(Tags.SideQty, val) { }

    }


    /// <summary>
    /// MessageEventSource Field
    /// </summary>/
    public sealed class MessageEventSource : StringField
    {
        public const int TAG = 1011;

        public MessageEventSource()
            : base(Tags.MessageEventSource) { }
        public MessageEventSource(string val)
            : base(Tags.MessageEventSource, val) { }

    }


    /// <summary>
    /// SideTrdRegTimestamp Field
    /// </summary>/
    public sealed class SideTrdRegTimestamp : DateTimeField
    {
        public const int TAG = 1012;

        public SideTrdRegTimestamp()
            : base(Tags.SideTrdRegTimestamp) { }
        public SideTrdRegTimestamp(DateTime val)
            : base(Tags.SideTrdRegTimestamp, val) { }
        public SideTrdRegTimestamp(DateTime val, bool showMilliseconds)
            : base(Tags.SideTrdRegTimestamp, val, showMilliseconds) { }
        public SideTrdRegTimestamp(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.SideTrdRegTimestamp, val, precision) { }

    }


    /// <summary>
    /// SideTrdRegTimestampType Field
    /// </summary>/
    public sealed class SideTrdRegTimestampType : IntField
    {
        public const int TAG = 1013;

        public SideTrdRegTimestampType()
            : base(Tags.SideTrdRegTimestampType) { }
        public SideTrdRegTimestampType(int val)
            : base(Tags.SideTrdRegTimestampType, val) { }


        // Field Enumerations
        public const int EXECUTION_TIME = 1;
        public const int TIME_IN = 2;
        public const int TIME_OUT = 3;
        public const int BROKER_RECEIPT = 4;
        public const int BROKER_EXECUTION = 5;
        public const int DESK_RECEIPT = 6;
        public const int SUBMISSION_TO_CLEARING = 7;
        public const int TIME_PRIORITY = 8;
        public const int ORDERBOOK_ENTRY_TIME = 9;
        public const int ORDER_SUBMISSION_TIME = 10;
        public const int PUBLICLY_REPORTED = 11;
        public const int PUBLIC_REPORT_UPDATED = 12;
        public const int NON_PUBLICLY_REPORTED = 13;
        public const int NON_PUBLIC_REPORT_UPDATED = 14;
        public const int SUBMITTED_FOR_CONFIRMATION = 15;
        public const int UPDATED_FOR_CONFIRMATION = 16;
        public const int CONFIRMED = 17;
        public const int UPDATED_FOR_CLEARING = 18;
        public const int CLEARED = 19;
        public const int ALLOCATIONS_SUBMITTED = 20;
        public const int ALLOCATIONS_UPDATED = 21;
        public const int ALLOCATIONS_COMPLETED = 22;
        public const int SUBMITTED_TO_REPOSITORY = 23;
        public const int POST_TRADE_CONTINUATION_EVENT = 24;
        public const int POST_TRADE_VALUATION = 25;
        public const int PREVIOUS_TIME_PRIORITY = 26;
        public const int IDENTIFIER_ASSIGNED = 27;
        public const int PREVIOUS_IDENTIFIER_ASSIGNED = 28;
        public const int ORDER_CANCELLATION_TIME = 29;
        public const int ORDER_MODIFICATION_TIME = 30;
        public const int ORDER_ROUTING_TIME = 31;
        public const int TRADE_CANCELLATION_TIME = 32;
        public const int TRADE_MODIFICATION_TIME = 33;
        public const int REFERENCE_TIME_FOR_NBBO = 34;
    }


    /// <summary>
    /// SideTrdRegTimestampSrc Field
    /// </summary>/
    public sealed class SideTrdRegTimestampSrc : StringField
    {
        public const int TAG = 1014;

        public SideTrdRegTimestampSrc()
            : base(Tags.SideTrdRegTimestampSrc) { }
        public SideTrdRegTimestampSrc(string val)
            : base(Tags.SideTrdRegTimestampSrc, val) { }

    }


    /// <summary>
    /// AsOfIndicator Field
    /// </summary>/
    public sealed class AsOfIndicator : CharField
    {
        public const int TAG = 1015;

        public AsOfIndicator()
            : base(Tags.AsOfIndicator) { }
        public AsOfIndicator(char val)
            : base(Tags.AsOfIndicator, val) { }


        // Field Enumerations
        public const char FALSE = '0';
        public const char TRUE = '1';
    }


    /// <summary>
    /// NoSideTrdRegTS Field
    /// </summary>/
    public sealed class NoSideTrdRegTS : IntField
    {
        public const int TAG = 1016;

        public NoSideTrdRegTS()
            : base(Tags.NoSideTrdRegTS) { }
        public NoSideTrdRegTS(int val)
            : base(Tags.NoSideTrdRegTS, val) { }

    }


    /// <summary>
    /// LegOptionRatio Field
    /// </summary>/
    public sealed class LegOptionRatio : DecimalField
    {
        public const int TAG = 1017;

        public LegOptionRatio()
            : base(Tags.LegOptionRatio) { }
        public LegOptionRatio(Decimal val)
            : base(Tags.LegOptionRatio, val) { }

    }


    /// <summary>
    /// NoInstrumentParties Field
    /// </summary>/
    public sealed class NoInstrumentParties : IntField
    {
        public const int TAG = 1018;

        public NoInstrumentParties()
            : base(Tags.NoInstrumentParties) { }
        public NoInstrumentParties(int val)
            : base(Tags.NoInstrumentParties, val) { }

    }


    /// <summary>
    /// InstrumentPartyID Field
    /// </summary>/
    public sealed class InstrumentPartyID : StringField
    {
        public const int TAG = 1019;

        public InstrumentPartyID()
            : base(Tags.InstrumentPartyID) { }
        public InstrumentPartyID(string val)
            : base(Tags.InstrumentPartyID, val) { }

    }


    /// <summary>
    /// TradeVolume Field
    /// </summary>/
    public sealed class TradeVolume : DecimalField
    {
        public const int TAG = 1020;

        public TradeVolume()
            : base(Tags.TradeVolume) { }
        public TradeVolume(Decimal val)
            : base(Tags.TradeVolume, val) { }

    }


    /// <summary>
    /// MDBookType Field
    /// </summary>/
    public sealed class MDBookType : IntField
    {
        public const int TAG = 1021;

        public MDBookType()
            : base(Tags.MDBookType) { }
        public MDBookType(int val)
            : base(Tags.MDBookType, val) { }


        // Field Enumerations
        public const int TOP_OF_BOOK = 1;
        public const int PRICE_DEPTH = 2;
        public const int ORDER_DEPTH = 3;
    }


    /// <summary>
    /// MDFeedType Field
    /// </summary>/
    public sealed class MDFeedType : StringField
    {
        public const int TAG = 1022;

        public MDFeedType()
            : base(Tags.MDFeedType) { }
        public MDFeedType(string val)
            : base(Tags.MDFeedType, val) { }

    }


    /// <summary>
    /// MDPriceLevel Field
    /// </summary>/
    public sealed class MDPriceLevel : IntField
    {
        public const int TAG = 1023;

        public MDPriceLevel()
            : base(Tags.MDPriceLevel) { }
        public MDPriceLevel(int val)
            : base(Tags.MDPriceLevel, val) { }

    }


    /// <summary>
    /// MDOriginType Field
    /// </summary>/
    public sealed class MDOriginType : IntField
    {
        public const int TAG = 1024;

        public MDOriginType()
            : base(Tags.MDOriginType) { }
        public MDOriginType(int val)
            : base(Tags.MDOriginType, val) { }


        // Field Enumerations
        public const int BOOK = 0;
        public const int OFF_BOOK = 1;
        public const int CROSS = 2;
        public const int QUOTE_DRIVEN_MARKET = 3;
        public const int DARK_ORDER_BOOK = 4;
        public const int AUCTION_DRIVEN_MARKET = 5;
        public const int QUOTE_NEGOTIATION = 6;
        public const int VOICE_NEGOTIATION = 7;
        public const int HYBRID_MARKET = 8;
    }


    /// <summary>
    /// FirstPx Field
    /// </summary>/
    public sealed class FirstPx : DecimalField
    {
        public const int TAG = 1025;

        public FirstPx()
            : base(Tags.FirstPx) { }
        public FirstPx(Decimal val)
            : base(Tags.FirstPx, val) { }

    }


    /// <summary>
    /// MDEntrySpotRate Field
    /// </summary>/
    public sealed class MDEntrySpotRate : DecimalField
    {
        public const int TAG = 1026;

        public MDEntrySpotRate()
            : base(Tags.MDEntrySpotRate) { }
        public MDEntrySpotRate(Decimal val)
            : base(Tags.MDEntrySpotRate, val) { }

    }


    /// <summary>
    /// MDEntryForwardPoints Field
    /// </summary>/
    public sealed class MDEntryForwardPoints : DecimalField
    {
        public const int TAG = 1027;

        public MDEntryForwardPoints()
            : base(Tags.MDEntryForwardPoints) { }
        public MDEntryForwardPoints(Decimal val)
            : base(Tags.MDEntryForwardPoints, val) { }

    }


    /// <summary>
    /// ManualOrderIndicator Field
    /// </summary>/
    public sealed class ManualOrderIndicator : BooleanField
    {
        public const int TAG = 1028;

        public ManualOrderIndicator()
            : base(Tags.ManualOrderIndicator) { }
        public ManualOrderIndicator(Boolean val)
            : base(Tags.ManualOrderIndicator, val) { }

    }


    /// <summary>
    /// CustDirectedOrder Field
    /// </summary>/
    public sealed class CustDirectedOrder : BooleanField
    {
        public const int TAG = 1029;

        public CustDirectedOrder()
            : base(Tags.CustDirectedOrder) { }
        public CustDirectedOrder(Boolean val)
            : base(Tags.CustDirectedOrder, val) { }

    }


    /// <summary>
    /// ReceivedDeptID Field
    /// </summary>/
    public sealed class ReceivedDeptID : StringField
    {
        public const int TAG = 1030;

        public ReceivedDeptID()
            : base(Tags.ReceivedDeptID) { }
        public ReceivedDeptID(string val)
            : base(Tags.ReceivedDeptID, val) { }

    }


    /// <summary>
    /// CustOrderHandlingInst Field
    /// </summary>/
    public sealed class CustOrderHandlingInst : StringField
    {
        public const int TAG = 1031;

        public CustOrderHandlingInst()
            : base(Tags.CustOrderHandlingInst) { }
        public CustOrderHandlingInst(string val)
            : base(Tags.CustOrderHandlingInst, val) { }


        // Field Enumerations
        public const string ADD_ON_ORDER = "ADD";
        public const string ALL_OR_NONE = "AON";
        public const string CASH_NOT_HELD = "CNH";
        public const string DIRECTED_ORDER = "DIR";
        public const string EXCHANGE_FOR_PHYSICAL_TRANSACTION = "E.W";
        public const string FILL_OR_KILL = "FOK";
        public const string IMBALANCE_ONLY = "IO";
        public const string IMMEDIATE_OR_CANCEL = "IOC";
        public const string LIMIT_ON_OPEN = "LOO";
        public const string LIMIT_ON_CLOSE = "LOC";
        public const string MARKET_AT_OPEN = "MAO";
        public const string MARKET_AT_CLOSE = "MAC";
        public const string MARKET_ON_OPEN = "MOO";
        public const string MARKET_ON_CLOSE = "MOC";
        public const string MINIMUM_QUANTITY = "MQT";
        public const string NOT_HELD = "NH";
        public const string OVER_THE_DAY = "OVD";
        public const string PEGGED = "PEG";
        public const string RESERVE_SIZE_ORDER = "RSV";
        public const string STOP_STOCK_TRANSACTION = "S.W";
        public const string SCALE = "SCL";
        public const string TIME_ORDER = "TMO";
        public const string TRAILING_STOP = "TS";
        public const string WORK = "WRK";
        public const string PHONE_SIMPLE = "A";
        public const string PHONE_COMPLEX = "B";
        public const string FCM_PROVIDED_SCREEN = "C";
        public const string OTHER_PROVIDED_SCREEN = "D";
        public const string CLIENT_PROVIDED_PLATFORM_CONTROLLED_BY_FCM = "E";
        public const string CLIENT_PROVIDED_PLATFORM_DIRECT_TO_EXCHANGE = "F";
        public const string G_ORDER = "G";
        public const string ALGO_ENGINE = "H";
        public const string PRICE_AT_EXECUTION = "J";
        public const string DESK_W = "W";
        public const string DESK_X = "X";
        public const string CLIENT_Y = "Y";
        public const string CLIENT_Z = "Z";
        public const string CONDITIONAL_ORDER = "CND";
        public const string DELIVERY_INSTRUCTIONS_CSH = "CSH";
        public const string DISCRETIONARY_LIMIT_ORDER = "DLO";
        public const string INTRADAY_CROSS = "IDX";
        public const string INTERMARKET_SWEEP_ORDER = "ISO";
        public const string MERGER_RELATED_TRANSFER_POSITION = "MPT";
        public const string MARKET_TO_LIMIT = "MTL";
        public const string DELIVERY_INSTRUCTIONS_ND = "ND";
        public const string OPTIONS_RELATED_TRANSACTION = "OPT";
        public const string DELIVERY_INSTRUCTIONS_SLR = "SLR";
        public const string STAY_ON_OFFERSIDE = "F0";
        public const string GO_ALONG = "F3";
        public const string PARTICIPATE_DO_NOT_INITIATE = "F6";
        public const string STRICT_SCALE = "F7";
        public const string TRY_TO_SCALE = "F8";
        public const string STAY_ON_BIDSIDE = "F9";
        public const string NO_CROSS = "FA";
        public const string OK_TO_CROSS = "FB";
        public const string CALL_FIRST = "FC";
        public const string PERCENT_OF_VOLUME = "FD";
        public const string REINSTATE_ON_SYSTEM_FAILURE = "FH";
        public const string INSTITUTION_ONLY = "FI";
        public const string REINSTATE_ON_TRADING_HALT = "FJ";
        public const string CANCEL_ON_TRADING_HALF = "FK";
        public const string LAST_PEG = "FL";
        public const string MID_PRICE_PEG = "FM";
        public const string NON_NEGOTIABLE = "FN";
        public const string OPENING_PEG = "FO";
        public const string MARKET_PEG = "FP";
        public const string CANCEL_ON_SYSTEM_FAILURE = "FQ";
        public const string PRIMARY_PEG = "FR";
        public const string SUSPEND = "FS";
        public const string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "FT";
        public const string PEG_TO_VWAP = "FW";
        public const string TRADE_ALONG = "FX";
        public const string TRY_TO_STOP = "FY";
        public const string CANCEL_IF_NOT_BEST = "FZ";
        public const string STRICT_LIMIT = "Fb";
        public const string IGNORE_PRICE_VALIDITY_CHECKS = "Fc";
        public const string PEG_TO_LIMIT_PRICE = "Fd";
        public const string WORK_TO_TARGET_STRATEGY = "Fe";
    }


    /// <summary>
    /// OrderHandlingInstSource Field
    /// </summary>/
    public sealed class OrderHandlingInstSource : IntField
    {
        public const int TAG = 1032;

        public OrderHandlingInstSource()
            : base(Tags.OrderHandlingInstSource) { }
        public OrderHandlingInstSource(int val)
            : base(Tags.OrderHandlingInstSource, val) { }


        // Field Enumerations
        public const int FINRA_OATS = 1;
        public const int FIA_EXECUTION_SOURCE_CODE = 2;
        public const int NASD_OATS = 1;
    }


    /// <summary>
    /// DeskType Field
    /// </summary>/
    public sealed class DeskType : StringField
    {
        public const int TAG = 1033;

        public DeskType()
            : base(Tags.DeskType) { }
        public DeskType(string val)
            : base(Tags.DeskType, val) { }


        // Field Enumerations
        public const string AGENCY = "A";
        public const string ARBITRAGE = "AR";
        public const string DERIVATIVES = "D";
        public const string INTERNATIONAL = "IN";
        public const string INSTITUTIONAL = "IS";
        public const string OTHER = "O";
        public const string PREFERRED_TRADING = "PF";
        public const string PROPRIETARY = "PR";
        public const string PROGRAM_TRADING = "PT";
        public const string SALES = "S";
        public const string TRADING_DESK_OR_SYSTEM_NON_MARKET_MAKER = "T";
        public const string BLOCK_TRADING = "B";
        public const string CONVERTIBLE_DESK = "C";
        public const string CENTRAL_RISK_BOOKS = "CR";
        public const string EQUITY_CAPITAL_MARKETS = "EC";
        public const string SWAPS = "SW";
        public const string TREASURY = "TR";
        public const string FLOOR_BROKER = "FB";
        public const string TRADING = "T";
    }


    /// <summary>
    /// DeskTypeSource Field
    /// </summary>/
    public sealed class DeskTypeSource : IntField
    {
        public const int TAG = 1034;

        public DeskTypeSource()
            : base(Tags.DeskTypeSource) { }
        public DeskTypeSource(int val)
            : base(Tags.DeskTypeSource, val) { }


        // Field Enumerations
        public const int FINRA_OATS = 1;
        public const int NASD_OATS = 1;
    }


    /// <summary>
    /// DeskOrderHandlingInst Field
    /// </summary>/
    public sealed class DeskOrderHandlingInst : StringField
    {
        public const int TAG = 1035;

        public DeskOrderHandlingInst()
            : base(Tags.DeskOrderHandlingInst) { }
        public DeskOrderHandlingInst(string val)
            : base(Tags.DeskOrderHandlingInst, val) { }


        // Field Enumerations
        public const string ADD_ON_ORDER = "ADD";
        public const string ALL_OR_NONE = "AON";
        public const string CASH_NOT_HELD = "CNH";
        public const string DIRECTED_ORDER = "DIR";
        public const string EXCHANGE_FOR_PHYSICAL_TRANSACTION = "E.W";
        public const string FILL_OR_KILL = "FOK";
        public const string IMBALANCE_ONLY = "IO";
        public const string IMMEDIATE_OR_CANCEL = "IOC";
        public const string LIMIT_ON_OPEN = "LOO";
        public const string LIMIT_ON_CLOSE = "LOC";
        public const string MARKET_AT_OPEN = "MAO";
        public const string MARKET_AT_CLOSE = "MAC";
        public const string MARKET_ON_OPEN = "MOO";
        public const string MARKET_ON_CLOSE = "MOC";
        public const string MINIMUM_QUANTITY = "MQT";
        public const string NOT_HELD = "NH";
        public const string OVER_THE_DAY = "OVD";
        public const string PEGGED = "PEG";
        public const string RESERVE_SIZE_ORDER = "RSV";
        public const string STOP_STOCK_TRANSACTION = "S.W";
        public const string SCALE = "SCL";
        public const string TIME_ORDER = "TMO";
        public const string TRAILING_STOP = "TS";
        public const string WORK = "WRK";
        public const string PHONE_SIMPLE = "A";
        public const string PHONE_COMPLEX = "B";
        public const string FCM_PROVIDED_SCREEN = "C";
        public const string OTHER_PROVIDED_SCREEN = "D";
        public const string CLIENT_PROVIDED_PLATFORM_CONTROLLED_BY_FCM = "E";
        public const string CLIENT_PROVIDED_PLATFORM_DIRECT_TO_EXCHANGE = "F";
        public const string G_ORDER = "G";
        public const string ALGO_ENGINE = "H";
        public const string PRICE_AT_EXECUTION = "J";
        public const string DESK_W = "W";
        public const string DESK_X = "X";
        public const string CLIENT_Y = "Y";
        public const string CLIENT_Z = "Z";
        public const string CONDITIONAL_ORDER = "CND";
        public const string DELIVERY_INSTRUCTIONS_CSH = "CSH";
        public const string DISCRETIONARY_LIMIT_ORDER = "DLO";
        public const string INTRADAY_CROSS = "IDX";
        public const string INTERMARKET_SWEEP_ORDER = "ISO";
        public const string MERGER_RELATED_TRANSFER_POSITION = "MPT";
        public const string MARKET_TO_LIMIT = "MTL";
        public const string DELIVERY_INSTRUCTIONS_ND = "ND";
        public const string OPTIONS_RELATED_TRANSACTION = "OPT";
        public const string DELIVERY_INSTRUCTIONS_SLR = "SLR";
        public const string STAY_ON_OFFERSIDE = "F0";
        public const string GO_ALONG = "F3";
        public const string PARTICIPATE_DO_NOT_INITIATE = "F6";
        public const string STRICT_SCALE = "F7";
        public const string TRY_TO_SCALE = "F8";
        public const string STAY_ON_BIDSIDE = "F9";
        public const string NO_CROSS = "FA";
        public const string OK_TO_CROSS = "FB";
        public const string CALL_FIRST = "FC";
        public const string PERCENT_OF_VOLUME = "FD";
        public const string REINSTATE_ON_SYSTEM_FAILURE = "FH";
        public const string INSTITUTION_ONLY = "FI";
        public const string REINSTATE_ON_TRADING_HALT = "FJ";
        public const string CANCEL_ON_TRADING_HALF = "FK";
        public const string LAST_PEG = "FL";
        public const string MID_PRICE_PEG = "FM";
        public const string NON_NEGOTIABLE = "FN";
        public const string OPENING_PEG = "FO";
        public const string MARKET_PEG = "FP";
        public const string CANCEL_ON_SYSTEM_FAILURE = "FQ";
        public const string PRIMARY_PEG = "FR";
        public const string SUSPEND = "FS";
        public const string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "FT";
        public const string PEG_TO_VWAP = "FW";
        public const string TRADE_ALONG = "FX";
        public const string TRY_TO_STOP = "FY";
        public const string CANCEL_IF_NOT_BEST = "FZ";
        public const string STRICT_LIMIT = "Fb";
        public const string IGNORE_PRICE_VALIDITY_CHECKS = "Fc";
        public const string PEG_TO_LIMIT_PRICE = "Fd";
        public const string WORK_TO_TARGET_STRATEGY = "Fe";
    }


    /// <summary>
    /// ExecAckStatus Field
    /// </summary>/
    public sealed class ExecAckStatus : CharField
    {
        public const int TAG = 1036;

        public ExecAckStatus()
            : base(Tags.ExecAckStatus) { }
        public ExecAckStatus(char val)
            : base(Tags.ExecAckStatus, val) { }


        // Field Enumerations
        public const char RECEIVED_NOT_YET_PROCESSED = '0';
        public const char ACCEPTED = '1';
        public const char DONT_KNOW = '2';
    }


    /// <summary>
    /// UnderlyingDeliveryAmount Field
    /// </summary>/
    public sealed class UnderlyingDeliveryAmount : DecimalField
    {
        public const int TAG = 1037;

        public UnderlyingDeliveryAmount()
            : base(Tags.UnderlyingDeliveryAmount) { }
        public UnderlyingDeliveryAmount(Decimal val)
            : base(Tags.UnderlyingDeliveryAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCapValue Field
    /// </summary>/
    public sealed class UnderlyingCapValue : DecimalField
    {
        public const int TAG = 1038;

        public UnderlyingCapValue()
            : base(Tags.UnderlyingCapValue) { }
        public UnderlyingCapValue(Decimal val)
            : base(Tags.UnderlyingCapValue, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethod Field
    /// </summary>/
    public sealed class UnderlyingSettlMethod : StringField
    {
        public const int TAG = 1039;

        public UnderlyingSettlMethod()
            : base(Tags.UnderlyingSettlMethod) { }
        public UnderlyingSettlMethod(string val)
            : base(Tags.UnderlyingSettlMethod, val) { }


        // Field Enumerations
        public const string CASH_SETTLEMENT_REQUIRED = "C";
        public const string PHYSICAL_SETTLEMENT_REQUIRED = "P";
        public const string ELECTION_AT_EXERCISE = "E";
    }


    /// <summary>
    /// SecondaryTradeID Field
    /// </summary>/
    public sealed class SecondaryTradeID : StringField
    {
        public const int TAG = 1040;

        public SecondaryTradeID()
            : base(Tags.SecondaryTradeID) { }
        public SecondaryTradeID(string val)
            : base(Tags.SecondaryTradeID, val) { }

    }


    /// <summary>
    /// FirmTradeID Field
    /// </summary>/
    public sealed class FirmTradeID : StringField
    {
        public const int TAG = 1041;

        public FirmTradeID()
            : base(Tags.FirmTradeID) { }
        public FirmTradeID(string val)
            : base(Tags.FirmTradeID, val) { }

    }


    /// <summary>
    /// SecondaryFirmTradeID Field
    /// </summary>/
    public sealed class SecondaryFirmTradeID : StringField
    {
        public const int TAG = 1042;

        public SecondaryFirmTradeID()
            : base(Tags.SecondaryFirmTradeID) { }
        public SecondaryFirmTradeID(string val)
            : base(Tags.SecondaryFirmTradeID, val) { }

    }


    /// <summary>
    /// CollApplType Field
    /// </summary>/
    public sealed class CollApplType : IntField
    {
        public const int TAG = 1043;

        public CollApplType()
            : base(Tags.CollApplType) { }
        public CollApplType(int val)
            : base(Tags.CollApplType, val) { }


        // Field Enumerations
        public const int SPECIFIC_DEPOSIT = 0;
        public const int GENERAL = 1;
    }


    /// <summary>
    /// UnderlyingAdjustedQuantity Field
    /// </summary>/
    public sealed class UnderlyingAdjustedQuantity : DecimalField
    {
        public const int TAG = 1044;

        public UnderlyingAdjustedQuantity()
            : base(Tags.UnderlyingAdjustedQuantity) { }
        public UnderlyingAdjustedQuantity(Decimal val)
            : base(Tags.UnderlyingAdjustedQuantity, val) { }

    }


    /// <summary>
    /// UnderlyingFXRate Field
    /// </summary>/
    public sealed class UnderlyingFXRate : DecimalField
    {
        public const int TAG = 1045;

        public UnderlyingFXRate()
            : base(Tags.UnderlyingFXRate) { }
        public UnderlyingFXRate(Decimal val)
            : base(Tags.UnderlyingFXRate, val) { }

    }


    /// <summary>
    /// UnderlyingFXRateCalc Field
    /// </summary>/
    public sealed class UnderlyingFXRateCalc : CharField
    {
        public const int TAG = 1046;

        public UnderlyingFXRateCalc()
            : base(Tags.UnderlyingFXRateCalc) { }
        public UnderlyingFXRateCalc(char val)
            : base(Tags.UnderlyingFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// AllocPositionEffect Field
    /// </summary>/
    public sealed class AllocPositionEffect : CharField
    {
        public const int TAG = 1047;

        public AllocPositionEffect()
            : base(Tags.AllocPositionEffect) { }
        public AllocPositionEffect(char val)
            : base(Tags.AllocPositionEffect, val) { }


        // Field Enumerations
        public const char OPEN = 'O';
        public const char CLOSE = 'C';
        public const char ROLLED = 'R';
        public const char FIFO = 'F';
    }


    /// <summary>
    /// DealingCapacity Field
    /// </summary>/
    public sealed class DealingCapacity : CharField
    {
        public const int TAG = 1048;

        public DealingCapacity()
            : base(Tags.DealingCapacity) { }
        public DealingCapacity(char val)
            : base(Tags.DealingCapacity, val) { }


        // Field Enumerations
        public const char AGENT = 'A';
        public const char PRINCIPAL = 'P';
        public const char RISKLESS_PRINCIPAL = 'R';
    }


    /// <summary>
    /// InstrmtAssignmentMethod Field
    /// </summary>/
    public sealed class InstrmtAssignmentMethod : CharField
    {
        public const int TAG = 1049;

        public InstrmtAssignmentMethod()
            : base(Tags.InstrmtAssignmentMethod) { }
        public InstrmtAssignmentMethod(char val)
            : base(Tags.InstrmtAssignmentMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = 'P';
        public const char RANDOM = 'R';
    }


    /// <summary>
    /// InstrumentPartyIDSource Field
    /// </summary>/
    public sealed class InstrumentPartyIDSource : CharField
    {
        public const int TAG = 1050;

        public InstrumentPartyIDSource()
            : base(Tags.InstrumentPartyIDSource) { }
        public InstrumentPartyIDSource(char val)
            : base(Tags.InstrumentPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// InstrumentPartyRole Field
    /// </summary>/
    public sealed class InstrumentPartyRole : IntField
    {
        public const int TAG = 1051;

        public InstrumentPartyRole()
            : base(Tags.InstrumentPartyRole) { }
        public InstrumentPartyRole(int val)
            : base(Tags.InstrumentPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoInstrumentPartySubIDs Field
    /// </summary>/
    public sealed class NoInstrumentPartySubIDs : IntField
    {
        public const int TAG = 1052;

        public NoInstrumentPartySubIDs()
            : base(Tags.NoInstrumentPartySubIDs) { }
        public NoInstrumentPartySubIDs(int val)
            : base(Tags.NoInstrumentPartySubIDs, val) { }

    }


    /// <summary>
    /// InstrumentPartySubID Field
    /// </summary>/
    public sealed class InstrumentPartySubID : StringField
    {
        public const int TAG = 1053;

        public InstrumentPartySubID()
            : base(Tags.InstrumentPartySubID) { }
        public InstrumentPartySubID(string val)
            : base(Tags.InstrumentPartySubID, val) { }

    }


    /// <summary>
    /// InstrumentPartySubIDType Field
    /// </summary>/
    public sealed class InstrumentPartySubIDType : IntField
    {
        public const int TAG = 1054;

        public InstrumentPartySubIDType()
            : base(Tags.InstrumentPartySubIDType) { }
        public InstrumentPartySubIDType(int val)
            : base(Tags.InstrumentPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// PositionCurrency Field
    /// </summary>/
    public sealed class PositionCurrency : StringField
    {
        public const int TAG = 1055;

        public PositionCurrency()
            : base(Tags.PositionCurrency) { }
        public PositionCurrency(string val)
            : base(Tags.PositionCurrency, val) { }

    }


    /// <summary>
    /// CalculatedCcyLastQty Field
    /// </summary>/
    public sealed class CalculatedCcyLastQty : DecimalField
    {
        public const int TAG = 1056;

        public CalculatedCcyLastQty()
            : base(Tags.CalculatedCcyLastQty) { }
        public CalculatedCcyLastQty(Decimal val)
            : base(Tags.CalculatedCcyLastQty, val) { }

    }


    /// <summary>
    /// AggressorIndicator Field
    /// </summary>/
    public sealed class AggressorIndicator : BooleanField
    {
        public const int TAG = 1057;

        public AggressorIndicator()
            : base(Tags.AggressorIndicator) { }
        public AggressorIndicator(Boolean val)
            : base(Tags.AggressorIndicator, val) { }


        // Field Enumerations
        public const Boolean YES = true;
        public const Boolean NO = false;
    }


    /// <summary>
    /// NoUndlyInstrumentParties Field
    /// </summary>/
    public sealed class NoUndlyInstrumentParties : IntField
    {
        public const int TAG = 1058;

        public NoUndlyInstrumentParties()
            : base(Tags.NoUndlyInstrumentParties) { }
        public NoUndlyInstrumentParties(int val)
            : base(Tags.NoUndlyInstrumentParties, val) { }

    }


    /// <summary>
    /// UndlyInstrumentPartyID Field
    /// </summary>/
    public sealed class UndlyInstrumentPartyID : StringField
    {
        public const int TAG = 1059;

        public UndlyInstrumentPartyID()
            : base(Tags.UndlyInstrumentPartyID) { }
        public UndlyInstrumentPartyID(string val)
            : base(Tags.UndlyInstrumentPartyID, val) { }

    }


    /// <summary>
    /// UndlyInstrumentPartyIDSource Field
    /// </summary>/
    public sealed class UndlyInstrumentPartyIDSource : CharField
    {
        public const int TAG = 1060;

        public UndlyInstrumentPartyIDSource()
            : base(Tags.UndlyInstrumentPartyIDSource) { }
        public UndlyInstrumentPartyIDSource(char val)
            : base(Tags.UndlyInstrumentPartyIDSource, val) { }

    }


    /// <summary>
    /// UndlyInstrumentPartyRole Field
    /// </summary>/
    public sealed class UndlyInstrumentPartyRole : IntField
    {
        public const int TAG = 1061;

        public UndlyInstrumentPartyRole()
            : base(Tags.UndlyInstrumentPartyRole) { }
        public UndlyInstrumentPartyRole(int val)
            : base(Tags.UndlyInstrumentPartyRole, val) { }

    }


    /// <summary>
    /// NoUndlyInstrumentPartySubIDs Field
    /// </summary>/
    public sealed class NoUndlyInstrumentPartySubIDs : IntField
    {
        public const int TAG = 1062;

        public NoUndlyInstrumentPartySubIDs()
            : base(Tags.NoUndlyInstrumentPartySubIDs) { }
        public NoUndlyInstrumentPartySubIDs(int val)
            : base(Tags.NoUndlyInstrumentPartySubIDs, val) { }

    }


    /// <summary>
    /// UndlyInstrumentPartySubID Field
    /// </summary>/
    public sealed class UndlyInstrumentPartySubID : StringField
    {
        public const int TAG = 1063;

        public UndlyInstrumentPartySubID()
            : base(Tags.UndlyInstrumentPartySubID) { }
        public UndlyInstrumentPartySubID(string val)
            : base(Tags.UndlyInstrumentPartySubID, val) { }

    }


    /// <summary>
    /// UndlyInstrumentPartySubIDType Field
    /// </summary>/
    public sealed class UndlyInstrumentPartySubIDType : IntField
    {
        public const int TAG = 1064;

        public UndlyInstrumentPartySubIDType()
            : base(Tags.UndlyInstrumentPartySubIDType) { }
        public UndlyInstrumentPartySubIDType(int val)
            : base(Tags.UndlyInstrumentPartySubIDType, val) { }

    }


    /// <summary>
    /// BidSwapPoints Field
    /// </summary>/
    public sealed class BidSwapPoints : DecimalField
    {
        public const int TAG = 1065;

        public BidSwapPoints()
            : base(Tags.BidSwapPoints) { }
        public BidSwapPoints(Decimal val)
            : base(Tags.BidSwapPoints, val) { }

    }


    /// <summary>
    /// OfferSwapPoints Field
    /// </summary>/
    public sealed class OfferSwapPoints : DecimalField
    {
        public const int TAG = 1066;

        public OfferSwapPoints()
            : base(Tags.OfferSwapPoints) { }
        public OfferSwapPoints(Decimal val)
            : base(Tags.OfferSwapPoints, val) { }

    }


    /// <summary>
    /// LegBidForwardPoints Field
    /// </summary>/
    public sealed class LegBidForwardPoints : DecimalField
    {
        public const int TAG = 1067;

        public LegBidForwardPoints()
            : base(Tags.LegBidForwardPoints) { }
        public LegBidForwardPoints(Decimal val)
            : base(Tags.LegBidForwardPoints, val) { }

    }


    /// <summary>
    /// LegOfferForwardPoints Field
    /// </summary>/
    public sealed class LegOfferForwardPoints : DecimalField
    {
        public const int TAG = 1068;

        public LegOfferForwardPoints()
            : base(Tags.LegOfferForwardPoints) { }
        public LegOfferForwardPoints(Decimal val)
            : base(Tags.LegOfferForwardPoints, val) { }

    }


    /// <summary>
    /// SwapPoints Field
    /// </summary>/
    public sealed class SwapPoints : DecimalField
    {
        public const int TAG = 1069;

        public SwapPoints()
            : base(Tags.SwapPoints) { }
        public SwapPoints(Decimal val)
            : base(Tags.SwapPoints, val) { }

    }


    /// <summary>
    /// MDQuoteType Field
    /// </summary>/
    public sealed class MDQuoteType : IntField
    {
        public const int TAG = 1070;

        public MDQuoteType()
            : base(Tags.MDQuoteType) { }
        public MDQuoteType(int val)
            : base(Tags.MDQuoteType, val) { }


        // Field Enumerations
        public const int INDICATIVE = 0;
        public const int TRADEABLE = 1;
        public const int RESTRICTED_TRADEABLE = 2;
        public const int COUNTER = 3;
        public const int INDICATIVE_AND_TRADEABLE = 4;
    }


    /// <summary>
    /// LastSwapPoints Field
    /// </summary>/
    public sealed class LastSwapPoints : DecimalField
    {
        public const int TAG = 1071;

        public LastSwapPoints()
            : base(Tags.LastSwapPoints) { }
        public LastSwapPoints(Decimal val)
            : base(Tags.LastSwapPoints, val) { }

    }


    /// <summary>
    /// SideGrossTradeAmt Field
    /// </summary>/
    public sealed class SideGrossTradeAmt : DecimalField
    {
        public const int TAG = 1072;

        public SideGrossTradeAmt()
            : base(Tags.SideGrossTradeAmt) { }
        public SideGrossTradeAmt(Decimal val)
            : base(Tags.SideGrossTradeAmt, val) { }

    }


    /// <summary>
    /// LegLastForwardPoints Field
    /// </summary>/
    public sealed class LegLastForwardPoints : DecimalField
    {
        public const int TAG = 1073;

        public LegLastForwardPoints()
            : base(Tags.LegLastForwardPoints) { }
        public LegLastForwardPoints(Decimal val)
            : base(Tags.LegLastForwardPoints, val) { }

    }


    /// <summary>
    /// LegCalculatedCcyLastQty Field
    /// </summary>/
    public sealed class LegCalculatedCcyLastQty : DecimalField
    {
        public const int TAG = 1074;

        public LegCalculatedCcyLastQty()
            : base(Tags.LegCalculatedCcyLastQty) { }
        public LegCalculatedCcyLastQty(Decimal val)
            : base(Tags.LegCalculatedCcyLastQty, val) { }

    }


    /// <summary>
    /// LegGrossTradeAmt Field
    /// </summary>/
    public sealed class LegGrossTradeAmt : DecimalField
    {
        public const int TAG = 1075;

        public LegGrossTradeAmt()
            : base(Tags.LegGrossTradeAmt) { }
        public LegGrossTradeAmt(Decimal val)
            : base(Tags.LegGrossTradeAmt, val) { }

    }


    /// <summary>
    /// MaturityTime Field
    /// </summary>/
    public sealed class MaturityTime : StringField
    {
        public const int TAG = 1079;

        public MaturityTime()
            : base(Tags.MaturityTime) { }
        public MaturityTime(string val)
            : base(Tags.MaturityTime, val) { }

    }


    /// <summary>
    /// RefOrderID Field
    /// </summary>/
    public sealed class RefOrderID : StringField
    {
        public const int TAG = 1080;

        public RefOrderID()
            : base(Tags.RefOrderID) { }
        public RefOrderID(string val)
            : base(Tags.RefOrderID, val) { }

    }


    /// <summary>
    /// RefOrderIDSource Field
    /// </summary>/
    public sealed class RefOrderIDSource : CharField
    {
        public const int TAG = 1081;

        public RefOrderIDSource()
            : base(Tags.RefOrderIDSource) { }
        public RefOrderIDSource(char val)
            : base(Tags.RefOrderIDSource, val) { }


        // Field Enumerations
        public const char SECONDARY_ORDER_ID = '0';
        public const char ORDER_ID = '1';
        public const char MARKET_DATA_ENTRY_ID = '2';
        public const char QUOTE_ENTRY_ID = '3';
        public const char ORIGINAL_ORDER_ID = '4';
        public const char QUOTE_ID = '5';
        public const char QUOTE_REQUEST_ID = '6';
        public const char PREVIOUS_ORDER_IDENTIFIER = '7';
        public const char PREVIOUS_QUOTE_IDENTIFIER = '8';
        public const char PARENT_ORDER_IDENTIFIER = '9';
        public const char MANUAL_ORDER_IDENTIFIER = 'A';
        public const char SECONDARYORDERID = '0';
        public const char ORDERID = '1';
        public const char MDENTRYID = '2';
        public const char QUOTEENTRYID = '3';
        public const char SECONDARYORDEID = '0';
        public const char ORDEID = '1';
        public const char MENTRYID = '2';
        public const char QUOTENTRYID = '3';
    }


    /// <summary>
    /// SecondaryDisplayQty Field
    /// </summary>/
    public sealed class SecondaryDisplayQty : DecimalField
    {
        public const int TAG = 1082;

        public SecondaryDisplayQty()
            : base(Tags.SecondaryDisplayQty) { }
        public SecondaryDisplayQty(Decimal val)
            : base(Tags.SecondaryDisplayQty, val) { }

    }


    /// <summary>
    /// DisplayWhen Field
    /// </summary>/
    public sealed class DisplayWhen : CharField
    {
        public const int TAG = 1083;

        public DisplayWhen()
            : base(Tags.DisplayWhen) { }
        public DisplayWhen(char val)
            : base(Tags.DisplayWhen, val) { }


        // Field Enumerations
        public const char IMMEDIATE = '1';
        public const char EXHAUST = '2';
    }


    /// <summary>
    /// DisplayMethod Field
    /// </summary>/
    public sealed class DisplayMethod : CharField
    {
        public const int TAG = 1084;

        public DisplayMethod()
            : base(Tags.DisplayMethod) { }
        public DisplayMethod(char val)
            : base(Tags.DisplayMethod, val) { }


        // Field Enumerations
        public const char INITIAL = '1';
        public const char NEW = '2';
        public const char RANDOM = '3';
        public const char UNDISCLOSED = '4';
    }


    /// <summary>
    /// DisplayLowQty Field
    /// </summary>/
    public sealed class DisplayLowQty : DecimalField
    {
        public const int TAG = 1085;

        public DisplayLowQty()
            : base(Tags.DisplayLowQty) { }
        public DisplayLowQty(Decimal val)
            : base(Tags.DisplayLowQty, val) { }

    }


    /// <summary>
    /// DisplayHighQty Field
    /// </summary>/
    public sealed class DisplayHighQty : DecimalField
    {
        public const int TAG = 1086;

        public DisplayHighQty()
            : base(Tags.DisplayHighQty) { }
        public DisplayHighQty(Decimal val)
            : base(Tags.DisplayHighQty, val) { }

    }


    /// <summary>
    /// DisplayMinIncr Field
    /// </summary>/
    public sealed class DisplayMinIncr : DecimalField
    {
        public const int TAG = 1087;

        public DisplayMinIncr()
            : base(Tags.DisplayMinIncr) { }
        public DisplayMinIncr(Decimal val)
            : base(Tags.DisplayMinIncr, val) { }

    }


    /// <summary>
    /// RefreshQty Field
    /// </summary>/
    public sealed class RefreshQty : DecimalField
    {
        public const int TAG = 1088;

        public RefreshQty()
            : base(Tags.RefreshQty) { }
        public RefreshQty(Decimal val)
            : base(Tags.RefreshQty, val) { }

    }


    /// <summary>
    /// MatchIncrement Field
    /// </summary>/
    public sealed class MatchIncrement : DecimalField
    {
        public const int TAG = 1089;

        public MatchIncrement()
            : base(Tags.MatchIncrement) { }
        public MatchIncrement(Decimal val)
            : base(Tags.MatchIncrement, val) { }

    }


    /// <summary>
    /// MaxPriceLevels Field
    /// </summary>/
    public sealed class MaxPriceLevels : IntField
    {
        public const int TAG = 1090;

        public MaxPriceLevels()
            : base(Tags.MaxPriceLevels) { }
        public MaxPriceLevels(int val)
            : base(Tags.MaxPriceLevels, val) { }

    }


    /// <summary>
    /// PreTradeAnonymity Field
    /// </summary>/
    public sealed class PreTradeAnonymity : BooleanField
    {
        public const int TAG = 1091;

        public PreTradeAnonymity()
            : base(Tags.PreTradeAnonymity) { }
        public PreTradeAnonymity(Boolean val)
            : base(Tags.PreTradeAnonymity, val) { }

    }


    /// <summary>
    /// PriceProtectionScope Field
    /// </summary>/
    public sealed class PriceProtectionScope : CharField
    {
        public const int TAG = 1092;

        public PriceProtectionScope()
            : base(Tags.PriceProtectionScope) { }
        public PriceProtectionScope(char val)
            : base(Tags.PriceProtectionScope, val) { }


        // Field Enumerations
        public const char NONE = '0';
        public const char LOCAL = '1';
        public const char NATIONAL = '2';
        public const char GLOBAL = '3';
    }


    /// <summary>
    /// LotType Field
    /// </summary>/
    public sealed class LotType : CharField
    {
        public const int TAG = 1093;

        public LotType()
            : base(Tags.LotType) { }
        public LotType(char val)
            : base(Tags.LotType, val) { }


        // Field Enumerations
        public const char ODD_LOT = '1';
        public const char ROUND_LOT = '2';
        public const char BLOCK_LOT = '3';
        public const char ROUND_LOT_BASED_UPON_UNITOFMEASURE = '4';
    }


    /// <summary>
    /// PegPriceType Field
    /// </summary>/
    public sealed class PegPriceType : IntField
    {
        public const int TAG = 1094;

        public PegPriceType()
            : base(Tags.PegPriceType) { }
        public PegPriceType(int val)
            : base(Tags.PegPriceType, val) { }


        // Field Enumerations
        public const int LAST_PEG = 1;
        public const int MID_PRICE_PEG = 2;
        public const int OPENING_PEG = 3;
        public const int MARKET_PEG = 4;
        public const int PRIMARY_PEG = 5;
        public const int PEG_TO_VWAP = 7;
        public const int TRAILING_STOP_PEG = 8;
        public const int PEG_TO_LIMIT_PRICE = 9;
        public const int SHORT_SALE_MINIMUM_PRICE_PEG = 10;
        public const int FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = 6;
    }


    /// <summary>
    /// PeggedRefPrice Field
    /// </summary>/
    public sealed class PeggedRefPrice : DecimalField
    {
        public const int TAG = 1095;

        public PeggedRefPrice()
            : base(Tags.PeggedRefPrice) { }
        public PeggedRefPrice(Decimal val)
            : base(Tags.PeggedRefPrice, val) { }

    }


    /// <summary>
    /// PegSecurityIDSource Field
    /// </summary>/
    public sealed class PegSecurityIDSource : StringField
    {
        public const int TAG = 1096;

        public PegSecurityIDSource()
            : base(Tags.PegSecurityIDSource) { }
        public PegSecurityIDSource(string val)
            : base(Tags.PegSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// PegSecurityID Field
    /// </summary>/
    public sealed class PegSecurityID : StringField
    {
        public const int TAG = 1097;

        public PegSecurityID()
            : base(Tags.PegSecurityID) { }
        public PegSecurityID(string val)
            : base(Tags.PegSecurityID, val) { }

    }


    /// <summary>
    /// PegSymbol Field
    /// </summary>/
    public sealed class PegSymbol : StringField
    {
        public const int TAG = 1098;

        public PegSymbol()
            : base(Tags.PegSymbol) { }
        public PegSymbol(string val)
            : base(Tags.PegSymbol, val) { }

    }


    /// <summary>
    /// PegSecurityDesc Field
    /// </summary>/
    public sealed class PegSecurityDesc : StringField
    {
        public const int TAG = 1099;

        public PegSecurityDesc()
            : base(Tags.PegSecurityDesc) { }
        public PegSecurityDesc(string val)
            : base(Tags.PegSecurityDesc, val) { }

    }


    /// <summary>
    /// TriggerType Field
    /// </summary>/
    public sealed class TriggerType : CharField
    {
        public const int TAG = 1100;

        public TriggerType()
            : base(Tags.TriggerType) { }
        public TriggerType(char val)
            : base(Tags.TriggerType, val) { }


        // Field Enumerations
        public const char PARTIAL_EXECUTION = '1';
        public const char SPECIFIED_TRADING_SESSION = '2';
        public const char NEXT_AUCTION = '3';
        public const char PRICE_MOVEMENT = '4';
        public const char ON_ORDER_ENTRY_OR_ORDER_MODIFICATION_ENTRY = '5';
    }


    /// <summary>
    /// TriggerAction Field
    /// </summary>/
    public sealed class TriggerAction : CharField
    {
        public const int TAG = 1101;

        public TriggerAction()
            : base(Tags.TriggerAction) { }
        public TriggerAction(char val)
            : base(Tags.TriggerAction, val) { }


        // Field Enumerations
        public const char ACTIVATE = '1';
        public const char MODIFY = '2';
        public const char CANCEL = '3';
    }


    /// <summary>
    /// TriggerPrice Field
    /// </summary>/
    public sealed class TriggerPrice : DecimalField
    {
        public const int TAG = 1102;

        public TriggerPrice()
            : base(Tags.TriggerPrice) { }
        public TriggerPrice(Decimal val)
            : base(Tags.TriggerPrice, val) { }

    }


    /// <summary>
    /// TriggerSymbol Field
    /// </summary>/
    public sealed class TriggerSymbol : StringField
    {
        public const int TAG = 1103;

        public TriggerSymbol()
            : base(Tags.TriggerSymbol) { }
        public TriggerSymbol(string val)
            : base(Tags.TriggerSymbol, val) { }

    }


    /// <summary>
    /// TriggerSecurityID Field
    /// </summary>/
    public sealed class TriggerSecurityID : StringField
    {
        public const int TAG = 1104;

        public TriggerSecurityID()
            : base(Tags.TriggerSecurityID) { }
        public TriggerSecurityID(string val)
            : base(Tags.TriggerSecurityID, val) { }

    }


    /// <summary>
    /// TriggerSecurityIDSource Field
    /// </summary>/
    public sealed class TriggerSecurityIDSource : StringField
    {
        public const int TAG = 1105;

        public TriggerSecurityIDSource()
            : base(Tags.TriggerSecurityIDSource) { }
        public TriggerSecurityIDSource(string val)
            : base(Tags.TriggerSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// TriggerSecurityDesc Field
    /// </summary>/
    public sealed class TriggerSecurityDesc : StringField
    {
        public const int TAG = 1106;

        public TriggerSecurityDesc()
            : base(Tags.TriggerSecurityDesc) { }
        public TriggerSecurityDesc(string val)
            : base(Tags.TriggerSecurityDesc, val) { }

    }


    /// <summary>
    /// TriggerPriceType Field
    /// </summary>/
    public sealed class TriggerPriceType : CharField
    {
        public const int TAG = 1107;

        public TriggerPriceType()
            : base(Tags.TriggerPriceType) { }
        public TriggerPriceType(char val)
            : base(Tags.TriggerPriceType, val) { }


        // Field Enumerations
        public const char BEST_OFFER = '1';
        public const char LAST_TRADE = '2';
        public const char BEST_BID = '3';
        public const char BEST_BID_OR_LAST_TRADE = '4';
        public const char BEST_OFFER_OR_LAST_TRADE = '5';
        public const char BEST_MID = '6';
    }


    /// <summary>
    /// TriggerPriceTypeScope Field
    /// </summary>/
    public sealed class TriggerPriceTypeScope : CharField
    {
        public const int TAG = 1108;

        public TriggerPriceTypeScope()
            : base(Tags.TriggerPriceTypeScope) { }
        public TriggerPriceTypeScope(char val)
            : base(Tags.TriggerPriceTypeScope, val) { }


        // Field Enumerations
        public const char NONE = '0';
        public const char LOCAL = '1';
        public const char NATIONAL = '2';
        public const char GLOBAL = '3';
    }


    /// <summary>
    /// TriggerPriceDirection Field
    /// </summary>/
    public sealed class TriggerPriceDirection : CharField
    {
        public const int TAG = 1109;

        public TriggerPriceDirection()
            : base(Tags.TriggerPriceDirection) { }
        public TriggerPriceDirection(char val)
            : base(Tags.TriggerPriceDirection, val) { }


        // Field Enumerations
        public const char TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE = 'U';
        public const char TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE = 'D';
    }


    /// <summary>
    /// TriggerNewPrice Field
    /// </summary>/
    public sealed class TriggerNewPrice : DecimalField
    {
        public const int TAG = 1110;

        public TriggerNewPrice()
            : base(Tags.TriggerNewPrice) { }
        public TriggerNewPrice(Decimal val)
            : base(Tags.TriggerNewPrice, val) { }

    }


    /// <summary>
    /// TriggerOrderType Field
    /// </summary>/
    public sealed class TriggerOrderType : CharField
    {
        public const int TAG = 1111;

        public TriggerOrderType()
            : base(Tags.TriggerOrderType) { }
        public TriggerOrderType(char val)
            : base(Tags.TriggerOrderType, val) { }


        // Field Enumerations
        public const char MARKET = '1';
        public const char LIMIT = '2';
    }


    /// <summary>
    /// TriggerNewQty Field
    /// </summary>/
    public sealed class TriggerNewQty : DecimalField
    {
        public const int TAG = 1112;

        public TriggerNewQty()
            : base(Tags.TriggerNewQty) { }
        public TriggerNewQty(Decimal val)
            : base(Tags.TriggerNewQty, val) { }

    }


    /// <summary>
    /// TriggerTradingSessionID Field
    /// </summary>/
    public sealed class TriggerTradingSessionID : StringField
    {
        public const int TAG = 1113;

        public TriggerTradingSessionID()
            : base(Tags.TriggerTradingSessionID) { }
        public TriggerTradingSessionID(string val)
            : base(Tags.TriggerTradingSessionID, val) { }

    }


    /// <summary>
    /// TriggerTradingSessionSubID Field
    /// </summary>/
    public sealed class TriggerTradingSessionSubID : StringField
    {
        public const int TAG = 1114;

        public TriggerTradingSessionSubID()
            : base(Tags.TriggerTradingSessionSubID) { }
        public TriggerTradingSessionSubID(string val)
            : base(Tags.TriggerTradingSessionSubID, val) { }

    }


    /// <summary>
    /// OrderCategory Field
    /// </summary>/
    public sealed class OrderCategory : CharField
    {
        public const int TAG = 1115;

        public OrderCategory()
            : base(Tags.OrderCategory) { }
        public OrderCategory(char val)
            : base(Tags.OrderCategory, val) { }


        // Field Enumerations
        public const char ORDER = '1';
        public const char QUOTE = '2';
        public const char PRIVATELY_NEGOTIATED_TRADE = '3';
        public const char MULTILEG_ORDER = '4';
        public const char LINKED_ORDER = '5';
        public const char QUOTE_REQUEST = '6';
        public const char IMPLIED_ORDER = '7';
        public const char CROSS_ORDER = '8';
        public const char STREAMING_PRICE = '9';
        public const char INTERNAL_CROSS_ORDER = 'A';
    }


    /// <summary>
    /// NoRootPartyIDs Field
    /// </summary>/
    public sealed class NoRootPartyIDs : IntField
    {
        public const int TAG = 1116;

        public NoRootPartyIDs()
            : base(Tags.NoRootPartyIDs) { }
        public NoRootPartyIDs(int val)
            : base(Tags.NoRootPartyIDs, val) { }

    }


    /// <summary>
    /// RootPartyID Field
    /// </summary>/
    public sealed class RootPartyID : StringField
    {
        public const int TAG = 1117;

        public RootPartyID()
            : base(Tags.RootPartyID) { }
        public RootPartyID(string val)
            : base(Tags.RootPartyID, val) { }

    }


    /// <summary>
    /// RootPartyIDSource Field
    /// </summary>/
    public sealed class RootPartyIDSource : CharField
    {
        public const int TAG = 1118;

        public RootPartyIDSource()
            : base(Tags.RootPartyIDSource) { }
        public RootPartyIDSource(char val)
            : base(Tags.RootPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// RootPartyRole Field
    /// </summary>/
    public sealed class RootPartyRole : IntField
    {
        public const int TAG = 1119;

        public RootPartyRole()
            : base(Tags.RootPartyRole) { }
        public RootPartyRole(int val)
            : base(Tags.RootPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoRootPartySubIDs Field
    /// </summary>/
    public sealed class NoRootPartySubIDs : IntField
    {
        public const int TAG = 1120;

        public NoRootPartySubIDs()
            : base(Tags.NoRootPartySubIDs) { }
        public NoRootPartySubIDs(int val)
            : base(Tags.NoRootPartySubIDs, val) { }

    }


    /// <summary>
    /// RootPartySubID Field
    /// </summary>/
    public sealed class RootPartySubID : StringField
    {
        public const int TAG = 1121;

        public RootPartySubID()
            : base(Tags.RootPartySubID) { }
        public RootPartySubID(string val)
            : base(Tags.RootPartySubID, val) { }

    }


    /// <summary>
    /// RootPartySubIDType Field
    /// </summary>/
    public sealed class RootPartySubIDType : IntField
    {
        public const int TAG = 1122;

        public RootPartySubIDType()
            : base(Tags.RootPartySubIDType) { }
        public RootPartySubIDType(int val)
            : base(Tags.RootPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// TradeHandlingInstr Field
    /// </summary>/
    public sealed class TradeHandlingInstr : CharField
    {
        public const int TAG = 1123;

        public TradeHandlingInstr()
            : base(Tags.TradeHandlingInstr) { }
        public TradeHandlingInstr(char val)
            : base(Tags.TradeHandlingInstr, val) { }


        // Field Enumerations
        public const char TRADE_CONFIRMATION = '0';
        public const char TWO_PARTY_REPORT = '1';
        public const char ONE_PARTY_REPORT_FOR_MATCHING = '2';
        public const char ONE_PARTY_REPORT_FOR_PASS_THROUGH = '3';
        public const char AUTOMATED_FLOOR_ORDER_ROUTING = '4';
        public const char TWO_PARTY_REPORT_FOR_CLAIM = '5';
        public const char ONE_PARTY_REPORT = '6';
        public const char THIRD_PARTY_REPORT_FOR_PASS_THROUGH = '7';
        public const char ONE_PARTY_REPORT_FOR_AUTO_MATCH = '8';
    }


    /// <summary>
    /// OrigTradeHandlingInstr Field
    /// </summary>/
    public sealed class OrigTradeHandlingInstr : CharField
    {
        public const int TAG = 1124;

        public OrigTradeHandlingInstr()
            : base(Tags.OrigTradeHandlingInstr) { }
        public OrigTradeHandlingInstr(char val)
            : base(Tags.OrigTradeHandlingInstr, val) { }


        // Field Enumerations
        public const char TRADE_CONFIRMATION = '0';
        public const char TWO_PARTY_REPORT = '1';
        public const char ONE_PARTY_REPORT_FOR_MATCHING = '2';
        public const char ONE_PARTY_REPORT_FOR_PASS_THROUGH = '3';
        public const char AUTOMATED_FLOOR_ORDER_ROUTING = '4';
        public const char TWO_PARTY_REPORT_FOR_CLAIM = '5';
        public const char ONE_PARTY_REPORT = '6';
        public const char THIRD_PARTY_REPORT_FOR_PASS_THROUGH = '7';
        public const char ONE_PARTY_REPORT_FOR_AUTO_MATCH = '8';
    }


    /// <summary>
    /// OrigTradeDate Field
    /// </summary>/
    public sealed class OrigTradeDate : StringField
    {
        public const int TAG = 1125;

        public OrigTradeDate()
            : base(Tags.OrigTradeDate) { }
        public OrigTradeDate(string val)
            : base(Tags.OrigTradeDate, val) { }

    }


    /// <summary>
    /// OrigTradeID Field
    /// </summary>/
    public sealed class OrigTradeID : StringField
    {
        public const int TAG = 1126;

        public OrigTradeID()
            : base(Tags.OrigTradeID) { }
        public OrigTradeID(string val)
            : base(Tags.OrigTradeID, val) { }

    }


    /// <summary>
    /// OrigSecondaryTradeID Field
    /// </summary>/
    public sealed class OrigSecondaryTradeID : StringField
    {
        public const int TAG = 1127;

        public OrigSecondaryTradeID()
            : base(Tags.OrigSecondaryTradeID) { }
        public OrigSecondaryTradeID(string val)
            : base(Tags.OrigSecondaryTradeID, val) { }

    }


    /// <summary>
    /// ApplVerID Field
    /// </summary>/
    public sealed class ApplVerID : StringField
    {
        public const int TAG = 1128;

        public ApplVerID()
            : base(Tags.ApplVerID) { }
        public ApplVerID(string val)
            : base(Tags.ApplVerID, val) { }


        // Field Enumerations
        public const string FIX27 = "0";
        public const string FIX30 = "1";
        public const string FIX40 = "2";
        public const string FIX41 = "3";
        public const string FIX42 = "4";
        public const string FIX43 = "5";
        public const string FIX44 = "6";
        public const string FIX50 = "7";
        public const string FIX50SP1 = "8";
        public const string FIX50SP2 = "9";
        public const string FIXLATEST = "10";
    }


    /// <summary>
    /// CstmApplVerID Field
    /// </summary>/
    public sealed class CstmApplVerID : StringField
    {
        public const int TAG = 1129;

        public CstmApplVerID()
            : base(Tags.CstmApplVerID) { }
        public CstmApplVerID(string val)
            : base(Tags.CstmApplVerID, val) { }

    }


    /// <summary>
    /// RefApplVerID Field
    /// </summary>/
    public sealed class RefApplVerID : StringField
    {
        public const int TAG = 1130;

        public RefApplVerID()
            : base(Tags.RefApplVerID) { }
        public RefApplVerID(string val)
            : base(Tags.RefApplVerID, val) { }


        // Field Enumerations
        public const string FIX27 = "0";
        public const string FIX30 = "1";
        public const string FIX40 = "2";
        public const string FIX41 = "3";
        public const string FIX42 = "4";
        public const string FIX43 = "5";
        public const string FIX44 = "6";
        public const string FIX50 = "7";
        public const string FIX50SP1 = "8";
        public const string FIX50SP2 = "9";
        public const string FIXLATEST = "10";
    }


    /// <summary>
    /// RefCstmApplVerID Field
    /// </summary>/
    public sealed class RefCstmApplVerID : StringField
    {
        public const int TAG = 1131;

        public RefCstmApplVerID()
            : base(Tags.RefCstmApplVerID) { }
        public RefCstmApplVerID(string val)
            : base(Tags.RefCstmApplVerID, val) { }

    }


    /// <summary>
    /// TZTransactTime Field
    /// </summary>/
    public sealed class TZTransactTime : DateTimeField
    {
        public const int TAG = 1132;

        public TZTransactTime()
            : base(Tags.TZTransactTime) { }
        public TZTransactTime(DateTime val)
            : base(Tags.TZTransactTime, val) { }
        public TZTransactTime(DateTime val, bool showMilliseconds)
            : base(Tags.TZTransactTime, val, showMilliseconds) { }
        public TZTransactTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TZTransactTime, val, precision) { }

    }


    /// <summary>
    /// ExDestinationIDSource Field
    /// </summary>/
    public sealed class ExDestinationIDSource : CharField
    {
        public const int TAG = 1133;

        public ExDestinationIDSource()
            : base(Tags.ExDestinationIDSource) { }
        public ExDestinationIDSource(char val)
            : base(Tags.ExDestinationIDSource, val) { }


        // Field Enumerations
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char MIC = 'G';
    }


    /// <summary>
    /// ReportedPxDiff Field
    /// </summary>/
    public sealed class ReportedPxDiff : BooleanField
    {
        public const int TAG = 1134;

        public ReportedPxDiff()
            : base(Tags.ReportedPxDiff) { }
        public ReportedPxDiff(Boolean val)
            : base(Tags.ReportedPxDiff, val) { }

    }


    /// <summary>
    /// RptSys Field
    /// </summary>/
    public sealed class RptSys : StringField
    {
        public const int TAG = 1135;

        public RptSys()
            : base(Tags.RptSys) { }
        public RptSys(string val)
            : base(Tags.RptSys, val) { }

    }


    /// <summary>
    /// AllocClearingFeeIndicator Field
    /// </summary>/
    public sealed class AllocClearingFeeIndicator : StringField
    {
        public const int TAG = 1136;

        public AllocClearingFeeIndicator()
            : base(Tags.AllocClearingFeeIndicator) { }
        public AllocClearingFeeIndicator(string val)
            : base(Tags.AllocClearingFeeIndicator, val) { }

    }


    /// <summary>
    /// DefaultApplVerID Field
    /// </summary>/
    public sealed class DefaultApplVerID : StringField
    {
        public const int TAG = 1137;

        public DefaultApplVerID()
            : base(Tags.DefaultApplVerID) { }
        public DefaultApplVerID(string val)
            : base(Tags.DefaultApplVerID, val) { }


        // Field Enumerations
        public const string FIX27 = "0";
        public const string FIX30 = "1";
        public const string FIX40 = "2";
        public const string FIX41 = "3";
        public const string FIX42 = "4";
        public const string FIX43 = "5";
        public const string FIX44 = "6";
        public const string FIX50 = "7";
        public const string FIX50SP1 = "8";
        public const string FIX50SP2 = "9";
        public const string FIXLATEST = "10";
    }


    /// <summary>
    /// DisplayQty Field
    /// </summary>/
    public sealed class DisplayQty : DecimalField
    {
        public const int TAG = 1138;

        public DisplayQty()
            : base(Tags.DisplayQty) { }
        public DisplayQty(Decimal val)
            : base(Tags.DisplayQty, val) { }

    }


    /// <summary>
    /// ExchangeSpecialInstructions Field
    /// </summary>/
    public sealed class ExchangeSpecialInstructions : StringField
    {
        public const int TAG = 1139;

        public ExchangeSpecialInstructions()
            : base(Tags.ExchangeSpecialInstructions) { }
        public ExchangeSpecialInstructions(string val)
            : base(Tags.ExchangeSpecialInstructions, val) { }

    }


    /// <summary>
    /// SecurityStatus Field
    /// </summary>/
    public sealed class SecurityStatus : StringField
    {
        public const int TAG = 965;

        public SecurityStatus()
            : base(Tags.SecurityStatus) { }
        public SecurityStatus(string val)
            : base(Tags.SecurityStatus, val) { }


        // Field Enumerations
        public const string ACTIVE = "1";
        public const string INACTIVE = "2";
        public const string ACTIVE_CLOSING_ORDERS_ONLY = "3";
        public const string EXPIRED = "4";
        public const string DELISTED = "5";
        public const string KNOCKED_OUT = "6";
        public const string KNOCK_OUT_REVOKED = "7";
        public const string PENDING_EXPIRY = "8";
        public const string SUSPENDED = "9";
        public const string PUBLISHED = "10";
        public const string PENDING_DELETION = "11";
    }


    /// <summary>
    /// ExpirationQtyType Field
    /// </summary>/
    public sealed class ExpirationQtyType : IntField
    {
        public const int TAG = 982;

        public ExpirationQtyType()
            : base(Tags.ExpirationQtyType) { }
        public ExpirationQtyType(int val)
            : base(Tags.ExpirationQtyType, val) { }


        // Field Enumerations
        public const int AUTO_EXERCISE = 1;
        public const int NON_AUTO_EXERCISE = 2;
        public const int FINAL_WILL_BE_EXERCISED = 3;
        public const int CONTRARY_INTENTION = 4;
        public const int DIFFERENCE = 5;
    }


    /// <summary>
    /// MaxTradeVol Field
    /// </summary>/
    public sealed class MaxTradeVol : DecimalField
    {
        public const int TAG = 1140;

        public MaxTradeVol()
            : base(Tags.MaxTradeVol) { }
        public MaxTradeVol(Decimal val)
            : base(Tags.MaxTradeVol, val) { }

    }


    /// <summary>
    /// NoMDFeedTypes Field
    /// </summary>/
    public sealed class NoMDFeedTypes : IntField
    {
        public const int TAG = 1141;

        public NoMDFeedTypes()
            : base(Tags.NoMDFeedTypes) { }
        public NoMDFeedTypes(int val)
            : base(Tags.NoMDFeedTypes, val) { }

    }


    /// <summary>
    /// MatchAlgorithm Field
    /// </summary>/
    public sealed class MatchAlgorithm : StringField
    {
        public const int TAG = 1142;

        public MatchAlgorithm()
            : base(Tags.MatchAlgorithm) { }
        public MatchAlgorithm(string val)
            : base(Tags.MatchAlgorithm, val) { }

    }


    /// <summary>
    /// MaxPriceVariation Field
    /// </summary>/
    public sealed class MaxPriceVariation : DecimalField
    {
        public const int TAG = 1143;

        public MaxPriceVariation()
            : base(Tags.MaxPriceVariation) { }
        public MaxPriceVariation(Decimal val)
            : base(Tags.MaxPriceVariation, val) { }

    }


    /// <summary>
    /// ImpliedMarketIndicator Field
    /// </summary>/
    public sealed class ImpliedMarketIndicator : IntField
    {
        public const int TAG = 1144;

        public ImpliedMarketIndicator()
            : base(Tags.ImpliedMarketIndicator) { }
        public ImpliedMarketIndicator(int val)
            : base(Tags.ImpliedMarketIndicator, val) { }


        // Field Enumerations
        public const int NOT_IMPLIED = 0;
        public const int IMPLIED_IN = 1;
        public const int IMPLIED_OUT = 2;
        public const int BOTH_IMPLIED_IN_AND_IMPLIED_OUT = 3;
    }


    /// <summary>
    /// EventTime Field
    /// </summary>/
    public sealed class EventTime : DateTimeField
    {
        public const int TAG = 1145;

        public EventTime()
            : base(Tags.EventTime) { }
        public EventTime(DateTime val)
            : base(Tags.EventTime, val) { }
        public EventTime(DateTime val, bool showMilliseconds)
            : base(Tags.EventTime, val, showMilliseconds) { }
        public EventTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.EventTime, val, precision) { }

    }


    /// <summary>
    /// MinPriceIncrementAmount Field
    /// </summary>/
    public sealed class MinPriceIncrementAmount : DecimalField
    {
        public const int TAG = 1146;

        public MinPriceIncrementAmount()
            : base(Tags.MinPriceIncrementAmount) { }
        public MinPriceIncrementAmount(Decimal val)
            : base(Tags.MinPriceIncrementAmount, val) { }

    }


    /// <summary>
    /// UnitOfMeasureQty Field
    /// </summary>/
    public sealed class UnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1147;

        public UnitOfMeasureQty()
            : base(Tags.UnitOfMeasureQty) { }
        public UnitOfMeasureQty(Decimal val)
            : base(Tags.UnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// LowLimitPrice Field
    /// </summary>/
    public sealed class LowLimitPrice : DecimalField
    {
        public const int TAG = 1148;

        public LowLimitPrice()
            : base(Tags.LowLimitPrice) { }
        public LowLimitPrice(Decimal val)
            : base(Tags.LowLimitPrice, val) { }

    }


    /// <summary>
    /// HighLimitPrice Field
    /// </summary>/
    public sealed class HighLimitPrice : DecimalField
    {
        public const int TAG = 1149;

        public HighLimitPrice()
            : base(Tags.HighLimitPrice) { }
        public HighLimitPrice(Decimal val)
            : base(Tags.HighLimitPrice, val) { }

    }


    /// <summary>
    /// TradingReferencePrice Field
    /// </summary>/
    public sealed class TradingReferencePrice : DecimalField
    {
        public const int TAG = 1150;

        public TradingReferencePrice()
            : base(Tags.TradingReferencePrice) { }
        public TradingReferencePrice(Decimal val)
            : base(Tags.TradingReferencePrice, val) { }

    }


    /// <summary>
    /// SecurityGroup Field
    /// </summary>/
    public sealed class SecurityGroup : StringField
    {
        public const int TAG = 1151;

        public SecurityGroup()
            : base(Tags.SecurityGroup) { }
        public SecurityGroup(string val)
            : base(Tags.SecurityGroup, val) { }

    }


    /// <summary>
    /// LegNumber Field
    /// </summary>/
    public sealed class LegNumber : IntField
    {
        public const int TAG = 1152;

        public LegNumber()
            : base(Tags.LegNumber) { }
        public LegNumber(int val)
            : base(Tags.LegNumber, val) { }

    }


    /// <summary>
    /// SettlementCycleNo Field
    /// </summary>/
    public sealed class SettlementCycleNo : IntField
    {
        public const int TAG = 1153;

        public SettlementCycleNo()
            : base(Tags.SettlementCycleNo) { }
        public SettlementCycleNo(int val)
            : base(Tags.SettlementCycleNo, val) { }

    }


    /// <summary>
    /// SideCurrency Field
    /// </summary>/
    public sealed class SideCurrency : StringField
    {
        public const int TAG = 1154;

        public SideCurrency()
            : base(Tags.SideCurrency) { }
        public SideCurrency(string val)
            : base(Tags.SideCurrency, val) { }

    }


    /// <summary>
    /// SideSettlCurrency Field
    /// </summary>/
    public sealed class SideSettlCurrency : StringField
    {
        public const int TAG = 1155;

        public SideSettlCurrency()
            : base(Tags.SideSettlCurrency) { }
        public SideSettlCurrency(string val)
            : base(Tags.SideSettlCurrency, val) { }

    }


    /// <summary>
    /// ApplExtID Field
    /// </summary>/
    public sealed class ApplExtID : IntField
    {
        public const int TAG = 1156;

        public ApplExtID()
            : base(Tags.ApplExtID) { }
        public ApplExtID(int val)
            : base(Tags.ApplExtID, val) { }

    }


    /// <summary>
    /// CcyAmt Field
    /// </summary>/
    public sealed class CcyAmt : DecimalField
    {
        public const int TAG = 1157;

        public CcyAmt()
            : base(Tags.CcyAmt) { }
        public CcyAmt(Decimal val)
            : base(Tags.CcyAmt, val) { }

    }


    /// <summary>
    /// NoSettlDetails Field
    /// </summary>/
    public sealed class NoSettlDetails : IntField
    {
        public const int TAG = 1158;

        public NoSettlDetails()
            : base(Tags.NoSettlDetails) { }
        public NoSettlDetails(int val)
            : base(Tags.NoSettlDetails, val) { }

    }


    /// <summary>
    /// SettlObligMode Field
    /// </summary>/
    public sealed class SettlObligMode : IntField
    {
        public const int TAG = 1159;

        public SettlObligMode()
            : base(Tags.SettlObligMode) { }
        public SettlObligMode(int val)
            : base(Tags.SettlObligMode, val) { }


        // Field Enumerations
        public const int PRELIMINARY = 1;
        public const int FINAL = 2;
    }


    /// <summary>
    /// SettlObligMsgID Field
    /// </summary>/
    public sealed class SettlObligMsgID : StringField
    {
        public const int TAG = 1160;

        public SettlObligMsgID()
            : base(Tags.SettlObligMsgID) { }
        public SettlObligMsgID(string val)
            : base(Tags.SettlObligMsgID, val) { }

    }


    /// <summary>
    /// SettlObligID Field
    /// </summary>/
    public sealed class SettlObligID : StringField
    {
        public const int TAG = 1161;

        public SettlObligID()
            : base(Tags.SettlObligID) { }
        public SettlObligID(string val)
            : base(Tags.SettlObligID, val) { }

    }


    /// <summary>
    /// SettlObligTransType Field
    /// </summary>/
    public sealed class SettlObligTransType : CharField
    {
        public const int TAG = 1162;

        public SettlObligTransType()
            : base(Tags.SettlObligTransType) { }
        public SettlObligTransType(char val)
            : base(Tags.SettlObligTransType, val) { }


        // Field Enumerations
        public const char CANCEL = 'C';
        public const char NEW = 'N';
        public const char REPLACE = 'R';
        public const char RESTATE = 'T';
    }


    /// <summary>
    /// SettlObligRefID Field
    /// </summary>/
    public sealed class SettlObligRefID : StringField
    {
        public const int TAG = 1163;

        public SettlObligRefID()
            : base(Tags.SettlObligRefID) { }
        public SettlObligRefID(string val)
            : base(Tags.SettlObligRefID, val) { }

    }


    /// <summary>
    /// SettlObligSource Field
    /// </summary>/
    public sealed class SettlObligSource : CharField
    {
        public const int TAG = 1164;

        public SettlObligSource()
            : base(Tags.SettlObligSource) { }
        public SettlObligSource(char val)
            : base(Tags.SettlObligSource, val) { }


        // Field Enumerations
        public const char INSTRUCTIONS_OF_BROKER = '1';
        public const char INSTRUCTIONS_FOR_INSTITUTION = '2';
        public const char INVESTOR = '3';
        public const char BUYERS_SETTLEMENT_INSTRUCTIONS = '4';
        public const char SELLERS_SETTLEMENT_INSTRUCTIONS = '5';
    }


    /// <summary>
    /// NoSettlOblig Field
    /// </summary>/
    public sealed class NoSettlOblig : IntField
    {
        public const int TAG = 1165;

        public NoSettlOblig()
            : base(Tags.NoSettlOblig) { }
        public NoSettlOblig(int val)
            : base(Tags.NoSettlOblig, val) { }

    }


    /// <summary>
    /// QuoteMsgID Field
    /// </summary>/
    public sealed class QuoteMsgID : StringField
    {
        public const int TAG = 1166;

        public QuoteMsgID()
            : base(Tags.QuoteMsgID) { }
        public QuoteMsgID(string val)
            : base(Tags.QuoteMsgID, val) { }

    }


    /// <summary>
    /// QuoteEntryStatus Field
    /// </summary>/
    public sealed class QuoteEntryStatus : IntField
    {
        public const int TAG = 1167;

        public QuoteEntryStatus()
            : base(Tags.QuoteEntryStatus) { }
        public QuoteEntryStatus(int val)
            : base(Tags.QuoteEntryStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 5;
        public const int REMOVED_FROM_MARKET = 6;
        public const int EXPIRED = 7;
        public const int LOCKED_MARKET_WARNING = 12;
        public const int CROSS_MARKET_WARNING = 13;
        public const int CANCELED_DUE_TO_LOCK_MARKET = 14;
        public const int CANCELED_DUE_TO_CROSS_MARKET = 15;
        public const int ACTIVE = 16;
    }


    /// <summary>
    /// TotNoCxldQuotes Field
    /// </summary>/
    public sealed class TotNoCxldQuotes : IntField
    {
        public const int TAG = 1168;

        public TotNoCxldQuotes()
            : base(Tags.TotNoCxldQuotes) { }
        public TotNoCxldQuotes(int val)
            : base(Tags.TotNoCxldQuotes, val) { }

    }


    /// <summary>
    /// TotNoAccQuotes Field
    /// </summary>/
    public sealed class TotNoAccQuotes : IntField
    {
        public const int TAG = 1169;

        public TotNoAccQuotes()
            : base(Tags.TotNoAccQuotes) { }
        public TotNoAccQuotes(int val)
            : base(Tags.TotNoAccQuotes, val) { }

    }


    /// <summary>
    /// TotNoRejQuotes Field
    /// </summary>/
    public sealed class TotNoRejQuotes : IntField
    {
        public const int TAG = 1170;

        public TotNoRejQuotes()
            : base(Tags.TotNoRejQuotes) { }
        public TotNoRejQuotes(int val)
            : base(Tags.TotNoRejQuotes, val) { }

    }


    /// <summary>
    /// PrivateQuote Field
    /// </summary>/
    public sealed class PrivateQuote : BooleanField
    {
        public const int TAG = 1171;

        public PrivateQuote()
            : base(Tags.PrivateQuote) { }
        public PrivateQuote(Boolean val)
            : base(Tags.PrivateQuote, val) { }


        // Field Enumerations
        public const Boolean YES = true;
        public const Boolean NO = false;
    }


    /// <summary>
    /// RespondentType Field
    /// </summary>/
    public sealed class RespondentType : IntField
    {
        public const int TAG = 1172;

        public RespondentType()
            : base(Tags.RespondentType) { }
        public RespondentType(int val)
            : base(Tags.RespondentType, val) { }


        // Field Enumerations
        public const int ALL_MARKET_PARTICIPANTS = 1;
        public const int SPECIFIED_MARKET_PARTICIPANTS = 2;
        public const int ALL_MARKET_MAKERS = 3;
        public const int PRIMARY_MARKET_MAKER = 4;
    }


    /// <summary>
    /// MDSubBookType Field
    /// </summary>/
    public sealed class MDSubBookType : IntField
    {
        public const int TAG = 1173;

        public MDSubBookType()
            : base(Tags.MDSubBookType) { }
        public MDSubBookType(int val)
            : base(Tags.MDSubBookType, val) { }

    }


    /// <summary>
    /// SecurityTradingEvent Field
    /// </summary>/
    public sealed class SecurityTradingEvent : IntField
    {
        public const int TAG = 1174;

        public SecurityTradingEvent()
            : base(Tags.SecurityTradingEvent) { }
        public SecurityTradingEvent(int val)
            : base(Tags.SecurityTradingEvent, val) { }


        // Field Enumerations
        public const int ORDER_IMBALANCE_AUCTION_IS_EXTENDED = 1;
        public const int TRADING_RESUMES = 2;
        public const int PRICE_VOLATILITY_INTERRUPTION = 3;
        public const int CHANGE_OF_TRADING_SESSION = 4;
        public const int CHANGE_OF_TRADING_SUBSESSION = 5;
        public const int CHANGE_OF_SECURITY_TRADING_STATUS = 6;
        public const int CHANGE_OF_BOOK_TYPE = 7;
        public const int CHANGE_OF_MARKET_DEPTH = 8;
        public const int CORPORATE_ACTION = 9;
        public const int CHANGE_OF_SECURITY_STATUS = 6;
    }


    /// <summary>
    /// NoStatsIndicators Field
    /// </summary>/
    public sealed class NoStatsIndicators : IntField
    {
        public const int TAG = 1175;

        public NoStatsIndicators()
            : base(Tags.NoStatsIndicators) { }
        public NoStatsIndicators(int val)
            : base(Tags.NoStatsIndicators, val) { }

    }


    /// <summary>
    /// StatsType Field
    /// </summary>/
    public sealed class StatsType : IntField
    {
        public const int TAG = 1176;

        public StatsType()
            : base(Tags.StatsType) { }
        public StatsType(int val)
            : base(Tags.StatsType, val) { }


        // Field Enumerations
        public const int EXCHANGE_LAST = 1;
        public const int HIGH = 2;
        public const int AVERAGE_PRICE = 3;
        public const int TURNOVER = 4;
    }


    /// <summary>
    /// NoOfSecSizes Field
    /// </summary>/
    public sealed class NoOfSecSizes : IntField
    {
        public const int TAG = 1177;

        public NoOfSecSizes()
            : base(Tags.NoOfSecSizes) { }
        public NoOfSecSizes(int val)
            : base(Tags.NoOfSecSizes, val) { }

    }


    /// <summary>
    /// MDSecSizeType Field
    /// </summary>/
    public sealed class MDSecSizeType : IntField
    {
        public const int TAG = 1178;

        public MDSecSizeType()
            : base(Tags.MDSecSizeType) { }
        public MDSecSizeType(int val)
            : base(Tags.MDSecSizeType, val) { }


        // Field Enumerations
        public const int CUSTOMER = 1;
        public const int CUSTOMER_PROFESSIONAL = 2;
        public const int DO_NOT_TRADE_THROUGH = 3;
    }


    /// <summary>
    /// MDSecSize Field
    /// </summary>/
    public sealed class MDSecSize : DecimalField
    {
        public const int TAG = 1179;

        public MDSecSize()
            : base(Tags.MDSecSize) { }
        public MDSecSize(Decimal val)
            : base(Tags.MDSecSize, val) { }

    }


    /// <summary>
    /// ApplID Field
    /// </summary>/
    public sealed class ApplID : StringField
    {
        public const int TAG = 1180;

        public ApplID()
            : base(Tags.ApplID) { }
        public ApplID(string val)
            : base(Tags.ApplID, val) { }

    }


    /// <summary>
    /// ApplSeqNum Field
    /// </summary>/
    public sealed class ApplSeqNum : IntField
    {
        public const int TAG = 1181;

        public ApplSeqNum()
            : base(Tags.ApplSeqNum) { }
        public ApplSeqNum(int val)
            : base(Tags.ApplSeqNum, val) { }

    }


    /// <summary>
    /// ApplBegSeqNum Field
    /// </summary>/
    public sealed class ApplBegSeqNum : IntField
    {
        public const int TAG = 1182;

        public ApplBegSeqNum()
            : base(Tags.ApplBegSeqNum) { }
        public ApplBegSeqNum(int val)
            : base(Tags.ApplBegSeqNum, val) { }

    }


    /// <summary>
    /// ApplEndSeqNum Field
    /// </summary>/
    public sealed class ApplEndSeqNum : IntField
    {
        public const int TAG = 1183;

        public ApplEndSeqNum()
            : base(Tags.ApplEndSeqNum) { }
        public ApplEndSeqNum(int val)
            : base(Tags.ApplEndSeqNum, val) { }

    }


    /// <summary>
    /// SecurityXMLLen Field
    /// </summary>/
    public sealed class SecurityXMLLen : IntField
    {
        public const int TAG = 1184;

        public SecurityXMLLen()
            : base(Tags.SecurityXMLLen) { }
        public SecurityXMLLen(int val)
            : base(Tags.SecurityXMLLen, val) { }

    }


    /// <summary>
    /// SecurityXML Field
    /// </summary>/
    public sealed class SecurityXML : StringField
    {
        public const int TAG = 1185;

        public SecurityXML()
            : base(Tags.SecurityXML) { }
        public SecurityXML(string val)
            : base(Tags.SecurityXML, val) { }

    }


    /// <summary>
    /// SecurityXMLSchema Field
    /// </summary>/
    public sealed class SecurityXMLSchema : StringField
    {
        public const int TAG = 1186;

        public SecurityXMLSchema()
            : base(Tags.SecurityXMLSchema) { }
        public SecurityXMLSchema(string val)
            : base(Tags.SecurityXMLSchema, val) { }

    }


    /// <summary>
    /// RefreshIndicator Field
    /// </summary>/
    public sealed class RefreshIndicator : BooleanField
    {
        public const int TAG = 1187;

        public RefreshIndicator()
            : base(Tags.RefreshIndicator) { }
        public RefreshIndicator(Boolean val)
            : base(Tags.RefreshIndicator, val) { }

    }


    /// <summary>
    /// Volatility Field
    /// </summary>/
    public sealed class Volatility : DecimalField
    {
        public const int TAG = 1188;

        public Volatility()
            : base(Tags.Volatility) { }
        public Volatility(Decimal val)
            : base(Tags.Volatility, val) { }

    }


    /// <summary>
    /// TimeToExpiration Field
    /// </summary>/
    public sealed class TimeToExpiration : DecimalField
    {
        public const int TAG = 1189;

        public TimeToExpiration()
            : base(Tags.TimeToExpiration) { }
        public TimeToExpiration(Decimal val)
            : base(Tags.TimeToExpiration, val) { }

    }


    /// <summary>
    /// RiskFreeRate Field
    /// </summary>/
    public sealed class RiskFreeRate : DecimalField
    {
        public const int TAG = 1190;

        public RiskFreeRate()
            : base(Tags.RiskFreeRate) { }
        public RiskFreeRate(Decimal val)
            : base(Tags.RiskFreeRate, val) { }

    }


    /// <summary>
    /// PriceUnitOfMeasure Field
    /// </summary>/
    public sealed class PriceUnitOfMeasure : StringField
    {
        public const int TAG = 1191;

        public PriceUnitOfMeasure()
            : base(Tags.PriceUnitOfMeasure) { }
        public PriceUnitOfMeasure(string val)
            : base(Tags.PriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PriceUnitOfMeasureQty Field
    /// </summary>/
    public sealed class PriceUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1192;

        public PriceUnitOfMeasureQty()
            : base(Tags.PriceUnitOfMeasureQty) { }
        public PriceUnitOfMeasureQty(Decimal val)
            : base(Tags.PriceUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// SettlMethod Field
    /// </summary>/
    public sealed class SettlMethod : StringField
    {
        public const int TAG = 1193;

        public SettlMethod()
            : base(Tags.SettlMethod) { }
        public SettlMethod(string val)
            : base(Tags.SettlMethod, val) { }


        // Field Enumerations
        public const string CASH_SETTLEMENT_REQUIRED = "C";
        public const string PHYSICAL_SETTLEMENT_REQUIRED = "P";
        public const string ELECTION_AT_EXERCISE = "E";
    }


    /// <summary>
    /// ExerciseStyle Field
    /// </summary>/
    public sealed class ExerciseStyle : IntField
    {
        public const int TAG = 1194;

        public ExerciseStyle()
            : base(Tags.ExerciseStyle) { }
        public ExerciseStyle(int val)
            : base(Tags.ExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// OptPayAmount Field
    /// </summary>/
    public sealed class OptPayAmount : DecimalField
    {
        public const int TAG = 1195;

        public OptPayAmount()
            : base(Tags.OptPayAmount) { }
        public OptPayAmount(Decimal val)
            : base(Tags.OptPayAmount, val) { }

    }


    /// <summary>
    /// PriceQuoteMethod Field
    /// </summary>/
    public sealed class PriceQuoteMethod : StringField
    {
        public const int TAG = 1196;

        public PriceQuoteMethod()
            : base(Tags.PriceQuoteMethod) { }
        public PriceQuoteMethod(string val)
            : base(Tags.PriceQuoteMethod, val) { }


        // Field Enumerations
        public const string STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = "STD";
        public const string INDEX = "INX";
        public const string INTEREST_RATE_INDEX = "INT";
        public const string PERCENT_OF_PAR = "PCTPAR";
        public const string STANDARD = "STD";
    }


    /// <summary>
    /// FuturesValuationMethod Field
    /// </summary>/
    public sealed class FuturesValuationMethod : StringField
    {
        public const int TAG = 1197;

        public FuturesValuationMethod()
            : base(Tags.FuturesValuationMethod) { }
        public FuturesValuationMethod(string val)
            : base(Tags.FuturesValuationMethod, val) { }


        // Field Enumerations
        public const string PREMIUM_STYLE = "EQTY";
        public const string FUTURES_STYLE_MARK_TO_MARKET = "FUT";
        public const string FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA";
    }


    /// <summary>
    /// ListMethod Field
    /// </summary>/
    public sealed class ListMethod : IntField
    {
        public const int TAG = 1198;

        public ListMethod()
            : base(Tags.ListMethod) { }
        public ListMethod(int val)
            : base(Tags.ListMethod, val) { }


        // Field Enumerations
        public const int PRE_LISTED_ONLY = 0;
        public const int USER_REQUESTED = 1;
    }


    /// <summary>
    /// CapPrice Field
    /// </summary>/
    public sealed class CapPrice : DecimalField
    {
        public const int TAG = 1199;

        public CapPrice()
            : base(Tags.CapPrice) { }
        public CapPrice(Decimal val)
            : base(Tags.CapPrice, val) { }

    }


    /// <summary>
    /// FloorPrice Field
    /// </summary>/
    public sealed class FloorPrice : DecimalField
    {
        public const int TAG = 1200;

        public FloorPrice()
            : base(Tags.FloorPrice) { }
        public FloorPrice(Decimal val)
            : base(Tags.FloorPrice, val) { }

    }


    /// <summary>
    /// NoStrikeRules Field
    /// </summary>/
    public sealed class NoStrikeRules : IntField
    {
        public const int TAG = 1201;

        public NoStrikeRules()
            : base(Tags.NoStrikeRules) { }
        public NoStrikeRules(int val)
            : base(Tags.NoStrikeRules, val) { }

    }


    /// <summary>
    /// StartStrikePxRange Field
    /// </summary>/
    public sealed class StartStrikePxRange : DecimalField
    {
        public const int TAG = 1202;

        public StartStrikePxRange()
            : base(Tags.StartStrikePxRange) { }
        public StartStrikePxRange(Decimal val)
            : base(Tags.StartStrikePxRange, val) { }

    }


    /// <summary>
    /// EndStrikePxRange Field
    /// </summary>/
    public sealed class EndStrikePxRange : DecimalField
    {
        public const int TAG = 1203;

        public EndStrikePxRange()
            : base(Tags.EndStrikePxRange) { }
        public EndStrikePxRange(Decimal val)
            : base(Tags.EndStrikePxRange, val) { }

    }


    /// <summary>
    /// StrikeIncrement Field
    /// </summary>/
    public sealed class StrikeIncrement : DecimalField
    {
        public const int TAG = 1204;

        public StrikeIncrement()
            : base(Tags.StrikeIncrement) { }
        public StrikeIncrement(Decimal val)
            : base(Tags.StrikeIncrement, val) { }

    }


    /// <summary>
    /// NoTickRules Field
    /// </summary>/
    public sealed class NoTickRules : IntField
    {
        public const int TAG = 1205;

        public NoTickRules()
            : base(Tags.NoTickRules) { }
        public NoTickRules(int val)
            : base(Tags.NoTickRules, val) { }

    }


    /// <summary>
    /// StartTickPriceRange Field
    /// </summary>/
    public sealed class StartTickPriceRange : DecimalField
    {
        public const int TAG = 1206;

        public StartTickPriceRange()
            : base(Tags.StartTickPriceRange) { }
        public StartTickPriceRange(Decimal val)
            : base(Tags.StartTickPriceRange, val) { }

    }


    /// <summary>
    /// EndTickPriceRange Field
    /// </summary>/
    public sealed class EndTickPriceRange : DecimalField
    {
        public const int TAG = 1207;

        public EndTickPriceRange()
            : base(Tags.EndTickPriceRange) { }
        public EndTickPriceRange(Decimal val)
            : base(Tags.EndTickPriceRange, val) { }

    }


    /// <summary>
    /// TickIncrement Field
    /// </summary>/
    public sealed class TickIncrement : DecimalField
    {
        public const int TAG = 1208;

        public TickIncrement()
            : base(Tags.TickIncrement) { }
        public TickIncrement(Decimal val)
            : base(Tags.TickIncrement, val) { }

    }


    /// <summary>
    /// TickRuleType Field
    /// </summary>/
    public sealed class TickRuleType : IntField
    {
        public const int TAG = 1209;

        public TickRuleType()
            : base(Tags.TickRuleType) { }
        public TickRuleType(int val)
            : base(Tags.TickRuleType, val) { }


        // Field Enumerations
        public const int REGULAR_TRADING = 0;
        public const int VARIABLE_CABINET = 1;
        public const int FIXED_CABINET = 2;
        public const int TRADED_AS_A_SPREAD_LEG = 3;
        public const int SETTLED_AS_A_SPREAD_LEG = 4;
        public const int TRADED_AS_SPREAD = 5;
        public const int REGULAR = 0;
        public const int VARIABLE = 1;
        public const int FIXED = 2;
    }


    /// <summary>
    /// NestedInstrAttribType Field
    /// </summary>/
    public sealed class NestedInstrAttribType : IntField
    {
        public const int TAG = 1210;

        public NestedInstrAttribType()
            : base(Tags.NestedInstrAttribType) { }
        public NestedInstrAttribType(int val)
            : base(Tags.NestedInstrAttribType, val) { }


        // Field Enumerations
        public const int FLAT = 1;
        public const int ZERO_COUPON = 2;
        public const int INTEREST_BEARING = 3;
        public const int NO_PERIODIC_PAYMENTS = 4;
        public const int VARIABLE_RATE = 5;
        public const int LESS_FEE_FOR_PUT = 6;
        public const int STEPPED_COUPON = 7;
        public const int COUPON_PERIOD = 8;
        public const int WHEN_AND_IF_ISSUED = 9;
        public const int ORIGINAL_ISSUE_DISCOUNT = 10;
        public const int CALLABLE_PUTTABLE = 11;
        public const int ESCROWED_TO_MATURITY = 12;
        public const int ESCROWED_TO_REDEMPTION_DATE = 13;
        public const int PRE_REFUNDED = 14;
        public const int IN_DEFAULT = 15;
        public const int UNRATED = 16;
        public const int TAXABLE = 17;
        public const int INDEXED = 18;
        public const int SUBJECT_TO_ALTERNATIVE_MINIMUM_TAX = 19;
        public const int ORIGINAL_ISSUE_DISCOUNT_PRICE = 20;
        public const int CALLABLE_BELOW_MATURITY_VALUE = 21;
        public const int CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTERED = 22;
        public const int PRICE_TICK_RULES_FOR_SECURITY = 23;
        public const int TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITY = 24;
        public const int INSTRUMENT_DENOMINATOR = 25;
        public const int INSTRUMENT_NUMERATOR = 26;
        public const int INSTRUMENT_PRICE_PRECISION = 27;
        public const int INSTRUMENT_STRIKE_PRICE = 28;
        public const int TRADEABLE_INDICATOR = 29;
        public const int TEXT = 99;
        public const int INSTRUMENT_IS_ELIGIBLE_TO_ACCEPT_ANONYMOUS_ORDERS = 30;
        public const int MINIMUM_GUARANTEED_FILL_VOLUME = 31;
        public const int MINIMUM_GUARANTEED_FILL_STATUS = 32;
        public const int TRADE_AT_SETTLEMENT = 33;
        public const int TEST_INSTRUMENT = 34;
        public const int DUMMY_INSTRUMENT = 35;
        public const int NEGATIVE_SETTLEMENT_PRICE_ELIGIBILITY = 36;
        public const int NEGATIVE_STRIKE_PRICE_ELIGIBILITY = 37;
        public const int US_STANDARD_CONTRACT_INDICATOR = 38;
        public const int ADMITTED_TO_TRADING_ON_A_TRADING_VENUE = 39;
        public const int AVERAGE_DAILY_NOTIONAL_AMOUNT = 40;
        public const int AVERAGE_DAILY_NUMBER_OF_TRADES = 41;
    }


    /// <summary>
    /// NestedInstrAttribValue Field
    /// </summary>/
    public sealed class NestedInstrAttribValue : StringField
    {
        public const int TAG = 1211;

        public NestedInstrAttribValue()
            : base(Tags.NestedInstrAttribValue) { }
        public NestedInstrAttribValue(string val)
            : base(Tags.NestedInstrAttribValue, val) { }

    }


    /// <summary>
    /// LegMaturityTime Field
    /// </summary>/
    public sealed class LegMaturityTime : StringField
    {
        public const int TAG = 1212;

        public LegMaturityTime()
            : base(Tags.LegMaturityTime) { }
        public LegMaturityTime(string val)
            : base(Tags.LegMaturityTime, val) { }

    }


    /// <summary>
    /// UnderlyingMaturityTime Field
    /// </summary>/
    public sealed class UnderlyingMaturityTime : StringField
    {
        public const int TAG = 1213;

        public UnderlyingMaturityTime()
            : base(Tags.UnderlyingMaturityTime) { }
        public UnderlyingMaturityTime(string val)
            : base(Tags.UnderlyingMaturityTime, val) { }

    }


    /// <summary>
    /// DerivativeSymbol Field
    /// </summary>/
    public sealed class DerivativeSymbol : StringField
    {
        public const int TAG = 1214;

        public DerivativeSymbol()
            : base(Tags.DerivativeSymbol) { }
        public DerivativeSymbol(string val)
            : base(Tags.DerivativeSymbol, val) { }

    }


    /// <summary>
    /// DerivativeSymbolSfx Field
    /// </summary>/
    public sealed class DerivativeSymbolSfx : StringField
    {
        public const int TAG = 1215;

        public DerivativeSymbolSfx()
            : base(Tags.DerivativeSymbolSfx) { }
        public DerivativeSymbolSfx(string val)
            : base(Tags.DerivativeSymbolSfx, val) { }


        // Field Enumerations
        public const string EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE = "CD";
        public const string WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN = "WI";
    }


    /// <summary>
    /// DerivativeSecurityID Field
    /// </summary>/
    public sealed class DerivativeSecurityID : StringField
    {
        public const int TAG = 1216;

        public DerivativeSecurityID()
            : base(Tags.DerivativeSecurityID) { }
        public DerivativeSecurityID(string val)
            : base(Tags.DerivativeSecurityID, val) { }

    }


    /// <summary>
    /// DerivativeSecurityIDSource Field
    /// </summary>/
    public sealed class DerivativeSecurityIDSource : StringField
    {
        public const int TAG = 1217;

        public DerivativeSecurityIDSource()
            : base(Tags.DerivativeSecurityIDSource) { }
        public DerivativeSecurityIDSource(string val)
            : base(Tags.DerivativeSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// NoDerivativeSecurityAltID Field
    /// </summary>/
    public sealed class NoDerivativeSecurityAltID : IntField
    {
        public const int TAG = 1218;

        public NoDerivativeSecurityAltID()
            : base(Tags.NoDerivativeSecurityAltID) { }
        public NoDerivativeSecurityAltID(int val)
            : base(Tags.NoDerivativeSecurityAltID, val) { }

    }


    /// <summary>
    /// DerivativeSecurityAltID Field
    /// </summary>/
    public sealed class DerivativeSecurityAltID : StringField
    {
        public const int TAG = 1219;

        public DerivativeSecurityAltID()
            : base(Tags.DerivativeSecurityAltID) { }
        public DerivativeSecurityAltID(string val)
            : base(Tags.DerivativeSecurityAltID, val) { }

    }


    /// <summary>
    /// DerivativeSecurityAltIDSource Field
    /// </summary>/
    public sealed class DerivativeSecurityAltIDSource : StringField
    {
        public const int TAG = 1220;

        public DerivativeSecurityAltIDSource()
            : base(Tags.DerivativeSecurityAltIDSource) { }
        public DerivativeSecurityAltIDSource(string val)
            : base(Tags.DerivativeSecurityAltIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// SecondaryLowLimitPrice Field
    /// </summary>/
    public sealed class SecondaryLowLimitPrice : DecimalField
    {
        public const int TAG = 1221;

        public SecondaryLowLimitPrice()
            : base(Tags.SecondaryLowLimitPrice) { }
        public SecondaryLowLimitPrice(Decimal val)
            : base(Tags.SecondaryLowLimitPrice, val) { }

    }


    /// <summary>
    /// MaturityRuleID Field
    /// </summary>/
    public sealed class MaturityRuleID : StringField
    {
        public const int TAG = 1222;

        public MaturityRuleID()
            : base(Tags.MaturityRuleID) { }
        public MaturityRuleID(string val)
            : base(Tags.MaturityRuleID, val) { }

    }


    /// <summary>
    /// StrikeRuleID Field
    /// </summary>/
    public sealed class StrikeRuleID : StringField
    {
        public const int TAG = 1223;

        public StrikeRuleID()
            : base(Tags.StrikeRuleID) { }
        public StrikeRuleID(string val)
            : base(Tags.StrikeRuleID, val) { }

    }


    /// <summary>
    /// LegUnitOfMeasureQty Field
    /// </summary>/
    public sealed class LegUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1224;

        public LegUnitOfMeasureQty()
            : base(Tags.LegUnitOfMeasureQty) { }
        public LegUnitOfMeasureQty(Decimal val)
            : base(Tags.LegUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// DerivativeOptPayAmount Field
    /// </summary>/
    public sealed class DerivativeOptPayAmount : DecimalField
    {
        public const int TAG = 1225;

        public DerivativeOptPayAmount()
            : base(Tags.DerivativeOptPayAmount) { }
        public DerivativeOptPayAmount(Decimal val)
            : base(Tags.DerivativeOptPayAmount, val) { }

    }


    /// <summary>
    /// EndMaturityMonthYear Field
    /// </summary>/
    public sealed class EndMaturityMonthYear : StringField
    {
        public const int TAG = 1226;

        public EndMaturityMonthYear()
            : base(Tags.EndMaturityMonthYear) { }
        public EndMaturityMonthYear(string val)
            : base(Tags.EndMaturityMonthYear, val) { }

    }


    /// <summary>
    /// ProductComplex Field
    /// </summary>/
    public sealed class ProductComplex : StringField
    {
        public const int TAG = 1227;

        public ProductComplex()
            : base(Tags.ProductComplex) { }
        public ProductComplex(string val)
            : base(Tags.ProductComplex, val) { }

    }


    /// <summary>
    /// DerivativeProductComplex Field
    /// </summary>/
    public sealed class DerivativeProductComplex : StringField
    {
        public const int TAG = 1228;

        public DerivativeProductComplex()
            : base(Tags.DerivativeProductComplex) { }
        public DerivativeProductComplex(string val)
            : base(Tags.DerivativeProductComplex, val) { }

    }


    /// <summary>
    /// MaturityMonthYearIncrement Field
    /// </summary>/
    public sealed class MaturityMonthYearIncrement : IntField
    {
        public const int TAG = 1229;

        public MaturityMonthYearIncrement()
            : base(Tags.MaturityMonthYearIncrement) { }
        public MaturityMonthYearIncrement(int val)
            : base(Tags.MaturityMonthYearIncrement, val) { }

    }


    /// <summary>
    /// SecondaryHighLimitPrice Field
    /// </summary>/
    public sealed class SecondaryHighLimitPrice : DecimalField
    {
        public const int TAG = 1230;

        public SecondaryHighLimitPrice()
            : base(Tags.SecondaryHighLimitPrice) { }
        public SecondaryHighLimitPrice(Decimal val)
            : base(Tags.SecondaryHighLimitPrice, val) { }

    }


    /// <summary>
    /// MinLotSize Field
    /// </summary>/
    public sealed class MinLotSize : DecimalField
    {
        public const int TAG = 1231;

        public MinLotSize()
            : base(Tags.MinLotSize) { }
        public MinLotSize(Decimal val)
            : base(Tags.MinLotSize, val) { }

    }


    /// <summary>
    /// NoExecInstRules Field
    /// </summary>/
    public sealed class NoExecInstRules : IntField
    {
        public const int TAG = 1232;

        public NoExecInstRules()
            : base(Tags.NoExecInstRules) { }
        public NoExecInstRules(int val)
            : base(Tags.NoExecInstRules, val) { }

    }


    /// <summary>
    /// NoLotTypeRules Field
    /// </summary>/
    public sealed class NoLotTypeRules : IntField
    {
        public const int TAG = 1234;

        public NoLotTypeRules()
            : base(Tags.NoLotTypeRules) { }
        public NoLotTypeRules(int val)
            : base(Tags.NoLotTypeRules, val) { }

    }


    /// <summary>
    /// NoMatchRules Field
    /// </summary>/
    public sealed class NoMatchRules : IntField
    {
        public const int TAG = 1235;

        public NoMatchRules()
            : base(Tags.NoMatchRules) { }
        public NoMatchRules(int val)
            : base(Tags.NoMatchRules, val) { }

    }


    /// <summary>
    /// NoMaturityRules Field
    /// </summary>/
    public sealed class NoMaturityRules : IntField
    {
        public const int TAG = 1236;

        public NoMaturityRules()
            : base(Tags.NoMaturityRules) { }
        public NoMaturityRules(int val)
            : base(Tags.NoMaturityRules, val) { }

    }


    /// <summary>
    /// NoOrdTypeRules Field
    /// </summary>/
    public sealed class NoOrdTypeRules : IntField
    {
        public const int TAG = 1237;

        public NoOrdTypeRules()
            : base(Tags.NoOrdTypeRules) { }
        public NoOrdTypeRules(int val)
            : base(Tags.NoOrdTypeRules, val) { }

    }


    /// <summary>
    /// NoTimeInForceRules Field
    /// </summary>/
    public sealed class NoTimeInForceRules : IntField
    {
        public const int TAG = 1239;

        public NoTimeInForceRules()
            : base(Tags.NoTimeInForceRules) { }
        public NoTimeInForceRules(int val)
            : base(Tags.NoTimeInForceRules, val) { }

    }


    /// <summary>
    /// SecondaryTradingReferencePrice Field
    /// </summary>/
    public sealed class SecondaryTradingReferencePrice : DecimalField
    {
        public const int TAG = 1240;

        public SecondaryTradingReferencePrice()
            : base(Tags.SecondaryTradingReferencePrice) { }
        public SecondaryTradingReferencePrice(Decimal val)
            : base(Tags.SecondaryTradingReferencePrice, val) { }

    }


    /// <summary>
    /// StartMaturityMonthYear Field
    /// </summary>/
    public sealed class StartMaturityMonthYear : StringField
    {
        public const int TAG = 1241;

        public StartMaturityMonthYear()
            : base(Tags.StartMaturityMonthYear) { }
        public StartMaturityMonthYear(string val)
            : base(Tags.StartMaturityMonthYear, val) { }

    }


    /// <summary>
    /// FlexProductEligibilityIndicator Field
    /// </summary>/
    public sealed class FlexProductEligibilityIndicator : BooleanField
    {
        public const int TAG = 1242;

        public FlexProductEligibilityIndicator()
            : base(Tags.FlexProductEligibilityIndicator) { }
        public FlexProductEligibilityIndicator(Boolean val)
            : base(Tags.FlexProductEligibilityIndicator, val) { }

    }


    /// <summary>
    /// DerivFlexProductEligibilityIndicator Field
    /// </summary>/
    public sealed class DerivFlexProductEligibilityIndicator : BooleanField
    {
        public const int TAG = 1243;

        public DerivFlexProductEligibilityIndicator()
            : base(Tags.DerivFlexProductEligibilityIndicator) { }
        public DerivFlexProductEligibilityIndicator(Boolean val)
            : base(Tags.DerivFlexProductEligibilityIndicator, val) { }

    }


    /// <summary>
    /// FlexibleIndicator Field
    /// </summary>/
    public sealed class FlexibleIndicator : BooleanField
    {
        public const int TAG = 1244;

        public FlexibleIndicator()
            : base(Tags.FlexibleIndicator) { }
        public FlexibleIndicator(Boolean val)
            : base(Tags.FlexibleIndicator, val) { }

    }


    /// <summary>
    /// TradingCurrency Field
    /// </summary>/
    public sealed class TradingCurrency : StringField
    {
        public const int TAG = 1245;

        public TradingCurrency()
            : base(Tags.TradingCurrency) { }
        public TradingCurrency(string val)
            : base(Tags.TradingCurrency, val) { }

    }


    /// <summary>
    /// DerivativeProduct Field
    /// </summary>/
    public sealed class DerivativeProduct : IntField
    {
        public const int TAG = 1246;

        public DerivativeProduct()
            : base(Tags.DerivativeProduct) { }
        public DerivativeProduct(int val)
            : base(Tags.DerivativeProduct, val) { }


        // Field Enumerations
        public const int AGENCY = 1;
        public const int COMMODITY = 2;
        public const int CORPORATE = 3;
        public const int CURRENCY = 4;
        public const int EQUITY = 5;
        public const int GOVERNMENT = 6;
        public const int INDEX = 7;
        public const int LOAN = 8;
        public const int MONEYMARKET = 9;
        public const int MORTGAGE = 10;
        public const int MUNICIPAL = 11;
        public const int OTHER = 12;
        public const int FINANCING = 13;
    }


    /// <summary>
    /// DerivativeSecurityGroup Field
    /// </summary>/
    public sealed class DerivativeSecurityGroup : StringField
    {
        public const int TAG = 1247;

        public DerivativeSecurityGroup()
            : base(Tags.DerivativeSecurityGroup) { }
        public DerivativeSecurityGroup(string val)
            : base(Tags.DerivativeSecurityGroup, val) { }

    }


    /// <summary>
    /// DerivativeCFICode Field
    /// </summary>/
    public sealed class DerivativeCFICode : StringField
    {
        public const int TAG = 1248;

        public DerivativeCFICode()
            : base(Tags.DerivativeCFICode) { }
        public DerivativeCFICode(string val)
            : base(Tags.DerivativeCFICode, val) { }

    }


    /// <summary>
    /// DerivativeSecurityType Field
    /// </summary>/
    public sealed class DerivativeSecurityType : StringField
    {
        public const int TAG = 1249;

        public DerivativeSecurityType()
            : base(Tags.DerivativeSecurityType) { }
        public DerivativeSecurityType(string val)
            : base(Tags.DerivativeSecurityType, val) { }


        // Field Enumerations
        public const string US_TREASURY_NOTE_UST = "UST";
        public const string US_TREASURY_BILL_USTB = "USTB";
        public const string EURO_SUPRANATIONAL_COUPONS = "EUSUPRA";
        public const string FEDERAL_AGENCY_COUPON = "FAC";
        public const string FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN";
        public const string PRIVATE_EXPORT_FUNDING = "PEF";
        public const string USD_SUPRANATIONAL_COUPONS = "SUPRA";
        public const string CORPORATE_BOND = "CORP";
        public const string CORPORATE_PRIVATE_PLACEMENT = "CPP";
        public const string CONVERTIBLE_BOND = "CB";
        public const string DUAL_CURRENCY = "DUAL";
        public const string EURO_CORPORATE_BOND = "EUCORP";
        public const string EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN";
        public const string US_CORPORATE_FLOATING_RATE_NOTES = "FRN";
        public const string INDEXED_LINKED = "XLINKD";
        public const string STRUCTURED_NOTES = "STRUCT";
        public const string YANKEE_CORPORATE_BOND = "YANK";
        public const string FOREIGN_EXCHANGE_CONTRACT = "FOR";
        public const string CREDIT_DEFAULT_SWAP = "CDS";
        public const string FUTURE = "FUT";
        public const string OPTION = "OPT";
        public const string OPTIONS_ON_FUTURES = "OOF";
        public const string OPTIONS_ON_PHYSICAL = "OOP";
        public const string INTEREST_RATE_SWAP = "IRS";
        public const string OPTIONS_ON_COMBO = "OOC";
        public const string COMMON_STOCK = "CS";
        public const string PREFERRED_STOCK = "PS";
        public const string REPURCHASE = "REPO";
        public const string FORWARD = "FORWARD";
        public const string BUY_SELLBACK = "BUYSELL";
        public const string SECURITIES_LOAN = "SECLOAN";
        public const string SECURITIES_PLEDGE = "SECPLEDGE";
        public const string BRADY_BOND = "BRADY";
        public const string CANADIAN_TREASURY_NOTES = "CAN";
        public const string CANADIAN_TREASURY_BILLS = "CTB";
        public const string EURO_SOVEREIGNS = "EUSOV";
        public const string CANADIAN_PROVINCIAL_BONDS = "PROV";
        public const string TREASURY_BILL = "TB";
        public const string US_TREASURY_BOND = "TBOND";
        public const string INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT";
        public const string US_TREASURY_BILL_TBILL = "TBILL";
        public const string TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS";
        public const string PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL";
        public const string PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN";
        public const string US_TREASURY_NOTE_TNOTE = "TNOTE";
        public const string TERM_LOAN = "TERM";
        public const string REVOLVER_LOAN = "RVLV";
        public const string REVOLVER_TERM_LOAN = "RVLVTRM";
        public const string BRIDGE_LOAN = "BRIDGE";
        public const string LETTER_OF_CREDIT = "LOFC";
        public const string SWING_LINE_FACILITY = "SWING";
        public const string DEBTOR_IN_POSSESSION = "DINP";
        public const string DEFAULTED = "DEFLTED";
        public const string WITHDRAWN = "WITHDRN";
        public const string REPLACED = "REPLACD";
        public const string MATURED = "MATURED";
        public const string AMENDED_RESTATED = "AMENDED";
        public const string RETIRED = "RETIRED";
        public const string BANKERS_ACCEPTANCE = "BA";
        public const string BANK_DEPOSITORY_NOTE = "BDN";
        public const string BANK_NOTES = "BN";
        public const string BILL_OF_EXCHANGES = "BOX";
        public const string CANADIAN_MONEY_MARKETS = "CAMM";
        public const string CERTIFICATE_OF_DEPOSIT = "CD";
        public const string CALL_LOANS = "CL";
        public const string COMMERCIAL_PAPER = "CP";
        public const string DEPOSIT_NOTES = "DN";
        public const string EURO_CERTIFICATE_OF_DEPOSIT = "EUCD";
        public const string EURO_COMMERCIAL_PAPER = "EUCP";
        public const string LIQUIDITY_NOTE = "LQN";
        public const string MEDIUM_TERM_NOTES = "MTN";
        public const string OVERNIGHT = "ONITE";
        public const string PROMISSORY_NOTE = "PN";
        public const string SHORT_TERM_LOAN_NOTE = "STN";
        public const string PLAZOS_FIJOS = "PZFJ";
        public const string SECURED_LIQUIDITY_NOTE = "SLQN";
        public const string TIME_DEPOSIT = "TD";
        public const string TERM_LIQUIDITY_NOTE = "TLQN";
        public const string EXTENDED_COMM_NOTE = "XCN";
        public const string YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD";
        public const string ASSET_BACKED_SECURITIES = "ABS";
        public const string CANADIAN_MORTGAGE_BONDS = "CMB";
        public const string CORP_MORTGAGE_BACKED_SECURITIES = "CMBS";
        public const string COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO";
        public const string IOETTE_MORTGAGE = "IET";
        public const string MORTGAGE_BACKED_SECURITIES = "MBS";
        public const string MORTGAGE_INTEREST_ONLY = "MIO";
        public const string MORTGAGE_PRINCIPAL_ONLY = "MPO";
        public const string MORTGAGE_PRIVATE_PLACEMENT = "MPP";
        public const string MISCELLANEOUS_PASS_THROUGH = "MPT";
        public const string PFANDBRIEFE = "PFAND";
        public const string TO_BE_ANNOUNCED = "TBA";
        public const string OTHER_ANTICIPATION_NOTES = "AN";
        public const string CERTIFICATE_OF_OBLIGATION = "COFO";
        public const string CERTIFICATE_OF_PARTICIPATION = "COFP";
        public const string GENERAL_OBLIGATION_BONDS = "GO";
        public const string MANDATORY_TENDER = "MT";
        public const string REVENUE_ANTICIPATION_NOTE = "RAN";
        public const string REVENUE_BONDS = "REV";
        public const string SPECIAL_ASSESSMENT = "SPCLA";
        public const string SPECIAL_OBLIGATION = "SPCLO";
        public const string SPECIAL_TAX = "SPCLT";
        public const string TAX_ANTICIPATION_NOTE = "TAN";
        public const string TAX_ALLOCATION = "TAXA";
        public const string TAX_EXEMPT_COMMERCIAL_PAPER = "TECP";
        public const string TAXABLE_MUNICIPAL_CP = "TMCP";
        public const string TAX_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string VARIABLE_RATE_DEMAND_NOTE = "VRDN";
        public const string WARRANT = "WAR";
        public const string MUTUAL_FUND = "MF";
        public const string MULTILEG_INSTRUMENT = "MLEG";
        public const string NO_SECURITY_TYPE = "NONE";
        public const string WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?";
        public const string CASH = "CASH";
        public const string NON_DELIVERABLE_FORWARD = "FXNDF";
        public const string FX_SPOT = "FXSPOT";
        public const string FX_FORWARD = "FXFWD";
        public const string FX_SWAP = "FXSWAP";
        public const string DELIVERY_VERSUS_PLEDGE = "DVPLDG";
        public const string COMMODITY_SWAP = "CMDTYSWAP";
        public const string SWAP_OPTION = "SWAPTION";
        public const string DERIVATIVE_FORWARD = "FWD";
        public const string TOTAL_RETURN_SWAP = "TRS";
        public const string CAP = "CAP";
        public const string COLLAR = "CLLR";
        public const string EXOTIC = "EXOTIC";
        public const string FLOOR = "FLR";
        public const string FORWARD_RATE_AGREEMENT = "FRA";
        public const string LOAN_LEASE = "LOANLEASE";
        public const string SPOT_FORWARD = "SPOTFWD";
        public const string TRANSMISSION = "XMISSION";
        public const string GENERAL_TYPE_FOR_A_CONTRACT_BASED_ON_AN_ESTABLISHED_INDEX = "INDEX";
        public const string COLLATERAL_BASKET = "COLLBSKT";
        public const string BOND_BASKET = "BDBSKT";
        public const string CONTRACT_FOR_DIFFERENCE = "CFD";
        public const string CORRELATION_SWAP = "CRLTNSWAP";
        public const string DIVIDEND_SWAP = "DVDNDSWAP";
        public const string EQUITY_BASKET = "EQBSKT";
        public const string EQUITY_FORWARD = "EQFWD";
        public const string RETURN_SWAP = "RTRNSWAP";
        public const string VARIANCE_SWAP = "VARSWAP";
        public const string NON_DELIVERABLE_SWAP = "FXNDS";
        public const string PORTFOLIO_SWAP = "PRTFLIOSWAP";
        public const string FUTURES_ON_A_SWAP = "FUTSWAP";
        public const string FORWARDS_ON_A_SWAP = "FWDSWAP";
        public const string FORWARD_FREIGHT_AGREEMENT = "FWDFRTAGMT";
        public const string SPREAD_BETTING = "SPREADBET";
        public const string OTHER = "Other";
        public const string DEPOSITORY_RECEIPTS = "DR";
        public const string EXCHANGE_TRADED_COMMODITY = "ETC";
        public const string EXCHANGE_TRADED_NOTE = "ETN";
        public const string SECURITIZED_DERIVATIVE = "SECDERIV";
        public const string STRUCTURED_FINANCE_PRODUCT = "SFP";
        public const string MARGIN_LOAN = "MRGNLOAN";
    }


    /// <summary>
    /// DerivativeSecuritySubType Field
    /// </summary>/
    public sealed class DerivativeSecuritySubType : StringField
    {
        public const int TAG = 1250;

        public DerivativeSecuritySubType()
            : base(Tags.DerivativeSecuritySubType) { }
        public DerivativeSecuritySubType(string val)
            : base(Tags.DerivativeSecuritySubType, val) { }

    }


    /// <summary>
    /// DerivativeMaturityMonthYear Field
    /// </summary>/
    public sealed class DerivativeMaturityMonthYear : StringField
    {
        public const int TAG = 1251;

        public DerivativeMaturityMonthYear()
            : base(Tags.DerivativeMaturityMonthYear) { }
        public DerivativeMaturityMonthYear(string val)
            : base(Tags.DerivativeMaturityMonthYear, val) { }

    }


    /// <summary>
    /// DerivativeMaturityDate Field
    /// </summary>/
    public sealed class DerivativeMaturityDate : StringField
    {
        public const int TAG = 1252;

        public DerivativeMaturityDate()
            : base(Tags.DerivativeMaturityDate) { }
        public DerivativeMaturityDate(string val)
            : base(Tags.DerivativeMaturityDate, val) { }

    }


    /// <summary>
    /// DerivativeMaturityTime Field
    /// </summary>/
    public sealed class DerivativeMaturityTime : StringField
    {
        public const int TAG = 1253;

        public DerivativeMaturityTime()
            : base(Tags.DerivativeMaturityTime) { }
        public DerivativeMaturityTime(string val)
            : base(Tags.DerivativeMaturityTime, val) { }

    }


    /// <summary>
    /// DerivativeSettleOnOpenFlag Field
    /// </summary>/
    public sealed class DerivativeSettleOnOpenFlag : StringField
    {
        public const int TAG = 1254;

        public DerivativeSettleOnOpenFlag()
            : base(Tags.DerivativeSettleOnOpenFlag) { }
        public DerivativeSettleOnOpenFlag(string val)
            : base(Tags.DerivativeSettleOnOpenFlag, val) { }

    }


    /// <summary>
    /// DerivativeInstrmtAssignmentMethod Field
    /// </summary>/
    public sealed class DerivativeInstrmtAssignmentMethod : CharField
    {
        public const int TAG = 1255;

        public DerivativeInstrmtAssignmentMethod()
            : base(Tags.DerivativeInstrmtAssignmentMethod) { }
        public DerivativeInstrmtAssignmentMethod(char val)
            : base(Tags.DerivativeInstrmtAssignmentMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = 'P';
        public const char RANDOM = 'R';
    }


    /// <summary>
    /// DerivativeSecurityStatus Field
    /// </summary>/
    public sealed class DerivativeSecurityStatus : StringField
    {
        public const int TAG = 1256;

        public DerivativeSecurityStatus()
            : base(Tags.DerivativeSecurityStatus) { }
        public DerivativeSecurityStatus(string val)
            : base(Tags.DerivativeSecurityStatus, val) { }


        // Field Enumerations
        public const string ACTIVE = "1";
        public const string INACTIVE = "2";
        public const string ACTIVE_CLOSING_ORDERS_ONLY = "3";
        public const string EXPIRED = "4";
        public const string DELISTED = "5";
        public const string KNOCKED_OUT = "6";
        public const string KNOCK_OUT_REVOKED = "7";
        public const string PENDING_EXPIRY = "8";
        public const string SUSPENDED = "9";
        public const string PUBLISHED = "10";
        public const string PENDING_DELETION = "11";
    }


    /// <summary>
    /// DerivativeInstrRegistry Field
    /// </summary>/
    public sealed class DerivativeInstrRegistry : StringField
    {
        public const int TAG = 1257;

        public DerivativeInstrRegistry()
            : base(Tags.DerivativeInstrRegistry) { }
        public DerivativeInstrRegistry(string val)
            : base(Tags.DerivativeInstrRegistry, val) { }

    }


    /// <summary>
    /// DerivativeCountryOfIssue Field
    /// </summary>/
    public sealed class DerivativeCountryOfIssue : StringField
    {
        public const int TAG = 1258;

        public DerivativeCountryOfIssue()
            : base(Tags.DerivativeCountryOfIssue) { }
        public DerivativeCountryOfIssue(string val)
            : base(Tags.DerivativeCountryOfIssue, val) { }

    }


    /// <summary>
    /// DerivativeStateOrProvinceOfIssue Field
    /// </summary>/
    public sealed class DerivativeStateOrProvinceOfIssue : StringField
    {
        public const int TAG = 1259;

        public DerivativeStateOrProvinceOfIssue()
            : base(Tags.DerivativeStateOrProvinceOfIssue) { }
        public DerivativeStateOrProvinceOfIssue(string val)
            : base(Tags.DerivativeStateOrProvinceOfIssue, val) { }

    }


    /// <summary>
    /// DerivativeLocaleOfIssue Field
    /// </summary>/
    public sealed class DerivativeLocaleOfIssue : StringField
    {
        public const int TAG = 1260;

        public DerivativeLocaleOfIssue()
            : base(Tags.DerivativeLocaleOfIssue) { }
        public DerivativeLocaleOfIssue(string val)
            : base(Tags.DerivativeLocaleOfIssue, val) { }

    }


    /// <summary>
    /// DerivativeStrikePrice Field
    /// </summary>/
    public sealed class DerivativeStrikePrice : DecimalField
    {
        public const int TAG = 1261;

        public DerivativeStrikePrice()
            : base(Tags.DerivativeStrikePrice) { }
        public DerivativeStrikePrice(Decimal val)
            : base(Tags.DerivativeStrikePrice, val) { }

    }


    /// <summary>
    /// DerivativeStrikeCurrency Field
    /// </summary>/
    public sealed class DerivativeStrikeCurrency : StringField
    {
        public const int TAG = 1262;

        public DerivativeStrikeCurrency()
            : base(Tags.DerivativeStrikeCurrency) { }
        public DerivativeStrikeCurrency(string val)
            : base(Tags.DerivativeStrikeCurrency, val) { }

    }


    /// <summary>
    /// DerivativeStrikeMultiplier Field
    /// </summary>/
    public sealed class DerivativeStrikeMultiplier : DecimalField
    {
        public const int TAG = 1263;

        public DerivativeStrikeMultiplier()
            : base(Tags.DerivativeStrikeMultiplier) { }
        public DerivativeStrikeMultiplier(Decimal val)
            : base(Tags.DerivativeStrikeMultiplier, val) { }

    }


    /// <summary>
    /// DerivativeStrikeValue Field
    /// </summary>/
    public sealed class DerivativeStrikeValue : DecimalField
    {
        public const int TAG = 1264;

        public DerivativeStrikeValue()
            : base(Tags.DerivativeStrikeValue) { }
        public DerivativeStrikeValue(Decimal val)
            : base(Tags.DerivativeStrikeValue, val) { }

    }


    /// <summary>
    /// DerivativeOptAttribute Field
    /// </summary>/
    public sealed class DerivativeOptAttribute : CharField
    {
        public const int TAG = 1265;

        public DerivativeOptAttribute()
            : base(Tags.DerivativeOptAttribute) { }
        public DerivativeOptAttribute(char val)
            : base(Tags.DerivativeOptAttribute, val) { }

    }


    /// <summary>
    /// DerivativeContractMultiplier Field
    /// </summary>/
    public sealed class DerivativeContractMultiplier : DecimalField
    {
        public const int TAG = 1266;

        public DerivativeContractMultiplier()
            : base(Tags.DerivativeContractMultiplier) { }
        public DerivativeContractMultiplier(Decimal val)
            : base(Tags.DerivativeContractMultiplier, val) { }

    }


    /// <summary>
    /// DerivativeMinPriceIncrement Field
    /// </summary>/
    public sealed class DerivativeMinPriceIncrement : DecimalField
    {
        public const int TAG = 1267;

        public DerivativeMinPriceIncrement()
            : base(Tags.DerivativeMinPriceIncrement) { }
        public DerivativeMinPriceIncrement(Decimal val)
            : base(Tags.DerivativeMinPriceIncrement, val) { }

    }


    /// <summary>
    /// DerivativeMinPriceIncrementAmount Field
    /// </summary>/
    public sealed class DerivativeMinPriceIncrementAmount : DecimalField
    {
        public const int TAG = 1268;

        public DerivativeMinPriceIncrementAmount()
            : base(Tags.DerivativeMinPriceIncrementAmount) { }
        public DerivativeMinPriceIncrementAmount(Decimal val)
            : base(Tags.DerivativeMinPriceIncrementAmount, val) { }

    }


    /// <summary>
    /// DerivativeUnitOfMeasure Field
    /// </summary>/
    public sealed class DerivativeUnitOfMeasure : StringField
    {
        public const int TAG = 1269;

        public DerivativeUnitOfMeasure()
            : base(Tags.DerivativeUnitOfMeasure) { }
        public DerivativeUnitOfMeasure(string val)
            : base(Tags.DerivativeUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DerivativeUnitOfMeasureQty Field
    /// </summary>/
    public sealed class DerivativeUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1270;

        public DerivativeUnitOfMeasureQty()
            : base(Tags.DerivativeUnitOfMeasureQty) { }
        public DerivativeUnitOfMeasureQty(Decimal val)
            : base(Tags.DerivativeUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// DerivativeTimeUnit Field
    /// </summary>/
    public sealed class DerivativeTimeUnit : StringField
    {
        public const int TAG = 1271;

        public DerivativeTimeUnit()
            : base(Tags.DerivativeTimeUnit) { }
        public DerivativeTimeUnit(string val)
            : base(Tags.DerivativeTimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// DerivativeSecurityExchange Field
    /// </summary>/
    public sealed class DerivativeSecurityExchange : StringField
    {
        public const int TAG = 1272;

        public DerivativeSecurityExchange()
            : base(Tags.DerivativeSecurityExchange) { }
        public DerivativeSecurityExchange(string val)
            : base(Tags.DerivativeSecurityExchange, val) { }

    }


    /// <summary>
    /// DerivativePositionLimit Field
    /// </summary>/
    public sealed class DerivativePositionLimit : IntField
    {
        public const int TAG = 1273;

        public DerivativePositionLimit()
            : base(Tags.DerivativePositionLimit) { }
        public DerivativePositionLimit(int val)
            : base(Tags.DerivativePositionLimit, val) { }

    }


    /// <summary>
    /// DerivativeNTPositionLimit Field
    /// </summary>/
    public sealed class DerivativeNTPositionLimit : IntField
    {
        public const int TAG = 1274;

        public DerivativeNTPositionLimit()
            : base(Tags.DerivativeNTPositionLimit) { }
        public DerivativeNTPositionLimit(int val)
            : base(Tags.DerivativeNTPositionLimit, val) { }

    }


    /// <summary>
    /// DerivativeIssuer Field
    /// </summary>/
    public sealed class DerivativeIssuer : StringField
    {
        public const int TAG = 1275;

        public DerivativeIssuer()
            : base(Tags.DerivativeIssuer) { }
        public DerivativeIssuer(string val)
            : base(Tags.DerivativeIssuer, val) { }

    }


    /// <summary>
    /// DerivativeIssueDate Field
    /// </summary>/
    public sealed class DerivativeIssueDate : StringField
    {
        public const int TAG = 1276;

        public DerivativeIssueDate()
            : base(Tags.DerivativeIssueDate) { }
        public DerivativeIssueDate(string val)
            : base(Tags.DerivativeIssueDate, val) { }

    }


    /// <summary>
    /// DerivativeEncodedIssuerLen Field
    /// </summary>/
    public sealed class DerivativeEncodedIssuerLen : IntField
    {
        public const int TAG = 1277;

        public DerivativeEncodedIssuerLen()
            : base(Tags.DerivativeEncodedIssuerLen) { }
        public DerivativeEncodedIssuerLen(int val)
            : base(Tags.DerivativeEncodedIssuerLen, val) { }

    }


    /// <summary>
    /// DerivativeEncodedIssuer Field
    /// </summary>/
    public sealed class DerivativeEncodedIssuer : StringField
    {
        public const int TAG = 1278;

        public DerivativeEncodedIssuer()
            : base(Tags.DerivativeEncodedIssuer) { }
        public DerivativeEncodedIssuer(string val)
            : base(Tags.DerivativeEncodedIssuer, val) { }

    }


    /// <summary>
    /// DerivativeSecurityDesc Field
    /// </summary>/
    public sealed class DerivativeSecurityDesc : StringField
    {
        public const int TAG = 1279;

        public DerivativeSecurityDesc()
            : base(Tags.DerivativeSecurityDesc) { }
        public DerivativeSecurityDesc(string val)
            : base(Tags.DerivativeSecurityDesc, val) { }

    }


    /// <summary>
    /// DerivativeEncodedSecurityDescLen Field
    /// </summary>/
    public sealed class DerivativeEncodedSecurityDescLen : IntField
    {
        public const int TAG = 1280;

        public DerivativeEncodedSecurityDescLen()
            : base(Tags.DerivativeEncodedSecurityDescLen) { }
        public DerivativeEncodedSecurityDescLen(int val)
            : base(Tags.DerivativeEncodedSecurityDescLen, val) { }

    }


    /// <summary>
    /// DerivativeEncodedSecurityDesc Field
    /// </summary>/
    public sealed class DerivativeEncodedSecurityDesc : StringField
    {
        public const int TAG = 1281;

        public DerivativeEncodedSecurityDesc()
            : base(Tags.DerivativeEncodedSecurityDesc) { }
        public DerivativeEncodedSecurityDesc(string val)
            : base(Tags.DerivativeEncodedSecurityDesc, val) { }

    }


    /// <summary>
    /// DerivativeSecurityXMLLen Field
    /// </summary>/
    public sealed class DerivativeSecurityXMLLen : IntField
    {
        public const int TAG = 1282;

        public DerivativeSecurityXMLLen()
            : base(Tags.DerivativeSecurityXMLLen) { }
        public DerivativeSecurityXMLLen(int val)
            : base(Tags.DerivativeSecurityXMLLen, val) { }

    }


    /// <summary>
    /// DerivativeSecurityXML Field
    /// </summary>/
    public sealed class DerivativeSecurityXML : StringField
    {
        public const int TAG = 1283;

        public DerivativeSecurityXML()
            : base(Tags.DerivativeSecurityXML) { }
        public DerivativeSecurityXML(string val)
            : base(Tags.DerivativeSecurityXML, val) { }

    }


    /// <summary>
    /// DerivativeSecurityXMLSchema Field
    /// </summary>/
    public sealed class DerivativeSecurityXMLSchema : StringField
    {
        public const int TAG = 1284;

        public DerivativeSecurityXMLSchema()
            : base(Tags.DerivativeSecurityXMLSchema) { }
        public DerivativeSecurityXMLSchema(string val)
            : base(Tags.DerivativeSecurityXMLSchema, val) { }

    }


    /// <summary>
    /// DerivativeContractSettlMonth Field
    /// </summary>/
    public sealed class DerivativeContractSettlMonth : StringField
    {
        public const int TAG = 1285;

        public DerivativeContractSettlMonth()
            : base(Tags.DerivativeContractSettlMonth) { }
        public DerivativeContractSettlMonth(string val)
            : base(Tags.DerivativeContractSettlMonth, val) { }

    }


    /// <summary>
    /// NoDerivativeEvents Field
    /// </summary>/
    public sealed class NoDerivativeEvents : IntField
    {
        public const int TAG = 1286;

        public NoDerivativeEvents()
            : base(Tags.NoDerivativeEvents) { }
        public NoDerivativeEvents(int val)
            : base(Tags.NoDerivativeEvents, val) { }

    }


    /// <summary>
    /// DerivativeEventType Field
    /// </summary>/
    public sealed class DerivativeEventType : IntField
    {
        public const int TAG = 1287;

        public DerivativeEventType()
            : base(Tags.DerivativeEventType) { }
        public DerivativeEventType(int val)
            : base(Tags.DerivativeEventType, val) { }


        // Field Enumerations
        public const int PUT = 1;
        public const int CALL = 2;
        public const int TENDER = 3;
        public const int SINKING_FUND_CALL = 4;
        public const int ACTIVATION = 5;
        public const int INACTIVATION = 6;
        public const int LAST_ELIGIBLE_TRADE_DATE = 7;
        public const int SWAP_START_DATE = 8;
        public const int SWAP_END_DATE = 9;
        public const int SWAP_ROLL_DATE = 10;
        public const int SWAP_NEXT_START_DATE = 11;
        public const int SWAP_NEXT_ROLL_DATE = 12;
        public const int FIRST_DELIVERY_DATE = 13;
        public const int LAST_DELIVERY_DATE = 14;
        public const int INITIAL_INVENTORY_DUE_DATE = 15;
        public const int FINAL_INVENTORY_DUE_DATE = 16;
        public const int FIRST_INTENT_DATE = 17;
        public const int LAST_INTENT_DATE = 18;
        public const int POSITION_REMOVAL_DATE = 19;
        public const int OTHER = 99;
        public const int MINIMUM_NOTICE = 20;
        public const int DELIVERY_START_TIME = 21;
        public const int DELIVERY_END_TIME = 22;
        public const int FIRST_NOTICE_DATE = 23;
        public const int LAST_NOTICE_DATE = 24;
        public const int FIRST_EXERCISE_DATE = 25;
        public const int REDEMPTION_DATE = 26;
        public const int TRADE_CONTINUATION_EFFECTIVE_DATE = 27;
    }


    /// <summary>
    /// DerivativeEventDate Field
    /// </summary>/
    public sealed class DerivativeEventDate : StringField
    {
        public const int TAG = 1288;

        public DerivativeEventDate()
            : base(Tags.DerivativeEventDate) { }
        public DerivativeEventDate(string val)
            : base(Tags.DerivativeEventDate, val) { }

    }


    /// <summary>
    /// DerivativeEventTime Field
    /// </summary>/
    public sealed class DerivativeEventTime : DateTimeField
    {
        public const int TAG = 1289;

        public DerivativeEventTime()
            : base(Tags.DerivativeEventTime) { }
        public DerivativeEventTime(DateTime val)
            : base(Tags.DerivativeEventTime, val) { }
        public DerivativeEventTime(DateTime val, bool showMilliseconds)
            : base(Tags.DerivativeEventTime, val, showMilliseconds) { }
        public DerivativeEventTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.DerivativeEventTime, val, precision) { }

    }


    /// <summary>
    /// DerivativeEventPx Field
    /// </summary>/
    public sealed class DerivativeEventPx : DecimalField
    {
        public const int TAG = 1290;

        public DerivativeEventPx()
            : base(Tags.DerivativeEventPx) { }
        public DerivativeEventPx(Decimal val)
            : base(Tags.DerivativeEventPx, val) { }

    }


    /// <summary>
    /// DerivativeEventText Field
    /// </summary>/
    public sealed class DerivativeEventText : StringField
    {
        public const int TAG = 1291;

        public DerivativeEventText()
            : base(Tags.DerivativeEventText) { }
        public DerivativeEventText(string val)
            : base(Tags.DerivativeEventText, val) { }

    }


    /// <summary>
    /// NoDerivativeInstrumentParties Field
    /// </summary>/
    public sealed class NoDerivativeInstrumentParties : IntField
    {
        public const int TAG = 1292;

        public NoDerivativeInstrumentParties()
            : base(Tags.NoDerivativeInstrumentParties) { }
        public NoDerivativeInstrumentParties(int val)
            : base(Tags.NoDerivativeInstrumentParties, val) { }

    }


    /// <summary>
    /// DerivativeInstrumentPartyID Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartyID : StringField
    {
        public const int TAG = 1293;

        public DerivativeInstrumentPartyID()
            : base(Tags.DerivativeInstrumentPartyID) { }
        public DerivativeInstrumentPartyID(string val)
            : base(Tags.DerivativeInstrumentPartyID, val) { }

    }


    /// <summary>
    /// DerivativeInstrumentPartyIDSource Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartyIDSource : CharField
    {
        public const int TAG = 1294;

        public DerivativeInstrumentPartyIDSource()
            : base(Tags.DerivativeInstrumentPartyIDSource) { }
        public DerivativeInstrumentPartyIDSource(char val)
            : base(Tags.DerivativeInstrumentPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// DerivativeInstrumentPartyRole Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartyRole : IntField
    {
        public const int TAG = 1295;

        public DerivativeInstrumentPartyRole()
            : base(Tags.DerivativeInstrumentPartyRole) { }
        public DerivativeInstrumentPartyRole(int val)
            : base(Tags.DerivativeInstrumentPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoDerivativeInstrumentPartySubIDs Field
    /// </summary>/
    public sealed class NoDerivativeInstrumentPartySubIDs : IntField
    {
        public const int TAG = 1296;

        public NoDerivativeInstrumentPartySubIDs()
            : base(Tags.NoDerivativeInstrumentPartySubIDs) { }
        public NoDerivativeInstrumentPartySubIDs(int val)
            : base(Tags.NoDerivativeInstrumentPartySubIDs, val) { }

    }


    /// <summary>
    /// DerivativeInstrumentPartySubID Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartySubID : StringField
    {
        public const int TAG = 1297;

        public DerivativeInstrumentPartySubID()
            : base(Tags.DerivativeInstrumentPartySubID) { }
        public DerivativeInstrumentPartySubID(string val)
            : base(Tags.DerivativeInstrumentPartySubID, val) { }

    }


    /// <summary>
    /// DerivativeInstrumentPartySubIDType Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartySubIDType : IntField
    {
        public const int TAG = 1298;

        public DerivativeInstrumentPartySubIDType()
            : base(Tags.DerivativeInstrumentPartySubIDType) { }
        public DerivativeInstrumentPartySubIDType(int val)
            : base(Tags.DerivativeInstrumentPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// DerivativeExerciseStyle Field
    /// </summary>/
    public sealed class DerivativeExerciseStyle : IntField
    {
        public const int TAG = 1299;

        public DerivativeExerciseStyle()
            : base(Tags.DerivativeExerciseStyle) { }
        public DerivativeExerciseStyle(int val)
            : base(Tags.DerivativeExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// MarketSegmentID Field
    /// </summary>/
    public sealed class MarketSegmentID : StringField
    {
        public const int TAG = 1300;

        public MarketSegmentID()
            : base(Tags.MarketSegmentID) { }
        public MarketSegmentID(string val)
            : base(Tags.MarketSegmentID, val) { }

    }


    /// <summary>
    /// MarketID Field
    /// </summary>/
    public sealed class MarketID : StringField
    {
        public const int TAG = 1301;

        public MarketID()
            : base(Tags.MarketID) { }
        public MarketID(string val)
            : base(Tags.MarketID, val) { }

    }


    /// <summary>
    /// MaturityMonthYearIncrementUnits Field
    /// </summary>/
    public sealed class MaturityMonthYearIncrementUnits : IntField
    {
        public const int TAG = 1302;

        public MaturityMonthYearIncrementUnits()
            : base(Tags.MaturityMonthYearIncrementUnits) { }
        public MaturityMonthYearIncrementUnits(int val)
            : base(Tags.MaturityMonthYearIncrementUnits, val) { }


        // Field Enumerations
        public const int MONTHS = 0;
        public const int DAYS = 1;
        public const int WEEKS = 2;
        public const int YEARS = 3;
    }


    /// <summary>
    /// MaturityMonthYearFormat Field
    /// </summary>/
    public sealed class MaturityMonthYearFormat : IntField
    {
        public const int TAG = 1303;

        public MaturityMonthYearFormat()
            : base(Tags.MaturityMonthYearFormat) { }
        public MaturityMonthYearFormat(int val)
            : base(Tags.MaturityMonthYearFormat, val) { }


        // Field Enumerations
        public const int YEARMONTH_ONLY = 0;
        public const int YEARMONTHDAY = 1;
        public const int YEARMONTHWEEK = 2;
    }


    /// <summary>
    /// StrikeExerciseStyle Field
    /// </summary>/
    public sealed class StrikeExerciseStyle : IntField
    {
        public const int TAG = 1304;

        public StrikeExerciseStyle()
            : base(Tags.StrikeExerciseStyle) { }
        public StrikeExerciseStyle(int val)
            : base(Tags.StrikeExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// SecondaryPriceLimitType Field
    /// </summary>/
    public sealed class SecondaryPriceLimitType : IntField
    {
        public const int TAG = 1305;

        public SecondaryPriceLimitType()
            : base(Tags.SecondaryPriceLimitType) { }
        public SecondaryPriceLimitType(int val)
            : base(Tags.SecondaryPriceLimitType, val) { }


        // Field Enumerations
        public const int PRICE = 0;
        public const int TICKS = 1;
        public const int PERCENTAGE = 2;
    }


    /// <summary>
    /// PriceLimitType Field
    /// </summary>/
    public sealed class PriceLimitType : IntField
    {
        public const int TAG = 1306;

        public PriceLimitType()
            : base(Tags.PriceLimitType) { }
        public PriceLimitType(int val)
            : base(Tags.PriceLimitType, val) { }


        // Field Enumerations
        public const int PRICE = 0;
        public const int TICKS = 1;
        public const int PERCENTAGE = 2;
    }


    /// <summary>
    /// DerivativeSecurityListRequestType Field
    /// </summary>/
    public sealed class DerivativeSecurityListRequestType : IntField
    {
        public const int TAG = 1307;

        public DerivativeSecurityListRequestType()
            : base(Tags.DerivativeSecurityListRequestType) { }
        public DerivativeSecurityListRequestType(int val)
            : base(Tags.DerivativeSecurityListRequestType, val) { }


        // Field Enumerations
        public const int SYMBOL = 0;
        public const int SECURITYTYPE_AND_OR_CFICODE = 1;
        public const int PRODUCT = 2;
        public const int TRADINGSESSIONID = 3;
        public const int ALL_SECURITIES = 4;
        public const int UNDELYINGSYMBOL = 5;
        public const int UNDERLYING_SECURITYTYPE_AND_OR_CFICODE = 6;
        public const int UNDERLYING_PRODUCT = 7;
        public const int MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID = 8;
    }


    /// <summary>
    /// ExecInstValue Field
    /// </summary>/
    public sealed class ExecInstValue : StringField
    {
        public const int TAG = 1308;

        public ExecInstValue()
            : base(Tags.ExecInstValue) { }
        public ExecInstValue(string val)
            : base(Tags.ExecInstValue, val) { }


        // Field Enumerations
        public const string STAY_ON_OFFER_SIDE = "0";
        public const string NOT_HELD = "1";
        public const string WORK = "2";
        public const string GO_ALONG = "3";
        public const string OVER_THE_DAY = "4";
        public const string HELD = "5";
        public const string PARTICIPATE_DONT_INITIATE = "6";
        public const string STRICT_SCALE = "7";
        public const string TRY_TO_SCALE = "8";
        public const string STAY_ON_BID_SIDE = "9";
        public const string NO_CROSS = "A";
        public const string OK_TO_CROSS = "B";
        public const string CALL_FIRST = "C";
        public const string PERCENT_OF_VOLUME = "D";
        public const string DO_NOT_INCREASE = "E";
        public const string DO_NOT_REDUCE = "F";
        public const string ALL_OR_NONE = "G";
        public const string REINSTATE_ON_SYSTEM_FAILURE = "H";
        public const string INSTITUTIONS_ONLY = "I";
        public const string REINSTATE_ON_TRADING_HALT = "J";
        public const string CANCEL_ON_TRADING_HALT = "K";
        public const string LAST_PEG = "L";
        public const string MID_PRICE_PEG = "M";
        public const string NON_NEGOTIABLE = "N";
        public const string OPENING_PEG = "O";
        public const string MARKET_PEG = "P";
        public const string CANCEL_ON_SYSTEM_FAILURE = "Q";
        public const string PRIMARY_PEG = "R";
        public const string SUSPEND = "S";
        public const string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "T";
        public const string CUSTOMER_DISPLAY_INSTRUCTION = "U";
        public const string NETTING = "V";
        public const string PEG_TO_VWAP = "W";
        public const string TRADE_ALONG = "X";
        public const string TRY_TO_STOP = "Y";
        public const string CANCEL_IF_NOT_BEST = "Z";
        public const string TRAILING_STOP_PEG = "a";
        public const string STRICT_LIMIT = "b";
        public const string IGNORE_PRICE_VALIDITY_CHECKS = "c";
        public const string PEG_TO_LIMIT_PRICE = "d";
        public const string WORK_TO_TARGET_STRATEGY = "e";
        public const string INTERMARKET_SWEEP = "f";
        public const string EXTERNAL_ROUTING_ALLOWED = "g";
        public const string EXTERNAL_ROUTING_NOT_ALLOWED = "h";
        public const string IMBALANCE_ONLY = "i";
        public const string SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = "j";
        public const string BEST_EXECUTION = "k";
        public const string SUSPEND_ON_SYSTEM_FAILURE = "l";
        public const string SUSPEND_ON_TRADING_HALT = "m";
        public const string REINSTATE_ON_CONNECTION_LOSS = "n";
        public const string CANCEL_ON_CONNECTION_LOSS = "o";
        public const string SUSPEND_ON_CONNECTION_LOSS = "p";
        public const string RELEASE = "q";
        public const string EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED = "r";
        public const string EXECUTE_AS_DURATION_NEUTRAL = "s";
        public const string EXECUTE_AS_FX_NEUTRAL = "t";
        public const string MINIMUM_GUARANTEED_FILL_ELIGIBLE = "u";
        public const string BYPASS_NON_DISPLAYED_LIQUIDITY = "v";
        public const string LOCK = "w";
        public const string IGNORE_NOTIONAL_VALUE_CHECKS = "x";
        public const string TRADE_AT_REFERENCE_PRICE = "y";
        public const string ALLOW_FACILITATION = "z";
    }


    /// <summary>
    /// NoTradingSessionRules Field
    /// </summary>/
    public sealed class NoTradingSessionRules : IntField
    {
        public const int TAG = 1309;

        public NoTradingSessionRules()
            : base(Tags.NoTradingSessionRules) { }
        public NoTradingSessionRules(int val)
            : base(Tags.NoTradingSessionRules, val) { }

    }


    /// <summary>
    /// NoMarketSegments Field
    /// </summary>/
    public sealed class NoMarketSegments : IntField
    {
        public const int TAG = 1310;

        public NoMarketSegments()
            : base(Tags.NoMarketSegments) { }
        public NoMarketSegments(int val)
            : base(Tags.NoMarketSegments, val) { }

    }


    /// <summary>
    /// NoDerivativeInstrAttrib Field
    /// </summary>/
    public sealed class NoDerivativeInstrAttrib : IntField
    {
        public const int TAG = 1311;

        public NoDerivativeInstrAttrib()
            : base(Tags.NoDerivativeInstrAttrib) { }
        public NoDerivativeInstrAttrib(int val)
            : base(Tags.NoDerivativeInstrAttrib, val) { }

    }


    /// <summary>
    /// NoNestedInstrAttrib Field
    /// </summary>/
    public sealed class NoNestedInstrAttrib : IntField
    {
        public const int TAG = 1312;

        public NoNestedInstrAttrib()
            : base(Tags.NoNestedInstrAttrib) { }
        public NoNestedInstrAttrib(int val)
            : base(Tags.NoNestedInstrAttrib, val) { }

    }


    /// <summary>
    /// DerivativeInstrAttribType Field
    /// </summary>/
    public sealed class DerivativeInstrAttribType : IntField
    {
        public const int TAG = 1313;

        public DerivativeInstrAttribType()
            : base(Tags.DerivativeInstrAttribType) { }
        public DerivativeInstrAttribType(int val)
            : base(Tags.DerivativeInstrAttribType, val) { }


        // Field Enumerations
        public const int FLAT = 1;
        public const int ZERO_COUPON = 2;
        public const int INTEREST_BEARING = 3;
        public const int NO_PERIODIC_PAYMENTS = 4;
        public const int VARIABLE_RATE = 5;
        public const int LESS_FEE_FOR_PUT = 6;
        public const int STEPPED_COUPON = 7;
        public const int COUPON_PERIOD = 8;
        public const int WHEN_AND_IF_ISSUED = 9;
        public const int ORIGINAL_ISSUE_DISCOUNT = 10;
        public const int CALLABLE_PUTTABLE = 11;
        public const int ESCROWED_TO_MATURITY = 12;
        public const int ESCROWED_TO_REDEMPTION_DATE = 13;
        public const int PRE_REFUNDED = 14;
        public const int IN_DEFAULT = 15;
        public const int UNRATED = 16;
        public const int TAXABLE = 17;
        public const int INDEXED = 18;
        public const int SUBJECT_TO_ALTERNATIVE_MINIMUM_TAX = 19;
        public const int ORIGINAL_ISSUE_DISCOUNT_PRICE = 20;
        public const int CALLABLE_BELOW_MATURITY_VALUE = 21;
        public const int CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTERED = 22;
        public const int PRICE_TICK_RULES_FOR_SECURITY = 23;
        public const int TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITY = 24;
        public const int INSTRUMENT_DENOMINATOR = 25;
        public const int INSTRUMENT_NUMERATOR = 26;
        public const int INSTRUMENT_PRICE_PRECISION = 27;
        public const int INSTRUMENT_STRIKE_PRICE = 28;
        public const int TRADEABLE_INDICATOR = 29;
        public const int TEXT = 99;
        public const int INSTRUMENT_IS_ELIGIBLE_TO_ACCEPT_ANONYMOUS_ORDERS = 30;
        public const int MINIMUM_GUARANTEED_FILL_VOLUME = 31;
        public const int MINIMUM_GUARANTEED_FILL_STATUS = 32;
        public const int TRADE_AT_SETTLEMENT = 33;
        public const int TEST_INSTRUMENT = 34;
        public const int DUMMY_INSTRUMENT = 35;
        public const int NEGATIVE_SETTLEMENT_PRICE_ELIGIBILITY = 36;
        public const int NEGATIVE_STRIKE_PRICE_ELIGIBILITY = 37;
        public const int US_STANDARD_CONTRACT_INDICATOR = 38;
        public const int ADMITTED_TO_TRADING_ON_A_TRADING_VENUE = 39;
        public const int AVERAGE_DAILY_NOTIONAL_AMOUNT = 40;
        public const int AVERAGE_DAILY_NUMBER_OF_TRADES = 41;
    }


    /// <summary>
    /// DerivativeInstrAttribValue Field
    /// </summary>/
    public sealed class DerivativeInstrAttribValue : StringField
    {
        public const int TAG = 1314;

        public DerivativeInstrAttribValue()
            : base(Tags.DerivativeInstrAttribValue) { }
        public DerivativeInstrAttribValue(string val)
            : base(Tags.DerivativeInstrAttribValue, val) { }

    }


    /// <summary>
    /// DerivativePriceUnitOfMeasure Field
    /// </summary>/
    public sealed class DerivativePriceUnitOfMeasure : StringField
    {
        public const int TAG = 1315;

        public DerivativePriceUnitOfMeasure()
            : base(Tags.DerivativePriceUnitOfMeasure) { }
        public DerivativePriceUnitOfMeasure(string val)
            : base(Tags.DerivativePriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DerivativePriceUnitOfMeasureQty Field
    /// </summary>/
    public sealed class DerivativePriceUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1316;

        public DerivativePriceUnitOfMeasureQty()
            : base(Tags.DerivativePriceUnitOfMeasureQty) { }
        public DerivativePriceUnitOfMeasureQty(Decimal val)
            : base(Tags.DerivativePriceUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// DerivativeSettlMethod Field
    /// </summary>/
    public sealed class DerivativeSettlMethod : StringField
    {
        public const int TAG = 1317;

        public DerivativeSettlMethod()
            : base(Tags.DerivativeSettlMethod) { }
        public DerivativeSettlMethod(string val)
            : base(Tags.DerivativeSettlMethod, val) { }


        // Field Enumerations
        public const string CASH_SETTLEMENT_REQUIRED = "C";
        public const string PHYSICAL_SETTLEMENT_REQUIRED = "P";
        public const string ELECTION_AT_EXERCISE = "E";
    }


    /// <summary>
    /// DerivativePriceQuoteMethod Field
    /// </summary>/
    public sealed class DerivativePriceQuoteMethod : StringField
    {
        public const int TAG = 1318;

        public DerivativePriceQuoteMethod()
            : base(Tags.DerivativePriceQuoteMethod) { }
        public DerivativePriceQuoteMethod(string val)
            : base(Tags.DerivativePriceQuoteMethod, val) { }


        // Field Enumerations
        public const string STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = "STD";
        public const string INDEX = "INX";
        public const string INTEREST_RATE_INDEX = "INT";
        public const string PERCENT_OF_PAR = "PCTPAR";
    }


    /// <summary>
    /// DerivativeFuturesValuationMethod Field
    /// </summary>/
    public sealed class DerivativeFuturesValuationMethod : StringField
    {
        public const int TAG = 1319;

        public DerivativeFuturesValuationMethod()
            : base(Tags.DerivativeFuturesValuationMethod) { }
        public DerivativeFuturesValuationMethod(string val)
            : base(Tags.DerivativeFuturesValuationMethod, val) { }

    }


    /// <summary>
    /// DerivativeListMethod Field
    /// </summary>/
    public sealed class DerivativeListMethod : IntField
    {
        public const int TAG = 1320;

        public DerivativeListMethod()
            : base(Tags.DerivativeListMethod) { }
        public DerivativeListMethod(int val)
            : base(Tags.DerivativeListMethod, val) { }


        // Field Enumerations
        public const int PRE_LISTED_ONLY = 0;
        public const int USER_REQUESTED = 1;
    }


    /// <summary>
    /// DerivativeCapPrice Field
    /// </summary>/
    public sealed class DerivativeCapPrice : DecimalField
    {
        public const int TAG = 1321;

        public DerivativeCapPrice()
            : base(Tags.DerivativeCapPrice) { }
        public DerivativeCapPrice(Decimal val)
            : base(Tags.DerivativeCapPrice, val) { }

    }


    /// <summary>
    /// DerivativeFloorPrice Field
    /// </summary>/
    public sealed class DerivativeFloorPrice : DecimalField
    {
        public const int TAG = 1322;

        public DerivativeFloorPrice()
            : base(Tags.DerivativeFloorPrice) { }
        public DerivativeFloorPrice(Decimal val)
            : base(Tags.DerivativeFloorPrice, val) { }

    }


    /// <summary>
    /// DerivativePutOrCall Field
    /// </summary>/
    public sealed class DerivativePutOrCall : IntField
    {
        public const int TAG = 1323;

        public DerivativePutOrCall()
            : base(Tags.DerivativePutOrCall) { }
        public DerivativePutOrCall(int val)
            : base(Tags.DerivativePutOrCall, val) { }


        // Field Enumerations
        public const int PUT = 0;
        public const int CALL = 1;
        public const int OTHER = 2;
        public const int CHOOSER = 3;
    }


    /// <summary>
    /// ListUpdateAction Field
    /// </summary>/
    public sealed class ListUpdateAction : CharField
    {
        public const int TAG = 1324;

        public ListUpdateAction()
            : base(Tags.ListUpdateAction) { }
        public ListUpdateAction(char val)
            : base(Tags.ListUpdateAction, val) { }


        // Field Enumerations
        public const char ADD = 'A';
        public const char DELETE = 'D';
        public const char MODIFY = 'M';
        public const char SNAPSHOT = 'S';
    }


    /// <summary>
    /// ParentMktSegmID Field
    /// </summary>/
    public sealed class ParentMktSegmID : StringField
    {
        public const int TAG = 1325;

        public ParentMktSegmID()
            : base(Tags.ParentMktSegmID) { }
        public ParentMktSegmID(string val)
            : base(Tags.ParentMktSegmID, val) { }

    }


    /// <summary>
    /// TradingSessionDesc Field
    /// </summary>/
    public sealed class TradingSessionDesc : StringField
    {
        public const int TAG = 1326;

        public TradingSessionDesc()
            : base(Tags.TradingSessionDesc) { }
        public TradingSessionDesc(string val)
            : base(Tags.TradingSessionDesc, val) { }

    }


    /// <summary>
    /// TradSesUpdateAction Field
    /// </summary>/
    public sealed class TradSesUpdateAction : CharField
    {
        public const int TAG = 1327;

        public TradSesUpdateAction()
            : base(Tags.TradSesUpdateAction) { }
        public TradSesUpdateAction(char val)
            : base(Tags.TradSesUpdateAction, val) { }


        // Field Enumerations
        public const char ADD = 'A';
        public const char DELETE = 'D';
        public const char MODIFY = 'M';
    }


    /// <summary>
    /// RejectText Field
    /// </summary>/
    public sealed class RejectText : StringField
    {
        public const int TAG = 1328;

        public RejectText()
            : base(Tags.RejectText) { }
        public RejectText(string val)
            : base(Tags.RejectText, val) { }

    }


    /// <summary>
    /// FeeMultiplier Field
    /// </summary>/
    public sealed class FeeMultiplier : DecimalField
    {
        public const int TAG = 1329;

        public FeeMultiplier()
            : base(Tags.FeeMultiplier) { }
        public FeeMultiplier(Decimal val)
            : base(Tags.FeeMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingLegSymbol Field
    /// </summary>/
    public sealed class UnderlyingLegSymbol : StringField
    {
        public const int TAG = 1330;

        public UnderlyingLegSymbol()
            : base(Tags.UnderlyingLegSymbol) { }
        public UnderlyingLegSymbol(string val)
            : base(Tags.UnderlyingLegSymbol, val) { }

    }


    /// <summary>
    /// UnderlyingLegSymbolSfx Field
    /// </summary>/
    public sealed class UnderlyingLegSymbolSfx : StringField
    {
        public const int TAG = 1331;

        public UnderlyingLegSymbolSfx()
            : base(Tags.UnderlyingLegSymbolSfx) { }
        public UnderlyingLegSymbolSfx(string val)
            : base(Tags.UnderlyingLegSymbolSfx, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityID Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityID : StringField
    {
        public const int TAG = 1332;

        public UnderlyingLegSecurityID()
            : base(Tags.UnderlyingLegSecurityID) { }
        public UnderlyingLegSecurityID(string val)
            : base(Tags.UnderlyingLegSecurityID, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityIDSource Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityIDSource : StringField
    {
        public const int TAG = 1333;

        public UnderlyingLegSecurityIDSource()
            : base(Tags.UnderlyingLegSecurityIDSource) { }
        public UnderlyingLegSecurityIDSource(string val)
            : base(Tags.UnderlyingLegSecurityIDSource, val) { }

    }


    /// <summary>
    /// NoUnderlyingLegSecurityAltID Field
    /// </summary>/
    public sealed class NoUnderlyingLegSecurityAltID : IntField
    {
        public const int TAG = 1334;

        public NoUnderlyingLegSecurityAltID()
            : base(Tags.NoUnderlyingLegSecurityAltID) { }
        public NoUnderlyingLegSecurityAltID(int val)
            : base(Tags.NoUnderlyingLegSecurityAltID, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityAltID Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityAltID : StringField
    {
        public const int TAG = 1335;

        public UnderlyingLegSecurityAltID()
            : base(Tags.UnderlyingLegSecurityAltID) { }
        public UnderlyingLegSecurityAltID(string val)
            : base(Tags.UnderlyingLegSecurityAltID, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityAltIDSource Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityAltIDSource : StringField
    {
        public const int TAG = 1336;

        public UnderlyingLegSecurityAltIDSource()
            : base(Tags.UnderlyingLegSecurityAltIDSource) { }
        public UnderlyingLegSecurityAltIDSource(string val)
            : base(Tags.UnderlyingLegSecurityAltIDSource, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityType Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityType : StringField
    {
        public const int TAG = 1337;

        public UnderlyingLegSecurityType()
            : base(Tags.UnderlyingLegSecurityType) { }
        public UnderlyingLegSecurityType(string val)
            : base(Tags.UnderlyingLegSecurityType, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecuritySubType Field
    /// </summary>/
    public sealed class UnderlyingLegSecuritySubType : StringField
    {
        public const int TAG = 1338;

        public UnderlyingLegSecuritySubType()
            : base(Tags.UnderlyingLegSecuritySubType) { }
        public UnderlyingLegSecuritySubType(string val)
            : base(Tags.UnderlyingLegSecuritySubType, val) { }

    }


    /// <summary>
    /// UnderlyingLegMaturityMonthYear Field
    /// </summary>/
    public sealed class UnderlyingLegMaturityMonthYear : StringField
    {
        public const int TAG = 1339;

        public UnderlyingLegMaturityMonthYear()
            : base(Tags.UnderlyingLegMaturityMonthYear) { }
        public UnderlyingLegMaturityMonthYear(string val)
            : base(Tags.UnderlyingLegMaturityMonthYear, val) { }

    }


    /// <summary>
    /// UnderlyingLegStrikePrice Field
    /// </summary>/
    public sealed class UnderlyingLegStrikePrice : DecimalField
    {
        public const int TAG = 1340;

        public UnderlyingLegStrikePrice()
            : base(Tags.UnderlyingLegStrikePrice) { }
        public UnderlyingLegStrikePrice(Decimal val)
            : base(Tags.UnderlyingLegStrikePrice, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityExchange Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityExchange : StringField
    {
        public const int TAG = 1341;

        public UnderlyingLegSecurityExchange()
            : base(Tags.UnderlyingLegSecurityExchange) { }
        public UnderlyingLegSecurityExchange(string val)
            : base(Tags.UnderlyingLegSecurityExchange, val) { }

    }


    /// <summary>
    /// NoOfLegUnderlyings Field
    /// </summary>/
    public sealed class NoOfLegUnderlyings : IntField
    {
        public const int TAG = 1342;

        public NoOfLegUnderlyings()
            : base(Tags.NoOfLegUnderlyings) { }
        public NoOfLegUnderlyings(int val)
            : base(Tags.NoOfLegUnderlyings, val) { }

    }


    /// <summary>
    /// UnderlyingLegPutOrCall Field
    /// </summary>/
    public sealed class UnderlyingLegPutOrCall : IntField
    {
        public const int TAG = 1343;

        public UnderlyingLegPutOrCall()
            : base(Tags.UnderlyingLegPutOrCall) { }
        public UnderlyingLegPutOrCall(int val)
            : base(Tags.UnderlyingLegPutOrCall, val) { }

    }


    /// <summary>
    /// UnderlyingLegCFICode Field
    /// </summary>/
    public sealed class UnderlyingLegCFICode : StringField
    {
        public const int TAG = 1344;

        public UnderlyingLegCFICode()
            : base(Tags.UnderlyingLegCFICode) { }
        public UnderlyingLegCFICode(string val)
            : base(Tags.UnderlyingLegCFICode, val) { }

    }


    /// <summary>
    /// UnderlyingLegMaturityDate Field
    /// </summary>/
    public sealed class UnderlyingLegMaturityDate : StringField
    {
        public const int TAG = 1345;

        public UnderlyingLegMaturityDate()
            : base(Tags.UnderlyingLegMaturityDate) { }
        public UnderlyingLegMaturityDate(string val)
            : base(Tags.UnderlyingLegMaturityDate, val) { }

    }


    /// <summary>
    /// ApplReqID Field
    /// </summary>/
    public sealed class ApplReqID : StringField
    {
        public const int TAG = 1346;

        public ApplReqID()
            : base(Tags.ApplReqID) { }
        public ApplReqID(string val)
            : base(Tags.ApplReqID, val) { }

    }


    /// <summary>
    /// ApplReqType Field
    /// </summary>/
    public sealed class ApplReqType : IntField
    {
        public const int TAG = 1347;

        public ApplReqType()
            : base(Tags.ApplReqType) { }
        public ApplReqType(int val)
            : base(Tags.ApplReqType, val) { }


        // Field Enumerations
        public const int RETRANSMISSION_OF_APPLICATION_MESSAGES_FOR_THE_SPECIFIED_APPLICATIONS = 0;
        public const int SUBSCRIPTION_TO_THE_SPECIFIED_APPLICATIONS = 1;
        public const int REQUEST_FOR_THE_LAST_APPLLASTSEQNUM_PUBLISHED_FOR_THE_SPECIFIED_APPLICATIONS = 2;
        public const int REQUEST_VALID_SET_OF_APPLICATIONS = 3;
        public const int UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS = 4;
        public const int CANCEL_RETRANSMISSION = 5;
        public const int CANCEL_RETRANSMISSION_AND_UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS = 6;
    }


    /// <summary>
    /// ApplResponseType Field
    /// </summary>/
    public sealed class ApplResponseType : IntField
    {
        public const int TAG = 1348;

        public ApplResponseType()
            : base(Tags.ApplResponseType) { }
        public ApplResponseType(int val)
            : base(Tags.ApplResponseType, val) { }


        // Field Enumerations
        public const int REQUEST_SUCCESSFULLY_PROCESSED = 0;
        public const int APPLICATION_DOES_NOT_EXIST = 1;
        public const int MESSAGES_NOT_AVAILABLE = 2;
    }


    /// <summary>
    /// ApplTotalMessageCount Field
    /// </summary>/
    public sealed class ApplTotalMessageCount : IntField
    {
        public const int TAG = 1349;

        public ApplTotalMessageCount()
            : base(Tags.ApplTotalMessageCount) { }
        public ApplTotalMessageCount(int val)
            : base(Tags.ApplTotalMessageCount, val) { }

    }


    /// <summary>
    /// ApplLastSeqNum Field
    /// </summary>/
    public sealed class ApplLastSeqNum : IntField
    {
        public const int TAG = 1350;

        public ApplLastSeqNum()
            : base(Tags.ApplLastSeqNum) { }
        public ApplLastSeqNum(int val)
            : base(Tags.ApplLastSeqNum, val) { }

    }


    /// <summary>
    /// NoApplIDs Field
    /// </summary>/
    public sealed class NoApplIDs : IntField
    {
        public const int TAG = 1351;

        public NoApplIDs()
            : base(Tags.NoApplIDs) { }
        public NoApplIDs(int val)
            : base(Tags.NoApplIDs, val) { }

    }


    /// <summary>
    /// ApplResendFlag Field
    /// </summary>/
    public sealed class ApplResendFlag : BooleanField
    {
        public const int TAG = 1352;

        public ApplResendFlag()
            : base(Tags.ApplResendFlag) { }
        public ApplResendFlag(Boolean val)
            : base(Tags.ApplResendFlag, val) { }

    }


    /// <summary>
    /// ApplResponseID Field
    /// </summary>/
    public sealed class ApplResponseID : StringField
    {
        public const int TAG = 1353;

        public ApplResponseID()
            : base(Tags.ApplResponseID) { }
        public ApplResponseID(string val)
            : base(Tags.ApplResponseID, val) { }

    }


    /// <summary>
    /// ApplResponseError Field
    /// </summary>/
    public sealed class ApplResponseError : IntField
    {
        public const int TAG = 1354;

        public ApplResponseError()
            : base(Tags.ApplResponseError) { }
        public ApplResponseError(int val)
            : base(Tags.ApplResponseError, val) { }


        // Field Enumerations
        public const int APPLICATION_DOES_NOT_EXIST = 0;
        public const int MESSAGES_REQUESTED_ARE_NOT_AVAILABLE = 1;
        public const int USER_NOT_AUTHORIZED_FOR_APPLICATION = 2;
    }


    /// <summary>
    /// RefApplID Field
    /// </summary>/
    public sealed class RefApplID : StringField
    {
        public const int TAG = 1355;

        public RefApplID()
            : base(Tags.RefApplID) { }
        public RefApplID(string val)
            : base(Tags.RefApplID, val) { }

    }


    /// <summary>
    /// ApplReportID Field
    /// </summary>/
    public sealed class ApplReportID : StringField
    {
        public const int TAG = 1356;

        public ApplReportID()
            : base(Tags.ApplReportID) { }
        public ApplReportID(string val)
            : base(Tags.ApplReportID, val) { }

    }


    /// <summary>
    /// RefApplLastSeqNum Field
    /// </summary>/
    public sealed class RefApplLastSeqNum : IntField
    {
        public const int TAG = 1357;

        public RefApplLastSeqNum()
            : base(Tags.RefApplLastSeqNum) { }
        public RefApplLastSeqNum(int val)
            : base(Tags.RefApplLastSeqNum, val) { }

    }


    /// <summary>
    /// LegPutOrCall Field
    /// </summary>/
    public sealed class LegPutOrCall : IntField
    {
        public const int TAG = 1358;

        public LegPutOrCall()
            : base(Tags.LegPutOrCall) { }
        public LegPutOrCall(int val)
            : base(Tags.LegPutOrCall, val) { }


        // Field Enumerations
        public const int PUT = 0;
        public const int CALL = 1;
        public const int OTHER = 2;
        public const int CHOOSER = 3;
    }


    /// <summary>
    /// EncodedSymbolLen Field
    /// </summary>/
    public sealed class EncodedSymbolLen : IntField
    {
        public const int TAG = 1359;

        public EncodedSymbolLen()
            : base(Tags.EncodedSymbolLen) { }
        public EncodedSymbolLen(int val)
            : base(Tags.EncodedSymbolLen, val) { }

    }


    /// <summary>
    /// EncodedSymbol Field
    /// </summary>/
    public sealed class EncodedSymbol : StringField
    {
        public const int TAG = 1360;

        public EncodedSymbol()
            : base(Tags.EncodedSymbol) { }
        public EncodedSymbol(string val)
            : base(Tags.EncodedSymbol, val) { }

    }


    /// <summary>
    /// TotNoFills Field
    /// </summary>/
    public sealed class TotNoFills : IntField
    {
        public const int TAG = 1361;

        public TotNoFills()
            : base(Tags.TotNoFills) { }
        public TotNoFills(int val)
            : base(Tags.TotNoFills, val) { }

    }


    /// <summary>
    /// NoFills Field
    /// </summary>/
    public sealed class NoFills : IntField
    {
        public const int TAG = 1362;

        public NoFills()
            : base(Tags.NoFills) { }
        public NoFills(int val)
            : base(Tags.NoFills, val) { }

    }


    /// <summary>
    /// FillExecID Field
    /// </summary>/
    public sealed class FillExecID : StringField
    {
        public const int TAG = 1363;

        public FillExecID()
            : base(Tags.FillExecID) { }
        public FillExecID(string val)
            : base(Tags.FillExecID, val) { }

    }


    /// <summary>
    /// FillPx Field
    /// </summary>/
    public sealed class FillPx : DecimalField
    {
        public const int TAG = 1364;

        public FillPx()
            : base(Tags.FillPx) { }
        public FillPx(Decimal val)
            : base(Tags.FillPx, val) { }

    }


    /// <summary>
    /// FillQty Field
    /// </summary>/
    public sealed class FillQty : DecimalField
    {
        public const int TAG = 1365;

        public FillQty()
            : base(Tags.FillQty) { }
        public FillQty(Decimal val)
            : base(Tags.FillQty, val) { }

    }


    /// <summary>
    /// LegAllocID Field
    /// </summary>/
    public sealed class LegAllocID : StringField
    {
        public const int TAG = 1366;

        public LegAllocID()
            : base(Tags.LegAllocID) { }
        public LegAllocID(string val)
            : base(Tags.LegAllocID, val) { }

    }


    /// <summary>
    /// LegAllocSettlCurrency Field
    /// </summary>/
    public sealed class LegAllocSettlCurrency : StringField
    {
        public const int TAG = 1367;

        public LegAllocSettlCurrency()
            : base(Tags.LegAllocSettlCurrency) { }
        public LegAllocSettlCurrency(string val)
            : base(Tags.LegAllocSettlCurrency, val) { }

    }


    /// <summary>
    /// TradSesEvent Field
    /// </summary>/
    public sealed class TradSesEvent : IntField
    {
        public const int TAG = 1368;

        public TradSesEvent()
            : base(Tags.TradSesEvent) { }
        public TradSesEvent(int val)
            : base(Tags.TradSesEvent, val) { }


        // Field Enumerations
        public const int TRADING_RESUMES = 0;
        public const int CHANGE_OF_TRADING_SESSION = 1;
        public const int CHANGE_OF_TRADING_SUBSESSION = 2;
        public const int CHANGE_OF_TRADING_STATUS = 3;
    }


    /// <summary>
    /// MassActionReportID Field
    /// </summary>/
    public sealed class MassActionReportID : StringField
    {
        public const int TAG = 1369;

        public MassActionReportID()
            : base(Tags.MassActionReportID) { }
        public MassActionReportID(string val)
            : base(Tags.MassActionReportID, val) { }

    }


    /// <summary>
    /// NoNotAffectedOrders Field
    /// </summary>/
    public sealed class NoNotAffectedOrders : IntField
    {
        public const int TAG = 1370;

        public NoNotAffectedOrders()
            : base(Tags.NoNotAffectedOrders) { }
        public NoNotAffectedOrders(int val)
            : base(Tags.NoNotAffectedOrders, val) { }

    }


    /// <summary>
    /// NotAffectedOrderID Field
    /// </summary>/
    public sealed class NotAffectedOrderID : StringField
    {
        public const int TAG = 1371;

        public NotAffectedOrderID()
            : base(Tags.NotAffectedOrderID) { }
        public NotAffectedOrderID(string val)
            : base(Tags.NotAffectedOrderID, val) { }

    }


    /// <summary>
    /// NotAffOrigClOrdID Field
    /// </summary>/
    public sealed class NotAffOrigClOrdID : StringField
    {
        public const int TAG = 1372;

        public NotAffOrigClOrdID()
            : base(Tags.NotAffOrigClOrdID) { }
        public NotAffOrigClOrdID(string val)
            : base(Tags.NotAffOrigClOrdID, val) { }

    }


    /// <summary>
    /// MassActionType Field
    /// </summary>/
    public sealed class MassActionType : IntField
    {
        public const int TAG = 1373;

        public MassActionType()
            : base(Tags.MassActionType) { }
        public MassActionType(int val)
            : base(Tags.MassActionType, val) { }


        // Field Enumerations
        public const int SUSPEND_ORDERS = 1;
        public const int RELEASE_ORDERS_FROM_SUSPENSION = 2;
        public const int CANCEL_ORDERS = 3;
    }


    /// <summary>
    /// MassActionScope Field
    /// </summary>/
    public sealed class MassActionScope : IntField
    {
        public const int TAG = 1374;

        public MassActionScope()
            : base(Tags.MassActionScope) { }
        public MassActionScope(int val)
            : base(Tags.MassActionScope, val) { }


        // Field Enumerations
        public const int ALL_ORDERS_FOR_A_SECURITY = 1;
        public const int ALL_ORDERS_FOR_AN_UNDERLYING_SECURITY = 2;
        public const int ALL_ORDERS_FOR_A_PRODUCT = 3;
        public const int ALL_ORDERS_FOR_A_CFICODE = 4;
        public const int ALL_ORDERS_FOR_A_SECURITYTYPE = 5;
        public const int ALL_ORDERS_FOR_A_TRADING_SESSION = 6;
        public const int ALL_ORDERS = 7;
        public const int ALL_ORDERS_FOR_A_MARKET = 8;
        public const int ALL_ORDERS_FOR_A_MARKET_SEGMENT = 9;
        public const int ALL_ORDERS_FOR_A_SECURITY_GROUP = 10;
        public const int CANCEL_FOR_SECURITY_ISSUER = 11;
        public const int CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY = 12;
    }


    /// <summary>
    /// MassActionResponse Field
    /// </summary>/
    public sealed class MassActionResponse : IntField
    {
        public const int TAG = 1375;

        public MassActionResponse()
            : base(Tags.MassActionResponse) { }
        public MassActionResponse(int val)
            : base(Tags.MassActionResponse, val) { }


        // Field Enumerations
        public const int REJECTED = 0;
        public const int ACCEPTED = 1;
        public const int COMPLETED = 2;
    }


    /// <summary>
    /// MassActionRejectReason Field
    /// </summary>/
    public sealed class MassActionRejectReason : IntField
    {
        public const int TAG = 1376;

        public MassActionRejectReason()
            : base(Tags.MassActionRejectReason) { }
        public MassActionRejectReason(int val)
            : base(Tags.MassActionRejectReason, val) { }


        // Field Enumerations
        public const int MASS_ACTION_NOT_SUPPORTED = 0;
        public const int INVALID_OR_UNKNOWN_SECURITY = 1;
        public const int INVALID_OR_UNKNOWN_UNDERLYING_SECURITY = 2;
        public const int INVALID_OR_UNKNOWN_PRODUCT = 3;
        public const int INVALID_OR_UNKNOWN_CFICODE = 4;
        public const int INVALID_OR_UNKNOWN_SECURITYTYPE = 5;
        public const int INVALID_OR_UNKNOWN_TRADING_SESSION = 6;
        public const int INVALID_OR_UNKNOWN_MARKET = 7;
        public const int INVALID_OR_UNKNOWN_MARKET_SEGMENT = 8;
        public const int INVALID_OR_UNKNOWN_SECURITY_GROUP = 9;
        public const int OTHER = 99;
        public const int INVALID_OR_UNKNOWN_SECURITY_ISSUER = 10;
        public const int INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY = 11;
    }


    /// <summary>
    /// MultilegModel Field
    /// </summary>/
    public sealed class MultilegModel : IntField
    {
        public const int TAG = 1377;

        public MultilegModel()
            : base(Tags.MultilegModel) { }
        public MultilegModel(int val)
            : base(Tags.MultilegModel, val) { }


        // Field Enumerations
        public const int PREDEFINED_MULTILEG_SECURITY = 0;
        public const int USER_DEFINED_MULTILEG_SECURITY = 1;
        public const int USER_DEFINED_NON_SECURITIZED_MULTILEG = 2;
        public const int USER_DEFINED_MULTLEG_SECURITY = 1;
    }


    /// <summary>
    /// MultilegPriceMethod Field
    /// </summary>/
    public sealed class MultilegPriceMethod : IntField
    {
        public const int TAG = 1378;

        public MultilegPriceMethod()
            : base(Tags.MultilegPriceMethod) { }
        public MultilegPriceMethod(int val)
            : base(Tags.MultilegPriceMethod, val) { }


        // Field Enumerations
        public const int NET_PRICE = 0;
        public const int REVERSED_NET_PRICE = 1;
        public const int YIELD_DIFFERENCE = 2;
        public const int INDIVIDUAL = 3;
        public const int CONTRACT_WEIGHTED_AVERAGE_PRICE = 4;
        public const int MULTIPLIED_PRICE = 5;
    }


    /// <summary>
    /// LegVolatility Field
    /// </summary>/
    public sealed class LegVolatility : DecimalField
    {
        public const int TAG = 1379;

        public LegVolatility()
            : base(Tags.LegVolatility) { }
        public LegVolatility(Decimal val)
            : base(Tags.LegVolatility, val) { }

    }


    /// <summary>
    /// DividendYield Field
    /// </summary>/
    public sealed class DividendYield : DecimalField
    {
        public const int TAG = 1380;

        public DividendYield()
            : base(Tags.DividendYield) { }
        public DividendYield(Decimal val)
            : base(Tags.DividendYield, val) { }

    }


    /// <summary>
    /// LegDividendYield Field
    /// </summary>/
    public sealed class LegDividendYield : DecimalField
    {
        public const int TAG = 1381;

        public LegDividendYield()
            : base(Tags.LegDividendYield) { }
        public LegDividendYield(Decimal val)
            : base(Tags.LegDividendYield, val) { }

    }


    /// <summary>
    /// CurrencyRatio Field
    /// </summary>/
    public sealed class CurrencyRatio : DecimalField
    {
        public const int TAG = 1382;

        public CurrencyRatio()
            : base(Tags.CurrencyRatio) { }
        public CurrencyRatio(Decimal val)
            : base(Tags.CurrencyRatio, val) { }

    }


    /// <summary>
    /// LegCurrencyRatio Field
    /// </summary>/
    public sealed class LegCurrencyRatio : DecimalField
    {
        public const int TAG = 1383;

        public LegCurrencyRatio()
            : base(Tags.LegCurrencyRatio) { }
        public LegCurrencyRatio(Decimal val)
            : base(Tags.LegCurrencyRatio, val) { }

    }


    /// <summary>
    /// LegExecInst Field
    /// </summary>/
    public sealed class LegExecInst : StringField
    {
        public const int TAG = 1384;

        public LegExecInst()
            : base(Tags.LegExecInst) { }
        public LegExecInst(string val)
            : base(Tags.LegExecInst, val) { }


        // Field Enumerations
        public const string STAY_ON_OFFER_SIDE = "0";
        public const string NOT_HELD = "1";
        public const string WORK = "2";
        public const string GO_ALONG = "3";
        public const string OVER_THE_DAY = "4";
        public const string HELD = "5";
        public const string PARTICIPATE_DONT_INITIATE = "6";
        public const string STRICT_SCALE = "7";
        public const string TRY_TO_SCALE = "8";
        public const string STAY_ON_BID_SIDE = "9";
        public const string NO_CROSS = "A";
        public const string OK_TO_CROSS = "B";
        public const string CALL_FIRST = "C";
        public const string PERCENT_OF_VOLUME = "D";
        public const string DO_NOT_INCREASE = "E";
        public const string DO_NOT_REDUCE = "F";
        public const string ALL_OR_NONE = "G";
        public const string REINSTATE_ON_SYSTEM_FAILURE = "H";
        public const string INSTITUTIONS_ONLY = "I";
        public const string REINSTATE_ON_TRADING_HALT = "J";
        public const string CANCEL_ON_TRADING_HALT = "K";
        public const string LAST_PEG = "L";
        public const string MID_PRICE_PEG = "M";
        public const string NON_NEGOTIABLE = "N";
        public const string OPENING_PEG = "O";
        public const string MARKET_PEG = "P";
        public const string CANCEL_ON_SYSTEM_FAILURE = "Q";
        public const string PRIMARY_PEG = "R";
        public const string SUSPEND = "S";
        public const string FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER = "T";
        public const string CUSTOMER_DISPLAY_INSTRUCTION = "U";
        public const string NETTING = "V";
        public const string PEG_TO_VWAP = "W";
        public const string TRADE_ALONG = "X";
        public const string TRY_TO_STOP = "Y";
        public const string CANCEL_IF_NOT_BEST = "Z";
        public const string TRAILING_STOP_PEG = "a";
        public const string STRICT_LIMIT = "b";
        public const string IGNORE_PRICE_VALIDITY_CHECKS = "c";
        public const string PEG_TO_LIMIT_PRICE = "d";
        public const string WORK_TO_TARGET_STRATEGY = "e";
        public const string INTERMARKET_SWEEP = "f";
        public const string EXTERNAL_ROUTING_ALLOWED = "g";
        public const string EXTERNAL_ROUTING_NOT_ALLOWED = "h";
        public const string IMBALANCE_ONLY = "i";
        public const string SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE = "j";
        public const string BEST_EXECUTION = "k";
        public const string SUSPEND_ON_SYSTEM_FAILURE = "l";
        public const string SUSPEND_ON_TRADING_HALT = "m";
        public const string REINSTATE_ON_CONNECTION_LOSS = "n";
        public const string CANCEL_ON_CONNECTION_LOSS = "o";
        public const string SUSPEND_ON_CONNECTION_LOSS = "p";
        public const string RELEASE = "q";
        public const string EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED = "r";
        public const string EXECUTE_AS_DURATION_NEUTRAL = "s";
        public const string EXECUTE_AS_FX_NEUTRAL = "t";
        public const string MINIMUM_GUARANTEED_FILL_ELIGIBLE = "u";
        public const string BYPASS_NON_DISPLAYED_LIQUIDITY = "v";
        public const string LOCK = "w";
        public const string IGNORE_NOTIONAL_VALUE_CHECKS = "x";
        public const string TRADE_AT_REFERENCE_PRICE = "y";
        public const string ALLOW_FACILITATION = "z";
    }


    /// <summary>
    /// ContingencyType Field
    /// </summary>/
    public sealed class ContingencyType : IntField
    {
        public const int TAG = 1385;

        public ContingencyType()
            : base(Tags.ContingencyType) { }
        public ContingencyType(int val)
            : base(Tags.ContingencyType, val) { }


        // Field Enumerations
        public const int ONE_CANCELS_THE_OTHER = 1;
        public const int ONE_TRIGGERS_THE_OTHER = 2;
        public const int ONE_UPDATES_THE_OTHER_3 = 3;
        public const int ONE_UPDATES_THE_OTHER_4 = 4;
        public const int BID_AND_OFFER = 5;
        public const int BID_AND_OFFER_OCO = 6;
    }


    /// <summary>
    /// ListRejectReason Field
    /// </summary>/
    public sealed class ListRejectReason : IntField
    {
        public const int TAG = 1386;

        public ListRejectReason()
            : base(Tags.ListRejectReason) { }
        public ListRejectReason(int val)
            : base(Tags.ListRejectReason, val) { }


        // Field Enumerations
        public const int BROKER = 0;
        public const int EXCHANGE_CLOSED = 2;
        public const int TOO_LATE_TO_ENTER = 4;
        public const int UNKNOWN_ORDER = 5;
        public const int DUPLICATE_ORDER = 6;
        public const int UNSUPPORTED_ORDER_CHARACTERISTIC = 11;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoTrdRepIndicators Field
    /// </summary>/
    public sealed class NoTrdRepIndicators : IntField
    {
        public const int TAG = 1387;

        public NoTrdRepIndicators()
            : base(Tags.NoTrdRepIndicators) { }
        public NoTrdRepIndicators(int val)
            : base(Tags.NoTrdRepIndicators, val) { }

    }


    /// <summary>
    /// TrdRepPartyRole Field
    /// </summary>/
    public sealed class TrdRepPartyRole : IntField
    {
        public const int TAG = 1388;

        public TrdRepPartyRole()
            : base(Tags.TrdRepPartyRole) { }
        public TrdRepPartyRole(int val)
            : base(Tags.TrdRepPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// TrdRepIndicator Field
    /// </summary>/
    public sealed class TrdRepIndicator : BooleanField
    {
        public const int TAG = 1389;

        public TrdRepIndicator()
            : base(Tags.TrdRepIndicator) { }
        public TrdRepIndicator(Boolean val)
            : base(Tags.TrdRepIndicator, val) { }

    }


    /// <summary>
    /// TradePublishIndicator Field
    /// </summary>/
    public sealed class TradePublishIndicator : IntField
    {
        public const int TAG = 1390;

        public TradePublishIndicator()
            : base(Tags.TradePublishIndicator) { }
        public TradePublishIndicator(int val)
            : base(Tags.TradePublishIndicator, val) { }


        // Field Enumerations
        public const int DO_NOT_PUBLISH_TRADE = 0;
        public const int PUBLISH_TRADE = 1;
        public const int DEFERRED_PUBLICATION = 2;
        public const int PUBLISHED = 3;
    }


    /// <summary>
    /// UnderlyingLegOptAttribute Field
    /// </summary>/
    public sealed class UnderlyingLegOptAttribute : CharField
    {
        public const int TAG = 1391;

        public UnderlyingLegOptAttribute()
            : base(Tags.UnderlyingLegOptAttribute) { }
        public UnderlyingLegOptAttribute(char val)
            : base(Tags.UnderlyingLegOptAttribute, val) { }

    }


    /// <summary>
    /// UnderlyingLegSecurityDesc Field
    /// </summary>/
    public sealed class UnderlyingLegSecurityDesc : StringField
    {
        public const int TAG = 1392;

        public UnderlyingLegSecurityDesc()
            : base(Tags.UnderlyingLegSecurityDesc) { }
        public UnderlyingLegSecurityDesc(string val)
            : base(Tags.UnderlyingLegSecurityDesc, val) { }

    }


    /// <summary>
    /// MarketReqID Field
    /// </summary>/
    public sealed class MarketReqID : StringField
    {
        public const int TAG = 1393;

        public MarketReqID()
            : base(Tags.MarketReqID) { }
        public MarketReqID(string val)
            : base(Tags.MarketReqID, val) { }

    }


    /// <summary>
    /// MarketReportID Field
    /// </summary>/
    public sealed class MarketReportID : StringField
    {
        public const int TAG = 1394;

        public MarketReportID()
            : base(Tags.MarketReportID) { }
        public MarketReportID(string val)
            : base(Tags.MarketReportID, val) { }

    }


    /// <summary>
    /// MarketUpdateAction Field
    /// </summary>/
    public sealed class MarketUpdateAction : CharField
    {
        public const int TAG = 1395;

        public MarketUpdateAction()
            : base(Tags.MarketUpdateAction) { }
        public MarketUpdateAction(char val)
            : base(Tags.MarketUpdateAction, val) { }


        // Field Enumerations
        public const char ADD = 'A';
        public const char DELETE = 'D';
        public const char MODIFY = 'M';
    }


    /// <summary>
    /// MarketSegmentDesc Field
    /// </summary>/
    public sealed class MarketSegmentDesc : StringField
    {
        public const int TAG = 1396;

        public MarketSegmentDesc()
            : base(Tags.MarketSegmentDesc) { }
        public MarketSegmentDesc(string val)
            : base(Tags.MarketSegmentDesc, val) { }

    }


    /// <summary>
    /// EncodedMktSegmDescLen Field
    /// </summary>/
    public sealed class EncodedMktSegmDescLen : IntField
    {
        public const int TAG = 1397;

        public EncodedMktSegmDescLen()
            : base(Tags.EncodedMktSegmDescLen) { }
        public EncodedMktSegmDescLen(int val)
            : base(Tags.EncodedMktSegmDescLen, val) { }

    }


    /// <summary>
    /// EncodedMktSegmDesc Field
    /// </summary>/
    public sealed class EncodedMktSegmDesc : StringField
    {
        public const int TAG = 1398;

        public EncodedMktSegmDesc()
            : base(Tags.EncodedMktSegmDesc) { }
        public EncodedMktSegmDesc(string val)
            : base(Tags.EncodedMktSegmDesc, val) { }

    }


    /// <summary>
    /// ApplNewSeqNum Field
    /// </summary>/
    public sealed class ApplNewSeqNum : IntField
    {
        public const int TAG = 1399;

        public ApplNewSeqNum()
            : base(Tags.ApplNewSeqNum) { }
        public ApplNewSeqNum(int val)
            : base(Tags.ApplNewSeqNum, val) { }

    }


    /// <summary>
    /// EncryptedPasswordMethod Field
    /// </summary>/
    public sealed class EncryptedPasswordMethod : IntField
    {
        public const int TAG = 1400;

        public EncryptedPasswordMethod()
            : base(Tags.EncryptedPasswordMethod) { }
        public EncryptedPasswordMethod(int val)
            : base(Tags.EncryptedPasswordMethod, val) { }

    }


    /// <summary>
    /// EncryptedPasswordLen Field
    /// </summary>/
    public sealed class EncryptedPasswordLen : IntField
    {
        public const int TAG = 1401;

        public EncryptedPasswordLen()
            : base(Tags.EncryptedPasswordLen) { }
        public EncryptedPasswordLen(int val)
            : base(Tags.EncryptedPasswordLen, val) { }

    }


    /// <summary>
    /// EncryptedPassword Field
    /// </summary>/
    public sealed class EncryptedPassword : StringField
    {
        public const int TAG = 1402;

        public EncryptedPassword()
            : base(Tags.EncryptedPassword) { }
        public EncryptedPassword(string val)
            : base(Tags.EncryptedPassword, val) { }

    }


    /// <summary>
    /// EncryptedNewPasswordLen Field
    /// </summary>/
    public sealed class EncryptedNewPasswordLen : IntField
    {
        public const int TAG = 1403;

        public EncryptedNewPasswordLen()
            : base(Tags.EncryptedNewPasswordLen) { }
        public EncryptedNewPasswordLen(int val)
            : base(Tags.EncryptedNewPasswordLen, val) { }

    }


    /// <summary>
    /// EncryptedNewPassword Field
    /// </summary>/
    public sealed class EncryptedNewPassword : StringField
    {
        public const int TAG = 1404;

        public EncryptedNewPassword()
            : base(Tags.EncryptedNewPassword) { }
        public EncryptedNewPassword(string val)
            : base(Tags.EncryptedNewPassword, val) { }

    }


    /// <summary>
    /// UnderlyingLegMaturityTime Field
    /// </summary>/
    public sealed class UnderlyingLegMaturityTime : StringField
    {
        public const int TAG = 1405;

        public UnderlyingLegMaturityTime()
            : base(Tags.UnderlyingLegMaturityTime) { }
        public UnderlyingLegMaturityTime(string val)
            : base(Tags.UnderlyingLegMaturityTime, val) { }

    }


    /// <summary>
    /// RefApplExtID Field
    /// </summary>/
    public sealed class RefApplExtID : IntField
    {
        public const int TAG = 1406;

        public RefApplExtID()
            : base(Tags.RefApplExtID) { }
        public RefApplExtID(int val)
            : base(Tags.RefApplExtID, val) { }

    }


    /// <summary>
    /// DefaultApplExtID Field
    /// </summary>/
    public sealed class DefaultApplExtID : IntField
    {
        public const int TAG = 1407;

        public DefaultApplExtID()
            : base(Tags.DefaultApplExtID) { }
        public DefaultApplExtID(int val)
            : base(Tags.DefaultApplExtID, val) { }

    }


    /// <summary>
    /// DefaultCstmApplVerID Field
    /// </summary>/
    public sealed class DefaultCstmApplVerID : StringField
    {
        public const int TAG = 1408;

        public DefaultCstmApplVerID()
            : base(Tags.DefaultCstmApplVerID) { }
        public DefaultCstmApplVerID(string val)
            : base(Tags.DefaultCstmApplVerID, val) { }

    }


    /// <summary>
    /// SessionStatus Field
    /// </summary>/
    public sealed class SessionStatus : IntField
    {
        public const int TAG = 1409;

        public SessionStatus()
            : base(Tags.SessionStatus) { }
        public SessionStatus(int val)
            : base(Tags.SessionStatus, val) { }


        // Field Enumerations
        public const int SESSION_ACTIVE = 0;
        public const int SESSION_PASSWORD_CHANGED = 1;
        public const int SESSION_PASSWORD_DUE_TO_EXPIRE = 2;
        public const int NEW_SESSION_PASSWORD_DOES_NOT_COMPLY_WITH_POLICY = 3;
        public const int SESSION_LOGOUT_COMPLETE = 4;
        public const int INVALID_USERNAME_OR_PASSWORD = 5;
        public const int ACCOUNT_LOCKED = 6;
        public const int LOGONS_ARE_NOT_ALLOWED_AT_THIS_TIME = 7;
        public const int PASSWORD_EXPIRED = 8;
        public const int RECEIVED_MSGSEQNUM = 9;
        public const int RECEIVED_NEXTEXPECTEDMSGSEQNUM = 10;
    }


    /// <summary>
    /// DefaultVerIndicator Field
    /// </summary>/
    public sealed class DefaultVerIndicator : BooleanField
    {
        public const int TAG = 1410;

        public DefaultVerIndicator()
            : base(Tags.DefaultVerIndicator) { }
        public DefaultVerIndicator(Boolean val)
            : base(Tags.DefaultVerIndicator, val) { }

    }


    /// <summary>
    /// Nested4PartySubIDType Field
    /// </summary>/
    public sealed class Nested4PartySubIDType : IntField
    {
        public const int TAG = 1411;

        public Nested4PartySubIDType()
            : base(Tags.Nested4PartySubIDType) { }
        public Nested4PartySubIDType(int val)
            : base(Tags.Nested4PartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// Nested4PartySubID Field
    /// </summary>/
    public sealed class Nested4PartySubID : StringField
    {
        public const int TAG = 1412;

        public Nested4PartySubID()
            : base(Tags.Nested4PartySubID) { }
        public Nested4PartySubID(string val)
            : base(Tags.Nested4PartySubID, val) { }

    }


    /// <summary>
    /// NoNested4PartySubIDs Field
    /// </summary>/
    public sealed class NoNested4PartySubIDs : IntField
    {
        public const int TAG = 1413;

        public NoNested4PartySubIDs()
            : base(Tags.NoNested4PartySubIDs) { }
        public NoNested4PartySubIDs(int val)
            : base(Tags.NoNested4PartySubIDs, val) { }

    }


    /// <summary>
    /// NoNested4PartyIDs Field
    /// </summary>/
    public sealed class NoNested4PartyIDs : IntField
    {
        public const int TAG = 1414;

        public NoNested4PartyIDs()
            : base(Tags.NoNested4PartyIDs) { }
        public NoNested4PartyIDs(int val)
            : base(Tags.NoNested4PartyIDs, val) { }

    }


    /// <summary>
    /// Nested4PartyID Field
    /// </summary>/
    public sealed class Nested4PartyID : StringField
    {
        public const int TAG = 1415;

        public Nested4PartyID()
            : base(Tags.Nested4PartyID) { }
        public Nested4PartyID(string val)
            : base(Tags.Nested4PartyID, val) { }

    }


    /// <summary>
    /// Nested4PartyIDSource Field
    /// </summary>/
    public sealed class Nested4PartyIDSource : CharField
    {
        public const int TAG = 1416;

        public Nested4PartyIDSource()
            : base(Tags.Nested4PartyIDSource) { }
        public Nested4PartyIDSource(char val)
            : base(Tags.Nested4PartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// Nested4PartyRole Field
    /// </summary>/
    public sealed class Nested4PartyRole : IntField
    {
        public const int TAG = 1417;

        public Nested4PartyRole()
            : base(Tags.Nested4PartyRole) { }
        public Nested4PartyRole(int val)
            : base(Tags.Nested4PartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// LegLastQty Field
    /// </summary>/
    public sealed class LegLastQty : DecimalField
    {
        public const int TAG = 1418;

        public LegLastQty()
            : base(Tags.LegLastQty) { }
        public LegLastQty(Decimal val)
            : base(Tags.LegLastQty, val) { }

    }


    /// <summary>
    /// UnderlyingExerciseStyle Field
    /// </summary>/
    public sealed class UnderlyingExerciseStyle : IntField
    {
        public const int TAG = 1419;

        public UnderlyingExerciseStyle()
            : base(Tags.UnderlyingExerciseStyle) { }
        public UnderlyingExerciseStyle(int val)
            : base(Tags.UnderlyingExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegExerciseStyle Field
    /// </summary>/
    public sealed class LegExerciseStyle : IntField
    {
        public const int TAG = 1420;

        public LegExerciseStyle()
            : base(Tags.LegExerciseStyle) { }
        public LegExerciseStyle(int val)
            : base(Tags.LegExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPriceUnitOfMeasure : StringField
    {
        public const int TAG = 1421;

        public LegPriceUnitOfMeasure()
            : base(Tags.LegPriceUnitOfMeasure) { }
        public LegPriceUnitOfMeasure(string val)
            : base(Tags.LegPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPriceUnitOfMeasureQty Field
    /// </summary>/
    public sealed class LegPriceUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1422;

        public LegPriceUnitOfMeasureQty()
            : base(Tags.LegPriceUnitOfMeasureQty) { }
        public LegPriceUnitOfMeasureQty(Decimal val)
            : base(Tags.LegPriceUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// UnderlyingUnitOfMeasureQty Field
    /// </summary>/
    public sealed class UnderlyingUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1423;

        public UnderlyingUnitOfMeasureQty()
            : base(Tags.UnderlyingUnitOfMeasureQty) { }
        public UnderlyingUnitOfMeasureQty(Decimal val)
            : base(Tags.UnderlyingUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// UnderlyingPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPriceUnitOfMeasure : StringField
    {
        public const int TAG = 1424;

        public UnderlyingPriceUnitOfMeasure()
            : base(Tags.UnderlyingPriceUnitOfMeasure) { }
        public UnderlyingPriceUnitOfMeasure(string val)
            : base(Tags.UnderlyingPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPriceUnitOfMeasureQty Field
    /// </summary>/
    public sealed class UnderlyingPriceUnitOfMeasureQty : DecimalField
    {
        public const int TAG = 1425;

        public UnderlyingPriceUnitOfMeasureQty()
            : base(Tags.UnderlyingPriceUnitOfMeasureQty) { }
        public UnderlyingPriceUnitOfMeasureQty(Decimal val)
            : base(Tags.UnderlyingPriceUnitOfMeasureQty, val) { }

    }


    /// <summary>
    /// ApplReportType Field
    /// </summary>/
    public sealed class ApplReportType : IntField
    {
        public const int TAG = 1426;

        public ApplReportType()
            : base(Tags.ApplReportType) { }
        public ApplReportType(int val)
            : base(Tags.ApplReportType, val) { }


        // Field Enumerations
        public const int RESET_APPLSEQNUM_TO_NEW_VALUE_SPECIFIED_IN_APPLNEWSEQNUM = 0;
        public const int REPORTS_THAT_THE_LAST_MESSAGE_HAS_BEEN_SENT_FOR_THE_APPLIDS_REFER_TO_REFAPPLLASTSEQNUM = 1;
        public const int HEARTBEAT_MESSAGE_INDICATING_THAT_APPLICATION_IDENTIFIED_BY_REFAPPLID = 2;
        public const int APPLICATION_MESSAGE_RE_SEND_COMPLETED = 3;
    }


    /// <summary>
    /// HaltReasonInt Field
    /// </summary>/
    public sealed class HaltReasonInt : IntField
    {
        public const int TAG = 327;

        public HaltReasonInt()
            : base(Tags.HaltReasonInt) { }
        public HaltReasonInt(int val)
            : base(Tags.HaltReasonInt, val) { }


        // Field Enumerations
        public const int NEWS_DISSEMINATION = 0;
        public const int ORDER_INFLUX = 1;
        public const int ORDER_IMBALANCE = 2;
        public const int ADDITIONAL_INFORMATION = 3;
        public const int NEWS_PENDING = 4;
        public const int EQUIPMENT_CHANGEOVER = 5;
    }


    /// <summary>
    /// NoUsernames Field
    /// </summary>/
    public sealed class NoUsernames : IntField
    {
        public const int TAG = 809;

        public NoUsernames()
            : base(Tags.NoUsernames) { }
        public NoUsernames(int val)
            : base(Tags.NoUsernames, val) { }

    }


    /// <summary>
    /// SideLastQty Field
    /// </summary>/
    public sealed class SideLastQty : DecimalField
    {
        public const int TAG = 1009;

        public SideLastQty()
            : base(Tags.SideLastQty) { }
        public SideLastQty(Decimal val)
            : base(Tags.SideLastQty, val) { }

    }


    /// <summary>
    /// UnderlyingInstrumentPartyID Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartyID : StringField
    {
        public const int TAG = 1059;

        public UnderlyingInstrumentPartyID()
            : base(Tags.UnderlyingInstrumentPartyID) { }
        public UnderlyingInstrumentPartyID(string val)
            : base(Tags.UnderlyingInstrumentPartyID, val) { }

    }


    /// <summary>
    /// UnderlyingInstrumentPartyIDSource Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartyIDSource : CharField
    {
        public const int TAG = 1060;

        public UnderlyingInstrumentPartyIDSource()
            : base(Tags.UnderlyingInstrumentPartyIDSource) { }
        public UnderlyingInstrumentPartyIDSource(char val)
            : base(Tags.UnderlyingInstrumentPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// UnderlyingInstrumentPartyRole Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartyRole : IntField
    {
        public const int TAG = 1061;

        public UnderlyingInstrumentPartyRole()
            : base(Tags.UnderlyingInstrumentPartyRole) { }
        public UnderlyingInstrumentPartyRole(int val)
            : base(Tags.UnderlyingInstrumentPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// UnderlyingInstrumentPartySubID Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartySubID : StringField
    {
        public const int TAG = 1063;

        public UnderlyingInstrumentPartySubID()
            : base(Tags.UnderlyingInstrumentPartySubID) { }
        public UnderlyingInstrumentPartySubID(string val)
            : base(Tags.UnderlyingInstrumentPartySubID, val) { }

    }


    /// <summary>
    /// UnderlyingInstrumentPartySubIDType Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartySubIDType : IntField
    {
        public const int TAG = 1064;

        public UnderlyingInstrumentPartySubIDType()
            : base(Tags.UnderlyingInstrumentPartySubIDType) { }
        public UnderlyingInstrumentPartySubIDType(int val)
            : base(Tags.UnderlyingInstrumentPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// OptPayoutAmount Field
    /// </summary>/
    public sealed class OptPayoutAmount : DecimalField
    {
        public const int TAG = 1195;

        public OptPayoutAmount()
            : base(Tags.OptPayoutAmount) { }
        public OptPayoutAmount(Decimal val)
            : base(Tags.OptPayoutAmount, val) { }

    }


    /// <summary>
    /// ValuationMethod Field
    /// </summary>/
    public sealed class ValuationMethod : StringField
    {
        public const int TAG = 1197;

        public ValuationMethod()
            : base(Tags.ValuationMethod) { }
        public ValuationMethod(string val)
            : base(Tags.ValuationMethod, val) { }


        // Field Enumerations
        public const string PREMIUM_STYLE = "EQTY";
        public const string FUTURES_STYLE_MARK_TO_MARKET = "FUT";
        public const string FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA";
        public const string CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = "CDS";
        public const string CDS_IN_DELIVERY = "CDSD";
    }


    /// <summary>
    /// CommRate Field
    /// </summary>/
    public sealed class CommRate : DecimalField
    {
        public const int TAG = 1233;

        public CommRate()
            : base(Tags.CommRate) { }
        public CommRate(Decimal val)
            : base(Tags.CommRate, val) { }

    }


    /// <summary>
    /// CommUnitOfMeasure Field
    /// </summary>/
    public sealed class CommUnitOfMeasure : StringField
    {
        public const int TAG = 1238;

        public CommUnitOfMeasure()
            : base(Tags.CommUnitOfMeasure) { }
        public CommUnitOfMeasure(string val)
            : base(Tags.CommUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DerivativeValuationMethod Field
    /// </summary>/
    public sealed class DerivativeValuationMethod : StringField
    {
        public const int TAG = 1319;

        public DerivativeValuationMethod()
            : base(Tags.DerivativeValuationMethod) { }
        public DerivativeValuationMethod(string val)
            : base(Tags.DerivativeValuationMethod, val) { }


        // Field Enumerations
        public const string PREMIUM_STYLE = "EQTY";
        public const string FUTURES_STYLE_MARK_TO_MARKET = "FUT";
        public const string FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA";
        public const string CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = "CDS";
        public const string CDS_IN_DELIVERY = "CDSD";
    }


    /// <summary>
    /// SideExecID Field
    /// </summary>/
    public sealed class SideExecID : StringField
    {
        public const int TAG = 1427;

        public SideExecID()
            : base(Tags.SideExecID) { }
        public SideExecID(string val)
            : base(Tags.SideExecID, val) { }

    }


    /// <summary>
    /// OrderDelay Field
    /// </summary>/
    public sealed class OrderDelay : IntField
    {
        public const int TAG = 1428;

        public OrderDelay()
            : base(Tags.OrderDelay) { }
        public OrderDelay(int val)
            : base(Tags.OrderDelay, val) { }

    }


    /// <summary>
    /// OrderDelayUnit Field
    /// </summary>/
    public sealed class OrderDelayUnit : IntField
    {
        public const int TAG = 1429;

        public OrderDelayUnit()
            : base(Tags.OrderDelayUnit) { }
        public OrderDelayUnit(int val)
            : base(Tags.OrderDelayUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// VenueType Field
    /// </summary>/
    public sealed class VenueType : CharField
    {
        public const int TAG = 1430;

        public VenueType()
            : base(Tags.VenueType) { }
        public VenueType(char val)
            : base(Tags.VenueType, val) { }


        // Field Enumerations
        public const char ELECTRONIC_EXCHANGE = 'E';
        public const char PIT = 'P';
        public const char EX_PIT = 'X';
        public const char CLEARINGHOUSE = 'C';
        public const char REGISTERED_MARKET = 'R';
        public const char OFF_MARKET = 'O';
        public const char CENTRAL_LIMIT_ORDER_BOOK = 'B';
        public const char QUOTE_DRIVEN_MARKET = 'Q';
        public const char DARK_ORDER_BOOK = 'D';
        public const char AUCTION_DRIVEN_MARKET = 'A';
        public const char QUOTE_NEGOTIATION = 'N';
        public const char VOICE_NEOTIATION = 'V';
        public const char HYBRID_MARKET = 'H';
    }


    /// <summary>
    /// RefOrdIDReason Field
    /// </summary>/
    public sealed class RefOrdIDReason : IntField
    {
        public const int TAG = 1431;

        public RefOrdIDReason()
            : base(Tags.RefOrdIDReason) { }
        public RefOrdIDReason(int val)
            : base(Tags.RefOrdIDReason, val) { }


        // Field Enumerations
        public const int GTC_FROM_PREVIOUS_DAY = 0;
        public const int PARTIAL_FILL_REMAINING = 1;
        public const int ORDER_CHANGED = 2;
    }


    /// <summary>
    /// OrigCustOrderCapacity Field
    /// </summary>/
    public sealed class OrigCustOrderCapacity : IntField
    {
        public const int TAG = 1432;

        public OrigCustOrderCapacity()
            : base(Tags.OrigCustOrderCapacity) { }
        public OrigCustOrderCapacity(int val)
            : base(Tags.OrigCustOrderCapacity, val) { }


        // Field Enumerations
        public const int MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT = 1;
        public const int CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT = 2;
        public const int MEMBER_TRADING_FOR_ANOTHER_MEMBER = 3;
        public const int ALL_OTHER = 4;
    }


    /// <summary>
    /// RefApplReqID Field
    /// </summary>/
    public sealed class RefApplReqID : StringField
    {
        public const int TAG = 1433;

        public RefApplReqID()
            : base(Tags.RefApplReqID) { }
        public RefApplReqID(string val)
            : base(Tags.RefApplReqID, val) { }

    }


    /// <summary>
    /// ModelType Field
    /// </summary>/
    public sealed class ModelType : IntField
    {
        public const int TAG = 1434;

        public ModelType()
            : base(Tags.ModelType) { }
        public ModelType(int val)
            : base(Tags.ModelType, val) { }


        // Field Enumerations
        public const int UTILITY_PROVIDED_STANDARD_MODEL = 0;
        public const int PROPRIETARY = 1;
    }


    /// <summary>
    /// ContractMultiplierUnit Field
    /// </summary>/
    public sealed class ContractMultiplierUnit : IntField
    {
        public const int TAG = 1435;

        public ContractMultiplierUnit()
            : base(Tags.ContractMultiplierUnit) { }
        public ContractMultiplierUnit(int val)
            : base(Tags.ContractMultiplierUnit, val) { }


        // Field Enumerations
        public const int SHARES = 0;
        public const int HOURS = 1;
        public const int DAYS = 2;
    }


    /// <summary>
    /// LegContractMultiplierUnit Field
    /// </summary>/
    public sealed class LegContractMultiplierUnit : IntField
    {
        public const int TAG = 1436;

        public LegContractMultiplierUnit()
            : base(Tags.LegContractMultiplierUnit) { }
        public LegContractMultiplierUnit(int val)
            : base(Tags.LegContractMultiplierUnit, val) { }


        // Field Enumerations
        public const int SHARES = 0;
        public const int HOURS = 1;
        public const int DAYS = 2;
    }


    /// <summary>
    /// UnderlyingContractMultiplierUnit Field
    /// </summary>/
    public sealed class UnderlyingContractMultiplierUnit : IntField
    {
        public const int TAG = 1437;

        public UnderlyingContractMultiplierUnit()
            : base(Tags.UnderlyingContractMultiplierUnit) { }
        public UnderlyingContractMultiplierUnit(int val)
            : base(Tags.UnderlyingContractMultiplierUnit, val) { }


        // Field Enumerations
        public const int SHARES = 0;
        public const int HOURS = 1;
        public const int DAYS = 2;
    }


    /// <summary>
    /// DerivativeContractMultiplierUnit Field
    /// </summary>/
    public sealed class DerivativeContractMultiplierUnit : IntField
    {
        public const int TAG = 1438;

        public DerivativeContractMultiplierUnit()
            : base(Tags.DerivativeContractMultiplierUnit) { }
        public DerivativeContractMultiplierUnit(int val)
            : base(Tags.DerivativeContractMultiplierUnit, val) { }


        // Field Enumerations
        public const int SHARES = 0;
        public const int HOURS = 1;
        public const int DAYS = 2;
    }


    /// <summary>
    /// FlowScheduleType Field
    /// </summary>/
    public sealed class FlowScheduleType : IntField
    {
        public const int TAG = 1439;

        public FlowScheduleType()
            : base(Tags.FlowScheduleType) { }
        public FlowScheduleType(int val)
            : base(Tags.FlowScheduleType, val) { }


        // Field Enumerations
        public const int NERC_EASTERN_OFF_PEAK = 0;
        public const int NERC_WESTERN_OFF_PEAK = 1;
        public const int NERC_CALENDAR_ALL_DAYS_IN_MONTH = 2;
        public const int NERC_EASTERN_PEAK = 3;
        public const int NERC_WESTERN_PEAK = 4;
        public const int ALL_TIMES = 5;
        public const int ON_PEAK = 6;
        public const int OFF_PEAK = 7;
        public const int BASE = 8;
        public const int BLOCK = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegFlowScheduleType Field
    /// </summary>/
    public sealed class LegFlowScheduleType : IntField
    {
        public const int TAG = 1440;

        public LegFlowScheduleType()
            : base(Tags.LegFlowScheduleType) { }
        public LegFlowScheduleType(int val)
            : base(Tags.LegFlowScheduleType, val) { }


        // Field Enumerations
        public const int NERC_EASTERN_OFF_PEAK = 0;
        public const int NERC_WESTERN_OFF_PEAK = 1;
        public const int NERC_CALENDAR_ALL_DAYS_IN_MONTH = 2;
        public const int NERC_EASTERN_PEAK = 3;
        public const int NERC_WESTERN_PEAK = 4;
        public const int ALL_TIMES = 5;
        public const int ON_PEAK = 6;
        public const int OFF_PEAK = 7;
        public const int BASE = 8;
        public const int BLOCK = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingFlowScheduleType Field
    /// </summary>/
    public sealed class UnderlyingFlowScheduleType : IntField
    {
        public const int TAG = 1441;

        public UnderlyingFlowScheduleType()
            : base(Tags.UnderlyingFlowScheduleType) { }
        public UnderlyingFlowScheduleType(int val)
            : base(Tags.UnderlyingFlowScheduleType, val) { }


        // Field Enumerations
        public const int NERC_EASTERN_OFF_PEAK = 0;
        public const int NERC_WESTERN_OFF_PEAK = 1;
        public const int NERC_CALENDAR_ALL_DAYS_IN_MONTH = 2;
        public const int NERC_EASTERN_PEAK = 3;
        public const int NERC_WESTERN_PEAK = 4;
        public const int ALL_TIMES = 5;
        public const int ON_PEAK = 6;
        public const int OFF_PEAK = 7;
        public const int BASE = 8;
        public const int BLOCK = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// DerivativeFlowScheduleType Field
    /// </summary>/
    public sealed class DerivativeFlowScheduleType : IntField
    {
        public const int TAG = 1442;

        public DerivativeFlowScheduleType()
            : base(Tags.DerivativeFlowScheduleType) { }
        public DerivativeFlowScheduleType(int val)
            : base(Tags.DerivativeFlowScheduleType, val) { }


        // Field Enumerations
        public const int NERC_EASTERN_OFF_PEAK = 0;
        public const int NERC_WESTERN_OFF_PEAK = 1;
        public const int NERC_CALENDAR_ALL_DAYS_IN_MONTH = 2;
        public const int NERC_EASTERN_PEAK = 3;
        public const int NERC_WESTERN_PEAK = 4;
        public const int ALL_TIMES = 5;
        public const int ON_PEAK = 6;
        public const int OFF_PEAK = 7;
        public const int BASE = 8;
        public const int BLOCK = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// FillLiquidityInd Field
    /// </summary>/
    public sealed class FillLiquidityInd : IntField
    {
        public const int TAG = 1443;

        public FillLiquidityInd()
            : base(Tags.FillLiquidityInd) { }
        public FillLiquidityInd(int val)
            : base(Tags.FillLiquidityInd, val) { }


        // Field Enumerations
        public const int ADDED_LIQUIDITY = 1;
        public const int REMOVED_LIQUIDITY = 2;
        public const int LIQUIDITY_ROUTED_OUT = 3;
        public const int AUCTION_EXECUTION = 4;
        public const int TRIGGERED_STOP_ORDER = 5;
        public const int TRIGGERED_CONTINGENCY_ORDER = 6;
        public const int TRIGGERED_MARKET_ORDER = 7;
        public const int NEITHER_ADDED_NOR_REMOVED_LIQUIDITY = 0;
        public const int REMOVED_LIQUIDITY_AFTER_FIRM_ORDER_COMMITMENT = 8;
        public const int AUCTION_EXECUTION_AFTER_FIRM_ORDER_COMMITMENT = 9;
    }


    /// <summary>
    /// SideLiquidityInd Field
    /// </summary>/
    public sealed class SideLiquidityInd : IntField
    {
        public const int TAG = 1444;

        public SideLiquidityInd()
            : base(Tags.SideLiquidityInd) { }
        public SideLiquidityInd(int val)
            : base(Tags.SideLiquidityInd, val) { }


        // Field Enumerations
        public const int ADDED_LIQUIDITY = 1;
        public const int REMOVED_LIQUIDITY = 2;
        public const int LIQUIDITY_ROUTED_OUT = 3;
        public const int AUCTION_EXECUTION = 4;
        public const int TRIGGERED_STOP_ORDER = 5;
        public const int TRIGGERED_CONTINGENCY_ORDER = 6;
        public const int TRIGGERED_MARKET_ORDER = 7;
        public const int NEITHER_ADDED_NOR_REMOVED_LIQUIDITY = 0;
        public const int REMOVED_LIQUIDITY_AFTER_FIRM_ORDER_COMMITMENT = 8;
        public const int AUCTION_EXECUTION_AFTER_FIRM_ORDER_COMMITMENT = 9;
    }


    /// <summary>
    /// NoRateSources Field
    /// </summary>/
    public sealed class NoRateSources : IntField
    {
        public const int TAG = 1445;

        public NoRateSources()
            : base(Tags.NoRateSources) { }
        public NoRateSources(int val)
            : base(Tags.NoRateSources, val) { }

    }


    /// <summary>
    /// RateSource Field
    /// </summary>/
    public sealed class RateSource : IntField
    {
        public const int TAG = 1446;

        public RateSource()
            : base(Tags.RateSource) { }
        public RateSource(int val)
            : base(Tags.RateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// RateSourceType Field
    /// </summary>/
    public sealed class RateSourceType : IntField
    {
        public const int TAG = 1447;

        public RateSourceType()
            : base(Tags.RateSourceType) { }
        public RateSourceType(int val)
            : base(Tags.RateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// ReferencePage Field
    /// </summary>/
    public sealed class ReferencePage : StringField
    {
        public const int TAG = 1448;

        public ReferencePage()
            : base(Tags.ReferencePage) { }
        public ReferencePage(string val)
            : base(Tags.ReferencePage, val) { }

    }


    /// <summary>
    /// RestructuringType Field
    /// </summary>/
    public sealed class RestructuringType : StringField
    {
        public const int TAG = 1449;

        public RestructuringType()
            : base(Tags.RestructuringType) { }
        public RestructuringType(string val)
            : base(Tags.RestructuringType, val) { }


        // Field Enumerations
        public const string FULL_RESTRUCTURING = "FR";
        public const string MODIFIED_RESTRUCTURING = "MR";
        public const string MODIFIED_MOD_RESTRUCTURING = "MM";
        public const string NO_RESTRUCTURING_SPECIFIED = "XR";
    }


    /// <summary>
    /// Seniority Field
    /// </summary>/
    public sealed class Seniority : StringField
    {
        public const int TAG = 1450;

        public Seniority()
            : base(Tags.Seniority) { }
        public Seniority(string val)
            : base(Tags.Seniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// NotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class NotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 1451;

        public NotionalPercentageOutstanding()
            : base(Tags.NotionalPercentageOutstanding) { }
        public NotionalPercentageOutstanding(Decimal val)
            : base(Tags.NotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// OriginalNotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class OriginalNotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 1452;

        public OriginalNotionalPercentageOutstanding()
            : base(Tags.OriginalNotionalPercentageOutstanding) { }
        public OriginalNotionalPercentageOutstanding(Decimal val)
            : base(Tags.OriginalNotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// UnderlyingRestructuringType Field
    /// </summary>/
    public sealed class UnderlyingRestructuringType : StringField
    {
        public const int TAG = 1453;

        public UnderlyingRestructuringType()
            : base(Tags.UnderlyingRestructuringType) { }
        public UnderlyingRestructuringType(string val)
            : base(Tags.UnderlyingRestructuringType, val) { }


        // Field Enumerations
        public const string FULL_RESTRUCTURING = "FR";
        public const string MODIFIED_RESTRUCTURING = "MR";
        public const string MODIFIED_MOD_RESTRUCTURING = "MM";
        public const string NO_RESTRUCTURING_SPECIFIED = "XR";
    }


    /// <summary>
    /// UnderlyingSeniority Field
    /// </summary>/
    public sealed class UnderlyingSeniority : StringField
    {
        public const int TAG = 1454;

        public UnderlyingSeniority()
            : base(Tags.UnderlyingSeniority) { }
        public UnderlyingSeniority(string val)
            : base(Tags.UnderlyingSeniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// UnderlyingNotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class UnderlyingNotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 1455;

        public UnderlyingNotionalPercentageOutstanding()
            : base(Tags.UnderlyingNotionalPercentageOutstanding) { }
        public UnderlyingNotionalPercentageOutstanding(Decimal val)
            : base(Tags.UnderlyingNotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// UnderlyingOriginalNotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class UnderlyingOriginalNotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 1456;

        public UnderlyingOriginalNotionalPercentageOutstanding()
            : base(Tags.UnderlyingOriginalNotionalPercentageOutstanding) { }
        public UnderlyingOriginalNotionalPercentageOutstanding(Decimal val)
            : base(Tags.UnderlyingOriginalNotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// AttachmentPoint Field
    /// </summary>/
    public sealed class AttachmentPoint : DecimalField
    {
        public const int TAG = 1457;

        public AttachmentPoint()
            : base(Tags.AttachmentPoint) { }
        public AttachmentPoint(Decimal val)
            : base(Tags.AttachmentPoint, val) { }

    }


    /// <summary>
    /// DetachmentPoint Field
    /// </summary>/
    public sealed class DetachmentPoint : DecimalField
    {
        public const int TAG = 1458;

        public DetachmentPoint()
            : base(Tags.DetachmentPoint) { }
        public DetachmentPoint(Decimal val)
            : base(Tags.DetachmentPoint, val) { }

    }


    /// <summary>
    /// UnderlyingAttachmentPoint Field
    /// </summary>/
    public sealed class UnderlyingAttachmentPoint : DecimalField
    {
        public const int TAG = 1459;

        public UnderlyingAttachmentPoint()
            : base(Tags.UnderlyingAttachmentPoint) { }
        public UnderlyingAttachmentPoint(Decimal val)
            : base(Tags.UnderlyingAttachmentPoint, val) { }

    }


    /// <summary>
    /// UnderlyingDetachmentPoint Field
    /// </summary>/
    public sealed class UnderlyingDetachmentPoint : DecimalField
    {
        public const int TAG = 1460;

        public UnderlyingDetachmentPoint()
            : base(Tags.UnderlyingDetachmentPoint) { }
        public UnderlyingDetachmentPoint(Decimal val)
            : base(Tags.UnderlyingDetachmentPoint, val) { }

    }


    /// <summary>
    /// NoTargetPartyIDs Field
    /// </summary>/
    public sealed class NoTargetPartyIDs : IntField
    {
        public const int TAG = 1461;

        public NoTargetPartyIDs()
            : base(Tags.NoTargetPartyIDs) { }
        public NoTargetPartyIDs(int val)
            : base(Tags.NoTargetPartyIDs, val) { }

    }


    /// <summary>
    /// TargetPartyID Field
    /// </summary>/
    public sealed class TargetPartyID : StringField
    {
        public const int TAG = 1462;

        public TargetPartyID()
            : base(Tags.TargetPartyID) { }
        public TargetPartyID(string val)
            : base(Tags.TargetPartyID, val) { }

    }


    /// <summary>
    /// TargetPartyIDSource Field
    /// </summary>/
    public sealed class TargetPartyIDSource : CharField
    {
        public const int TAG = 1463;

        public TargetPartyIDSource()
            : base(Tags.TargetPartyIDSource) { }
        public TargetPartyIDSource(char val)
            : base(Tags.TargetPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// TargetPartyRole Field
    /// </summary>/
    public sealed class TargetPartyRole : IntField
    {
        public const int TAG = 1464;

        public TargetPartyRole()
            : base(Tags.TargetPartyRole) { }
        public TargetPartyRole(int val)
            : base(Tags.TargetPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// SecurityListID Field
    /// </summary>/
    public sealed class SecurityListID : StringField
    {
        public const int TAG = 1465;

        public SecurityListID()
            : base(Tags.SecurityListID) { }
        public SecurityListID(string val)
            : base(Tags.SecurityListID, val) { }

    }


    /// <summary>
    /// SecurityListRefID Field
    /// </summary>/
    public sealed class SecurityListRefID : StringField
    {
        public const int TAG = 1466;

        public SecurityListRefID()
            : base(Tags.SecurityListRefID) { }
        public SecurityListRefID(string val)
            : base(Tags.SecurityListRefID, val) { }

    }


    /// <summary>
    /// SecurityListDesc Field
    /// </summary>/
    public sealed class SecurityListDesc : StringField
    {
        public const int TAG = 1467;

        public SecurityListDesc()
            : base(Tags.SecurityListDesc) { }
        public SecurityListDesc(string val)
            : base(Tags.SecurityListDesc, val) { }

    }


    /// <summary>
    /// EncodedSecurityListDescLen Field
    /// </summary>/
    public sealed class EncodedSecurityListDescLen : IntField
    {
        public const int TAG = 1468;

        public EncodedSecurityListDescLen()
            : base(Tags.EncodedSecurityListDescLen) { }
        public EncodedSecurityListDescLen(int val)
            : base(Tags.EncodedSecurityListDescLen, val) { }

    }


    /// <summary>
    /// EncodedSecurityListDesc Field
    /// </summary>/
    public sealed class EncodedSecurityListDesc : StringField
    {
        public const int TAG = 1469;

        public EncodedSecurityListDesc()
            : base(Tags.EncodedSecurityListDesc) { }
        public EncodedSecurityListDesc(string val)
            : base(Tags.EncodedSecurityListDesc, val) { }

    }


    /// <summary>
    /// SecurityListType Field
    /// </summary>/
    public sealed class SecurityListType : IntField
    {
        public const int TAG = 1470;

        public SecurityListType()
            : base(Tags.SecurityListType) { }
        public SecurityListType(int val)
            : base(Tags.SecurityListType, val) { }


        // Field Enumerations
        public const int INDUSTRY_CLASSIFICATION = 1;
        public const int TRADING_LIST = 2;
        public const int MARKET = 3;
        public const int NEWSPAPER_LIST = 4;
    }


    /// <summary>
    /// SecurityListTypeSource Field
    /// </summary>/
    public sealed class SecurityListTypeSource : IntField
    {
        public const int TAG = 1471;

        public SecurityListTypeSource()
            : base(Tags.SecurityListTypeSource) { }
        public SecurityListTypeSource(int val)
            : base(Tags.SecurityListTypeSource, val) { }


        // Field Enumerations
        public const int ICB = 1;
        public const int NAICS = 2;
        public const int GICS = 3;
    }


    /// <summary>
    /// NewsID Field
    /// </summary>/
    public sealed class NewsID : StringField
    {
        public const int TAG = 1472;

        public NewsID()
            : base(Tags.NewsID) { }
        public NewsID(string val)
            : base(Tags.NewsID, val) { }

    }


    /// <summary>
    /// NewsCategory Field
    /// </summary>/
    public sealed class NewsCategory : IntField
    {
        public const int TAG = 1473;

        public NewsCategory()
            : base(Tags.NewsCategory) { }
        public NewsCategory(int val)
            : base(Tags.NewsCategory, val) { }


        // Field Enumerations
        public const int COMPANY_NEWS = 0;
        public const int MARKETPLACE_NEWS = 1;
        public const int FINANCIAL_MARKET_NEWS = 2;
        public const int TECHNICAL_NEWS = 3;
        public const int OTHER_NEWS = 99;
    }


    /// <summary>
    /// LanguageCode Field
    /// </summary>/
    public sealed class LanguageCode : StringField
    {
        public const int TAG = 1474;

        public LanguageCode()
            : base(Tags.LanguageCode) { }
        public LanguageCode(string val)
            : base(Tags.LanguageCode, val) { }

    }


    /// <summary>
    /// NoNewsRefIDs Field
    /// </summary>/
    public sealed class NoNewsRefIDs : IntField
    {
        public const int TAG = 1475;

        public NoNewsRefIDs()
            : base(Tags.NoNewsRefIDs) { }
        public NoNewsRefIDs(int val)
            : base(Tags.NoNewsRefIDs, val) { }

    }


    /// <summary>
    /// NewsRefID Field
    /// </summary>/
    public sealed class NewsRefID : StringField
    {
        public const int TAG = 1476;

        public NewsRefID()
            : base(Tags.NewsRefID) { }
        public NewsRefID(string val)
            : base(Tags.NewsRefID, val) { }

    }


    /// <summary>
    /// NewsRefType Field
    /// </summary>/
    public sealed class NewsRefType : IntField
    {
        public const int TAG = 1477;

        public NewsRefType()
            : base(Tags.NewsRefType) { }
        public NewsRefType(int val)
            : base(Tags.NewsRefType, val) { }


        // Field Enumerations
        public const int REPLACEMENT = 0;
        public const int OTHER_LANGUAGE = 1;
        public const int COMPLIMENTARY = 2;
        public const int WITHDRAWAL = 3;
    }


    /// <summary>
    /// StrikePriceDeterminationMethod Field
    /// </summary>/
    public sealed class StrikePriceDeterminationMethod : IntField
    {
        public const int TAG = 1478;

        public StrikePriceDeterminationMethod()
            : base(Tags.StrikePriceDeterminationMethod) { }
        public StrikePriceDeterminationMethod(int val)
            : base(Tags.StrikePriceDeterminationMethod, val) { }


        // Field Enumerations
        public const int FIXED_STRIKE = 1;
        public const int STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE = 2;
        public const int STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION = 3;
        public const int STRIKE_SET_TO_OPTIMAL_VALUE = 4;
    }


    /// <summary>
    /// StrikePriceBoundaryMethod Field
    /// </summary>/
    public sealed class StrikePriceBoundaryMethod : IntField
    {
        public const int TAG = 1479;

        public StrikePriceBoundaryMethod()
            : base(Tags.StrikePriceBoundaryMethod) { }
        public StrikePriceBoundaryMethod(int val)
            : base(Tags.StrikePriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY = 1;
        public const int LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 2;
        public const int EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY = 4;
        public const int GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY = 5;
    }


    /// <summary>
    /// StrikePriceBoundaryPrecision Field
    /// </summary>/
    public sealed class StrikePriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 1480;

        public StrikePriceBoundaryPrecision()
            : base(Tags.StrikePriceBoundaryPrecision) { }
        public StrikePriceBoundaryPrecision(Decimal val)
            : base(Tags.StrikePriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// UnderlyingPriceDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingPriceDeterminationMethod : IntField
    {
        public const int TAG = 1481;

        public UnderlyingPriceDeterminationMethod()
            : base(Tags.UnderlyingPriceDeterminationMethod) { }
        public UnderlyingPriceDeterminationMethod(int val)
            : base(Tags.UnderlyingPriceDeterminationMethod, val) { }


        // Field Enumerations
        public const int REGULAR = 1;
        public const int SPECIAL_REFERENCE = 2;
        public const int OPTIMAL_VALUE = 3;
        public const int AVERAGE_VALUE = 4;
    }


    /// <summary>
    /// OptPayoutType Field
    /// </summary>/
    public sealed class OptPayoutType : IntField
    {
        public const int TAG = 1482;

        public OptPayoutType()
            : base(Tags.OptPayoutType) { }
        public OptPayoutType(int val)
            : base(Tags.OptPayoutType, val) { }


        // Field Enumerations
        public const int VANILLA = 1;
        public const int CAPPED = 2;
        public const int DIGITAL = 3;
        public const int ASIAN = 4;
        public const int BARRIER = 5;
        public const int DIGITAL_BARRIER = 6;
        public const int LOOKBACK = 7;
        public const int OTHER_PATH_DEPENDENT = 8;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoComplexEvents Field
    /// </summary>/
    public sealed class NoComplexEvents : IntField
    {
        public const int TAG = 1483;

        public NoComplexEvents()
            : base(Tags.NoComplexEvents) { }
        public NoComplexEvents(int val)
            : base(Tags.NoComplexEvents, val) { }

    }


    /// <summary>
    /// ComplexEventType Field
    /// </summary>/
    public sealed class ComplexEventType : IntField
    {
        public const int TAG = 1484;

        public ComplexEventType()
            : base(Tags.ComplexEventType) { }
        public ComplexEventType(int val)
            : base(Tags.ComplexEventType, val) { }


        // Field Enumerations
        public const int CAPPED = 1;
        public const int TRIGGER = 2;
        public const int KNOCK_IN_UP = 3;
        public const int KNOCK_IN_DOWN = 4;
        public const int KNOCK_OUT_UP = 5;
        public const int KNOCK_OUT_DOWN = 6;
        public const int UNDERLYING = 7;
        public const int RESET_BARRIER = 8;
        public const int ROLLING_BARRIER = 9;
        public const int ONE_TOUCH = 10;
        public const int NO_TOUCH = 11;
        public const int DOUBLE_ONE_TOUCH = 12;
        public const int DOUBLE_NO_TOUCH = 13;
        public const int FOREIGN_EXCHANGE_COMPOSITE = 14;
        public const int FOREIGN_EXCHANGE_QUANTO = 15;
        public const int FOREIGN_EXCHANGE_CROSS_CURRENCY = 16;
        public const int STRIKE_SPREAD = 17;
        public const int CALENDAR_SPREAD = 18;
        public const int PRICE_OBSERVATION = 19;
        public const int PASS_THROUGH = 20;
        public const int STRIKE_SCHEDULE = 21;
        public const int EQUITY_VALUATION = 22;
        public const int DIVIDEND_VALUATION = 23;
    }


    /// <summary>
    /// ComplexOptPayoutAmount Field
    /// </summary>/
    public sealed class ComplexOptPayoutAmount : DecimalField
    {
        public const int TAG = 1485;

        public ComplexOptPayoutAmount()
            : base(Tags.ComplexOptPayoutAmount) { }
        public ComplexOptPayoutAmount(Decimal val)
            : base(Tags.ComplexOptPayoutAmount, val) { }

    }


    /// <summary>
    /// ComplexEventPrice Field
    /// </summary>/
    public sealed class ComplexEventPrice : DecimalField
    {
        public const int TAG = 1486;

        public ComplexEventPrice()
            : base(Tags.ComplexEventPrice) { }
        public ComplexEventPrice(Decimal val)
            : base(Tags.ComplexEventPrice, val) { }

    }


    /// <summary>
    /// ComplexEventPriceBoundaryMethod Field
    /// </summary>/
    public sealed class ComplexEventPriceBoundaryMethod : IntField
    {
        public const int TAG = 1487;

        public ComplexEventPriceBoundaryMethod()
            : base(Tags.ComplexEventPriceBoundaryMethod) { }
        public ComplexEventPriceBoundaryMethod(int val)
            : base(Tags.ComplexEventPriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_COMPLEXEVENTPRICE = 1;
        public const int LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 2;
        public const int EQUAL_TO_COMPLEXEVENTPRICE = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 4;
        public const int GREATER_THAN_COMPLEXEVENTPRICE = 5;
    }


    /// <summary>
    /// ComplexEventPriceBoundaryPrecision Field
    /// </summary>/
    public sealed class ComplexEventPriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 1488;

        public ComplexEventPriceBoundaryPrecision()
            : base(Tags.ComplexEventPriceBoundaryPrecision) { }
        public ComplexEventPriceBoundaryPrecision(Decimal val)
            : base(Tags.ComplexEventPriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// ComplexEventPriceTimeType Field
    /// </summary>/
    public sealed class ComplexEventPriceTimeType : IntField
    {
        public const int TAG = 1489;

        public ComplexEventPriceTimeType()
            : base(Tags.ComplexEventPriceTimeType) { }
        public ComplexEventPriceTimeType(int val)
            : base(Tags.ComplexEventPriceTimeType, val) { }


        // Field Enumerations
        public const int EXPIRATION = 1;
        public const int IMMEDIATE = 2;
        public const int SPECIFIED_DATE_TIME = 3;
        public const int CLOSE = 4;
        public const int OPEN = 5;
        public const int OFFICIAL_SETTLEMENT_PRICE = 6;
        public const int DERIVATIVES_CLOSE = 7;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 8;
    }


    /// <summary>
    /// ComplexEventCondition Field
    /// </summary>/
    public sealed class ComplexEventCondition : IntField
    {
        public const int TAG = 1490;

        public ComplexEventCondition()
            : base(Tags.ComplexEventCondition) { }
        public ComplexEventCondition(int val)
            : base(Tags.ComplexEventCondition, val) { }


        // Field Enumerations
        public const int AND = 1;
        public const int OR = 2;
    }


    /// <summary>
    /// NoComplexEventDates Field
    /// </summary>/
    public sealed class NoComplexEventDates : IntField
    {
        public const int TAG = 1491;

        public NoComplexEventDates()
            : base(Tags.NoComplexEventDates) { }
        public NoComplexEventDates(int val)
            : base(Tags.NoComplexEventDates, val) { }

    }


    /// <summary>
    /// ComplexEventStartDate Field
    /// </summary>/
    public sealed class ComplexEventStartDate : DateOnlyField
    {
        public const int TAG = 1492;

        public ComplexEventStartDate()
            : base(Tags.ComplexEventStartDate) { }
        public ComplexEventStartDate(DateTime val)
            : base(Tags.ComplexEventStartDate, val) { }

    }


    /// <summary>
    /// ComplexEventEndDate Field
    /// </summary>/
    public sealed class ComplexEventEndDate : DateOnlyField
    {
        public const int TAG = 1493;

        public ComplexEventEndDate()
            : base(Tags.ComplexEventEndDate) { }
        public ComplexEventEndDate(DateTime val)
            : base(Tags.ComplexEventEndDate, val) { }

    }


    /// <summary>
    /// NoComplexEventTimes Field
    /// </summary>/
    public sealed class NoComplexEventTimes : IntField
    {
        public const int TAG = 1494;

        public NoComplexEventTimes()
            : base(Tags.NoComplexEventTimes) { }
        public NoComplexEventTimes(int val)
            : base(Tags.NoComplexEventTimes, val) { }

    }


    /// <summary>
    /// ComplexEventStartTime Field
    /// </summary>/
    public sealed class ComplexEventStartTime : TimeOnlyField
    {
        public const int TAG = 1495;

        public ComplexEventStartTime()
            : base(Tags.ComplexEventStartTime) { }
        public ComplexEventStartTime(DateTime val)
            : base(Tags.ComplexEventStartTime, val) { }
        public ComplexEventStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.ComplexEventStartTime, val, showMilliseconds) { }
        public ComplexEventStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ComplexEventStartTime, val, precision) { }

    }


    /// <summary>
    /// ComplexEventEndTime Field
    /// </summary>/
    public sealed class ComplexEventEndTime : TimeOnlyField
    {
        public const int TAG = 1496;

        public ComplexEventEndTime()
            : base(Tags.ComplexEventEndTime) { }
        public ComplexEventEndTime(DateTime val)
            : base(Tags.ComplexEventEndTime, val) { }
        public ComplexEventEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.ComplexEventEndTime, val, showMilliseconds) { }
        public ComplexEventEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ComplexEventEndTime, val, precision) { }

    }


    /// <summary>
    /// StreamAsgnReqID Field
    /// </summary>/
    public sealed class StreamAsgnReqID : StringField
    {
        public const int TAG = 1497;

        public StreamAsgnReqID()
            : base(Tags.StreamAsgnReqID) { }
        public StreamAsgnReqID(string val)
            : base(Tags.StreamAsgnReqID, val) { }

    }


    /// <summary>
    /// StreamAsgnReqType Field
    /// </summary>/
    public sealed class StreamAsgnReqType : IntField
    {
        public const int TAG = 1498;

        public StreamAsgnReqType()
            : base(Tags.StreamAsgnReqType) { }
        public StreamAsgnReqType(int val)
            : base(Tags.StreamAsgnReqType, val) { }


        // Field Enumerations
        public const int STREAM_ASSIGNMENT_FOR_NEW_CUSTOMER = 1;
        public const int STREAM_ASSIGNMENT_FOR_EXISTING_CUSTOMER = 2;
    }


    /// <summary>
    /// NoAsgnReqs Field
    /// </summary>/
    public sealed class NoAsgnReqs : IntField
    {
        public const int TAG = 1499;

        public NoAsgnReqs()
            : base(Tags.NoAsgnReqs) { }
        public NoAsgnReqs(int val)
            : base(Tags.NoAsgnReqs, val) { }

    }


    /// <summary>
    /// MDStreamID Field
    /// </summary>/
    public sealed class MDStreamID : StringField
    {
        public const int TAG = 1500;

        public MDStreamID()
            : base(Tags.MDStreamID) { }
        public MDStreamID(string val)
            : base(Tags.MDStreamID, val) { }

    }


    /// <summary>
    /// StreamAsgnRptID Field
    /// </summary>/
    public sealed class StreamAsgnRptID : StringField
    {
        public const int TAG = 1501;

        public StreamAsgnRptID()
            : base(Tags.StreamAsgnRptID) { }
        public StreamAsgnRptID(string val)
            : base(Tags.StreamAsgnRptID, val) { }

    }


    /// <summary>
    /// StreamAsgnRejReason Field
    /// </summary>/
    public sealed class StreamAsgnRejReason : IntField
    {
        public const int TAG = 1502;

        public StreamAsgnRejReason()
            : base(Tags.StreamAsgnRejReason) { }
        public StreamAsgnRejReason(int val)
            : base(Tags.StreamAsgnRejReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_CLIENT = 0;
        public const int EXCEEDS_MAXIMUM_SIZE = 1;
        public const int UNKNOWN_OR_INVALID_CURRENCY_PAIR = 2;
        public const int NO_AVAILABLE_STREAM = 3;
        public const int OTHER = 99;
    }


    /// <summary>
    /// StreamAsgnAckType Field
    /// </summary>/
    public sealed class StreamAsgnAckType : IntField
    {
        public const int TAG = 1503;

        public StreamAsgnAckType()
            : base(Tags.StreamAsgnAckType) { }
        public StreamAsgnAckType(int val)
            : base(Tags.StreamAsgnAckType, val) { }


        // Field Enumerations
        public const int ASSIGNMENT_ACCEPTED = 0;
        public const int ASSIGNMENT_REJECTED = 1;
    }


    /// <summary>
    /// RelSymTransactTime Field
    /// </summary>/
    public sealed class RelSymTransactTime : DateTimeField
    {
        public const int TAG = 1504;

        public RelSymTransactTime()
            : base(Tags.RelSymTransactTime) { }
        public RelSymTransactTime(DateTime val)
            : base(Tags.RelSymTransactTime, val) { }
        public RelSymTransactTime(DateTime val, bool showMilliseconds)
            : base(Tags.RelSymTransactTime, val, showMilliseconds) { }
        public RelSymTransactTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.RelSymTransactTime, val, precision) { }

    }


    /// <summary>
    /// PartyDetailsListRequestID Field
    /// </summary>/
    public sealed class PartyDetailsListRequestID : StringField
    {
        public const int TAG = 1505;

        public PartyDetailsListRequestID()
            : base(Tags.PartyDetailsListRequestID) { }
        public PartyDetailsListRequestID(string val)
            : base(Tags.PartyDetailsListRequestID, val) { }

    }


    /// <summary>
    /// SideTradeID Field
    /// </summary>/
    public sealed class SideTradeID : StringField
    {
        public const int TAG = 1506;

        public SideTradeID()
            : base(Tags.SideTradeID) { }
        public SideTradeID(string val)
            : base(Tags.SideTradeID, val) { }

    }


    /// <summary>
    /// SideOrigTradeID Field
    /// </summary>/
    public sealed class SideOrigTradeID : StringField
    {
        public const int TAG = 1507;

        public SideOrigTradeID()
            : base(Tags.SideOrigTradeID) { }
        public SideOrigTradeID(string val)
            : base(Tags.SideOrigTradeID, val) { }

    }


    /// <summary>
    /// NoRequestedPartyRoles Field
    /// </summary>/
    public sealed class NoRequestedPartyRoles : IntField
    {
        public const int TAG = 1508;

        public NoRequestedPartyRoles()
            : base(Tags.NoRequestedPartyRoles) { }
        public NoRequestedPartyRoles(int val)
            : base(Tags.NoRequestedPartyRoles, val) { }

    }


    /// <summary>
    /// RequestedPartyRole Field
    /// </summary>/
    public sealed class RequestedPartyRole : IntField
    {
        public const int TAG = 1509;

        public RequestedPartyRole()
            : base(Tags.RequestedPartyRole) { }
        public RequestedPartyRole(int val)
            : base(Tags.RequestedPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// PartyDetailsListReportID Field
    /// </summary>/
    public sealed class PartyDetailsListReportID : StringField
    {
        public const int TAG = 1510;

        public PartyDetailsListReportID()
            : base(Tags.PartyDetailsListReportID) { }
        public PartyDetailsListReportID(string val)
            : base(Tags.PartyDetailsListReportID, val) { }

    }


    /// <summary>
    /// RequestResult Field
    /// </summary>/
    public sealed class RequestResult : IntField
    {
        public const int TAG = 1511;

        public RequestResult()
            : base(Tags.RequestResult) { }
        public RequestResult(int val)
            : base(Tags.RequestResult, val) { }


        // Field Enumerations
        public const int VALID_REQUEST = 0;
        public const int INVALID_OR_UNSUPPORTED_REQUEST = 1;
        public const int NO_DATA_FOUND_THAT_MATCH_SELECTION_CRITERIA = 2;
        public const int NOT_AUTHORIZED_TO_RETRIEVE_DATA = 3;
        public const int DATA_TEMPORARILY_UNAVAILABLE = 4;
        public const int REQUEST_FOR_DATA_NOT_SUPPORTED = 5;
        public const int OTHER = 99;
    }


    /// <summary>
    /// TotNoParties Field
    /// </summary>/
    public sealed class TotNoParties : IntField
    {
        public const int TAG = 1512;

        public TotNoParties()
            : base(Tags.TotNoParties) { }
        public TotNoParties(int val)
            : base(Tags.TotNoParties, val) { }

    }


    /// <summary>
    /// DocumentationText Field
    /// </summary>/
    public sealed class DocumentationText : StringField
    {
        public const int TAG = 1513;

        public DocumentationText()
            : base(Tags.DocumentationText) { }
        public DocumentationText(string val)
            : base(Tags.DocumentationText, val) { }

    }


    /// <summary>
    /// NoPartyRelationships Field
    /// </summary>/
    public sealed class NoPartyRelationships : IntField
    {
        public const int TAG = 1514;

        public NoPartyRelationships()
            : base(Tags.NoPartyRelationships) { }
        public NoPartyRelationships(int val)
            : base(Tags.NoPartyRelationships, val) { }

    }


    /// <summary>
    /// PartyRelationship Field
    /// </summary>/
    public sealed class PartyRelationship : IntField
    {
        public const int TAG = 1515;

        public PartyRelationship()
            : base(Tags.PartyRelationship) { }
        public PartyRelationship(int val)
            : base(Tags.PartyRelationship, val) { }


        // Field Enumerations
        public const int IS_ALSO = 0;
        public const int CLEARS_FOR = 1;
        public const int CLEARS_THROUGH = 2;
        public const int TRADES_FOR = 3;
        public const int TRADES_THROUGH = 4;
        public const int SPONSORS = 5;
        public const int SPONSORED_THROUGH = 6;
        public const int PROVIDES_GUARANTEE_FOR = 7;
        public const int IS_GUARANTEED_BY = 8;
        public const int MEMBER_OF = 9;
        public const int HAS_MEMBERS = 10;
        public const int PROVIDES_MARKETPLACE_FOR = 11;
        public const int PARTICIPANT_OF_MARKETPLACE = 12;
        public const int CARRIES_POSITIONS_FOR = 13;
        public const int POSTS_TRADES_TO = 14;
        public const int ENTERS_TRADES_FOR = 15;
        public const int ENTERS_TRADES_THROUGH = 16;
        public const int PROVIDES_QUOTES_TO = 17;
        public const int REQUESTS_QUOTES_FROM = 18;
        public const int INVESTS_FOR = 19;
        public const int INVESTS_THROUGH = 20;
        public const int BROKERS_TRADES_FOR = 21;
        public const int BROKERS_TRADES_THROUGH = 22;
        public const int PROVIDES_TRADING_SERVICES_FOR = 23;
        public const int USES_TRADING_SERVICES_OF = 24;
        public const int APPROVES_OF = 25;
        public const int APPROVED_BY = 26;
        public const int PARENT_FIRM_FOR = 27;
        public const int SUBSIDIARY_OF = 28;
        public const int REGULATORY_OWNER_OF = 29;
        public const int OWNED_BY_30 = 30;
        public const int CONTROLS = 31;
        public const int IS_CONTROLLED_BY = 32;
        public const int LEGAL = 33;
        public const int OWNED_BY_34 = 34;
        public const int BENEFICIAL_OWNER_OF = 35;
        public const int OWNED_BY_36 = 36;
        public const int SETTLES_FOR = 37;
        public const int SETTLES_THROUGH = 38;
    }


    /// <summary>
    /// NoPartyDetailAltID Field
    /// </summary>/
    public sealed class NoPartyDetailAltID : IntField
    {
        public const int TAG = 1516;

        public NoPartyDetailAltID()
            : base(Tags.NoPartyDetailAltID) { }
        public NoPartyDetailAltID(int val)
            : base(Tags.NoPartyDetailAltID, val) { }

    }


    /// <summary>
    /// PartyDetailAltID Field
    /// </summary>/
    public sealed class PartyDetailAltID : StringField
    {
        public const int TAG = 1517;

        public PartyDetailAltID()
            : base(Tags.PartyDetailAltID) { }
        public PartyDetailAltID(string val)
            : base(Tags.PartyDetailAltID, val) { }

    }


    /// <summary>
    /// PartyDetailAltIDSource Field
    /// </summary>/
    public sealed class PartyDetailAltIDSource : CharField
    {
        public const int TAG = 1518;

        public PartyDetailAltIDSource()
            : base(Tags.PartyDetailAltIDSource) { }
        public PartyDetailAltIDSource(char val)
            : base(Tags.PartyDetailAltIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// NoPartyDetailAltSubIDs Field
    /// </summary>/
    public sealed class NoPartyDetailAltSubIDs : IntField
    {
        public const int TAG = 1519;

        public NoPartyDetailAltSubIDs()
            : base(Tags.NoPartyDetailAltSubIDs) { }
        public NoPartyDetailAltSubIDs(int val)
            : base(Tags.NoPartyDetailAltSubIDs, val) { }

    }


    /// <summary>
    /// PartyDetailAltSubID Field
    /// </summary>/
    public sealed class PartyDetailAltSubID : StringField
    {
        public const int TAG = 1520;

        public PartyDetailAltSubID()
            : base(Tags.PartyDetailAltSubID) { }
        public PartyDetailAltSubID(string val)
            : base(Tags.PartyDetailAltSubID, val) { }

    }


    /// <summary>
    /// PartyDetailAltSubIDType Field
    /// </summary>/
    public sealed class PartyDetailAltSubIDType : IntField
    {
        public const int TAG = 1521;

        public PartyDetailAltSubIDType()
            : base(Tags.PartyDetailAltSubIDType) { }
        public PartyDetailAltSubIDType(int val)
            : base(Tags.PartyDetailAltSubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// DifferentialPrice Field
    /// </summary>/
    public sealed class DifferentialPrice : DecimalField
    {
        public const int TAG = 1522;

        public DifferentialPrice()
            : base(Tags.DifferentialPrice) { }
        public DifferentialPrice(Decimal val)
            : base(Tags.DifferentialPrice, val) { }

    }


    /// <summary>
    /// TrdAckStatus Field
    /// </summary>/
    public sealed class TrdAckStatus : IntField
    {
        public const int TAG = 1523;

        public TrdAckStatus()
            : base(Tags.TrdAckStatus) { }
        public TrdAckStatus(int val)
            : base(Tags.TrdAckStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
        public const int RECEIVED = 2;
    }


    /// <summary>
    /// PriceQuoteCurrency Field
    /// </summary>/
    public sealed class PriceQuoteCurrency : StringField
    {
        public const int TAG = 1524;

        public PriceQuoteCurrency()
            : base(Tags.PriceQuoteCurrency) { }
        public PriceQuoteCurrency(string val)
            : base(Tags.PriceQuoteCurrency, val) { }

    }


    /// <summary>
    /// EncodedDocumentationTextLen Field
    /// </summary>/
    public sealed class EncodedDocumentationTextLen : IntField
    {
        public const int TAG = 1525;

        public EncodedDocumentationTextLen()
            : base(Tags.EncodedDocumentationTextLen) { }
        public EncodedDocumentationTextLen(int val)
            : base(Tags.EncodedDocumentationTextLen, val) { }

    }


    /// <summary>
    /// UnderlyingPriceQuoteCurrency Field
    /// </summary>/
    public sealed class UnderlyingPriceQuoteCurrency : StringField
    {
        public const int TAG = 1526;

        public UnderlyingPriceQuoteCurrency()
            : base(Tags.UnderlyingPriceQuoteCurrency) { }
        public UnderlyingPriceQuoteCurrency(string val)
            : base(Tags.UnderlyingPriceQuoteCurrency, val) { }

    }


    /// <summary>
    /// EncodedDocumentationText Field
    /// </summary>/
    public sealed class EncodedDocumentationText : StringField
    {
        public const int TAG = 1527;

        public EncodedDocumentationText()
            : base(Tags.EncodedDocumentationText) { }
        public EncodedDocumentationText(string val)
            : base(Tags.EncodedDocumentationText, val) { }

    }


    /// <summary>
    /// LegPriceQuoteCurrency Field
    /// </summary>/
    public sealed class LegPriceQuoteCurrency : StringField
    {
        public const int TAG = 1528;

        public LegPriceQuoteCurrency()
            : base(Tags.LegPriceQuoteCurrency) { }
        public LegPriceQuoteCurrency(string val)
            : base(Tags.LegPriceQuoteCurrency, val) { }

    }


    /// <summary>
    /// NoRiskLimitTypes Field
    /// </summary>/
    public sealed class NoRiskLimitTypes : IntField
    {
        public const int TAG = 1529;

        public NoRiskLimitTypes()
            : base(Tags.NoRiskLimitTypes) { }
        public NoRiskLimitTypes(int val)
            : base(Tags.NoRiskLimitTypes, val) { }

    }


    /// <summary>
    /// RiskLimitType Field
    /// </summary>/
    public sealed class RiskLimitType : IntField
    {
        public const int TAG = 1530;

        public RiskLimitType()
            : base(Tags.RiskLimitType) { }
        public RiskLimitType(int val)
            : base(Tags.RiskLimitType, val) { }


        // Field Enumerations
        public const int GROSS_LIMIT = 1;
        public const int NET_LIMIT = 2;
        public const int EXPOSURE = 3;
        public const int LONG_LIMIT = 4;
        public const int SHORT_LIMIT = 5;
        public const int CASH_MARGIN = 6;
        public const int ADDITIONAL_MARGIN = 7;
        public const int TOTAL_MARGIN = 8;
        public const int CREDIT_LIMIT = 0;
        public const int LIMIT_CONSUMED = 9;
        public const int CLIP_SIZE_NOTIONAL_LIMIT_PER_TIME_PERIOD = 10;
        public const int MAXIMUM_NOTIONAL_ORDER_SIZE = 11;
        public const int DV01_PV01_LIMIT = 12;
        public const int CS01_LIMIT = 13;
        public const int VOLUME_LIMIT_PER_TIME_PERIOD = 14;
        public const int VOLUME_FILLED_AS_PERCENT_OF_ORDERED_VOLUME_PER_TIME_PERIOD = 15;
        public const int NOTIONAL_FILLED_AS_PERCENT_OF_NOTIONAL_PER_TIME_PERIOD = 16;
        public const int TRANSACTION_EXECUTION_LIMIT_PER_TIME_PERIOD = 17;
    }


    /// <summary>
    /// RiskLimitAmount Field
    /// </summary>/
    public sealed class RiskLimitAmount : DecimalField
    {
        public const int TAG = 1531;

        public RiskLimitAmount()
            : base(Tags.RiskLimitAmount) { }
        public RiskLimitAmount(Decimal val)
            : base(Tags.RiskLimitAmount, val) { }

    }


    /// <summary>
    /// RiskLimitCurrency Field
    /// </summary>/
    public sealed class RiskLimitCurrency : StringField
    {
        public const int TAG = 1532;

        public RiskLimitCurrency()
            : base(Tags.RiskLimitCurrency) { }
        public RiskLimitCurrency(string val)
            : base(Tags.RiskLimitCurrency, val) { }

    }


    /// <summary>
    /// RiskLimitPlatform Field
    /// </summary>/
    public sealed class RiskLimitPlatform : StringField
    {
        public const int TAG = 1533;

        public RiskLimitPlatform()
            : base(Tags.RiskLimitPlatform) { }
        public RiskLimitPlatform(string val)
            : base(Tags.RiskLimitPlatform, val) { }

    }


    /// <summary>
    /// NoRiskInstrumentScopes Field
    /// </summary>/
    public sealed class NoRiskInstrumentScopes : IntField
    {
        public const int TAG = 1534;

        public NoRiskInstrumentScopes()
            : base(Tags.NoRiskInstrumentScopes) { }
        public NoRiskInstrumentScopes(int val)
            : base(Tags.NoRiskInstrumentScopes, val) { }

    }


    /// <summary>
    /// InstrumentScopeOperator Field
    /// </summary>/
    public sealed class InstrumentScopeOperator : IntField
    {
        public const int TAG = 1535;

        public InstrumentScopeOperator()
            : base(Tags.InstrumentScopeOperator) { }
        public InstrumentScopeOperator(int val)
            : base(Tags.InstrumentScopeOperator, val) { }


        // Field Enumerations
        public const int INCLUDE = 1;
        public const int EXCLUDE = 2;
    }


    /// <summary>
    /// InstrumentScopeSymbol Field
    /// </summary>/
    public sealed class InstrumentScopeSymbol : StringField
    {
        public const int TAG = 1536;

        public InstrumentScopeSymbol()
            : base(Tags.InstrumentScopeSymbol) { }
        public InstrumentScopeSymbol(string val)
            : base(Tags.InstrumentScopeSymbol, val) { }

    }


    /// <summary>
    /// InstrumentScopeSymbolSfx Field
    /// </summary>/
    public sealed class InstrumentScopeSymbolSfx : StringField
    {
        public const int TAG = 1537;

        public InstrumentScopeSymbolSfx()
            : base(Tags.InstrumentScopeSymbolSfx) { }
        public InstrumentScopeSymbolSfx(string val)
            : base(Tags.InstrumentScopeSymbolSfx, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityID Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityID : StringField
    {
        public const int TAG = 1538;

        public InstrumentScopeSecurityID()
            : base(Tags.InstrumentScopeSecurityID) { }
        public InstrumentScopeSecurityID(string val)
            : base(Tags.InstrumentScopeSecurityID, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityIDSource Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityIDSource : StringField
    {
        public const int TAG = 1539;

        public InstrumentScopeSecurityIDSource()
            : base(Tags.InstrumentScopeSecurityIDSource) { }
        public InstrumentScopeSecurityIDSource(string val)
            : base(Tags.InstrumentScopeSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// NoInstrumentScopeSecurityAltID Field
    /// </summary>/
    public sealed class NoInstrumentScopeSecurityAltID : IntField
    {
        public const int TAG = 1540;

        public NoInstrumentScopeSecurityAltID()
            : base(Tags.NoInstrumentScopeSecurityAltID) { }
        public NoInstrumentScopeSecurityAltID(int val)
            : base(Tags.NoInstrumentScopeSecurityAltID, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityAltID Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityAltID : StringField
    {
        public const int TAG = 1541;

        public InstrumentScopeSecurityAltID()
            : base(Tags.InstrumentScopeSecurityAltID) { }
        public InstrumentScopeSecurityAltID(string val)
            : base(Tags.InstrumentScopeSecurityAltID, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityAltIDSource Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityAltIDSource : StringField
    {
        public const int TAG = 1542;

        public InstrumentScopeSecurityAltIDSource()
            : base(Tags.InstrumentScopeSecurityAltIDSource) { }
        public InstrumentScopeSecurityAltIDSource(string val)
            : base(Tags.InstrumentScopeSecurityAltIDSource, val) { }

    }


    /// <summary>
    /// InstrumentScopeProduct Field
    /// </summary>/
    public sealed class InstrumentScopeProduct : IntField
    {
        public const int TAG = 1543;

        public InstrumentScopeProduct()
            : base(Tags.InstrumentScopeProduct) { }
        public InstrumentScopeProduct(int val)
            : base(Tags.InstrumentScopeProduct, val) { }


        // Field Enumerations
        public const int AGENCY = 1;
        public const int COMMODITY = 2;
        public const int CORPORATE = 3;
        public const int CURRENCY = 4;
        public const int EQUITY = 5;
        public const int GOVERNMENT = 6;
        public const int INDEX = 7;
        public const int LOAN = 8;
        public const int MONEYMARKET = 9;
        public const int MORTGAGE = 10;
        public const int MUNICIPAL = 11;
        public const int OTHER = 12;
        public const int FINANCING = 13;
    }


    /// <summary>
    /// InstrumentScopeProductComplex Field
    /// </summary>/
    public sealed class InstrumentScopeProductComplex : StringField
    {
        public const int TAG = 1544;

        public InstrumentScopeProductComplex()
            : base(Tags.InstrumentScopeProductComplex) { }
        public InstrumentScopeProductComplex(string val)
            : base(Tags.InstrumentScopeProductComplex, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityGroup Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityGroup : StringField
    {
        public const int TAG = 1545;

        public InstrumentScopeSecurityGroup()
            : base(Tags.InstrumentScopeSecurityGroup) { }
        public InstrumentScopeSecurityGroup(string val)
            : base(Tags.InstrumentScopeSecurityGroup, val) { }

    }


    /// <summary>
    /// InstrumentScopeCFICode Field
    /// </summary>/
    public sealed class InstrumentScopeCFICode : StringField
    {
        public const int TAG = 1546;

        public InstrumentScopeCFICode()
            : base(Tags.InstrumentScopeCFICode) { }
        public InstrumentScopeCFICode(string val)
            : base(Tags.InstrumentScopeCFICode, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityType Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityType : StringField
    {
        public const int TAG = 1547;

        public InstrumentScopeSecurityType()
            : base(Tags.InstrumentScopeSecurityType) { }
        public InstrumentScopeSecurityType(string val)
            : base(Tags.InstrumentScopeSecurityType, val) { }


        // Field Enumerations
        public const string US_TREASURY_NOTE_UST = "UST";
        public const string US_TREASURY_BILL_USTB = "USTB";
        public const string EURO_SUPRANATIONAL_COUPONS = "EUSUPRA";
        public const string FEDERAL_AGENCY_COUPON = "FAC";
        public const string FEDERAL_AGENCY_DISCOUNT_NOTE = "FADN";
        public const string PRIVATE_EXPORT_FUNDING = "PEF";
        public const string USD_SUPRANATIONAL_COUPONS = "SUPRA";
        public const string CORPORATE_BOND = "CORP";
        public const string CORPORATE_PRIVATE_PLACEMENT = "CPP";
        public const string CONVERTIBLE_BOND = "CB";
        public const string DUAL_CURRENCY = "DUAL";
        public const string EURO_CORPORATE_BOND = "EUCORP";
        public const string EURO_CORPORATE_FLOATING_RATE_NOTES = "EUFRN";
        public const string US_CORPORATE_FLOATING_RATE_NOTES = "FRN";
        public const string INDEXED_LINKED = "XLINKD";
        public const string STRUCTURED_NOTES = "STRUCT";
        public const string YANKEE_CORPORATE_BOND = "YANK";
        public const string FOREIGN_EXCHANGE_CONTRACT = "FOR";
        public const string CREDIT_DEFAULT_SWAP = "CDS";
        public const string FUTURE = "FUT";
        public const string OPTION = "OPT";
        public const string OPTIONS_ON_FUTURES = "OOF";
        public const string OPTIONS_ON_PHYSICAL = "OOP";
        public const string INTEREST_RATE_SWAP = "IRS";
        public const string OPTIONS_ON_COMBO = "OOC";
        public const string COMMON_STOCK = "CS";
        public const string PREFERRED_STOCK = "PS";
        public const string REPURCHASE = "REPO";
        public const string FORWARD = "FORWARD";
        public const string BUY_SELLBACK = "BUYSELL";
        public const string SECURITIES_LOAN = "SECLOAN";
        public const string SECURITIES_PLEDGE = "SECPLEDGE";
        public const string BRADY_BOND = "BRADY";
        public const string CANADIAN_TREASURY_NOTES = "CAN";
        public const string CANADIAN_TREASURY_BILLS = "CTB";
        public const string EURO_SOVEREIGNS = "EUSOV";
        public const string CANADIAN_PROVINCIAL_BONDS = "PROV";
        public const string TREASURY_BILL = "TB";
        public const string US_TREASURY_BOND = "TBOND";
        public const string INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = "TINT";
        public const string US_TREASURY_BILL_TBILL = "TBILL";
        public const string TREASURY_INFLATION_PROTECTED_SECURITIES = "TIPS";
        public const string PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = "TCAL";
        public const string PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = "TPRN";
        public const string US_TREASURY_NOTE_TNOTE = "TNOTE";
        public const string TERM_LOAN = "TERM";
        public const string REVOLVER_LOAN = "RVLV";
        public const string REVOLVER_TERM_LOAN = "RVLVTRM";
        public const string BRIDGE_LOAN = "BRIDGE";
        public const string LETTER_OF_CREDIT = "LOFC";
        public const string SWING_LINE_FACILITY = "SWING";
        public const string DEBTOR_IN_POSSESSION = "DINP";
        public const string DEFAULTED = "DEFLTED";
        public const string WITHDRAWN = "WITHDRN";
        public const string REPLACED = "REPLACD";
        public const string MATURED = "MATURED";
        public const string AMENDED_RESTATED = "AMENDED";
        public const string RETIRED = "RETIRED";
        public const string BANKERS_ACCEPTANCE = "BA";
        public const string BANK_DEPOSITORY_NOTE = "BDN";
        public const string BANK_NOTES = "BN";
        public const string BILL_OF_EXCHANGES = "BOX";
        public const string CANADIAN_MONEY_MARKETS = "CAMM";
        public const string CERTIFICATE_OF_DEPOSIT = "CD";
        public const string CALL_LOANS = "CL";
        public const string COMMERCIAL_PAPER = "CP";
        public const string DEPOSIT_NOTES = "DN";
        public const string EURO_CERTIFICATE_OF_DEPOSIT = "EUCD";
        public const string EURO_COMMERCIAL_PAPER = "EUCP";
        public const string LIQUIDITY_NOTE = "LQN";
        public const string MEDIUM_TERM_NOTES = "MTN";
        public const string OVERNIGHT = "ONITE";
        public const string PROMISSORY_NOTE = "PN";
        public const string SHORT_TERM_LOAN_NOTE = "STN";
        public const string PLAZOS_FIJOS = "PZFJ";
        public const string SECURED_LIQUIDITY_NOTE = "SLQN";
        public const string TIME_DEPOSIT = "TD";
        public const string TERM_LIQUIDITY_NOTE = "TLQN";
        public const string EXTENDED_COMM_NOTE = "XCN";
        public const string YANKEE_CERTIFICATE_OF_DEPOSIT = "YCD";
        public const string ASSET_BACKED_SECURITIES = "ABS";
        public const string CANADIAN_MORTGAGE_BONDS = "CMB";
        public const string CORP_MORTGAGE_BACKED_SECURITIES = "CMBS";
        public const string COLLATERALIZED_MORTGAGE_OBLIGATION = "CMO";
        public const string IOETTE_MORTGAGE = "IET";
        public const string MORTGAGE_BACKED_SECURITIES = "MBS";
        public const string MORTGAGE_INTEREST_ONLY = "MIO";
        public const string MORTGAGE_PRINCIPAL_ONLY = "MPO";
        public const string MORTGAGE_PRIVATE_PLACEMENT = "MPP";
        public const string MISCELLANEOUS_PASS_THROUGH = "MPT";
        public const string PFANDBRIEFE = "PFAND";
        public const string TO_BE_ANNOUNCED = "TBA";
        public const string OTHER_ANTICIPATION_NOTES = "AN";
        public const string CERTIFICATE_OF_OBLIGATION = "COFO";
        public const string CERTIFICATE_OF_PARTICIPATION = "COFP";
        public const string GENERAL_OBLIGATION_BONDS = "GO";
        public const string MANDATORY_TENDER = "MT";
        public const string REVENUE_ANTICIPATION_NOTE = "RAN";
        public const string REVENUE_BONDS = "REV";
        public const string SPECIAL_ASSESSMENT = "SPCLA";
        public const string SPECIAL_OBLIGATION = "SPCLO";
        public const string SPECIAL_TAX = "SPCLT";
        public const string TAX_ANTICIPATION_NOTE = "TAN";
        public const string TAX_ALLOCATION = "TAXA";
        public const string TAX_EXEMPT_COMMERCIAL_PAPER = "TECP";
        public const string TAXABLE_MUNICIPAL_CP = "TMCP";
        public const string TAX_REVENUE_ANTICIPATION_NOTE = "TRAN";
        public const string VARIABLE_RATE_DEMAND_NOTE = "VRDN";
        public const string WARRANT = "WAR";
        public const string MUTUAL_FUND = "MF";
        public const string MULTILEG_INSTRUMENT = "MLEG";
        public const string NO_SECURITY_TYPE = "NONE";
        public const string WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST = "?";
        public const string CASH = "CASH";
        public const string NON_DELIVERABLE_FORWARD = "FXNDF";
        public const string FX_SPOT = "FXSPOT";
        public const string FX_FORWARD = "FXFWD";
        public const string FX_SWAP = "FXSWAP";
        public const string DELIVERY_VERSUS_PLEDGE = "DVPLDG";
        public const string COMMODITY_SWAP = "CMDTYSWAP";
        public const string SWAP_OPTION = "SWAPTION";
        public const string DERIVATIVE_FORWARD = "FWD";
        public const string TOTAL_RETURN_SWAP = "TRS";
        public const string CAP = "CAP";
        public const string COLLAR = "CLLR";
        public const string EXOTIC = "EXOTIC";
        public const string FLOOR = "FLR";
        public const string FORWARD_RATE_AGREEMENT = "FRA";
        public const string LOAN_LEASE = "LOANLEASE";
        public const string SPOT_FORWARD = "SPOTFWD";
        public const string TRANSMISSION = "XMISSION";
        public const string GENERAL_TYPE_FOR_A_CONTRACT_BASED_ON_AN_ESTABLISHED_INDEX = "INDEX";
        public const string COLLATERAL_BASKET = "COLLBSKT";
        public const string BOND_BASKET = "BDBSKT";
        public const string CONTRACT_FOR_DIFFERENCE = "CFD";
        public const string CORRELATION_SWAP = "CRLTNSWAP";
        public const string DIVIDEND_SWAP = "DVDNDSWAP";
        public const string EQUITY_BASKET = "EQBSKT";
        public const string EQUITY_FORWARD = "EQFWD";
        public const string RETURN_SWAP = "RTRNSWAP";
        public const string VARIANCE_SWAP = "VARSWAP";
        public const string NON_DELIVERABLE_SWAP = "FXNDS";
        public const string PORTFOLIO_SWAP = "PRTFLIOSWAP";
        public const string FUTURES_ON_A_SWAP = "FUTSWAP";
        public const string FORWARDS_ON_A_SWAP = "FWDSWAP";
        public const string FORWARD_FREIGHT_AGREEMENT = "FWDFRTAGMT";
        public const string SPREAD_BETTING = "SPREADBET";
        public const string OTHER = "Other";
        public const string DEPOSITORY_RECEIPTS = "DR";
        public const string EXCHANGE_TRADED_COMMODITY = "ETC";
        public const string EXCHANGE_TRADED_NOTE = "ETN";
        public const string SECURITIZED_DERIVATIVE = "SECDERIV";
        public const string STRUCTURED_FINANCE_PRODUCT = "SFP";
        public const string MARGIN_LOAN = "MRGNLOAN";
    }


    /// <summary>
    /// InstrumentScopeSecuritySubType Field
    /// </summary>/
    public sealed class InstrumentScopeSecuritySubType : StringField
    {
        public const int TAG = 1548;

        public InstrumentScopeSecuritySubType()
            : base(Tags.InstrumentScopeSecuritySubType) { }
        public InstrumentScopeSecuritySubType(string val)
            : base(Tags.InstrumentScopeSecuritySubType, val) { }

    }


    /// <summary>
    /// InstrumentScopeMaturityMonthYear Field
    /// </summary>/
    public sealed class InstrumentScopeMaturityMonthYear : StringField
    {
        public const int TAG = 1549;

        public InstrumentScopeMaturityMonthYear()
            : base(Tags.InstrumentScopeMaturityMonthYear) { }
        public InstrumentScopeMaturityMonthYear(string val)
            : base(Tags.InstrumentScopeMaturityMonthYear, val) { }

    }


    /// <summary>
    /// InstrumentScopeMaturityTime Field
    /// </summary>/
    public sealed class InstrumentScopeMaturityTime : StringField
    {
        public const int TAG = 1550;

        public InstrumentScopeMaturityTime()
            : base(Tags.InstrumentScopeMaturityTime) { }
        public InstrumentScopeMaturityTime(string val)
            : base(Tags.InstrumentScopeMaturityTime, val) { }

    }


    /// <summary>
    /// InstrumentScopeRestructuringType Field
    /// </summary>/
    public sealed class InstrumentScopeRestructuringType : StringField
    {
        public const int TAG = 1551;

        public InstrumentScopeRestructuringType()
            : base(Tags.InstrumentScopeRestructuringType) { }
        public InstrumentScopeRestructuringType(string val)
            : base(Tags.InstrumentScopeRestructuringType, val) { }

    }


    /// <summary>
    /// InstrumentScopeSeniority Field
    /// </summary>/
    public sealed class InstrumentScopeSeniority : StringField
    {
        public const int TAG = 1552;

        public InstrumentScopeSeniority()
            : base(Tags.InstrumentScopeSeniority) { }
        public InstrumentScopeSeniority(string val)
            : base(Tags.InstrumentScopeSeniority, val) { }

    }


    /// <summary>
    /// InstrumentScopePutOrCall Field
    /// </summary>/
    public sealed class InstrumentScopePutOrCall : IntField
    {
        public const int TAG = 1553;

        public InstrumentScopePutOrCall()
            : base(Tags.InstrumentScopePutOrCall) { }
        public InstrumentScopePutOrCall(int val)
            : base(Tags.InstrumentScopePutOrCall, val) { }


        // Field Enumerations
        public const int PUT = 0;
        public const int CALL = 1;
        public const int OTHER = 2;
        public const int CHOOSER = 3;
    }


    /// <summary>
    /// InstrumentScopeFlexibleIndicator Field
    /// </summary>/
    public sealed class InstrumentScopeFlexibleIndicator : BooleanField
    {
        public const int TAG = 1554;

        public InstrumentScopeFlexibleIndicator()
            : base(Tags.InstrumentScopeFlexibleIndicator) { }
        public InstrumentScopeFlexibleIndicator(Boolean val)
            : base(Tags.InstrumentScopeFlexibleIndicator, val) { }

    }


    /// <summary>
    /// InstrumentScopeCouponRate Field
    /// </summary>/
    public sealed class InstrumentScopeCouponRate : DecimalField
    {
        public const int TAG = 1555;

        public InstrumentScopeCouponRate()
            : base(Tags.InstrumentScopeCouponRate) { }
        public InstrumentScopeCouponRate(Decimal val)
            : base(Tags.InstrumentScopeCouponRate, val) { }

    }


    /// <summary>
    /// InstrumentScopeSecurityDesc Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityDesc : StringField
    {
        public const int TAG = 1556;

        public InstrumentScopeSecurityDesc()
            : base(Tags.InstrumentScopeSecurityDesc) { }
        public InstrumentScopeSecurityDesc(string val)
            : base(Tags.InstrumentScopeSecurityDesc, val) { }

    }


    /// <summary>
    /// InstrumentScopeSettlType Field
    /// </summary>/
    public sealed class InstrumentScopeSettlType : StringField
    {
        public const int TAG = 1557;

        public InstrumentScopeSettlType()
            : base(Tags.InstrumentScopeSettlType) { }
        public InstrumentScopeSettlType(string val)
            : base(Tags.InstrumentScopeSettlType, val) { }


        // Field Enumerations
        public const string REGULAR = "0";
        public const string CASH = "1";
        public const string NEXT_DAY = "2";
        public const string T_PLUS_2 = "3";
        public const string T_PLUS_3 = "4";
        public const string T_PLUS_4 = "5";
        public const string FUTURE = "6";
        public const string WHEN_AND_IF_ISSUED = "7";
        public const string SELLERS_OPTION = "8";
        public const string T_PLUS_5 = "9";
        public const string BROKEN_DATE = "B";
        public const string FX_SPOT_NEXT_SETTLEMENT = "C";
    }


    /// <summary>
    /// RiskInstrumentMultiplier Field
    /// </summary>/
    public sealed class RiskInstrumentMultiplier : DecimalField
    {
        public const int TAG = 1558;

        public RiskInstrumentMultiplier()
            : base(Tags.RiskInstrumentMultiplier) { }
        public RiskInstrumentMultiplier(Decimal val)
            : base(Tags.RiskInstrumentMultiplier, val) { }

    }


    /// <summary>
    /// NoRiskWarningLevels Field
    /// </summary>/
    public sealed class NoRiskWarningLevels : IntField
    {
        public const int TAG = 1559;

        public NoRiskWarningLevels()
            : base(Tags.NoRiskWarningLevels) { }
        public NoRiskWarningLevels(int val)
            : base(Tags.NoRiskWarningLevels, val) { }

    }


    /// <summary>
    /// RiskWarningLevelPercent Field
    /// </summary>/
    public sealed class RiskWarningLevelPercent : DecimalField
    {
        public const int TAG = 1560;

        public RiskWarningLevelPercent()
            : base(Tags.RiskWarningLevelPercent) { }
        public RiskWarningLevelPercent(Decimal val)
            : base(Tags.RiskWarningLevelPercent, val) { }

    }


    /// <summary>
    /// RiskWarningLevelName Field
    /// </summary>/
    public sealed class RiskWarningLevelName : StringField
    {
        public const int TAG = 1561;

        public RiskWarningLevelName()
            : base(Tags.RiskWarningLevelName) { }
        public RiskWarningLevelName(string val)
            : base(Tags.RiskWarningLevelName, val) { }

    }


    /// <summary>
    /// NoRelatedPartyDetailID Field
    /// </summary>/
    public sealed class NoRelatedPartyDetailID : IntField
    {
        public const int TAG = 1562;

        public NoRelatedPartyDetailID()
            : base(Tags.NoRelatedPartyDetailID) { }
        public NoRelatedPartyDetailID(int val)
            : base(Tags.NoRelatedPartyDetailID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailID Field
    /// </summary>/
    public sealed class RelatedPartyDetailID : StringField
    {
        public const int TAG = 1563;

        public RelatedPartyDetailID()
            : base(Tags.RelatedPartyDetailID) { }
        public RelatedPartyDetailID(string val)
            : base(Tags.RelatedPartyDetailID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailIDSource Field
    /// </summary>/
    public sealed class RelatedPartyDetailIDSource : CharField
    {
        public const int TAG = 1564;

        public RelatedPartyDetailIDSource()
            : base(Tags.RelatedPartyDetailIDSource) { }
        public RelatedPartyDetailIDSource(char val)
            : base(Tags.RelatedPartyDetailIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// RelatedPartyDetailRole Field
    /// </summary>/
    public sealed class RelatedPartyDetailRole : IntField
    {
        public const int TAG = 1565;

        public RelatedPartyDetailRole()
            : base(Tags.RelatedPartyDetailRole) { }
        public RelatedPartyDetailRole(int val)
            : base(Tags.RelatedPartyDetailRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoRelatedPartyDetailSubIDs Field
    /// </summary>/
    public sealed class NoRelatedPartyDetailSubIDs : IntField
    {
        public const int TAG = 1566;

        public NoRelatedPartyDetailSubIDs()
            : base(Tags.NoRelatedPartyDetailSubIDs) { }
        public NoRelatedPartyDetailSubIDs(int val)
            : base(Tags.NoRelatedPartyDetailSubIDs, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailSubID Field
    /// </summary>/
    public sealed class RelatedPartyDetailSubID : StringField
    {
        public const int TAG = 1567;

        public RelatedPartyDetailSubID()
            : base(Tags.RelatedPartyDetailSubID) { }
        public RelatedPartyDetailSubID(string val)
            : base(Tags.RelatedPartyDetailSubID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailSubIDType Field
    /// </summary>/
    public sealed class RelatedPartyDetailSubIDType : IntField
    {
        public const int TAG = 1568;

        public RelatedPartyDetailSubIDType()
            : base(Tags.RelatedPartyDetailSubIDType) { }
        public RelatedPartyDetailSubIDType(int val)
            : base(Tags.RelatedPartyDetailSubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoRelatedPartyDetailAltID Field
    /// </summary>/
    public sealed class NoRelatedPartyDetailAltID : IntField
    {
        public const int TAG = 1569;

        public NoRelatedPartyDetailAltID()
            : base(Tags.NoRelatedPartyDetailAltID) { }
        public NoRelatedPartyDetailAltID(int val)
            : base(Tags.NoRelatedPartyDetailAltID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailAltID Field
    /// </summary>/
    public sealed class RelatedPartyDetailAltID : StringField
    {
        public const int TAG = 1570;

        public RelatedPartyDetailAltID()
            : base(Tags.RelatedPartyDetailAltID) { }
        public RelatedPartyDetailAltID(string val)
            : base(Tags.RelatedPartyDetailAltID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailAltIDSource Field
    /// </summary>/
    public sealed class RelatedPartyDetailAltIDSource : CharField
    {
        public const int TAG = 1571;

        public RelatedPartyDetailAltIDSource()
            : base(Tags.RelatedPartyDetailAltIDSource) { }
        public RelatedPartyDetailAltIDSource(char val)
            : base(Tags.RelatedPartyDetailAltIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// NoRelatedPartyDetailAltSubIDs Field
    /// </summary>/
    public sealed class NoRelatedPartyDetailAltSubIDs : IntField
    {
        public const int TAG = 1572;

        public NoRelatedPartyDetailAltSubIDs()
            : base(Tags.NoRelatedPartyDetailAltSubIDs) { }
        public NoRelatedPartyDetailAltSubIDs(int val)
            : base(Tags.NoRelatedPartyDetailAltSubIDs, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailAltSubID Field
    /// </summary>/
    public sealed class RelatedPartyDetailAltSubID : StringField
    {
        public const int TAG = 1573;

        public RelatedPartyDetailAltSubID()
            : base(Tags.RelatedPartyDetailAltSubID) { }
        public RelatedPartyDetailAltSubID(string val)
            : base(Tags.RelatedPartyDetailAltSubID, val) { }

    }


    /// <summary>
    /// RelatedPartyDetailAltSubIDType Field
    /// </summary>/
    public sealed class RelatedPartyDetailAltSubIDType : IntField
    {
        public const int TAG = 1574;

        public RelatedPartyDetailAltSubIDType()
            : base(Tags.RelatedPartyDetailAltSubIDType) { }
        public RelatedPartyDetailAltSubIDType(int val)
            : base(Tags.RelatedPartyDetailAltSubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// SwapSubClass Field
    /// </summary>/
    public sealed class SwapSubClass : StringField
    {
        public const int TAG = 1575;

        public SwapSubClass()
            : base(Tags.SwapSubClass) { }
        public SwapSubClass(string val)
            : base(Tags.SwapSubClass, val) { }


        // Field Enumerations
        public const string AMORTIZING_NOTIONAL_SCHEDULE = "AMTZ";
        public const string COMPOUNDING = "COMP";
        public const string CONSTANT_NOTIONAL_SCHEDULE = "CNST";
        public const string ACCRETING_NOTIONAL_SCHEDULE = "ACRT";
        public const string CUSTOM_NOTIONAL_SCHEDULE = "CUST";
    }


    /// <summary>
    /// DerivativePriceQuoteCurrency Field
    /// </summary>/
    public sealed class DerivativePriceQuoteCurrency : StringField
    {
        public const int TAG = 1576;

        public DerivativePriceQuoteCurrency()
            : base(Tags.DerivativePriceQuoteCurrency) { }
        public DerivativePriceQuoteCurrency(string val)
            : base(Tags.DerivativePriceQuoteCurrency, val) { }

    }


    /// <summary>
    /// SettlRateIndex Field
    /// </summary>/
    public sealed class SettlRateIndex : StringField
    {
        public const int TAG = 1577;

        public SettlRateIndex()
            : base(Tags.SettlRateIndex) { }
        public SettlRateIndex(string val)
            : base(Tags.SettlRateIndex, val) { }

    }


    /// <summary>
    /// EncodedEventTextLen Field
    /// </summary>/
    public sealed class EncodedEventTextLen : IntField
    {
        public const int TAG = 1578;

        public EncodedEventTextLen()
            : base(Tags.EncodedEventTextLen) { }
        public EncodedEventTextLen(int val)
            : base(Tags.EncodedEventTextLen, val) { }

    }


    /// <summary>
    /// EncodedEventText Field
    /// </summary>/
    public sealed class EncodedEventText : StringField
    {
        public const int TAG = 1579;

        public EncodedEventText()
            : base(Tags.EncodedEventText) { }
        public EncodedEventText(string val)
            : base(Tags.EncodedEventText, val) { }

    }


    /// <summary>
    /// SettlRateIndexLocation Field
    /// </summary>/
    public sealed class SettlRateIndexLocation : StringField
    {
        public const int TAG = 1580;

        public SettlRateIndexLocation()
            : base(Tags.SettlRateIndexLocation) { }
        public SettlRateIndexLocation(string val)
            : base(Tags.SettlRateIndexLocation, val) { }

    }


    /// <summary>
    /// OptionExpirationDesc Field
    /// </summary>/
    public sealed class OptionExpirationDesc : StringField
    {
        public const int TAG = 1581;

        public OptionExpirationDesc()
            : base(Tags.OptionExpirationDesc) { }
        public OptionExpirationDesc(string val)
            : base(Tags.OptionExpirationDesc, val) { }

    }


    /// <summary>
    /// NoSecurityClassifications Field
    /// </summary>/
    public sealed class NoSecurityClassifications : IntField
    {
        public const int TAG = 1582;

        public NoSecurityClassifications()
            : base(Tags.NoSecurityClassifications) { }
        public NoSecurityClassifications(int val)
            : base(Tags.NoSecurityClassifications, val) { }

    }


    /// <summary>
    /// SecurityClassificationReason Field
    /// </summary>/
    public sealed class SecurityClassificationReason : IntField
    {
        public const int TAG = 1583;

        public SecurityClassificationReason()
            : base(Tags.SecurityClassificationReason) { }
        public SecurityClassificationReason(int val)
            : base(Tags.SecurityClassificationReason, val) { }


        // Field Enumerations
        public const int FEE = 0;
        public const int CREDIT_CONTROLS = 1;
        public const int MARGIN = 2;
        public const int ENTITLEMENT = 3;
        public const int MARKET_DATA = 4;
        public const int ACCOUNT_SELECTION = 5;
        public const int DELIVERY_PROCESS = 6;
        public const int SECTOR = 7;
    }


    /// <summary>
    /// SecurityClassificationValue Field
    /// </summary>/
    public sealed class SecurityClassificationValue : StringField
    {
        public const int TAG = 1584;

        public SecurityClassificationValue()
            : base(Tags.SecurityClassificationValue) { }
        public SecurityClassificationValue(string val)
            : base(Tags.SecurityClassificationValue, val) { }

    }


    /// <summary>
    /// PosAmtReason Field
    /// </summary>/
    public sealed class PosAmtReason : IntField
    {
        public const int TAG = 1585;

        public PosAmtReason()
            : base(Tags.PosAmtReason) { }
        public PosAmtReason(int val)
            : base(Tags.PosAmtReason, val) { }


        // Field Enumerations
        public const int OPTIONS_SETTLEMENT = 0;
        public const int PENDING_EROSION_ADJUSTMENT = 1;
        public const int FINAL_EROSION_ADJUSTMENT = 2;
        public const int TEAR_UP_COUPON_AMOUNT = 3;
        public const int PRICE_ALIGNMENT_INTEREST = 4;
        public const int DELIVERY_INVOICE_CHARGES = 5;
        public const int DELIVERY_STORAGE_CHARGES = 6;
    }


    /// <summary>
    /// NoLegPosAmt Field
    /// </summary>/
    public sealed class NoLegPosAmt : IntField
    {
        public const int TAG = 1586;

        public NoLegPosAmt()
            : base(Tags.NoLegPosAmt) { }
        public NoLegPosAmt(int val)
            : base(Tags.NoLegPosAmt, val) { }

    }


    /// <summary>
    /// LegPosAmt Field
    /// </summary>/
    public sealed class LegPosAmt : DecimalField
    {
        public const int TAG = 1587;

        public LegPosAmt()
            : base(Tags.LegPosAmt) { }
        public LegPosAmt(Decimal val)
            : base(Tags.LegPosAmt, val) { }

    }


    /// <summary>
    /// LegPosAmtType Field
    /// </summary>/
    public sealed class LegPosAmtType : StringField
    {
        public const int TAG = 1588;

        public LegPosAmtType()
            : base(Tags.LegPosAmtType) { }
        public LegPosAmtType(string val)
            : base(Tags.LegPosAmtType, val) { }


        // Field Enumerations
        public const string CASH_AMOUNT = "CASH";
        public const string CASH_RESIDUAL_AMOUNT = "CRES";
        public const string FINAL_MARK_TO_MARKET_AMOUNT = "FMTM";
        public const string INCREMENTAL_MARK_TO_MARKET = "IMTM";
        public const string PREMIUM_AMOUNT = "PREM";
        public const string START_OF_DAY_MARK_TO_MARKET = "SMTM";
        public const string TRADE_VARIATION_AMOUNT = "TVAR";
        public const string VALUE_ADJUSTED_AMOUNT = "VADJ";
        public const string SETTLEMENT_VALUE = "SETL";
        public const string INITIAL_TRADE_COUPON_AMOUNT = "ICPN";
        public const string ACCRUED_COUPON_AMOUNT = "ACPN";
        public const string COUPON_AMOUNT = "CPN";
        public const string INCREMENTAL_ACCRUED_COUPON = "IACPN";
        public const string COLLATERALIZED_MARK_TO_MARKET = "CMTM";
        public const string INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET = "ICMTM";
        public const string COMPENSATION_AMOUNT = "DLV";
        public const string TOTAL_BANKED_AMOUNT = "BANK";
        public const string TOTAL_COLLATERALIZED_AMOUNT = "COLAT";
        public const string LONG_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "LSNV";
        public const string SHORT_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "SSNV";
        public const string START_OF_DAY_ACCRUED_COUPON = "SACPN";
        public const string NET_PRESENT_VALUE = "NPV";
        public const string START_OF_DAY_NET_PRESENT_VALUE = "SNPV";
        public const string NET_CASH_FLOW = "NCF";
        public const string PRESENT_VALUE_OF_ALL_FEES = "PVFEES";
        public const string PRESENT_VALUE_OF_ONE_BASIS_POINTS = "PV01";
        public const string THE_FIVE_YEAR_EQUIVALENT_NOTIONAL_AMOUNT = "5YREN";
        public const string UNDISCOUNTED_MARK_TO_MARKET = "UMTM";
        public const string MARK_TO_MODEL = "MTD";
        public const string MARK_TO_MARKET_VARIANCE = "VMTM";
        public const string MARK_TO_MODEL_VARIANCE = "VMTD";
        public const string UPFRONT_PAYMENT = "UPFRNT";
        public const string END_VALUE = "ENDV";
        public const string OUTSTANDING_MARGIN_LOAN = "MGNLN";
        public const string LOAN_VALUE = "LNVL";
    }


    /// <summary>
    /// LegPosCurrency Field
    /// </summary>/
    public sealed class LegPosCurrency : StringField
    {
        public const int TAG = 1589;

        public LegPosCurrency()
            : base(Tags.LegPosCurrency) { }
        public LegPosCurrency(string val)
            : base(Tags.LegPosCurrency, val) { }

    }


    /// <summary>
    /// LegPosAmtReason Field
    /// </summary>/
    public sealed class LegPosAmtReason : IntField
    {
        public const int TAG = 1590;

        public LegPosAmtReason()
            : base(Tags.LegPosAmtReason) { }
        public LegPosAmtReason(int val)
            : base(Tags.LegPosAmtReason, val) { }


        // Field Enumerations
        public const int OPTIONS_SETTLEMENT = 0;
        public const int PENDING_EROSION_ADJUSTMENT = 1;
        public const int FINAL_EROSION_ADJUSTMENT = 2;
        public const int TEAR_UP_COUPON_AMOUNT = 3;
        public const int PRICE_ALIGNMENT_INTEREST = 4;
        public const int DELIVERY_INVOICE_CHARGES = 5;
        public const int DELIVERY_STORAGE_CHARGES = 6;
    }


    /// <summary>
    /// LegQtyType Field
    /// </summary>/
    public sealed class LegQtyType : IntField
    {
        public const int TAG = 1591;

        public LegQtyType()
            : base(Tags.LegQtyType) { }
        public LegQtyType(int val)
            : base(Tags.LegQtyType, val) { }


        // Field Enumerations
        public const int UNITS = 0;
        public const int CONTRACTS = 1;
        public const int UNIT_OF_MEASURE_PER_TIME_UNIT = 2;
    }


    /// <summary>
    /// DiscountFactor Field
    /// </summary>/
    public sealed class DiscountFactor : DecimalField
    {
        public const int TAG = 1592;

        public DiscountFactor()
            : base(Tags.DiscountFactor) { }
        public DiscountFactor(Decimal val)
            : base(Tags.DiscountFactor, val) { }

    }


    /// <summary>
    /// ParentAllocID Field
    /// </summary>/
    public sealed class ParentAllocID : StringField
    {
        public const int TAG = 1593;

        public ParentAllocID()
            : base(Tags.ParentAllocID) { }
        public ParentAllocID(string val)
            : base(Tags.ParentAllocID, val) { }

    }


    /// <summary>
    /// LegSecurityGroup Field
    /// </summary>/
    public sealed class LegSecurityGroup : StringField
    {
        public const int TAG = 1594;

        public LegSecurityGroup()
            : base(Tags.LegSecurityGroup) { }
        public LegSecurityGroup(string val)
            : base(Tags.LegSecurityGroup, val) { }

    }


    /// <summary>
    /// PositionContingentPrice Field
    /// </summary>/
    public sealed class PositionContingentPrice : DecimalField
    {
        public const int TAG = 1595;

        public PositionContingentPrice()
            : base(Tags.PositionContingentPrice) { }
        public PositionContingentPrice(Decimal val)
            : base(Tags.PositionContingentPrice, val) { }

    }


    /// <summary>
    /// ClearingTradePrice Field
    /// </summary>/
    public sealed class ClearingTradePrice : DecimalField
    {
        public const int TAG = 1596;

        public ClearingTradePrice()
            : base(Tags.ClearingTradePrice) { }
        public ClearingTradePrice(Decimal val)
            : base(Tags.ClearingTradePrice, val) { }

    }


    /// <summary>
    /// SideClearingTradePrice Field
    /// </summary>/
    public sealed class SideClearingTradePrice : DecimalField
    {
        public const int TAG = 1597;

        public SideClearingTradePrice()
            : base(Tags.SideClearingTradePrice) { }
        public SideClearingTradePrice(Decimal val)
            : base(Tags.SideClearingTradePrice, val) { }

    }


    /// <summary>
    /// SideClearingTradePriceType Field
    /// </summary>/
    public sealed class SideClearingTradePriceType : IntField
    {
        public const int TAG = 1598;

        public SideClearingTradePriceType()
            : base(Tags.SideClearingTradePriceType) { }
        public SideClearingTradePriceType(int val)
            : base(Tags.SideClearingTradePriceType, val) { }


        // Field Enumerations
        public const int TRADE_CLEARING_AT_EXECUTION_PRICE = 0;
        public const int TRADE_CLEARING_AT_ALTERNATE_CLEARING_PRICE = 1;
    }


    /// <summary>
    /// SidePriceDifferential Field
    /// </summary>/
    public sealed class SidePriceDifferential : DecimalField
    {
        public const int TAG = 1599;

        public SidePriceDifferential()
            : base(Tags.SidePriceDifferential) { }
        public SidePriceDifferential(Decimal val)
            : base(Tags.SidePriceDifferential, val) { }

    }


    /// <summary>
    /// FIXEngineName Field
    /// </summary>/
    public sealed class FIXEngineName : StringField
    {
        public const int TAG = 1600;

        public FIXEngineName()
            : base(Tags.FIXEngineName) { }
        public FIXEngineName(string val)
            : base(Tags.FIXEngineName, val) { }

    }


    /// <summary>
    /// FIXEngineVersion Field
    /// </summary>/
    public sealed class FIXEngineVersion : StringField
    {
        public const int TAG = 1601;

        public FIXEngineVersion()
            : base(Tags.FIXEngineVersion) { }
        public FIXEngineVersion(string val)
            : base(Tags.FIXEngineVersion, val) { }

    }


    /// <summary>
    /// FIXEngineVendor Field
    /// </summary>/
    public sealed class FIXEngineVendor : StringField
    {
        public const int TAG = 1602;

        public FIXEngineVendor()
            : base(Tags.FIXEngineVendor) { }
        public FIXEngineVendor(string val)
            : base(Tags.FIXEngineVendor, val) { }

    }


    /// <summary>
    /// ApplicationSystemName Field
    /// </summary>/
    public sealed class ApplicationSystemName : StringField
    {
        public const int TAG = 1603;

        public ApplicationSystemName()
            : base(Tags.ApplicationSystemName) { }
        public ApplicationSystemName(string val)
            : base(Tags.ApplicationSystemName, val) { }

    }


    /// <summary>
    /// ApplicationSystemVersion Field
    /// </summary>/
    public sealed class ApplicationSystemVersion : StringField
    {
        public const int TAG = 1604;

        public ApplicationSystemVersion()
            : base(Tags.ApplicationSystemVersion) { }
        public ApplicationSystemVersion(string val)
            : base(Tags.ApplicationSystemVersion, val) { }

    }


    /// <summary>
    /// ApplicationSystemVendor Field
    /// </summary>/
    public sealed class ApplicationSystemVendor : StringField
    {
        public const int TAG = 1605;

        public ApplicationSystemVendor()
            : base(Tags.ApplicationSystemVendor) { }
        public ApplicationSystemVendor(string val)
            : base(Tags.ApplicationSystemVendor, val) { }

    }


    /// <summary>
    /// NumOfSimpleInstruments Field
    /// </summary>/
    public sealed class NumOfSimpleInstruments : IntField
    {
        public const int TAG = 1606;

        public NumOfSimpleInstruments()
            : base(Tags.NumOfSimpleInstruments) { }
        public NumOfSimpleInstruments(int val)
            : base(Tags.NumOfSimpleInstruments, val) { }

    }


    /// <summary>
    /// SecurityRejectReason Field
    /// </summary>/
    public sealed class SecurityRejectReason : IntField
    {
        public const int TAG = 1607;

        public SecurityRejectReason()
            : base(Tags.SecurityRejectReason) { }
        public SecurityRejectReason(int val)
            : base(Tags.SecurityRejectReason, val) { }


        // Field Enumerations
        public const int INVALID_INSTRUMENT_REQUESTED = 1;
        public const int INSTRUMENT_ALREADY_EXISTS = 2;
        public const int REQUEST_TYPE_NOT_SUPPORTED = 3;
        public const int SYSTEM_UNAVAILABLE_FOR_INSTRUMENT_CREATION = 4;
        public const int INELIGIBLE_INSTRUMENT_GROUP = 5;
        public const int INSTRUMENT_ID_UNAVAILABLE = 6;
        public const int INVALID_OR_MISSING_DATA_ON_OPTION_LEG = 7;
        public const int INVALID_OR_MISSING_DATA_ON_FUTURE_LEG = 8;
        public const int INVALID_OR_MISSING_DATA_ON_FX_LEG = 10;
        public const int INVALID_LEG_PRICE_SPECIFIED = 11;
        public const int INVALID_INSTRUMENT_STRUCTURE_SPECIFIED = 12;
    }


    /// <summary>
    /// InitialDisplayQty Field
    /// </summary>/
    public sealed class InitialDisplayQty : DecimalField
    {
        public const int TAG = 1608;

        public InitialDisplayQty()
            : base(Tags.InitialDisplayQty) { }
        public InitialDisplayQty(Decimal val)
            : base(Tags.InitialDisplayQty, val) { }

    }


    /// <summary>
    /// ThrottleStatus Field
    /// </summary>/
    public sealed class ThrottleStatus : IntField
    {
        public const int TAG = 1609;

        public ThrottleStatus()
            : base(Tags.ThrottleStatus) { }
        public ThrottleStatus(int val)
            : base(Tags.ThrottleStatus, val) { }


        // Field Enumerations
        public const int THROTTLE_LIMIT_NOT_EXCEEDED_NOT_QUEUED = 0;
        public const int QUEUED_DUE_TO_THROTTLE_LIMIT_EXCEEDED = 1;
    }


    /// <summary>
    /// NoThrottles Field
    /// </summary>/
    public sealed class NoThrottles : IntField
    {
        public const int TAG = 1610;

        public NoThrottles()
            : base(Tags.NoThrottles) { }
        public NoThrottles(int val)
            : base(Tags.NoThrottles, val) { }

    }


    /// <summary>
    /// ThrottleAction Field
    /// </summary>/
    public sealed class ThrottleAction : IntField
    {
        public const int TAG = 1611;

        public ThrottleAction()
            : base(Tags.ThrottleAction) { }
        public ThrottleAction(int val)
            : base(Tags.ThrottleAction, val) { }


        // Field Enumerations
        public const int QUEUE_INBOUND = 0;
        public const int QUEUE_OUTBOUND = 1;
        public const int REJECT = 2;
        public const int DISCONNECT = 3;
        public const int WARNING = 4;
    }


    /// <summary>
    /// ThrottleType Field
    /// </summary>/
    public sealed class ThrottleType : IntField
    {
        public const int TAG = 1612;

        public ThrottleType()
            : base(Tags.ThrottleType) { }
        public ThrottleType(int val)
            : base(Tags.ThrottleType, val) { }


        // Field Enumerations
        public const int INBOUND_RATE = 0;
        public const int OUTSTANDING_REQUESTS = 1;
    }


    /// <summary>
    /// ThrottleNoMsgs Field
    /// </summary>/
    public sealed class ThrottleNoMsgs : IntField
    {
        public const int TAG = 1613;

        public ThrottleNoMsgs()
            : base(Tags.ThrottleNoMsgs) { }
        public ThrottleNoMsgs(int val)
            : base(Tags.ThrottleNoMsgs, val) { }

    }


    /// <summary>
    /// ThrottleTimeInterval Field
    /// </summary>/
    public sealed class ThrottleTimeInterval : IntField
    {
        public const int TAG = 1614;

        public ThrottleTimeInterval()
            : base(Tags.ThrottleTimeInterval) { }
        public ThrottleTimeInterval(int val)
            : base(Tags.ThrottleTimeInterval, val) { }

    }


    /// <summary>
    /// ThrottleTimeUnit Field
    /// </summary>/
    public sealed class ThrottleTimeUnit : IntField
    {
        public const int TAG = 1615;

        public ThrottleTimeUnit()
            : base(Tags.ThrottleTimeUnit) { }
        public ThrottleTimeUnit(int val)
            : base(Tags.ThrottleTimeUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// InstrumentScopeSecurityExchange Field
    /// </summary>/
    public sealed class InstrumentScopeSecurityExchange : StringField
    {
        public const int TAG = 1616;

        public InstrumentScopeSecurityExchange()
            : base(Tags.InstrumentScopeSecurityExchange) { }
        public InstrumentScopeSecurityExchange(string val)
            : base(Tags.InstrumentScopeSecurityExchange, val) { }

    }


    /// <summary>
    /// StreamAsgnType Field
    /// </summary>/
    public sealed class StreamAsgnType : IntField
    {
        public const int TAG = 1617;

        public StreamAsgnType()
            : base(Tags.StreamAsgnType) { }
        public StreamAsgnType(int val)
            : base(Tags.StreamAsgnType, val) { }


        // Field Enumerations
        public const int ASSIGNMENT = 1;
        public const int REJECTED = 2;
        public const int TERMINATE_UNASSIGN = 3;
    }


    /// <summary>
    /// NoThrottleMsgType Field
    /// </summary>/
    public sealed class NoThrottleMsgType : IntField
    {
        public const int TAG = 1618;

        public NoThrottleMsgType()
            : base(Tags.NoThrottleMsgType) { }
        public NoThrottleMsgType(int val)
            : base(Tags.NoThrottleMsgType, val) { }

    }


    /// <summary>
    /// ThrottleMsgType Field
    /// </summary>/
    public sealed class ThrottleMsgType : StringField
    {
        public const int TAG = 1619;

        public ThrottleMsgType()
            : base(Tags.ThrottleMsgType) { }
        public ThrottleMsgType(string val)
            : base(Tags.ThrottleMsgType, val) { }


        // Field Enumerations
        public const string HEARTBEAT = "0";
        public const string ORDERCANCELREJECT = "9";
        public const string TRADINGSESSIONLIST = "BJ";
        public const string TRADINGSESSIONLISTREQUEST = "BI";
        public const string SETTLEMENTOBLIGATIONREPORT = "BQ";
        public const string DERIVATIVESECURITYLISTUPDATEREPORT = "BR";
        public const string TRADINGSESSIONLISTUPDATEREPORT = "BS";
        public const string MARKETDEFINITIONREQUEST = "BT";
        public const string MARKETDEFINITION = "BU";
        public const string MARKETDEFINITIONUPDATEREPORT = "BV";
        public const string APPLICATIONMESSAGEREQUEST = "BW";
        public const string APPLICATIONMESSAGEREQUESTACK = "BX";
        public const string LOGON = "A";
        public const string APPLICATIONMESSAGEREPORT = "BY";
        public const string ORDERMASSACTIONREPORT = "BZ";
        public const string ORDERMASSACTIONREQUEST = "CA";
        public const string USERNOTIFICATION = "CB";
        public const string STREAMASSIGNMENTREQUEST = "CC";
        public const string STREAMASSIGNMENTREPORT = "CD";
        public const string STREAMASSIGNMENTREPORTACK = "CE";
        public const string PARTYDETAILSLISTREQUEST = "CF";
        public const string PARTYDETAILSLISTREPORT = "CG";
        public const string MARGINREQUIREMENTINQUIRY = "CH";
        public const string NEWS = "B";
        public const string MARGINREQUIREMENTINQUIRYACK = "CI";
        public const string MARGINREQUIREMENTREPORT = "CJ";
        public const string PARTYDETAILSLISTUPDATEREPORT = "CK";
        public const string PARTYRISKLIMITSREQUEST = "CL";
        public const string PARTYRISKLIMITSREPORT = "CM";
        public const string SECURITYMASSSTATUSREQUEST = "CN";
        public const string SECURITYMASSSTATUS = "CO";
        public const string ACCOUNTSUMMARYREPORT = "CQ";
        public const string PARTYRISKLIMITSUPDATEREPORT = "CR";
        public const string PARTYRISKLIMITSDEFINITIONREQUEST = "CS";
        public const string EMAIL = "C";
        public const string PARTYRISKLIMITSDEFINITIONREQUESTACK = "CT";
        public const string PARTYENTITLEMENTSREQUEST = "CU";
        public const string PARTYENTITLEMENTSREPORT = "CV";
        public const string QUOTEACK = "CW";
        public const string PARTYDETAILSDEFINITIONREQUEST = "CX";
        public const string PARTYDETAILSDEFINITIONREQUESTACK = "CY";
        public const string PARTYENTITLEMENTSUPDATEREPORT = "CZ";
        public const string PARTYENTITLEMENTSDEFINITIONREQUEST = "DA";
        public const string PARTYENTITLEMENTSDEFINITIONREQUESTACK = "DB";
        public const string TRADEMATCHREPORT = "DC";
        public const string NEWORDERSINGLE = "D";
        public const string TRADEMATCHREPORTACK = "DD";
        public const string PARTYRISKLIMITSREPORTACK = "DE";
        public const string PARTYRISKLIMITCHECKREQUEST = "DF";
        public const string PARTYRISKLIMITCHECKREQUESTACK = "DG";
        public const string PARTYACTIONREQUEST = "DH";
        public const string PARTYACTIONREPORT = "DI";
        public const string MASSORDER = "DJ";
        public const string MASSORDERACK = "DK";
        public const string POSITIONTRANSFERINSTRUCTION = "DL";
        public const string POSITIONTRANSFERINSTRUCTIONACK = "DM";
        public const string NEWORDERLIST = "E";
        public const string POSITIONTRANSFERREPORT = "DN";
        public const string MARKETDATASTATISTICSREQUEST = "DO";
        public const string MARKETDATASTATISTICSREPORT = "DP";
        public const string COLLATERALREPORTACK = "DQ";
        public const string MARKETDATAREPORT = "DR";
        public const string CROSSREQUEST = "DS";
        public const string CROSSREQUESTACK = "DT";
        public const string ALLOCATIONINSTRUCTIONALERTREQUEST = "DU";
        public const string ALLOCATIONINSTRUCTIONALERTREQUESTACK = "DV";
        public const string TRADEAGGREGATIONREQUEST = "DW";
        public const string ORDERCANCELREQUEST = "F";
        public const string TRADEAGGREGATIONREPORT = "DX";
        public const string PAYMANAGEMENTREPORT = "EA";
        public const string PAYMANAGEMENTREPORTACK = "EB";
        public const string PAYMANAGEMENTREQUEST = "DY";
        public const string PAYMANAGEMENTREQUESTACK = "DZ";
        public const string ORDERCANCELREPLACEREQUEST = "G";
        public const string ORDERSTATUSREQUEST = "H";
        public const string ALLOCATIONINSTRUCTION = "J";
        public const string TESTREQUEST = "1";
        public const string LISTCANCELREQUEST = "K";
        public const string LISTEXECUTE = "L";
        public const string LISTSTATUSREQUEST = "M";
        public const string LISTSTATUS = "N";
        public const string ALLOCATIONINSTRUCTIONACK = "P";
        public const string DONTKNOWTRADE = "Q";
        public const string QUOTEREQUEST = "R";
        public const string QUOTE = "S";
        public const string SETTLEMENTINSTRUCTIONS = "T";
        public const string MARKETDATAREQUEST = "V";
        public const string RESENDREQUEST = "2";
        public const string MARKETDATASNAPSHOTFULLREFRESH = "W";
        public const string MARKETDATAINCREMENTALREFRESH = "X";
        public const string MARKETDATAREQUESTREJECT = "Y";
        public const string QUOTECANCEL = "Z";
        public const string QUOTESTATUSREQUEST = "a";
        public const string MASSQUOTEACK = "b";
        public const string SECURITYDEFINITIONREQUEST = "c";
        public const string SECURITYDEFINITION = "d";
        public const string SECURITYSTATUSREQUEST = "e";
        public const string SECURITYSTATUS = "f";
        public const string REJECT = "3";
        public const string TRADINGSESSIONSTATUSREQUEST = "g";
        public const string TRADINGSESSIONSTATUS = "h";
        public const string MASSQUOTE = "i";
        public const string BUSINESSMESSAGEREJECT = "j";
        public const string BIDREQUEST = "k";
        public const string BIDRESPONSE = "l";
        public const string LISTSTRIKEPRICE = "m";
        public const string XMLNONFIX = "n";
        public const string REGISTRATIONINSTRUCTIONS = "o";
        public const string REGISTRATIONINSTRUCTIONSRESPONSE = "p";
        public const string SEQUENCERESET = "4";
        public const string ORDERMASSCANCELREQUEST = "q";
        public const string ORDERMASSCANCELREPORT = "r";
        public const string NEWORDERCROSS = "s";
        public const string CROSSORDERCANCELREPLACEREQUEST = "t";
        public const string CROSSORDERCANCELREQUEST = "u";
        public const string SECURITYTYPEREQUEST = "v";
        public const string SECURITYTYPES = "w";
        public const string SECURITYLISTREQUEST = "x";
        public const string SECURITYLIST = "y";
        public const string DERIVATIVESECURITYLISTREQUEST = "z";
        public const string LOGOUT = "5";
        public const string DERIVATIVESECURITYLIST = "AA";
        public const string NEWORDERMULTILEG = "AB";
        public const string MULTILEGORDERCANCELREPLACE = "AC";
        public const string TRADECAPTUREREPORTREQUEST = "AD";
        public const string TRADECAPTUREREPORT = "AE";
        public const string ORDERMASSSTATUSREQUEST = "AF";
        public const string QUOTEREQUESTREJECT = "AG";
        public const string RFQREQUEST = "AH";
        public const string QUOTESTATUSREPORT = "AI";
        public const string QUOTERESPONSE = "AJ";
        public const string IOI = "6";
        public const string CONFIRMATION = "AK";
        public const string POSITIONMAINTENANCEREQUEST = "AL";
        public const string POSITIONMAINTENANCEREPORT = "AM";
        public const string REQUESTFORPOSITIONS = "AN";
        public const string REQUESTFORPOSITIONSACK = "AO";
        public const string POSITIONREPORT = "AP";
        public const string TRADECAPTUREREPORTREQUESTACK = "AQ";
        public const string TRADECAPTUREREPORTACK = "AR";
        public const string ALLOCATIONREPORT = "AS";
        public const string ALLOCATIONREPORTACK = "AT";
        public const string ADVERTISEMENT = "7";
        public const string CONFIRMATIONACK = "AU";
        public const string SETTLEMENTINSTRUCTIONREQUEST = "AV";
        public const string ASSIGNMENTREPORT = "AW";
        public const string COLLATERALREQUEST = "AX";
        public const string COLLATERALASSIGNMENT = "AY";
        public const string COLLATERALRESPONSE = "AZ";
        public const string COLLATERALREPORT = "BA";
        public const string COLLATERALINQUIRY = "BB";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST = "BC";
        public const string NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE = "BD";
        public const string EXECUTIONREPORT = "8";
        public const string USERREQUEST = "BE";
        public const string USERRESPONSE = "BF";
        public const string COLLATERALINQUIRYACK = "BG";
        public const string CONFIRMATIONREQUEST = "BH";
        public const string CONTRARYINTENTIONREPORT = "BO";
        public const string SECURITYDEFINITIONUPDATEREPORT = "BP";
        public const string SECURITYLISTUPDATEREPORT = "BK";
        public const string ADJUSTEDPOSITIONREPORT = "BL";
        public const string ALLOCATIONINSTRUCTIONALERT = "BM";
        public const string EXECUTIONACK = "BN";
    }


    /// <summary>
    /// InstrumentScopeEncodedSecurityDescLen Field
    /// </summary>/
    public sealed class InstrumentScopeEncodedSecurityDescLen : IntField
    {
        public const int TAG = 1620;

        public InstrumentScopeEncodedSecurityDescLen()
            : base(Tags.InstrumentScopeEncodedSecurityDescLen) { }
        public InstrumentScopeEncodedSecurityDescLen(int val)
            : base(Tags.InstrumentScopeEncodedSecurityDescLen, val) { }

    }


    /// <summary>
    /// InstrumentScopeEncodedSecurityDesc Field
    /// </summary>/
    public sealed class InstrumentScopeEncodedSecurityDesc : StringField
    {
        public const int TAG = 1621;

        public InstrumentScopeEncodedSecurityDesc()
            : base(Tags.InstrumentScopeEncodedSecurityDesc) { }
        public InstrumentScopeEncodedSecurityDesc(string val)
            : base(Tags.InstrumentScopeEncodedSecurityDesc, val) { }

    }


    /// <summary>
    /// FillYieldType Field
    /// </summary>/
    public sealed class FillYieldType : StringField
    {
        public const int TAG = 1622;

        public FillYieldType()
            : base(Tags.FillYieldType) { }
        public FillYieldType(string val)
            : base(Tags.FillYieldType, val) { }

    }


    /// <summary>
    /// FillYield Field
    /// </summary>/
    public sealed class FillYield : DecimalField
    {
        public const int TAG = 1623;

        public FillYield()
            : base(Tags.FillYield) { }
        public FillYield(Decimal val)
            : base(Tags.FillYield, val) { }

    }


    /// <summary>
    /// NoMatchInst Field
    /// </summary>/
    public sealed class NoMatchInst : IntField
    {
        public const int TAG = 1624;

        public NoMatchInst()
            : base(Tags.NoMatchInst) { }
        public NoMatchInst(int val)
            : base(Tags.NoMatchInst, val) { }

    }


    /// <summary>
    /// MatchInst Field
    /// </summary>/
    public sealed class MatchInst : IntField
    {
        public const int TAG = 1625;

        public MatchInst()
            : base(Tags.MatchInst) { }
        public MatchInst(int val)
            : base(Tags.MatchInst, val) { }


        // Field Enumerations
        public const int MATCH = 1;
        public const int DO_NOT_MATCH = 2;
    }


    /// <summary>
    /// MatchAttribTagID Field
    /// </summary>/
    public sealed class MatchAttribTagID : IntField
    {
        public const int TAG = 1626;

        public MatchAttribTagID()
            : base(Tags.MatchAttribTagID) { }
        public MatchAttribTagID(int val)
            : base(Tags.MatchAttribTagID, val) { }

    }


    /// <summary>
    /// MatchAttribValue Field
    /// </summary>/
    public sealed class MatchAttribValue : StringField
    {
        public const int TAG = 1627;

        public MatchAttribValue()
            : base(Tags.MatchAttribValue) { }
        public MatchAttribValue(string val)
            : base(Tags.MatchAttribValue, val) { }

    }


    /// <summary>
    /// TriggerScope Field
    /// </summary>/
    public sealed class TriggerScope : IntField
    {
        public const int TAG = 1628;

        public TriggerScope()
            : base(Tags.TriggerScope) { }
        public TriggerScope(int val)
            : base(Tags.TriggerScope, val) { }


        // Field Enumerations
        public const int THIS_ORDER = 0;
        public const int OTHER_ORDER = 1;
        public const int ALL_OTHER_ORDERS_FOR_THE_GIVEN_SECURITY = 2;
        public const int ALL_OTHER_ORDERS_FOR_THE_GIVEN_SECURITY_AND_PRICE = 3;
        public const int ALL_OTHER_ORDERS_FOR_THE_GIVEN_SECURITY_AND_SIDE = 4;
        public const int ALL_OTHER_ORDERS_FOR_THE_GIVEN_SECURITY_PRICE_AND_SIDE = 5;
    }


    /// <summary>
    /// ExposureDuration Field
    /// </summary>/
    public sealed class ExposureDuration : IntField
    {
        public const int TAG = 1629;

        public ExposureDuration()
            : base(Tags.ExposureDuration) { }
        public ExposureDuration(int val)
            : base(Tags.ExposureDuration, val) { }

    }


    /// <summary>
    /// NoLimitAmts Field
    /// </summary>/
    public sealed class NoLimitAmts : IntField
    {
        public const int TAG = 1630;

        public NoLimitAmts()
            : base(Tags.NoLimitAmts) { }
        public NoLimitAmts(int val)
            : base(Tags.NoLimitAmts, val) { }

    }


    /// <summary>
    /// LimitAmtType Field
    /// </summary>/
    public sealed class LimitAmtType : IntField
    {
        public const int TAG = 1631;

        public LimitAmtType()
            : base(Tags.LimitAmtType) { }
        public LimitAmtType(int val)
            : base(Tags.LimitAmtType, val) { }


        // Field Enumerations
        public const int CREDIT_LIMIT = 0;
        public const int GROSS_POSITION_LIMIT = 1;
        public const int NET_POSITION_LIMIT = 2;
        public const int RISK_EXPOSURE_LIMIT = 3;
        public const int LONG_POSITION_LIMIT = 4;
        public const int SHORT_POSITION_LIMIT = 5;
    }


    /// <summary>
    /// LastLimitAmt Field
    /// </summary>/
    public sealed class LastLimitAmt : DecimalField
    {
        public const int TAG = 1632;

        public LastLimitAmt()
            : base(Tags.LastLimitAmt) { }
        public LastLimitAmt(Decimal val)
            : base(Tags.LastLimitAmt, val) { }

    }


    /// <summary>
    /// LimitAmtRemaining Field
    /// </summary>/
    public sealed class LimitAmtRemaining : DecimalField
    {
        public const int TAG = 1633;

        public LimitAmtRemaining()
            : base(Tags.LimitAmtRemaining) { }
        public LimitAmtRemaining(Decimal val)
            : base(Tags.LimitAmtRemaining, val) { }

    }


    /// <summary>
    /// LimitAmtCurrency Field
    /// </summary>/
    public sealed class LimitAmtCurrency : StringField
    {
        public const int TAG = 1634;

        public LimitAmtCurrency()
            : base(Tags.LimitAmtCurrency) { }
        public LimitAmtCurrency(string val)
            : base(Tags.LimitAmtCurrency, val) { }

    }


    /// <summary>
    /// MarginReqmtInqID Field
    /// </summary>/
    public sealed class MarginReqmtInqID : StringField
    {
        public const int TAG = 1635;

        public MarginReqmtInqID()
            : base(Tags.MarginReqmtInqID) { }
        public MarginReqmtInqID(string val)
            : base(Tags.MarginReqmtInqID, val) { }

    }


    /// <summary>
    /// NoMarginReqmtInqQualifier Field
    /// </summary>/
    public sealed class NoMarginReqmtInqQualifier : IntField
    {
        public const int TAG = 1636;

        public NoMarginReqmtInqQualifier()
            : base(Tags.NoMarginReqmtInqQualifier) { }
        public NoMarginReqmtInqQualifier(int val)
            : base(Tags.NoMarginReqmtInqQualifier, val) { }

    }


    /// <summary>
    /// MarginReqmtInqQualifier Field
    /// </summary>/
    public sealed class MarginReqmtInqQualifier : IntField
    {
        public const int TAG = 1637;

        public MarginReqmtInqQualifier()
            : base(Tags.MarginReqmtInqQualifier) { }
        public MarginReqmtInqQualifier(int val)
            : base(Tags.MarginReqmtInqQualifier, val) { }


        // Field Enumerations
        public const int SUMMARY = 0;
        public const int DETAIL = 1;
        public const int EXCESS_DEFICIT = 2;
        public const int NET_POSITION = 3;
    }


    /// <summary>
    /// MarginReqmtRptType Field
    /// </summary>/
    public sealed class MarginReqmtRptType : IntField
    {
        public const int TAG = 1638;

        public MarginReqmtRptType()
            : base(Tags.MarginReqmtRptType) { }
        public MarginReqmtRptType(int val)
            : base(Tags.MarginReqmtRptType, val) { }


        // Field Enumerations
        public const int SUMMARY = 0;
        public const int DETAIL = 1;
        public const int EXCESS_DEFICIT = 2;
    }


    /// <summary>
    /// MarginClass Field
    /// </summary>/
    public sealed class MarginClass : StringField
    {
        public const int TAG = 1639;

        public MarginClass()
            : base(Tags.MarginClass) { }
        public MarginClass(string val)
            : base(Tags.MarginClass, val) { }

    }


    /// <summary>
    /// MarginReqmtInqStatus Field
    /// </summary>/
    public sealed class MarginReqmtInqStatus : IntField
    {
        public const int TAG = 1640;

        public MarginReqmtInqStatus()
            : base(Tags.MarginReqmtInqStatus) { }
        public MarginReqmtInqStatus(int val)
            : base(Tags.MarginReqmtInqStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_WARNINGS = 1;
        public const int COMPLETED = 2;
        public const int COMPLETED_WITH_WARNINGS = 3;
        public const int REJECTED = 4;
    }


    /// <summary>
    /// MarginReqmtInqResult Field
    /// </summary>/
    public sealed class MarginReqmtInqResult : IntField
    {
        public const int TAG = 1641;

        public MarginReqmtInqResult()
            : base(Tags.MarginReqmtInqResult) { }
        public MarginReqmtInqResult(int val)
            : base(Tags.MarginReqmtInqResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_OR_UNKNOWN_INSTRUMENT = 1;
        public const int INVALID_OR_UNKNOWN_MARGIN_CLASS = 2;
        public const int INVALID_PARTIES = 3;
        public const int INVALID_TRANSPORT_TYPE_REQUESTED = 4;
        public const int INVALID_DESTINATION_REQUESTED = 5;
        public const int NO_MARGIN_REQUIREMENT_FOUND = 6;
        public const int MARGIN_REQUIREMENT_INQUIRY_QUALIFIER_NOT_SUPPORTED = 7;
        public const int UNAUTHORIZED_FOR_MARGIN_REQUIREMENT_INQUIRY = 8;
        public const int OTHER = 99;
    }


    /// <summary>
    /// MarginReqmtRptID Field
    /// </summary>/
    public sealed class MarginReqmtRptID : StringField
    {
        public const int TAG = 1642;

        public MarginReqmtRptID()
            : base(Tags.MarginReqmtRptID) { }
        public MarginReqmtRptID(string val)
            : base(Tags.MarginReqmtRptID, val) { }

    }


    /// <summary>
    /// NoMarginAmt Field
    /// </summary>/
    public sealed class NoMarginAmt : IntField
    {
        public const int TAG = 1643;

        public NoMarginAmt()
            : base(Tags.NoMarginAmt) { }
        public NoMarginAmt(int val)
            : base(Tags.NoMarginAmt, val) { }

    }


    /// <summary>
    /// MarginAmtType Field
    /// </summary>/
    public sealed class MarginAmtType : IntField
    {
        public const int TAG = 1644;

        public MarginAmtType()
            : base(Tags.MarginAmtType) { }
        public MarginAmtType(int val)
            : base(Tags.MarginAmtType, val) { }


        // Field Enumerations
        public const int ADDITIONAL_MARGIN = 1;
        public const int ADJUSTED_MARGIN = 2;
        public const int UNADJUSTED_MARGIN = 3;
        public const int BINARY_ADD_ON_AMOUNT = 4;
        public const int CASH_BALANCE_AMOUNT = 5;
        public const int CONCENTRATION_MARGIN = 6;
        public const int CORE_MARGIN = 7;
        public const int DELIVERY_MARGIN = 8;
        public const int DISCRETIONARY_MARGIN = 9;
        public const int FUTURES_SPREAD_MARGIN = 10;
        public const int INITIAL_MARGIN = 11;
        public const int LIQUIDATING_MARGIN = 12;
        public const int MARGIN_CALL_AMOUNT = 13;
        public const int MARGIN_DEFICIT_AMOUNT = 14;
        public const int MARGIN_EXCESS_AMOUNT = 15;
        public const int OPTION_PREMIUM_AMOUNT = 16;
        public const int PREMIUM_MARGIN = 17;
        public const int RESERVE_MARGIN = 18;
        public const int SECURITY_COLLATERAL_AMOUNT = 19;
        public const int STRESS_TEST_ADD_ON_AMOUNT = 20;
        public const int SUPER_MARGIN = 21;
        public const int TOTAL_MARGIN = 22;
        public const int VARIATION_MARGIN = 23;
        public const int SECONDARY_VARIATION_MARGIN = 24;
        public const int ROLLED_UP_MARGIN_DEFICIT = 25;
        public const int SPREAD_RESPONSE_MARGIN = 26;
        public const int SYSTEMIC_RISK_MARGIN = 27;
        public const int CURVE_RISK_MARGIN = 28;
        public const int INDEX_SPREAD_RISK_MARGIN = 29;
        public const int SECTOR_RISK_MARGIN = 30;
        public const int JUMP_TO_DEFAULT_RISK_MARGIN = 31;
        public const int BASIS_RISK_MARGIN = 32;
        public const int INTEREST_RATE_RISK_MARGIN = 33;
        public const int JUMP_TO_HEALTH_RISK_MARGIN = 34;
        public const int OTHER_RISK_MARGIN = 35;
    }


    /// <summary>
    /// MarginAmt Field
    /// </summary>/
    public sealed class MarginAmt : DecimalField
    {
        public const int TAG = 1645;

        public MarginAmt()
            : base(Tags.MarginAmt) { }
        public MarginAmt(Decimal val)
            : base(Tags.MarginAmt, val) { }

    }


    /// <summary>
    /// MarginAmtCcy Field
    /// </summary>/
    public sealed class MarginAmtCcy : StringField
    {
        public const int TAG = 1646;

        public MarginAmtCcy()
            : base(Tags.MarginAmtCcy) { }
        public MarginAmtCcy(string val)
            : base(Tags.MarginAmtCcy, val) { }

    }


    /// <summary>
    /// NoRelatedInstruments Field
    /// </summary>/
    public sealed class NoRelatedInstruments : IntField
    {
        public const int TAG = 1647;

        public NoRelatedInstruments()
            : base(Tags.NoRelatedInstruments) { }
        public NoRelatedInstruments(int val)
            : base(Tags.NoRelatedInstruments, val) { }

    }


    /// <summary>
    /// RelatedInstrumentType Field
    /// </summary>/
    public sealed class RelatedInstrumentType : IntField
    {
        public const int TAG = 1648;

        public RelatedInstrumentType()
            : base(Tags.RelatedInstrumentType) { }
        public RelatedInstrumentType(int val)
            : base(Tags.RelatedInstrumentType, val) { }


        // Field Enumerations
        public const int HEDGES_FOR_INSTRUMENT = 1;
        public const int UNDERLIER = 2;
        public const int EQUITY_EQUIVALENT = 3;
        public const int NEAREST_EXCHANGE_TRADED_CONTRACT = 4;
        public const int RETAIL_EQUIVALENT_OF_WHOLESALE_INSTRUMENT = 5;
        public const int LEG = 6;
    }


    /// <summary>
    /// RelatedSymbol Field
    /// </summary>/
    public sealed class RelatedSymbol : StringField
    {
        public const int TAG = 1649;

        public RelatedSymbol()
            : base(Tags.RelatedSymbol) { }
        public RelatedSymbol(string val)
            : base(Tags.RelatedSymbol, val) { }

    }


    /// <summary>
    /// RelatedSecurityID Field
    /// </summary>/
    public sealed class RelatedSecurityID : StringField
    {
        public const int TAG = 1650;

        public RelatedSecurityID()
            : base(Tags.RelatedSecurityID) { }
        public RelatedSecurityID(string val)
            : base(Tags.RelatedSecurityID, val) { }

    }


    /// <summary>
    /// RelatedSecurityIDSource Field
    /// </summary>/
    public sealed class RelatedSecurityIDSource : StringField
    {
        public const int TAG = 1651;

        public RelatedSecurityIDSource()
            : base(Tags.RelatedSecurityIDSource) { }
        public RelatedSecurityIDSource(string val)
            : base(Tags.RelatedSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// RelatedSecurityType Field
    /// </summary>/
    public sealed class RelatedSecurityType : StringField
    {
        public const int TAG = 1652;

        public RelatedSecurityType()
            : base(Tags.RelatedSecurityType) { }
        public RelatedSecurityType(string val)
            : base(Tags.RelatedSecurityType, val) { }

    }


    /// <summary>
    /// RelatedMaturityMonthYear Field
    /// </summary>/
    public sealed class RelatedMaturityMonthYear : StringField
    {
        public const int TAG = 1653;

        public RelatedMaturityMonthYear()
            : base(Tags.RelatedMaturityMonthYear) { }
        public RelatedMaturityMonthYear(string val)
            : base(Tags.RelatedMaturityMonthYear, val) { }

    }


    /// <summary>
    /// CoveredQty Field
    /// </summary>/
    public sealed class CoveredQty : DecimalField
    {
        public const int TAG = 1654;

        public CoveredQty()
            : base(Tags.CoveredQty) { }
        public CoveredQty(Decimal val)
            : base(Tags.CoveredQty, val) { }

    }


    /// <summary>
    /// MarketMakerActivity Field
    /// </summary>/
    public sealed class MarketMakerActivity : IntField
    {
        public const int TAG = 1655;

        public MarketMakerActivity()
            : base(Tags.MarketMakerActivity) { }
        public MarketMakerActivity(int val)
            : base(Tags.MarketMakerActivity, val) { }


        // Field Enumerations
        public const int NO_PARTICIPATION = 0;
        public const int BUY_PARTICIPATION = 1;
        public const int SELL_PARTICIPATION = 2;
        public const int BOTH_BUY_AND_SELL_PARTICIPATION = 3;
    }


    /// <summary>
    /// NoInstrumentScopes Field
    /// </summary>/
    public sealed class NoInstrumentScopes : IntField
    {
        public const int TAG = 1656;

        public NoInstrumentScopes()
            : base(Tags.NoInstrumentScopes) { }
        public NoInstrumentScopes(int val)
            : base(Tags.NoInstrumentScopes, val) { }

    }


    /// <summary>
    /// NoRequestingPartyIDs Field
    /// </summary>/
    public sealed class NoRequestingPartyIDs : IntField
    {
        public const int TAG = 1657;

        public NoRequestingPartyIDs()
            : base(Tags.NoRequestingPartyIDs) { }
        public NoRequestingPartyIDs(int val)
            : base(Tags.NoRequestingPartyIDs, val) { }

    }


    /// <summary>
    /// RequestingPartyID Field
    /// </summary>/
    public sealed class RequestingPartyID : StringField
    {
        public const int TAG = 1658;

        public RequestingPartyID()
            : base(Tags.RequestingPartyID) { }
        public RequestingPartyID(string val)
            : base(Tags.RequestingPartyID, val) { }

    }


    /// <summary>
    /// RequestingPartyIDSource Field
    /// </summary>/
    public sealed class RequestingPartyIDSource : CharField
    {
        public const int TAG = 1659;

        public RequestingPartyIDSource()
            : base(Tags.RequestingPartyIDSource) { }
        public RequestingPartyIDSource(char val)
            : base(Tags.RequestingPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// RequestingPartyRole Field
    /// </summary>/
    public sealed class RequestingPartyRole : IntField
    {
        public const int TAG = 1660;

        public RequestingPartyRole()
            : base(Tags.RequestingPartyRole) { }
        public RequestingPartyRole(int val)
            : base(Tags.RequestingPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoRequestingPartySubIDs Field
    /// </summary>/
    public sealed class NoRequestingPartySubIDs : IntField
    {
        public const int TAG = 1661;

        public NoRequestingPartySubIDs()
            : base(Tags.NoRequestingPartySubIDs) { }
        public NoRequestingPartySubIDs(int val)
            : base(Tags.NoRequestingPartySubIDs, val) { }

    }


    /// <summary>
    /// RequestingPartySubID Field
    /// </summary>/
    public sealed class RequestingPartySubID : StringField
    {
        public const int TAG = 1662;

        public RequestingPartySubID()
            : base(Tags.RequestingPartySubID) { }
        public RequestingPartySubID(string val)
            : base(Tags.RequestingPartySubID, val) { }

    }


    /// <summary>
    /// RequestingPartySubIDType Field
    /// </summary>/
    public sealed class RequestingPartySubIDType : IntField
    {
        public const int TAG = 1663;

        public RequestingPartySubIDType()
            : base(Tags.RequestingPartySubIDType) { }
        public RequestingPartySubIDType(int val)
            : base(Tags.RequestingPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// EncodedRejectTextLen Field
    /// </summary>/
    public sealed class EncodedRejectTextLen : IntField
    {
        public const int TAG = 1664;

        public EncodedRejectTextLen()
            : base(Tags.EncodedRejectTextLen) { }
        public EncodedRejectTextLen(int val)
            : base(Tags.EncodedRejectTextLen, val) { }

    }


    /// <summary>
    /// EncodedRejectText Field
    /// </summary>/
    public sealed class EncodedRejectText : StringField
    {
        public const int TAG = 1665;

        public EncodedRejectText()
            : base(Tags.EncodedRejectText) { }
        public EncodedRejectText(string val)
            : base(Tags.EncodedRejectText, val) { }

    }


    /// <summary>
    /// RiskLimitRequestID Field
    /// </summary>/
    public sealed class RiskLimitRequestID : StringField
    {
        public const int TAG = 1666;

        public RiskLimitRequestID()
            : base(Tags.RiskLimitRequestID) { }
        public RiskLimitRequestID(string val)
            : base(Tags.RiskLimitRequestID, val) { }

    }


    /// <summary>
    /// RiskLimitReportID Field
    /// </summary>/
    public sealed class RiskLimitReportID : StringField
    {
        public const int TAG = 1667;

        public RiskLimitReportID()
            : base(Tags.RiskLimitReportID) { }
        public RiskLimitReportID(string val)
            : base(Tags.RiskLimitReportID, val) { }

    }


    /// <summary>
    /// NoRequestedRiskLimitType Field
    /// </summary>/
    public sealed class NoRequestedRiskLimitType : IntField
    {
        public const int TAG = 1668;

        public NoRequestedRiskLimitType()
            : base(Tags.NoRequestedRiskLimitType) { }
        public NoRequestedRiskLimitType(int val)
            : base(Tags.NoRequestedRiskLimitType, val) { }

    }


    /// <summary>
    /// NoRiskLimits Field
    /// </summary>/
    public sealed class NoRiskLimits : IntField
    {
        public const int TAG = 1669;

        public NoRiskLimits()
            : base(Tags.NoRiskLimits) { }
        public NoRiskLimits(int val)
            : base(Tags.NoRiskLimits, val) { }

    }


    /// <summary>
    /// RiskLimitID Field
    /// </summary>/
    public sealed class RiskLimitID : StringField
    {
        public const int TAG = 1670;

        public RiskLimitID()
            : base(Tags.RiskLimitID) { }
        public RiskLimitID(string val)
            : base(Tags.RiskLimitID, val) { }

    }


    /// <summary>
    /// NoPartyDetails Field
    /// </summary>/
    public sealed class NoPartyDetails : IntField
    {
        public const int TAG = 1671;

        public NoPartyDetails()
            : base(Tags.NoPartyDetails) { }
        public NoPartyDetails(int val)
            : base(Tags.NoPartyDetails, val) { }

    }


    /// <summary>
    /// PartyDetailStatus Field
    /// </summary>/
    public sealed class PartyDetailStatus : IntField
    {
        public const int TAG = 1672;

        public PartyDetailStatus()
            : base(Tags.PartyDetailStatus) { }
        public PartyDetailStatus(int val)
            : base(Tags.PartyDetailStatus, val) { }


        // Field Enumerations
        public const int ACTIVE = 0;
        public const int SUSPENDED = 1;
        public const int HALTED = 2;
    }


    /// <summary>
    /// MatchInstMarketID Field
    /// </summary>/
    public sealed class MatchInstMarketID : StringField
    {
        public const int TAG = 1673;

        public MatchInstMarketID()
            : base(Tags.MatchInstMarketID) { }
        public MatchInstMarketID(string val)
            : base(Tags.MatchInstMarketID, val) { }

    }


    /// <summary>
    /// PartyDetailRoleQualifier Field
    /// </summary>/
    public sealed class PartyDetailRoleQualifier : IntField
    {
        public const int TAG = 1674;

        public PartyDetailRoleQualifier()
            : base(Tags.PartyDetailRoleQualifier) { }
        public PartyDetailRoleQualifier(int val)
            : base(Tags.PartyDetailRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// RelatedPartyDetailRoleQualifier Field
    /// </summary>/
    public sealed class RelatedPartyDetailRoleQualifier : IntField
    {
        public const int TAG = 1675;

        public RelatedPartyDetailRoleQualifier()
            : base(Tags.RelatedPartyDetailRoleQualifier) { }
        public RelatedPartyDetailRoleQualifier(int val)
            : base(Tags.RelatedPartyDetailRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// NoPartyUpdates Field
    /// </summary>/
    public sealed class NoPartyUpdates : IntField
    {
        public const int TAG = 1676;

        public NoPartyUpdates()
            : base(Tags.NoPartyUpdates) { }
        public NoPartyUpdates(int val)
            : base(Tags.NoPartyUpdates, val) { }

    }


    /// <summary>
    /// NoPartyRiskLimits Field
    /// </summary>/
    public sealed class NoPartyRiskLimits : IntField
    {
        public const int TAG = 1677;

        public NoPartyRiskLimits()
            : base(Tags.NoPartyRiskLimits) { }
        public NoPartyRiskLimits(int val)
            : base(Tags.NoPartyRiskLimits, val) { }

    }


    /// <summary>
    /// EncodedOptionExpirationDescLen Field
    /// </summary>/
    public sealed class EncodedOptionExpirationDescLen : IntField
    {
        public const int TAG = 1678;

        public EncodedOptionExpirationDescLen()
            : base(Tags.EncodedOptionExpirationDescLen) { }
        public EncodedOptionExpirationDescLen(int val)
            : base(Tags.EncodedOptionExpirationDescLen, val) { }

    }


    /// <summary>
    /// SecurityMassTradingStatus Field
    /// </summary>/
    public sealed class SecurityMassTradingStatus : IntField
    {
        public const int TAG = 1679;

        public SecurityMassTradingStatus()
            : base(Tags.SecurityMassTradingStatus) { }
        public SecurityMassTradingStatus(int val)
            : base(Tags.SecurityMassTradingStatus, val) { }


        // Field Enumerations
        public const int OPENING_DELAY = 1;
        public const int TRADING_HALT = 2;
        public const int RESUME = 3;
        public const int NO_OPEN = 4;
        public const int PRICE_INDICATION = 5;
        public const int TRADING_RANGE_INDICATION = 6;
        public const int MARKET_IMBALANCE_BUY = 7;
        public const int MARKET_IMBALANCE_SELL = 8;
        public const int MARKET_ON_CLOSE_IMBALANCE_BUY = 9;
        public const int MARKET_ON_CLOSE_IMBALANCE_SELL = 10;
        public const int NO_MARKET_IMBALANCE = 12;
        public const int NO_MARKET_ON_CLOSE_IMBALANCE = 13;
        public const int ITS_PRE_OPENING = 14;
        public const int NEW_PRICE_INDICATION = 15;
        public const int TRADE_DISSEMINATION_TIME = 16;
        public const int READY_TO_TRADE = 17;
        public const int NOT_AVAILABLE_FOR_TRADING = 18;
        public const int NOT_TRADED_ON_THIS_MARKET = 19;
        public const int UNKNOWN_OR_INVALID = 20;
        public const int PRE_OPEN = 21;
        public const int OPENING_ROTATION = 22;
        public const int FAST_MARKET = 23;
        public const int PRE_CROSS = 24;
        public const int CROSS = 25;
        public const int POST_CLOSE = 26;
        public const int NO_CANCEL = 27;
    }


    /// <summary>
    /// SecurityMassTradingEvent Field
    /// </summary>/
    public sealed class SecurityMassTradingEvent : IntField
    {
        public const int TAG = 1680;

        public SecurityMassTradingEvent()
            : base(Tags.SecurityMassTradingEvent) { }
        public SecurityMassTradingEvent(int val)
            : base(Tags.SecurityMassTradingEvent, val) { }


        // Field Enumerations
        public const int ORDER_IMBALANCE_AUCTION_IS_EXTENDED = 1;
        public const int TRADING_RESUMES = 2;
        public const int PRICE_VOLATILITY_INTERRUPTION = 3;
        public const int CHANGE_OF_TRADING_SESSION = 4;
        public const int CHANGE_OF_TRADING_SUBSESSION = 5;
        public const int CHANGE_OF_SECURITY_TRADING_STATUS = 6;
        public const int CHANGE_OF_BOOK_TYPE = 7;
        public const int CHANGE_OF_MARKET_DEPTH = 8;
        public const int CORPORATE_ACTION = 9;
    }


    /// <summary>
    /// MassHaltReason Field
    /// </summary>/
    public sealed class MassHaltReason : IntField
    {
        public const int TAG = 1681;

        public MassHaltReason()
            : base(Tags.MassHaltReason) { }
        public MassHaltReason(int val)
            : base(Tags.MassHaltReason, val) { }


        // Field Enumerations
        public const int NEWS_DISSEMINATION = 0;
        public const int ORDER_INFLUX = 1;
        public const int ORDER_IMBALANCE = 2;
        public const int ADDITIONAL_INFORMATION = 3;
        public const int NEWS_PENDING = 4;
        public const int EQUIPMENT_CHANGEOVER = 5;
    }


    /// <summary>
    /// MDSecurityTradingStatus Field
    /// </summary>/
    public sealed class MDSecurityTradingStatus : IntField
    {
        public const int TAG = 1682;

        public MDSecurityTradingStatus()
            : base(Tags.MDSecurityTradingStatus) { }
        public MDSecurityTradingStatus(int val)
            : base(Tags.MDSecurityTradingStatus, val) { }


        // Field Enumerations
        public const int OPENING_DELAY = 1;
        public const int TRADING_HALT = 2;
        public const int RESUME = 3;
        public const int NO_OPEN = 4;
        public const int PRICE_INDICATION = 5;
        public const int TRADING_RANGE_INDICATION = 6;
        public const int MARKET_IMBALANCE_BUY = 7;
        public const int MARKET_IMBALANCE_SELL = 8;
        public const int MARKET_ON_CLOSE_IMBALANCE_BUY = 9;
        public const int MARKET_ON_CLOSE_IMBALANCE_SELL = 10;
        public const int NO_MARKET_IMBALANCE = 12;
        public const int NO_MARKET_ON_CLOSE_IMBALANCE = 13;
        public const int ITS_PRE_OPENING = 14;
        public const int NEW_PRICE_INDICATION = 15;
        public const int TRADE_DISSEMINATION_TIME = 16;
        public const int READY_TO_TRADE = 17;
        public const int NOT_AVAILABLE_FOR_TRADING = 18;
        public const int NOT_TRADED_ON_THIS_MARKET = 19;
        public const int UNKNOWN_OR_INVALID = 20;
        public const int PRE_OPEN = 21;
        public const int OPENING_ROTATION = 22;
        public const int FAST_MARKET = 23;
        public const int PRE_CROSS = 24;
        public const int CROSS = 25;
        public const int POST_CLOSE = 26;
        public const int NO_CANCEL = 27;
    }


    /// <summary>
    /// MDSubFeedType Field
    /// </summary>/
    public sealed class MDSubFeedType : StringField
    {
        public const int TAG = 1683;

        public MDSubFeedType()
            : base(Tags.MDSubFeedType) { }
        public MDSubFeedType(string val)
            : base(Tags.MDSubFeedType, val) { }

    }


    /// <summary>
    /// MDHaltReason Field
    /// </summary>/
    public sealed class MDHaltReason : IntField
    {
        public const int TAG = 1684;

        public MDHaltReason()
            : base(Tags.MDHaltReason) { }
        public MDHaltReason(int val)
            : base(Tags.MDHaltReason, val) { }


        // Field Enumerations
        public const int NEWS_DISSEMINATION = 0;
        public const int ORDER_INFLUX = 1;
        public const int ORDER_IMBALANCE = 2;
        public const int ADDITIONAL_INFORMATION = 3;
        public const int NEWS_PENDING = 4;
        public const int EQUIPMENT_CHANGEOVER = 5;
    }


    /// <summary>
    /// ThrottleInst Field
    /// </summary>/
    public sealed class ThrottleInst : IntField
    {
        public const int TAG = 1685;

        public ThrottleInst()
            : base(Tags.ThrottleInst) { }
        public ThrottleInst(int val)
            : base(Tags.ThrottleInst, val) { }


        // Field Enumerations
        public const int REJECT_IF_THROTTLE_LIMIT_EXCEEDED = 0;
        public const int QUEUE_IF_THROTTLE_LIMIT_EXCEEDED = 1;
    }


    /// <summary>
    /// ThrottleCountIndicator Field
    /// </summary>/
    public sealed class ThrottleCountIndicator : IntField
    {
        public const int TAG = 1686;

        public ThrottleCountIndicator()
            : base(Tags.ThrottleCountIndicator) { }
        public ThrottleCountIndicator(int val)
            : base(Tags.ThrottleCountIndicator, val) { }


        // Field Enumerations
        public const int OUTSTANDING_REQUESTS_UNCHANGED = 0;
        public const int OUTSTANDING_REQUESTS_DECREASED = 1;
    }


    /// <summary>
    /// ShortSaleRestriction Field
    /// </summary>/
    public sealed class ShortSaleRestriction : IntField
    {
        public const int TAG = 1687;

        public ShortSaleRestriction()
            : base(Tags.ShortSaleRestriction) { }
        public ShortSaleRestriction(int val)
            : base(Tags.ShortSaleRestriction, val) { }


        // Field Enumerations
        public const int NO_RESTRICTIONS = 0;
        public const int SECURITY_IS_NOT_SHORTABLE = 1;
        public const int SECURITY_NOT_SHORTABLE_AT_OR_BELOW_THE_BEST_BID = 2;
        public const int SECURITY_IS_NOT_SHORTABLE_WITHOUT_PRE_BORROW = 3;
    }


    /// <summary>
    /// ShortSaleExemptionReason Field
    /// </summary>/
    public sealed class ShortSaleExemptionReason : IntField
    {
        public const int TAG = 1688;

        public ShortSaleExemptionReason()
            : base(Tags.ShortSaleExemptionReason) { }
        public ShortSaleExemptionReason(int val)
            : base(Tags.ShortSaleExemptionReason, val) { }


        // Field Enumerations
        public const int EXEMPTION_REASON_UNKNOWN = 0;
        public const int INCOME_SELL_SHORT_EXEMPT = 1;
        public const int ABOVE_NATIONAL_BEST_BID = 2;
        public const int DELAYED_DELIVERY = 3;
        public const int ODD_LOT = 4;
        public const int DOMESTIC_ARBITRAGE = 5;
        public const int INTERNATIONAL_ARBITRAGE = 6;
        public const int UNDERWRITER_OR_SYNDICATE_DISTRIBUTION = 7;
        public const int RISKLESS_PRINCIPAL = 8;
        public const int VWAP = 9;
    }


    /// <summary>
    /// LegShortSaleExemptionReason Field
    /// </summary>/
    public sealed class LegShortSaleExemptionReason : IntField
    {
        public const int TAG = 1689;

        public LegShortSaleExemptionReason()
            : base(Tags.LegShortSaleExemptionReason) { }
        public LegShortSaleExemptionReason(int val)
            : base(Tags.LegShortSaleExemptionReason, val) { }


        // Field Enumerations
        public const int EXEMPTION_REASON_UNKNOWN = 0;
        public const int INCOME_SELL_SHORT_EXEMPT = 1;
        public const int ABOVE_NATIONAL_BEST_BID = 2;
        public const int DELAYED_DELIVERY = 3;
        public const int ODD_LOT = 4;
        public const int DOMESTIC_ARBITRAGE = 5;
        public const int INTERNATIONAL_ARBITRAGE = 6;
        public const int UNDERWRITER_OR_SYNDICATE_DISTRIBUTION = 7;
        public const int RISKLESS_PRINCIPAL = 8;
        public const int VWAP = 9;
    }


    /// <summary>
    /// SideShortSaleExemptionReason Field
    /// </summary>/
    public sealed class SideShortSaleExemptionReason : IntField
    {
        public const int TAG = 1690;

        public SideShortSaleExemptionReason()
            : base(Tags.SideShortSaleExemptionReason) { }
        public SideShortSaleExemptionReason(int val)
            : base(Tags.SideShortSaleExemptionReason, val) { }


        // Field Enumerations
        public const int EXEMPTION_REASON_UNKNOWN = 0;
        public const int INCOME_SELL_SHORT_EXEMPT = 1;
        public const int ABOVE_NATIONAL_BEST_BID = 2;
        public const int DELAYED_DELIVERY = 3;
        public const int ODD_LOT = 4;
        public const int DOMESTIC_ARBITRAGE = 5;
        public const int INTERNATIONAL_ARBITRAGE = 6;
        public const int UNDERWRITER_OR_SYNDICATE_DISTRIBUTION = 7;
        public const int RISKLESS_PRINCIPAL = 8;
        public const int VWAP = 9;
    }


    /// <summary>
    /// PartyDetailID Field
    /// </summary>/
    public sealed class PartyDetailID : StringField
    {
        public const int TAG = 1691;

        public PartyDetailID()
            : base(Tags.PartyDetailID) { }
        public PartyDetailID(string val)
            : base(Tags.PartyDetailID, val) { }

    }


    /// <summary>
    /// PartyDetailIDSource Field
    /// </summary>/
    public sealed class PartyDetailIDSource : CharField
    {
        public const int TAG = 1692;

        public PartyDetailIDSource()
            : base(Tags.PartyDetailIDSource) { }
        public PartyDetailIDSource(char val)
            : base(Tags.PartyDetailIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// PartyDetailRole Field
    /// </summary>/
    public sealed class PartyDetailRole : IntField
    {
        public const int TAG = 1693;

        public PartyDetailRole()
            : base(Tags.PartyDetailRole) { }
        public PartyDetailRole(int val)
            : base(Tags.PartyDetailRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoPartyDetailSubIDs Field
    /// </summary>/
    public sealed class NoPartyDetailSubIDs : IntField
    {
        public const int TAG = 1694;

        public NoPartyDetailSubIDs()
            : base(Tags.NoPartyDetailSubIDs) { }
        public NoPartyDetailSubIDs(int val)
            : base(Tags.NoPartyDetailSubIDs, val) { }

    }


    /// <summary>
    /// PartyDetailSubID Field
    /// </summary>/
    public sealed class PartyDetailSubID : StringField
    {
        public const int TAG = 1695;

        public PartyDetailSubID()
            : base(Tags.PartyDetailSubID) { }
        public PartyDetailSubID(string val)
            : base(Tags.PartyDetailSubID, val) { }

    }


    /// <summary>
    /// PartyDetailSubIDType Field
    /// </summary>/
    public sealed class PartyDetailSubIDType : IntField
    {
        public const int TAG = 1696;

        public PartyDetailSubIDType()
            : base(Tags.PartyDetailSubIDType) { }
        public PartyDetailSubIDType(int val)
            : base(Tags.PartyDetailSubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// EncodedOptionExpirationDesc Field
    /// </summary>/
    public sealed class EncodedOptionExpirationDesc : StringField
    {
        public const int TAG = 1697;

        public EncodedOptionExpirationDesc()
            : base(Tags.EncodedOptionExpirationDesc) { }
        public EncodedOptionExpirationDesc(string val)
            : base(Tags.EncodedOptionExpirationDesc, val) { }

    }


    /// <summary>
    /// StrikeUnitOfMeasure Field
    /// </summary>/
    public sealed class StrikeUnitOfMeasure : StringField
    {
        public const int TAG = 1698;

        public StrikeUnitOfMeasure()
            : base(Tags.StrikeUnitOfMeasure) { }
        public StrikeUnitOfMeasure(string val)
            : base(Tags.StrikeUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// AccountSummaryReportID Field
    /// </summary>/
    public sealed class AccountSummaryReportID : StringField
    {
        public const int TAG = 1699;

        public AccountSummaryReportID()
            : base(Tags.AccountSummaryReportID) { }
        public AccountSummaryReportID(string val)
            : base(Tags.AccountSummaryReportID, val) { }

    }


    /// <summary>
    /// NoSettlementAmounts Field
    /// </summary>/
    public sealed class NoSettlementAmounts : IntField
    {
        public const int TAG = 1700;

        public NoSettlementAmounts()
            : base(Tags.NoSettlementAmounts) { }
        public NoSettlementAmounts(int val)
            : base(Tags.NoSettlementAmounts, val) { }

    }


    /// <summary>
    /// SettlementAmount Field
    /// </summary>/
    public sealed class SettlementAmount : DecimalField
    {
        public const int TAG = 1701;

        public SettlementAmount()
            : base(Tags.SettlementAmount) { }
        public SettlementAmount(Decimal val)
            : base(Tags.SettlementAmount, val) { }

    }


    /// <summary>
    /// SettlementAmountCurrency Field
    /// </summary>/
    public sealed class SettlementAmountCurrency : StringField
    {
        public const int TAG = 1702;

        public SettlementAmountCurrency()
            : base(Tags.SettlementAmountCurrency) { }
        public SettlementAmountCurrency(string val)
            : base(Tags.SettlementAmountCurrency, val) { }

    }


    /// <summary>
    /// NoCollateralAmounts Field
    /// </summary>/
    public sealed class NoCollateralAmounts : IntField
    {
        public const int TAG = 1703;

        public NoCollateralAmounts()
            : base(Tags.NoCollateralAmounts) { }
        public NoCollateralAmounts(int val)
            : base(Tags.NoCollateralAmounts, val) { }

    }


    /// <summary>
    /// CurrentCollateralAmount Field
    /// </summary>/
    public sealed class CurrentCollateralAmount : DecimalField
    {
        public const int TAG = 1704;

        public CurrentCollateralAmount()
            : base(Tags.CurrentCollateralAmount) { }
        public CurrentCollateralAmount(Decimal val)
            : base(Tags.CurrentCollateralAmount, val) { }

    }


    /// <summary>
    /// CollateralCurrency Field
    /// </summary>/
    public sealed class CollateralCurrency : StringField
    {
        public const int TAG = 1705;

        public CollateralCurrency()
            : base(Tags.CollateralCurrency) { }
        public CollateralCurrency(string val)
            : base(Tags.CollateralCurrency, val) { }

    }


    /// <summary>
    /// CollateralType Field
    /// </summary>/
    public sealed class CollateralType : StringField
    {
        public const int TAG = 1706;

        public CollateralType()
            : base(Tags.CollateralType) { }
        public CollateralType(string val)
            : base(Tags.CollateralType, val) { }

    }


    /// <summary>
    /// NoPayCollects Field
    /// </summary>/
    public sealed class NoPayCollects : IntField
    {
        public const int TAG = 1707;

        public NoPayCollects()
            : base(Tags.NoPayCollects) { }
        public NoPayCollects(int val)
            : base(Tags.NoPayCollects, val) { }

    }


    /// <summary>
    /// PayCollectType Field
    /// </summary>/
    public sealed class PayCollectType : StringField
    {
        public const int TAG = 1708;

        public PayCollectType()
            : base(Tags.PayCollectType) { }
        public PayCollectType(string val)
            : base(Tags.PayCollectType, val) { }

    }


    /// <summary>
    /// PayCollectCurrency Field
    /// </summary>/
    public sealed class PayCollectCurrency : StringField
    {
        public const int TAG = 1709;

        public PayCollectCurrency()
            : base(Tags.PayCollectCurrency) { }
        public PayCollectCurrency(string val)
            : base(Tags.PayCollectCurrency, val) { }

    }


    /// <summary>
    /// PayAmount Field
    /// </summary>/
    public sealed class PayAmount : DecimalField
    {
        public const int TAG = 1710;

        public PayAmount()
            : base(Tags.PayAmount) { }
        public PayAmount(Decimal val)
            : base(Tags.PayAmount, val) { }

    }


    /// <summary>
    /// CollectAmount Field
    /// </summary>/
    public sealed class CollectAmount : DecimalField
    {
        public const int TAG = 1711;

        public CollectAmount()
            : base(Tags.CollectAmount) { }
        public CollectAmount(Decimal val)
            : base(Tags.CollectAmount, val) { }

    }


    /// <summary>
    /// PayCollectMarketSegmentID Field
    /// </summary>/
    public sealed class PayCollectMarketSegmentID : StringField
    {
        public const int TAG = 1712;

        public PayCollectMarketSegmentID()
            : base(Tags.PayCollectMarketSegmentID) { }
        public PayCollectMarketSegmentID(string val)
            : base(Tags.PayCollectMarketSegmentID, val) { }

    }


    /// <summary>
    /// PayCollectMarketID Field
    /// </summary>/
    public sealed class PayCollectMarketID : StringField
    {
        public const int TAG = 1713;

        public PayCollectMarketID()
            : base(Tags.PayCollectMarketID) { }
        public PayCollectMarketID(string val)
            : base(Tags.PayCollectMarketID, val) { }

    }


    /// <summary>
    /// MarginAmountMarketSegmentID Field
    /// </summary>/
    public sealed class MarginAmountMarketSegmentID : StringField
    {
        public const int TAG = 1714;

        public MarginAmountMarketSegmentID()
            : base(Tags.MarginAmountMarketSegmentID) { }
        public MarginAmountMarketSegmentID(string val)
            : base(Tags.MarginAmountMarketSegmentID, val) { }

    }


    /// <summary>
    /// MarginAmountMarketID Field
    /// </summary>/
    public sealed class MarginAmountMarketID : StringField
    {
        public const int TAG = 1715;

        public MarginAmountMarketID()
            : base(Tags.MarginAmountMarketID) { }
        public MarginAmountMarketID(string val)
            : base(Tags.MarginAmountMarketID, val) { }

    }


    /// <summary>
    /// UnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class UnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1716;

        public UnitOfMeasureCurrency()
            : base(Tags.UnitOfMeasureCurrency) { }
        public UnitOfMeasureCurrency(string val)
            : base(Tags.UnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// PriceUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class PriceUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1717;

        public PriceUnitOfMeasureCurrency()
            : base(Tags.PriceUnitOfMeasureCurrency) { }
        public PriceUnitOfMeasureCurrency(string val)
            : base(Tags.PriceUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class UnderlyingUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1718;

        public UnderlyingUnitOfMeasureCurrency()
            : base(Tags.UnderlyingUnitOfMeasureCurrency) { }
        public UnderlyingUnitOfMeasureCurrency(string val)
            : base(Tags.UnderlyingUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPriceUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class UnderlyingPriceUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1719;

        public UnderlyingPriceUnitOfMeasureCurrency()
            : base(Tags.UnderlyingPriceUnitOfMeasureCurrency) { }
        public UnderlyingPriceUnitOfMeasureCurrency(string val)
            : base(Tags.UnderlyingPriceUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// LegUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class LegUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1720;

        public LegUnitOfMeasureCurrency()
            : base(Tags.LegUnitOfMeasureCurrency) { }
        public LegUnitOfMeasureCurrency(string val)
            : base(Tags.LegUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// LegPriceUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class LegPriceUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1721;

        public LegPriceUnitOfMeasureCurrency()
            : base(Tags.LegPriceUnitOfMeasureCurrency) { }
        public LegPriceUnitOfMeasureCurrency(string val)
            : base(Tags.LegPriceUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// DerivativeUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class DerivativeUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1722;

        public DerivativeUnitOfMeasureCurrency()
            : base(Tags.DerivativeUnitOfMeasureCurrency) { }
        public DerivativeUnitOfMeasureCurrency(string val)
            : base(Tags.DerivativeUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// DerivativePriceUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class DerivativePriceUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1723;

        public DerivativePriceUnitOfMeasureCurrency()
            : base(Tags.DerivativePriceUnitOfMeasureCurrency) { }
        public DerivativePriceUnitOfMeasureCurrency(string val)
            : base(Tags.DerivativePriceUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// OrderOrigination Field
    /// </summary>/
    public sealed class OrderOrigination : IntField
    {
        public const int TAG = 1724;

        public OrderOrigination()
            : base(Tags.OrderOrigination) { }
        public OrderOrigination(int val)
            : base(Tags.OrderOrigination, val) { }


        // Field Enumerations
        public const int ORDER_RECEIVED_FROM_A_CUSTOMER = 1;
        public const int ORDER_RECEIVED_FROM_WITHIN_THE_FIRM = 2;
        public const int ORDER_RECEIVED_FROM_ANOTHER_BROKER_DEALER = 3;
        public const int ORDER_RECEIVED_FROM_A_CUSTOMER_OR_ORIGINATED_FROM_WITHIN_THE_FIRM = 4;
        public const int ORDER_RECEIVED_FROM_A_DIRECT_ACCESS_OR_SPONSORED_ACCESS_CUSTOMER = 5;
        public const int ORDER_RECEIVED_FROM_A_FOREIGN_DEALER_EQUIVALENT = 6;
        public const int ORDER_RECEIVED_FROM_AN_EXECUTION_ONLY_SERVICE = 7;
    }


    /// <summary>
    /// OriginatingDeptID Field
    /// </summary>/
    public sealed class OriginatingDeptID : StringField
    {
        public const int TAG = 1725;

        public OriginatingDeptID()
            : base(Tags.OriginatingDeptID) { }
        public OriginatingDeptID(string val)
            : base(Tags.OriginatingDeptID, val) { }

    }


    /// <summary>
    /// ReceivingDeptID Field
    /// </summary>/
    public sealed class ReceivingDeptID : StringField
    {
        public const int TAG = 1726;

        public ReceivingDeptID()
            : base(Tags.ReceivingDeptID) { }
        public ReceivingDeptID(string val)
            : base(Tags.ReceivingDeptID, val) { }

    }


    /// <summary>
    /// InformationBarrierID Field
    /// </summary>/
    public sealed class InformationBarrierID : StringField
    {
        public const int TAG = 1727;

        public InformationBarrierID()
            : base(Tags.InformationBarrierID) { }
        public InformationBarrierID(string val)
            : base(Tags.InformationBarrierID, val) { }

    }


    /// <summary>
    /// FirmGroupID Field
    /// </summary>/
    public sealed class FirmGroupID : StringField
    {
        public const int TAG = 1728;

        public FirmGroupID()
            : base(Tags.FirmGroupID) { }
        public FirmGroupID(string val)
            : base(Tags.FirmGroupID, val) { }

    }


    /// <summary>
    /// FirmMnemonic Field
    /// </summary>/
    public sealed class FirmMnemonic : StringField
    {
        public const int TAG = 1729;

        public FirmMnemonic()
            : base(Tags.FirmMnemonic) { }
        public FirmMnemonic(string val)
            : base(Tags.FirmMnemonic, val) { }

    }


    /// <summary>
    /// AllocGroupID Field
    /// </summary>/
    public sealed class AllocGroupID : StringField
    {
        public const int TAG = 1730;

        public AllocGroupID()
            : base(Tags.AllocGroupID) { }
        public AllocGroupID(string val)
            : base(Tags.AllocGroupID, val) { }

    }


    /// <summary>
    /// AvgPxGroupID Field
    /// </summary>/
    public sealed class AvgPxGroupID : StringField
    {
        public const int TAG = 1731;

        public AvgPxGroupID()
            : base(Tags.AvgPxGroupID) { }
        public AvgPxGroupID(string val)
            : base(Tags.AvgPxGroupID, val) { }

    }


    /// <summary>
    /// FirmAllocText Field
    /// </summary>/
    public sealed class FirmAllocText : StringField
    {
        public const int TAG = 1732;

        public FirmAllocText()
            : base(Tags.FirmAllocText) { }
        public FirmAllocText(string val)
            : base(Tags.FirmAllocText, val) { }

    }


    /// <summary>
    /// EncodedFirmAllocTextLen Field
    /// </summary>/
    public sealed class EncodedFirmAllocTextLen : IntField
    {
        public const int TAG = 1733;

        public EncodedFirmAllocTextLen()
            : base(Tags.EncodedFirmAllocTextLen) { }
        public EncodedFirmAllocTextLen(int val)
            : base(Tags.EncodedFirmAllocTextLen, val) { }

    }


    /// <summary>
    /// EncodedFirmAllocText Field
    /// </summary>/
    public sealed class EncodedFirmAllocText : StringField
    {
        public const int TAG = 1734;

        public EncodedFirmAllocText()
            : base(Tags.EncodedFirmAllocText) { }
        public EncodedFirmAllocText(string val)
            : base(Tags.EncodedFirmAllocText, val) { }

    }


    /// <summary>
    /// AllocationRollupInstruction Field
    /// </summary>/
    public sealed class AllocationRollupInstruction : IntField
    {
        public const int TAG = 1735;

        public AllocationRollupInstruction()
            : base(Tags.AllocationRollupInstruction) { }
        public AllocationRollupInstruction(int val)
            : base(Tags.AllocationRollupInstruction, val) { }


        // Field Enumerations
        public const int ROLL_UP = 0;
        public const int DO_NOT_ROLL_UP = 1;
    }


    /// <summary>
    /// AllocGroupQuantity Field
    /// </summary>/
    public sealed class AllocGroupQuantity : DecimalField
    {
        public const int TAG = 1736;

        public AllocGroupQuantity()
            : base(Tags.AllocGroupQuantity) { }
        public AllocGroupQuantity(Decimal val)
            : base(Tags.AllocGroupQuantity, val) { }

    }


    /// <summary>
    /// AllocGroupRemainingQuantity Field
    /// </summary>/
    public sealed class AllocGroupRemainingQuantity : DecimalField
    {
        public const int TAG = 1737;

        public AllocGroupRemainingQuantity()
            : base(Tags.AllocGroupRemainingQuantity) { }
        public AllocGroupRemainingQuantity(Decimal val)
            : base(Tags.AllocGroupRemainingQuantity, val) { }

    }


    /// <summary>
    /// AllocReversalStatus Field
    /// </summary>/
    public sealed class AllocReversalStatus : IntField
    {
        public const int TAG = 1738;

        public AllocReversalStatus()
            : base(Tags.AllocReversalStatus) { }
        public AllocReversalStatus(int val)
            : base(Tags.AllocReversalStatus, val) { }


        // Field Enumerations
        public const int COMPLETED = 0;
        public const int REFUSED = 1;
        public const int CANCELLED = 2;
    }


    /// <summary>
    /// ObligationType Field
    /// </summary>/
    public sealed class ObligationType : StringField
    {
        public const int TAG = 1739;

        public ObligationType()
            : base(Tags.ObligationType) { }
        public ObligationType(string val)
            : base(Tags.ObligationType, val) { }


        // Field Enumerations
        public const string BOND = "0";
        public const string CONVERTIBLE_BOND = "1";
        public const string MORTGAGE = "2";
        public const string LOAN = "3";
    }


    /// <summary>
    /// TradePriceNegotiationMethod Field
    /// </summary>/
    public sealed class TradePriceNegotiationMethod : IntField
    {
        public const int TAG = 1740;

        public TradePriceNegotiationMethod()
            : base(Tags.TradePriceNegotiationMethod) { }
        public TradePriceNegotiationMethod(int val)
            : base(Tags.TradePriceNegotiationMethod, val) { }


        // Field Enumerations
        public const int PERCENT_OF_PAR = 0;
        public const int DEAL_SPREAD = 1;
        public const int UPFRONT_POINTS = 2;
        public const int UPFRONT_AMOUNT = 3;
        public const int PERCENT_OF_PAR_AND_UPFRONT_AMOUNT = 4;
        public const int DEAL_SPREAD_AND_UPFRONT_AMOUNT = 5;
        public const int UPFRONT_POINTS_AND_UPFRONT_AMOUNT = 6;
    }


    /// <summary>
    /// UpfrontPriceType Field
    /// </summary>/
    public sealed class UpfrontPriceType : IntField
    {
        public const int TAG = 1741;

        public UpfrontPriceType()
            : base(Tags.UpfrontPriceType) { }
        public UpfrontPriceType(int val)
            : base(Tags.UpfrontPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int FIXED_AMOUNT = 3;
    }


    /// <summary>
    /// UpfrontPrice Field
    /// </summary>/
    public sealed class UpfrontPrice : DecimalField
    {
        public const int TAG = 1742;

        public UpfrontPrice()
            : base(Tags.UpfrontPrice) { }
        public UpfrontPrice(Decimal val)
            : base(Tags.UpfrontPrice, val) { }

    }


    /// <summary>
    /// LastUpfrontPrice Field
    /// </summary>/
    public sealed class LastUpfrontPrice : DecimalField
    {
        public const int TAG = 1743;

        public LastUpfrontPrice()
            : base(Tags.LastUpfrontPrice) { }
        public LastUpfrontPrice(Decimal val)
            : base(Tags.LastUpfrontPrice, val) { }

    }


    /// <summary>
    /// ApplLevelRecoveryIndicator Field
    /// </summary>/
    public sealed class ApplLevelRecoveryIndicator : IntField
    {
        public const int TAG = 1744;

        public ApplLevelRecoveryIndicator()
            : base(Tags.ApplLevelRecoveryIndicator) { }
        public ApplLevelRecoveryIndicator(int val)
            : base(Tags.ApplLevelRecoveryIndicator, val) { }


        // Field Enumerations
        public const int APPLICATION_LEVEL_RECOVERY_IS_NOT_NEEDED = 0;
        public const int APPLICATION_LEVEL_RECOVERY_IS_NEEDED = 1;
    }


    /// <summary>
    /// BidMDEntryID Field
    /// </summary>/
    public sealed class BidMDEntryID : StringField
    {
        public const int TAG = 1745;

        public BidMDEntryID()
            : base(Tags.BidMDEntryID) { }
        public BidMDEntryID(string val)
            : base(Tags.BidMDEntryID, val) { }

    }


    /// <summary>
    /// OfferMDEntryID Field
    /// </summary>/
    public sealed class OfferMDEntryID : StringField
    {
        public const int TAG = 1746;

        public OfferMDEntryID()
            : base(Tags.OfferMDEntryID) { }
        public OfferMDEntryID(string val)
            : base(Tags.OfferMDEntryID, val) { }

    }


    /// <summary>
    /// BidQuoteID Field
    /// </summary>/
    public sealed class BidQuoteID : StringField
    {
        public const int TAG = 1747;

        public BidQuoteID()
            : base(Tags.BidQuoteID) { }
        public BidQuoteID(string val)
            : base(Tags.BidQuoteID, val) { }

    }


    /// <summary>
    /// OfferQuoteID Field
    /// </summary>/
    public sealed class OfferQuoteID : StringField
    {
        public const int TAG = 1748;

        public OfferQuoteID()
            : base(Tags.OfferQuoteID) { }
        public OfferQuoteID(string val)
            : base(Tags.OfferQuoteID, val) { }

    }


    /// <summary>
    /// TotalBidSize Field
    /// </summary>/
    public sealed class TotalBidSize : DecimalField
    {
        public const int TAG = 1749;

        public TotalBidSize()
            : base(Tags.TotalBidSize) { }
        public TotalBidSize(Decimal val)
            : base(Tags.TotalBidSize, val) { }

    }


    /// <summary>
    /// TotalOfferSize Field
    /// </summary>/
    public sealed class TotalOfferSize : DecimalField
    {
        public const int TAG = 1750;

        public TotalOfferSize()
            : base(Tags.TotalOfferSize) { }
        public TotalOfferSize(Decimal val)
            : base(Tags.TotalOfferSize, val) { }

    }


    /// <summary>
    /// SecondaryQuoteID Field
    /// </summary>/
    public sealed class SecondaryQuoteID : StringField
    {
        public const int TAG = 1751;

        public SecondaryQuoteID()
            : base(Tags.SecondaryQuoteID) { }
        public SecondaryQuoteID(string val)
            : base(Tags.SecondaryQuoteID, val) { }

    }


    /// <summary>
    /// CustodialLotID Field
    /// </summary>/
    public sealed class CustodialLotID : StringField
    {
        public const int TAG = 1752;

        public CustodialLotID()
            : base(Tags.CustodialLotID) { }
        public CustodialLotID(string val)
            : base(Tags.CustodialLotID, val) { }

    }


    /// <summary>
    /// VersusPurchaseDate Field
    /// </summary>/
    public sealed class VersusPurchaseDate : StringField
    {
        public const int TAG = 1753;

        public VersusPurchaseDate()
            : base(Tags.VersusPurchaseDate) { }
        public VersusPurchaseDate(string val)
            : base(Tags.VersusPurchaseDate, val) { }

    }


    /// <summary>
    /// VersusPurchasePrice Field
    /// </summary>/
    public sealed class VersusPurchasePrice : DecimalField
    {
        public const int TAG = 1754;

        public VersusPurchasePrice()
            : base(Tags.VersusPurchasePrice) { }
        public VersusPurchasePrice(Decimal val)
            : base(Tags.VersusPurchasePrice, val) { }

    }


    /// <summary>
    /// CurrentCostBasis Field
    /// </summary>/
    public sealed class CurrentCostBasis : DecimalField
    {
        public const int TAG = 1755;

        public CurrentCostBasis()
            : base(Tags.CurrentCostBasis) { }
        public CurrentCostBasis(Decimal val)
            : base(Tags.CurrentCostBasis, val) { }

    }


    /// <summary>
    /// LegCustodialLotID Field
    /// </summary>/
    public sealed class LegCustodialLotID : StringField
    {
        public const int TAG = 1756;

        public LegCustodialLotID()
            : base(Tags.LegCustodialLotID) { }
        public LegCustodialLotID(string val)
            : base(Tags.LegCustodialLotID, val) { }

    }


    /// <summary>
    /// LegVersusPurchaseDate Field
    /// </summary>/
    public sealed class LegVersusPurchaseDate : StringField
    {
        public const int TAG = 1757;

        public LegVersusPurchaseDate()
            : base(Tags.LegVersusPurchaseDate) { }
        public LegVersusPurchaseDate(string val)
            : base(Tags.LegVersusPurchaseDate, val) { }

    }


    /// <summary>
    /// LegVersusPurchasePrice Field
    /// </summary>/
    public sealed class LegVersusPurchasePrice : DecimalField
    {
        public const int TAG = 1758;

        public LegVersusPurchasePrice()
            : base(Tags.LegVersusPurchasePrice) { }
        public LegVersusPurchasePrice(Decimal val)
            : base(Tags.LegVersusPurchasePrice, val) { }

    }


    /// <summary>
    /// LegCurrentCostBasis Field
    /// </summary>/
    public sealed class LegCurrentCostBasis : DecimalField
    {
        public const int TAG = 1759;

        public LegCurrentCostBasis()
            : base(Tags.LegCurrentCostBasis) { }
        public LegCurrentCostBasis(Decimal val)
            : base(Tags.LegCurrentCostBasis, val) { }

    }


    /// <summary>
    /// RiskLimitRequestType Field
    /// </summary>/
    public sealed class RiskLimitRequestType : IntField
    {
        public const int TAG = 1760;

        public RiskLimitRequestType()
            : base(Tags.RiskLimitRequestType) { }
        public RiskLimitRequestType(int val)
            : base(Tags.RiskLimitRequestType, val) { }


        // Field Enumerations
        public const int DEFINITIONS = 1;
        public const int UTILIZATION = 2;
        public const int DEFINITIONS_AND_UTILIZATION = 3;
    }


    /// <summary>
    /// RiskLimitRequestResult Field
    /// </summary>/
    public sealed class RiskLimitRequestResult : IntField
    {
        public const int TAG = 1761;

        public RiskLimitRequestResult()
            : base(Tags.RiskLimitRequestResult) { }
        public RiskLimitRequestResult(int val)
            : base(Tags.RiskLimitRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_RISK_LIMIT_TYPE = 3;
        public const int INVALID_RISK_LIMIT_ID = 4;
        public const int INVALID_RISK_LIMIT_AMOUNT = 5;
        public const int INVALID_RISK_WARNING_LEVEL_ACTION = 6;
        public const int INVALID_RISK_INSTRUMENT_SCOPE = 7;
        public const int RISK_LIMIT_ACTIONS_NOT_SUPPORTED = 8;
        public const int WARNING_LEVELS_NOT_SUPPORTED = 9;
        public const int WARNING_LEVEL_ACTIONS_NOT_SUPPORTED = 10;
        public const int RISK_INSTRUMENT_SCOPE_NOT_SUPPORTED = 11;
        public const int RISK_LIMIT_NOT_APPROVED_FOR_PARTY = 12;
        public const int RISK_LIMIT_ALREADY_DEFINED_FOR_PARTY = 13;
        public const int INSTRUMENT_NOT_APPROVED_FOR_PARTY = 14;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// RiskLimitRequestStatus Field
    /// </summary>/
    public sealed class RiskLimitRequestStatus : IntField
    {
        public const int TAG = 1762;

        public RiskLimitRequestStatus()
            : base(Tags.RiskLimitRequestStatus) { }
        public RiskLimitRequestStatus(int val)
            : base(Tags.RiskLimitRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
        public const int ACCEPTANCE_PENDING = 3;
    }


    /// <summary>
    /// RiskLimitStatus Field
    /// </summary>/
    public sealed class RiskLimitStatus : IntField
    {
        public const int TAG = 1763;

        public RiskLimitStatus()
            : base(Tags.RiskLimitStatus) { }
        public RiskLimitStatus(int val)
            : base(Tags.RiskLimitStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// RiskLimitResult Field
    /// </summary>/
    public sealed class RiskLimitResult : IntField
    {
        public const int TAG = 1764;

        public RiskLimitResult()
            : base(Tags.RiskLimitResult) { }
        public RiskLimitResult(int val)
            : base(Tags.RiskLimitResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_RISK_LIMIT_TYPE = 3;
        public const int INVALID_RISK_LIMIT_ID = 4;
        public const int INVALID_RISK_LIMIT_AMOUNT = 5;
        public const int INVALID_RISK_WARNING_LEVEL_ACTION = 6;
        public const int INVALID_RISK_INSTRUMENT_SCOPE = 7;
        public const int RISK_LIMIT_ACTIONS_NOT_SUPPORTED = 8;
        public const int WARNING_LEVELS_NOT_SUPPORTED = 9;
        public const int WARNING_LEVEL_ACTIONS_NOT_SUPPORTED = 10;
        public const int RISK_INSTRUMENT_SCOPE_NOT_SUPPORTED = 11;
        public const int RISK_LIMIT_NOT_APPROVED_FOR_PARTY = 12;
        public const int RISK_LIMIT_ALREADY_DEFINED_FOR_PARTY = 13;
        public const int INSTRUMENT_NOT_APPROVED_FOR_PARTY = 14;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// RiskLimitUtilizationPercent Field
    /// </summary>/
    public sealed class RiskLimitUtilizationPercent : DecimalField
    {
        public const int TAG = 1765;

        public RiskLimitUtilizationPercent()
            : base(Tags.RiskLimitUtilizationPercent) { }
        public RiskLimitUtilizationPercent(Decimal val)
            : base(Tags.RiskLimitUtilizationPercent, val) { }

    }


    /// <summary>
    /// RiskLimitUtilizationAmount Field
    /// </summary>/
    public sealed class RiskLimitUtilizationAmount : DecimalField
    {
        public const int TAG = 1766;

        public RiskLimitUtilizationAmount()
            : base(Tags.RiskLimitUtilizationAmount) { }
        public RiskLimitUtilizationAmount(Decimal val)
            : base(Tags.RiskLimitUtilizationAmount, val) { }

    }


    /// <summary>
    /// RiskLimitAction Field
    /// </summary>/
    public sealed class RiskLimitAction : IntField
    {
        public const int TAG = 1767;

        public RiskLimitAction()
            : base(Tags.RiskLimitAction) { }
        public RiskLimitAction(int val)
            : base(Tags.RiskLimitAction, val) { }


        // Field Enumerations
        public const int QUEUE_INBOUND = 0;
        public const int QUEUE_OUTBOUND = 1;
        public const int REJECT = 2;
        public const int DISCONNECT = 3;
        public const int WARNING = 4;
        public const int PING_CREDIT_CHECK_MODEL_WITH_REVALIDATION = 5;
        public const int PING_CREDIT_CHECK_MODEL_WITHOUT_REVALIDATION = 6;
        public const int PUSH_CREDIT_CHECK_MODEL_WITH_REVALIDATION = 7;
        public const int PUSH_CREDIT_CHECK_MODEL_WITHOUT_REVALIDATION = 8;
        public const int SUSPEND = 9;
        public const int HALT_TRADING = 10;
    }


    /// <summary>
    /// RiskWarningLevelAmount Field
    /// </summary>/
    public sealed class RiskWarningLevelAmount : IntField
    {
        public const int TAG = 1768;

        public RiskWarningLevelAmount()
            : base(Tags.RiskWarningLevelAmount) { }
        public RiskWarningLevelAmount(int val)
            : base(Tags.RiskWarningLevelAmount, val) { }

    }


    /// <summary>
    /// RiskWarningLevelAction Field
    /// </summary>/
    public sealed class RiskWarningLevelAction : IntField
    {
        public const int TAG = 1769;

        public RiskWarningLevelAction()
            : base(Tags.RiskWarningLevelAction) { }
        public RiskWarningLevelAction(int val)
            : base(Tags.RiskWarningLevelAction, val) { }


        // Field Enumerations
        public const int QUEUE_INBOUND = 0;
        public const int QUEUE_OUTBOUND = 1;
        public const int REJECT = 2;
        public const int DISCONNECT = 3;
        public const int WARNING = 4;
        public const int PING_CREDIT_CHECK_MODEL_WITH_REVALIDATION = 5;
        public const int PING_CREDIT_CHECK_MODEL_WITHOUT_REVALIDATION = 6;
        public const int PUSH_CREDIT_CHECK_MODEL_WITH_REVALIDATION = 7;
        public const int PUSH_CREDIT_CHECK_MODEL_WITHOUT_REVALIDATION = 8;
        public const int SUSPEND = 9;
        public const int HALT_TRADING = 10;
    }


    /// <summary>
    /// EntitlementRequestID Field
    /// </summary>/
    public sealed class EntitlementRequestID : StringField
    {
        public const int TAG = 1770;

        public EntitlementRequestID()
            : base(Tags.EntitlementRequestID) { }
        public EntitlementRequestID(string val)
            : base(Tags.EntitlementRequestID, val) { }

    }


    /// <summary>
    /// EntitlementReportID Field
    /// </summary>/
    public sealed class EntitlementReportID : StringField
    {
        public const int TAG = 1771;

        public EntitlementReportID()
            : base(Tags.EntitlementReportID) { }
        public EntitlementReportID(string val)
            : base(Tags.EntitlementReportID, val) { }

    }


    /// <summary>
    /// NoPartyEntitlements Field
    /// </summary>/
    public sealed class NoPartyEntitlements : IntField
    {
        public const int TAG = 1772;

        public NoPartyEntitlements()
            : base(Tags.NoPartyEntitlements) { }
        public NoPartyEntitlements(int val)
            : base(Tags.NoPartyEntitlements, val) { }

    }


    /// <summary>
    /// NoEntitlements Field
    /// </summary>/
    public sealed class NoEntitlements : IntField
    {
        public const int TAG = 1773;

        public NoEntitlements()
            : base(Tags.NoEntitlements) { }
        public NoEntitlements(int val)
            : base(Tags.NoEntitlements, val) { }

    }


    /// <summary>
    /// EntitlementIndicator Field
    /// </summary>/
    public sealed class EntitlementIndicator : BooleanField
    {
        public const int TAG = 1774;

        public EntitlementIndicator()
            : base(Tags.EntitlementIndicator) { }
        public EntitlementIndicator(Boolean val)
            : base(Tags.EntitlementIndicator, val) { }

    }


    /// <summary>
    /// EntitlementType Field
    /// </summary>/
    public sealed class EntitlementType : IntField
    {
        public const int TAG = 1775;

        public EntitlementType()
            : base(Tags.EntitlementType) { }
        public EntitlementType(int val)
            : base(Tags.EntitlementType, val) { }


        // Field Enumerations
        public const int TRADE = 0;
        public const int MAKE_MARKETS = 1;
        public const int HOLD_POSITIONS = 2;
        public const int PERFORM_GIVE_UPS = 3;
        public const int SUBMIT_INDICATIONS_OF_INTEREST = 4;
        public const int SUBSCRIBE_TO_MARKET_DATA = 5;
        public const int SHORT_WITH_PRE_BORROW = 6;
        public const int SUBMIT_QUOTE_REQUESTS = 7;
        public const int RESPOND_TO_QUOTE_REQUESTS = 8;
    }


    /// <summary>
    /// EntitlementID Field
    /// </summary>/
    public sealed class EntitlementID : StringField
    {
        public const int TAG = 1776;

        public EntitlementID()
            : base(Tags.EntitlementID) { }
        public EntitlementID(string val)
            : base(Tags.EntitlementID, val) { }

    }


    /// <summary>
    /// NoEntitlementAttrib Field
    /// </summary>/
    public sealed class NoEntitlementAttrib : IntField
    {
        public const int TAG = 1777;

        public NoEntitlementAttrib()
            : base(Tags.NoEntitlementAttrib) { }
        public NoEntitlementAttrib(int val)
            : base(Tags.NoEntitlementAttrib, val) { }

    }


    /// <summary>
    /// EntitlementAttribType Field
    /// </summary>/
    public sealed class EntitlementAttribType : IntField
    {
        public const int TAG = 1778;

        public EntitlementAttribType()
            : base(Tags.EntitlementAttribType) { }
        public EntitlementAttribType(int val)
            : base(Tags.EntitlementAttribType, val) { }

    }


    /// <summary>
    /// EntitlementAttribDatatype Field
    /// </summary>/
    public sealed class EntitlementAttribDatatype : IntField
    {
        public const int TAG = 1779;

        public EntitlementAttribDatatype()
            : base(Tags.EntitlementAttribDatatype) { }
        public EntitlementAttribDatatype(int val)
            : base(Tags.EntitlementAttribDatatype, val) { }


        // Field Enumerations
        public const int INT = 1;
        public const int LENGTH = 2;
        public const int NUMINGROUP = 3;
        public const int SEQNUM = 4;
        public const int TAGNUM = 5;
        public const int FLOAT = 6;
        public const int QTY = 7;
        public const int PRICE = 8;
        public const int PRICEOFFSET = 9;
        public const int AMT = 10;
        public const int PERCENTAGE = 11;
        public const int CHAR = 12;
        public const int BOOLEAN = 13;
        public const int STRING = 14;
        public const int MULTIPLECHARVALUE = 15;
        public const int CURRENCY = 16;
        public const int EXCHANGE = 17;
        public const int MONTHYEAR = 18;
        public const int UTCTIMESTAMP = 19;
        public const int UTCTIMEONLY = 20;
        public const int LOCALMKTDATE = 21;
        public const int UTCDATEONLY = 22;
        public const int DATA = 23;
        public const int MULTIPLESTRINGVALUE = 24;
        public const int COUNTRY = 25;
        public const int LANGUAGE = 26;
        public const int TZTIMEONLY = 27;
        public const int TZTIMESTAMP = 28;
        public const int TENOR = 29;
        public const int DAYOFMONTH = 30;
        public const int XMLDATA = 31;
        public const int PATTERN = 32;
        public const int RESERVED100PLUS = 33;
        public const int RESERVED1000PLUS = 34;
        public const int RESERVED4000PLUS = 35;
    }


    /// <summary>
    /// EntitlementAttribValue Field
    /// </summary>/
    public sealed class EntitlementAttribValue : StringField
    {
        public const int TAG = 1780;

        public EntitlementAttribValue()
            : base(Tags.EntitlementAttribValue) { }
        public EntitlementAttribValue(string val)
            : base(Tags.EntitlementAttribValue, val) { }

    }


    /// <summary>
    /// EntitlementAttribCurrency Field
    /// </summary>/
    public sealed class EntitlementAttribCurrency : StringField
    {
        public const int TAG = 1781;

        public EntitlementAttribCurrency()
            : base(Tags.EntitlementAttribCurrency) { }
        public EntitlementAttribCurrency(string val)
            : base(Tags.EntitlementAttribCurrency, val) { }

    }


    /// <summary>
    /// EntitlementStartDate Field
    /// </summary>/
    public sealed class EntitlementStartDate : StringField
    {
        public const int TAG = 1782;

        public EntitlementStartDate()
            : base(Tags.EntitlementStartDate) { }
        public EntitlementStartDate(string val)
            : base(Tags.EntitlementStartDate, val) { }

    }


    /// <summary>
    /// EntitlementEndDate Field
    /// </summary>/
    public sealed class EntitlementEndDate : StringField
    {
        public const int TAG = 1783;

        public EntitlementEndDate()
            : base(Tags.EntitlementEndDate) { }
        public EntitlementEndDate(string val)
            : base(Tags.EntitlementEndDate, val) { }

    }


    /// <summary>
    /// EntitlementPlatform Field
    /// </summary>/
    public sealed class EntitlementPlatform : StringField
    {
        public const int TAG = 1784;

        public EntitlementPlatform()
            : base(Tags.EntitlementPlatform) { }
        public EntitlementPlatform(string val)
            : base(Tags.EntitlementPlatform, val) { }

    }


    /// <summary>
    /// TradSesControl Field
    /// </summary>/
    public sealed class TradSesControl : IntField
    {
        public const int TAG = 1785;

        public TradSesControl()
            : base(Tags.TradSesControl) { }
        public TradSesControl(int val)
            : base(Tags.TradSesControl, val) { }


        // Field Enumerations
        public const int AUTOMATIC = 0;
        public const int MANUAL = 1;
    }


    /// <summary>
    /// TradeVolType Field
    /// </summary>/
    public sealed class TradeVolType : IntField
    {
        public const int TAG = 1786;

        public TradeVolType()
            : base(Tags.TradeVolType) { }
        public TradeVolType(int val)
            : base(Tags.TradeVolType, val) { }


        // Field Enumerations
        public const int NUMBER_OF_UNITS = 0;
        public const int NUMBER_OF_ROUND_LOTS = 1;
    }


    /// <summary>
    /// RefTickTableID Field
    /// </summary>/
    public sealed class RefTickTableID : IntField
    {
        public const int TAG = 1787;

        public RefTickTableID()
            : base(Tags.RefTickTableID) { }
        public RefTickTableID(int val)
            : base(Tags.RefTickTableID, val) { }

    }


    /// <summary>
    /// LegID Field
    /// </summary>/
    public sealed class LegID : StringField
    {
        public const int TAG = 1788;

        public LegID()
            : base(Tags.LegID) { }
        public LegID(string val)
            : base(Tags.LegID, val) { }

    }


    /// <summary>
    /// NoTargetMarketSegments Field
    /// </summary>/
    public sealed class NoTargetMarketSegments : IntField
    {
        public const int TAG = 1789;

        public NoTargetMarketSegments()
            : base(Tags.NoTargetMarketSegments) { }
        public NoTargetMarketSegments(int val)
            : base(Tags.NoTargetMarketSegments, val) { }

    }


    /// <summary>
    /// TargetMarketSegmentID Field
    /// </summary>/
    public sealed class TargetMarketSegmentID : StringField
    {
        public const int TAG = 1790;

        public TargetMarketSegmentID()
            : base(Tags.TargetMarketSegmentID) { }
        public TargetMarketSegmentID(string val)
            : base(Tags.TargetMarketSegmentID, val) { }

    }


    /// <summary>
    /// NoAffectedMarketSegments Field
    /// </summary>/
    public sealed class NoAffectedMarketSegments : IntField
    {
        public const int TAG = 1791;

        public NoAffectedMarketSegments()
            : base(Tags.NoAffectedMarketSegments) { }
        public NoAffectedMarketSegments(int val)
            : base(Tags.NoAffectedMarketSegments, val) { }

    }


    /// <summary>
    /// AffectedMarketSegmentID Field
    /// </summary>/
    public sealed class AffectedMarketSegmentID : StringField
    {
        public const int TAG = 1792;

        public AffectedMarketSegmentID()
            : base(Tags.AffectedMarketSegmentID) { }
        public AffectedMarketSegmentID(string val)
            : base(Tags.AffectedMarketSegmentID, val) { }

    }


    /// <summary>
    /// NoNotAffectedMarketSegments Field
    /// </summary>/
    public sealed class NoNotAffectedMarketSegments : IntField
    {
        public const int TAG = 1793;

        public NoNotAffectedMarketSegments()
            : base(Tags.NoNotAffectedMarketSegments) { }
        public NoNotAffectedMarketSegments(int val)
            : base(Tags.NoNotAffectedMarketSegments, val) { }

    }


    /// <summary>
    /// NotAffectedMarketSegmentID Field
    /// </summary>/
    public sealed class NotAffectedMarketSegmentID : StringField
    {
        public const int TAG = 1794;

        public NotAffectedMarketSegmentID()
            : base(Tags.NotAffectedMarketSegmentID) { }
        public NotAffectedMarketSegmentID(string val)
            : base(Tags.NotAffectedMarketSegmentID, val) { }

    }


    /// <summary>
    /// NoOrderEvents Field
    /// </summary>/
    public sealed class NoOrderEvents : IntField
    {
        public const int TAG = 1795;

        public NoOrderEvents()
            : base(Tags.NoOrderEvents) { }
        public NoOrderEvents(int val)
            : base(Tags.NoOrderEvents, val) { }

    }


    /// <summary>
    /// OrderEventType Field
    /// </summary>/
    public sealed class OrderEventType : IntField
    {
        public const int TAG = 1796;

        public OrderEventType()
            : base(Tags.OrderEventType) { }
        public OrderEventType(int val)
            : base(Tags.OrderEventType, val) { }


        // Field Enumerations
        public const int ADDED = 1;
        public const int MODIFIED = 2;
        public const int DELETED = 3;
        public const int PARTIALLY_FILLED = 4;
        public const int FILLED = 5;
        public const int SUSPENDED = 6;
        public const int RELEASED = 7;
        public const int RESTATED = 8;
        public const int LOCKED = 9;
        public const int TRIGGERED = 10;
        public const int ACTIVATED = 11;
    }


    /// <summary>
    /// OrderEventExecID Field
    /// </summary>/
    public sealed class OrderEventExecID : StringField
    {
        public const int TAG = 1797;

        public OrderEventExecID()
            : base(Tags.OrderEventExecID) { }
        public OrderEventExecID(string val)
            : base(Tags.OrderEventExecID, val) { }

    }


    /// <summary>
    /// OrderEventReason Field
    /// </summary>/
    public sealed class OrderEventReason : IntField
    {
        public const int TAG = 1798;

        public OrderEventReason()
            : base(Tags.OrderEventReason) { }
        public OrderEventReason(int val)
            : base(Tags.OrderEventReason, val) { }


        // Field Enumerations
        public const int ADD_ORDER_REQUEST = 1;
        public const int MODIFY_ORDER_REQUEST = 2;
        public const int DELETE_ORDER_REQUEST = 3;
        public const int ORDER_ENTERED_OUT_OF_BAND = 4;
        public const int ORDER_MODIFIED_OUT_OF_BAND = 5;
        public const int ORDER_DELETED_OUT_OF_BAND = 6;
        public const int ORDER_ACTIVATED_OR_TRIGGERED = 7;
        public const int ORDER_EXPIRED = 8;
        public const int RESERVE_ORDER_REFRESHED = 9;
        public const int AWAY_MARKET_BETTER = 10;
        public const int CORPORATE_ACTION = 11;
        public const int START_OF_DAY = 12;
        public const int END_OF_DAY = 13;
    }


    /// <summary>
    /// OrderEventPx Field
    /// </summary>/
    public sealed class OrderEventPx : DecimalField
    {
        public const int TAG = 1799;

        public OrderEventPx()
            : base(Tags.OrderEventPx) { }
        public OrderEventPx(Decimal val)
            : base(Tags.OrderEventPx, val) { }

    }


    /// <summary>
    /// OrderEventQty Field
    /// </summary>/
    public sealed class OrderEventQty : DecimalField
    {
        public const int TAG = 1800;

        public OrderEventQty()
            : base(Tags.OrderEventQty) { }
        public OrderEventQty(Decimal val)
            : base(Tags.OrderEventQty, val) { }

    }


    /// <summary>
    /// OrderEventLiquidityIndicator Field
    /// </summary>/
    public sealed class OrderEventLiquidityIndicator : IntField
    {
        public const int TAG = 1801;

        public OrderEventLiquidityIndicator()
            : base(Tags.OrderEventLiquidityIndicator) { }
        public OrderEventLiquidityIndicator(int val)
            : base(Tags.OrderEventLiquidityIndicator, val) { }


        // Field Enumerations
        public const int ADDED_LIQUIDITY = 1;
        public const int REMOVED_LIQUIDITY = 2;
        public const int LIQUIDITY_ROUTED_OUT = 3;
        public const int AUCTION_EXECUTION = 4;
        public const int TRIGGERED_STOP_ORDER = 5;
        public const int TRIGGERED_CONTINGENCY_ORDER = 6;
        public const int TRIGGERED_MARKET_ORDER = 7;
        public const int NEITHER_ADDED_NOR_REMOVED_LIQUIDITY = 0;
        public const int REMOVED_LIQUIDITY_AFTER_FIRM_ORDER_COMMITMENT = 8;
        public const int AUCTION_EXECUTION_AFTER_FIRM_ORDER_COMMITMENT = 9;
    }


    /// <summary>
    /// OrderEventText Field
    /// </summary>/
    public sealed class OrderEventText : StringField
    {
        public const int TAG = 1802;

        public OrderEventText()
            : base(Tags.OrderEventText) { }
        public OrderEventText(string val)
            : base(Tags.OrderEventText, val) { }

    }


    /// <summary>
    /// AuctionType Field
    /// </summary>/
    public sealed class AuctionType : IntField
    {
        public const int TAG = 1803;

        public AuctionType()
            : base(Tags.AuctionType) { }
        public AuctionType(int val)
            : base(Tags.AuctionType, val) { }


        // Field Enumerations
        public const int BLOCK_ORDER_AUCTION = 1;
        public const int DIRECTED_ORDER_AUCTION = 2;
        public const int EXPOSURE_ORDER_AUCTION = 3;
        public const int FLASH_ORDER_AUCTION = 4;
        public const int FACILITATION_ORDER_AUCTION = 5;
        public const int SOLICITATION_ORDER_AUCTION = 6;
        public const int PRICE_IMPROVEMENT_MECHANISM = 7;
        public const int DIRECTED_ORDER_PRICE_IMPROVEMENT_MECHANISM = 8;
        public const int NONE = 0;
    }


    /// <summary>
    /// AuctionAllocationPct Field
    /// </summary>/
    public sealed class AuctionAllocationPct : DecimalField
    {
        public const int TAG = 1804;

        public AuctionAllocationPct()
            : base(Tags.AuctionAllocationPct) { }
        public AuctionAllocationPct(Decimal val)
            : base(Tags.AuctionAllocationPct, val) { }

    }


    /// <summary>
    /// AuctionInstruction Field
    /// </summary>/
    public sealed class AuctionInstruction : IntField
    {
        public const int TAG = 1805;

        public AuctionInstruction()
            : base(Tags.AuctionInstruction) { }
        public AuctionInstruction(int val)
            : base(Tags.AuctionInstruction, val) { }


        // Field Enumerations
        public const int AUTOMATIC_AUCTION_PERMITTED = 0;
        public const int AUTOMATIC_AUCTION_NOT_PERMITTED = 1;
    }


    /// <summary>
    /// RefClOrdID Field
    /// </summary>/
    public sealed class RefClOrdID : StringField
    {
        public const int TAG = 1806;

        public RefClOrdID()
            : base(Tags.RefClOrdID) { }
        public RefClOrdID(string val)
            : base(Tags.RefClOrdID, val) { }

    }


    /// <summary>
    /// LockType Field
    /// </summary>/
    public sealed class LockType : IntField
    {
        public const int TAG = 1807;

        public LockType()
            : base(Tags.LockType) { }
        public LockType(int val)
            : base(Tags.LockType, val) { }


        // Field Enumerations
        public const int NOT_LOCKED = 0;
        public const int AWAY_MARKET_BETTER = 1;
        public const int THREE_TICK_LOCKED = 2;
        public const int LOCKED_BY_MARKET_MAKER = 3;
        public const int DIRECTED_ORDER_LOCK = 4;
        public const int MULTILEG_LOCK = 5;
        public const int MARKET_ORDER_LOCK = 6;
        public const int PRE_ASSIGNMENT_LOCK = 7;
    }


    /// <summary>
    /// LockedQty Field
    /// </summary>/
    public sealed class LockedQty : DecimalField
    {
        public const int TAG = 1808;

        public LockedQty()
            : base(Tags.LockedQty) { }
        public LockedQty(Decimal val)
            : base(Tags.LockedQty, val) { }

    }


    /// <summary>
    /// SecondaryLockedQty Field
    /// </summary>/
    public sealed class SecondaryLockedQty : DecimalField
    {
        public const int TAG = 1809;

        public SecondaryLockedQty()
            : base(Tags.SecondaryLockedQty) { }
        public SecondaryLockedQty(Decimal val)
            : base(Tags.SecondaryLockedQty, val) { }

    }


    /// <summary>
    /// ReleaseInstruction Field
    /// </summary>/
    public sealed class ReleaseInstruction : IntField
    {
        public const int TAG = 1810;

        public ReleaseInstruction()
            : base(Tags.ReleaseInstruction) { }
        public ReleaseInstruction(int val)
            : base(Tags.ReleaseInstruction, val) { }


        // Field Enumerations
        public const int INTERMARKET_SWEEP_ORDER = 1;
        public const int NO_AWAY_MARKET_BETTER_CHECK = 2;
    }


    /// <summary>
    /// ReleaseQty Field
    /// </summary>/
    public sealed class ReleaseQty : DecimalField
    {
        public const int TAG = 1811;

        public ReleaseQty()
            : base(Tags.ReleaseQty) { }
        public ReleaseQty(Decimal val)
            : base(Tags.ReleaseQty, val) { }

    }


    /// <summary>
    /// NoDisclosureInstructions Field
    /// </summary>/
    public sealed class NoDisclosureInstructions : IntField
    {
        public const int TAG = 1812;

        public NoDisclosureInstructions()
            : base(Tags.NoDisclosureInstructions) { }
        public NoDisclosureInstructions(int val)
            : base(Tags.NoDisclosureInstructions, val) { }

    }


    /// <summary>
    /// DisclosureType Field
    /// </summary>/
    public sealed class DisclosureType : IntField
    {
        public const int TAG = 1813;

        public DisclosureType()
            : base(Tags.DisclosureType) { }
        public DisclosureType(int val)
            : base(Tags.DisclosureType, val) { }


        // Field Enumerations
        public const int VOLUME = 1;
        public const int PRICE = 2;
        public const int SIDE = 3;
        public const int AON = 4;
        public const int GENERAL = 5;
        public const int CLEARING_ACCOUNT = 6;
        public const int CMTA_ACCOUNT = 7;
    }


    /// <summary>
    /// DisclosureInstruction Field
    /// </summary>/
    public sealed class DisclosureInstruction : IntField
    {
        public const int TAG = 1814;

        public DisclosureInstruction()
            : base(Tags.DisclosureInstruction) { }
        public DisclosureInstruction(int val)
            : base(Tags.DisclosureInstruction, val) { }


        // Field Enumerations
        public const int NO = 0;
        public const int YES = 1;
        public const int USE_DEFAULT_SETTING = 2;
    }


    /// <summary>
    /// TradingCapacity Field
    /// </summary>/
    public sealed class TradingCapacity : IntField
    {
        public const int TAG = 1815;

        public TradingCapacity()
            : base(Tags.TradingCapacity) { }
        public TradingCapacity(int val)
            : base(Tags.TradingCapacity, val) { }


        // Field Enumerations
        public const int CUSTOMER = 1;
        public const int CUSTOMER_PROFESSIONAL = 2;
        public const int BROKER_DEALER = 3;
        public const int CUSTOMER_BROKER_DEALER = 4;
        public const int PRINCIPAL = 5;
        public const int MARKET_MAKER = 6;
        public const int AWAY_MARKET_MAKER = 7;
        public const int SYSTEMATIC_INTERNALISER = 8;
    }


    /// <summary>
    /// ClearingAccountType Field
    /// </summary>/
    public sealed class ClearingAccountType : IntField
    {
        public const int TAG = 1816;

        public ClearingAccountType()
            : base(Tags.ClearingAccountType) { }
        public ClearingAccountType(int val)
            : base(Tags.ClearingAccountType, val) { }


        // Field Enumerations
        public const int CUSTOMER = 1;
        public const int FIRM = 2;
        public const int MARKET_MAKER = 3;
    }


    /// <summary>
    /// LegClearingAccountType Field
    /// </summary>/
    public sealed class LegClearingAccountType : IntField
    {
        public const int TAG = 1817;

        public LegClearingAccountType()
            : base(Tags.LegClearingAccountType) { }
        public LegClearingAccountType(int val)
            : base(Tags.LegClearingAccountType, val) { }


        // Field Enumerations
        public const int CUSTOMER = 1;
        public const int FIRM = 2;
        public const int MARKET_MAKER = 3;
    }


    /// <summary>
    /// TargetPartyRoleQualifier Field
    /// </summary>/
    public sealed class TargetPartyRoleQualifier : IntField
    {
        public const int TAG = 1818;

        public TargetPartyRoleQualifier()
            : base(Tags.TargetPartyRoleQualifier) { }
        public TargetPartyRoleQualifier(int val)
            : base(Tags.TargetPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// RelatedHighPrice Field
    /// </summary>/
    public sealed class RelatedHighPrice : DecimalField
    {
        public const int TAG = 1819;

        public RelatedHighPrice()
            : base(Tags.RelatedHighPrice) { }
        public RelatedHighPrice(Decimal val)
            : base(Tags.RelatedHighPrice, val) { }

    }


    /// <summary>
    /// RelatedLowPrice Field
    /// </summary>/
    public sealed class RelatedLowPrice : DecimalField
    {
        public const int TAG = 1820;

        public RelatedLowPrice()
            : base(Tags.RelatedLowPrice) { }
        public RelatedLowPrice(Decimal val)
            : base(Tags.RelatedLowPrice, val) { }

    }


    /// <summary>
    /// RelatedPriceSource Field
    /// </summary>/
    public sealed class RelatedPriceSource : IntField
    {
        public const int TAG = 1821;

        public RelatedPriceSource()
            : base(Tags.RelatedPriceSource) { }
        public RelatedPriceSource(int val)
            : base(Tags.RelatedPriceSource, val) { }


        // Field Enumerations
        public const int NBB = 1;
        public const int NBO = 2;
    }


    /// <summary>
    /// MinQtyMethod Field
    /// </summary>/
    public sealed class MinQtyMethod : IntField
    {
        public const int TAG = 1822;

        public MinQtyMethod()
            : base(Tags.MinQtyMethod) { }
        public MinQtyMethod(int val)
            : base(Tags.MinQtyMethod, val) { }


        // Field Enumerations
        public const int ONCE = 1;
        public const int MULTIPLE = 2;
    }


    /// <summary>
    /// Triggered Field
    /// </summary>/
    public sealed class Triggered : IntField
    {
        public const int TAG = 1823;

        public Triggered()
            : base(Tags.Triggered) { }
        public Triggered(int val)
            : base(Tags.Triggered, val) { }


        // Field Enumerations
        public const int NOT_TRIGGERED = 0;
        public const int TRIGGERED = 1;
        public const int STOP_ORDER_TRIGGERED = 2;
        public const int ONE_CANCELS_THE_OTHER = 3;
        public const int ONE_TRIGGERS_THE_OTHER = 4;
        public const int ONE_UPDATES_THE_OTHER = 5;
    }


    /// <summary>
    /// AffectedOrigClOrdID Field
    /// </summary>/
    public sealed class AffectedOrigClOrdID : StringField
    {
        public const int TAG = 1824;

        public AffectedOrigClOrdID()
            : base(Tags.AffectedOrigClOrdID) { }
        public AffectedOrigClOrdID(string val)
            : base(Tags.AffectedOrigClOrdID, val) { }

    }


    /// <summary>
    /// NotAffSecondaryOrderID Field
    /// </summary>/
    public sealed class NotAffSecondaryOrderID : StringField
    {
        public const int TAG = 1825;

        public NotAffSecondaryOrderID()
            : base(Tags.NotAffSecondaryOrderID) { }
        public NotAffSecondaryOrderID(string val)
            : base(Tags.NotAffSecondaryOrderID, val) { }

    }


    /// <summary>
    /// EventTimePeriod Field
    /// </summary>/
    public sealed class EventTimePeriod : IntField
    {
        public const int TAG = 1826;

        public EventTimePeriod()
            : base(Tags.EventTimePeriod) { }
        public EventTimePeriod(int val)
            : base(Tags.EventTimePeriod, val) { }

    }


    /// <summary>
    /// EventTimeUnit Field
    /// </summary>/
    public sealed class EventTimeUnit : StringField
    {
        public const int TAG = 1827;

        public EventTimeUnit()
            : base(Tags.EventTimeUnit) { }
        public EventTimeUnit(string val)
            : base(Tags.EventTimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LastQtyVariance Field
    /// </summary>/
    public sealed class LastQtyVariance : DecimalField
    {
        public const int TAG = 1828;

        public LastQtyVariance()
            : base(Tags.LastQtyVariance) { }
        public LastQtyVariance(Decimal val)
            : base(Tags.LastQtyVariance, val) { }

    }


    /// <summary>
    /// NoCrossLegs Field
    /// </summary>/
    public sealed class NoCrossLegs : IntField
    {
        public const int TAG = 1829;

        public NoCrossLegs()
            : base(Tags.NoCrossLegs) { }
        public NoCrossLegs(int val)
            : base(Tags.NoCrossLegs, val) { }

    }


    /// <summary>
    /// SettlPriceIncrement Field
    /// </summary>/
    public sealed class SettlPriceIncrement : DecimalField
    {
        public const int TAG = 1830;

        public SettlPriceIncrement()
            : base(Tags.SettlPriceIncrement) { }
        public SettlPriceIncrement(Decimal val)
            : base(Tags.SettlPriceIncrement, val) { }

    }


    /// <summary>
    /// SettlPriceSecondaryIncrement Field
    /// </summary>/
    public sealed class SettlPriceSecondaryIncrement : DecimalField
    {
        public const int TAG = 1831;

        public SettlPriceSecondaryIncrement()
            : base(Tags.SettlPriceSecondaryIncrement) { }
        public SettlPriceSecondaryIncrement(Decimal val)
            : base(Tags.SettlPriceSecondaryIncrement, val) { }

    }


    /// <summary>
    /// ClearedIndicator Field
    /// </summary>/
    public sealed class ClearedIndicator : IntField
    {
        public const int TAG = 1832;

        public ClearedIndicator()
            : base(Tags.ClearedIndicator) { }
        public ClearedIndicator(int val)
            : base(Tags.ClearedIndicator, val) { }


        // Field Enumerations
        public const int NOT_CLEARED = 0;
        public const int CLEARED = 1;
        public const int SUBMITTED = 2;
        public const int REJECTED = 3;
    }


    /// <summary>
    /// ContractRefPosType Field
    /// </summary>/
    public sealed class ContractRefPosType : IntField
    {
        public const int TAG = 1833;

        public ContractRefPosType()
            : base(Tags.ContractRefPosType) { }
        public ContractRefPosType(int val)
            : base(Tags.ContractRefPosType, val) { }


        // Field Enumerations
        public const int TWO_COMPONENT_INTERCOMMODITY_SPREAD = 0;
        public const int INDEX_OR_BASKET = 1;
        public const int TWO_COMPONENT_LOCATIONAL_BASIS = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PositionCapacity Field
    /// </summary>/
    public sealed class PositionCapacity : IntField
    {
        public const int TAG = 1834;

        public PositionCapacity()
            : base(Tags.PositionCapacity) { }
        public PositionCapacity(int val)
            : base(Tags.PositionCapacity, val) { }


        // Field Enumerations
        public const int PRINCIPAL = 0;
        public const int AGENT = 1;
        public const int CUSTOMER = 2;
        public const int COUNTERPARTY = 3;
    }


    /// <summary>
    /// PosQtyUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class PosQtyUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1835;

        public PosQtyUnitOfMeasureCurrency()
            : base(Tags.PosQtyUnitOfMeasureCurrency) { }
        public PosQtyUnitOfMeasureCurrency(string val)
            : base(Tags.PosQtyUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// PosQtyUnitOfMeasure Field
    /// </summary>/
    public sealed class PosQtyUnitOfMeasure : StringField
    {
        public const int TAG = 1836;

        public PosQtyUnitOfMeasure()
            : base(Tags.PosQtyUnitOfMeasure) { }
        public PosQtyUnitOfMeasure(string val)
            : base(Tags.PosQtyUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingContractPriceRefMonth Field
    /// </summary>/
    public sealed class UnderlyingContractPriceRefMonth : StringField
    {
        public const int TAG = 1837;

        public UnderlyingContractPriceRefMonth()
            : base(Tags.UnderlyingContractPriceRefMonth) { }
        public UnderlyingContractPriceRefMonth(string val)
            : base(Tags.UnderlyingContractPriceRefMonth, val) { }

    }


    /// <summary>
    /// NoTradePriceConditions Field
    /// </summary>/
    public sealed class NoTradePriceConditions : IntField
    {
        public const int TAG = 1838;

        public NoTradePriceConditions()
            : base(Tags.NoTradePriceConditions) { }
        public NoTradePriceConditions(int val)
            : base(Tags.NoTradePriceConditions, val) { }

    }


    /// <summary>
    /// TradePriceCondition Field
    /// </summary>/
    public sealed class TradePriceCondition : IntField
    {
        public const int TAG = 1839;

        public TradePriceCondition()
            : base(Tags.TradePriceCondition) { }
        public TradePriceCondition(int val)
            : base(Tags.TradePriceCondition, val) { }


        // Field Enumerations
        public const int SPECIAL_CUM_DIVIDEND = 0;
        public const int SPECIAL_CUM_RIGHTS = 1;
        public const int SPECIAL_EX_DIVIDEND = 2;
        public const int SPECIAL_EX_RIGHTS = 3;
        public const int SPECIAL_CUM_COUPON = 4;
        public const int SPECIAL_CUM_CAPITAL_REPAYMENTS = 5;
        public const int SPECIAL_EX_COUPON = 6;
        public const int SPECIAL_EX_CAPITAL_REPAYMENTS = 7;
        public const int CASH_SETTLEMENT = 8;
        public const int SPECIAL_CUM_BONUS = 9;
        public const int SPECIAL_PRICE = 10;
        public const int SPECIAL_EX_BONUS = 11;
        public const int GUARANTEED_DELIVERY = 12;
        public const int SPECIAL_DIVIDEND = 13;
        public const int PRICE_IMPROVEMENT = 14;
        public const int NON_PRICE_FORMING_TRADE = 15;
        public const int TRADE_EXEMPTED_FROM_TRADING_OBLIGATION = 16;
        public const int PRICE_OR_STRIKE_PRICE_IS_PENDING = 17;
        public const int PRICE_IS_NOT_APPLICABLE = 18;
    }


    /// <summary>
    /// TradeAllocStatus Field
    /// </summary>/
    public sealed class TradeAllocStatus : IntField
    {
        public const int TAG = 1840;

        public TradeAllocStatus()
            : base(Tags.TradeAllocStatus) { }
        public TradeAllocStatus(int val)
            : base(Tags.TradeAllocStatus, val) { }


        // Field Enumerations
        public const int PENDING_CLEAR = 0;
        public const int CLAIMED = 1;
        public const int CLEARED = 2;
        public const int REJECTED = 3;
    }


    /// <summary>
    /// NoTradeQtys Field
    /// </summary>/
    public sealed class NoTradeQtys : IntField
    {
        public const int TAG = 1841;

        public NoTradeQtys()
            : base(Tags.NoTradeQtys) { }
        public NoTradeQtys(int val)
            : base(Tags.NoTradeQtys, val) { }

    }


    /// <summary>
    /// TradeQtyType Field
    /// </summary>/
    public sealed class TradeQtyType : IntField
    {
        public const int TAG = 1842;

        public TradeQtyType()
            : base(Tags.TradeQtyType) { }
        public TradeQtyType(int val)
            : base(Tags.TradeQtyType, val) { }


        // Field Enumerations
        public const int CLEARED_QUANTITY = 0;
        public const int LONG_SIDE_CLAIMED_QUANTITY = 1;
        public const int SHORT_SIDE_CLAIMED_QUANTITY = 2;
        public const int LONG_SIDE_REJECTED_QUANTITY = 3;
        public const int SHORT_SIDE_REJECTED_QUANTITY = 4;
        public const int PENDING_QUANTITY = 5;
        public const int TRANSACTION_QUANTITY = 6;
        public const int REMAINING_TRADE_QUANTITY = 7;
        public const int PREVIOUS_REMAINING_TRADE_QUANTITY = 8;
    }


    /// <summary>
    /// TradeQty Field
    /// </summary>/
    public sealed class TradeQty : DecimalField
    {
        public const int TAG = 1843;

        public TradeQty()
            : base(Tags.TradeQty) { }
        public TradeQty(Decimal val)
            : base(Tags.TradeQty, val) { }

    }


    /// <summary>
    /// NoTradeAllocAmts Field
    /// </summary>/
    public sealed class NoTradeAllocAmts : IntField
    {
        public const int TAG = 1844;

        public NoTradeAllocAmts()
            : base(Tags.NoTradeAllocAmts) { }
        public NoTradeAllocAmts(int val)
            : base(Tags.NoTradeAllocAmts, val) { }

    }


    /// <summary>
    /// TradeAllocAmtType Field
    /// </summary>/
    public sealed class TradeAllocAmtType : StringField
    {
        public const int TAG = 1845;

        public TradeAllocAmtType()
            : base(Tags.TradeAllocAmtType) { }
        public TradeAllocAmtType(string val)
            : base(Tags.TradeAllocAmtType, val) { }


        // Field Enumerations
        public const string CASH_AMOUNT = "CASH";
        public const string CASH_RESIDUAL_AMOUNT = "CRES";
        public const string FINAL_MARK_TO_MARKET_AMOUNT = "FMTM";
        public const string INCREMENTAL_MARK_TO_MARKET = "IMTM";
        public const string PREMIUM_AMOUNT = "PREM";
        public const string START_OF_DAY_MARK_TO_MARKET = "SMTM";
        public const string TRADE_VARIATION_AMOUNT = "TVAR";
        public const string VALUE_ADJUSTED_AMOUNT = "VADJ";
        public const string SETTLEMENT_VALUE = "SETL";
        public const string INITIAL_TRADE_COUPON_AMOUNT = "ICPN";
        public const string ACCRUED_COUPON_AMOUNT = "ACPN";
        public const string COUPON_AMOUNT = "CPN";
        public const string INCREMENTAL_ACCRUED_COUPON = "IACPN";
        public const string COLLATERALIZED_MARK_TO_MARKET = "CMTM";
        public const string INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET = "ICMTM";
        public const string COMPENSATION_AMOUNT = "DLV";
        public const string TOTAL_BANKED_AMOUNT = "BANK";
        public const string TOTAL_COLLATERALIZED_AMOUNT = "COLAT";
        public const string LONG_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "LSNV";
        public const string SHORT_PAIRED_SWAP_OR_SWAPTION_NOTIONAL_VALUE = "SSNV";
        public const string START_OF_DAY_ACCRUED_COUPON = "SACPN";
        public const string NET_PRESENT_VALUE = "NPV";
        public const string START_OF_DAY_NET_PRESENT_VALUE = "SNPV";
        public const string NET_CASH_FLOW = "NCF";
        public const string PRESENT_VALUE_OF_ALL_FEES = "PVFEES";
        public const string PRESENT_VALUE_OF_ONE_BASIS_POINTS = "PV01";
        public const string THE_FIVE_YEAR_EQUIVALENT_NOTIONAL_AMOUNT = "5YREN";
        public const string UNDISCOUNTED_MARK_TO_MARKET = "UMTM";
        public const string MARK_TO_MODEL = "MTD";
        public const string MARK_TO_MARKET_VARIANCE = "VMTM";
        public const string MARK_TO_MODEL_VARIANCE = "VMTD";
        public const string UPFRONT_PAYMENT = "UPFRNT";
        public const string END_VALUE = "ENDV";
        public const string OUTSTANDING_MARGIN_LOAN = "MGNLN";
        public const string LOAN_VALUE = "LNVL";
    }


    /// <summary>
    /// TradeAllocAmt Field
    /// </summary>/
    public sealed class TradeAllocAmt : DecimalField
    {
        public const int TAG = 1846;

        public TradeAllocAmt()
            : base(Tags.TradeAllocAmt) { }
        public TradeAllocAmt(Decimal val)
            : base(Tags.TradeAllocAmt, val) { }

    }


    /// <summary>
    /// TradeAllocCurrency Field
    /// </summary>/
    public sealed class TradeAllocCurrency : StringField
    {
        public const int TAG = 1847;

        public TradeAllocCurrency()
            : base(Tags.TradeAllocCurrency) { }
        public TradeAllocCurrency(string val)
            : base(Tags.TradeAllocCurrency, val) { }

    }


    /// <summary>
    /// TradeAllocGroupInstruction Field
    /// </summary>/
    public sealed class TradeAllocGroupInstruction : IntField
    {
        public const int TAG = 1848;

        public TradeAllocGroupInstruction()
            : base(Tags.TradeAllocGroupInstruction) { }
        public TradeAllocGroupInstruction(int val)
            : base(Tags.TradeAllocGroupInstruction, val) { }


        // Field Enumerations
        public const int ADD_TO_AN_EXISTING_ALLOCATION_GROUP_IF_ONE_EXISTS = 0;
        public const int DO_NOT_ADD_THE_TRADE_TO_AN_ALLOCATION_GROUP = 1;
    }


    /// <summary>
    /// OffsetInstruction Field
    /// </summary>/
    public sealed class OffsetInstruction : IntField
    {
        public const int TAG = 1849;

        public OffsetInstruction()
            : base(Tags.OffsetInstruction) { }
        public OffsetInstruction(int val)
            : base(Tags.OffsetInstruction, val) { }


        // Field Enumerations
        public const int OFFSET = 0;
        public const int ONSET = 1;
    }


    /// <summary>
    /// TradeAllocAmtReason Field
    /// </summary>/
    public sealed class TradeAllocAmtReason : IntField
    {
        public const int TAG = 1850;

        public TradeAllocAmtReason()
            : base(Tags.TradeAllocAmtReason) { }
        public TradeAllocAmtReason(int val)
            : base(Tags.TradeAllocAmtReason, val) { }


        // Field Enumerations
        public const int OPTIONS_SETTLEMENT = 0;
        public const int PENDING_EROSION_ADJUSTMENT = 1;
        public const int FINAL_EROSION_ADJUSTMENT = 2;
        public const int TEAR_UP_COUPON_AMOUNT = 3;
        public const int PRICE_ALIGNMENT_INTEREST = 4;
        public const int DELIVERY_INVOICE_CHARGES = 5;
        public const int DELIVERY_STORAGE_CHARGES = 6;
    }


    /// <summary>
    /// StrategyLinkID Field
    /// </summary>/
    public sealed class StrategyLinkID : StringField
    {
        public const int TAG = 1851;

        public StrategyLinkID()
            : base(Tags.StrategyLinkID) { }
        public StrategyLinkID(string val)
            : base(Tags.StrategyLinkID, val) { }

    }


    /// <summary>
    /// SideAvgPx Field
    /// </summary>/
    public sealed class SideAvgPx : DecimalField
    {
        public const int TAG = 1852;

        public SideAvgPx()
            : base(Tags.SideAvgPx) { }
        public SideAvgPx(Decimal val)
            : base(Tags.SideAvgPx, val) { }

    }


    /// <summary>
    /// SideAvgPxIndicator Field
    /// </summary>/
    public sealed class SideAvgPxIndicator : IntField
    {
        public const int TAG = 1853;

        public SideAvgPxIndicator()
            : base(Tags.SideAvgPxIndicator) { }
        public SideAvgPxIndicator(int val)
            : base(Tags.SideAvgPxIndicator, val) { }


        // Field Enumerations
        public const int NO_AVERAGE_PRICING = 0;
        public const int TRADE_IS_PART_OF_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_SIDEAVGPXGROUPID = 1;
        public const int LAST_TRADE_IS_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_SIDEAVGPXGROUPID = 2;
    }


    /// <summary>
    /// SideAvgPxGroupID Field
    /// </summary>/
    public sealed class SideAvgPxGroupID : StringField
    {
        public const int TAG = 1854;

        public SideAvgPxGroupID()
            : base(Tags.SideAvgPxGroupID) { }
        public SideAvgPxGroupID(string val)
            : base(Tags.SideAvgPxGroupID, val) { }

    }


    /// <summary>
    /// NoRelatedTrades Field
    /// </summary>/
    public sealed class NoRelatedTrades : IntField
    {
        public const int TAG = 1855;

        public NoRelatedTrades()
            : base(Tags.NoRelatedTrades) { }
        public NoRelatedTrades(int val)
            : base(Tags.NoRelatedTrades, val) { }

    }


    /// <summary>
    /// RelatedTradeID Field
    /// </summary>/
    public sealed class RelatedTradeID : StringField
    {
        public const int TAG = 1856;

        public RelatedTradeID()
            : base(Tags.RelatedTradeID) { }
        public RelatedTradeID(string val)
            : base(Tags.RelatedTradeID, val) { }

    }


    /// <summary>
    /// RelatedTradeIDSource Field
    /// </summary>/
    public sealed class RelatedTradeIDSource : IntField
    {
        public const int TAG = 1857;

        public RelatedTradeIDSource()
            : base(Tags.RelatedTradeIDSource) { }
        public RelatedTradeIDSource(int val)
            : base(Tags.RelatedTradeIDSource, val) { }


        // Field Enumerations
        public const int NON_FIX_SOURCE = 0;
        public const int TRADE_ID = 1;
        public const int SECONDARY_TRADE_ID = 2;
        public const int TRADE_REPORT_ID = 3;
        public const int FIRM_TRADE_ID = 4;
        public const int SECONDARY_FIRM_TRADE_ID = 5;
        public const int REGULATORY_TRADE_ID = 6;
    }


    /// <summary>
    /// RelatedTradeDate Field
    /// </summary>/
    public sealed class RelatedTradeDate : StringField
    {
        public const int TAG = 1858;

        public RelatedTradeDate()
            : base(Tags.RelatedTradeDate) { }
        public RelatedTradeDate(string val)
            : base(Tags.RelatedTradeDate, val) { }

    }


    /// <summary>
    /// RelatedTradeMarketID Field
    /// </summary>/
    public sealed class RelatedTradeMarketID : StringField
    {
        public const int TAG = 1859;

        public RelatedTradeMarketID()
            : base(Tags.RelatedTradeMarketID) { }
        public RelatedTradeMarketID(string val)
            : base(Tags.RelatedTradeMarketID, val) { }

    }


    /// <summary>
    /// RelatedTradeQuantity Field
    /// </summary>/
    public sealed class RelatedTradeQuantity : DecimalField
    {
        public const int TAG = 1860;

        public RelatedTradeQuantity()
            : base(Tags.RelatedTradeQuantity) { }
        public RelatedTradeQuantity(Decimal val)
            : base(Tags.RelatedTradeQuantity, val) { }

    }


    /// <summary>
    /// NoRelatedPositions Field
    /// </summary>/
    public sealed class NoRelatedPositions : IntField
    {
        public const int TAG = 1861;

        public NoRelatedPositions()
            : base(Tags.NoRelatedPositions) { }
        public NoRelatedPositions(int val)
            : base(Tags.NoRelatedPositions, val) { }

    }


    /// <summary>
    /// RelatedPositionID Field
    /// </summary>/
    public sealed class RelatedPositionID : StringField
    {
        public const int TAG = 1862;

        public RelatedPositionID()
            : base(Tags.RelatedPositionID) { }
        public RelatedPositionID(string val)
            : base(Tags.RelatedPositionID, val) { }

    }


    /// <summary>
    /// RelatedPositionIDSource Field
    /// </summary>/
    public sealed class RelatedPositionIDSource : IntField
    {
        public const int TAG = 1863;

        public RelatedPositionIDSource()
            : base(Tags.RelatedPositionIDSource) { }
        public RelatedPositionIDSource(int val)
            : base(Tags.RelatedPositionIDSource, val) { }


        // Field Enumerations
        public const int POSITION_MAINTENANCE_REPORT_ID = 1;
        public const int POSITION_TRANSFER_ID = 2;
        public const int POSITION_ENTITY_ID = 3;
    }


    /// <summary>
    /// RelatedPositionDate Field
    /// </summary>/
    public sealed class RelatedPositionDate : StringField
    {
        public const int TAG = 1864;

        public RelatedPositionDate()
            : base(Tags.RelatedPositionDate) { }
        public RelatedPositionDate(string val)
            : base(Tags.RelatedPositionDate, val) { }

    }


    /// <summary>
    /// StrikeIndex Field
    /// </summary>/
    public sealed class StrikeIndex : StringField
    {
        public const int TAG = 1866;

        public StrikeIndex()
            : base(Tags.StrikeIndex) { }
        public StrikeIndex(string val)
            : base(Tags.StrikeIndex, val) { }

    }


    /// <summary>
    /// OfferID Field
    /// </summary>/
    public sealed class OfferID : StringField
    {
        public const int TAG = 1867;

        public OfferID()
            : base(Tags.OfferID) { }
        public OfferID(string val)
            : base(Tags.OfferID, val) { }

    }


    /// <summary>
    /// NoValueChecks Field
    /// </summary>/
    public sealed class NoValueChecks : IntField
    {
        public const int TAG = 1868;

        public NoValueChecks()
            : base(Tags.NoValueChecks) { }
        public NoValueChecks(int val)
            : base(Tags.NoValueChecks, val) { }

    }


    /// <summary>
    /// ValueCheckType Field
    /// </summary>/
    public sealed class ValueCheckType : IntField
    {
        public const int TAG = 1869;

        public ValueCheckType()
            : base(Tags.ValueCheckType) { }
        public ValueCheckType(int val)
            : base(Tags.ValueCheckType, val) { }


        // Field Enumerations
        public const int PRICE_CHECK = 1;
        public const int NOTIONAL_VALUE_CHECK = 2;
        public const int QUANTITY_CHECK = 3;
    }


    /// <summary>
    /// ValueCheckAction Field
    /// </summary>/
    public sealed class ValueCheckAction : IntField
    {
        public const int TAG = 1870;

        public ValueCheckAction()
            : base(Tags.ValueCheckAction) { }
        public ValueCheckAction(int val)
            : base(Tags.ValueCheckAction, val) { }


        // Field Enumerations
        public const int DO_NOT_CHECK = 0;
        public const int CHECK = 1;
        public const int BEST_EFFORT = 2;
    }


    /// <summary>
    /// LegSecurityXMLLen Field
    /// </summary>/
    public sealed class LegSecurityXMLLen : IntField
    {
        public const int TAG = 1871;

        public LegSecurityXMLLen()
            : base(Tags.LegSecurityXMLLen) { }
        public LegSecurityXMLLen(int val)
            : base(Tags.LegSecurityXMLLen, val) { }

    }


    /// <summary>
    /// LegSecurityXML Field
    /// </summary>/
    public sealed class LegSecurityXML : StringField
    {
        public const int TAG = 1872;

        public LegSecurityXML()
            : base(Tags.LegSecurityXML) { }
        public LegSecurityXML(string val)
            : base(Tags.LegSecurityXML, val) { }

    }


    /// <summary>
    /// LegSecurityXMLSchema Field
    /// </summary>/
    public sealed class LegSecurityXMLSchema : StringField
    {
        public const int TAG = 1873;

        public LegSecurityXMLSchema()
            : base(Tags.LegSecurityXMLSchema) { }
        public LegSecurityXMLSchema(string val)
            : base(Tags.LegSecurityXMLSchema, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityXMLLen Field
    /// </summary>/
    public sealed class UnderlyingSecurityXMLLen : IntField
    {
        public const int TAG = 1874;

        public UnderlyingSecurityXMLLen()
            : base(Tags.UnderlyingSecurityXMLLen) { }
        public UnderlyingSecurityXMLLen(int val)
            : base(Tags.UnderlyingSecurityXMLLen, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityXML Field
    /// </summary>/
    public sealed class UnderlyingSecurityXML : StringField
    {
        public const int TAG = 1875;

        public UnderlyingSecurityXML()
            : base(Tags.UnderlyingSecurityXML) { }
        public UnderlyingSecurityXML(string val)
            : base(Tags.UnderlyingSecurityXML, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityXMLSchema Field
    /// </summary>/
    public sealed class UnderlyingSecurityXMLSchema : StringField
    {
        public const int TAG = 1876;

        public UnderlyingSecurityXMLSchema()
            : base(Tags.UnderlyingSecurityXMLSchema) { }
        public UnderlyingSecurityXMLSchema(string val)
            : base(Tags.UnderlyingSecurityXMLSchema, val) { }

    }


    /// <summary>
    /// PartyDetailRequestResult Field
    /// </summary>/
    public sealed class PartyDetailRequestResult : IntField
    {
        public const int TAG = 1877;

        public PartyDetailRequestResult()
            : base(Tags.PartyDetailRequestResult) { }
        public PartyDetailRequestResult(int val)
            : base(Tags.PartyDetailRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_PARTY_STATUS = 3;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PartyDetailRequestStatus Field
    /// </summary>/
    public sealed class PartyDetailRequestStatus : IntField
    {
        public const int TAG = 1878;

        public PartyDetailRequestStatus()
            : base(Tags.PartyDetailRequestStatus) { }
        public PartyDetailRequestStatus(int val)
            : base(Tags.PartyDetailRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
        public const int ACCEPTANCE_PENDING = 3;
    }


    /// <summary>
    /// PartyDetailDefinitionStatus Field
    /// </summary>/
    public sealed class PartyDetailDefinitionStatus : IntField
    {
        public const int TAG = 1879;

        public PartyDetailDefinitionStatus()
            : base(Tags.PartyDetailDefinitionStatus) { }
        public PartyDetailDefinitionStatus(int val)
            : base(Tags.PartyDetailDefinitionStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// PartyDetailDefinitionResult Field
    /// </summary>/
    public sealed class PartyDetailDefinitionResult : IntField
    {
        public const int TAG = 1880;

        public PartyDetailDefinitionResult()
            : base(Tags.PartyDetailDefinitionResult) { }
        public PartyDetailDefinitionResult(int val)
            : base(Tags.PartyDetailDefinitionResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_PARTY_STATUS = 3;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// EntitlementRequestResult Field
    /// </summary>/
    public sealed class EntitlementRequestResult : IntField
    {
        public const int TAG = 1881;

        public EntitlementRequestResult()
            : base(Tags.EntitlementRequestResult) { }
        public EntitlementRequestResult(int val)
            : base(Tags.EntitlementRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_ENTITLEMENT_TYPE = 3;
        public const int INVALID_ENTITLEMENT_ID = 4;
        public const int INVALID_ENTITLEMENT_ATTRIBUTE = 5;
        public const int INVALID_INSTRUMENT_SCOPE = 6;
        public const int INVALID_MARKET_SEGMENT_SCOPE = 7;
        public const int INVALID_START_DATE = 8;
        public const int INVALID_END_DATE = 9;
        public const int INSTRUMENT_SCOPE_NOT_SUPPORTED = 10;
        public const int MARKET_SEGMENT_SCOPE_NOT_SUPPORTED = 11;
        public const int ENTITLEMENT_NOT_APPROVED_FOR_PARTY = 12;
        public const int ENTITLEMENT_ALREADY_DEFINED_FOR_PARTY = 13;
        public const int INSTRUMENT_NOT_APPROVED_FOR_PARTY = 14;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// EntitlementRequestStatus Field
    /// </summary>/
    public sealed class EntitlementRequestStatus : IntField
    {
        public const int TAG = 1882;

        public EntitlementRequestStatus()
            : base(Tags.EntitlementRequestStatus) { }
        public EntitlementRequestStatus(int val)
            : base(Tags.EntitlementRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
        public const int ACCEPTANCE_PENDING = 3;
    }


    /// <summary>
    /// EntitlementStatus Field
    /// </summary>/
    public sealed class EntitlementStatus : IntField
    {
        public const int TAG = 1883;

        public EntitlementStatus()
            : base(Tags.EntitlementStatus) { }
        public EntitlementStatus(int val)
            : base(Tags.EntitlementStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int ACCEPTED_WITH_CHANGES = 1;
        public const int REJECTED = 2;
        public const int PENDING = 3;
        public const int REQUESTED = 4;
        public const int DEFERRED = 5;
    }


    /// <summary>
    /// EntitlementResult Field
    /// </summary>/
    public sealed class EntitlementResult : IntField
    {
        public const int TAG = 1884;

        public EntitlementResult()
            : base(Tags.EntitlementResult) { }
        public EntitlementResult(int val)
            : base(Tags.EntitlementResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int INVALID_RELATED_PARTY = 2;
        public const int INVALID_ENTITLEMENT_TYPE = 3;
        public const int INVALID_ENTITLEMENT_ID = 4;
        public const int INVALID_ENTITLEMENT_ATTRIBUTE = 5;
        public const int INVALID_INSTRUMENT_SCOPE = 6;
        public const int INVALID_MARKET_SEGMENT_SCOPE = 7;
        public const int INVALID_START_DATE = 8;
        public const int INVALID_END_DATE = 9;
        public const int INSTRUMENT_SCOPE_NOT_SUPPORTED = 10;
        public const int MARKET_SEGMENT_SCOPE_NOT_SUPPORTED = 11;
        public const int ENTITLEMENT_NOT_APPROVED_FOR_PARTY = 12;
        public const int ENTITLEMENT_ALREADY_DEFINED_FOR_PARTY = 13;
        public const int INSTRUMENT_NOT_APPROVED_FOR_PARTY = 14;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// EntitlementRefID Field
    /// </summary>/
    public sealed class EntitlementRefID : StringField
    {
        public const int TAG = 1885;

        public EntitlementRefID()
            : base(Tags.EntitlementRefID) { }
        public EntitlementRefID(string val)
            : base(Tags.EntitlementRefID, val) { }

    }


    /// <summary>
    /// SettlPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class SettlPriceUnitOfMeasure : StringField
    {
        public const int TAG = 1886;

        public SettlPriceUnitOfMeasure()
            : base(Tags.SettlPriceUnitOfMeasure) { }
        public SettlPriceUnitOfMeasure(string val)
            : base(Tags.SettlPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// SettlPriceUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class SettlPriceUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 1887;

        public SettlPriceUnitOfMeasureCurrency()
            : base(Tags.SettlPriceUnitOfMeasureCurrency) { }
        public SettlPriceUnitOfMeasureCurrency(string val)
            : base(Tags.SettlPriceUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// TradeMatchTimestamp Field
    /// </summary>/
    public sealed class TradeMatchTimestamp : DateTimeField
    {
        public const int TAG = 1888;

        public TradeMatchTimestamp()
            : base(Tags.TradeMatchTimestamp) { }
        public TradeMatchTimestamp(DateTime val)
            : base(Tags.TradeMatchTimestamp, val) { }
        public TradeMatchTimestamp(DateTime val, bool showMilliseconds)
            : base(Tags.TradeMatchTimestamp, val, showMilliseconds) { }
        public TradeMatchTimestamp(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.TradeMatchTimestamp, val, precision) { }

    }


    /// <summary>
    /// NoInstrmtMatchSides Field
    /// </summary>/
    public sealed class NoInstrmtMatchSides : IntField
    {
        public const int TAG = 1889;

        public NoInstrmtMatchSides()
            : base(Tags.NoInstrmtMatchSides) { }
        public NoInstrmtMatchSides(int val)
            : base(Tags.NoInstrmtMatchSides, val) { }

    }


    /// <summary>
    /// NoTrdMatchSides Field
    /// </summary>/
    public sealed class NoTrdMatchSides : IntField
    {
        public const int TAG = 1890;

        public NoTrdMatchSides()
            : base(Tags.NoTrdMatchSides) { }
        public NoTrdMatchSides(int val)
            : base(Tags.NoTrdMatchSides, val) { }

    }


    /// <summary>
    /// TrdMatchSubID Field
    /// </summary>/
    public sealed class TrdMatchSubID : StringField
    {
        public const int TAG = 1891;

        public TrdMatchSubID()
            : base(Tags.TrdMatchSubID) { }
        public TrdMatchSubID(string val)
            : base(Tags.TrdMatchSubID, val) { }

    }


    /// <summary>
    /// NoLegExecs Field
    /// </summary>/
    public sealed class NoLegExecs : IntField
    {
        public const int TAG = 1892;

        public NoLegExecs()
            : base(Tags.NoLegExecs) { }
        public NoLegExecs(int val)
            : base(Tags.NoLegExecs, val) { }

    }


    /// <summary>
    /// LegExecID Field
    /// </summary>/
    public sealed class LegExecID : StringField
    {
        public const int TAG = 1893;

        public LegExecID()
            : base(Tags.LegExecID) { }
        public LegExecID(string val)
            : base(Tags.LegExecID, val) { }

    }


    /// <summary>
    /// LegTradeID Field
    /// </summary>/
    public sealed class LegTradeID : StringField
    {
        public const int TAG = 1894;

        public LegTradeID()
            : base(Tags.LegTradeID) { }
        public LegTradeID(string val)
            : base(Tags.LegTradeID, val) { }

    }


    /// <summary>
    /// LegTradeReportID Field
    /// </summary>/
    public sealed class LegTradeReportID : StringField
    {
        public const int TAG = 1895;

        public LegTradeReportID()
            : base(Tags.LegTradeReportID) { }
        public LegTradeReportID(string val)
            : base(Tags.LegTradeReportID, val) { }

    }


    /// <summary>
    /// TradeMatchAckStatus Field
    /// </summary>/
    public sealed class TradeMatchAckStatus : IntField
    {
        public const int TAG = 1896;

        public TradeMatchAckStatus()
            : base(Tags.TradeMatchAckStatus) { }
        public TradeMatchAckStatus(int val)
            : base(Tags.TradeMatchAckStatus, val) { }


        // Field Enumerations
        public const int RECEIVED_NOT_YET_PROCESSED = 0;
        public const int ACCEPTED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// TradeMatchRejectReason Field
    /// </summary>/
    public sealed class TradeMatchRejectReason : IntField
    {
        public const int TAG = 1897;

        public TradeMatchRejectReason()
            : base(Tags.TradeMatchRejectReason) { }
        public TradeMatchRejectReason(int val)
            : base(Tags.TradeMatchRejectReason, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY_INFORMATION = 1;
        public const int UNKNOWN_INSTRUMENT = 2;
        public const int NOT_AUTHORIZED_TO_REPORT_TRADES = 3;
        public const int INVALID_TRADE_TYPE = 4;
        public const int OTHER = 99;
    }


    /// <summary>
    /// SideMarketSegmentID Field
    /// </summary>/
    public sealed class SideMarketSegmentID : StringField
    {
        public const int TAG = 1898;

        public SideMarketSegmentID()
            : base(Tags.SideMarketSegmentID) { }
        public SideMarketSegmentID(string val)
            : base(Tags.SideMarketSegmentID, val) { }

    }


    /// <summary>
    /// SideVenueType Field
    /// </summary>/
    public sealed class SideVenueType : CharField
    {
        public const int TAG = 1899;

        public SideVenueType()
            : base(Tags.SideVenueType) { }
        public SideVenueType(char val)
            : base(Tags.SideVenueType, val) { }


        // Field Enumerations
        public const char ELECTRONIC_EXCHANGE = 'E';
        public const char PIT = 'P';
        public const char EX_PIT = 'X';
        public const char CLEARINGHOUSE = 'C';
        public const char REGISTERED_MARKET = 'R';
        public const char OFF_MARKET = 'O';
        public const char CENTRAL_LIMIT_ORDER_BOOK = 'B';
        public const char QUOTE_DRIVEN_MARKET = 'Q';
        public const char DARK_ORDER_BOOK = 'D';
        public const char AUCTION_DRIVEN_MARKET = 'A';
        public const char QUOTE_NEGOTIATION = 'N';
        public const char VOICE_NEOTIATION = 'V';
        public const char HYBRID_MARKET = 'H';
    }


    /// <summary>
    /// SideExecRefID Field
    /// </summary>/
    public sealed class SideExecRefID : StringField
    {
        public const int TAG = 1900;

        public SideExecRefID()
            : base(Tags.SideExecRefID) { }
        public SideExecRefID(string val)
            : base(Tags.SideExecRefID, val) { }

    }


    /// <summary>
    /// LegExecRefID Field
    /// </summary>/
    public sealed class LegExecRefID : StringField
    {
        public const int TAG = 1901;

        public LegExecRefID()
            : base(Tags.LegExecRefID) { }
        public LegExecRefID(string val)
            : base(Tags.LegExecRefID, val) { }

    }


    /// <summary>
    /// HaircutIndicator Field
    /// </summary>/
    public sealed class HaircutIndicator : BooleanField
    {
        public const int TAG = 1902;

        public HaircutIndicator()
            : base(Tags.HaircutIndicator) { }
        public HaircutIndicator(Boolean val)
            : base(Tags.HaircutIndicator, val) { }

    }


    /// <summary>
    /// RegulatoryTradeID Field
    /// </summary>/
    public sealed class RegulatoryTradeID : StringField
    {
        public const int TAG = 1903;

        public RegulatoryTradeID()
            : base(Tags.RegulatoryTradeID) { }
        public RegulatoryTradeID(string val)
            : base(Tags.RegulatoryTradeID, val) { }

    }


    /// <summary>
    /// RegulatoryTradeIDEvent Field
    /// </summary>/
    public sealed class RegulatoryTradeIDEvent : IntField
    {
        public const int TAG = 1904;

        public RegulatoryTradeIDEvent()
            : base(Tags.RegulatoryTradeIDEvent) { }
        public RegulatoryTradeIDEvent(int val)
            : base(Tags.RegulatoryTradeIDEvent, val) { }


        // Field Enumerations
        public const int INITIAL_BLOCK_TRADE = 0;
        public const int ALLOCATION = 1;
        public const int CLEARING = 2;
        public const int COMPRESSION = 3;
        public const int NOVATION = 4;
        public const int TERMINATION = 5;
        public const int POST_TRADE_VALUATION = 6;
    }


    /// <summary>
    /// RegulatoryTradeIDSource Field
    /// </summary>/
    public sealed class RegulatoryTradeIDSource : StringField
    {
        public const int TAG = 1905;

        public RegulatoryTradeIDSource()
            : base(Tags.RegulatoryTradeIDSource) { }
        public RegulatoryTradeIDSource(string val)
            : base(Tags.RegulatoryTradeIDSource, val) { }

    }


    /// <summary>
    /// RegulatoryTradeIDType Field
    /// </summary>/
    public sealed class RegulatoryTradeIDType : IntField
    {
        public const int TAG = 1906;

        public RegulatoryTradeIDType()
            : base(Tags.RegulatoryTradeIDType) { }
        public RegulatoryTradeIDType(int val)
            : base(Tags.RegulatoryTradeIDType, val) { }


        // Field Enumerations
        public const int CURRENT = 0;
        public const int PREVIOUS = 1;
        public const int BLOCK = 2;
        public const int RELATED = 3;
        public const int CLEARED_BLOCK_TRADE = 4;
        public const int TRADING_VENUE_TRANSACTION_IDENTIFIER = 5;
    }


    /// <summary>
    /// NoRegulatoryTradeIDs Field
    /// </summary>/
    public sealed class NoRegulatoryTradeIDs : IntField
    {
        public const int TAG = 1907;

        public NoRegulatoryTradeIDs()
            : base(Tags.NoRegulatoryTradeIDs) { }
        public NoRegulatoryTradeIDs(int val)
            : base(Tags.NoRegulatoryTradeIDs, val) { }

    }


    /// <summary>
    /// NoAllocRegulatoryTradeIDs Field
    /// </summary>/
    public sealed class NoAllocRegulatoryTradeIDs : IntField
    {
        public const int TAG = 1908;

        public NoAllocRegulatoryTradeIDs()
            : base(Tags.NoAllocRegulatoryTradeIDs) { }
        public NoAllocRegulatoryTradeIDs(int val)
            : base(Tags.NoAllocRegulatoryTradeIDs, val) { }

    }


    /// <summary>
    /// AllocRegulatoryTradeID Field
    /// </summary>/
    public sealed class AllocRegulatoryTradeID : StringField
    {
        public const int TAG = 1909;

        public AllocRegulatoryTradeID()
            : base(Tags.AllocRegulatoryTradeID) { }
        public AllocRegulatoryTradeID(string val)
            : base(Tags.AllocRegulatoryTradeID, val) { }

    }


    /// <summary>
    /// AllocRegulatoryTradeIDSource Field
    /// </summary>/
    public sealed class AllocRegulatoryTradeIDSource : StringField
    {
        public const int TAG = 1910;

        public AllocRegulatoryTradeIDSource()
            : base(Tags.AllocRegulatoryTradeIDSource) { }
        public AllocRegulatoryTradeIDSource(string val)
            : base(Tags.AllocRegulatoryTradeIDSource, val) { }

    }


    /// <summary>
    /// AllocRegulatoryTradeIDEvent Field
    /// </summary>/
    public sealed class AllocRegulatoryTradeIDEvent : IntField
    {
        public const int TAG = 1911;

        public AllocRegulatoryTradeIDEvent()
            : base(Tags.AllocRegulatoryTradeIDEvent) { }
        public AllocRegulatoryTradeIDEvent(int val)
            : base(Tags.AllocRegulatoryTradeIDEvent, val) { }


        // Field Enumerations
        public const int INITIAL_BLOCK_TRADE = 0;
        public const int ALLOCATION = 1;
        public const int CLEARING = 2;
        public const int COMPRESSION = 3;
        public const int NOVATION = 4;
        public const int TERMINATION = 5;
        public const int POST_TRADE_VALUATION = 6;
    }


    /// <summary>
    /// AllocRegulatoryTradeIDType Field
    /// </summary>/
    public sealed class AllocRegulatoryTradeIDType : IntField
    {
        public const int TAG = 1912;

        public AllocRegulatoryTradeIDType()
            : base(Tags.AllocRegulatoryTradeIDType) { }
        public AllocRegulatoryTradeIDType(int val)
            : base(Tags.AllocRegulatoryTradeIDType, val) { }


        // Field Enumerations
        public const int CURRENT = 0;
        public const int PREVIOUS = 1;
        public const int BLOCK = 2;
        public const int RELATED = 3;
        public const int CLEARED_BLOCK_TRADE = 4;
        public const int TRADING_VENUE_TRANSACTION_IDENTIFIER = 5;
    }


    /// <summary>
    /// NumOfCompetitors Field
    /// </summary>/
    public sealed class NumOfCompetitors : IntField
    {
        public const int TAG = 1913;

        public NumOfCompetitors()
            : base(Tags.NumOfCompetitors) { }
        public NumOfCompetitors(int val)
            : base(Tags.NumOfCompetitors, val) { }

    }


    /// <summary>
    /// ResponseTime Field
    /// </summary>/
    public sealed class ResponseTime : DateTimeField
    {
        public const int TAG = 1914;

        public ResponseTime()
            : base(Tags.ResponseTime) { }
        public ResponseTime(DateTime val)
            : base(Tags.ResponseTime, val) { }
        public ResponseTime(DateTime val, bool showMilliseconds)
            : base(Tags.ResponseTime, val, showMilliseconds) { }
        public ResponseTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ResponseTime, val, precision) { }

    }


    /// <summary>
    /// QuoteDisplayTime Field
    /// </summary>/
    public sealed class QuoteDisplayTime : DateTimeField
    {
        public const int TAG = 1915;

        public QuoteDisplayTime()
            : base(Tags.QuoteDisplayTime) { }
        public QuoteDisplayTime(DateTime val)
            : base(Tags.QuoteDisplayTime, val) { }
        public QuoteDisplayTime(DateTime val, bool showMilliseconds)
            : base(Tags.QuoteDisplayTime, val, showMilliseconds) { }
        public QuoteDisplayTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.QuoteDisplayTime, val, precision) { }

    }


    /// <summary>
    /// ExposureDurationUnit Field
    /// </summary>/
    public sealed class ExposureDurationUnit : IntField
    {
        public const int TAG = 1916;

        public ExposureDurationUnit()
            : base(Tags.ExposureDurationUnit) { }
        public ExposureDurationUnit(int val)
            : base(Tags.ExposureDurationUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// CoverPrice Field
    /// </summary>/
    public sealed class CoverPrice : DecimalField
    {
        public const int TAG = 1917;

        public CoverPrice()
            : base(Tags.CoverPrice) { }
        public CoverPrice(Decimal val)
            : base(Tags.CoverPrice, val) { }

    }


    /// <summary>
    /// NoClearingAccountTypes Field
    /// </summary>/
    public sealed class NoClearingAccountTypes : IntField
    {
        public const int TAG = 1918;

        public NoClearingAccountTypes()
            : base(Tags.NoClearingAccountTypes) { }
        public NoClearingAccountTypes(int val)
            : base(Tags.NoClearingAccountTypes, val) { }

    }


    /// <summary>
    /// NoPriceMovements Field
    /// </summary>/
    public sealed class NoPriceMovements : IntField
    {
        public const int TAG = 1919;

        public NoPriceMovements()
            : base(Tags.NoPriceMovements) { }
        public NoPriceMovements(int val)
            : base(Tags.NoPriceMovements, val) { }

    }


    /// <summary>
    /// NoPriceMovementValues Field
    /// </summary>/
    public sealed class NoPriceMovementValues : IntField
    {
        public const int TAG = 1920;

        public NoPriceMovementValues()
            : base(Tags.NoPriceMovementValues) { }
        public NoPriceMovementValues(int val)
            : base(Tags.NoPriceMovementValues, val) { }

    }


    /// <summary>
    /// PriceMovementValue Field
    /// </summary>/
    public sealed class PriceMovementValue : DecimalField
    {
        public const int TAG = 1921;

        public PriceMovementValue()
            : base(Tags.PriceMovementValue) { }
        public PriceMovementValue(Decimal val)
            : base(Tags.PriceMovementValue, val) { }

    }


    /// <summary>
    /// PriceMovementPoint Field
    /// </summary>/
    public sealed class PriceMovementPoint : IntField
    {
        public const int TAG = 1922;

        public PriceMovementPoint()
            : base(Tags.PriceMovementPoint) { }
        public PriceMovementPoint(int val)
            : base(Tags.PriceMovementPoint, val) { }

    }


    /// <summary>
    /// PriceMovementType Field
    /// </summary>/
    public sealed class PriceMovementType : IntField
    {
        public const int TAG = 1923;

        public PriceMovementType()
            : base(Tags.PriceMovementType) { }
        public PriceMovementType(int val)
            : base(Tags.PriceMovementType, val) { }


        // Field Enumerations
        public const int AMOUNT = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// ClearingIntention Field
    /// </summary>/
    public sealed class ClearingIntention : IntField
    {
        public const int TAG = 1924;

        public ClearingIntention()
            : base(Tags.ClearingIntention) { }
        public ClearingIntention(int val)
            : base(Tags.ClearingIntention, val) { }


        // Field Enumerations
        public const int DO_NOT_INTEND_TO_CLEAR = 0;
        public const int INTEND_TO_CLEAR = 1;
    }


    /// <summary>
    /// TradeClearingInstruction Field
    /// </summary>/
    public sealed class TradeClearingInstruction : IntField
    {
        public const int TAG = 1925;

        public TradeClearingInstruction()
            : base(Tags.TradeClearingInstruction) { }
        public TradeClearingInstruction(int val)
            : base(Tags.TradeClearingInstruction, val) { }


        // Field Enumerations
        public const int PROCESS_NORMALLY = 0;
        public const int EXCLUDE_FROM_ALL_NETTING = 1;
        public const int BILATERAL_NETTING_ONLY = 2;
        public const int EX_CLEARING = 3;
        public const int SPECIAL_TRADE = 4;
        public const int MULTILATERAL_NETTING = 5;
        public const int CLEAR_AGAINST_CENTRAL_COUNTERPARTY = 6;
        public const int EXCLUDE_FROM_CENTRAL_COUNTERPARTY = 7;
        public const int MANUAL_MODE = 8;
        public const int AUTOMATIC_POSTING_MODE = 9;
        public const int AUTOMATIC_GIVE_UP_MODE = 10;
        public const int QUALIFIED_SERVICE_REPRESENTATIVE_QSR = 11;
        public const int CUSTOMER_TRADE = 12;
        public const int SELF_CLEARING = 13;
        public const int BUY_IN = 14;
    }


    /// <summary>
    /// BackloadedTradeIndicator Field
    /// </summary>/
    public sealed class BackloadedTradeIndicator : BooleanField
    {
        public const int TAG = 1926;

        public BackloadedTradeIndicator()
            : base(Tags.BackloadedTradeIndicator) { }
        public BackloadedTradeIndicator(Boolean val)
            : base(Tags.BackloadedTradeIndicator, val) { }

    }


    /// <summary>
    /// ConfirmationMethod Field
    /// </summary>/
    public sealed class ConfirmationMethod : IntField
    {
        public const int TAG = 1927;

        public ConfirmationMethod()
            : base(Tags.ConfirmationMethod) { }
        public ConfirmationMethod(int val)
            : base(Tags.ConfirmationMethod, val) { }


        // Field Enumerations
        public const int NON_ELECTRONIC = 0;
        public const int ELECTRONIC = 1;
        public const int UNCONFIRMED = 2;
    }


    /// <summary>
    /// MandatoryClearingIndicator Field
    /// </summary>/
    public sealed class MandatoryClearingIndicator : BooleanField
    {
        public const int TAG = 1928;

        public MandatoryClearingIndicator()
            : base(Tags.MandatoryClearingIndicator) { }
        public MandatoryClearingIndicator(Boolean val)
            : base(Tags.MandatoryClearingIndicator, val) { }

    }


    /// <summary>
    /// MixedSwapIndicator Field
    /// </summary>/
    public sealed class MixedSwapIndicator : BooleanField
    {
        public const int TAG = 1929;

        public MixedSwapIndicator()
            : base(Tags.MixedSwapIndicator) { }
        public MixedSwapIndicator(Boolean val)
            : base(Tags.MixedSwapIndicator, val) { }

    }


    /// <summary>
    /// OffMarketPriceIndicator Field
    /// </summary>/
    public sealed class OffMarketPriceIndicator : BooleanField
    {
        public const int TAG = 1930;

        public OffMarketPriceIndicator()
            : base(Tags.OffMarketPriceIndicator) { }
        public OffMarketPriceIndicator(Boolean val)
            : base(Tags.OffMarketPriceIndicator, val) { }

    }


    /// <summary>
    /// VerificationMethod Field
    /// </summary>/
    public sealed class VerificationMethod : IntField
    {
        public const int TAG = 1931;

        public VerificationMethod()
            : base(Tags.VerificationMethod) { }
        public VerificationMethod(int val)
            : base(Tags.VerificationMethod, val) { }


        // Field Enumerations
        public const int NON_ELECTRONIC = 0;
        public const int ELECTRONIC = 1;
    }


    /// <summary>
    /// ClearingRequirementException Field
    /// </summary>/
    public sealed class ClearingRequirementException : IntField
    {
        public const int TAG = 1932;

        public ClearingRequirementException()
            : base(Tags.ClearingRequirementException) { }
        public ClearingRequirementException(int val)
            : base(Tags.ClearingRequirementException, val) { }


        // Field Enumerations
        public const int NO_EXCEPTION = 0;
        public const int EXCEPTION = 1;
        public const int END_USER_EXCEPTION = 2;
        public const int INTER_AFFILIATE_EXCEPTION = 3;
        public const int TREASURY_AFFILIATE_EXCEPTION = 4;
        public const int COOPERATIVE_EXCEPTION = 5;
    }


    /// <summary>
    /// IRSDirection Field
    /// </summary>/
    public sealed class IRSDirection : StringField
    {
        public const int TAG = 1933;

        public IRSDirection()
            : base(Tags.IRSDirection) { }
        public IRSDirection(string val)
            : base(Tags.IRSDirection, val) { }


        // Field Enumerations
        public const string PRINCIPAL_IS_PAYING_FIXED_RATE = "PAY";
        public const string PRINCIPAL_IS_RECEIVING_FIXED_RATE = "RCV";
        public const string SWAP_IS_FLOAT_FLOAT_OR_FIXED_FIXED = "NA";
    }


    /// <summary>
    /// RegulatoryReportType Field
    /// </summary>/
    public sealed class RegulatoryReportType : IntField
    {
        public const int TAG = 1934;

        public RegulatoryReportType()
            : base(Tags.RegulatoryReportType) { }
        public RegulatoryReportType(int val)
            : base(Tags.RegulatoryReportType, val) { }


        // Field Enumerations
        public const int REAL_TIME = 0;
        public const int PRIMARY_ECONOMIC_TERMS = 1;
        public const int SNAPSHOT = 2;
        public const int CONFIRMATION = 3;
        public const int COMBINATION_OF_RT_AND_PET = 4;
        public const int COMBINATION_OF_PET_AND_CONFIRMATION = 5;
        public const int COMBINATION_OF_RT_PET_AND_CONFIRMATION = 6;
        public const int POST_TRADE_VALUATION = 7;
        public const int VERIFICATION = 8;
        public const int POST_TRADE_EVENT = 9;
        public const int POST_TRADE_EVENT_RT_REPORTABLE = 10;
        public const int LIMITED_DETAILS_TRADE = 11;
        public const int DAILY_AGGREGATED_TRADE = 12;
        public const int VOLUME_OMISSION_TRADE = 13;
        public const int FOUR_WEEKS_AGGREGATION_TRADE = 14;
        public const int INDEFINITE_AGGREGATION_TRADE = 15;
        public const int VOLUME_OMISSION_TRADE_ELIGIBLE_FOR_SUBSEQUENT_AGGREGATED_ENRICHMENT = 16;
        public const int FULL_DETAILS_TRADE_OF_LIMITED_DETAILS_TRADE = 17;
        public const int FULL_DETAILS_OF_DAILY_AGGREGATED_TRADE = 18;
        public const int FULL_DETAILS_OF_VOLUME_OMISSION_TRADE = 19;
        public const int FULL_DETAILS_OF_FOUR_WEEKS_AGGREGATION_TRADE = 20;
        public const int FULL_DETAILS_IN_AGGREGATED_FORM_OF_VOLUME_OMISSION_TRADE_ELIGIBLE_FOR_SUBSEQUENT_AGGREGATED_ENRICHMENT = 21;
        public const int ORDER = 22;
        public const int CHILD_ORDER = 23;
        public const int ORDER_ROUTE = 24;
        public const int TRADE = 25;
        public const int QUOTE = 26;
        public const int SUPPLEMENT = 27;
        public const int NEW_TRANSACTION = 28;
        public const int TRANSACTION_CORRECTION = 29;
        public const int TRANSACTION_MODIFICATION = 30;
        public const int COLLATERAL_UPDATE = 31;
        public const int MARGIN_UPDATE = 32;
        public const int TRANSACTION_REPORTED_IN_ERROR = 33;
        public const int TERMINATION = 34;
    }


    /// <summary>
    /// VoluntaryRegulatoryReport Field
    /// </summary>/
    public sealed class VoluntaryRegulatoryReport : BooleanField
    {
        public const int TAG = 1935;

        public VoluntaryRegulatoryReport()
            : base(Tags.VoluntaryRegulatoryReport) { }
        public VoluntaryRegulatoryReport(Boolean val)
            : base(Tags.VoluntaryRegulatoryReport, val) { }

    }


    /// <summary>
    /// TradeCollateralization Field
    /// </summary>/
    public sealed class TradeCollateralization : IntField
    {
        public const int TAG = 1936;

        public TradeCollateralization()
            : base(Tags.TradeCollateralization) { }
        public TradeCollateralization(int val)
            : base(Tags.TradeCollateralization, val) { }


        // Field Enumerations
        public const int UNCOLLATERALIZED = 0;
        public const int PARTIALLY_COLLATERALIZED = 1;
        public const int ONE_WAY_COLLATERALLIZATION = 2;
        public const int FULLY_COLLATERALIZED = 3;
        public const int NET_EXPOSURE = 4;
    }


    /// <summary>
    /// TradeContinuation Field
    /// </summary>/
    public sealed class TradeContinuation : IntField
    {
        public const int TAG = 1937;

        public TradeContinuation()
            : base(Tags.TradeContinuation) { }
        public TradeContinuation(int val)
            : base(Tags.TradeContinuation, val) { }


        // Field Enumerations
        public const int NOVATION = 0;
        public const int PARTIAL_NOVATION = 1;
        public const int TRADE_UNWIND = 2;
        public const int PARTIAL_TRADE_UNWIND = 3;
        public const int EXERCISE = 4;
        public const int COMPRESSION_NETTING = 5;
        public const int FULL_NETTING = 6;
        public const int PARTIAL_NETTING = 7;
        public const int AMENDMENT = 8;
        public const int INCREASE = 9;
        public const int CREDIT_EVENT = 10;
        public const int STRATEGIC_RESTRUCTURING = 11;
        public const int SUCCESSION_EVENT_REORGANIZATION = 12;
        public const int SUCCESSION_EVENT_RENAMING = 13;
        public const int PORTING = 14;
        public const int WITHDRAWAL = 15;
        public const int VOID = 16;
        public const int OTHER_PRICE_FORMING_CONTINUATION_DATA = 99;
        public const int ACCOUNT_TRANSFER = 17;
        public const int GIVE_UP = 18;
        public const int TAKEUP = 19;
        public const int AVERAGE_PRICING = 20;
        public const int REVERSAL = 21;
        public const int ALLOCATION_TRADE_POSTING = 22;
        public const int CASCADE = 23;
        public const int DELIVERY = 24;
        public const int OPTION_ASSIGNMENT = 25;
        public const int EXPIRATION = 26;
        public const int MATURITY = 27;
        public const int EQUAL_POSITION_ADJUSTMENT = 28;
        public const int UNEQUAL_POSITION_ADJUSTMENT = 29;
        public const int CORRECTION = 30;
        public const int EARLY_TERMINATION = 31;
        public const int RERATE = 32;
    }


    /// <summary>
    /// AssetClass Field
    /// </summary>/
    public sealed class AssetClass : IntField
    {
        public const int TAG = 1938;

        public AssetClass()
            : base(Tags.AssetClass) { }
        public AssetClass(int val)
            : base(Tags.AssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// AssetSubClass Field
    /// </summary>/
    public sealed class AssetSubClass : IntField
    {
        public const int TAG = 1939;

        public AssetSubClass()
            : base(Tags.AssetSubClass) { }
        public AssetSubClass(int val)
            : base(Tags.AssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// AssetType Field
    /// </summary>/
    public sealed class AssetType : StringField
    {
        public const int TAG = 1940;

        public AssetType()
            : base(Tags.AssetType) { }
        public AssetType(string val)
            : base(Tags.AssetType, val) { }

    }


    /// <summary>
    /// SwapClass Field
    /// </summary>/
    public sealed class SwapClass : StringField
    {
        public const int TAG = 1941;

        public SwapClass()
            : base(Tags.SwapClass) { }
        public SwapClass(string val)
            : base(Tags.SwapClass, val) { }


        // Field Enumerations
        public const string BASIS_SWAP = "BS";
        public const string INDEX_SWAP = "IX";
        public const string BROAD_BASED_SECURITY_SWAP = "BB";
        public const string BASKET_SWAP = "SK";
    }


    /// <summary>
    /// NthToDefault Field
    /// </summary>/
    public sealed class NthToDefault : IntField
    {
        public const int TAG = 1942;

        public NthToDefault()
            : base(Tags.NthToDefault) { }
        public NthToDefault(int val)
            : base(Tags.NthToDefault, val) { }

    }


    /// <summary>
    /// MthToDefault Field
    /// </summary>/
    public sealed class MthToDefault : IntField
    {
        public const int TAG = 1943;

        public MthToDefault()
            : base(Tags.MthToDefault) { }
        public MthToDefault(int val)
            : base(Tags.MthToDefault, val) { }

    }


    /// <summary>
    /// SettledEntityMatrixSource Field
    /// </summary>/
    public sealed class SettledEntityMatrixSource : StringField
    {
        public const int TAG = 1944;

        public SettledEntityMatrixSource()
            : base(Tags.SettledEntityMatrixSource) { }
        public SettledEntityMatrixSource(string val)
            : base(Tags.SettledEntityMatrixSource, val) { }

    }


    /// <summary>
    /// SettledEntityMatrixPublicationDate Field
    /// </summary>/
    public sealed class SettledEntityMatrixPublicationDate : StringField
    {
        public const int TAG = 1945;

        public SettledEntityMatrixPublicationDate()
            : base(Tags.SettledEntityMatrixPublicationDate) { }
        public SettledEntityMatrixPublicationDate(string val)
            : base(Tags.SettledEntityMatrixPublicationDate, val) { }

    }


    /// <summary>
    /// CouponType Field
    /// </summary>/
    public sealed class CouponType : IntField
    {
        public const int TAG = 1946;

        public CouponType()
            : base(Tags.CouponType) { }
        public CouponType(int val)
            : base(Tags.CouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// TotalIssuedAmount Field
    /// </summary>/
    public sealed class TotalIssuedAmount : DecimalField
    {
        public const int TAG = 1947;

        public TotalIssuedAmount()
            : base(Tags.TotalIssuedAmount) { }
        public TotalIssuedAmount(Decimal val)
            : base(Tags.TotalIssuedAmount, val) { }

    }


    /// <summary>
    /// CouponFrequencyPeriod Field
    /// </summary>/
    public sealed class CouponFrequencyPeriod : IntField
    {
        public const int TAG = 1948;

        public CouponFrequencyPeriod()
            : base(Tags.CouponFrequencyPeriod) { }
        public CouponFrequencyPeriod(int val)
            : base(Tags.CouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// CouponFrequencyUnit Field
    /// </summary>/
    public sealed class CouponFrequencyUnit : StringField
    {
        public const int TAG = 1949;

        public CouponFrequencyUnit()
            : base(Tags.CouponFrequencyUnit) { }
        public CouponFrequencyUnit(string val)
            : base(Tags.CouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// CouponDayCount Field
    /// </summary>/
    public sealed class CouponDayCount : IntField
    {
        public const int TAG = 1950;

        public CouponDayCount()
            : base(Tags.CouponDayCount) { }
        public CouponDayCount(int val)
            : base(Tags.CouponDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// ConvertibleBondEquityID Field
    /// </summary>/
    public sealed class ConvertibleBondEquityID : StringField
    {
        public const int TAG = 1951;

        public ConvertibleBondEquityID()
            : base(Tags.ConvertibleBondEquityID) { }
        public ConvertibleBondEquityID(string val)
            : base(Tags.ConvertibleBondEquityID, val) { }

    }


    /// <summary>
    /// ConvertibleBondEquityIDSource Field
    /// </summary>/
    public sealed class ConvertibleBondEquityIDSource : StringField
    {
        public const int TAG = 1952;

        public ConvertibleBondEquityIDSource()
            : base(Tags.ConvertibleBondEquityIDSource) { }
        public ConvertibleBondEquityIDSource(string val)
            : base(Tags.ConvertibleBondEquityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// ContractPriceRefMonth Field
    /// </summary>/
    public sealed class ContractPriceRefMonth : StringField
    {
        public const int TAG = 1953;

        public ContractPriceRefMonth()
            : base(Tags.ContractPriceRefMonth) { }
        public ContractPriceRefMonth(string val)
            : base(Tags.ContractPriceRefMonth, val) { }

    }


    /// <summary>
    /// LienSeniority Field
    /// </summary>/
    public sealed class LienSeniority : IntField
    {
        public const int TAG = 1954;

        public LienSeniority()
            : base(Tags.LienSeniority) { }
        public LienSeniority(int val)
            : base(Tags.LienSeniority, val) { }


        // Field Enumerations
        public const int UNKNOWN = 0;
        public const int FIRST_LIEN = 1;
        public const int SECOND_LIEN = 2;
        public const int THIRD_LIEN = 3;
    }


    /// <summary>
    /// LoanFacility Field
    /// </summary>/
    public sealed class LoanFacility : IntField
    {
        public const int TAG = 1955;

        public LoanFacility()
            : base(Tags.LoanFacility) { }
        public LoanFacility(int val)
            : base(Tags.LoanFacility, val) { }


        // Field Enumerations
        public const int BRIDGE_LOAN = 0;
        public const int LETTER_OF_CREDIT = 1;
        public const int REVOLVING_LOAN = 2;
        public const int SWINGLINE_FUNDING = 3;
        public const int TERM_LOAN = 4;
        public const int TRADE_CLAIM = 5;
    }


    /// <summary>
    /// ReferenceEntityType Field
    /// </summary>/
    public sealed class ReferenceEntityType : IntField
    {
        public const int TAG = 1956;

        public ReferenceEntityType()
            : base(Tags.ReferenceEntityType) { }
        public ReferenceEntityType(int val)
            : base(Tags.ReferenceEntityType, val) { }


        // Field Enumerations
        public const int ASIAN = 1;
        public const int AUSTRALIAN_AND_NEW_ZEALAND = 2;
        public const int EUROPEAN_EMERGING_MARKETS = 3;
        public const int JAPANESE = 4;
        public const int NORTH_AMERICAN_HIGH_YIELD = 5;
        public const int NORTH_AMERICAN_INSURANCE = 6;
        public const int NORTH_AMERICAN_INVESTMENT_GRADE = 7;
        public const int SINGAPOREAN = 8;
        public const int WESTERN_EUROPEAN = 9;
        public const int WESTERN_EUROPEAN_INSURANCE = 10;
    }


    /// <summary>
    /// IndexSeries Field
    /// </summary>/
    public sealed class IndexSeries : IntField
    {
        public const int TAG = 1957;

        public IndexSeries()
            : base(Tags.IndexSeries) { }
        public IndexSeries(int val)
            : base(Tags.IndexSeries, val) { }

    }


    /// <summary>
    /// IndexAnnexVersion Field
    /// </summary>/
    public sealed class IndexAnnexVersion : IntField
    {
        public const int TAG = 1958;

        public IndexAnnexVersion()
            : base(Tags.IndexAnnexVersion) { }
        public IndexAnnexVersion(int val)
            : base(Tags.IndexAnnexVersion, val) { }

    }


    /// <summary>
    /// IndexAnnexDate Field
    /// </summary>/
    public sealed class IndexAnnexDate : StringField
    {
        public const int TAG = 1959;

        public IndexAnnexDate()
            : base(Tags.IndexAnnexDate) { }
        public IndexAnnexDate(string val)
            : base(Tags.IndexAnnexDate, val) { }

    }


    /// <summary>
    /// IndexAnnexSource Field
    /// </summary>/
    public sealed class IndexAnnexSource : StringField
    {
        public const int TAG = 1960;

        public IndexAnnexSource()
            : base(Tags.IndexAnnexSource) { }
        public IndexAnnexSource(string val)
            : base(Tags.IndexAnnexSource, val) { }

    }


    /// <summary>
    /// AgreementVersion Field
    /// </summary>/
    public sealed class AgreementVersion : StringField
    {
        public const int TAG = 1961;

        public AgreementVersion()
            : base(Tags.AgreementVersion) { }
        public AgreementVersion(string val)
            : base(Tags.AgreementVersion, val) { }

    }


    /// <summary>
    /// MasterConfirmationDesc Field
    /// </summary>/
    public sealed class MasterConfirmationDesc : StringField
    {
        public const int TAG = 1962;

        public MasterConfirmationDesc()
            : base(Tags.MasterConfirmationDesc) { }
        public MasterConfirmationDesc(string val)
            : base(Tags.MasterConfirmationDesc, val) { }

    }


    /// <summary>
    /// MasterConfirmationDate Field
    /// </summary>/
    public sealed class MasterConfirmationDate : StringField
    {
        public const int TAG = 1963;

        public MasterConfirmationDate()
            : base(Tags.MasterConfirmationDate) { }
        public MasterConfirmationDate(string val)
            : base(Tags.MasterConfirmationDate, val) { }

    }


    /// <summary>
    /// MasterConfirmationAnnexDesc Field
    /// </summary>/
    public sealed class MasterConfirmationAnnexDesc : StringField
    {
        public const int TAG = 1964;

        public MasterConfirmationAnnexDesc()
            : base(Tags.MasterConfirmationAnnexDesc) { }
        public MasterConfirmationAnnexDesc(string val)
            : base(Tags.MasterConfirmationAnnexDesc, val) { }

    }


    /// <summary>
    /// MasterConfirmationAnnexDate Field
    /// </summary>/
    public sealed class MasterConfirmationAnnexDate : StringField
    {
        public const int TAG = 1965;

        public MasterConfirmationAnnexDate()
            : base(Tags.MasterConfirmationAnnexDate) { }
        public MasterConfirmationAnnexDate(string val)
            : base(Tags.MasterConfirmationAnnexDate, val) { }

    }


    /// <summary>
    /// BrokerConfirmationDesc Field
    /// </summary>/
    public sealed class BrokerConfirmationDesc : StringField
    {
        public const int TAG = 1966;

        public BrokerConfirmationDesc()
            : base(Tags.BrokerConfirmationDesc) { }
        public BrokerConfirmationDesc(string val)
            : base(Tags.BrokerConfirmationDesc, val) { }

    }


    /// <summary>
    /// CreditSupportAgreementDesc Field
    /// </summary>/
    public sealed class CreditSupportAgreementDesc : StringField
    {
        public const int TAG = 1967;

        public CreditSupportAgreementDesc()
            : base(Tags.CreditSupportAgreementDesc) { }
        public CreditSupportAgreementDesc(string val)
            : base(Tags.CreditSupportAgreementDesc, val) { }

    }


    /// <summary>
    /// CreditSupportAgreementDate Field
    /// </summary>/
    public sealed class CreditSupportAgreementDate : StringField
    {
        public const int TAG = 1968;

        public CreditSupportAgreementDate()
            : base(Tags.CreditSupportAgreementDate) { }
        public CreditSupportAgreementDate(string val)
            : base(Tags.CreditSupportAgreementDate, val) { }

    }


    /// <summary>
    /// CreditSupportAgreementID Field
    /// </summary>/
    public sealed class CreditSupportAgreementID : StringField
    {
        public const int TAG = 1969;

        public CreditSupportAgreementID()
            : base(Tags.CreditSupportAgreementID) { }
        public CreditSupportAgreementID(string val)
            : base(Tags.CreditSupportAgreementID, val) { }

    }


    /// <summary>
    /// GoverningLaw Field
    /// </summary>/
    public sealed class GoverningLaw : StringField
    {
        public const int TAG = 1970;

        public GoverningLaw()
            : base(Tags.GoverningLaw) { }
        public GoverningLaw(string val)
            : base(Tags.GoverningLaw, val) { }

    }


    /// <summary>
    /// NoSideRegulatoryTradeIDs Field
    /// </summary>/
    public sealed class NoSideRegulatoryTradeIDs : IntField
    {
        public const int TAG = 1971;

        public NoSideRegulatoryTradeIDs()
            : base(Tags.NoSideRegulatoryTradeIDs) { }
        public NoSideRegulatoryTradeIDs(int val)
            : base(Tags.NoSideRegulatoryTradeIDs, val) { }

    }


    /// <summary>
    /// SideRegulatoryTradeID Field
    /// </summary>/
    public sealed class SideRegulatoryTradeID : StringField
    {
        public const int TAG = 1972;

        public SideRegulatoryTradeID()
            : base(Tags.SideRegulatoryTradeID) { }
        public SideRegulatoryTradeID(string val)
            : base(Tags.SideRegulatoryTradeID, val) { }

    }


    /// <summary>
    /// SideRegulatoryTradeIDSource Field
    /// </summary>/
    public sealed class SideRegulatoryTradeIDSource : StringField
    {
        public const int TAG = 1973;

        public SideRegulatoryTradeIDSource()
            : base(Tags.SideRegulatoryTradeIDSource) { }
        public SideRegulatoryTradeIDSource(string val)
            : base(Tags.SideRegulatoryTradeIDSource, val) { }

    }


    /// <summary>
    /// SideRegulatoryTradeIDEvent Field
    /// </summary>/
    public sealed class SideRegulatoryTradeIDEvent : IntField
    {
        public const int TAG = 1974;

        public SideRegulatoryTradeIDEvent()
            : base(Tags.SideRegulatoryTradeIDEvent) { }
        public SideRegulatoryTradeIDEvent(int val)
            : base(Tags.SideRegulatoryTradeIDEvent, val) { }


        // Field Enumerations
        public const int INITIAL_BLOCK_TRADE = 0;
        public const int ALLOCATION = 1;
        public const int CLEARING = 2;
        public const int COMPRESSION = 3;
        public const int NOVATION = 4;
        public const int TERMINATION = 5;
        public const int POST_TRADE_VALUATION = 6;
    }


    /// <summary>
    /// SideRegulatoryTradeIDType Field
    /// </summary>/
    public sealed class SideRegulatoryTradeIDType : IntField
    {
        public const int TAG = 1975;

        public SideRegulatoryTradeIDType()
            : base(Tags.SideRegulatoryTradeIDType) { }
        public SideRegulatoryTradeIDType(int val)
            : base(Tags.SideRegulatoryTradeIDType, val) { }


        // Field Enumerations
        public const int CURRENT = 0;
        public const int PREVIOUS = 1;
        public const int BLOCK = 2;
        public const int RELATED = 3;
        public const int CLEARED_BLOCK_TRADE = 4;
        public const int TRADING_VENUE_TRANSACTION_IDENTIFIER = 5;
    }


    /// <summary>
    /// NoSecondaryAssetClasses Field
    /// </summary>/
    public sealed class NoSecondaryAssetClasses : IntField
    {
        public const int TAG = 1976;

        public NoSecondaryAssetClasses()
            : base(Tags.NoSecondaryAssetClasses) { }
        public NoSecondaryAssetClasses(int val)
            : base(Tags.NoSecondaryAssetClasses, val) { }

    }


    /// <summary>
    /// SecondaryAssetClass Field
    /// </summary>/
    public sealed class SecondaryAssetClass : IntField
    {
        public const int TAG = 1977;

        public SecondaryAssetClass()
            : base(Tags.SecondaryAssetClass) { }
        public SecondaryAssetClass(int val)
            : base(Tags.SecondaryAssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// SecondaryAssetSubClass Field
    /// </summary>/
    public sealed class SecondaryAssetSubClass : IntField
    {
        public const int TAG = 1978;

        public SecondaryAssetSubClass()
            : base(Tags.SecondaryAssetSubClass) { }
        public SecondaryAssetSubClass(int val)
            : base(Tags.SecondaryAssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// SecondaryAssetType Field
    /// </summary>/
    public sealed class SecondaryAssetType : StringField
    {
        public const int TAG = 1979;

        public SecondaryAssetType()
            : base(Tags.SecondaryAssetType) { }
        public SecondaryAssetType(string val)
            : base(Tags.SecondaryAssetType, val) { }

    }


    /// <summary>
    /// BlockTrdAllocIndicator Field
    /// </summary>/
    public sealed class BlockTrdAllocIndicator : IntField
    {
        public const int TAG = 1980;

        public BlockTrdAllocIndicator()
            : base(Tags.BlockTrdAllocIndicator) { }
        public BlockTrdAllocIndicator(int val)
            : base(Tags.BlockTrdAllocIndicator, val) { }


        // Field Enumerations
        public const int BLOCK_TO_BE_ALLOCATED = 0;
        public const int BLOCK_NOT_TO_BE_ALLOCATED = 1;
        public const int ALLOCATED_TRADE = 2;
    }


    /// <summary>
    /// NoUnderlyingEvents Field
    /// </summary>/
    public sealed class NoUnderlyingEvents : IntField
    {
        public const int TAG = 1981;

        public NoUnderlyingEvents()
            : base(Tags.NoUnderlyingEvents) { }
        public NoUnderlyingEvents(int val)
            : base(Tags.NoUnderlyingEvents, val) { }

    }


    /// <summary>
    /// UnderlyingEventType Field
    /// </summary>/
    public sealed class UnderlyingEventType : IntField
    {
        public const int TAG = 1982;

        public UnderlyingEventType()
            : base(Tags.UnderlyingEventType) { }
        public UnderlyingEventType(int val)
            : base(Tags.UnderlyingEventType, val) { }


        // Field Enumerations
        public const int PUT = 1;
        public const int CALL = 2;
        public const int TENDER = 3;
        public const int SINKING_FUND_CALL = 4;
        public const int ACTIVATION = 5;
        public const int INACTIVATION = 6;
        public const int LAST_ELIGIBLE_TRADE_DATE = 7;
        public const int SWAP_START_DATE = 8;
        public const int SWAP_END_DATE = 9;
        public const int SWAP_ROLL_DATE = 10;
        public const int SWAP_NEXT_START_DATE = 11;
        public const int SWAP_NEXT_ROLL_DATE = 12;
        public const int FIRST_DELIVERY_DATE = 13;
        public const int LAST_DELIVERY_DATE = 14;
        public const int INITIAL_INVENTORY_DUE_DATE = 15;
        public const int FINAL_INVENTORY_DUE_DATE = 16;
        public const int FIRST_INTENT_DATE = 17;
        public const int LAST_INTENT_DATE = 18;
        public const int POSITION_REMOVAL_DATE = 19;
        public const int OTHER = 99;
        public const int MINIMUM_NOTICE = 20;
        public const int DELIVERY_START_TIME = 21;
        public const int DELIVERY_END_TIME = 22;
        public const int FIRST_NOTICE_DATE = 23;
        public const int LAST_NOTICE_DATE = 24;
        public const int FIRST_EXERCISE_DATE = 25;
        public const int REDEMPTION_DATE = 26;
        public const int TRADE_CONTINUATION_EFFECTIVE_DATE = 27;
    }


    /// <summary>
    /// UnderlyingEventDate Field
    /// </summary>/
    public sealed class UnderlyingEventDate : StringField
    {
        public const int TAG = 1983;

        public UnderlyingEventDate()
            : base(Tags.UnderlyingEventDate) { }
        public UnderlyingEventDate(string val)
            : base(Tags.UnderlyingEventDate, val) { }

    }


    /// <summary>
    /// UnderlyingEventTime Field
    /// </summary>/
    public sealed class UnderlyingEventTime : DateTimeField
    {
        public const int TAG = 1984;

        public UnderlyingEventTime()
            : base(Tags.UnderlyingEventTime) { }
        public UnderlyingEventTime(DateTime val)
            : base(Tags.UnderlyingEventTime, val) { }
        public UnderlyingEventTime(DateTime val, bool showMilliseconds)
            : base(Tags.UnderlyingEventTime, val, showMilliseconds) { }
        public UnderlyingEventTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.UnderlyingEventTime, val, precision) { }

    }


    /// <summary>
    /// UnderlyingEventTimeUnit Field
    /// </summary>/
    public sealed class UnderlyingEventTimeUnit : StringField
    {
        public const int TAG = 1985;

        public UnderlyingEventTimeUnit()
            : base(Tags.UnderlyingEventTimeUnit) { }
        public UnderlyingEventTimeUnit(string val)
            : base(Tags.UnderlyingEventTimeUnit, val) { }

    }


    /// <summary>
    /// UnderlyingEventTimePeriod Field
    /// </summary>/
    public sealed class UnderlyingEventTimePeriod : IntField
    {
        public const int TAG = 1986;

        public UnderlyingEventTimePeriod()
            : base(Tags.UnderlyingEventTimePeriod) { }
        public UnderlyingEventTimePeriod(int val)
            : base(Tags.UnderlyingEventTimePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingEventPx Field
    /// </summary>/
    public sealed class UnderlyingEventPx : DecimalField
    {
        public const int TAG = 1987;

        public UnderlyingEventPx()
            : base(Tags.UnderlyingEventPx) { }
        public UnderlyingEventPx(Decimal val)
            : base(Tags.UnderlyingEventPx, val) { }

    }


    /// <summary>
    /// UnderlyingConstituentWeight Field
    /// </summary>/
    public sealed class UnderlyingConstituentWeight : DecimalField
    {
        public const int TAG = 1988;

        public UnderlyingConstituentWeight()
            : base(Tags.UnderlyingConstituentWeight) { }
        public UnderlyingConstituentWeight(Decimal val)
            : base(Tags.UnderlyingConstituentWeight, val) { }

    }


    /// <summary>
    /// UnderlyingCouponType Field
    /// </summary>/
    public sealed class UnderlyingCouponType : IntField
    {
        public const int TAG = 1989;

        public UnderlyingCouponType()
            : base(Tags.UnderlyingCouponType) { }
        public UnderlyingCouponType(int val)
            : base(Tags.UnderlyingCouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// UnderlyingTotalIssuedAmount Field
    /// </summary>/
    public sealed class UnderlyingTotalIssuedAmount : DecimalField
    {
        public const int TAG = 1990;

        public UnderlyingTotalIssuedAmount()
            : base(Tags.UnderlyingTotalIssuedAmount) { }
        public UnderlyingTotalIssuedAmount(Decimal val)
            : base(Tags.UnderlyingTotalIssuedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCouponFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingCouponFrequencyPeriod : IntField
    {
        public const int TAG = 1991;

        public UnderlyingCouponFrequencyPeriod()
            : base(Tags.UnderlyingCouponFrequencyPeriod) { }
        public UnderlyingCouponFrequencyPeriod(int val)
            : base(Tags.UnderlyingCouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingCouponFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingCouponFrequencyUnit : StringField
    {
        public const int TAG = 1992;

        public UnderlyingCouponFrequencyUnit()
            : base(Tags.UnderlyingCouponFrequencyUnit) { }
        public UnderlyingCouponFrequencyUnit(string val)
            : base(Tags.UnderlyingCouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingCouponDayCount Field
    /// </summary>/
    public sealed class UnderlyingCouponDayCount : IntField
    {
        public const int TAG = 1993;

        public UnderlyingCouponDayCount()
            : base(Tags.UnderlyingCouponDayCount) { }
        public UnderlyingCouponDayCount(int val)
            : base(Tags.UnderlyingCouponDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingObligationID Field
    /// </summary>/
    public sealed class UnderlyingObligationID : StringField
    {
        public const int TAG = 1994;

        public UnderlyingObligationID()
            : base(Tags.UnderlyingObligationID) { }
        public UnderlyingObligationID(string val)
            : base(Tags.UnderlyingObligationID, val) { }

    }


    /// <summary>
    /// UnderlyingObligationIDSource Field
    /// </summary>/
    public sealed class UnderlyingObligationIDSource : StringField
    {
        public const int TAG = 1995;

        public UnderlyingObligationIDSource()
            : base(Tags.UnderlyingObligationIDSource) { }
        public UnderlyingObligationIDSource(string val)
            : base(Tags.UnderlyingObligationIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingEquityID Field
    /// </summary>/
    public sealed class UnderlyingEquityID : StringField
    {
        public const int TAG = 1996;

        public UnderlyingEquityID()
            : base(Tags.UnderlyingEquityID) { }
        public UnderlyingEquityID(string val)
            : base(Tags.UnderlyingEquityID, val) { }

    }


    /// <summary>
    /// UnderlyingEquityIDSource Field
    /// </summary>/
    public sealed class UnderlyingEquityIDSource : StringField
    {
        public const int TAG = 1997;

        public UnderlyingEquityIDSource()
            : base(Tags.UnderlyingEquityIDSource) { }
        public UnderlyingEquityIDSource(string val)
            : base(Tags.UnderlyingEquityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingLienSeniority Field
    /// </summary>/
    public sealed class UnderlyingLienSeniority : IntField
    {
        public const int TAG = 1998;

        public UnderlyingLienSeniority()
            : base(Tags.UnderlyingLienSeniority) { }
        public UnderlyingLienSeniority(int val)
            : base(Tags.UnderlyingLienSeniority, val) { }


        // Field Enumerations
        public const int UNKNOWN = 0;
        public const int FIRST_LIEN = 1;
        public const int SECOND_LIEN = 2;
        public const int THIRD_LIEN = 3;
    }


    /// <summary>
    /// UnderlyingLoanFacility Field
    /// </summary>/
    public sealed class UnderlyingLoanFacility : IntField
    {
        public const int TAG = 1999;

        public UnderlyingLoanFacility()
            : base(Tags.UnderlyingLoanFacility) { }
        public UnderlyingLoanFacility(int val)
            : base(Tags.UnderlyingLoanFacility, val) { }


        // Field Enumerations
        public const int BRIDGE_LOAN = 0;
        public const int LETTER_OF_CREDIT = 1;
        public const int REVOLVING_LOAN = 2;
        public const int SWINGLINE_FUNDING = 3;
        public const int TERM_LOAN = 4;
        public const int TRADE_CLAIM = 5;
    }


    /// <summary>
    /// UnderlyingReferenceEntityType Field
    /// </summary>/
    public sealed class UnderlyingReferenceEntityType : IntField
    {
        public const int TAG = 2000;

        public UnderlyingReferenceEntityType()
            : base(Tags.UnderlyingReferenceEntityType) { }
        public UnderlyingReferenceEntityType(int val)
            : base(Tags.UnderlyingReferenceEntityType, val) { }


        // Field Enumerations
        public const int ASIAN = 1;
        public const int AUSTRALIAN_AND_NEW_ZEALAND = 2;
        public const int EUROPEAN_EMERGING_MARKETS = 3;
        public const int JAPANESE = 4;
        public const int NORTH_AMERICAN_HIGH_YIELD = 5;
        public const int NORTH_AMERICAN_INSURANCE = 6;
        public const int NORTH_AMERICAN_INVESTMENT_GRADE = 7;
        public const int SINGAPOREAN = 8;
        public const int WESTERN_EUROPEAN = 9;
        public const int WESTERN_EUROPEAN_INSURANCE = 10;
    }


    /// <summary>
    /// StrikeIndexSpread Field
    /// </summary>/
    public sealed class StrikeIndexSpread : DecimalField
    {
        public const int TAG = 2001;

        public StrikeIndexSpread()
            : base(Tags.StrikeIndexSpread) { }
        public StrikeIndexSpread(Decimal val)
            : base(Tags.StrikeIndexSpread, val) { }

    }


    /// <summary>
    /// ValuationSource Field
    /// </summary>/
    public sealed class ValuationSource : StringField
    {
        public const int TAG = 2002;

        public ValuationSource()
            : base(Tags.ValuationSource) { }
        public ValuationSource(string val)
            : base(Tags.ValuationSource, val) { }

    }


    /// <summary>
    /// UnderlyingIndexSeries Field
    /// </summary>/
    public sealed class UnderlyingIndexSeries : IntField
    {
        public const int TAG = 2003;

        public UnderlyingIndexSeries()
            : base(Tags.UnderlyingIndexSeries) { }
        public UnderlyingIndexSeries(int val)
            : base(Tags.UnderlyingIndexSeries, val) { }

    }


    /// <summary>
    /// UnderlyingIndexAnnexVersion Field
    /// </summary>/
    public sealed class UnderlyingIndexAnnexVersion : IntField
    {
        public const int TAG = 2004;

        public UnderlyingIndexAnnexVersion()
            : base(Tags.UnderlyingIndexAnnexVersion) { }
        public UnderlyingIndexAnnexVersion(int val)
            : base(Tags.UnderlyingIndexAnnexVersion, val) { }

    }


    /// <summary>
    /// UnderlyingIndexAnnexDate Field
    /// </summary>/
    public sealed class UnderlyingIndexAnnexDate : StringField
    {
        public const int TAG = 2005;

        public UnderlyingIndexAnnexDate()
            : base(Tags.UnderlyingIndexAnnexDate) { }
        public UnderlyingIndexAnnexDate(string val)
            : base(Tags.UnderlyingIndexAnnexDate, val) { }

    }


    /// <summary>
    /// UnderlyingIndexAnnexSource Field
    /// </summary>/
    public sealed class UnderlyingIndexAnnexSource : StringField
    {
        public const int TAG = 2006;

        public UnderlyingIndexAnnexSource()
            : base(Tags.UnderlyingIndexAnnexSource) { }
        public UnderlyingIndexAnnexSource(string val)
            : base(Tags.UnderlyingIndexAnnexSource, val) { }

    }


    /// <summary>
    /// UnderlyingProductComplex Field
    /// </summary>/
    public sealed class UnderlyingProductComplex : StringField
    {
        public const int TAG = 2007;

        public UnderlyingProductComplex()
            : base(Tags.UnderlyingProductComplex) { }
        public UnderlyingProductComplex(string val)
            : base(Tags.UnderlyingProductComplex, val) { }

    }


    /// <summary>
    /// UnderlyingSecurityGroup Field
    /// </summary>/
    public sealed class UnderlyingSecurityGroup : StringField
    {
        public const int TAG = 2008;

        public UnderlyingSecurityGroup()
            : base(Tags.UnderlyingSecurityGroup) { }
        public UnderlyingSecurityGroup(string val)
            : base(Tags.UnderlyingSecurityGroup, val) { }

    }


    /// <summary>
    /// UnderlyingSettleOnOpenFlag Field
    /// </summary>/
    public sealed class UnderlyingSettleOnOpenFlag : StringField
    {
        public const int TAG = 2009;

        public UnderlyingSettleOnOpenFlag()
            : base(Tags.UnderlyingSettleOnOpenFlag) { }
        public UnderlyingSettleOnOpenFlag(string val)
            : base(Tags.UnderlyingSettleOnOpenFlag, val) { }

    }


    /// <summary>
    /// UnderlyingAssignmentMethod Field
    /// </summary>/
    public sealed class UnderlyingAssignmentMethod : CharField
    {
        public const int TAG = 2010;

        public UnderlyingAssignmentMethod()
            : base(Tags.UnderlyingAssignmentMethod) { }
        public UnderlyingAssignmentMethod(char val)
            : base(Tags.UnderlyingAssignmentMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = 'P';
        public const char RANDOM = 'R';
    }


    /// <summary>
    /// UnderlyingSecurityStatus Field
    /// </summary>/
    public sealed class UnderlyingSecurityStatus : StringField
    {
        public const int TAG = 2011;

        public UnderlyingSecurityStatus()
            : base(Tags.UnderlyingSecurityStatus) { }
        public UnderlyingSecurityStatus(string val)
            : base(Tags.UnderlyingSecurityStatus, val) { }


        // Field Enumerations
        public const string ACTIVE = "1";
        public const string INACTIVE = "2";
        public const string ACTIVE_CLOSING_ORDERS_ONLY = "3";
        public const string EXPIRED = "4";
        public const string DELISTED = "5";
        public const string KNOCKED_OUT = "6";
        public const string KNOCK_OUT_REVOKED = "7";
        public const string PENDING_EXPIRY = "8";
        public const string SUSPENDED = "9";
        public const string PUBLISHED = "10";
        public const string PENDING_DELETION = "11";
    }


    /// <summary>
    /// UnderlyingObligationType Field
    /// </summary>/
    public sealed class UnderlyingObligationType : StringField
    {
        public const int TAG = 2012;

        public UnderlyingObligationType()
            : base(Tags.UnderlyingObligationType) { }
        public UnderlyingObligationType(string val)
            : base(Tags.UnderlyingObligationType, val) { }


        // Field Enumerations
        public const string BOND = "0";
        public const string CONVERTIBLE_BOND = "1";
        public const string MORTGAGE = "2";
        public const string LOAN = "3";
    }


    /// <summary>
    /// UnderlyingAssetClass Field
    /// </summary>/
    public sealed class UnderlyingAssetClass : IntField
    {
        public const int TAG = 2013;

        public UnderlyingAssetClass()
            : base(Tags.UnderlyingAssetClass) { }
        public UnderlyingAssetClass(int val)
            : base(Tags.UnderlyingAssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// UnderlyingAssetSubClass Field
    /// </summary>/
    public sealed class UnderlyingAssetSubClass : IntField
    {
        public const int TAG = 2014;

        public UnderlyingAssetSubClass()
            : base(Tags.UnderlyingAssetSubClass) { }
        public UnderlyingAssetSubClass(int val)
            : base(Tags.UnderlyingAssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// UnderlyingAssetType Field
    /// </summary>/
    public sealed class UnderlyingAssetType : StringField
    {
        public const int TAG = 2015;

        public UnderlyingAssetType()
            : base(Tags.UnderlyingAssetType) { }
        public UnderlyingAssetType(string val)
            : base(Tags.UnderlyingAssetType, val) { }

    }


    /// <summary>
    /// UnderlyingSwapClass Field
    /// </summary>/
    public sealed class UnderlyingSwapClass : StringField
    {
        public const int TAG = 2016;

        public UnderlyingSwapClass()
            : base(Tags.UnderlyingSwapClass) { }
        public UnderlyingSwapClass(string val)
            : base(Tags.UnderlyingSwapClass, val) { }


        // Field Enumerations
        public const string BASIS_SWAP = "BS";
        public const string INDEX_SWAP = "IX";
        public const string BROAD_BASED_SECURITY_SWAP = "BB";
        public const string BASKET_SWAP = "SK";
    }


    /// <summary>
    /// UnderlyingNthToDefault Field
    /// </summary>/
    public sealed class UnderlyingNthToDefault : IntField
    {
        public const int TAG = 2017;

        public UnderlyingNthToDefault()
            : base(Tags.UnderlyingNthToDefault) { }
        public UnderlyingNthToDefault(int val)
            : base(Tags.UnderlyingNthToDefault, val) { }

    }


    /// <summary>
    /// UnderlyingMthToDefault Field
    /// </summary>/
    public sealed class UnderlyingMthToDefault : IntField
    {
        public const int TAG = 2018;

        public UnderlyingMthToDefault()
            : base(Tags.UnderlyingMthToDefault) { }
        public UnderlyingMthToDefault(int val)
            : base(Tags.UnderlyingMthToDefault, val) { }

    }


    /// <summary>
    /// UnderlyingSettledEntityMatrixSource Field
    /// </summary>/
    public sealed class UnderlyingSettledEntityMatrixSource : StringField
    {
        public const int TAG = 2019;

        public UnderlyingSettledEntityMatrixSource()
            : base(Tags.UnderlyingSettledEntityMatrixSource) { }
        public UnderlyingSettledEntityMatrixSource(string val)
            : base(Tags.UnderlyingSettledEntityMatrixSource, val) { }

    }


    /// <summary>
    /// UnderlyingSettledEntityMatrixPublicationDate Field
    /// </summary>/
    public sealed class UnderlyingSettledEntityMatrixPublicationDate : StringField
    {
        public const int TAG = 2020;

        public UnderlyingSettledEntityMatrixPublicationDate()
            : base(Tags.UnderlyingSettledEntityMatrixPublicationDate) { }
        public UnderlyingSettledEntityMatrixPublicationDate(string val)
            : base(Tags.UnderlyingSettledEntityMatrixPublicationDate, val) { }

    }


    /// <summary>
    /// UnderlyingStrikeMultiplier Field
    /// </summary>/
    public sealed class UnderlyingStrikeMultiplier : DecimalField
    {
        public const int TAG = 2021;

        public UnderlyingStrikeMultiplier()
            : base(Tags.UnderlyingStrikeMultiplier) { }
        public UnderlyingStrikeMultiplier(Decimal val)
            : base(Tags.UnderlyingStrikeMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingStrikeValue Field
    /// </summary>/
    public sealed class UnderlyingStrikeValue : DecimalField
    {
        public const int TAG = 2022;

        public UnderlyingStrikeValue()
            : base(Tags.UnderlyingStrikeValue) { }
        public UnderlyingStrikeValue(Decimal val)
            : base(Tags.UnderlyingStrikeValue, val) { }

    }


    /// <summary>
    /// UnderlyingStrikePriceDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingStrikePriceDeterminationMethod : IntField
    {
        public const int TAG = 2023;

        public UnderlyingStrikePriceDeterminationMethod()
            : base(Tags.UnderlyingStrikePriceDeterminationMethod) { }
        public UnderlyingStrikePriceDeterminationMethod(int val)
            : base(Tags.UnderlyingStrikePriceDeterminationMethod, val) { }


        // Field Enumerations
        public const int FIXED_STRIKE = 1;
        public const int STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE = 2;
        public const int STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION = 3;
        public const int STRIKE_SET_TO_OPTIMAL_VALUE = 4;
    }


    /// <summary>
    /// UnderlyingStrikePriceBoundaryMethod Field
    /// </summary>/
    public sealed class UnderlyingStrikePriceBoundaryMethod : IntField
    {
        public const int TAG = 2024;

        public UnderlyingStrikePriceBoundaryMethod()
            : base(Tags.UnderlyingStrikePriceBoundaryMethod) { }
        public UnderlyingStrikePriceBoundaryMethod(int val)
            : base(Tags.UnderlyingStrikePriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY = 1;
        public const int LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 2;
        public const int EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY = 4;
        public const int GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY = 5;
    }


    /// <summary>
    /// UnderlyingStrikePriceBoundaryPrecision Field
    /// </summary>/
    public sealed class UnderlyingStrikePriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 2025;

        public UnderlyingStrikePriceBoundaryPrecision()
            : base(Tags.UnderlyingStrikePriceBoundaryPrecision) { }
        public UnderlyingStrikePriceBoundaryPrecision(Decimal val)
            : base(Tags.UnderlyingStrikePriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// UnderlyingMinPriceIncrement Field
    /// </summary>/
    public sealed class UnderlyingMinPriceIncrement : DecimalField
    {
        public const int TAG = 2026;

        public UnderlyingMinPriceIncrement()
            : base(Tags.UnderlyingMinPriceIncrement) { }
        public UnderlyingMinPriceIncrement(Decimal val)
            : base(Tags.UnderlyingMinPriceIncrement, val) { }

    }


    /// <summary>
    /// UnderlyingMinPriceIncrementAmount Field
    /// </summary>/
    public sealed class UnderlyingMinPriceIncrementAmount : DecimalField
    {
        public const int TAG = 2027;

        public UnderlyingMinPriceIncrementAmount()
            : base(Tags.UnderlyingMinPriceIncrementAmount) { }
        public UnderlyingMinPriceIncrementAmount(Decimal val)
            : base(Tags.UnderlyingMinPriceIncrementAmount, val) { }

    }


    /// <summary>
    /// UnderlyingOptPayoutType Field
    /// </summary>/
    public sealed class UnderlyingOptPayoutType : IntField
    {
        public const int TAG = 2028;

        public UnderlyingOptPayoutType()
            : base(Tags.UnderlyingOptPayoutType) { }
        public UnderlyingOptPayoutType(int val)
            : base(Tags.UnderlyingOptPayoutType, val) { }


        // Field Enumerations
        public const int VANILLA = 1;
        public const int CAPPED = 2;
        public const int DIGITAL = 3;
        public const int ASIAN = 4;
        public const int BARRIER = 5;
        public const int DIGITAL_BARRIER = 6;
        public const int LOOKBACK = 7;
        public const int OTHER_PATH_DEPENDENT = 8;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingOptPayoutAmount Field
    /// </summary>/
    public sealed class UnderlyingOptPayoutAmount : DecimalField
    {
        public const int TAG = 2029;

        public UnderlyingOptPayoutAmount()
            : base(Tags.UnderlyingOptPayoutAmount) { }
        public UnderlyingOptPayoutAmount(Decimal val)
            : base(Tags.UnderlyingOptPayoutAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPriceQuoteMethod Field
    /// </summary>/
    public sealed class UnderlyingPriceQuoteMethod : StringField
    {
        public const int TAG = 2030;

        public UnderlyingPriceQuoteMethod()
            : base(Tags.UnderlyingPriceQuoteMethod) { }
        public UnderlyingPriceQuoteMethod(string val)
            : base(Tags.UnderlyingPriceQuoteMethod, val) { }


        // Field Enumerations
        public const string STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = "STD";
        public const string INDEX = "INX";
        public const string INTEREST_RATE_INDEX = "INT";
        public const string PERCENT_OF_PAR = "PCTPAR";
    }


    /// <summary>
    /// UnderlyingValuationMethod Field
    /// </summary>/
    public sealed class UnderlyingValuationMethod : StringField
    {
        public const int TAG = 2031;

        public UnderlyingValuationMethod()
            : base(Tags.UnderlyingValuationMethod) { }
        public UnderlyingValuationMethod(string val)
            : base(Tags.UnderlyingValuationMethod, val) { }


        // Field Enumerations
        public const string PREMIUM_STYLE = "EQTY";
        public const string FUTURES_STYLE_MARK_TO_MARKET = "FUT";
        public const string FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA";
        public const string CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = "CDS";
        public const string CDS_IN_DELIVERY = "CDSD";
    }


    /// <summary>
    /// UnderlyingListMethod Field
    /// </summary>/
    public sealed class UnderlyingListMethod : IntField
    {
        public const int TAG = 2032;

        public UnderlyingListMethod()
            : base(Tags.UnderlyingListMethod) { }
        public UnderlyingListMethod(int val)
            : base(Tags.UnderlyingListMethod, val) { }


        // Field Enumerations
        public const int PRE_LISTED_ONLY = 0;
        public const int USER_REQUESTED = 1;
    }


    /// <summary>
    /// UnderlyingCapPrice Field
    /// </summary>/
    public sealed class UnderlyingCapPrice : DecimalField
    {
        public const int TAG = 2033;

        public UnderlyingCapPrice()
            : base(Tags.UnderlyingCapPrice) { }
        public UnderlyingCapPrice(Decimal val)
            : base(Tags.UnderlyingCapPrice, val) { }

    }


    /// <summary>
    /// UnderlyingFloorPrice Field
    /// </summary>/
    public sealed class UnderlyingFloorPrice : DecimalField
    {
        public const int TAG = 2034;

        public UnderlyingFloorPrice()
            : base(Tags.UnderlyingFloorPrice) { }
        public UnderlyingFloorPrice(Decimal val)
            : base(Tags.UnderlyingFloorPrice, val) { }

    }


    /// <summary>
    /// UnderlyingFlexibleIndicator Field
    /// </summary>/
    public sealed class UnderlyingFlexibleIndicator : BooleanField
    {
        public const int TAG = 2035;

        public UnderlyingFlexibleIndicator()
            : base(Tags.UnderlyingFlexibleIndicator) { }
        public UnderlyingFlexibleIndicator(Boolean val)
            : base(Tags.UnderlyingFlexibleIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingFlexProductEligibilityIndicator Field
    /// </summary>/
    public sealed class UnderlyingFlexProductEligibilityIndicator : BooleanField
    {
        public const int TAG = 2036;

        public UnderlyingFlexProductEligibilityIndicator()
            : base(Tags.UnderlyingFlexProductEligibilityIndicator) { }
        public UnderlyingFlexProductEligibilityIndicator(Boolean val)
            : base(Tags.UnderlyingFlexProductEligibilityIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPositionLimit Field
    /// </summary>/
    public sealed class UnderlyingPositionLimit : IntField
    {
        public const int TAG = 2037;

        public UnderlyingPositionLimit()
            : base(Tags.UnderlyingPositionLimit) { }
        public UnderlyingPositionLimit(int val)
            : base(Tags.UnderlyingPositionLimit, val) { }

    }


    /// <summary>
    /// UnderlyingNTPositionLimit Field
    /// </summary>/
    public sealed class UnderlyingNTPositionLimit : IntField
    {
        public const int TAG = 2038;

        public UnderlyingNTPositionLimit()
            : base(Tags.UnderlyingNTPositionLimit) { }
        public UnderlyingNTPositionLimit(int val)
            : base(Tags.UnderlyingNTPositionLimit, val) { }

    }


    /// <summary>
    /// UnderlyingPool Field
    /// </summary>/
    public sealed class UnderlyingPool : StringField
    {
        public const int TAG = 2039;

        public UnderlyingPool()
            : base(Tags.UnderlyingPool) { }
        public UnderlyingPool(string val)
            : base(Tags.UnderlyingPool, val) { }

    }


    /// <summary>
    /// UnderlyingContractSettlMonth Field
    /// </summary>/
    public sealed class UnderlyingContractSettlMonth : StringField
    {
        public const int TAG = 2040;

        public UnderlyingContractSettlMonth()
            : base(Tags.UnderlyingContractSettlMonth) { }
        public UnderlyingContractSettlMonth(string val)
            : base(Tags.UnderlyingContractSettlMonth, val) { }

    }


    /// <summary>
    /// UnderlyingDatedDate Field
    /// </summary>/
    public sealed class UnderlyingDatedDate : StringField
    {
        public const int TAG = 2041;

        public UnderlyingDatedDate()
            : base(Tags.UnderlyingDatedDate) { }
        public UnderlyingDatedDate(string val)
            : base(Tags.UnderlyingDatedDate, val) { }

    }


    /// <summary>
    /// UnderlyingInterestAccrualDate Field
    /// </summary>/
    public sealed class UnderlyingInterestAccrualDate : StringField
    {
        public const int TAG = 2042;

        public UnderlyingInterestAccrualDate()
            : base(Tags.UnderlyingInterestAccrualDate) { }
        public UnderlyingInterestAccrualDate(string val)
            : base(Tags.UnderlyingInterestAccrualDate, val) { }

    }


    /// <summary>
    /// UnderlyingShortSaleRestriction Field
    /// </summary>/
    public sealed class UnderlyingShortSaleRestriction : IntField
    {
        public const int TAG = 2043;

        public UnderlyingShortSaleRestriction()
            : base(Tags.UnderlyingShortSaleRestriction) { }
        public UnderlyingShortSaleRestriction(int val)
            : base(Tags.UnderlyingShortSaleRestriction, val) { }


        // Field Enumerations
        public const int NO_RESTRICTIONS = 0;
        public const int SECURITY_IS_NOT_SHORTABLE = 1;
        public const int SECURITY_NOT_SHORTABLE_AT_OR_BELOW_THE_BEST_BID = 2;
        public const int SECURITY_IS_NOT_SHORTABLE_WITHOUT_PRE_BORROW = 3;
    }


    /// <summary>
    /// UnderlyingRefTickTableID Field
    /// </summary>/
    public sealed class UnderlyingRefTickTableID : IntField
    {
        public const int TAG = 2044;

        public UnderlyingRefTickTableID()
            : base(Tags.UnderlyingRefTickTableID) { }
        public UnderlyingRefTickTableID(int val)
            : base(Tags.UnderlyingRefTickTableID, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEvents Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEvents : IntField
    {
        public const int TAG = 2045;

        public NoUnderlyingComplexEvents()
            : base(Tags.NoUnderlyingComplexEvents) { }
        public NoUnderlyingComplexEvents(int val)
            : base(Tags.NoUnderlyingComplexEvents, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventType : IntField
    {
        public const int TAG = 2046;

        public UnderlyingComplexEventType()
            : base(Tags.UnderlyingComplexEventType) { }
        public UnderlyingComplexEventType(int val)
            : base(Tags.UnderlyingComplexEventType, val) { }


        // Field Enumerations
        public const int CAPPED = 1;
        public const int TRIGGER = 2;
        public const int KNOCK_IN_UP = 3;
        public const int KNOCK_IN_DOWN = 4;
        public const int KNOCK_OUT_UP = 5;
        public const int KNOCK_OUT_DOWN = 6;
        public const int UNDERLYING = 7;
        public const int RESET_BARRIER = 8;
        public const int ROLLING_BARRIER = 9;
        public const int ONE_TOUCH = 10;
        public const int NO_TOUCH = 11;
        public const int DOUBLE_ONE_TOUCH = 12;
        public const int DOUBLE_NO_TOUCH = 13;
        public const int FOREIGN_EXCHANGE_COMPOSITE = 14;
        public const int FOREIGN_EXCHANGE_QUANTO = 15;
        public const int FOREIGN_EXCHANGE_CROSS_CURRENCY = 16;
        public const int STRIKE_SPREAD = 17;
        public const int CALENDAR_SPREAD = 18;
        public const int PRICE_OBSERVATION = 19;
        public const int PASS_THROUGH = 20;
        public const int STRIKE_SCHEDULE = 21;
        public const int EQUITY_VALUATION = 22;
        public const int DIVIDEND_VALUATION = 23;
    }


    /// <summary>
    /// UnderlyingComplexOptPayoutAmount Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutAmount : DecimalField
    {
        public const int TAG = 2047;

        public UnderlyingComplexOptPayoutAmount()
            : base(Tags.UnderlyingComplexOptPayoutAmount) { }
        public UnderlyingComplexOptPayoutAmount(Decimal val)
            : base(Tags.UnderlyingComplexOptPayoutAmount, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPrice Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPrice : DecimalField
    {
        public const int TAG = 2048;

        public UnderlyingComplexEventPrice()
            : base(Tags.UnderlyingComplexEventPrice) { }
        public UnderlyingComplexEventPrice(Decimal val)
            : base(Tags.UnderlyingComplexEventPrice, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPriceBoundaryMethod Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPriceBoundaryMethod : IntField
    {
        public const int TAG = 2049;

        public UnderlyingComplexEventPriceBoundaryMethod()
            : base(Tags.UnderlyingComplexEventPriceBoundaryMethod) { }
        public UnderlyingComplexEventPriceBoundaryMethod(int val)
            : base(Tags.UnderlyingComplexEventPriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_COMPLEXEVENTPRICE = 1;
        public const int LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 2;
        public const int EQUAL_TO_COMPLEXEVENTPRICE = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 4;
        public const int GREATER_THAN_COMPLEXEVENTPRICE = 5;
    }


    /// <summary>
    /// UnderlyingComplexEventPriceBoundaryPrecision Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 2050;

        public UnderlyingComplexEventPriceBoundaryPrecision()
            : base(Tags.UnderlyingComplexEventPriceBoundaryPrecision) { }
        public UnderlyingComplexEventPriceBoundaryPrecision(Decimal val)
            : base(Tags.UnderlyingComplexEventPriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPriceTimeType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPriceTimeType : IntField
    {
        public const int TAG = 2051;

        public UnderlyingComplexEventPriceTimeType()
            : base(Tags.UnderlyingComplexEventPriceTimeType) { }
        public UnderlyingComplexEventPriceTimeType(int val)
            : base(Tags.UnderlyingComplexEventPriceTimeType, val) { }


        // Field Enumerations
        public const int EXPIRATION = 1;
        public const int IMMEDIATE = 2;
        public const int SPECIFIED_DATE_TIME = 3;
        public const int CLOSE = 4;
        public const int OPEN = 5;
        public const int OFFICIAL_SETTLEMENT_PRICE = 6;
        public const int DERIVATIVES_CLOSE = 7;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 8;
    }


    /// <summary>
    /// UnderlyingComplexEventCondition Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCondition : IntField
    {
        public const int TAG = 2052;

        public UnderlyingComplexEventCondition()
            : base(Tags.UnderlyingComplexEventCondition) { }
        public UnderlyingComplexEventCondition(int val)
            : base(Tags.UnderlyingComplexEventCondition, val) { }


        // Field Enumerations
        public const int AND = 1;
        public const int OR = 2;
    }


    /// <summary>
    /// NoUnderlyingComplexEventDates Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventDates : IntField
    {
        public const int TAG = 2053;

        public NoUnderlyingComplexEventDates()
            : base(Tags.NoUnderlyingComplexEventDates) { }
        public NoUnderlyingComplexEventDates(int val)
            : base(Tags.NoUnderlyingComplexEventDates, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventStartDate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventStartDate : DateOnlyField
    {
        public const int TAG = 2054;

        public UnderlyingComplexEventStartDate()
            : base(Tags.UnderlyingComplexEventStartDate) { }
        public UnderlyingComplexEventStartDate(DateTime val)
            : base(Tags.UnderlyingComplexEventStartDate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventEndDate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventEndDate : DateOnlyField
    {
        public const int TAG = 2055;

        public UnderlyingComplexEventEndDate()
            : base(Tags.UnderlyingComplexEventEndDate) { }
        public UnderlyingComplexEventEndDate(DateTime val)
            : base(Tags.UnderlyingComplexEventEndDate, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventTimes Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventTimes : IntField
    {
        public const int TAG = 2056;

        public NoUnderlyingComplexEventTimes()
            : base(Tags.NoUnderlyingComplexEventTimes) { }
        public NoUnderlyingComplexEventTimes(int val)
            : base(Tags.NoUnderlyingComplexEventTimes, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventStartTime Field
    /// </summary>/
    public sealed class UnderlyingComplexEventStartTime : TimeOnlyField
    {
        public const int TAG = 2057;

        public UnderlyingComplexEventStartTime()
            : base(Tags.UnderlyingComplexEventStartTime) { }
        public UnderlyingComplexEventStartTime(DateTime val)
            : base(Tags.UnderlyingComplexEventStartTime, val) { }
        public UnderlyingComplexEventStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.UnderlyingComplexEventStartTime, val, showMilliseconds) { }
        public UnderlyingComplexEventStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.UnderlyingComplexEventStartTime, val, precision) { }

    }


    /// <summary>
    /// UnderlyingComplexEventEndTime Field
    /// </summary>/
    public sealed class UnderlyingComplexEventEndTime : TimeOnlyField
    {
        public const int TAG = 2058;

        public UnderlyingComplexEventEndTime()
            : base(Tags.UnderlyingComplexEventEndTime) { }
        public UnderlyingComplexEventEndTime(DateTime val)
            : base(Tags.UnderlyingComplexEventEndTime, val) { }
        public UnderlyingComplexEventEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.UnderlyingComplexEventEndTime, val, showMilliseconds) { }
        public UnderlyingComplexEventEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.UnderlyingComplexEventEndTime, val, precision) { }

    }


    /// <summary>
    /// NoLegEvents Field
    /// </summary>/
    public sealed class NoLegEvents : IntField
    {
        public const int TAG = 2059;

        public NoLegEvents()
            : base(Tags.NoLegEvents) { }
        public NoLegEvents(int val)
            : base(Tags.NoLegEvents, val) { }

    }


    /// <summary>
    /// LegEventType Field
    /// </summary>/
    public sealed class LegEventType : IntField
    {
        public const int TAG = 2060;

        public LegEventType()
            : base(Tags.LegEventType) { }
        public LegEventType(int val)
            : base(Tags.LegEventType, val) { }


        // Field Enumerations
        public const int PUT = 1;
        public const int CALL = 2;
        public const int TENDER = 3;
        public const int SINKING_FUND_CALL = 4;
        public const int ACTIVATION = 5;
        public const int INACTIVATION = 6;
        public const int LAST_ELIGIBLE_TRADE_DATE = 7;
        public const int SWAP_START_DATE = 8;
        public const int SWAP_END_DATE = 9;
        public const int SWAP_ROLL_DATE = 10;
        public const int SWAP_NEXT_START_DATE = 11;
        public const int SWAP_NEXT_ROLL_DATE = 12;
        public const int FIRST_DELIVERY_DATE = 13;
        public const int LAST_DELIVERY_DATE = 14;
        public const int INITIAL_INVENTORY_DUE_DATE = 15;
        public const int FINAL_INVENTORY_DUE_DATE = 16;
        public const int FIRST_INTENT_DATE = 17;
        public const int LAST_INTENT_DATE = 18;
        public const int POSITION_REMOVAL_DATE = 19;
        public const int OTHER = 99;
        public const int MINIMUM_NOTICE = 20;
        public const int DELIVERY_START_TIME = 21;
        public const int DELIVERY_END_TIME = 22;
        public const int FIRST_NOTICE_DATE = 23;
        public const int LAST_NOTICE_DATE = 24;
        public const int FIRST_EXERCISE_DATE = 25;
        public const int REDEMPTION_DATE = 26;
        public const int TRADE_CONTINUATION_EFFECTIVE_DATE = 27;
    }


    /// <summary>
    /// LegEventDate Field
    /// </summary>/
    public sealed class LegEventDate : StringField
    {
        public const int TAG = 2061;

        public LegEventDate()
            : base(Tags.LegEventDate) { }
        public LegEventDate(string val)
            : base(Tags.LegEventDate, val) { }

    }


    /// <summary>
    /// LegEventTime Field
    /// </summary>/
    public sealed class LegEventTime : DateTimeField
    {
        public const int TAG = 2062;

        public LegEventTime()
            : base(Tags.LegEventTime) { }
        public LegEventTime(DateTime val)
            : base(Tags.LegEventTime, val) { }
        public LegEventTime(DateTime val, bool showMilliseconds)
            : base(Tags.LegEventTime, val, showMilliseconds) { }
        public LegEventTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.LegEventTime, val, precision) { }

    }


    /// <summary>
    /// LegEventTimeUnit Field
    /// </summary>/
    public sealed class LegEventTimeUnit : StringField
    {
        public const int TAG = 2063;

        public LegEventTimeUnit()
            : base(Tags.LegEventTimeUnit) { }
        public LegEventTimeUnit(string val)
            : base(Tags.LegEventTimeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegEventTimePeriod Field
    /// </summary>/
    public sealed class LegEventTimePeriod : IntField
    {
        public const int TAG = 2064;

        public LegEventTimePeriod()
            : base(Tags.LegEventTimePeriod) { }
        public LegEventTimePeriod(int val)
            : base(Tags.LegEventTimePeriod, val) { }

    }


    /// <summary>
    /// LegEventPx Field
    /// </summary>/
    public sealed class LegEventPx : DecimalField
    {
        public const int TAG = 2065;

        public LegEventPx()
            : base(Tags.LegEventPx) { }
        public LegEventPx(Decimal val)
            : base(Tags.LegEventPx, val) { }

    }


    /// <summary>
    /// LegEventText Field
    /// </summary>/
    public sealed class LegEventText : StringField
    {
        public const int TAG = 2066;

        public LegEventText()
            : base(Tags.LegEventText) { }
        public LegEventText(string val)
            : base(Tags.LegEventText, val) { }

    }


    /// <summary>
    /// LegAssetClass Field
    /// </summary>/
    public sealed class LegAssetClass : IntField
    {
        public const int TAG = 2067;

        public LegAssetClass()
            : base(Tags.LegAssetClass) { }
        public LegAssetClass(int val)
            : base(Tags.LegAssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// LegAssetSubClass Field
    /// </summary>/
    public sealed class LegAssetSubClass : IntField
    {
        public const int TAG = 2068;

        public LegAssetSubClass()
            : base(Tags.LegAssetSubClass) { }
        public LegAssetSubClass(int val)
            : base(Tags.LegAssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// LegAssetType Field
    /// </summary>/
    public sealed class LegAssetType : StringField
    {
        public const int TAG = 2069;

        public LegAssetType()
            : base(Tags.LegAssetType) { }
        public LegAssetType(string val)
            : base(Tags.LegAssetType, val) { }

    }


    /// <summary>
    /// LegSwapClass Field
    /// </summary>/
    public sealed class LegSwapClass : StringField
    {
        public const int TAG = 2070;

        public LegSwapClass()
            : base(Tags.LegSwapClass) { }
        public LegSwapClass(string val)
            : base(Tags.LegSwapClass, val) { }


        // Field Enumerations
        public const string BASIS_SWAP = "BS";
        public const string INDEX_SWAP = "IX";
        public const string BROAD_BASED_SECURITY_SWAP = "BB";
        public const string BASKET_SWAP = "SK";
    }


    /// <summary>
    /// UnderlyingEventText Field
    /// </summary>/
    public sealed class UnderlyingEventText : StringField
    {
        public const int TAG = 2071;

        public UnderlyingEventText()
            : base(Tags.UnderlyingEventText) { }
        public UnderlyingEventText(string val)
            : base(Tags.UnderlyingEventText, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingEventTextLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingEventTextLen : IntField
    {
        public const int TAG = 2072;

        public EncodedUnderlyingEventTextLen()
            : base(Tags.EncodedUnderlyingEventTextLen) { }
        public EncodedUnderlyingEventTextLen(int val)
            : base(Tags.EncodedUnderlyingEventTextLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingEventText Field
    /// </summary>/
    public sealed class EncodedUnderlyingEventText : StringField
    {
        public const int TAG = 2073;

        public EncodedUnderlyingEventText()
            : base(Tags.EncodedUnderlyingEventText) { }
        public EncodedUnderlyingEventText(string val)
            : base(Tags.EncodedUnderlyingEventText, val) { }

    }


    /// <summary>
    /// EncodedLegEventTextLen Field
    /// </summary>/
    public sealed class EncodedLegEventTextLen : IntField
    {
        public const int TAG = 2074;

        public EncodedLegEventTextLen()
            : base(Tags.EncodedLegEventTextLen) { }
        public EncodedLegEventTextLen(int val)
            : base(Tags.EncodedLegEventTextLen, val) { }

    }


    /// <summary>
    /// EncodedLegEventText Field
    /// </summary>/
    public sealed class EncodedLegEventText : StringField
    {
        public const int TAG = 2075;

        public EncodedLegEventText()
            : base(Tags.EncodedLegEventText) { }
        public EncodedLegEventText(string val)
            : base(Tags.EncodedLegEventText, val) { }

    }


    /// <summary>
    /// NoLegSecondaryAssetClasses Field
    /// </summary>/
    public sealed class NoLegSecondaryAssetClasses : IntField
    {
        public const int TAG = 2076;

        public NoLegSecondaryAssetClasses()
            : base(Tags.NoLegSecondaryAssetClasses) { }
        public NoLegSecondaryAssetClasses(int val)
            : base(Tags.NoLegSecondaryAssetClasses, val) { }

    }


    /// <summary>
    /// LegSecondaryAssetClass Field
    /// </summary>/
    public sealed class LegSecondaryAssetClass : IntField
    {
        public const int TAG = 2077;

        public LegSecondaryAssetClass()
            : base(Tags.LegSecondaryAssetClass) { }
        public LegSecondaryAssetClass(int val)
            : base(Tags.LegSecondaryAssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// LegSecondaryAssetSubClass Field
    /// </summary>/
    public sealed class LegSecondaryAssetSubClass : IntField
    {
        public const int TAG = 2078;

        public LegSecondaryAssetSubClass()
            : base(Tags.LegSecondaryAssetSubClass) { }
        public LegSecondaryAssetSubClass(int val)
            : base(Tags.LegSecondaryAssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// LegSecondaryAssetType Field
    /// </summary>/
    public sealed class LegSecondaryAssetType : StringField
    {
        public const int TAG = 2079;

        public LegSecondaryAssetType()
            : base(Tags.LegSecondaryAssetType) { }
        public LegSecondaryAssetType(string val)
            : base(Tags.LegSecondaryAssetType, val) { }

    }


    /// <summary>
    /// NoUnderlyingSecondaryAssetClasses Field
    /// </summary>/
    public sealed class NoUnderlyingSecondaryAssetClasses : IntField
    {
        public const int TAG = 2080;

        public NoUnderlyingSecondaryAssetClasses()
            : base(Tags.NoUnderlyingSecondaryAssetClasses) { }
        public NoUnderlyingSecondaryAssetClasses(int val)
            : base(Tags.NoUnderlyingSecondaryAssetClasses, val) { }

    }


    /// <summary>
    /// UnderlyingSecondaryAssetClass Field
    /// </summary>/
    public sealed class UnderlyingSecondaryAssetClass : IntField
    {
        public const int TAG = 2081;

        public UnderlyingSecondaryAssetClass()
            : base(Tags.UnderlyingSecondaryAssetClass) { }
        public UnderlyingSecondaryAssetClass(int val)
            : base(Tags.UnderlyingSecondaryAssetClass, val) { }


        // Field Enumerations
        public const int INTEREST_RATE = 1;
        public const int CURRENCY = 2;
        public const int CREDIT = 3;
        public const int EQUITY = 4;
        public const int COMMODITY = 5;
        public const int OTHER = 6;
        public const int CASH = 7;
        public const int DEBT = 8;
        public const int FUND = 9;
        public const int LOAN_FACILITY = 10;
        public const int INDEX = 11;
    }


    /// <summary>
    /// UnderlyingSecondaryAssetSubClass Field
    /// </summary>/
    public sealed class UnderlyingSecondaryAssetSubClass : IntField
    {
        public const int TAG = 2082;

        public UnderlyingSecondaryAssetSubClass()
            : base(Tags.UnderlyingSecondaryAssetSubClass) { }
        public UnderlyingSecondaryAssetSubClass(int val)
            : base(Tags.UnderlyingSecondaryAssetSubClass, val) { }


        // Field Enumerations
        public const int SINGLE_CURRENCY = 1;
        public const int CROSS_CURRENCY = 2;
        public const int BASKET_FOR_MULTI_CURRENCY = 3;
        public const int SINGLE_NAME = 4;
        public const int CREDIT_INDEX = 5;
        public const int INDEX_TRANCHE = 6;
        public const int CREDIT_BASKET = 7;
        public const int COMMON = 9;
        public const int PREFERRED = 10;
        public const int EQUITY_INDEX = 11;
        public const int EQUITY_BASKET = 12;
        public const int METALS = 13;
        public const int BULLION = 14;
        public const int ENERGY = 15;
        public const int COMMODITY_INDEX = 16;
        public const int AGRICULTURAL = 17;
        public const int ENVIRONMENTAL = 18;
        public const int FREIGHT = 19;
        public const int EXOTIC = 8;
        public const int GOVERNMENT = 20;
        public const int AGENCY = 21;
        public const int CORPORATE = 22;
        public const int FINANCING = 23;
        public const int MONEY_MARKET = 24;
        public const int MORTGAGE = 25;
        public const int MUNICIPAL = 26;
        public const int MUTUAL_FUND = 27;
        public const int COLLECTIVE_INVESTMENT_VEHICLE = 28;
        public const int INVESTMENT_PROGRAM = 29;
        public const int SPECIALIZED_ACCOUNT_PROGRAM = 30;
        public const int TERM_LOAN = 31;
        public const int BRIDGE_LOAN = 32;
        public const int LETTER_OF_CREDIT = 33;
        public const int DIVIDEND_INDEX = 34;
        public const int STOCK_DIVIDEND = 35;
        public const int EXCHANGE_TRADED_FUND = 36;
        public const int VOLATILITY_INDEX = 37;
        public const int FX_CROSS_RATES = 38;
        public const int FX_EMERGING_MARKETS = 39;
        public const int FX_MAJORS = 40;
        public const int FERTILIZER = 41;
        public const int INDUSTRIAL_PRODUCT = 42;
        public const int INFLATION = 43;
        public const int PAPER = 44;
        public const int POLYPROPYLENE = 45;
        public const int OFFICIAL_ECONOMIC_STATISTICS = 46;
        public const int OTHER_C10 = 47;
        public const int OTHER = 48;
    }


    /// <summary>
    /// UnderlyingSecondaryAssetType Field
    /// </summary>/
    public sealed class UnderlyingSecondaryAssetType : StringField
    {
        public const int TAG = 2083;

        public UnderlyingSecondaryAssetType()
            : base(Tags.UnderlyingSecondaryAssetType) { }
        public UnderlyingSecondaryAssetType(string val)
            : base(Tags.UnderlyingSecondaryAssetType, val) { }

    }


    /// <summary>
    /// PreviousClearingBusinessDate Field
    /// </summary>/
    public sealed class PreviousClearingBusinessDate : StringField
    {
        public const int TAG = 2084;

        public PreviousClearingBusinessDate()
            : base(Tags.PreviousClearingBusinessDate) { }
        public PreviousClearingBusinessDate(string val)
            : base(Tags.PreviousClearingBusinessDate, val) { }

    }


    /// <summary>
    /// ValuationDate Field
    /// </summary>/
    public sealed class ValuationDate : StringField
    {
        public const int TAG = 2085;

        public ValuationDate()
            : base(Tags.ValuationDate) { }
        public ValuationDate(string val)
            : base(Tags.ValuationDate, val) { }

    }


    /// <summary>
    /// ValuationTime Field
    /// </summary>/
    public sealed class ValuationTime : StringField
    {
        public const int TAG = 2086;

        public ValuationTime()
            : base(Tags.ValuationTime) { }
        public ValuationTime(string val)
            : base(Tags.ValuationTime, val) { }

    }


    /// <summary>
    /// ValuationBusinessCenter Field
    /// </summary>/
    public sealed class ValuationBusinessCenter : StringField
    {
        public const int TAG = 2087;

        public ValuationBusinessCenter()
            : base(Tags.ValuationBusinessCenter) { }
        public ValuationBusinessCenter(string val)
            : base(Tags.ValuationBusinessCenter, val) { }

    }


    /// <summary>
    /// MarginAmtFXRate Field
    /// </summary>/
    public sealed class MarginAmtFXRate : DecimalField
    {
        public const int TAG = 2088;

        public MarginAmtFXRate()
            : base(Tags.MarginAmtFXRate) { }
        public MarginAmtFXRate(Decimal val)
            : base(Tags.MarginAmtFXRate, val) { }

    }


    /// <summary>
    /// MarginAmtFXRateCalc Field
    /// </summary>/
    public sealed class MarginAmtFXRateCalc : CharField
    {
        public const int TAG = 2089;

        public MarginAmtFXRateCalc()
            : base(Tags.MarginAmtFXRateCalc) { }
        public MarginAmtFXRateCalc(char val)
            : base(Tags.MarginAmtFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// CollateralFXRate Field
    /// </summary>/
    public sealed class CollateralFXRate : DecimalField
    {
        public const int TAG = 2090;

        public CollateralFXRate()
            : base(Tags.CollateralFXRate) { }
        public CollateralFXRate(Decimal val)
            : base(Tags.CollateralFXRate, val) { }

    }


    /// <summary>
    /// CollateralFXRateCalc Field
    /// </summary>/
    public sealed class CollateralFXRateCalc : CharField
    {
        public const int TAG = 2091;

        public CollateralFXRateCalc()
            : base(Tags.CollateralFXRateCalc) { }
        public CollateralFXRateCalc(char val)
            : base(Tags.CollateralFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// CollateralAmountMarketSegmentID Field
    /// </summary>/
    public sealed class CollateralAmountMarketSegmentID : StringField
    {
        public const int TAG = 2092;

        public CollateralAmountMarketSegmentID()
            : base(Tags.CollateralAmountMarketSegmentID) { }
        public CollateralAmountMarketSegmentID(string val)
            : base(Tags.CollateralAmountMarketSegmentID, val) { }

    }


    /// <summary>
    /// CollateralAmountMarketID Field
    /// </summary>/
    public sealed class CollateralAmountMarketID : StringField
    {
        public const int TAG = 2093;

        public CollateralAmountMarketID()
            : base(Tags.CollateralAmountMarketID) { }
        public CollateralAmountMarketID(string val)
            : base(Tags.CollateralAmountMarketID, val) { }

    }


    /// <summary>
    /// PayCollectFXRate Field
    /// </summary>/
    public sealed class PayCollectFXRate : DecimalField
    {
        public const int TAG = 2094;

        public PayCollectFXRate()
            : base(Tags.PayCollectFXRate) { }
        public PayCollectFXRate(Decimal val)
            : base(Tags.PayCollectFXRate, val) { }

    }


    /// <summary>
    /// PayCollectFXRateCalc Field
    /// </summary>/
    public sealed class PayCollectFXRateCalc : CharField
    {
        public const int TAG = 2095;

        public PayCollectFXRateCalc()
            : base(Tags.PayCollectFXRateCalc) { }
        public PayCollectFXRateCalc(char val)
            : base(Tags.PayCollectFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// PosAmtStreamDesc Field
    /// </summary>/
    public sealed class PosAmtStreamDesc : StringField
    {
        public const int TAG = 2096;

        public PosAmtStreamDesc()
            : base(Tags.PosAmtStreamDesc) { }
        public PosAmtStreamDesc(string val)
            : base(Tags.PosAmtStreamDesc, val) { }

    }


    /// <summary>
    /// PositionFXRate Field
    /// </summary>/
    public sealed class PositionFXRate : DecimalField
    {
        public const int TAG = 2097;

        public PositionFXRate()
            : base(Tags.PositionFXRate) { }
        public PositionFXRate(Decimal val)
            : base(Tags.PositionFXRate, val) { }

    }


    /// <summary>
    /// PositionFXRateCalc Field
    /// </summary>/
    public sealed class PositionFXRateCalc : CharField
    {
        public const int TAG = 2098;

        public PositionFXRateCalc()
            : base(Tags.PositionFXRateCalc) { }
        public PositionFXRateCalc(char val)
            : base(Tags.PositionFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// PosAmtMarketSegmentID Field
    /// </summary>/
    public sealed class PosAmtMarketSegmentID : StringField
    {
        public const int TAG = 2099;

        public PosAmtMarketSegmentID()
            : base(Tags.PosAmtMarketSegmentID) { }
        public PosAmtMarketSegmentID(string val)
            : base(Tags.PosAmtMarketSegmentID, val) { }

    }


    /// <summary>
    /// PosAmtMarketID Field
    /// </summary>/
    public sealed class PosAmtMarketID : StringField
    {
        public const int TAG = 2100;

        public PosAmtMarketID()
            : base(Tags.PosAmtMarketID) { }
        public PosAmtMarketID(string val)
            : base(Tags.PosAmtMarketID, val) { }

    }


    /// <summary>
    /// TerminatedIndicator Field
    /// </summary>/
    public sealed class TerminatedIndicator : BooleanField
    {
        public const int TAG = 2101;

        public TerminatedIndicator()
            : base(Tags.TerminatedIndicator) { }
        public TerminatedIndicator(Boolean val)
            : base(Tags.TerminatedIndicator, val) { }

    }


    /// <summary>
    /// ShortMarkingExemptIndicator Field
    /// </summary>/
    public sealed class ShortMarkingExemptIndicator : BooleanField
    {
        public const int TAG = 2102;

        public ShortMarkingExemptIndicator()
            : base(Tags.ShortMarkingExemptIndicator) { }
        public ShortMarkingExemptIndicator(Boolean val)
            : base(Tags.ShortMarkingExemptIndicator, val) { }

    }


    /// <summary>
    /// RelatedRegulatoryTradeIDSource Field
    /// </summary>/
    public sealed class RelatedRegulatoryTradeIDSource : StringField
    {
        public const int TAG = 2103;

        public RelatedRegulatoryTradeIDSource()
            : base(Tags.RelatedRegulatoryTradeIDSource) { }
        public RelatedRegulatoryTradeIDSource(string val)
            : base(Tags.RelatedRegulatoryTradeIDSource, val) { }

    }


    /// <summary>
    /// NoAttachments Field
    /// </summary>/
    public sealed class NoAttachments : IntField
    {
        public const int TAG = 2104;

        public NoAttachments()
            : base(Tags.NoAttachments) { }
        public NoAttachments(int val)
            : base(Tags.NoAttachments, val) { }

    }


    /// <summary>
    /// AttachmentName Field
    /// </summary>/
    public sealed class AttachmentName : StringField
    {
        public const int TAG = 2105;

        public AttachmentName()
            : base(Tags.AttachmentName) { }
        public AttachmentName(string val)
            : base(Tags.AttachmentName, val) { }

    }


    /// <summary>
    /// AttachmentMediaType Field
    /// </summary>/
    public sealed class AttachmentMediaType : StringField
    {
        public const int TAG = 2106;

        public AttachmentMediaType()
            : base(Tags.AttachmentMediaType) { }
        public AttachmentMediaType(string val)
            : base(Tags.AttachmentMediaType, val) { }

    }


    /// <summary>
    /// AttachmentClassification Field
    /// </summary>/
    public sealed class AttachmentClassification : StringField
    {
        public const int TAG = 2107;

        public AttachmentClassification()
            : base(Tags.AttachmentClassification) { }
        public AttachmentClassification(string val)
            : base(Tags.AttachmentClassification, val) { }

    }


    /// <summary>
    /// AttachmentExternalURL Field
    /// </summary>/
    public sealed class AttachmentExternalURL : StringField
    {
        public const int TAG = 2108;

        public AttachmentExternalURL()
            : base(Tags.AttachmentExternalURL) { }
        public AttachmentExternalURL(string val)
            : base(Tags.AttachmentExternalURL, val) { }

    }


    /// <summary>
    /// AttachmentEncodingType Field
    /// </summary>/
    public sealed class AttachmentEncodingType : IntField
    {
        public const int TAG = 2109;

        public AttachmentEncodingType()
            : base(Tags.AttachmentEncodingType) { }
        public AttachmentEncodingType(int val)
            : base(Tags.AttachmentEncodingType, val) { }


        // Field Enumerations
        public const int BASE64_ENCODING = 0;
        public const int UNENCODED_BINARY_CONTENT = 1;
    }


    /// <summary>
    /// UnencodedAttachmentLen Field
    /// </summary>/
    public sealed class UnencodedAttachmentLen : IntField
    {
        public const int TAG = 2110;

        public UnencodedAttachmentLen()
            : base(Tags.UnencodedAttachmentLen) { }
        public UnencodedAttachmentLen(int val)
            : base(Tags.UnencodedAttachmentLen, val) { }

    }


    /// <summary>
    /// EncodedAttachmentLen Field
    /// </summary>/
    public sealed class EncodedAttachmentLen : IntField
    {
        public const int TAG = 2111;

        public EncodedAttachmentLen()
            : base(Tags.EncodedAttachmentLen) { }
        public EncodedAttachmentLen(int val)
            : base(Tags.EncodedAttachmentLen, val) { }

    }


    /// <summary>
    /// EncodedAttachment Field
    /// </summary>/
    public sealed class EncodedAttachment : StringField
    {
        public const int TAG = 2112;

        public EncodedAttachment()
            : base(Tags.EncodedAttachment) { }
        public EncodedAttachment(string val)
            : base(Tags.EncodedAttachment, val) { }

    }


    /// <summary>
    /// NoAttachmentKeywords Field
    /// </summary>/
    public sealed class NoAttachmentKeywords : IntField
    {
        public const int TAG = 2113;

        public NoAttachmentKeywords()
            : base(Tags.NoAttachmentKeywords) { }
        public NoAttachmentKeywords(int val)
            : base(Tags.NoAttachmentKeywords, val) { }

    }


    /// <summary>
    /// AttachmentKeyword Field
    /// </summary>/
    public sealed class AttachmentKeyword : StringField
    {
        public const int TAG = 2114;

        public AttachmentKeyword()
            : base(Tags.AttachmentKeyword) { }
        public AttachmentKeyword(string val)
            : base(Tags.AttachmentKeyword, val) { }

    }


    /// <summary>
    /// NegotiationMethod Field
    /// </summary>/
    public sealed class NegotiationMethod : IntField
    {
        public const int TAG = 2115;

        public NegotiationMethod()
            : base(Tags.NegotiationMethod) { }
        public NegotiationMethod(int val)
            : base(Tags.NegotiationMethod, val) { }


        // Field Enumerations
        public const int AUTO_SPOT = 0;
        public const int NEGOTIATED_SPOT = 1;
        public const int THE_SPOT_PRICE_FOR_THE_REFERENCE_OR_BENCHMARK_SECURITY_IS_TO_BE_NEGOTIATED_VIA_PHONE_OR_VOICE = 2;
    }


    /// <summary>
    /// NextAuctionTime Field
    /// </summary>/
    public sealed class NextAuctionTime : DateTimeField
    {
        public const int TAG = 2116;

        public NextAuctionTime()
            : base(Tags.NextAuctionTime) { }
        public NextAuctionTime(DateTime val)
            : base(Tags.NextAuctionTime, val) { }
        public NextAuctionTime(DateTime val, bool showMilliseconds)
            : base(Tags.NextAuctionTime, val, showMilliseconds) { }
        public NextAuctionTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.NextAuctionTime, val, precision) { }

    }


    /// <summary>
    /// ComplexOptPayoutPaySide Field
    /// </summary>/
    public sealed class ComplexOptPayoutPaySide : IntField
    {
        public const int TAG = 2117;

        public ComplexOptPayoutPaySide()
            : base(Tags.ComplexOptPayoutPaySide) { }
        public ComplexOptPayoutPaySide(int val)
            : base(Tags.ComplexOptPayoutPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// ComplexOptPayoutReceiveSide Field
    /// </summary>/
    public sealed class ComplexOptPayoutReceiveSide : IntField
    {
        public const int TAG = 2118;

        public ComplexOptPayoutReceiveSide()
            : base(Tags.ComplexOptPayoutReceiveSide) { }
        public ComplexOptPayoutReceiveSide(int val)
            : base(Tags.ComplexOptPayoutReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// ComplexOptPayoutUnderlier Field
    /// </summary>/
    public sealed class ComplexOptPayoutUnderlier : StringField
    {
        public const int TAG = 2119;

        public ComplexOptPayoutUnderlier()
            : base(Tags.ComplexOptPayoutUnderlier) { }
        public ComplexOptPayoutUnderlier(string val)
            : base(Tags.ComplexOptPayoutUnderlier, val) { }

    }


    /// <summary>
    /// ComplexOptPayoutPercentage Field
    /// </summary>/
    public sealed class ComplexOptPayoutPercentage : DecimalField
    {
        public const int TAG = 2120;

        public ComplexOptPayoutPercentage()
            : base(Tags.ComplexOptPayoutPercentage) { }
        public ComplexOptPayoutPercentage(Decimal val)
            : base(Tags.ComplexOptPayoutPercentage, val) { }

    }


    /// <summary>
    /// ComplexOptPayoutTime Field
    /// </summary>/
    public sealed class ComplexOptPayoutTime : IntField
    {
        public const int TAG = 2121;

        public ComplexOptPayoutTime()
            : base(Tags.ComplexOptPayoutTime) { }
        public ComplexOptPayoutTime(int val)
            : base(Tags.ComplexOptPayoutTime, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int OPEN = 1;
        public const int OFFICIAL_SETTLEMENT = 2;
        public const int VALUATION_TIME = 3;
        public const int EXCHANGE_SETTLEMENT_TIME = 4;
        public const int DERIVATIVES_CLOSE = 5;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 6;
    }


    /// <summary>
    /// ComplexOptPayoutCurrency Field
    /// </summary>/
    public sealed class ComplexOptPayoutCurrency : StringField
    {
        public const int TAG = 2122;

        public ComplexOptPayoutCurrency()
            : base(Tags.ComplexOptPayoutCurrency) { }
        public ComplexOptPayoutCurrency(string val)
            : base(Tags.ComplexOptPayoutCurrency, val) { }

    }


    /// <summary>
    /// ComplexEventPricePercentage Field
    /// </summary>/
    public sealed class ComplexEventPricePercentage : DecimalField
    {
        public const int TAG = 2123;

        public ComplexEventPricePercentage()
            : base(Tags.ComplexEventPricePercentage) { }
        public ComplexEventPricePercentage(Decimal val)
            : base(Tags.ComplexEventPricePercentage, val) { }

    }


    /// <summary>
    /// ComplexEventCurrencyOne Field
    /// </summary>/
    public sealed class ComplexEventCurrencyOne : StringField
    {
        public const int TAG = 2124;

        public ComplexEventCurrencyOne()
            : base(Tags.ComplexEventCurrencyOne) { }
        public ComplexEventCurrencyOne(string val)
            : base(Tags.ComplexEventCurrencyOne, val) { }

    }


    /// <summary>
    /// ComplexEventCurrencyTwo Field
    /// </summary>/
    public sealed class ComplexEventCurrencyTwo : StringField
    {
        public const int TAG = 2125;

        public ComplexEventCurrencyTwo()
            : base(Tags.ComplexEventCurrencyTwo) { }
        public ComplexEventCurrencyTwo(string val)
            : base(Tags.ComplexEventCurrencyTwo, val) { }

    }


    /// <summary>
    /// ComplexEventQuoteBasis Field
    /// </summary>/
    public sealed class ComplexEventQuoteBasis : IntField
    {
        public const int TAG = 2126;

        public ComplexEventQuoteBasis()
            : base(Tags.ComplexEventQuoteBasis) { }
        public ComplexEventQuoteBasis(int val)
            : base(Tags.ComplexEventQuoteBasis, val) { }


        // Field Enumerations
        public const int CURRENCY_1_PER_CURRENCY_2 = 0;
        public const int CURRENCY_2_PER_CURRENCY_1 = 1;
    }


    /// <summary>
    /// ComplexEventFixedFXRate Field
    /// </summary>/
    public sealed class ComplexEventFixedFXRate : DecimalField
    {
        public const int TAG = 2127;

        public ComplexEventFixedFXRate()
            : base(Tags.ComplexEventFixedFXRate) { }
        public ComplexEventFixedFXRate(Decimal val)
            : base(Tags.ComplexEventFixedFXRate, val) { }

    }


    /// <summary>
    /// ComplexEventDeterminationMethod Field
    /// </summary>/
    public sealed class ComplexEventDeterminationMethod : StringField
    {
        public const int TAG = 2128;

        public ComplexEventDeterminationMethod()
            : base(Tags.ComplexEventDeterminationMethod) { }
        public ComplexEventDeterminationMethod(string val)
            : base(Tags.ComplexEventDeterminationMethod, val) { }

    }


    /// <summary>
    /// ComplexEventCalculationAgent Field
    /// </summary>/
    public sealed class ComplexEventCalculationAgent : IntField
    {
        public const int TAG = 2129;

        public ComplexEventCalculationAgent()
            : base(Tags.ComplexEventCalculationAgent) { }
        public ComplexEventCalculationAgent(int val)
            : base(Tags.ComplexEventCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// ComplexEventStrikePrice Field
    /// </summary>/
    public sealed class ComplexEventStrikePrice : DecimalField
    {
        public const int TAG = 2130;

        public ComplexEventStrikePrice()
            : base(Tags.ComplexEventStrikePrice) { }
        public ComplexEventStrikePrice(Decimal val)
            : base(Tags.ComplexEventStrikePrice, val) { }

    }


    /// <summary>
    /// ComplexEventStrikeFactor Field
    /// </summary>/
    public sealed class ComplexEventStrikeFactor : DecimalField
    {
        public const int TAG = 2131;

        public ComplexEventStrikeFactor()
            : base(Tags.ComplexEventStrikeFactor) { }
        public ComplexEventStrikeFactor(Decimal val)
            : base(Tags.ComplexEventStrikeFactor, val) { }

    }


    /// <summary>
    /// ComplexEventStrikeNumberOfOptions Field
    /// </summary>/
    public sealed class ComplexEventStrikeNumberOfOptions : IntField
    {
        public const int TAG = 2132;

        public ComplexEventStrikeNumberOfOptions()
            : base(Tags.ComplexEventStrikeNumberOfOptions) { }
        public ComplexEventStrikeNumberOfOptions(int val)
            : base(Tags.ComplexEventStrikeNumberOfOptions, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventsXIDRef Field
    /// </summary>/
    public sealed class ComplexEventCreditEventsXIDRef : StringField
    {
        public const int TAG = 2133;

        public ComplexEventCreditEventsXIDRef()
            : base(Tags.ComplexEventCreditEventsXIDRef) { }
        public ComplexEventCreditEventsXIDRef(string val)
            : base(Tags.ComplexEventCreditEventsXIDRef, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventNotifyingParty Field
    /// </summary>/
    public sealed class ComplexEventCreditEventNotifyingParty : IntField
    {
        public const int TAG = 2134;

        public ComplexEventCreditEventNotifyingParty()
            : base(Tags.ComplexEventCreditEventNotifyingParty) { }
        public ComplexEventCreditEventNotifyingParty(int val)
            : base(Tags.ComplexEventCreditEventNotifyingParty, val) { }


        // Field Enumerations
        public const int SELLER_NOTIFIES = 0;
        public const int BUYER_NOTIFIES = 1;
        public const int SELLER_OR_BUYER_NOTIFIES = 2;
    }


    /// <summary>
    /// ComplexEventCreditEventBusinessCenter Field
    /// </summary>/
    public sealed class ComplexEventCreditEventBusinessCenter : StringField
    {
        public const int TAG = 2135;

        public ComplexEventCreditEventBusinessCenter()
            : base(Tags.ComplexEventCreditEventBusinessCenter) { }
        public ComplexEventCreditEventBusinessCenter(string val)
            : base(Tags.ComplexEventCreditEventBusinessCenter, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventStandardSources Field
    /// </summary>/
    public sealed class ComplexEventCreditEventStandardSources : BooleanField
    {
        public const int TAG = 2136;

        public ComplexEventCreditEventStandardSources()
            : base(Tags.ComplexEventCreditEventStandardSources) { }
        public ComplexEventCreditEventStandardSources(Boolean val)
            : base(Tags.ComplexEventCreditEventStandardSources, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventMinimumSources Field
    /// </summary>/
    public sealed class ComplexEventCreditEventMinimumSources : IntField
    {
        public const int TAG = 2137;

        public ComplexEventCreditEventMinimumSources()
            : base(Tags.ComplexEventCreditEventMinimumSources) { }
        public ComplexEventCreditEventMinimumSources(int val)
            : base(Tags.ComplexEventCreditEventMinimumSources, val) { }

    }


    /// <summary>
    /// ComplexEventXID Field
    /// </summary>/
    public sealed class ComplexEventXID : StringField
    {
        public const int TAG = 2138;

        public ComplexEventXID()
            : base(Tags.ComplexEventXID) { }
        public ComplexEventXID(string val)
            : base(Tags.ComplexEventXID, val) { }

    }


    /// <summary>
    /// ComplexEventXIDRef Field
    /// </summary>/
    public sealed class ComplexEventXIDRef : StringField
    {
        public const int TAG = 2139;

        public ComplexEventXIDRef()
            : base(Tags.ComplexEventXIDRef) { }
        public ComplexEventXIDRef(string val)
            : base(Tags.ComplexEventXIDRef, val) { }

    }


    /// <summary>
    /// ValuationReferenceModel Field
    /// </summary>/
    public sealed class ValuationReferenceModel : StringField
    {
        public const int TAG = 2140;

        public ValuationReferenceModel()
            : base(Tags.ValuationReferenceModel) { }
        public ValuationReferenceModel(string val)
            : base(Tags.ValuationReferenceModel, val) { }

    }


    /// <summary>
    /// StrategyType Field
    /// </summary>/
    public sealed class StrategyType : StringField
    {
        public const int TAG = 2141;

        public StrategyType()
            : base(Tags.StrategyType) { }
        public StrategyType(string val)
            : base(Tags.StrategyType, val) { }


        // Field Enumerations
        public const string STRADDLE = "STD";
        public const string STRANGLE = "STG";
        public const string BUTTERFLY = "BF";
        public const string CONDOR = "CNDR";
        public const string CALLABLE_INVERSIBLE_SNOWBALL = "CISN";
        public const string OTHER = "OTHER";
    }


    /// <summary>
    /// CommonPricingIndicator Field
    /// </summary>/
    public sealed class CommonPricingIndicator : BooleanField
    {
        public const int TAG = 2142;

        public CommonPricingIndicator()
            : base(Tags.CommonPricingIndicator) { }
        public CommonPricingIndicator(Boolean val)
            : base(Tags.CommonPricingIndicator, val) { }

    }


    /// <summary>
    /// SettlDisruptionProvision Field
    /// </summary>/
    public sealed class SettlDisruptionProvision : IntField
    {
        public const int TAG = 2143;

        public SettlDisruptionProvision()
            : base(Tags.SettlDisruptionProvision) { }
        public SettlDisruptionProvision(int val)
            : base(Tags.SettlDisruptionProvision, val) { }


        // Field Enumerations
        public const int NEGOTIATION = 1;
        public const int CANCELLATION_AND_PAYMENT = 2;
    }


    /// <summary>
    /// InstrumentRoundingDirection Field
    /// </summary>/
    public sealed class InstrumentRoundingDirection : CharField
    {
        public const int TAG = 2144;

        public InstrumentRoundingDirection()
            : base(Tags.InstrumentRoundingDirection) { }
        public InstrumentRoundingDirection(char val)
            : base(Tags.InstrumentRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// InstrumentRoundingPrecision Field
    /// </summary>/
    public sealed class InstrumentRoundingPrecision : IntField
    {
        public const int TAG = 2145;

        public InstrumentRoundingPrecision()
            : base(Tags.InstrumentRoundingPrecision) { }
        public InstrumentRoundingPrecision(int val)
            : base(Tags.InstrumentRoundingPrecision, val) { }

    }


    /// <summary>
    /// LegSettleOnOpenFlag Field
    /// </summary>/
    public sealed class LegSettleOnOpenFlag : StringField
    {
        public const int TAG = 2146;

        public LegSettleOnOpenFlag()
            : base(Tags.LegSettleOnOpenFlag) { }
        public LegSettleOnOpenFlag(string val)
            : base(Tags.LegSettleOnOpenFlag, val) { }

    }


    /// <summary>
    /// LegInstrmtAssignmentMethod Field
    /// </summary>/
    public sealed class LegInstrmtAssignmentMethod : CharField
    {
        public const int TAG = 2147;

        public LegInstrmtAssignmentMethod()
            : base(Tags.LegInstrmtAssignmentMethod) { }
        public LegInstrmtAssignmentMethod(char val)
            : base(Tags.LegInstrmtAssignmentMethod, val) { }


        // Field Enumerations
        public const char PRO_RATA = 'P';
        public const char RANDOM = 'R';
    }


    /// <summary>
    /// LegSecurityStatus Field
    /// </summary>/
    public sealed class LegSecurityStatus : StringField
    {
        public const int TAG = 2148;

        public LegSecurityStatus()
            : base(Tags.LegSecurityStatus) { }
        public LegSecurityStatus(string val)
            : base(Tags.LegSecurityStatus, val) { }


        // Field Enumerations
        public const string ACTIVE = "1";
        public const string INACTIVE = "2";
        public const string ACTIVE_CLOSING_ORDERS_ONLY = "3";
        public const string EXPIRED = "4";
        public const string DELISTED = "5";
        public const string KNOCKED_OUT = "6";
        public const string KNOCK_OUT_REVOKED = "7";
        public const string PENDING_EXPIRY = "8";
        public const string SUSPENDED = "9";
        public const string PUBLISHED = "10";
        public const string PENDING_DELETION = "11";
    }


    /// <summary>
    /// LegRestructuringType Field
    /// </summary>/
    public sealed class LegRestructuringType : StringField
    {
        public const int TAG = 2149;

        public LegRestructuringType()
            : base(Tags.LegRestructuringType) { }
        public LegRestructuringType(string val)
            : base(Tags.LegRestructuringType, val) { }


        // Field Enumerations
        public const string FULL_RESTRUCTURING = "FR";
        public const string MODIFIED_RESTRUCTURING = "MR";
        public const string MODIFIED_MOD_RESTRUCTURING = "MM";
        public const string NO_RESTRUCTURING_SPECIFIED = "XR";
    }


    /// <summary>
    /// LegSeniority Field
    /// </summary>/
    public sealed class LegSeniority : StringField
    {
        public const int TAG = 2150;

        public LegSeniority()
            : base(Tags.LegSeniority) { }
        public LegSeniority(string val)
            : base(Tags.LegSeniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// LegNotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class LegNotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 2151;

        public LegNotionalPercentageOutstanding()
            : base(Tags.LegNotionalPercentageOutstanding) { }
        public LegNotionalPercentageOutstanding(Decimal val)
            : base(Tags.LegNotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// LegOriginalNotionalPercentageOutstanding Field
    /// </summary>/
    public sealed class LegOriginalNotionalPercentageOutstanding : DecimalField
    {
        public const int TAG = 2152;

        public LegOriginalNotionalPercentageOutstanding()
            : base(Tags.LegOriginalNotionalPercentageOutstanding) { }
        public LegOriginalNotionalPercentageOutstanding(Decimal val)
            : base(Tags.LegOriginalNotionalPercentageOutstanding, val) { }

    }


    /// <summary>
    /// LegAttachmentPoint Field
    /// </summary>/
    public sealed class LegAttachmentPoint : DecimalField
    {
        public const int TAG = 2153;

        public LegAttachmentPoint()
            : base(Tags.LegAttachmentPoint) { }
        public LegAttachmentPoint(Decimal val)
            : base(Tags.LegAttachmentPoint, val) { }

    }


    /// <summary>
    /// LegDetachmentPoint Field
    /// </summary>/
    public sealed class LegDetachmentPoint : DecimalField
    {
        public const int TAG = 2154;

        public LegDetachmentPoint()
            : base(Tags.LegDetachmentPoint) { }
        public LegDetachmentPoint(Decimal val)
            : base(Tags.LegDetachmentPoint, val) { }

    }


    /// <summary>
    /// LegObligationType Field
    /// </summary>/
    public sealed class LegObligationType : StringField
    {
        public const int TAG = 2155;

        public LegObligationType()
            : base(Tags.LegObligationType) { }
        public LegObligationType(string val)
            : base(Tags.LegObligationType, val) { }


        // Field Enumerations
        public const string BOND = "0";
        public const string CONVERTIBLE_BOND = "1";
        public const string MORTGAGE = "2";
        public const string LOAN = "3";
    }


    /// <summary>
    /// LegSwapSubClass Field
    /// </summary>/
    public sealed class LegSwapSubClass : StringField
    {
        public const int TAG = 2156;

        public LegSwapSubClass()
            : base(Tags.LegSwapSubClass) { }
        public LegSwapSubClass(string val)
            : base(Tags.LegSwapSubClass, val) { }


        // Field Enumerations
        public const string AMORTIZING_NOTIONAL_SCHEDULE = "AMTZ";
        public const string COMPOUNDING = "COMP";
        public const string CONSTANT_NOTIONAL_SCHEDULE = "CNST";
        public const string ACCRETING_NOTIONAL_SCHEDULE = "ACRT";
        public const string CUSTOM_NOTIONAL_SCHEDULE = "CUST";
    }


    /// <summary>
    /// LegNthToDefault Field
    /// </summary>/
    public sealed class LegNthToDefault : IntField
    {
        public const int TAG = 2157;

        public LegNthToDefault()
            : base(Tags.LegNthToDefault) { }
        public LegNthToDefault(int val)
            : base(Tags.LegNthToDefault, val) { }

    }


    /// <summary>
    /// LegMthToDefault Field
    /// </summary>/
    public sealed class LegMthToDefault : IntField
    {
        public const int TAG = 2158;

        public LegMthToDefault()
            : base(Tags.LegMthToDefault) { }
        public LegMthToDefault(int val)
            : base(Tags.LegMthToDefault, val) { }

    }


    /// <summary>
    /// LegSettledEntityMatrixSource Field
    /// </summary>/
    public sealed class LegSettledEntityMatrixSource : StringField
    {
        public const int TAG = 2159;

        public LegSettledEntityMatrixSource()
            : base(Tags.LegSettledEntityMatrixSource) { }
        public LegSettledEntityMatrixSource(string val)
            : base(Tags.LegSettledEntityMatrixSource, val) { }

    }


    /// <summary>
    /// LegSettledEntityMatrixPublicationDate Field
    /// </summary>/
    public sealed class LegSettledEntityMatrixPublicationDate : StringField
    {
        public const int TAG = 2160;

        public LegSettledEntityMatrixPublicationDate()
            : base(Tags.LegSettledEntityMatrixPublicationDate) { }
        public LegSettledEntityMatrixPublicationDate(string val)
            : base(Tags.LegSettledEntityMatrixPublicationDate, val) { }

    }


    /// <summary>
    /// LegCouponType Field
    /// </summary>/
    public sealed class LegCouponType : IntField
    {
        public const int TAG = 2161;

        public LegCouponType()
            : base(Tags.LegCouponType) { }
        public LegCouponType(int val)
            : base(Tags.LegCouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// LegTotalIssuedAmount Field
    /// </summary>/
    public sealed class LegTotalIssuedAmount : DecimalField
    {
        public const int TAG = 2162;

        public LegTotalIssuedAmount()
            : base(Tags.LegTotalIssuedAmount) { }
        public LegTotalIssuedAmount(Decimal val)
            : base(Tags.LegTotalIssuedAmount, val) { }

    }


    /// <summary>
    /// LegCouponFrequencyPeriod Field
    /// </summary>/
    public sealed class LegCouponFrequencyPeriod : IntField
    {
        public const int TAG = 2163;

        public LegCouponFrequencyPeriod()
            : base(Tags.LegCouponFrequencyPeriod) { }
        public LegCouponFrequencyPeriod(int val)
            : base(Tags.LegCouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegCouponFrequencyUnit Field
    /// </summary>/
    public sealed class LegCouponFrequencyUnit : StringField
    {
        public const int TAG = 2164;

        public LegCouponFrequencyUnit()
            : base(Tags.LegCouponFrequencyUnit) { }
        public LegCouponFrequencyUnit(string val)
            : base(Tags.LegCouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegCouponDayCount Field
    /// </summary>/
    public sealed class LegCouponDayCount : IntField
    {
        public const int TAG = 2165;

        public LegCouponDayCount()
            : base(Tags.LegCouponDayCount) { }
        public LegCouponDayCount(int val)
            : base(Tags.LegCouponDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegConvertibleBondEquityID Field
    /// </summary>/
    public sealed class LegConvertibleBondEquityID : StringField
    {
        public const int TAG = 2166;

        public LegConvertibleBondEquityID()
            : base(Tags.LegConvertibleBondEquityID) { }
        public LegConvertibleBondEquityID(string val)
            : base(Tags.LegConvertibleBondEquityID, val) { }

    }


    /// <summary>
    /// LegConvertibleBondEquityIDSource Field
    /// </summary>/
    public sealed class LegConvertibleBondEquityIDSource : StringField
    {
        public const int TAG = 2167;

        public LegConvertibleBondEquityIDSource()
            : base(Tags.LegConvertibleBondEquityIDSource) { }
        public LegConvertibleBondEquityIDSource(string val)
            : base(Tags.LegConvertibleBondEquityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegContractPriceRefMonth Field
    /// </summary>/
    public sealed class LegContractPriceRefMonth : StringField
    {
        public const int TAG = 2168;

        public LegContractPriceRefMonth()
            : base(Tags.LegContractPriceRefMonth) { }
        public LegContractPriceRefMonth(string val)
            : base(Tags.LegContractPriceRefMonth, val) { }

    }


    /// <summary>
    /// LegLienSeniority Field
    /// </summary>/
    public sealed class LegLienSeniority : IntField
    {
        public const int TAG = 2169;

        public LegLienSeniority()
            : base(Tags.LegLienSeniority) { }
        public LegLienSeniority(int val)
            : base(Tags.LegLienSeniority, val) { }


        // Field Enumerations
        public const int UNKNOWN = 0;
        public const int FIRST_LIEN = 1;
        public const int SECOND_LIEN = 2;
        public const int THIRD_LIEN = 3;
    }


    /// <summary>
    /// LegLoanFacility Field
    /// </summary>/
    public sealed class LegLoanFacility : IntField
    {
        public const int TAG = 2170;

        public LegLoanFacility()
            : base(Tags.LegLoanFacility) { }
        public LegLoanFacility(int val)
            : base(Tags.LegLoanFacility, val) { }


        // Field Enumerations
        public const int BRIDGE_LOAN = 0;
        public const int LETTER_OF_CREDIT = 1;
        public const int REVOLVING_LOAN = 2;
        public const int SWINGLINE_FUNDING = 3;
        public const int TERM_LOAN = 4;
        public const int TRADE_CLAIM = 5;
    }


    /// <summary>
    /// LegReferenceEntityType Field
    /// </summary>/
    public sealed class LegReferenceEntityType : IntField
    {
        public const int TAG = 2171;

        public LegReferenceEntityType()
            : base(Tags.LegReferenceEntityType) { }
        public LegReferenceEntityType(int val)
            : base(Tags.LegReferenceEntityType, val) { }


        // Field Enumerations
        public const int ASIAN = 1;
        public const int AUSTRALIAN_AND_NEW_ZEALAND = 2;
        public const int EUROPEAN_EMERGING_MARKETS = 3;
        public const int JAPANESE = 4;
        public const int NORTH_AMERICAN_HIGH_YIELD = 5;
        public const int NORTH_AMERICAN_INSURANCE = 6;
        public const int NORTH_AMERICAN_INVESTMENT_GRADE = 7;
        public const int SINGAPOREAN = 8;
        public const int WESTERN_EUROPEAN = 9;
        public const int WESTERN_EUROPEAN_INSURANCE = 10;
    }


    /// <summary>
    /// LegIndexSeries Field
    /// </summary>/
    public sealed class LegIndexSeries : IntField
    {
        public const int TAG = 2172;

        public LegIndexSeries()
            : base(Tags.LegIndexSeries) { }
        public LegIndexSeries(int val)
            : base(Tags.LegIndexSeries, val) { }

    }


    /// <summary>
    /// LegIndexAnnexVersion Field
    /// </summary>/
    public sealed class LegIndexAnnexVersion : IntField
    {
        public const int TAG = 2173;

        public LegIndexAnnexVersion()
            : base(Tags.LegIndexAnnexVersion) { }
        public LegIndexAnnexVersion(int val)
            : base(Tags.LegIndexAnnexVersion, val) { }

    }


    /// <summary>
    /// LegIndexAnnexDate Field
    /// </summary>/
    public sealed class LegIndexAnnexDate : StringField
    {
        public const int TAG = 2174;

        public LegIndexAnnexDate()
            : base(Tags.LegIndexAnnexDate) { }
        public LegIndexAnnexDate(string val)
            : base(Tags.LegIndexAnnexDate, val) { }

    }


    /// <summary>
    /// LegIndexAnnexSource Field
    /// </summary>/
    public sealed class LegIndexAnnexSource : StringField
    {
        public const int TAG = 2175;

        public LegIndexAnnexSource()
            : base(Tags.LegIndexAnnexSource) { }
        public LegIndexAnnexSource(string val)
            : base(Tags.LegIndexAnnexSource, val) { }

    }


    /// <summary>
    /// LegSettlRateIndex Field
    /// </summary>/
    public sealed class LegSettlRateIndex : StringField
    {
        public const int TAG = 2176;

        public LegSettlRateIndex()
            : base(Tags.LegSettlRateIndex) { }
        public LegSettlRateIndex(string val)
            : base(Tags.LegSettlRateIndex, val) { }

    }


    /// <summary>
    /// LegSettlRateIndexLocation Field
    /// </summary>/
    public sealed class LegSettlRateIndexLocation : StringField
    {
        public const int TAG = 2177;

        public LegSettlRateIndexLocation()
            : base(Tags.LegSettlRateIndexLocation) { }
        public LegSettlRateIndexLocation(string val)
            : base(Tags.LegSettlRateIndexLocation, val) { }

    }


    /// <summary>
    /// LegOptionExpirationDesc Field
    /// </summary>/
    public sealed class LegOptionExpirationDesc : StringField
    {
        public const int TAG = 2178;

        public LegOptionExpirationDesc()
            : base(Tags.LegOptionExpirationDesc) { }
        public LegOptionExpirationDesc(string val)
            : base(Tags.LegOptionExpirationDesc, val) { }

    }


    /// <summary>
    /// EncodedLegOptionExpirationDescLen Field
    /// </summary>/
    public sealed class EncodedLegOptionExpirationDescLen : IntField
    {
        public const int TAG = 2179;

        public EncodedLegOptionExpirationDescLen()
            : base(Tags.EncodedLegOptionExpirationDescLen) { }
        public EncodedLegOptionExpirationDescLen(int val)
            : base(Tags.EncodedLegOptionExpirationDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegOptionExpirationDesc Field
    /// </summary>/
    public sealed class EncodedLegOptionExpirationDesc : StringField
    {
        public const int TAG = 2180;

        public EncodedLegOptionExpirationDesc()
            : base(Tags.EncodedLegOptionExpirationDesc) { }
        public EncodedLegOptionExpirationDesc(string val)
            : base(Tags.EncodedLegOptionExpirationDesc, val) { }

    }


    /// <summary>
    /// LegStrikeMultiplier Field
    /// </summary>/
    public sealed class LegStrikeMultiplier : DecimalField
    {
        public const int TAG = 2181;

        public LegStrikeMultiplier()
            : base(Tags.LegStrikeMultiplier) { }
        public LegStrikeMultiplier(Decimal val)
            : base(Tags.LegStrikeMultiplier, val) { }

    }


    /// <summary>
    /// LegStrikeValue Field
    /// </summary>/
    public sealed class LegStrikeValue : DecimalField
    {
        public const int TAG = 2182;

        public LegStrikeValue()
            : base(Tags.LegStrikeValue) { }
        public LegStrikeValue(Decimal val)
            : base(Tags.LegStrikeValue, val) { }

    }


    /// <summary>
    /// LegStrikeUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStrikeUnitOfMeasure : StringField
    {
        public const int TAG = 2183;

        public LegStrikeUnitOfMeasure()
            : base(Tags.LegStrikeUnitOfMeasure) { }
        public LegStrikeUnitOfMeasure(string val)
            : base(Tags.LegStrikeUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegStrikeIndex Field
    /// </summary>/
    public sealed class LegStrikeIndex : StringField
    {
        public const int TAG = 2184;

        public LegStrikeIndex()
            : base(Tags.LegStrikeIndex) { }
        public LegStrikeIndex(string val)
            : base(Tags.LegStrikeIndex, val) { }

    }


    /// <summary>
    /// LegStrikeIndexSpread Field
    /// </summary>/
    public sealed class LegStrikeIndexSpread : DecimalField
    {
        public const int TAG = 2185;

        public LegStrikeIndexSpread()
            : base(Tags.LegStrikeIndexSpread) { }
        public LegStrikeIndexSpread(Decimal val)
            : base(Tags.LegStrikeIndexSpread, val) { }

    }


    /// <summary>
    /// LegStrikePriceDeterminationMethod Field
    /// </summary>/
    public sealed class LegStrikePriceDeterminationMethod : IntField
    {
        public const int TAG = 2186;

        public LegStrikePriceDeterminationMethod()
            : base(Tags.LegStrikePriceDeterminationMethod) { }
        public LegStrikePriceDeterminationMethod(int val)
            : base(Tags.LegStrikePriceDeterminationMethod, val) { }


        // Field Enumerations
        public const int FIXED_STRIKE = 1;
        public const int STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE = 2;
        public const int STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION = 3;
        public const int STRIKE_SET_TO_OPTIMAL_VALUE = 4;
    }


    /// <summary>
    /// LegStrikePriceBoundaryMethod Field
    /// </summary>/
    public sealed class LegStrikePriceBoundaryMethod : IntField
    {
        public const int TAG = 2187;

        public LegStrikePriceBoundaryMethod()
            : base(Tags.LegStrikePriceBoundaryMethod) { }
        public LegStrikePriceBoundaryMethod(int val)
            : base(Tags.LegStrikePriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY = 1;
        public const int LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 2;
        public const int EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY = 4;
        public const int GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY = 5;
    }


    /// <summary>
    /// LegStrikePriceBoundaryPrecision Field
    /// </summary>/
    public sealed class LegStrikePriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 2188;

        public LegStrikePriceBoundaryPrecision()
            : base(Tags.LegStrikePriceBoundaryPrecision) { }
        public LegStrikePriceBoundaryPrecision(Decimal val)
            : base(Tags.LegStrikePriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// LegUnderlyingPriceDeterminationMethod Field
    /// </summary>/
    public sealed class LegUnderlyingPriceDeterminationMethod : IntField
    {
        public const int TAG = 2189;

        public LegUnderlyingPriceDeterminationMethod()
            : base(Tags.LegUnderlyingPriceDeterminationMethod) { }
        public LegUnderlyingPriceDeterminationMethod(int val)
            : base(Tags.LegUnderlyingPriceDeterminationMethod, val) { }


        // Field Enumerations
        public const int REGULAR = 1;
        public const int SPECIAL_REFERENCE = 2;
        public const int OPTIMAL_VALUE = 3;
        public const int AVERAGE_VALUE = 4;
    }


    /// <summary>
    /// LegMinPriceIncrement Field
    /// </summary>/
    public sealed class LegMinPriceIncrement : DecimalField
    {
        public const int TAG = 2190;

        public LegMinPriceIncrement()
            : base(Tags.LegMinPriceIncrement) { }
        public LegMinPriceIncrement(Decimal val)
            : base(Tags.LegMinPriceIncrement, val) { }

    }


    /// <summary>
    /// LegMinPriceIncrementAmount Field
    /// </summary>/
    public sealed class LegMinPriceIncrementAmount : DecimalField
    {
        public const int TAG = 2191;

        public LegMinPriceIncrementAmount()
            : base(Tags.LegMinPriceIncrementAmount) { }
        public LegMinPriceIncrementAmount(Decimal val)
            : base(Tags.LegMinPriceIncrementAmount, val) { }

    }


    /// <summary>
    /// LegSettlMethod Field
    /// </summary>/
    public sealed class LegSettlMethod : StringField
    {
        public const int TAG = 2192;

        public LegSettlMethod()
            : base(Tags.LegSettlMethod) { }
        public LegSettlMethod(string val)
            : base(Tags.LegSettlMethod, val) { }


        // Field Enumerations
        public const string CASH_SETTLEMENT_REQUIRED = "C";
        public const string PHYSICAL_SETTLEMENT_REQUIRED = "P";
        public const string ELECTION_AT_EXERCISE = "E";
    }


    /// <summary>
    /// LegOptPayoutType Field
    /// </summary>/
    public sealed class LegOptPayoutType : IntField
    {
        public const int TAG = 2193;

        public LegOptPayoutType()
            : base(Tags.LegOptPayoutType) { }
        public LegOptPayoutType(int val)
            : base(Tags.LegOptPayoutType, val) { }


        // Field Enumerations
        public const int VANILLA = 1;
        public const int CAPPED = 2;
        public const int DIGITAL = 3;
        public const int ASIAN = 4;
        public const int BARRIER = 5;
        public const int DIGITAL_BARRIER = 6;
        public const int LOOKBACK = 7;
        public const int OTHER_PATH_DEPENDENT = 8;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegOptPayoutAmount Field
    /// </summary>/
    public sealed class LegOptPayoutAmount : DecimalField
    {
        public const int TAG = 2194;

        public LegOptPayoutAmount()
            : base(Tags.LegOptPayoutAmount) { }
        public LegOptPayoutAmount(Decimal val)
            : base(Tags.LegOptPayoutAmount, val) { }

    }


    /// <summary>
    /// LegPriceQuoteMethod Field
    /// </summary>/
    public sealed class LegPriceQuoteMethod : StringField
    {
        public const int TAG = 2195;

        public LegPriceQuoteMethod()
            : base(Tags.LegPriceQuoteMethod) { }
        public LegPriceQuoteMethod(string val)
            : base(Tags.LegPriceQuoteMethod, val) { }


        // Field Enumerations
        public const string STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL = "STD";
        public const string INDEX = "INX";
        public const string INTEREST_RATE_INDEX = "INT";
        public const string PERCENT_OF_PAR = "PCTPAR";
    }


    /// <summary>
    /// LegValuationMethod Field
    /// </summary>/
    public sealed class LegValuationMethod : StringField
    {
        public const int TAG = 2196;

        public LegValuationMethod()
            : base(Tags.LegValuationMethod) { }
        public LegValuationMethod(string val)
            : base(Tags.LegValuationMethod, val) { }


        // Field Enumerations
        public const string PREMIUM_STYLE = "EQTY";
        public const string FUTURES_STYLE_MARK_TO_MARKET = "FUT";
        public const string FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT = "FUTDA";
        public const string CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON = "CDS";
        public const string CDS_IN_DELIVERY = "CDSD";
    }


    /// <summary>
    /// LegValuationSource Field
    /// </summary>/
    public sealed class LegValuationSource : StringField
    {
        public const int TAG = 2197;

        public LegValuationSource()
            : base(Tags.LegValuationSource) { }
        public LegValuationSource(string val)
            : base(Tags.LegValuationSource, val) { }

    }


    /// <summary>
    /// LegValuationReferenceModel Field
    /// </summary>/
    public sealed class LegValuationReferenceModel : StringField
    {
        public const int TAG = 2198;

        public LegValuationReferenceModel()
            : base(Tags.LegValuationReferenceModel) { }
        public LegValuationReferenceModel(string val)
            : base(Tags.LegValuationReferenceModel, val) { }

    }


    /// <summary>
    /// LegListMethod Field
    /// </summary>/
    public sealed class LegListMethod : IntField
    {
        public const int TAG = 2199;

        public LegListMethod()
            : base(Tags.LegListMethod) { }
        public LegListMethod(int val)
            : base(Tags.LegListMethod, val) { }


        // Field Enumerations
        public const int PRE_LISTED_ONLY = 0;
        public const int USER_REQUESTED = 1;
    }


    /// <summary>
    /// LegCapPrice Field
    /// </summary>/
    public sealed class LegCapPrice : DecimalField
    {
        public const int TAG = 2200;

        public LegCapPrice()
            : base(Tags.LegCapPrice) { }
        public LegCapPrice(Decimal val)
            : base(Tags.LegCapPrice, val) { }

    }


    /// <summary>
    /// LegFloorPrice Field
    /// </summary>/
    public sealed class LegFloorPrice : DecimalField
    {
        public const int TAG = 2201;

        public LegFloorPrice()
            : base(Tags.LegFloorPrice) { }
        public LegFloorPrice(Decimal val)
            : base(Tags.LegFloorPrice, val) { }

    }


    /// <summary>
    /// LegFlexibleIndicator Field
    /// </summary>/
    public sealed class LegFlexibleIndicator : BooleanField
    {
        public const int TAG = 2202;

        public LegFlexibleIndicator()
            : base(Tags.LegFlexibleIndicator) { }
        public LegFlexibleIndicator(Boolean val)
            : base(Tags.LegFlexibleIndicator, val) { }

    }


    /// <summary>
    /// LegFlexProductEligibilityIndicator Field
    /// </summary>/
    public sealed class LegFlexProductEligibilityIndicator : BooleanField
    {
        public const int TAG = 2203;

        public LegFlexProductEligibilityIndicator()
            : base(Tags.LegFlexProductEligibilityIndicator) { }
        public LegFlexProductEligibilityIndicator(Boolean val)
            : base(Tags.LegFlexProductEligibilityIndicator, val) { }

    }


    /// <summary>
    /// LegComplexEventStartTime Field
    /// </summary>/
    public sealed class LegComplexEventStartTime : TimeOnlyField
    {
        public const int TAG = 2204;

        public LegComplexEventStartTime()
            : base(Tags.LegComplexEventStartTime) { }
        public LegComplexEventStartTime(DateTime val)
            : base(Tags.LegComplexEventStartTime, val) { }
        public LegComplexEventStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.LegComplexEventStartTime, val, showMilliseconds) { }
        public LegComplexEventStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.LegComplexEventStartTime, val, precision) { }

    }


    /// <summary>
    /// LegPositionLimit Field
    /// </summary>/
    public sealed class LegPositionLimit : IntField
    {
        public const int TAG = 2205;

        public LegPositionLimit()
            : base(Tags.LegPositionLimit) { }
        public LegPositionLimit(int val)
            : base(Tags.LegPositionLimit, val) { }

    }


    /// <summary>
    /// LegNTPositionLimit Field
    /// </summary>/
    public sealed class LegNTPositionLimit : IntField
    {
        public const int TAG = 2206;

        public LegNTPositionLimit()
            : base(Tags.LegNTPositionLimit) { }
        public LegNTPositionLimit(int val)
            : base(Tags.LegNTPositionLimit, val) { }

    }


    /// <summary>
    /// LegCPProgram Field
    /// </summary>/
    public sealed class LegCPProgram : IntField
    {
        public const int TAG = 2207;

        public LegCPProgram()
            : base(Tags.LegCPProgram) { }
        public LegCPProgram(int val)
            : base(Tags.LegCPProgram, val) { }


        // Field Enumerations
        public const int VAL_3_1 = 1;
        public const int VAL_4 = 2;
        public const int OTHER = 99;
        public const int VAL_3_3 = 3;
        public const int VAL_3_4 = 4;
        public const int VAL_3_5 = 5;
        public const int VAL_3_6 = 6;
        public const int VAL_3_7 = 7;
        public const int VAL_3_8 = 8;
    }


    /// <summary>
    /// LegCPRegType Field
    /// </summary>/
    public sealed class LegCPRegType : StringField
    {
        public const int TAG = 2208;

        public LegCPRegType()
            : base(Tags.LegCPRegType) { }
        public LegCPRegType(string val)
            : base(Tags.LegCPRegType, val) { }

    }


    /// <summary>
    /// LegShortSaleRestriction Field
    /// </summary>/
    public sealed class LegShortSaleRestriction : IntField
    {
        public const int TAG = 2209;

        public LegShortSaleRestriction()
            : base(Tags.LegShortSaleRestriction) { }
        public LegShortSaleRestriction(int val)
            : base(Tags.LegShortSaleRestriction, val) { }


        // Field Enumerations
        public const int NO_RESTRICTIONS = 0;
        public const int SECURITY_IS_NOT_SHORTABLE = 1;
        public const int SECURITY_NOT_SHORTABLE_AT_OR_BELOW_THE_BEST_BID = 2;
        public const int SECURITY_IS_NOT_SHORTABLE_WITHOUT_PRE_BORROW = 3;
    }


    /// <summary>
    /// AssetGroup Field
    /// </summary>/
    public sealed class AssetGroup : IntField
    {
        public const int TAG = 2210;

        public AssetGroup()
            : base(Tags.AssetGroup) { }
        public AssetGroup(int val)
            : base(Tags.AssetGroup, val) { }


        // Field Enumerations
        public const int FINANCIALS = 1;
        public const int COMMODITIES = 2;
        public const int ALTERNATIVE_INVESTMENTS = 3;
    }


    /// <summary>
    /// LegStrategyType Field
    /// </summary>/
    public sealed class LegStrategyType : StringField
    {
        public const int TAG = 2211;

        public LegStrategyType()
            : base(Tags.LegStrategyType) { }
        public LegStrategyType(string val)
            : base(Tags.LegStrategyType, val) { }


        // Field Enumerations
        public const string STRADDLE = "STD";
        public const string STRANGLE = "STG";
        public const string BUTTERFLY = "BF";
        public const string CONDOR = "CNDR";
        public const string CALLABLE_INVERSIBLE_SNOWBALL = "CISN";
        public const string OTHER = "OTHER";
    }


    /// <summary>
    /// LegCommonPricingIndicator Field
    /// </summary>/
    public sealed class LegCommonPricingIndicator : BooleanField
    {
        public const int TAG = 2212;

        public LegCommonPricingIndicator()
            : base(Tags.LegCommonPricingIndicator) { }
        public LegCommonPricingIndicator(Boolean val)
            : base(Tags.LegCommonPricingIndicator, val) { }

    }


    /// <summary>
    /// LegSettlDisruptionProvision Field
    /// </summary>/
    public sealed class LegSettlDisruptionProvision : IntField
    {
        public const int TAG = 2213;

        public LegSettlDisruptionProvision()
            : base(Tags.LegSettlDisruptionProvision) { }
        public LegSettlDisruptionProvision(int val)
            : base(Tags.LegSettlDisruptionProvision, val) { }


        // Field Enumerations
        public const int NEGOTIATION = 1;
        public const int CANCELLATION_AND_PAYMENT = 2;
    }


    /// <summary>
    /// LegInstrumentRoundingDirection Field
    /// </summary>/
    public sealed class LegInstrumentRoundingDirection : CharField
    {
        public const int TAG = 2214;

        public LegInstrumentRoundingDirection()
            : base(Tags.LegInstrumentRoundingDirection) { }
        public LegInstrumentRoundingDirection(char val)
            : base(Tags.LegInstrumentRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// LegInstrumentRoundingPrecision Field
    /// </summary>/
    public sealed class LegInstrumentRoundingPrecision : IntField
    {
        public const int TAG = 2215;

        public LegInstrumentRoundingPrecision()
            : base(Tags.LegInstrumentRoundingPrecision) { }
        public LegInstrumentRoundingPrecision(int val)
            : base(Tags.LegInstrumentRoundingPrecision, val) { }

    }


    /// <summary>
    /// MiscFeeRate Field
    /// </summary>/
    public sealed class MiscFeeRate : DecimalField
    {
        public const int TAG = 2216;

        public MiscFeeRate()
            : base(Tags.MiscFeeRate) { }
        public MiscFeeRate(Decimal val)
            : base(Tags.MiscFeeRate, val) { }

    }


    /// <summary>
    /// MiscFeeAmountDue Field
    /// </summary>/
    public sealed class MiscFeeAmountDue : DecimalField
    {
        public const int TAG = 2217;

        public MiscFeeAmountDue()
            : base(Tags.MiscFeeAmountDue) { }
        public MiscFeeAmountDue(Decimal val)
            : base(Tags.MiscFeeAmountDue, val) { }

    }


    /// <summary>
    /// NoLegComplexEvents Field
    /// </summary>/
    public sealed class NoLegComplexEvents : IntField
    {
        public const int TAG = 2218;

        public NoLegComplexEvents()
            : base(Tags.NoLegComplexEvents) { }
        public NoLegComplexEvents(int val)
            : base(Tags.NoLegComplexEvents, val) { }

    }


    /// <summary>
    /// LegComplexEventType Field
    /// </summary>/
    public sealed class LegComplexEventType : IntField
    {
        public const int TAG = 2219;

        public LegComplexEventType()
            : base(Tags.LegComplexEventType) { }
        public LegComplexEventType(int val)
            : base(Tags.LegComplexEventType, val) { }


        // Field Enumerations
        public const int CAPPED = 1;
        public const int TRIGGER = 2;
        public const int KNOCK_IN_UP = 3;
        public const int KNOCK_IN_DOWN = 4;
        public const int KNOCK_OUT_UP = 5;
        public const int KNOCK_OUT_DOWN = 6;
        public const int UNDERLYING = 7;
        public const int RESET_BARRIER = 8;
        public const int ROLLING_BARRIER = 9;
        public const int ONE_TOUCH = 10;
        public const int NO_TOUCH = 11;
        public const int DOUBLE_ONE_TOUCH = 12;
        public const int DOUBLE_NO_TOUCH = 13;
        public const int FOREIGN_EXCHANGE_COMPOSITE = 14;
        public const int FOREIGN_EXCHANGE_QUANTO = 15;
        public const int FOREIGN_EXCHANGE_CROSS_CURRENCY = 16;
        public const int STRIKE_SPREAD = 17;
        public const int CALENDAR_SPREAD = 18;
        public const int PRICE_OBSERVATION = 19;
        public const int PASS_THROUGH = 20;
        public const int STRIKE_SCHEDULE = 21;
        public const int EQUITY_VALUATION = 22;
        public const int DIVIDEND_VALUATION = 23;
    }


    /// <summary>
    /// LegComplexOptPayoutPaySide Field
    /// </summary>/
    public sealed class LegComplexOptPayoutPaySide : IntField
    {
        public const int TAG = 2220;

        public LegComplexOptPayoutPaySide()
            : base(Tags.LegComplexOptPayoutPaySide) { }
        public LegComplexOptPayoutPaySide(int val)
            : base(Tags.LegComplexOptPayoutPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegComplexOptPayoutReceiveSide Field
    /// </summary>/
    public sealed class LegComplexOptPayoutReceiveSide : IntField
    {
        public const int TAG = 2221;

        public LegComplexOptPayoutReceiveSide()
            : base(Tags.LegComplexOptPayoutReceiveSide) { }
        public LegComplexOptPayoutReceiveSide(int val)
            : base(Tags.LegComplexOptPayoutReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegComplexOptPayoutUnderlier Field
    /// </summary>/
    public sealed class LegComplexOptPayoutUnderlier : StringField
    {
        public const int TAG = 2222;

        public LegComplexOptPayoutUnderlier()
            : base(Tags.LegComplexOptPayoutUnderlier) { }
        public LegComplexOptPayoutUnderlier(string val)
            : base(Tags.LegComplexOptPayoutUnderlier, val) { }

    }


    /// <summary>
    /// LegComplexOptPayoutAmount Field
    /// </summary>/
    public sealed class LegComplexOptPayoutAmount : DecimalField
    {
        public const int TAG = 2223;

        public LegComplexOptPayoutAmount()
            : base(Tags.LegComplexOptPayoutAmount) { }
        public LegComplexOptPayoutAmount(Decimal val)
            : base(Tags.LegComplexOptPayoutAmount, val) { }

    }


    /// <summary>
    /// LegComplexOptPayoutPercentage Field
    /// </summary>/
    public sealed class LegComplexOptPayoutPercentage : DecimalField
    {
        public const int TAG = 2224;

        public LegComplexOptPayoutPercentage()
            : base(Tags.LegComplexOptPayoutPercentage) { }
        public LegComplexOptPayoutPercentage(Decimal val)
            : base(Tags.LegComplexOptPayoutPercentage, val) { }

    }


    /// <summary>
    /// LegComplexOptPayoutTime Field
    /// </summary>/
    public sealed class LegComplexOptPayoutTime : IntField
    {
        public const int TAG = 2225;

        public LegComplexOptPayoutTime()
            : base(Tags.LegComplexOptPayoutTime) { }
        public LegComplexOptPayoutTime(int val)
            : base(Tags.LegComplexOptPayoutTime, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int OPEN = 1;
        public const int OFFICIAL_SETTLEMENT = 2;
        public const int VALUATION_TIME = 3;
        public const int EXCHANGE_SETTLEMENT_TIME = 4;
        public const int DERIVATIVES_CLOSE = 5;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 6;
    }


    /// <summary>
    /// LegComplexOptPayoutCurrency Field
    /// </summary>/
    public sealed class LegComplexOptPayoutCurrency : StringField
    {
        public const int TAG = 2226;

        public LegComplexOptPayoutCurrency()
            : base(Tags.LegComplexOptPayoutCurrency) { }
        public LegComplexOptPayoutCurrency(string val)
            : base(Tags.LegComplexOptPayoutCurrency, val) { }

    }


    /// <summary>
    /// LegComplexEventPrice Field
    /// </summary>/
    public sealed class LegComplexEventPrice : DecimalField
    {
        public const int TAG = 2227;

        public LegComplexEventPrice()
            : base(Tags.LegComplexEventPrice) { }
        public LegComplexEventPrice(Decimal val)
            : base(Tags.LegComplexEventPrice, val) { }

    }


    /// <summary>
    /// LegComplexEventPricePercentage Field
    /// </summary>/
    public sealed class LegComplexEventPricePercentage : DecimalField
    {
        public const int TAG = 2228;

        public LegComplexEventPricePercentage()
            : base(Tags.LegComplexEventPricePercentage) { }
        public LegComplexEventPricePercentage(Decimal val)
            : base(Tags.LegComplexEventPricePercentage, val) { }

    }


    /// <summary>
    /// LegComplexEventPriceBoundaryMethod Field
    /// </summary>/
    public sealed class LegComplexEventPriceBoundaryMethod : IntField
    {
        public const int TAG = 2229;

        public LegComplexEventPriceBoundaryMethod()
            : base(Tags.LegComplexEventPriceBoundaryMethod) { }
        public LegComplexEventPriceBoundaryMethod(int val)
            : base(Tags.LegComplexEventPriceBoundaryMethod, val) { }


        // Field Enumerations
        public const int LESS_THAN_COMPLEXEVENTPRICE = 1;
        public const int LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 2;
        public const int EQUAL_TO_COMPLEXEVENTPRICE = 3;
        public const int GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE = 4;
        public const int GREATER_THAN_COMPLEXEVENTPRICE = 5;
    }


    /// <summary>
    /// LegComplexEventPriceBoundaryPrecision Field
    /// </summary>/
    public sealed class LegComplexEventPriceBoundaryPrecision : DecimalField
    {
        public const int TAG = 2230;

        public LegComplexEventPriceBoundaryPrecision()
            : base(Tags.LegComplexEventPriceBoundaryPrecision) { }
        public LegComplexEventPriceBoundaryPrecision(Decimal val)
            : base(Tags.LegComplexEventPriceBoundaryPrecision, val) { }

    }


    /// <summary>
    /// LegComplexEventPriceTimeType Field
    /// </summary>/
    public sealed class LegComplexEventPriceTimeType : IntField
    {
        public const int TAG = 2231;

        public LegComplexEventPriceTimeType()
            : base(Tags.LegComplexEventPriceTimeType) { }
        public LegComplexEventPriceTimeType(int val)
            : base(Tags.LegComplexEventPriceTimeType, val) { }


        // Field Enumerations
        public const int EXPIRATION = 1;
        public const int IMMEDIATE = 2;
        public const int SPECIFIED_DATE_TIME = 3;
        public const int CLOSE = 4;
        public const int OPEN = 5;
        public const int OFFICIAL_SETTLEMENT_PRICE = 6;
        public const int DERIVATIVES_CLOSE = 7;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 8;
    }


    /// <summary>
    /// LegComplexEventCondition Field
    /// </summary>/
    public sealed class LegComplexEventCondition : IntField
    {
        public const int TAG = 2232;

        public LegComplexEventCondition()
            : base(Tags.LegComplexEventCondition) { }
        public LegComplexEventCondition(int val)
            : base(Tags.LegComplexEventCondition, val) { }


        // Field Enumerations
        public const int AND = 1;
        public const int OR = 2;
    }


    /// <summary>
    /// LegComplexEventCurrencyOne Field
    /// </summary>/
    public sealed class LegComplexEventCurrencyOne : StringField
    {
        public const int TAG = 2233;

        public LegComplexEventCurrencyOne()
            : base(Tags.LegComplexEventCurrencyOne) { }
        public LegComplexEventCurrencyOne(string val)
            : base(Tags.LegComplexEventCurrencyOne, val) { }

    }


    /// <summary>
    /// LegComplexEventCurrencyTwo Field
    /// </summary>/
    public sealed class LegComplexEventCurrencyTwo : StringField
    {
        public const int TAG = 2234;

        public LegComplexEventCurrencyTwo()
            : base(Tags.LegComplexEventCurrencyTwo) { }
        public LegComplexEventCurrencyTwo(string val)
            : base(Tags.LegComplexEventCurrencyTwo, val) { }

    }


    /// <summary>
    /// LegComplexEventQuoteBasis Field
    /// </summary>/
    public sealed class LegComplexEventQuoteBasis : IntField
    {
        public const int TAG = 2235;

        public LegComplexEventQuoteBasis()
            : base(Tags.LegComplexEventQuoteBasis) { }
        public LegComplexEventQuoteBasis(int val)
            : base(Tags.LegComplexEventQuoteBasis, val) { }


        // Field Enumerations
        public const int CURRENCY_1_PER_CURRENCY_2 = 0;
        public const int CURRENCY_2_PER_CURRENCY_1 = 1;
    }


    /// <summary>
    /// LegComplexEventFixedFXRate Field
    /// </summary>/
    public sealed class LegComplexEventFixedFXRate : DecimalField
    {
        public const int TAG = 2236;

        public LegComplexEventFixedFXRate()
            : base(Tags.LegComplexEventFixedFXRate) { }
        public LegComplexEventFixedFXRate(Decimal val)
            : base(Tags.LegComplexEventFixedFXRate, val) { }

    }


    /// <summary>
    /// LegComplexEventDeterminationMethod Field
    /// </summary>/
    public sealed class LegComplexEventDeterminationMethod : StringField
    {
        public const int TAG = 2237;

        public LegComplexEventDeterminationMethod()
            : base(Tags.LegComplexEventDeterminationMethod) { }
        public LegComplexEventDeterminationMethod(string val)
            : base(Tags.LegComplexEventDeterminationMethod, val) { }

    }


    /// <summary>
    /// LegComplexEventCalculationAgent Field
    /// </summary>/
    public sealed class LegComplexEventCalculationAgent : IntField
    {
        public const int TAG = 2238;

        public LegComplexEventCalculationAgent()
            : base(Tags.LegComplexEventCalculationAgent) { }
        public LegComplexEventCalculationAgent(int val)
            : base(Tags.LegComplexEventCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// LegComplexEventStrikePrice Field
    /// </summary>/
    public sealed class LegComplexEventStrikePrice : DecimalField
    {
        public const int TAG = 2239;

        public LegComplexEventStrikePrice()
            : base(Tags.LegComplexEventStrikePrice) { }
        public LegComplexEventStrikePrice(Decimal val)
            : base(Tags.LegComplexEventStrikePrice, val) { }

    }


    /// <summary>
    /// LegComplexEventStrikeFactor Field
    /// </summary>/
    public sealed class LegComplexEventStrikeFactor : DecimalField
    {
        public const int TAG = 2240;

        public LegComplexEventStrikeFactor()
            : base(Tags.LegComplexEventStrikeFactor) { }
        public LegComplexEventStrikeFactor(Decimal val)
            : base(Tags.LegComplexEventStrikeFactor, val) { }

    }


    /// <summary>
    /// LegComplexEventStrikeNumberOfOptions Field
    /// </summary>/
    public sealed class LegComplexEventStrikeNumberOfOptions : IntField
    {
        public const int TAG = 2241;

        public LegComplexEventStrikeNumberOfOptions()
            : base(Tags.LegComplexEventStrikeNumberOfOptions) { }
        public LegComplexEventStrikeNumberOfOptions(int val)
            : base(Tags.LegComplexEventStrikeNumberOfOptions, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventsXIDRef Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventsXIDRef : StringField
    {
        public const int TAG = 2242;

        public LegComplexEventCreditEventsXIDRef()
            : base(Tags.LegComplexEventCreditEventsXIDRef) { }
        public LegComplexEventCreditEventsXIDRef(string val)
            : base(Tags.LegComplexEventCreditEventsXIDRef, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventNotifyingParty Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventNotifyingParty : IntField
    {
        public const int TAG = 2243;

        public LegComplexEventCreditEventNotifyingParty()
            : base(Tags.LegComplexEventCreditEventNotifyingParty) { }
        public LegComplexEventCreditEventNotifyingParty(int val)
            : base(Tags.LegComplexEventCreditEventNotifyingParty, val) { }


        // Field Enumerations
        public const int SELLER_NOTIFIES = 0;
        public const int BUYER_NOTIFIES = 1;
        public const int SELLER_OR_BUYER_NOTIFIES = 2;
    }


    /// <summary>
    /// LegComplexEventCreditEventBusinessCenter Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventBusinessCenter : StringField
    {
        public const int TAG = 2244;

        public LegComplexEventCreditEventBusinessCenter()
            : base(Tags.LegComplexEventCreditEventBusinessCenter) { }
        public LegComplexEventCreditEventBusinessCenter(string val)
            : base(Tags.LegComplexEventCreditEventBusinessCenter, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventStandardSources Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventStandardSources : BooleanField
    {
        public const int TAG = 2245;

        public LegComplexEventCreditEventStandardSources()
            : base(Tags.LegComplexEventCreditEventStandardSources) { }
        public LegComplexEventCreditEventStandardSources(Boolean val)
            : base(Tags.LegComplexEventCreditEventStandardSources, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventMinimumSources Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventMinimumSources : IntField
    {
        public const int TAG = 2246;

        public LegComplexEventCreditEventMinimumSources()
            : base(Tags.LegComplexEventCreditEventMinimumSources) { }
        public LegComplexEventCreditEventMinimumSources(int val)
            : base(Tags.LegComplexEventCreditEventMinimumSources, val) { }

    }


    /// <summary>
    /// LegComplexEventEndTime Field
    /// </summary>/
    public sealed class LegComplexEventEndTime : TimeOnlyField
    {
        public const int TAG = 2247;

        public LegComplexEventEndTime()
            : base(Tags.LegComplexEventEndTime) { }
        public LegComplexEventEndTime(DateTime val)
            : base(Tags.LegComplexEventEndTime, val) { }
        public LegComplexEventEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.LegComplexEventEndTime, val, showMilliseconds) { }
        public LegComplexEventEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.LegComplexEventEndTime, val, precision) { }

    }


    /// <summary>
    /// LegComplexEventXID Field
    /// </summary>/
    public sealed class LegComplexEventXID : StringField
    {
        public const int TAG = 2248;

        public LegComplexEventXID()
            : base(Tags.LegComplexEventXID) { }
        public LegComplexEventXID(string val)
            : base(Tags.LegComplexEventXID, val) { }

    }


    /// <summary>
    /// LegComplexEventXIDRef Field
    /// </summary>/
    public sealed class LegComplexEventXIDRef : StringField
    {
        public const int TAG = 2249;

        public LegComplexEventXIDRef()
            : base(Tags.LegComplexEventXIDRef) { }
        public LegComplexEventXIDRef(string val)
            : base(Tags.LegComplexEventXIDRef, val) { }

    }


    /// <summary>
    /// NoLegComplexEventDates Field
    /// </summary>/
    public sealed class NoLegComplexEventDates : IntField
    {
        public const int TAG = 2250;

        public NoLegComplexEventDates()
            : base(Tags.NoLegComplexEventDates) { }
        public NoLegComplexEventDates(int val)
            : base(Tags.NoLegComplexEventDates, val) { }

    }


    /// <summary>
    /// LegComplexEventStartDate Field
    /// </summary>/
    public sealed class LegComplexEventStartDate : DateOnlyField
    {
        public const int TAG = 2251;

        public LegComplexEventStartDate()
            : base(Tags.LegComplexEventStartDate) { }
        public LegComplexEventStartDate(DateTime val)
            : base(Tags.LegComplexEventStartDate, val) { }

    }


    /// <summary>
    /// LegComplexEventEndDate Field
    /// </summary>/
    public sealed class LegComplexEventEndDate : DateOnlyField
    {
        public const int TAG = 2252;

        public LegComplexEventEndDate()
            : base(Tags.LegComplexEventEndDate) { }
        public LegComplexEventEndDate(DateTime val)
            : base(Tags.LegComplexEventEndDate, val) { }

    }


    /// <summary>
    /// NoLegComplexEventTimes Field
    /// </summary>/
    public sealed class NoLegComplexEventTimes : IntField
    {
        public const int TAG = 2253;

        public NoLegComplexEventTimes()
            : base(Tags.NoLegComplexEventTimes) { }
        public NoLegComplexEventTimes(int val)
            : base(Tags.NoLegComplexEventTimes, val) { }

    }


    /// <summary>
    /// NoLegInstrumentParties Field
    /// </summary>/
    public sealed class NoLegInstrumentParties : IntField
    {
        public const int TAG = 2254;

        public NoLegInstrumentParties()
            : base(Tags.NoLegInstrumentParties) { }
        public NoLegInstrumentParties(int val)
            : base(Tags.NoLegInstrumentParties, val) { }

    }


    /// <summary>
    /// LegInstrumentPartyID Field
    /// </summary>/
    public sealed class LegInstrumentPartyID : StringField
    {
        public const int TAG = 2255;

        public LegInstrumentPartyID()
            : base(Tags.LegInstrumentPartyID) { }
        public LegInstrumentPartyID(string val)
            : base(Tags.LegInstrumentPartyID, val) { }

    }


    /// <summary>
    /// LegInstrumentPartyIDSource Field
    /// </summary>/
    public sealed class LegInstrumentPartyIDSource : CharField
    {
        public const int TAG = 2256;

        public LegInstrumentPartyIDSource()
            : base(Tags.LegInstrumentPartyIDSource) { }
        public LegInstrumentPartyIDSource(char val)
            : base(Tags.LegInstrumentPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// LegInstrumentPartyRole Field
    /// </summary>/
    public sealed class LegInstrumentPartyRole : IntField
    {
        public const int TAG = 2257;

        public LegInstrumentPartyRole()
            : base(Tags.LegInstrumentPartyRole) { }
        public LegInstrumentPartyRole(int val)
            : base(Tags.LegInstrumentPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoLegInstrumentPartySubIDs Field
    /// </summary>/
    public sealed class NoLegInstrumentPartySubIDs : IntField
    {
        public const int TAG = 2258;

        public NoLegInstrumentPartySubIDs()
            : base(Tags.NoLegInstrumentPartySubIDs) { }
        public NoLegInstrumentPartySubIDs(int val)
            : base(Tags.NoLegInstrumentPartySubIDs, val) { }

    }


    /// <summary>
    /// LegInstrumentPartySubID Field
    /// </summary>/
    public sealed class LegInstrumentPartySubID : StringField
    {
        public const int TAG = 2259;

        public LegInstrumentPartySubID()
            : base(Tags.LegInstrumentPartySubID) { }
        public LegInstrumentPartySubID(string val)
            : base(Tags.LegInstrumentPartySubID, val) { }

    }


    /// <summary>
    /// LegInstrumentPartySubIDType Field
    /// </summary>/
    public sealed class LegInstrumentPartySubIDType : IntField
    {
        public const int TAG = 2260;

        public LegInstrumentPartySubIDType()
            : base(Tags.LegInstrumentPartySubIDType) { }
        public LegInstrumentPartySubIDType(int val)
            : base(Tags.LegInstrumentPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// UnderlyingComplexOptPayoutPaySide Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutPaySide : IntField
    {
        public const int TAG = 2261;

        public UnderlyingComplexOptPayoutPaySide()
            : base(Tags.UnderlyingComplexOptPayoutPaySide) { }
        public UnderlyingComplexOptPayoutPaySide(int val)
            : base(Tags.UnderlyingComplexOptPayoutPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingComplexOptPayoutReceiveSide Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutReceiveSide : IntField
    {
        public const int TAG = 2262;

        public UnderlyingComplexOptPayoutReceiveSide()
            : base(Tags.UnderlyingComplexOptPayoutReceiveSide) { }
        public UnderlyingComplexOptPayoutReceiveSide(int val)
            : base(Tags.UnderlyingComplexOptPayoutReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingComplexOptPayoutUnderlier Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutUnderlier : StringField
    {
        public const int TAG = 2263;

        public UnderlyingComplexOptPayoutUnderlier()
            : base(Tags.UnderlyingComplexOptPayoutUnderlier) { }
        public UnderlyingComplexOptPayoutUnderlier(string val)
            : base(Tags.UnderlyingComplexOptPayoutUnderlier, val) { }

    }


    /// <summary>
    /// UnderlyingComplexOptPayoutPercentage Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutPercentage : DecimalField
    {
        public const int TAG = 2264;

        public UnderlyingComplexOptPayoutPercentage()
            : base(Tags.UnderlyingComplexOptPayoutPercentage) { }
        public UnderlyingComplexOptPayoutPercentage(Decimal val)
            : base(Tags.UnderlyingComplexOptPayoutPercentage, val) { }

    }


    /// <summary>
    /// UnderlyingComplexOptPayoutTime Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutTime : IntField
    {
        public const int TAG = 2265;

        public UnderlyingComplexOptPayoutTime()
            : base(Tags.UnderlyingComplexOptPayoutTime) { }
        public UnderlyingComplexOptPayoutTime(int val)
            : base(Tags.UnderlyingComplexOptPayoutTime, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int OPEN = 1;
        public const int OFFICIAL_SETTLEMENT = 2;
        public const int VALUATION_TIME = 3;
        public const int EXCHANGE_SETTLEMENT_TIME = 4;
        public const int DERIVATIVES_CLOSE = 5;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 6;
    }


    /// <summary>
    /// UnderlyingComplexOptPayoutCurrency Field
    /// </summary>/
    public sealed class UnderlyingComplexOptPayoutCurrency : StringField
    {
        public const int TAG = 2266;

        public UnderlyingComplexOptPayoutCurrency()
            : base(Tags.UnderlyingComplexOptPayoutCurrency) { }
        public UnderlyingComplexOptPayoutCurrency(string val)
            : base(Tags.UnderlyingComplexOptPayoutCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPricePercentage Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPricePercentage : DecimalField
    {
        public const int TAG = 2267;

        public UnderlyingComplexEventPricePercentage()
            : base(Tags.UnderlyingComplexEventPricePercentage) { }
        public UnderlyingComplexEventPricePercentage(Decimal val)
            : base(Tags.UnderlyingComplexEventPricePercentage, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCurrencyOne Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCurrencyOne : StringField
    {
        public const int TAG = 2268;

        public UnderlyingComplexEventCurrencyOne()
            : base(Tags.UnderlyingComplexEventCurrencyOne) { }
        public UnderlyingComplexEventCurrencyOne(string val)
            : base(Tags.UnderlyingComplexEventCurrencyOne, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCurrencyTwo Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCurrencyTwo : StringField
    {
        public const int TAG = 2269;

        public UnderlyingComplexEventCurrencyTwo()
            : base(Tags.UnderlyingComplexEventCurrencyTwo) { }
        public UnderlyingComplexEventCurrencyTwo(string val)
            : base(Tags.UnderlyingComplexEventCurrencyTwo, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventQuoteBasis Field
    /// </summary>/
    public sealed class UnderlyingComplexEventQuoteBasis : IntField
    {
        public const int TAG = 2270;

        public UnderlyingComplexEventQuoteBasis()
            : base(Tags.UnderlyingComplexEventQuoteBasis) { }
        public UnderlyingComplexEventQuoteBasis(int val)
            : base(Tags.UnderlyingComplexEventQuoteBasis, val) { }


        // Field Enumerations
        public const int CURRENCY_1_PER_CURRENCY_2 = 0;
        public const int CURRENCY_2_PER_CURRENCY_1 = 1;
    }


    /// <summary>
    /// UnderlyingComplexEventFixedFXRate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventFixedFXRate : DecimalField
    {
        public const int TAG = 2271;

        public UnderlyingComplexEventFixedFXRate()
            : base(Tags.UnderlyingComplexEventFixedFXRate) { }
        public UnderlyingComplexEventFixedFXRate(Decimal val)
            : base(Tags.UnderlyingComplexEventFixedFXRate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDeterminationMethod : StringField
    {
        public const int TAG = 2272;

        public UnderlyingComplexEventDeterminationMethod()
            : base(Tags.UnderlyingComplexEventDeterminationMethod) { }
        public UnderlyingComplexEventDeterminationMethod(string val)
            : base(Tags.UnderlyingComplexEventDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCalculationAgent Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCalculationAgent : IntField
    {
        public const int TAG = 2273;

        public UnderlyingComplexEventCalculationAgent()
            : base(Tags.UnderlyingComplexEventCalculationAgent) { }
        public UnderlyingComplexEventCalculationAgent(int val)
            : base(Tags.UnderlyingComplexEventCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// UnderlyingComplexEventStrikePrice Field
    /// </summary>/
    public sealed class UnderlyingComplexEventStrikePrice : DecimalField
    {
        public const int TAG = 2274;

        public UnderlyingComplexEventStrikePrice()
            : base(Tags.UnderlyingComplexEventStrikePrice) { }
        public UnderlyingComplexEventStrikePrice(Decimal val)
            : base(Tags.UnderlyingComplexEventStrikePrice, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventStrikeFactor Field
    /// </summary>/
    public sealed class UnderlyingComplexEventStrikeFactor : DecimalField
    {
        public const int TAG = 2275;

        public UnderlyingComplexEventStrikeFactor()
            : base(Tags.UnderlyingComplexEventStrikeFactor) { }
        public UnderlyingComplexEventStrikeFactor(Decimal val)
            : base(Tags.UnderlyingComplexEventStrikeFactor, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventStrikeNumberOfOptions Field
    /// </summary>/
    public sealed class UnderlyingComplexEventStrikeNumberOfOptions : IntField
    {
        public const int TAG = 2276;

        public UnderlyingComplexEventStrikeNumberOfOptions()
            : base(Tags.UnderlyingComplexEventStrikeNumberOfOptions) { }
        public UnderlyingComplexEventStrikeNumberOfOptions(int val)
            : base(Tags.UnderlyingComplexEventStrikeNumberOfOptions, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventsXIDRef Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventsXIDRef : StringField
    {
        public const int TAG = 2277;

        public UnderlyingComplexEventCreditEventsXIDRef()
            : base(Tags.UnderlyingComplexEventCreditEventsXIDRef) { }
        public UnderlyingComplexEventCreditEventsXIDRef(string val)
            : base(Tags.UnderlyingComplexEventCreditEventsXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventNotifyingParty Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventNotifyingParty : IntField
    {
        public const int TAG = 2278;

        public UnderlyingComplexEventCreditEventNotifyingParty()
            : base(Tags.UnderlyingComplexEventCreditEventNotifyingParty) { }
        public UnderlyingComplexEventCreditEventNotifyingParty(int val)
            : base(Tags.UnderlyingComplexEventCreditEventNotifyingParty, val) { }


        // Field Enumerations
        public const int SELLER_NOTIFIES = 0;
        public const int BUYER_NOTIFIES = 1;
        public const int SELLER_OR_BUYER_NOTIFIES = 2;
    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventBusinessCenter : StringField
    {
        public const int TAG = 2279;

        public UnderlyingComplexEventCreditEventBusinessCenter()
            : base(Tags.UnderlyingComplexEventCreditEventBusinessCenter) { }
        public UnderlyingComplexEventCreditEventBusinessCenter(string val)
            : base(Tags.UnderlyingComplexEventCreditEventBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventStandardSources Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventStandardSources : BooleanField
    {
        public const int TAG = 2280;

        public UnderlyingComplexEventCreditEventStandardSources()
            : base(Tags.UnderlyingComplexEventCreditEventStandardSources) { }
        public UnderlyingComplexEventCreditEventStandardSources(Boolean val)
            : base(Tags.UnderlyingComplexEventCreditEventStandardSources, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventMinimumSources Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventMinimumSources : IntField
    {
        public const int TAG = 2281;

        public UnderlyingComplexEventCreditEventMinimumSources()
            : base(Tags.UnderlyingComplexEventCreditEventMinimumSources) { }
        public UnderlyingComplexEventCreditEventMinimumSources(int val)
            : base(Tags.UnderlyingComplexEventCreditEventMinimumSources, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventXID Field
    /// </summary>/
    public sealed class UnderlyingComplexEventXID : StringField
    {
        public const int TAG = 2282;

        public UnderlyingComplexEventXID()
            : base(Tags.UnderlyingComplexEventXID) { }
        public UnderlyingComplexEventXID(string val)
            : base(Tags.UnderlyingComplexEventXID, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventXIDRef Field
    /// </summary>/
    public sealed class UnderlyingComplexEventXIDRef : StringField
    {
        public const int TAG = 2283;

        public UnderlyingComplexEventXIDRef()
            : base(Tags.UnderlyingComplexEventXIDRef) { }
        public UnderlyingComplexEventXIDRef(string val)
            : base(Tags.UnderlyingComplexEventXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRateIndex Field
    /// </summary>/
    public sealed class UnderlyingSettlRateIndex : StringField
    {
        public const int TAG = 2284;

        public UnderlyingSettlRateIndex()
            : base(Tags.UnderlyingSettlRateIndex) { }
        public UnderlyingSettlRateIndex(string val)
            : base(Tags.UnderlyingSettlRateIndex, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRateIndexLocation Field
    /// </summary>/
    public sealed class UnderlyingSettlRateIndexLocation : StringField
    {
        public const int TAG = 2285;

        public UnderlyingSettlRateIndexLocation()
            : base(Tags.UnderlyingSettlRateIndexLocation) { }
        public UnderlyingSettlRateIndexLocation(string val)
            : base(Tags.UnderlyingSettlRateIndexLocation, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExpirationDesc Field
    /// </summary>/
    public sealed class UnderlyingOptionExpirationDesc : StringField
    {
        public const int TAG = 2286;

        public UnderlyingOptionExpirationDesc()
            : base(Tags.UnderlyingOptionExpirationDesc) { }
        public UnderlyingOptionExpirationDesc(string val)
            : base(Tags.UnderlyingOptionExpirationDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingOptionExpirationDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingOptionExpirationDescLen : IntField
    {
        public const int TAG = 2287;

        public EncodedUnderlyingOptionExpirationDescLen()
            : base(Tags.EncodedUnderlyingOptionExpirationDescLen) { }
        public EncodedUnderlyingOptionExpirationDescLen(int val)
            : base(Tags.EncodedUnderlyingOptionExpirationDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingOptionExpirationDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingOptionExpirationDesc : StringField
    {
        public const int TAG = 2288;

        public EncodedUnderlyingOptionExpirationDesc()
            : base(Tags.EncodedUnderlyingOptionExpirationDesc) { }
        public EncodedUnderlyingOptionExpirationDesc(string val)
            : base(Tags.EncodedUnderlyingOptionExpirationDesc, val) { }

    }


    /// <summary>
    /// UnderlyingSwapSubClass Field
    /// </summary>/
    public sealed class UnderlyingSwapSubClass : StringField
    {
        public const int TAG = 2289;

        public UnderlyingSwapSubClass()
            : base(Tags.UnderlyingSwapSubClass) { }
        public UnderlyingSwapSubClass(string val)
            : base(Tags.UnderlyingSwapSubClass, val) { }


        // Field Enumerations
        public const string AMORTIZING_NOTIONAL_SCHEDULE = "AMTZ";
        public const string COMPOUNDING = "COMP";
        public const string CONSTANT_NOTIONAL_SCHEDULE = "CNST";
        public const string ACCRETING_NOTIONAL_SCHEDULE = "ACRT";
        public const string CUSTOM_NOTIONAL_SCHEDULE = "CUST";
    }


    /// <summary>
    /// UnderlyingStrikeUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStrikeUnitOfMeasure : StringField
    {
        public const int TAG = 2290;

        public UnderlyingStrikeUnitOfMeasure()
            : base(Tags.UnderlyingStrikeUnitOfMeasure) { }
        public UnderlyingStrikeUnitOfMeasure(string val)
            : base(Tags.UnderlyingStrikeUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingStrikeIndex Field
    /// </summary>/
    public sealed class UnderlyingStrikeIndex : StringField
    {
        public const int TAG = 2291;

        public UnderlyingStrikeIndex()
            : base(Tags.UnderlyingStrikeIndex) { }
        public UnderlyingStrikeIndex(string val)
            : base(Tags.UnderlyingStrikeIndex, val) { }

    }


    /// <summary>
    /// UnderlyingStrikeIndexSpread Field
    /// </summary>/
    public sealed class UnderlyingStrikeIndexSpread : DecimalField
    {
        public const int TAG = 2292;

        public UnderlyingStrikeIndexSpread()
            : base(Tags.UnderlyingStrikeIndexSpread) { }
        public UnderlyingStrikeIndexSpread(Decimal val)
            : base(Tags.UnderlyingStrikeIndexSpread, val) { }

    }


    /// <summary>
    /// UnderlyingValuationSource Field
    /// </summary>/
    public sealed class UnderlyingValuationSource : StringField
    {
        public const int TAG = 2293;

        public UnderlyingValuationSource()
            : base(Tags.UnderlyingValuationSource) { }
        public UnderlyingValuationSource(string val)
            : base(Tags.UnderlyingValuationSource, val) { }

    }


    /// <summary>
    /// UnderlyingValuationReferenceModel Field
    /// </summary>/
    public sealed class UnderlyingValuationReferenceModel : StringField
    {
        public const int TAG = 2294;

        public UnderlyingValuationReferenceModel()
            : base(Tags.UnderlyingValuationReferenceModel) { }
        public UnderlyingValuationReferenceModel(string val)
            : base(Tags.UnderlyingValuationReferenceModel, val) { }

    }


    /// <summary>
    /// UnderlyingStrategyType Field
    /// </summary>/
    public sealed class UnderlyingStrategyType : StringField
    {
        public const int TAG = 2295;

        public UnderlyingStrategyType()
            : base(Tags.UnderlyingStrategyType) { }
        public UnderlyingStrategyType(string val)
            : base(Tags.UnderlyingStrategyType, val) { }


        // Field Enumerations
        public const string STRADDLE = "STD";
        public const string STRANGLE = "STG";
        public const string BUTTERFLY = "BF";
        public const string CONDOR = "CNDR";
        public const string CALLABLE_INVERSIBLE_SNOWBALL = "CISN";
        public const string OTHER = "OTHER";
    }


    /// <summary>
    /// UnderlyingCommonPricingIndicator Field
    /// </summary>/
    public sealed class UnderlyingCommonPricingIndicator : BooleanField
    {
        public const int TAG = 2296;

        public UnderlyingCommonPricingIndicator()
            : base(Tags.UnderlyingCommonPricingIndicator) { }
        public UnderlyingCommonPricingIndicator(Boolean val)
            : base(Tags.UnderlyingCommonPricingIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingSettlDisruptionProvision Field
    /// </summary>/
    public sealed class UnderlyingSettlDisruptionProvision : IntField
    {
        public const int TAG = 2297;

        public UnderlyingSettlDisruptionProvision()
            : base(Tags.UnderlyingSettlDisruptionProvision) { }
        public UnderlyingSettlDisruptionProvision(int val)
            : base(Tags.UnderlyingSettlDisruptionProvision, val) { }


        // Field Enumerations
        public const int NEGOTIATION = 1;
        public const int CANCELLATION_AND_PAYMENT = 2;
    }


    /// <summary>
    /// UnderlyingInstrumentRoundingDirection Field
    /// </summary>/
    public sealed class UnderlyingInstrumentRoundingDirection : CharField
    {
        public const int TAG = 2298;

        public UnderlyingInstrumentRoundingDirection()
            : base(Tags.UnderlyingInstrumentRoundingDirection) { }
        public UnderlyingInstrumentRoundingDirection(char val)
            : base(Tags.UnderlyingInstrumentRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// UnderlyingInstrumentRoundingPrecision Field
    /// </summary>/
    public sealed class UnderlyingInstrumentRoundingPrecision : IntField
    {
        public const int TAG = 2299;

        public UnderlyingInstrumentRoundingPrecision()
            : base(Tags.UnderlyingInstrumentRoundingPrecision) { }
        public UnderlyingInstrumentRoundingPrecision(int val)
            : base(Tags.UnderlyingInstrumentRoundingPrecision, val) { }

    }


    /// <summary>
    /// AllocGrossTradeAmt Field
    /// </summary>/
    public sealed class AllocGrossTradeAmt : DecimalField
    {
        public const int TAG = 2300;

        public AllocGrossTradeAmt()
            : base(Tags.AllocGrossTradeAmt) { }
        public AllocGrossTradeAmt(Decimal val)
            : base(Tags.AllocGrossTradeAmt, val) { }

    }


    /// <summary>
    /// LastQtyChanged Field
    /// </summary>/
    public sealed class LastQtyChanged : DecimalField
    {
        public const int TAG = 2301;

        public LastQtyChanged()
            : base(Tags.LastQtyChanged) { }
        public LastQtyChanged(Decimal val)
            : base(Tags.LastQtyChanged, val) { }

    }


    /// <summary>
    /// TradeVersion Field
    /// </summary>/
    public sealed class TradeVersion : StringField
    {
        public const int TAG = 2302;

        public TradeVersion()
            : base(Tags.TradeVersion) { }
        public TradeVersion(string val)
            : base(Tags.TradeVersion, val) { }

    }


    /// <summary>
    /// HistoricalReportIndicator Field
    /// </summary>/
    public sealed class HistoricalReportIndicator : BooleanField
    {
        public const int TAG = 2303;

        public HistoricalReportIndicator()
            : base(Tags.HistoricalReportIndicator) { }
        public HistoricalReportIndicator(Boolean val)
            : base(Tags.HistoricalReportIndicator, val) { }

    }


    /// <summary>
    /// NoAssetAttributes Field
    /// </summary>/
    public sealed class NoAssetAttributes : IntField
    {
        public const int TAG = 2304;

        public NoAssetAttributes()
            : base(Tags.NoAssetAttributes) { }
        public NoAssetAttributes(int val)
            : base(Tags.NoAssetAttributes, val) { }

    }


    /// <summary>
    /// AssetAttributeType Field
    /// </summary>/
    public sealed class AssetAttributeType : StringField
    {
        public const int TAG = 2305;

        public AssetAttributeType()
            : base(Tags.AssetAttributeType) { }
        public AssetAttributeType(string val)
            : base(Tags.AssetAttributeType, val) { }

    }


    /// <summary>
    /// AssetAttributeValue Field
    /// </summary>/
    public sealed class AssetAttributeValue : StringField
    {
        public const int TAG = 2306;

        public AssetAttributeValue()
            : base(Tags.AssetAttributeValue) { }
        public AssetAttributeValue(string val)
            : base(Tags.AssetAttributeValue, val) { }

    }


    /// <summary>
    /// AssetAttributeLimit Field
    /// </summary>/
    public sealed class AssetAttributeLimit : StringField
    {
        public const int TAG = 2307;

        public AssetAttributeLimit()
            : base(Tags.AssetAttributeLimit) { }
        public AssetAttributeLimit(string val)
            : base(Tags.AssetAttributeLimit, val) { }

    }


    /// <summary>
    /// NoLegAssetAttributes Field
    /// </summary>/
    public sealed class NoLegAssetAttributes : IntField
    {
        public const int TAG = 2308;

        public NoLegAssetAttributes()
            : base(Tags.NoLegAssetAttributes) { }
        public NoLegAssetAttributes(int val)
            : base(Tags.NoLegAssetAttributes, val) { }

    }


    /// <summary>
    /// LegAssetAttributeType Field
    /// </summary>/
    public sealed class LegAssetAttributeType : StringField
    {
        public const int TAG = 2309;

        public LegAssetAttributeType()
            : base(Tags.LegAssetAttributeType) { }
        public LegAssetAttributeType(string val)
            : base(Tags.LegAssetAttributeType, val) { }

    }


    /// <summary>
    /// LegAssetAttributeValue Field
    /// </summary>/
    public sealed class LegAssetAttributeValue : StringField
    {
        public const int TAG = 2310;

        public LegAssetAttributeValue()
            : base(Tags.LegAssetAttributeValue) { }
        public LegAssetAttributeValue(string val)
            : base(Tags.LegAssetAttributeValue, val) { }

    }


    /// <summary>
    /// LegAssetAttributeLimit Field
    /// </summary>/
    public sealed class LegAssetAttributeLimit : StringField
    {
        public const int TAG = 2311;

        public LegAssetAttributeLimit()
            : base(Tags.LegAssetAttributeLimit) { }
        public LegAssetAttributeLimit(string val)
            : base(Tags.LegAssetAttributeLimit, val) { }

    }


    /// <summary>
    /// NoUnderlyingAssetAttributes Field
    /// </summary>/
    public sealed class NoUnderlyingAssetAttributes : IntField
    {
        public const int TAG = 2312;

        public NoUnderlyingAssetAttributes()
            : base(Tags.NoUnderlyingAssetAttributes) { }
        public NoUnderlyingAssetAttributes(int val)
            : base(Tags.NoUnderlyingAssetAttributes, val) { }

    }


    /// <summary>
    /// UnderlyingAssetAttributeType Field
    /// </summary>/
    public sealed class UnderlyingAssetAttributeType : StringField
    {
        public const int TAG = 2313;

        public UnderlyingAssetAttributeType()
            : base(Tags.UnderlyingAssetAttributeType) { }
        public UnderlyingAssetAttributeType(string val)
            : base(Tags.UnderlyingAssetAttributeType, val) { }

    }


    /// <summary>
    /// UnderlyingAssetAttributeValue Field
    /// </summary>/
    public sealed class UnderlyingAssetAttributeValue : StringField
    {
        public const int TAG = 2314;

        public UnderlyingAssetAttributeValue()
            : base(Tags.UnderlyingAssetAttributeValue) { }
        public UnderlyingAssetAttributeValue(string val)
            : base(Tags.UnderlyingAssetAttributeValue, val) { }

    }


    /// <summary>
    /// UnderlyingAssetAttributeLimit Field
    /// </summary>/
    public sealed class UnderlyingAssetAttributeLimit : StringField
    {
        public const int TAG = 2315;

        public UnderlyingAssetAttributeLimit()
            : base(Tags.UnderlyingAssetAttributeLimit) { }
        public UnderlyingAssetAttributeLimit(string val)
            : base(Tags.UnderlyingAssetAttributeLimit, val) { }

    }


    /// <summary>
    /// RiskLimitReportStatus Field
    /// </summary>/
    public sealed class RiskLimitReportStatus : IntField
    {
        public const int TAG = 2316;

        public RiskLimitReportStatus()
            : base(Tags.RiskLimitReportStatus) { }
        public RiskLimitReportStatus(int val)
            : base(Tags.RiskLimitReportStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
    }


    /// <summary>
    /// RiskLimitReportRejectReason Field
    /// </summary>/
    public sealed class RiskLimitReportRejectReason : IntField
    {
        public const int TAG = 2317;

        public RiskLimitReportRejectReason()
            : base(Tags.RiskLimitReportRejectReason) { }
        public RiskLimitReportRejectReason(int val)
            : base(Tags.RiskLimitReportRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_RISKLIMITREPORTID = 0;
        public const int UNKNOWN_PARTY = 1;
        public const int OTHER = 99;
    }


    /// <summary>
    /// RiskLimitCheckRequestID Field
    /// </summary>/
    public sealed class RiskLimitCheckRequestID : StringField
    {
        public const int TAG = 2318;

        public RiskLimitCheckRequestID()
            : base(Tags.RiskLimitCheckRequestID) { }
        public RiskLimitCheckRequestID(string val)
            : base(Tags.RiskLimitCheckRequestID, val) { }

    }


    /// <summary>
    /// RiskLimitCheckID Field
    /// </summary>/
    public sealed class RiskLimitCheckID : StringField
    {
        public const int TAG = 2319;

        public RiskLimitCheckID()
            : base(Tags.RiskLimitCheckID) { }
        public RiskLimitCheckID(string val)
            : base(Tags.RiskLimitCheckID, val) { }

    }


    /// <summary>
    /// RiskLimitCheckTransType Field
    /// </summary>/
    public sealed class RiskLimitCheckTransType : IntField
    {
        public const int TAG = 2320;

        public RiskLimitCheckTransType()
            : base(Tags.RiskLimitCheckTransType) { }
        public RiskLimitCheckTransType(int val)
            : base(Tags.RiskLimitCheckTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int CANCEL = 1;
        public const int REPLACE = 2;
    }


    /// <summary>
    /// RiskLimitCheckType Field
    /// </summary>/
    public sealed class RiskLimitCheckType : IntField
    {
        public const int TAG = 2321;

        public RiskLimitCheckType()
            : base(Tags.RiskLimitCheckType) { }
        public RiskLimitCheckType(int val)
            : base(Tags.RiskLimitCheckType, val) { }


        // Field Enumerations
        public const int SUBMIT = 0;
        public const int LIMIT_CONSUMED = 1;
    }


    /// <summary>
    /// RiskLimitCheckRequestRefID Field
    /// </summary>/
    public sealed class RiskLimitCheckRequestRefID : IntField
    {
        public const int TAG = 2322;

        public RiskLimitCheckRequestRefID()
            : base(Tags.RiskLimitCheckRequestRefID) { }
        public RiskLimitCheckRequestRefID(int val)
            : base(Tags.RiskLimitCheckRequestRefID, val) { }

    }


    /// <summary>
    /// RiskLimitCheckRequestType Field
    /// </summary>/
    public sealed class RiskLimitCheckRequestType : IntField
    {
        public const int TAG = 2323;

        public RiskLimitCheckRequestType()
            : base(Tags.RiskLimitCheckRequestType) { }
        public RiskLimitCheckRequestType(int val)
            : base(Tags.RiskLimitCheckRequestType, val) { }


        // Field Enumerations
        public const int ALL_OR_NONE = 0;
        public const int PARTIAL = 1;
    }


    /// <summary>
    /// RiskLimitCheckAmount Field
    /// </summary>/
    public sealed class RiskLimitCheckAmount : DecimalField
    {
        public const int TAG = 2324;

        public RiskLimitCheckAmount()
            : base(Tags.RiskLimitCheckAmount) { }
        public RiskLimitCheckAmount(Decimal val)
            : base(Tags.RiskLimitCheckAmount, val) { }

    }


    /// <summary>
    /// RiskLimitCheckRequestStatus Field
    /// </summary>/
    public sealed class RiskLimitCheckRequestStatus : IntField
    {
        public const int TAG = 2325;

        public RiskLimitCheckRequestStatus()
            : base(Tags.RiskLimitCheckRequestStatus) { }
        public RiskLimitCheckRequestStatus(int val)
            : base(Tags.RiskLimitCheckRequestStatus, val) { }


        // Field Enumerations
        public const int APPROVED = 0;
        public const int PARTIALLY_APPROVED = 1;
        public const int REJECTED = 2;
        public const int APPROVAL_PENDING = 3;
        public const int CANCELLED = 4;
    }


    /// <summary>
    /// RiskLimitCheckRequestResult Field
    /// </summary>/
    public sealed class RiskLimitCheckRequestResult : IntField
    {
        public const int TAG = 2326;

        public RiskLimitCheckRequestResult()
            : base(Tags.RiskLimitCheckRequestResult) { }
        public RiskLimitCheckRequestResult(int val)
            : base(Tags.RiskLimitCheckRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_PARTY = 1;
        public const int REQUESTED_AMOUNT_EXCEEDS_CREDIT_LIMIT = 2;
        public const int REQUESTED_AMOUNT_EXCEEDS_CLIP_SIZE_LIMIT = 3;
        public const int REQUEST_EXCEEDS_MAXIMUM_NOTIONAL_ORDER_AMOUNT = 4;
        public const int OTHER = 99;
    }


    /// <summary>
    /// RiskLimitApprovedAmount Field
    /// </summary>/
    public sealed class RiskLimitApprovedAmount : DecimalField
    {
        public const int TAG = 2327;

        public RiskLimitApprovedAmount()
            : base(Tags.RiskLimitApprovedAmount) { }
        public RiskLimitApprovedAmount(Decimal val)
            : base(Tags.RiskLimitApprovedAmount, val) { }

    }


    /// <summary>
    /// PartyActionRequestID Field
    /// </summary>/
    public sealed class PartyActionRequestID : StringField
    {
        public const int TAG = 2328;

        public PartyActionRequestID()
            : base(Tags.PartyActionRequestID) { }
        public PartyActionRequestID(string val)
            : base(Tags.PartyActionRequestID, val) { }

    }


    /// <summary>
    /// PartyActionType Field
    /// </summary>/
    public sealed class PartyActionType : IntField
    {
        public const int TAG = 2329;

        public PartyActionType()
            : base(Tags.PartyActionType) { }
        public PartyActionType(int val)
            : base(Tags.PartyActionType, val) { }


        // Field Enumerations
        public const int SUSPEND = 0;
        public const int HALT_TRADING = 1;
        public const int REINSTATE = 2;
    }


    /// <summary>
    /// ApplTestMessageIndicator Field
    /// </summary>/
    public sealed class ApplTestMessageIndicator : BooleanField
    {
        public const int TAG = 2330;

        public ApplTestMessageIndicator()
            : base(Tags.ApplTestMessageIndicator) { }
        public ApplTestMessageIndicator(Boolean val)
            : base(Tags.ApplTestMessageIndicator, val) { }

    }


    /// <summary>
    /// PartyActionReportID Field
    /// </summary>/
    public sealed class PartyActionReportID : StringField
    {
        public const int TAG = 2331;

        public PartyActionReportID()
            : base(Tags.PartyActionReportID) { }
        public PartyActionReportID(string val)
            : base(Tags.PartyActionReportID, val) { }

    }


    /// <summary>
    /// PartyActionResponse Field
    /// </summary>/
    public sealed class PartyActionResponse : IntField
    {
        public const int TAG = 2332;

        public PartyActionResponse()
            : base(Tags.PartyActionResponse) { }
        public PartyActionResponse(int val)
            : base(Tags.PartyActionResponse, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int COMPLETED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// PartyActionRejectReason Field
    /// </summary>/
    public sealed class PartyActionRejectReason : IntField
    {
        public const int TAG = 2333;

        public PartyActionRejectReason()
            : base(Tags.PartyActionRejectReason) { }
        public PartyActionRejectReason(int val)
            : base(Tags.PartyActionRejectReason, val) { }


        // Field Enumerations
        public const int INVALID_PARTY_OR_PARTIES = 0;
        public const int UNKNOWN_REQUESTING_PARTY = 1;
        public const int NOT_AUTHORIZED = 98;
        public const int OTHER = 99;
    }


    /// <summary>
    /// RefRiskLimitCheckID Field
    /// </summary>/
    public sealed class RefRiskLimitCheckID : StringField
    {
        public const int TAG = 2334;

        public RefRiskLimitCheckID()
            : base(Tags.RefRiskLimitCheckID) { }
        public RefRiskLimitCheckID(string val)
            : base(Tags.RefRiskLimitCheckID, val) { }

    }


    /// <summary>
    /// RefRiskLimitCheckIDType Field
    /// </summary>/
    public sealed class RefRiskLimitCheckIDType : IntField
    {
        public const int TAG = 2335;

        public RefRiskLimitCheckIDType()
            : base(Tags.RefRiskLimitCheckIDType) { }
        public RefRiskLimitCheckIDType(int val)
            : base(Tags.RefRiskLimitCheckIDType, val) { }


        // Field Enumerations
        public const int RISKLIMITREQUESTID = 0;
        public const int RISKLIMITCHECKID = 1;
        public const int OUT_OF_BAND_IDENTIFIER = 3;
    }


    /// <summary>
    /// RiskLimitVelocityPeriod Field
    /// </summary>/
    public sealed class RiskLimitVelocityPeriod : IntField
    {
        public const int TAG = 2336;

        public RiskLimitVelocityPeriod()
            : base(Tags.RiskLimitVelocityPeriod) { }
        public RiskLimitVelocityPeriod(int val)
            : base(Tags.RiskLimitVelocityPeriod, val) { }

    }


    /// <summary>
    /// RiskLimitVelocityUnit Field
    /// </summary>/
    public sealed class RiskLimitVelocityUnit : StringField
    {
        public const int TAG = 2337;

        public RiskLimitVelocityUnit()
            : base(Tags.RiskLimitVelocityUnit) { }
        public RiskLimitVelocityUnit(string val)
            : base(Tags.RiskLimitVelocityUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// RequestingPartyRoleQualifier Field
    /// </summary>/
    public sealed class RequestingPartyRoleQualifier : IntField
    {
        public const int TAG = 2338;

        public RequestingPartyRoleQualifier()
            : base(Tags.RequestingPartyRoleQualifier) { }
        public RequestingPartyRoleQualifier(int val)
            : base(Tags.RequestingPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// RiskLimitCheckModelType Field
    /// </summary>/
    public sealed class RiskLimitCheckModelType : IntField
    {
        public const int TAG = 2339;

        public RiskLimitCheckModelType()
            : base(Tags.RiskLimitCheckModelType) { }
        public RiskLimitCheckModelType(int val)
            : base(Tags.RiskLimitCheckModelType, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int PLUSONE_MODEL = 1;
        public const int PING_MODEL = 2;
        public const int PUSH_MODEL = 3;
    }


    /// <summary>
    /// EventMonthYear Field
    /// </summary>/
    public sealed class EventMonthYear : StringField
    {
        public const int TAG = 2340;

        public EventMonthYear()
            : base(Tags.EventMonthYear) { }
        public EventMonthYear(string val)
            : base(Tags.EventMonthYear, val) { }

    }


    /// <summary>
    /// LegEventMonthYear Field
    /// </summary>/
    public sealed class LegEventMonthYear : StringField
    {
        public const int TAG = 2341;

        public LegEventMonthYear()
            : base(Tags.LegEventMonthYear) { }
        public LegEventMonthYear(string val)
            : base(Tags.LegEventMonthYear, val) { }

    }


    /// <summary>
    /// UnderlyingEventMonthYear Field
    /// </summary>/
    public sealed class UnderlyingEventMonthYear : StringField
    {
        public const int TAG = 2342;

        public UnderlyingEventMonthYear()
            : base(Tags.UnderlyingEventMonthYear) { }
        public UnderlyingEventMonthYear(string val)
            : base(Tags.UnderlyingEventMonthYear, val) { }

    }


    /// <summary>
    /// RiskLimitCheckStatus Field
    /// </summary>/
    public sealed class RiskLimitCheckStatus : IntField
    {
        public const int TAG = 2343;

        public RiskLimitCheckStatus()
            : base(Tags.RiskLimitCheckStatus) { }
        public RiskLimitCheckStatus(int val)
            : base(Tags.RiskLimitCheckStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
        public const int CLAIM_REQUIRED = 2;
        public const int PRE_DEFINED_LIMIT_CHECK_SUCCEEDED = 3;
        public const int PRE_DEFINED_LIMIT_CHECK_FAILED = 4;
        public const int PRE_DEFINED_AUTO_ACCEPT_RULE_INVOKED = 5;
        public const int PRE_DEFINED_AUTO_REJECT_RULE_INVOKED = 6;
        public const int ACCEPTED_BY_CLEARING_FIRM = 7;
        public const int REJECTED_BY_CLEARING_FIRM = 8;
        public const int PENDING = 9;
        public const int ACCEPTED_BY_CREDIT_HUB = 10;
        public const int REJECTED_BY_CREDIT_HUB = 11;
        public const int PENDING_CREDIT_HUB_CHECK = 12;
        public const int ACCEPTED_BY_EXECUTION_VENUE = 13;
        public const int REJECTED_BY_EXECUTION_VENUE = 14;
    }


    /// <summary>
    /// SideRiskLimitCheckStatus Field
    /// </summary>/
    public sealed class SideRiskLimitCheckStatus : IntField
    {
        public const int TAG = 2344;

        public SideRiskLimitCheckStatus()
            : base(Tags.SideRiskLimitCheckStatus) { }
        public SideRiskLimitCheckStatus(int val)
            : base(Tags.SideRiskLimitCheckStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
        public const int CLAIM_REQUIRED = 2;
        public const int PRE_DEFINED_LIMIT_CHECK_SUCCEEDED = 3;
        public const int PRE_DEFINED_LIMIT_CHECK_FAILED = 4;
        public const int PRE_DEFINED_AUTO_ACCEPT_RULE_INVOKED = 5;
        public const int PRE_DEFINED_AUTO_REJECT_RULE_INVOKED = 6;
        public const int ACCEPTED_BY_CLEARING_FIRM = 7;
        public const int REJECTED_BY_CLEARING_FIRM = 8;
        public const int PENDING = 9;
        public const int ACCEPTED_BY_CREDIT_HUB = 10;
        public const int REJECTED_BY_CREDIT_HUB = 11;
        public const int PENDING_CREDIT_HUB_CHECK = 12;
        public const int ACCEPTED_BY_EXECUTION_VENUE = 13;
        public const int REJECTED_BY_EXECUTION_VENUE = 14;
    }


    /// <summary>
    /// NoEntitlementTypes Field
    /// </summary>/
    public sealed class NoEntitlementTypes : IntField
    {
        public const int TAG = 2345;

        public NoEntitlementTypes()
            : base(Tags.NoEntitlementTypes) { }
        public NoEntitlementTypes(int val)
            : base(Tags.NoEntitlementTypes, val) { }

    }


    /// <summary>
    /// LegMidPx Field
    /// </summary>/
    public sealed class LegMidPx : DecimalField
    {
        public const int TAG = 2346;

        public LegMidPx()
            : base(Tags.LegMidPx) { }
        public LegMidPx(Decimal val)
            : base(Tags.LegMidPx, val) { }

    }


    /// <summary>
    /// RegulatoryTransactionType Field
    /// </summary>/
    public sealed class RegulatoryTransactionType : IntField
    {
        public const int TAG = 2347;

        public RegulatoryTransactionType()
            : base(Tags.RegulatoryTransactionType) { }
        public RegulatoryTransactionType(int val)
            : base(Tags.RegulatoryTransactionType, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int SWAP_EXECUTION_FACILITY_1 = 1;
        public const int SWAP_EXECUTION_FACILITY_2 = 2;
    }


    /// <summary>
    /// LegAssetGroup Field
    /// </summary>/
    public sealed class LegAssetGroup : IntField
    {
        public const int TAG = 2348;

        public LegAssetGroup()
            : base(Tags.LegAssetGroup) { }
        public LegAssetGroup(int val)
            : base(Tags.LegAssetGroup, val) { }


        // Field Enumerations
        public const int FINANCIALS = 1;
        public const int COMMODITIES = 2;
        public const int ALTERNATIVE_INVESTMENTS = 3;
    }


    /// <summary>
    /// PricePrecision Field
    /// </summary>/
    public sealed class PricePrecision : IntField
    {
        public const int TAG = 2349;

        public PricePrecision()
            : base(Tags.PricePrecision) { }
        public PricePrecision(int val)
            : base(Tags.PricePrecision, val) { }

    }


    /// <summary>
    /// CollateralPortfolioID Field
    /// </summary>/
    public sealed class CollateralPortfolioID : StringField
    {
        public const int TAG = 2350;

        public CollateralPortfolioID()
            : base(Tags.CollateralPortfolioID) { }
        public CollateralPortfolioID(string val)
            : base(Tags.CollateralPortfolioID, val) { }

    }


    /// <summary>
    /// EncodedComplianceTextLen Field
    /// </summary>/
    public sealed class EncodedComplianceTextLen : IntField
    {
        public const int TAG = 2351;

        public EncodedComplianceTextLen()
            : base(Tags.EncodedComplianceTextLen) { }
        public EncodedComplianceTextLen(int val)
            : base(Tags.EncodedComplianceTextLen, val) { }

    }


    /// <summary>
    /// EncodedComplianceText Field
    /// </summary>/
    public sealed class EncodedComplianceText : StringField
    {
        public const int TAG = 2352;

        public EncodedComplianceText()
            : base(Tags.EncodedComplianceText) { }
        public EncodedComplianceText(string val)
            : base(Tags.EncodedComplianceText, val) { }

    }


    /// <summary>
    /// TradingUnitPeriodMultiplier Field
    /// </summary>/
    public sealed class TradingUnitPeriodMultiplier : IntField
    {
        public const int TAG = 2353;

        public TradingUnitPeriodMultiplier()
            : base(Tags.TradingUnitPeriodMultiplier) { }
        public TradingUnitPeriodMultiplier(int val)
            : base(Tags.TradingUnitPeriodMultiplier, val) { }

    }


    /// <summary>
    /// LegTradingUnitPeriodMultiplier Field
    /// </summary>/
    public sealed class LegTradingUnitPeriodMultiplier : IntField
    {
        public const int TAG = 2354;

        public LegTradingUnitPeriodMultiplier()
            : base(Tags.LegTradingUnitPeriodMultiplier) { }
        public LegTradingUnitPeriodMultiplier(int val)
            : base(Tags.LegTradingUnitPeriodMultiplier, val) { }

    }


    /// <summary>
    /// PartyRiskLimitStatus Field
    /// </summary>/
    public sealed class PartyRiskLimitStatus : IntField
    {
        public const int TAG = 2355;

        public PartyRiskLimitStatus()
            : base(Tags.PartyRiskLimitStatus) { }
        public PartyRiskLimitStatus(int val)
            : base(Tags.PartyRiskLimitStatus, val) { }


        // Field Enumerations
        public const int DISABLED = 0;
        public const int ENABLED = 1;
    }


    /// <summary>
    /// RemunerationIndicator Field
    /// </summary>/
    public sealed class RemunerationIndicator : IntField
    {
        public const int TAG = 2356;

        public RemunerationIndicator()
            : base(Tags.RemunerationIndicator) { }
        public RemunerationIndicator(int val)
            : base(Tags.RemunerationIndicator, val) { }


        // Field Enumerations
        public const int NO_REMUNERATION_PAID = 0;
        public const int REMUNERATION_PAID = 1;
    }


    /// <summary>
    /// LegTotalTradeQty Field
    /// </summary>/
    public sealed class LegTotalTradeQty : DecimalField
    {
        public const int TAG = 2357;

        public LegTotalTradeQty()
            : base(Tags.LegTotalTradeQty) { }
        public LegTotalTradeQty(Decimal val)
            : base(Tags.LegTotalTradeQty, val) { }

    }


    /// <summary>
    /// LegLastMultipliedQty Field
    /// </summary>/
    public sealed class LegLastMultipliedQty : DecimalField
    {
        public const int TAG = 2358;

        public LegLastMultipliedQty()
            : base(Tags.LegLastMultipliedQty) { }
        public LegLastMultipliedQty(Decimal val)
            : base(Tags.LegLastMultipliedQty, val) { }

    }


    /// <summary>
    /// LegTotalGrossTradeAmt Field
    /// </summary>/
    public sealed class LegTotalGrossTradeAmt : DecimalField
    {
        public const int TAG = 2359;

        public LegTotalGrossTradeAmt()
            : base(Tags.LegTotalGrossTradeAmt) { }
        public LegTotalGrossTradeAmt(Decimal val)
            : base(Tags.LegTotalGrossTradeAmt, val) { }

    }


    /// <summary>
    /// LegTotalTradeMultipliedQty Field
    /// </summary>/
    public sealed class LegTotalTradeMultipliedQty : DecimalField
    {
        public const int TAG = 2360;

        public LegTotalTradeMultipliedQty()
            : base(Tags.LegTotalTradeMultipliedQty) { }
        public LegTotalTradeMultipliedQty(Decimal val)
            : base(Tags.LegTotalTradeMultipliedQty, val) { }

    }


    /// <summary>
    /// CompressionGroupID Field
    /// </summary>/
    public sealed class CompressionGroupID : StringField
    {
        public const int TAG = 2361;

        public CompressionGroupID()
            : base(Tags.CompressionGroupID) { }
        public CompressionGroupID(string val)
            : base(Tags.CompressionGroupID, val) { }

    }


    /// <summary>
    /// SelfMatchPreventionID Field
    /// </summary>/
    public sealed class SelfMatchPreventionID : StringField
    {
        public const int TAG = 2362;

        public SelfMatchPreventionID()
            : base(Tags.SelfMatchPreventionID) { }
        public SelfMatchPreventionID(string val)
            : base(Tags.SelfMatchPreventionID, val) { }

    }


    /// <summary>
    /// UnderlyingTradingUnitPeriodMultiplier Field
    /// </summary>/
    public sealed class UnderlyingTradingUnitPeriodMultiplier : IntField
    {
        public const int TAG = 2363;

        public UnderlyingTradingUnitPeriodMultiplier()
            : base(Tags.UnderlyingTradingUnitPeriodMultiplier) { }
        public UnderlyingTradingUnitPeriodMultiplier(int val)
            : base(Tags.UnderlyingTradingUnitPeriodMultiplier, val) { }

    }


    /// <summary>
    /// PosReportAction Field
    /// </summary>/
    public sealed class PosReportAction : IntField
    {
        public const int TAG = 2364;

        public PosReportAction()
            : base(Tags.PosReportAction) { }
        public PosReportAction(int val)
            : base(Tags.PosReportAction, val) { }


        // Field Enumerations
        public const int NEW = 1;
        public const int REPLACE = 2;
        public const int CANCEL = 3;
        public const int REVERSE = 4;
    }


    /// <summary>
    /// SettlForwardPoints Field
    /// </summary>/
    public sealed class SettlForwardPoints : DecimalField
    {
        public const int TAG = 2365;

        public SettlForwardPoints()
            : base(Tags.SettlForwardPoints) { }
        public SettlForwardPoints(Decimal val)
            : base(Tags.SettlForwardPoints, val) { }

    }


    /// <summary>
    /// SettlPriceFxRateCalc Field
    /// </summary>/
    public sealed class SettlPriceFxRateCalc : CharField
    {
        public const int TAG = 2366;

        public SettlPriceFxRateCalc()
            : base(Tags.SettlPriceFxRateCalc) { }
        public SettlPriceFxRateCalc(char val)
            : base(Tags.SettlPriceFxRateCalc, val) { }


        // Field Enumerations
        public const char MULTIPLY = 'M';
        public const char DIVIDE = 'D';
    }


    /// <summary>
    /// TotalTradeQty Field
    /// </summary>/
    public sealed class TotalTradeQty : DecimalField
    {
        public const int TAG = 2367;

        public TotalTradeQty()
            : base(Tags.TotalTradeQty) { }
        public TotalTradeQty(Decimal val)
            : base(Tags.TotalTradeQty, val) { }

    }


    /// <summary>
    /// LastMultipliedQty Field
    /// </summary>/
    public sealed class LastMultipliedQty : DecimalField
    {
        public const int TAG = 2368;

        public LastMultipliedQty()
            : base(Tags.LastMultipliedQty) { }
        public LastMultipliedQty(Decimal val)
            : base(Tags.LastMultipliedQty, val) { }

    }


    /// <summary>
    /// TotalGrossTradeAmt Field
    /// </summary>/
    public sealed class TotalGrossTradeAmt : DecimalField
    {
        public const int TAG = 2369;

        public TotalGrossTradeAmt()
            : base(Tags.TotalGrossTradeAmt) { }
        public TotalGrossTradeAmt(Decimal val)
            : base(Tags.TotalGrossTradeAmt, val) { }

    }


    /// <summary>
    /// TotalTradeMultipliedQty Field
    /// </summary>/
    public sealed class TotalTradeMultipliedQty : DecimalField
    {
        public const int TAG = 2370;

        public TotalTradeMultipliedQty()
            : base(Tags.TotalTradeMultipliedQty) { }
        public TotalTradeMultipliedQty(Decimal val)
            : base(Tags.TotalTradeMultipliedQty, val) { }

    }


    /// <summary>
    /// EncodedTradeContinuationText Field
    /// </summary>/
    public sealed class EncodedTradeContinuationText : StringField
    {
        public const int TAG = 2371;

        public EncodedTradeContinuationText()
            : base(Tags.EncodedTradeContinuationText) { }
        public EncodedTradeContinuationText(string val)
            : base(Tags.EncodedTradeContinuationText, val) { }

    }


    /// <summary>
    /// EncodedTradeContinuationTextLen Field
    /// </summary>/
    public sealed class EncodedTradeContinuationTextLen : IntField
    {
        public const int TAG = 2372;

        public EncodedTradeContinuationTextLen()
            : base(Tags.EncodedTradeContinuationTextLen) { }
        public EncodedTradeContinuationTextLen(int val)
            : base(Tags.EncodedTradeContinuationTextLen, val) { }

    }


    /// <summary>
    /// IntraFirmTradeIndicator Field
    /// </summary>/
    public sealed class IntraFirmTradeIndicator : BooleanField
    {
        public const int TAG = 2373;

        public IntraFirmTradeIndicator()
            : base(Tags.IntraFirmTradeIndicator) { }
        public IntraFirmTradeIndicator(Boolean val)
            : base(Tags.IntraFirmTradeIndicator, val) { }

    }


    /// <summary>
    /// TradeContinuationText Field
    /// </summary>/
    public sealed class TradeContinuationText : StringField
    {
        public const int TAG = 2374;

        public TradeContinuationText()
            : base(Tags.TradeContinuationText) { }
        public TradeContinuationText(string val)
            : base(Tags.TradeContinuationText, val) { }

    }


    /// <summary>
    /// TaxonomyType Field
    /// </summary>/
    public sealed class TaxonomyType : CharField
    {
        public const int TAG = 2375;

        public TaxonomyType()
            : base(Tags.TaxonomyType) { }
        public TaxonomyType(char val)
            : base(Tags.TaxonomyType, val) { }


        // Field Enumerations
        public const char ISIN_OR_ALTERNATE_INSTRUMENT_IDENTIFIER_PLUS_CFI = 'I';
        public const char INTERIM_TAXONOMY = 'E';
    }


    /// <summary>
    /// PartyRoleQualifier Field
    /// </summary>/
    public sealed class PartyRoleQualifier : IntField
    {
        public const int TAG = 2376;

        public PartyRoleQualifier()
            : base(Tags.PartyRoleQualifier) { }
        public PartyRoleQualifier(int val)
            : base(Tags.PartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// DerivativeInstrumentPartyRoleQualifier Field
    /// </summary>/
    public sealed class DerivativeInstrumentPartyRoleQualifier : IntField
    {
        public const int TAG = 2377;

        public DerivativeInstrumentPartyRoleQualifier()
            : base(Tags.DerivativeInstrumentPartyRoleQualifier) { }
        public DerivativeInstrumentPartyRoleQualifier(int val)
            : base(Tags.DerivativeInstrumentPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// InstrumentPartyRoleQualifier Field
    /// </summary>/
    public sealed class InstrumentPartyRoleQualifier : IntField
    {
        public const int TAG = 2378;

        public InstrumentPartyRoleQualifier()
            : base(Tags.InstrumentPartyRoleQualifier) { }
        public InstrumentPartyRoleQualifier(int val)
            : base(Tags.InstrumentPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// LegInstrumentPartyRoleQualifier Field
    /// </summary>/
    public sealed class LegInstrumentPartyRoleQualifier : IntField
    {
        public const int TAG = 2379;

        public LegInstrumentPartyRoleQualifier()
            : base(Tags.LegInstrumentPartyRoleQualifier) { }
        public LegInstrumentPartyRoleQualifier(int val)
            : base(Tags.LegInstrumentPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// LegProvisionPartyRoleQualifier Field
    /// </summary>/
    public sealed class LegProvisionPartyRoleQualifier : IntField
    {
        public const int TAG = 2380;

        public LegProvisionPartyRoleQualifier()
            : base(Tags.LegProvisionPartyRoleQualifier) { }
        public LegProvisionPartyRoleQualifier(int val)
            : base(Tags.LegProvisionPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// Nested2PartyRoleQualifier Field
    /// </summary>/
    public sealed class Nested2PartyRoleQualifier : IntField
    {
        public const int TAG = 2381;

        public Nested2PartyRoleQualifier()
            : base(Tags.Nested2PartyRoleQualifier) { }
        public Nested2PartyRoleQualifier(int val)
            : base(Tags.Nested2PartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// Nested3PartyRoleQualifier Field
    /// </summary>/
    public sealed class Nested3PartyRoleQualifier : IntField
    {
        public const int TAG = 2382;

        public Nested3PartyRoleQualifier()
            : base(Tags.Nested3PartyRoleQualifier) { }
        public Nested3PartyRoleQualifier(int val)
            : base(Tags.Nested3PartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// Nested4PartyRoleQualifier Field
    /// </summary>/
    public sealed class Nested4PartyRoleQualifier : IntField
    {
        public const int TAG = 2383;

        public Nested4PartyRoleQualifier()
            : base(Tags.Nested4PartyRoleQualifier) { }
        public Nested4PartyRoleQualifier(int val)
            : base(Tags.Nested4PartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// NestedPartyRoleQualifier Field
    /// </summary>/
    public sealed class NestedPartyRoleQualifier : IntField
    {
        public const int TAG = 2384;

        public NestedPartyRoleQualifier()
            : base(Tags.NestedPartyRoleQualifier) { }
        public NestedPartyRoleQualifier(int val)
            : base(Tags.NestedPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// ProvisionPartyRoleQualifier Field
    /// </summary>/
    public sealed class ProvisionPartyRoleQualifier : IntField
    {
        public const int TAG = 2385;

        public ProvisionPartyRoleQualifier()
            : base(Tags.ProvisionPartyRoleQualifier) { }
        public ProvisionPartyRoleQualifier(int val)
            : base(Tags.ProvisionPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// RequestedPartyRoleQualifier Field
    /// </summary>/
    public sealed class RequestedPartyRoleQualifier : IntField
    {
        public const int TAG = 2386;

        public RequestedPartyRoleQualifier()
            : base(Tags.RequestedPartyRoleQualifier) { }
        public RequestedPartyRoleQualifier(int val)
            : base(Tags.RequestedPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// TradeContingency Field
    /// </summary>/
    public sealed class TradeContingency : IntField
    {
        public const int TAG = 2387;

        public TradeContingency()
            : base(Tags.TradeContingency) { }
        public TradeContingency(int val)
            : base(Tags.TradeContingency, val) { }


        // Field Enumerations
        public const int DOES_NOT_APPLY = 0;
        public const int CONTINGENT_TRADE = 1;
        public const int NON_CONTINGENT_TRADE = 2;
    }


    /// <summary>
    /// RootPartyRoleQualifier Field
    /// </summary>/
    public sealed class RootPartyRoleQualifier : IntField
    {
        public const int TAG = 2388;

        public RootPartyRoleQualifier()
            : base(Tags.RootPartyRoleQualifier) { }
        public RootPartyRoleQualifier(int val)
            : base(Tags.RootPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// SettlPartyRoleQualifier Field
    /// </summary>/
    public sealed class SettlPartyRoleQualifier : IntField
    {
        public const int TAG = 2389;

        public SettlPartyRoleQualifier()
            : base(Tags.SettlPartyRoleQualifier) { }
        public SettlPartyRoleQualifier(int val)
            : base(Tags.SettlPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// TradeConfirmationReferenceID Field
    /// </summary>/
    public sealed class TradeConfirmationReferenceID : StringField
    {
        public const int TAG = 2390;

        public TradeConfirmationReferenceID()
            : base(Tags.TradeConfirmationReferenceID) { }
        public TradeConfirmationReferenceID(string val)
            : base(Tags.TradeConfirmationReferenceID, val) { }

    }


    /// <summary>
    /// UnderlyingInstrumentPartyRoleQualifier Field
    /// </summary>/
    public sealed class UnderlyingInstrumentPartyRoleQualifier : IntField
    {
        public const int TAG = 2391;

        public UnderlyingInstrumentPartyRoleQualifier()
            : base(Tags.UnderlyingInstrumentPartyRoleQualifier) { }
        public UnderlyingInstrumentPartyRoleQualifier(int val)
            : base(Tags.UnderlyingInstrumentPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// AllocRefRiskLimitCheckID Field
    /// </summary>/
    public sealed class AllocRefRiskLimitCheckID : StringField
    {
        public const int TAG = 2392;

        public AllocRefRiskLimitCheckID()
            : base(Tags.AllocRefRiskLimitCheckID) { }
        public AllocRefRiskLimitCheckID(string val)
            : base(Tags.AllocRefRiskLimitCheckID, val) { }

    }


    /// <summary>
    /// AllocRefRiskLimitCheckIDType Field
    /// </summary>/
    public sealed class AllocRefRiskLimitCheckIDType : IntField
    {
        public const int TAG = 2393;

        public AllocRefRiskLimitCheckIDType()
            : base(Tags.AllocRefRiskLimitCheckIDType) { }
        public AllocRefRiskLimitCheckIDType(int val)
            : base(Tags.AllocRefRiskLimitCheckIDType, val) { }


        // Field Enumerations
        public const int RISKLIMITREQUESTID = 0;
        public const int RISKLIMITCHECKID = 1;
        public const int OUT_OF_BAND_IDENTIFIER = 3;
    }


    /// <summary>
    /// LimitUtilizationAmt Field
    /// </summary>/
    public sealed class LimitUtilizationAmt : DecimalField
    {
        public const int TAG = 2394;

        public LimitUtilizationAmt()
            : base(Tags.LimitUtilizationAmt) { }
        public LimitUtilizationAmt(Decimal val)
            : base(Tags.LimitUtilizationAmt, val) { }

    }


    /// <summary>
    /// LimitAmt Field
    /// </summary>/
    public sealed class LimitAmt : DecimalField
    {
        public const int TAG = 2395;

        public LimitAmt()
            : base(Tags.LimitAmt) { }
        public LimitAmt(Decimal val)
            : base(Tags.LimitAmt, val) { }

    }


    /// <summary>
    /// LimitRole Field
    /// </summary>/
    public sealed class LimitRole : IntField
    {
        public const int TAG = 2396;

        public LimitRole()
            : base(Tags.LimitRole) { }
        public LimitRole(int val)
            : base(Tags.LimitRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// RegulatoryTradeIDScope Field
    /// </summary>/
    public sealed class RegulatoryTradeIDScope : IntField
    {
        public const int TAG = 2397;

        public RegulatoryTradeIDScope()
            : base(Tags.RegulatoryTradeIDScope) { }
        public RegulatoryTradeIDScope(int val)
            : base(Tags.RegulatoryTradeIDScope, val) { }


        // Field Enumerations
        public const int CLEARING_MEMBER = 1;
        public const int CLIENT = 2;
    }


    /// <summary>
    /// SideRegulatoryTradeIDScope Field
    /// </summary>/
    public sealed class SideRegulatoryTradeIDScope : IntField
    {
        public const int TAG = 2398;

        public SideRegulatoryTradeIDScope()
            : base(Tags.SideRegulatoryTradeIDScope) { }
        public SideRegulatoryTradeIDScope(int val)
            : base(Tags.SideRegulatoryTradeIDScope, val) { }


        // Field Enumerations
        public const int CLEARING_MEMBER = 1;
        public const int CLIENT = 2;
    }


    /// <summary>
    /// AllocRegulatoryTradeIDScope Field
    /// </summary>/
    public sealed class AllocRegulatoryTradeIDScope : IntField
    {
        public const int TAG = 2399;

        public AllocRegulatoryTradeIDScope()
            : base(Tags.AllocRegulatoryTradeIDScope) { }
        public AllocRegulatoryTradeIDScope(int val)
            : base(Tags.AllocRegulatoryTradeIDScope, val) { }


        // Field Enumerations
        public const int CLEARING_MEMBER = 1;
        public const int CLIENT = 2;
    }


    /// <summary>
    /// EffectiveBusinessDate Field
    /// </summary>/
    public sealed class EffectiveBusinessDate : StringField
    {
        public const int TAG = 2400;

        public EffectiveBusinessDate()
            : base(Tags.EffectiveBusinessDate) { }
        public EffectiveBusinessDate(string val)
            : base(Tags.EffectiveBusinessDate, val) { }

    }


    /// <summary>
    /// ListManualOrderIndicator Field
    /// </summary>/
    public sealed class ListManualOrderIndicator : BooleanField
    {
        public const int TAG = 2401;

        public ListManualOrderIndicator()
            : base(Tags.ListManualOrderIndicator) { }
        public ListManualOrderIndicator(Boolean val)
            : base(Tags.ListManualOrderIndicator, val) { }

    }


    /// <summary>
    /// EntitlementSubType Field
    /// </summary>/
    public sealed class EntitlementSubType : IntField
    {
        public const int TAG = 2402;

        public EntitlementSubType()
            : base(Tags.EntitlementSubType) { }
        public EntitlementSubType(int val)
            : base(Tags.EntitlementSubType, val) { }


        // Field Enumerations
        public const int ORDER_ENTRY = 1;
        public const int HIT_LIFT = 2;
        public const int VIEW_INDICATIVE_PRICES = 3;
        public const int VIEW_EXECUTABLE_PRICES = 4;
        public const int SINGLE_QUOTE = 5;
        public const int STREAMING_QUOTES = 6;
        public const int SINGLE_BROKER = 7;
        public const int MULTI_BROKERS = 8;
    }


    /// <summary>
    /// QuoteModelType Field
    /// </summary>/
    public sealed class QuoteModelType : IntField
    {
        public const int TAG = 2403;

        public QuoteModelType()
            : base(Tags.QuoteModelType) { }
        public QuoteModelType(int val)
            : base(Tags.QuoteModelType, val) { }


        // Field Enumerations
        public const int QUOTE_ENTRY = 1;
        public const int QUOTE_MODIFICATION = 2;
    }


    /// <summary>
    /// ComplianceText Field
    /// </summary>/
    public sealed class ComplianceText : StringField
    {
        public const int TAG = 2404;

        public ComplianceText()
            : base(Tags.ComplianceText) { }
        public ComplianceText(string val)
            : base(Tags.ComplianceText, val) { }

    }


    /// <summary>
    /// ExecMethod Field
    /// </summary>/
    public sealed class ExecMethod : IntField
    {
        public const int TAG = 2405;

        public ExecMethod()
            : base(Tags.ExecMethod) { }
        public ExecMethod(int val)
            : base(Tags.ExecMethod, val) { }


        // Field Enumerations
        public const int UNDEFINED_UNSPECIFIED = 0;
        public const int MANUAL = 1;
        public const int AUTOMATED = 2;
        public const int VOICE_BROKERED = 3;
    }


    /// <summary>
    /// AllocRegulatoryLegRefID Field
    /// </summary>/
    public sealed class AllocRegulatoryLegRefID : StringField
    {
        public const int TAG = 2406;

        public AllocRegulatoryLegRefID()
            : base(Tags.AllocRegulatoryLegRefID) { }
        public AllocRegulatoryLegRefID(string val)
            : base(Tags.AllocRegulatoryLegRefID, val) { }

    }


    /// <summary>
    /// ComplexEventSpotRate Field
    /// </summary>/
    public sealed class ComplexEventSpotRate : DecimalField
    {
        public const int TAG = 2407;

        public ComplexEventSpotRate()
            : base(Tags.ComplexEventSpotRate) { }
        public ComplexEventSpotRate(Decimal val)
            : base(Tags.ComplexEventSpotRate, val) { }

    }


    /// <summary>
    /// ComplexEventForwardPoints Field
    /// </summary>/
    public sealed class ComplexEventForwardPoints : DecimalField
    {
        public const int TAG = 2408;

        public ComplexEventForwardPoints()
            : base(Tags.ComplexEventForwardPoints) { }
        public ComplexEventForwardPoints(Decimal val)
            : base(Tags.ComplexEventForwardPoints, val) { }

    }


    /// <summary>
    /// LegComplexEventSpotRate Field
    /// </summary>/
    public sealed class LegComplexEventSpotRate : DecimalField
    {
        public const int TAG = 2409;

        public LegComplexEventSpotRate()
            : base(Tags.LegComplexEventSpotRate) { }
        public LegComplexEventSpotRate(Decimal val)
            : base(Tags.LegComplexEventSpotRate, val) { }

    }


    /// <summary>
    /// LegComplexEventForwardPoints Field
    /// </summary>/
    public sealed class LegComplexEventForwardPoints : DecimalField
    {
        public const int TAG = 2410;

        public LegComplexEventForwardPoints()
            : base(Tags.LegComplexEventForwardPoints) { }
        public LegComplexEventForwardPoints(Decimal val)
            : base(Tags.LegComplexEventForwardPoints, val) { }

    }


    /// <summary>
    /// RegulatoryLegRefID Field
    /// </summary>/
    public sealed class RegulatoryLegRefID : StringField
    {
        public const int TAG = 2411;

        public RegulatoryLegRefID()
            : base(Tags.RegulatoryLegRefID) { }
        public RegulatoryLegRefID(string val)
            : base(Tags.RegulatoryLegRefID, val) { }

    }


    /// <summary>
    /// RateSourceReferemcePageHeading Field
    /// </summary>/
    public sealed class RateSourceReferemcePageHeading : StringField
    {
        public const int TAG = 2412;

        public RateSourceReferemcePageHeading()
            : base(Tags.RateSourceReferemcePageHeading) { }
        public RateSourceReferemcePageHeading(string val)
            : base(Tags.RateSourceReferemcePageHeading, val) { }

    }


    /// <summary>
    /// RelatedToSecurityID Field
    /// </summary>/
    public sealed class RelatedToSecurityID : StringField
    {
        public const int TAG = 2413;

        public RelatedToSecurityID()
            : base(Tags.RelatedToSecurityID) { }
        public RelatedToSecurityID(string val)
            : base(Tags.RelatedToSecurityID, val) { }

    }


    /// <summary>
    /// RelatedToSecurityIDSource Field
    /// </summary>/
    public sealed class RelatedToSecurityIDSource : StringField
    {
        public const int TAG = 2414;

        public RelatedToSecurityIDSource()
            : base(Tags.RelatedToSecurityIDSource) { }
        public RelatedToSecurityIDSource(string val)
            : base(Tags.RelatedToSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// RelatedToStreamXIDRef Field
    /// </summary>/
    public sealed class RelatedToStreamXIDRef : StringField
    {
        public const int TAG = 2415;

        public RelatedToStreamXIDRef()
            : base(Tags.RelatedToStreamXIDRef) { }
        public RelatedToStreamXIDRef(string val)
            : base(Tags.RelatedToStreamXIDRef, val) { }

    }


    /// <summary>
    /// SideRegulatoryLegRefID Field
    /// </summary>/
    public sealed class SideRegulatoryLegRefID : StringField
    {
        public const int TAG = 2416;

        public SideRegulatoryLegRefID()
            : base(Tags.SideRegulatoryLegRefID) { }
        public SideRegulatoryLegRefID(string val)
            : base(Tags.SideRegulatoryLegRefID, val) { }

    }


    /// <summary>
    /// RelatedToDividendPeriodXIDRef Field
    /// </summary>/
    public sealed class RelatedToDividendPeriodXIDRef : StringField
    {
        public const int TAG = 2417;

        public RelatedToDividendPeriodXIDRef()
            : base(Tags.RelatedToDividendPeriodXIDRef) { }
        public RelatedToDividendPeriodXIDRef(string val)
            : base(Tags.RelatedToDividendPeriodXIDRef, val) { }

    }


    /// <summary>
    /// FirmTradeEventID Field
    /// </summary>/
    public sealed class FirmTradeEventID : StringField
    {
        public const int TAG = 2418;

        public FirmTradeEventID()
            : base(Tags.FirmTradeEventID) { }
        public FirmTradeEventID(string val)
            : base(Tags.FirmTradeEventID, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventSpotRate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventSpotRate : DecimalField
    {
        public const int TAG = 2419;

        public UnderlyingComplexEventSpotRate()
            : base(Tags.UnderlyingComplexEventSpotRate) { }
        public UnderlyingComplexEventSpotRate(Decimal val)
            : base(Tags.UnderlyingComplexEventSpotRate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventForwardPoints Field
    /// </summary>/
    public sealed class UnderlyingComplexEventForwardPoints : DecimalField
    {
        public const int TAG = 2420;

        public UnderlyingComplexEventForwardPoints()
            : base(Tags.UnderlyingComplexEventForwardPoints) { }
        public UnderlyingComplexEventForwardPoints(Decimal val)
            : base(Tags.UnderlyingComplexEventForwardPoints, val) { }

    }


    /// <summary>
    /// FillRefID Field
    /// </summary>/
    public sealed class FillRefID : StringField
    {
        public const int TAG = 2421;

        public FillRefID()
            : base(Tags.FillRefID) { }
        public FillRefID(string val)
            : base(Tags.FillRefID, val) { }

    }


    /// <summary>
    /// OrderRequestID Field
    /// </summary>/
    public sealed class OrderRequestID : IntField
    {
        public const int TAG = 2422;

        public OrderRequestID()
            : base(Tags.OrderRequestID) { }
        public OrderRequestID(int val)
            : base(Tags.OrderRequestID, val) { }

    }


    /// <summary>
    /// MassOrderRequestID Field
    /// </summary>/
    public sealed class MassOrderRequestID : StringField
    {
        public const int TAG = 2423;

        public MassOrderRequestID()
            : base(Tags.MassOrderRequestID) { }
        public MassOrderRequestID(string val)
            : base(Tags.MassOrderRequestID, val) { }

    }


    /// <summary>
    /// MassOrderReportID Field
    /// </summary>/
    public sealed class MassOrderReportID : StringField
    {
        public const int TAG = 2424;

        public MassOrderReportID()
            : base(Tags.MassOrderReportID) { }
        public MassOrderReportID(string val)
            : base(Tags.MassOrderReportID, val) { }

    }


    /// <summary>
    /// MassOrderRequestStatus Field
    /// </summary>/
    public sealed class MassOrderRequestStatus : IntField
    {
        public const int TAG = 2425;

        public MassOrderRequestStatus()
            : base(Tags.MassOrderRequestStatus) { }
        public MassOrderRequestStatus(int val)
            : base(Tags.MassOrderRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 1;
        public const int ACCEPTED_WITH_ADDITIONAL_EVENTS = 2;
        public const int REJECTED = 3;
    }


    /// <summary>
    /// MassOrderRequestResult Field
    /// </summary>/
    public sealed class MassOrderRequestResult : IntField
    {
        public const int TAG = 2426;

        public MassOrderRequestResult()
            : base(Tags.MassOrderRequestResult) { }
        public MassOrderRequestResult(int val)
            : base(Tags.MassOrderRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int RESPONSE_LEVEL_NOT_SUPPORTED = 1;
        public const int INVALID_MARKET = 2;
        public const int INVALID_MARKET_SEGMENT = 3;
        public const int OTHER = 99;
    }


    /// <summary>
    /// OrderResponseLevel Field
    /// </summary>/
    public sealed class OrderResponseLevel : IntField
    {
        public const int TAG = 2427;

        public OrderResponseLevel()
            : base(Tags.OrderResponseLevel) { }
        public OrderResponseLevel(int val)
            : base(Tags.OrderResponseLevel, val) { }


        // Field Enumerations
        public const int NO_ACKNOWLEDGEMENT = 0;
        public const int MINIMUM_ACKNOWLEDGEMENT = 1;
        public const int ACKNOWLEDGE_EACH_ORDER = 2;
        public const int SUMMARY_ACKNOWLEDGEMENT = 3;
    }


    /// <summary>
    /// NoOrderEntries Field
    /// </summary>/
    public sealed class NoOrderEntries : IntField
    {
        public const int TAG = 2428;

        public NoOrderEntries()
            : base(Tags.NoOrderEntries) { }
        public NoOrderEntries(int val)
            : base(Tags.NoOrderEntries, val) { }

    }


    /// <summary>
    /// OrderEntryAction Field
    /// </summary>/
    public sealed class OrderEntryAction : CharField
    {
        public const int TAG = 2429;

        public OrderEntryAction()
            : base(Tags.OrderEntryAction) { }
        public OrderEntryAction(char val)
            : base(Tags.OrderEntryAction, val) { }


        // Field Enumerations
        public const char ADD = '1';
        public const char MODIFY = '2';
        public const char DELETE = '3';
        public const char SUSPEND = '4';
        public const char RELEASE = '5';
    }


    /// <summary>
    /// OrderEntryID Field
    /// </summary>/
    public sealed class OrderEntryID : IntField
    {
        public const int TAG = 2430;

        public OrderEntryID()
            : base(Tags.OrderEntryID) { }
        public OrderEntryID(int val)
            : base(Tags.OrderEntryID, val) { }

    }


    /// <summary>
    /// ExecTypeReason Field
    /// </summary>/
    public sealed class ExecTypeReason : IntField
    {
        public const int TAG = 2431;

        public ExecTypeReason()
            : base(Tags.ExecTypeReason) { }
        public ExecTypeReason(int val)
            : base(Tags.ExecTypeReason, val) { }


        // Field Enumerations
        public const int ORDER_ADDED_UPON_REQUEST = 1;
        public const int ORDER_REPLACED_UPON_REQUEST = 2;
        public const int ORDER_CANCELLED_UPON_REQUEST = 3;
        public const int UNSOLICITED_ORDER_CANCELLATION = 4;
        public const int NON_RESTING_ORDER_ADDED_UPON_REQUEST = 5;
        public const int ORDER_REPLACED_WITH_NON_RESTING_ORDER_UPON_REQUEST = 6;
        public const int TRIGGER_ORDER_REPLACED_UPON_REQUEST = 7;
        public const int SUSPENDED_ORDER_REPLACED_UPON_REQUEST = 8;
        public const int SUSPENDED_ORDER_CANCELED_UPON_REQUEST = 9;
        public const int ORDER_CANCELLATION_PENDING = 10;
        public const int PENDING_CANCELLATION_EXECUTED = 11;
        public const int RESTING_ORDER_TRIGGERED = 12;
        public const int SUSPENDED_ORDER_ACTIVATED = 13;
        public const int ACTIVE_ORDER_SUSPENDED = 14;
        public const int ORDER_EXPIRED = 15;
    }


    /// <summary>
    /// TotNoOrderEntries Field
    /// </summary>/
    public sealed class TotNoOrderEntries : IntField
    {
        public const int TAG = 2432;

        public TotNoOrderEntries()
            : base(Tags.TotNoOrderEntries) { }
        public TotNoOrderEntries(int val)
            : base(Tags.TotNoOrderEntries, val) { }

    }


    /// <summary>
    /// NoTargetPartySubIDs Field
    /// </summary>/
    public sealed class NoTargetPartySubIDs : IntField
    {
        public const int TAG = 2433;

        public NoTargetPartySubIDs()
            : base(Tags.NoTargetPartySubIDs) { }
        public NoTargetPartySubIDs(int val)
            : base(Tags.NoTargetPartySubIDs, val) { }

    }


    /// <summary>
    /// TargetPartySubID Field
    /// </summary>/
    public sealed class TargetPartySubID : StringField
    {
        public const int TAG = 2434;

        public TargetPartySubID()
            : base(Tags.TargetPartySubID) { }
        public TargetPartySubID(string val)
            : base(Tags.TargetPartySubID, val) { }

    }


    /// <summary>
    /// TargetPartySubIDType Field
    /// </summary>/
    public sealed class TargetPartySubIDType : IntField
    {
        public const int TAG = 2435;

        public TargetPartySubIDType()
            : base(Tags.TargetPartySubIDType) { }
        public TargetPartySubIDType(int val)
            : base(Tags.TargetPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// TransferInstructionID Field
    /// </summary>/
    public sealed class TransferInstructionID : StringField
    {
        public const int TAG = 2436;

        public TransferInstructionID()
            : base(Tags.TransferInstructionID) { }
        public TransferInstructionID(string val)
            : base(Tags.TransferInstructionID, val) { }

    }


    /// <summary>
    /// TransferID Field
    /// </summary>/
    public sealed class TransferID : StringField
    {
        public const int TAG = 2437;

        public TransferID()
            : base(Tags.TransferID) { }
        public TransferID(string val)
            : base(Tags.TransferID, val) { }

    }


    /// <summary>
    /// TransferReportID Field
    /// </summary>/
    public sealed class TransferReportID : StringField
    {
        public const int TAG = 2438;

        public TransferReportID()
            : base(Tags.TransferReportID) { }
        public TransferReportID(string val)
            : base(Tags.TransferReportID, val) { }

    }


    /// <summary>
    /// TransferTransType Field
    /// </summary>/
    public sealed class TransferTransType : IntField
    {
        public const int TAG = 2439;

        public TransferTransType()
            : base(Tags.TransferTransType) { }
        public TransferTransType(int val)
            : base(Tags.TransferTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int REPLACE = 1;
        public const int CANCEL = 2;
    }


    /// <summary>
    /// TransferType Field
    /// </summary>/
    public sealed class TransferType : IntField
    {
        public const int TAG = 2440;

        public TransferType()
            : base(Tags.TransferType) { }
        public TransferType(int val)
            : base(Tags.TransferType, val) { }


        // Field Enumerations
        public const int REQUEST_TRANSFER = 0;
        public const int ACCEPT_TRANSFER = 1;
        public const int DECLINE_TRANSFER = 2;
    }


    /// <summary>
    /// TransferScope Field
    /// </summary>/
    public sealed class TransferScope : IntField
    {
        public const int TAG = 2441;

        public TransferScope()
            : base(Tags.TransferScope) { }
        public TransferScope(int val)
            : base(Tags.TransferScope, val) { }


        // Field Enumerations
        public const int INTER_FIRM_TRANSFER = 0;
        public const int INTRA_FIRM_TRANSFER = 1;
        public const int CLEARING_MEMBER_TRADE_ASSIGNMENT = 2;
    }


    /// <summary>
    /// TransferStatus Field
    /// </summary>/
    public sealed class TransferStatus : IntField
    {
        public const int TAG = 2442;

        public TransferStatus()
            : base(Tags.TransferStatus) { }
        public TransferStatus(int val)
            : base(Tags.TransferStatus, val) { }


        // Field Enumerations
        public const int RECEIVED = 0;
        public const int REJECTED_BY_INTERMEDIARY = 1;
        public const int ACCEPT_PENDING = 2;
        public const int ACCEPTED = 3;
        public const int DECLINED = 4;
        public const int CANCELLED = 5;
    }


    /// <summary>
    /// TransferRejectReason Field
    /// </summary>/
    public sealed class TransferRejectReason : IntField
    {
        public const int TAG = 2443;

        public TransferRejectReason()
            : base(Tags.TransferRejectReason) { }
        public TransferRejectReason(int val)
            : base(Tags.TransferRejectReason, val) { }


        // Field Enumerations
        public const int SUCCESS = 0;
        public const int INVALID_PARTY = 1;
        public const int UNKNOWN_INSTRUMENT = 2;
        public const int NOT_AUTHORIZED_TO_SUBMIT_TRANSFERS = 3;
        public const int UNKNOWN_POSITION = 4;
        public const int OTHER = 99;
    }


    /// <summary>
    /// TransferReportType Field
    /// </summary>/
    public sealed class TransferReportType : IntField
    {
        public const int TAG = 2444;

        public TransferReportType()
            : base(Tags.TransferReportType) { }
        public TransferReportType(int val)
            : base(Tags.TransferReportType, val) { }


        // Field Enumerations
        public const int SUBMIT = 0;
        public const int ALLEGED = 1;
    }


    /// <summary>
    /// AggressorTime Field
    /// </summary>/
    public sealed class AggressorTime : DateTimeField
    {
        public const int TAG = 2445;

        public AggressorTime()
            : base(Tags.AggressorTime) { }
        public AggressorTime(DateTime val)
            : base(Tags.AggressorTime, val) { }
        public AggressorTime(DateTime val, bool showMilliseconds)
            : base(Tags.AggressorTime, val, showMilliseconds) { }
        public AggressorTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.AggressorTime, val, precision) { }

    }


    /// <summary>
    /// AggressorSide Field
    /// </summary>/
    public sealed class AggressorSide : CharField
    {
        public const int TAG = 2446;

        public AggressorSide()
            : base(Tags.AggressorSide) { }
        public AggressorSide(char val)
            : base(Tags.AggressorSide, val) { }


        // Field Enumerations
        public const char BUY = '1';
        public const char SELL = '2';
        public const char BUY_MINUS = '3';
        public const char SELL_PLUS = '4';
        public const char SELL_SHORT = '5';
        public const char SELL_SHORT_EXEMPT = '6';
        public const char UNDISCLOSED = '7';
        public const char CROSS = '8';
        public const char CROSS_SHORT = '9';
        public const char CROSS_SHORT_EXEMPT = 'A';
        public const char AS_DEFINED = 'B';
        public const char OPPOSITE = 'C';
        public const char SUBSCRIBE = 'D';
        public const char REDEEM = 'E';
        public const char LEND = 'F';
        public const char BORROW = 'G';
        public const char SELL_UNDISCLOSED = 'H';
    }


    /// <summary>
    /// FastMarketIndicator Field
    /// </summary>/
    public sealed class FastMarketIndicator : BooleanField
    {
        public const int TAG = 2447;

        public FastMarketIndicator()
            : base(Tags.FastMarketIndicator) { }
        public FastMarketIndicator(Boolean val)
            : base(Tags.FastMarketIndicator, val) { }

    }


    /// <summary>
    /// LinkageHandlingIndicator Field
    /// </summary>/
    public sealed class LinkageHandlingIndicator : BooleanField
    {
        public const int TAG = 2448;

        public LinkageHandlingIndicator()
            : base(Tags.LinkageHandlingIndicator) { }
        public LinkageHandlingIndicator(Boolean val)
            : base(Tags.LinkageHandlingIndicator, val) { }

    }


    /// <summary>
    /// NumberOfBuyOrders Field
    /// </summary>/
    public sealed class NumberOfBuyOrders : IntField
    {
        public const int TAG = 2449;

        public NumberOfBuyOrders()
            : base(Tags.NumberOfBuyOrders) { }
        public NumberOfBuyOrders(int val)
            : base(Tags.NumberOfBuyOrders, val) { }

    }


    /// <summary>
    /// NumberOfSellOrders Field
    /// </summary>/
    public sealed class NumberOfSellOrders : IntField
    {
        public const int TAG = 2450;

        public NumberOfSellOrders()
            : base(Tags.NumberOfSellOrders) { }
        public NumberOfSellOrders(int val)
            : base(Tags.NumberOfSellOrders, val) { }

    }


    /// <summary>
    /// SettlPriceDeterminationMethod Field
    /// </summary>/
    public sealed class SettlPriceDeterminationMethod : IntField
    {
        public const int TAG = 2451;

        public SettlPriceDeterminationMethod()
            : base(Tags.SettlPriceDeterminationMethod) { }
        public SettlPriceDeterminationMethod(int val)
            : base(Tags.SettlPriceDeterminationMethod, val) { }

    }


    /// <summary>
    /// MDStatisticReqID Field
    /// </summary>/
    public sealed class MDStatisticReqID : StringField
    {
        public const int TAG = 2452;

        public MDStatisticReqID()
            : base(Tags.MDStatisticReqID) { }
        public MDStatisticReqID(string val)
            : base(Tags.MDStatisticReqID, val) { }

    }


    /// <summary>
    /// MDStatisticRptID Field
    /// </summary>/
    public sealed class MDStatisticRptID : StringField
    {
        public const int TAG = 2453;

        public MDStatisticRptID()
            : base(Tags.MDStatisticRptID) { }
        public MDStatisticRptID(string val)
            : base(Tags.MDStatisticRptID, val) { }

    }


    /// <summary>
    /// MDStatisticName Field
    /// </summary>/
    public sealed class MDStatisticName : StringField
    {
        public const int TAG = 2454;

        public MDStatisticName()
            : base(Tags.MDStatisticName) { }
        public MDStatisticName(string val)
            : base(Tags.MDStatisticName, val) { }

    }


    /// <summary>
    /// MDStatisticDesc Field
    /// </summary>/
    public sealed class MDStatisticDesc : StringField
    {
        public const int TAG = 2455;

        public MDStatisticDesc()
            : base(Tags.MDStatisticDesc) { }
        public MDStatisticDesc(string val)
            : base(Tags.MDStatisticDesc, val) { }

    }


    /// <summary>
    /// MDStatisticType Field
    /// </summary>/
    public sealed class MDStatisticType : IntField
    {
        public const int TAG = 2456;

        public MDStatisticType()
            : base(Tags.MDStatisticType) { }
        public MDStatisticType(int val)
            : base(Tags.MDStatisticType, val) { }


        // Field Enumerations
        public const int COUNT = 1;
        public const int AVERAGE_VOLUME = 2;
        public const int TOTAL_VOLUME = 3;
        public const int DISTRIBUTION = 4;
        public const int RATIO = 5;
        public const int LIQUIDITY = 6;
        public const int VOLUME_WEIGHTED_AVERAGE_PRICE = 7;
        public const int VOLATILITY = 8;
        public const int DURATION = 9;
        public const int TICK = 10;
        public const int AVERAGE_VALUE = 11;
        public const int TOTAL_VALUE = 12;
        public const int HIGH = 13;
        public const int LOW = 14;
        public const int MIDPOINT = 15;
        public const int FIRST = 16;
        public const int LAST = 17;
        public const int FINAL = 18;
        public const int EXCHANGE_BEST = 19;
        public const int EXCHANGE_BEST_WITH_VOLUME = 20;
        public const int CONSOLIDATED_BEST = 21;
        public const int CONSOLIDATED_BEST_WITH_VOLUME = 22;
        public const int TIME_WEIGHTED_AVERAGE_PRICE = 23;
        public const int AVERAGE_DURATION = 24;
        public const int AVERAGE_PRICE = 25;
        public const int TOTAL_FEES = 26;
        public const int TOTAL_BENEFITS = 27;
        public const int MEDIAN_VALUE = 28;
        public const int AVERAGE_LIQUIDITY = 29;
        public const int MEDIAN_DURATION = 30;
    }


    /// <summary>
    /// MDStatisticScope Field
    /// </summary>/
    public sealed class MDStatisticScope : IntField
    {
        public const int TAG = 2457;

        public MDStatisticScope()
            : base(Tags.MDStatisticScope) { }
        public MDStatisticScope(int val)
            : base(Tags.MDStatisticScope, val) { }


        // Field Enumerations
        public const int BID_PRICES = 1;
        public const int OFFER_PRICES = 2;
        public const int BID_DEPTH = 3;
        public const int OFFER_DEPTH = 4;
        public const int ORDERS = 5;
        public const int QUOTES = 6;
        public const int ORDERS_AND_QUOTES = 7;
        public const int TRADES = 8;
        public const int TRADE_PRICES = 9;
        public const int AUCTION_PRICES = 10;
        public const int OPENING_PRICES = 11;
        public const int CLOSING_PRICES = 12;
        public const int SETTLEMENT_PRICES = 13;
        public const int UNDERLYING_PRICES = 14;
        public const int OPEN_INTEREST = 15;
        public const int INDEX_VALUES = 16;
        public const int MARGIN_RATES = 17;
        public const int OUTAGES = 18;
        public const int SCHEDULED_AUCTIONS = 19;
        public const int REFERENCE_PRICES = 20;
        public const int TRADE_VALUE = 21;
        public const int MARKET_DATA_FEE_ITEMS = 22;
        public const int REBATES = 23;
        public const int DISCOUNTS = 24;
        public const int PAYMENTS = 25;
        public const int TAXES = 26;
        public const int LEVIES = 27;
        public const int BENEFITS = 28;
        public const int FEES = 29;
        public const int ORDERS_AND_RFQS = 30;
        public const int MARKET_MAKERS = 31;
        public const int TRADING_INTERRUPTIONS = 32;
        public const int TRADING_SUSPENSIONS = 33;
        public const int NO_QUOTES = 34;
        public const int REQUEST_FOR_QUOTES = 35;
        public const int TRADE_VOLUME = 36;
    }


    /// <summary>
    /// MDStatisticSubScope Field
    /// </summary>/
    public sealed class MDStatisticSubScope : IntField
    {
        public const int TAG = 2458;

        public MDStatisticSubScope()
            : base(Tags.MDStatisticSubScope) { }
        public MDStatisticSubScope(int val)
            : base(Tags.MDStatisticSubScope, val) { }


        // Field Enumerations
        public const int VISIBLE = 1;
        public const int HIDDEN = 2;
        public const int INDICATIVE = 3;
        public const int TRADEABLE = 4;
        public const int PASSIVE = 5;
        public const int MARKET_CONSENSUS = 6;
        public const int POWER = 7;
        public const int HARDWARE_ERROR = 8;
        public const int SOFTWARE_ERROR = 9;
        public const int NETWORK_ERROR = 10;
        public const int FAILED = 11;
        public const int EXECUTED = 12;
        public const int ENTERED = 13;
        public const int MODIFIED = 14;
        public const int CANCELLED = 15;
        public const int MARKET_DATA_ACCESS = 16;
        public const int TERMINAL_ACCESS = 17;
        public const int VOLUME = 18;
        public const int CLEARED = 19;
        public const int SETTLED = 20;
        public const int OTHER = 21;
        public const int MONETARY = 22;
        public const int NON_MONETARY = 23;
        public const int GROSS = 24;
        public const int LARGE_IN_SCALE = 25;
        public const int NEITHER_HIDDEN_NOR_LARGE_IN_SCALE = 26;
        public const int CORPORATE_ACTION = 27;
        public const int VENUE_DECISION = 28;
        public const int MINIMUM_TIME_PERIOD = 29;
        public const int OPEN = 30;
        public const int NOT_EXECUTED = 31;
        public const int AGGRESSIVE = 32;
        public const int DIRECTED = 33;
    }


    /// <summary>
    /// MDStatisticScopeType Field
    /// </summary>/
    public sealed class MDStatisticScopeType : IntField
    {
        public const int TAG = 2459;

        public MDStatisticScopeType()
            : base(Tags.MDStatisticScopeType) { }
        public MDStatisticScopeType(int val)
            : base(Tags.MDStatisticScopeType, val) { }


        // Field Enumerations
        public const int ENTRY_RATE = 1;
        public const int MODIFICATION_RATE = 2;
        public const int CANCEL_RATE = 3;
        public const int DOWNWARD_MOVE = 4;
        public const int UPWARD_MOVE = 5;
    }


    /// <summary>
    /// MDStatisticFrequencyPeriod Field
    /// </summary>/
    public sealed class MDStatisticFrequencyPeriod : IntField
    {
        public const int TAG = 2460;

        public MDStatisticFrequencyPeriod()
            : base(Tags.MDStatisticFrequencyPeriod) { }
        public MDStatisticFrequencyPeriod(int val)
            : base(Tags.MDStatisticFrequencyPeriod, val) { }

    }


    /// <summary>
    /// MDStatisticFrequencyUnit Field
    /// </summary>/
    public sealed class MDStatisticFrequencyUnit : IntField
    {
        public const int TAG = 2461;

        public MDStatisticFrequencyUnit()
            : base(Tags.MDStatisticFrequencyUnit) { }
        public MDStatisticFrequencyUnit(int val)
            : base(Tags.MDStatisticFrequencyUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// MDStatisticDelayPeriod Field
    /// </summary>/
    public sealed class MDStatisticDelayPeriod : IntField
    {
        public const int TAG = 2462;

        public MDStatisticDelayPeriod()
            : base(Tags.MDStatisticDelayPeriod) { }
        public MDStatisticDelayPeriod(int val)
            : base(Tags.MDStatisticDelayPeriod, val) { }

    }


    /// <summary>
    /// MDStatisticDelayUnit Field
    /// </summary>/
    public sealed class MDStatisticDelayUnit : IntField
    {
        public const int TAG = 2463;

        public MDStatisticDelayUnit()
            : base(Tags.MDStatisticDelayUnit) { }
        public MDStatisticDelayUnit(int val)
            : base(Tags.MDStatisticDelayUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// MDStatisticIntervalType Field
    /// </summary>/
    public sealed class MDStatisticIntervalType : IntField
    {
        public const int TAG = 2464;

        public MDStatisticIntervalType()
            : base(Tags.MDStatisticIntervalType) { }
        public MDStatisticIntervalType(int val)
            : base(Tags.MDStatisticIntervalType, val) { }


        // Field Enumerations
        public const int SLIDING_WINDOW = 1;
        public const int SLIDING_WINDOW_PEAK = 2;
        public const int FIXED_DATE_RANGE = 3;
        public const int FIXED_TIME_RANGE = 4;
        public const int CURRENT_TIME_UNIT = 5;
        public const int PREVIOUS_TIME_UNIT = 6;
        public const int MAXIMUM_RANGE = 7;
        public const int MAXIMUM_RANGE_UP_TO_PREVIOUS_TIME_UNIT = 8;
    }


    /// <summary>
    /// MDStatisticIntervalTypeUnit Field
    /// </summary>/
    public sealed class MDStatisticIntervalTypeUnit : StringField
    {
        public const int TAG = 2465;

        public MDStatisticIntervalTypeUnit()
            : base(Tags.MDStatisticIntervalTypeUnit) { }
        public MDStatisticIntervalTypeUnit(string val)
            : base(Tags.MDStatisticIntervalTypeUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// MDStatisticIntervalPeriod Field
    /// </summary>/
    public sealed class MDStatisticIntervalPeriod : IntField
    {
        public const int TAG = 2466;

        public MDStatisticIntervalPeriod()
            : base(Tags.MDStatisticIntervalPeriod) { }
        public MDStatisticIntervalPeriod(int val)
            : base(Tags.MDStatisticIntervalPeriod, val) { }

    }


    /// <summary>
    /// MDStatisticIntervalUnit Field
    /// </summary>/
    public sealed class MDStatisticIntervalUnit : IntField
    {
        public const int TAG = 2467;

        public MDStatisticIntervalUnit()
            : base(Tags.MDStatisticIntervalUnit) { }
        public MDStatisticIntervalUnit(int val)
            : base(Tags.MDStatisticIntervalUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// MDStatisticStartDate Field
    /// </summary>/
    public sealed class MDStatisticStartDate : DateTimeField
    {
        public const int TAG = 2468;

        public MDStatisticStartDate()
            : base(Tags.MDStatisticStartDate) { }
        public MDStatisticStartDate(DateTime val)
            : base(Tags.MDStatisticStartDate, val) { }
        public MDStatisticStartDate(DateTime val, bool showMilliseconds)
            : base(Tags.MDStatisticStartDate, val, showMilliseconds) { }
        public MDStatisticStartDate(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDStatisticStartDate, val, precision) { }

    }


    /// <summary>
    /// MDStatisticEndDate Field
    /// </summary>/
    public sealed class MDStatisticEndDate : DateTimeField
    {
        public const int TAG = 2469;

        public MDStatisticEndDate()
            : base(Tags.MDStatisticEndDate) { }
        public MDStatisticEndDate(DateTime val)
            : base(Tags.MDStatisticEndDate, val) { }
        public MDStatisticEndDate(DateTime val, bool showMilliseconds)
            : base(Tags.MDStatisticEndDate, val, showMilliseconds) { }
        public MDStatisticEndDate(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDStatisticEndDate, val, precision) { }

    }


    /// <summary>
    /// MDStatisticStartTime Field
    /// </summary>/
    public sealed class MDStatisticStartTime : TimeOnlyField
    {
        public const int TAG = 2470;

        public MDStatisticStartTime()
            : base(Tags.MDStatisticStartTime) { }
        public MDStatisticStartTime(DateTime val)
            : base(Tags.MDStatisticStartTime, val) { }
        public MDStatisticStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.MDStatisticStartTime, val, showMilliseconds) { }
        public MDStatisticStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDStatisticStartTime, val, precision) { }

    }


    /// <summary>
    /// MDStatisticEndTime Field
    /// </summary>/
    public sealed class MDStatisticEndTime : TimeOnlyField
    {
        public const int TAG = 2471;

        public MDStatisticEndTime()
            : base(Tags.MDStatisticEndTime) { }
        public MDStatisticEndTime(DateTime val)
            : base(Tags.MDStatisticEndTime, val) { }
        public MDStatisticEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.MDStatisticEndTime, val, showMilliseconds) { }
        public MDStatisticEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDStatisticEndTime, val, precision) { }

    }


    /// <summary>
    /// MDStatisticRatioType Field
    /// </summary>/
    public sealed class MDStatisticRatioType : IntField
    {
        public const int TAG = 2472;

        public MDStatisticRatioType()
            : base(Tags.MDStatisticRatioType) { }
        public MDStatisticRatioType(int val)
            : base(Tags.MDStatisticRatioType, val) { }


        // Field Enumerations
        public const int BUYERS_TO_SELLERS = 1;
        public const int UPTICKS_TO_DOWNTICKS = 2;
        public const int MARKET_MAKER_TO_NON_MARKET_MAKER = 3;
        public const int AUTOMATED_TO_NON_AUTOMATED = 4;
        public const int ORDERS_TO_TRADES = 5;
        public const int QUOTES_TO_TRADES = 6;
        public const int ORDERS_AND_QUOTES_TO_TRADES = 7;
        public const int FAILED_TO_TOTAL_TRADED_VALUE = 8;
        public const int BENEFITS_TO_TOTAL_TRADED_VALUE = 9;
        public const int FEES_TO_TOTAL_TRADED_VALUE = 10;
        public const int TRADE_VOLUME_TO_TOTAL_TRADED_VOLUME = 11;
        public const int ORDERS_TO_TOTAL_NUMBER_OF_ORDERS = 12;
    }


    /// <summary>
    /// MDStatisticRequestResult Field
    /// </summary>/
    public sealed class MDStatisticRequestResult : IntField
    {
        public const int TAG = 2473;

        public MDStatisticRequestResult()
            : base(Tags.MDStatisticRequestResult) { }
        public MDStatisticRequestResult(int val)
            : base(Tags.MDStatisticRequestResult, val) { }


        // Field Enumerations
        public const int SUCCESSFUL = 0;
        public const int INVALID_OR_UNKNOWN_MARKET = 1;
        public const int INVALID_OR_UNKNOWN_MARKET_SEGMENT = 2;
        public const int INVALID_OR_UNKNOWN_SECURITY_LIST = 3;
        public const int INVALID_OR_UNKNOWN_INSTRUMENT = 4;
        public const int INVALID_PARTIES = 5;
        public const int TRADE_DATE_OUT_OF_SUPPORTED_RANGE = 6;
        public const int STATISTIC_TYPE_NOT_SUPPORTED = 7;
        public const int SCOPE_OR_SUB_SCOPE_NOT_SUPPORTED = 8;
        public const int SCOPE_TYPE_NOT_SUPPORTED = 9;
        public const int MARKET_DEPTH_NOT_SUPPORTED = 10;
        public const int FREQUENCY_NOT_SUPPORTED = 11;
        public const int STATISTIC_INTERVAL_NOT_SUPPORTED = 12;
        public const int STATISTIC_DATE_RANGE_NOT_SUPPORTED = 13;
        public const int STATISTIC_TIME_RANGE_NOT_SUPPORTED = 14;
        public const int RATIO_TYPE_NOT_SUPPORTED = 15;
        public const int INVALID_OR_UNKNOWN_TRADE_INPUT_SOURCE = 16;
        public const int INVALID_OR_UNKNOWN_TRADING_SESSION = 17;
        public const int UNAUTHORIZED_FOR_STATISTIC_REQUEST = 18;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoMDStatistics Field
    /// </summary>/
    public sealed class NoMDStatistics : IntField
    {
        public const int TAG = 2474;

        public NoMDStatistics()
            : base(Tags.NoMDStatistics) { }
        public NoMDStatistics(int val)
            : base(Tags.NoMDStatistics, val) { }

    }


    /// <summary>
    /// MDStatisticID Field
    /// </summary>/
    public sealed class MDStatisticID : StringField
    {
        public const int TAG = 2475;

        public MDStatisticID()
            : base(Tags.MDStatisticID) { }
        public MDStatisticID(string val)
            : base(Tags.MDStatisticID, val) { }

    }


    /// <summary>
    /// MDStatisticTime Field
    /// </summary>/
    public sealed class MDStatisticTime : DateTimeField
    {
        public const int TAG = 2476;

        public MDStatisticTime()
            : base(Tags.MDStatisticTime) { }
        public MDStatisticTime(DateTime val)
            : base(Tags.MDStatisticTime, val) { }
        public MDStatisticTime(DateTime val, bool showMilliseconds)
            : base(Tags.MDStatisticTime, val, showMilliseconds) { }
        public MDStatisticTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.MDStatisticTime, val, precision) { }

    }


    /// <summary>
    /// MDStatisticStatus Field
    /// </summary>/
    public sealed class MDStatisticStatus : IntField
    {
        public const int TAG = 2477;

        public MDStatisticStatus()
            : base(Tags.MDStatisticStatus) { }
        public MDStatisticStatus(int val)
            : base(Tags.MDStatisticStatus, val) { }


        // Field Enumerations
        public const int ACTIVE = 1;
        public const int INACTIVE = 2;
    }


    /// <summary>
    /// MDStatisticValue Field
    /// </summary>/
    public sealed class MDStatisticValue : DecimalField
    {
        public const int TAG = 2478;

        public MDStatisticValue()
            : base(Tags.MDStatisticValue) { }
        public MDStatisticValue(Decimal val)
            : base(Tags.MDStatisticValue, val) { }

    }


    /// <summary>
    /// MDStatisticValueType Field
    /// </summary>/
    public sealed class MDStatisticValueType : IntField
    {
        public const int TAG = 2479;

        public MDStatisticValueType()
            : base(Tags.MDStatisticValueType) { }
        public MDStatisticValueType(int val)
            : base(Tags.MDStatisticValueType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 1;
        public const int PERCENTAGE = 2;
    }


    /// <summary>
    /// MDStatisticValueUnit Field
    /// </summary>/
    public sealed class MDStatisticValueUnit : IntField
    {
        public const int TAG = 2480;

        public MDStatisticValueUnit()
            : base(Tags.MDStatisticValueUnit) { }
        public MDStatisticValueUnit(int val)
            : base(Tags.MDStatisticValueUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// EncodedMDStatisticDescLen Field
    /// </summary>/
    public sealed class EncodedMDStatisticDescLen : IntField
    {
        public const int TAG = 2481;

        public EncodedMDStatisticDescLen()
            : base(Tags.EncodedMDStatisticDescLen) { }
        public EncodedMDStatisticDescLen(int val)
            : base(Tags.EncodedMDStatisticDescLen, val) { }

    }


    /// <summary>
    /// EncodedMDStatisticDesc Field
    /// </summary>/
    public sealed class EncodedMDStatisticDesc : StringField
    {
        public const int TAG = 2482;

        public EncodedMDStatisticDesc()
            : base(Tags.EncodedMDStatisticDesc) { }
        public EncodedMDStatisticDesc(string val)
            : base(Tags.EncodedMDStatisticDesc, val) { }

    }


    /// <summary>
    /// AllocRiskLimitCheckStatus Field
    /// </summary>/
    public sealed class AllocRiskLimitCheckStatus : IntField
    {
        public const int TAG = 2483;

        public AllocRiskLimitCheckStatus()
            : base(Tags.AllocRiskLimitCheckStatus) { }
        public AllocRiskLimitCheckStatus(int val)
            : base(Tags.AllocRiskLimitCheckStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
        public const int CLAIM_REQUIRED = 2;
        public const int PRE_DEFINED_LIMIT_CHECK_SUCCEEDED = 3;
        public const int PRE_DEFINED_LIMIT_CHECK_FAILED = 4;
        public const int PRE_DEFINED_AUTO_ACCEPT_RULE_INVOKED = 5;
        public const int PRE_DEFINED_AUTO_REJECT_RULE_INVOKED = 6;
        public const int ACCEPTED_BY_CLEARING_FIRM = 7;
        public const int REJECTED_BY_CLEARING_FIRM = 8;
        public const int PENDING = 9;
        public const int ACCEPTED_BY_CREDIT_HUB = 10;
        public const int REJECTED_BY_CREDIT_HUB = 11;
        public const int PENDING_CREDIT_HUB_CHECK = 12;
        public const int ACCEPTED_BY_EXECUTION_VENUE = 13;
        public const int REJECTED_BY_EXECUTION_VENUE = 14;
    }


    /// <summary>
    /// FirmTransactionID Field
    /// </summary>/
    public sealed class FirmTransactionID : StringField
    {
        public const int TAG = 2484;

        public FirmTransactionID()
            : base(Tags.FirmTransactionID) { }
        public FirmTransactionID(string val)
            : base(Tags.FirmTransactionID, val) { }

    }


    /// <summary>
    /// TransactionID Field
    /// </summary>/
    public sealed class TransactionID : StringField
    {
        public const int TAG = 2485;

        public TransactionID()
            : base(Tags.TransactionID) { }
        public TransactionID(string val)
            : base(Tags.TransactionID, val) { }

    }


    /// <summary>
    /// WireReference Field
    /// </summary>/
    public sealed class WireReference : StringField
    {
        public const int TAG = 2486;

        public WireReference()
            : base(Tags.WireReference) { }
        public WireReference(string val)
            : base(Tags.WireReference, val) { }

    }


    /// <summary>
    /// CollRptRejectReason Field
    /// </summary>/
    public sealed class CollRptRejectReason : IntField
    {
        public const int TAG = 2487;

        public CollRptRejectReason()
            : base(Tags.CollRptRejectReason) { }
        public CollRptRejectReason(int val)
            : base(Tags.CollRptRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_TRADE_OR_TRANSACTION = 0;
        public const int UNKNOWN_OR_INVALID_INSTRUMENT = 1;
        public const int UNKNOWN_OR_INVALID_COUNTERPARTY = 2;
        public const int UNKNOWN_OR_INVALID_POSITION = 3;
        public const int UNACCEPTABLE_OR_INVALID_TYPE_OF_COLLATERAL = 4;
        public const int OTHER = 99;
    }


    /// <summary>
    /// CollRptStatus Field
    /// </summary>/
    public sealed class CollRptStatus : IntField
    {
        public const int TAG = 2488;

        public CollRptStatus()
            : base(Tags.CollRptStatus) { }
        public CollRptStatus(int val)
            : base(Tags.CollRptStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int RECEIVED = 1;
        public const int REJECTED = 2;
    }


    /// <summary>
    /// PackageID Field
    /// </summary>/
    public sealed class PackageID : StringField
    {
        public const int TAG = 2489;

        public PackageID()
            : base(Tags.PackageID) { }
        public PackageID(string val)
            : base(Tags.PackageID, val) { }

    }


    /// <summary>
    /// TradeNumber Field
    /// </summary>/
    public sealed class TradeNumber : IntField
    {
        public const int TAG = 2490;

        public TradeNumber()
            : base(Tags.TradeNumber) { }
        public TradeNumber(int val)
            : base(Tags.TradeNumber, val) { }

    }


    /// <summary>
    /// UnderlyingAssetGroup Field
    /// </summary>/
    public sealed class UnderlyingAssetGroup : IntField
    {
        public const int TAG = 2491;

        public UnderlyingAssetGroup()
            : base(Tags.UnderlyingAssetGroup) { }
        public UnderlyingAssetGroup(int val)
            : base(Tags.UnderlyingAssetGroup, val) { }


        // Field Enumerations
        public const int FINANCIALS = 1;
        public const int COMMODITIES = 2;
        public const int ALTERNATIVE_INVESTMENTS = 3;
    }


    /// <summary>
    /// LegDifferentialPrice Field
    /// </summary>/
    public sealed class LegDifferentialPrice : DecimalField
    {
        public const int TAG = 2492;

        public LegDifferentialPrice()
            : base(Tags.LegDifferentialPrice) { }
        public LegDifferentialPrice(Decimal val)
            : base(Tags.LegDifferentialPrice, val) { }

    }


    /// <summary>
    /// EncodedLegDocumentationText Field
    /// </summary>/
    public sealed class EncodedLegDocumentationText : StringField
    {
        public const int TAG = 2493;

        public EncodedLegDocumentationText()
            : base(Tags.EncodedLegDocumentationText) { }
        public EncodedLegDocumentationText(string val)
            : base(Tags.EncodedLegDocumentationText, val) { }

    }


    /// <summary>
    /// EncodedLegDocumentationTextLen Field
    /// </summary>/
    public sealed class EncodedLegDocumentationTextLen : IntField
    {
        public const int TAG = 2494;

        public EncodedLegDocumentationTextLen()
            : base(Tags.EncodedLegDocumentationTextLen) { }
        public EncodedLegDocumentationTextLen(int val)
            : base(Tags.EncodedLegDocumentationTextLen, val) { }

    }


    /// <summary>
    /// LegAgreementCurrency Field
    /// </summary>/
    public sealed class LegAgreementCurrency : StringField
    {
        public const int TAG = 2495;

        public LegAgreementCurrency()
            : base(Tags.LegAgreementCurrency) { }
        public LegAgreementCurrency(string val)
            : base(Tags.LegAgreementCurrency, val) { }

    }


    /// <summary>
    /// LegAgreementDate Field
    /// </summary>/
    public sealed class LegAgreementDate : StringField
    {
        public const int TAG = 2496;

        public LegAgreementDate()
            : base(Tags.LegAgreementDate) { }
        public LegAgreementDate(string val)
            : base(Tags.LegAgreementDate, val) { }

    }


    /// <summary>
    /// LegAgreementDesc Field
    /// </summary>/
    public sealed class LegAgreementDesc : StringField
    {
        public const int TAG = 2497;

        public LegAgreementDesc()
            : base(Tags.LegAgreementDesc) { }
        public LegAgreementDesc(string val)
            : base(Tags.LegAgreementDesc, val) { }

    }


    /// <summary>
    /// LegAgreementID Field
    /// </summary>/
    public sealed class LegAgreementID : StringField
    {
        public const int TAG = 2498;

        public LegAgreementID()
            : base(Tags.LegAgreementID) { }
        public LegAgreementID(string val)
            : base(Tags.LegAgreementID, val) { }

    }


    /// <summary>
    /// LegAgreementVersion Field
    /// </summary>/
    public sealed class LegAgreementVersion : StringField
    {
        public const int TAG = 2499;

        public LegAgreementVersion()
            : base(Tags.LegAgreementVersion) { }
        public LegAgreementVersion(string val)
            : base(Tags.LegAgreementVersion, val) { }

    }


    /// <summary>
    /// LegBrokerConfirmationDesc Field
    /// </summary>/
    public sealed class LegBrokerConfirmationDesc : StringField
    {
        public const int TAG = 2500;

        public LegBrokerConfirmationDesc()
            : base(Tags.LegBrokerConfirmationDesc) { }
        public LegBrokerConfirmationDesc(string val)
            : base(Tags.LegBrokerConfirmationDesc, val) { }

    }


    /// <summary>
    /// LegCreditSupportAgreementDate Field
    /// </summary>/
    public sealed class LegCreditSupportAgreementDate : StringField
    {
        public const int TAG = 2501;

        public LegCreditSupportAgreementDate()
            : base(Tags.LegCreditSupportAgreementDate) { }
        public LegCreditSupportAgreementDate(string val)
            : base(Tags.LegCreditSupportAgreementDate, val) { }

    }


    /// <summary>
    /// LegCreditSupportAgreementDesc Field
    /// </summary>/
    public sealed class LegCreditSupportAgreementDesc : StringField
    {
        public const int TAG = 2502;

        public LegCreditSupportAgreementDesc()
            : base(Tags.LegCreditSupportAgreementDesc) { }
        public LegCreditSupportAgreementDesc(string val)
            : base(Tags.LegCreditSupportAgreementDesc, val) { }

    }


    /// <summary>
    /// LegCreditSupportAgreementID Field
    /// </summary>/
    public sealed class LegCreditSupportAgreementID : StringField
    {
        public const int TAG = 2503;

        public LegCreditSupportAgreementID()
            : base(Tags.LegCreditSupportAgreementID) { }
        public LegCreditSupportAgreementID(string val)
            : base(Tags.LegCreditSupportAgreementID, val) { }

    }


    /// <summary>
    /// LegDeliveryType Field
    /// </summary>/
    public sealed class LegDeliveryType : IntField
    {
        public const int TAG = 2504;

        public LegDeliveryType()
            : base(Tags.LegDeliveryType) { }
        public LegDeliveryType(int val)
            : base(Tags.LegDeliveryType, val) { }


        // Field Enumerations
        public const int VERSUS_PAYMENT_DELIVER = 0;
        public const int FREE_DELIVER = 1;
        public const int TRI_PARTY = 2;
        public const int HOLD_IN_CUSTODY = 3;
        public const int DELIVER_BY_VALUE = 4;
    }


    /// <summary>
    /// LegDocumentationText Field
    /// </summary>/
    public sealed class LegDocumentationText : StringField
    {
        public const int TAG = 2505;

        public LegDocumentationText()
            : base(Tags.LegDocumentationText) { }
        public LegDocumentationText(string val)
            : base(Tags.LegDocumentationText, val) { }

    }


    /// <summary>
    /// LegEndDate Field
    /// </summary>/
    public sealed class LegEndDate : StringField
    {
        public const int TAG = 2506;

        public LegEndDate()
            : base(Tags.LegEndDate) { }
        public LegEndDate(string val)
            : base(Tags.LegEndDate, val) { }

    }


    /// <summary>
    /// LegGoverningLaw Field
    /// </summary>/
    public sealed class LegGoverningLaw : StringField
    {
        public const int TAG = 2507;

        public LegGoverningLaw()
            : base(Tags.LegGoverningLaw) { }
        public LegGoverningLaw(string val)
            : base(Tags.LegGoverningLaw, val) { }

    }


    /// <summary>
    /// LegMarginRatio Field
    /// </summary>/
    public sealed class LegMarginRatio : DecimalField
    {
        public const int TAG = 2508;

        public LegMarginRatio()
            : base(Tags.LegMarginRatio) { }
        public LegMarginRatio(Decimal val)
            : base(Tags.LegMarginRatio, val) { }

    }


    /// <summary>
    /// LegMasterConfirmationAnnexDate Field
    /// </summary>/
    public sealed class LegMasterConfirmationAnnexDate : StringField
    {
        public const int TAG = 2509;

        public LegMasterConfirmationAnnexDate()
            : base(Tags.LegMasterConfirmationAnnexDate) { }
        public LegMasterConfirmationAnnexDate(string val)
            : base(Tags.LegMasterConfirmationAnnexDate, val) { }

    }


    /// <summary>
    /// LegMasterConfirmationDate Field
    /// </summary>/
    public sealed class LegMasterConfirmationDate : StringField
    {
        public const int TAG = 2510;

        public LegMasterConfirmationDate()
            : base(Tags.LegMasterConfirmationDate) { }
        public LegMasterConfirmationDate(string val)
            : base(Tags.LegMasterConfirmationDate, val) { }

    }


    /// <summary>
    /// LegMasterConfirmationDesc Field
    /// </summary>/
    public sealed class LegMasterConfirmationDesc : StringField
    {
        public const int TAG = 2511;

        public LegMasterConfirmationDesc()
            : base(Tags.LegMasterConfirmationDesc) { }
        public LegMasterConfirmationDesc(string val)
            : base(Tags.LegMasterConfirmationDesc, val) { }

    }


    /// <summary>
    /// LegMasterConfirmationAnnexDesc Field
    /// </summary>/
    public sealed class LegMasterConfirmationAnnexDesc : StringField
    {
        public const int TAG = 2512;

        public LegMasterConfirmationAnnexDesc()
            : base(Tags.LegMasterConfirmationAnnexDesc) { }
        public LegMasterConfirmationAnnexDesc(string val)
            : base(Tags.LegMasterConfirmationAnnexDesc, val) { }

    }


    /// <summary>
    /// LegStartDate Field
    /// </summary>/
    public sealed class LegStartDate : StringField
    {
        public const int TAG = 2513;

        public LegStartDate()
            : base(Tags.LegStartDate) { }
        public LegStartDate(string val)
            : base(Tags.LegStartDate, val) { }

    }


    /// <summary>
    /// LegTerminationType Field
    /// </summary>/
    public sealed class LegTerminationType : IntField
    {
        public const int TAG = 2514;

        public LegTerminationType()
            : base(Tags.LegTerminationType) { }
        public LegTerminationType(int val)
            : base(Tags.LegTerminationType, val) { }


        // Field Enumerations
        public const int OVERNIGHT = 1;
        public const int TERM = 2;
        public const int FLEXIBLE = 3;
        public const int OPEN = 4;
    }


    /// <summary>
    /// AllocCalculatedCcyQty Field
    /// </summary>/
    public sealed class AllocCalculatedCcyQty : DecimalField
    {
        public const int TAG = 2515;

        public AllocCalculatedCcyQty()
            : base(Tags.AllocCalculatedCcyQty) { }
        public AllocCalculatedCcyQty(Decimal val)
            : base(Tags.AllocCalculatedCcyQty, val) { }

    }


    /// <summary>
    /// CollateralRequestInstruction Field
    /// </summary>/
    public sealed class CollateralRequestInstruction : StringField
    {
        public const int TAG = 2516;

        public CollateralRequestInstruction()
            : base(Tags.CollateralRequestInstruction) { }
        public CollateralRequestInstruction(string val)
            : base(Tags.CollateralRequestInstruction, val) { }

    }


    /// <summary>
    /// CollateralRequestLinkID Field
    /// </summary>/
    public sealed class CollateralRequestLinkID : StringField
    {
        public const int TAG = 2517;

        public CollateralRequestLinkID()
            : base(Tags.CollateralRequestLinkID) { }
        public CollateralRequestLinkID(string val)
            : base(Tags.CollateralRequestLinkID, val) { }

    }


    /// <summary>
    /// CollateralRequestNumber Field
    /// </summary>/
    public sealed class CollateralRequestNumber : IntField
    {
        public const int TAG = 2518;

        public CollateralRequestNumber()
            : base(Tags.CollateralRequestNumber) { }
        public CollateralRequestNumber(int val)
            : base(Tags.CollateralRequestNumber, val) { }

    }


    /// <summary>
    /// TotNumCollateralRequests Field
    /// </summary>/
    public sealed class TotNumCollateralRequests : IntField
    {
        public const int TAG = 2519;

        public TotNumCollateralRequests()
            : base(Tags.TotNumCollateralRequests) { }
        public TotNumCollateralRequests(int val)
            : base(Tags.TotNumCollateralRequests, val) { }

    }


    /// <summary>
    /// WarningText Field
    /// </summary>/
    public sealed class WarningText : StringField
    {
        public const int TAG = 2520;

        public WarningText()
            : base(Tags.WarningText) { }
        public WarningText(string val)
            : base(Tags.WarningText, val) { }

    }


    /// <summary>
    /// EncodedWarningText Field
    /// </summary>/
    public sealed class EncodedWarningText : StringField
    {
        public const int TAG = 2521;

        public EncodedWarningText()
            : base(Tags.EncodedWarningText) { }
        public EncodedWarningText(string val)
            : base(Tags.EncodedWarningText, val) { }

    }


    /// <summary>
    /// EncodedWarningTextLen Field
    /// </summary>/
    public sealed class EncodedWarningTextLen : IntField
    {
        public const int TAG = 2522;

        public EncodedWarningTextLen()
            : base(Tags.EncodedWarningTextLen) { }
        public EncodedWarningTextLen(int val)
            : base(Tags.EncodedWarningTextLen, val) { }

    }


    /// <summary>
    /// CrossedIndicator Field
    /// </summary>/
    public sealed class CrossedIndicator : IntField
    {
        public const int TAG = 2523;

        public CrossedIndicator()
            : base(Tags.CrossedIndicator) { }
        public CrossedIndicator(int val)
            : base(Tags.CrossedIndicator, val) { }


        // Field Enumerations
        public const int NO_CROSS = 0;
        public const int CROSS_REJECTED = 1;
        public const int CROSS_ACCEPTED = 2;
    }


    /// <summary>
    /// TradeReportingIndicator Field
    /// </summary>/
    public sealed class TradeReportingIndicator : IntField
    {
        public const int TAG = 2524;

        public TradeReportingIndicator()
            : base(Tags.TradeReportingIndicator) { }
        public TradeReportingIndicator(int val)
            : base(Tags.TradeReportingIndicator, val) { }


        // Field Enumerations
        public const int TRADE_HAS_NOT = 0;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_BY_A_TRADING_VENUE_AS_AN_ON_BOOK_TRADE = 1;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_SYSTEMATIC_INTERNALISER_SELLER_TRADE = 2;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_SYSTEMATIC_INTERNALISER_BUYER_TRADE = 3;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_NON_SYSTEMATIC_INTERNALISER_SELLER_TRADE = 4;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_UNDER_A_SUB_DELEGATION_ARRANGEMENT_BY_AN_INVESTMENT_FIRM_TO_A_REPORTING_FACILITY = 5;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED = 6;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_NON_SYSTEMATIC_INTERNALISER_BUYER_TRADE = 7;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_BY_A_TRADING_VENUE_AS_AN_OFF_BOOK_TRADE = 8;
        public const int TRADE_IS_NOT_REPORTABLE = 9;
    }


    /// <summary>
    /// AffiliatedFirmsTradeIndicator Field
    /// </summary>/
    public sealed class AffiliatedFirmsTradeIndicator : BooleanField
    {
        public const int TAG = 2525;

        public AffiliatedFirmsTradeIndicator()
            : base(Tags.AffiliatedFirmsTradeIndicator) { }
        public AffiliatedFirmsTradeIndicator(Boolean val)
            : base(Tags.AffiliatedFirmsTradeIndicator, val) { }

    }


    /// <summary>
    /// InternationalSwapIndicator Field
    /// </summary>/
    public sealed class InternationalSwapIndicator : BooleanField
    {
        public const int TAG = 2526;

        public InternationalSwapIndicator()
            : base(Tags.InternationalSwapIndicator) { }
        public InternationalSwapIndicator(Boolean val)
            : base(Tags.InternationalSwapIndicator, val) { }

    }


    /// <summary>
    /// MultiAssetSwapIndicator Field
    /// </summary>/
    public sealed class MultiAssetSwapIndicator : BooleanField
    {
        public const int TAG = 2527;

        public MultiAssetSwapIndicator()
            : base(Tags.MultiAssetSwapIndicator) { }
        public MultiAssetSwapIndicator(Boolean val)
            : base(Tags.MultiAssetSwapIndicator, val) { }

    }


    /// <summary>
    /// ClearingSettlPrice Field
    /// </summary>/
    public sealed class ClearingSettlPrice : DecimalField
    {
        public const int TAG = 2528;

        public ClearingSettlPrice()
            : base(Tags.ClearingSettlPrice) { }
        public ClearingSettlPrice(Decimal val)
            : base(Tags.ClearingSettlPrice, val) { }

    }


    /// <summary>
    /// NoRelativeValues Field
    /// </summary>/
    public sealed class NoRelativeValues : IntField
    {
        public const int TAG = 2529;

        public NoRelativeValues()
            : base(Tags.NoRelativeValues) { }
        public NoRelativeValues(int val)
            : base(Tags.NoRelativeValues, val) { }

    }


    /// <summary>
    /// RelativeValueType Field
    /// </summary>/
    public sealed class RelativeValueType : IntField
    {
        public const int TAG = 2530;

        public RelativeValueType()
            : base(Tags.RelativeValueType) { }
        public RelativeValueType(int val)
            : base(Tags.RelativeValueType, val) { }


        // Field Enumerations
        public const int ASSET_SWAP_SPREAD = 1;
        public const int OVERNIGHT_INDEXED_SWAP_SPREAD = 2;
        public const int ZERO_VOLATILITY_SPREAD = 3;
        public const int DISCOUNT_MARGIN = 4;
        public const int INTERPOLATED_SPREAD = 5;
        public const int OPTION_ADJUSTED_SPREAD = 6;
        public const int G_SPREAD = 7;
        public const int CDS_BASIS = 8;
        public const int CDS_INTERPOLATED_BASIS = 9;
    }


    /// <summary>
    /// RelativeValue Field
    /// </summary>/
    public sealed class RelativeValue : DecimalField
    {
        public const int TAG = 2531;

        public RelativeValue()
            : base(Tags.RelativeValue) { }
        public RelativeValue(Decimal val)
            : base(Tags.RelativeValue, val) { }

    }


    /// <summary>
    /// RelativeValueSide Field
    /// </summary>/
    public sealed class RelativeValueSide : IntField
    {
        public const int TAG = 2532;

        public RelativeValueSide()
            : base(Tags.RelativeValueSide) { }
        public RelativeValueSide(int val)
            : base(Tags.RelativeValueSide, val) { }


        // Field Enumerations
        public const int BID = 1;
        public const int MID = 2;
        public const int OFFER = 3;
    }


    /// <summary>
    /// BidSpread Field
    /// </summary>/
    public sealed class BidSpread : DecimalField
    {
        public const int TAG = 2533;

        public BidSpread()
            : base(Tags.BidSpread) { }
        public BidSpread(Decimal val)
            : base(Tags.BidSpread, val) { }

    }


    /// <summary>
    /// OfferSpread Field
    /// </summary>/
    public sealed class OfferSpread : DecimalField
    {
        public const int TAG = 2534;

        public OfferSpread()
            : base(Tags.OfferSpread) { }
        public OfferSpread(Decimal val)
            : base(Tags.OfferSpread, val) { }

    }


    /// <summary>
    /// MDReportEvent Field
    /// </summary>/
    public sealed class MDReportEvent : IntField
    {
        public const int TAG = 2535;

        public MDReportEvent()
            : base(Tags.MDReportEvent) { }
        public MDReportEvent(int val)
            : base(Tags.MDReportEvent, val) { }


        // Field Enumerations
        public const int START_OF_INSTRUMENT_REFERENCE_DATA = 1;
        public const int END_OF_INSTRUMENT_REFERENCE_DATA = 2;
        public const int START_OF_OFF_MARKET_TRADES = 3;
        public const int END_OF_OFF_MARKET_TRADES = 4;
        public const int START_OF_ORDER_BOOK_TRADES = 5;
        public const int END_OF_ORDER_BOOK_TRADES = 6;
        public const int START_OF_OPEN_INTEREST = 7;
        public const int END_OF_OPEN_INTEREST = 8;
        public const int START_OF_SETTLEMENT_PRICES = 9;
        public const int END_OF_SETTLEMENT_PRICES = 10;
        public const int START_OF_STATISTICS_REFERENCE_DATA = 11;
        public const int END_OF_STATISTICS_REFERENCE_DATA = 12;
        public const int START_OF_STATISTICS = 13;
        public const int END_OF_STATISTICS = 14;
    }


    /// <summary>
    /// MDReportCount Field
    /// </summary>/
    public sealed class MDReportCount : IntField
    {
        public const int TAG = 2536;

        public MDReportCount()
            : base(Tags.MDReportCount) { }
        public MDReportCount(int val)
            : base(Tags.MDReportCount, val) { }

    }


    /// <summary>
    /// TotNoMarketSegmentReports Field
    /// </summary>/
    public sealed class TotNoMarketSegmentReports : IntField
    {
        public const int TAG = 2537;

        public TotNoMarketSegmentReports()
            : base(Tags.TotNoMarketSegmentReports) { }
        public TotNoMarketSegmentReports(int val)
            : base(Tags.TotNoMarketSegmentReports, val) { }

    }


    /// <summary>
    /// TotNoInstrumentReports Field
    /// </summary>/
    public sealed class TotNoInstrumentReports : IntField
    {
        public const int TAG = 2538;

        public TotNoInstrumentReports()
            : base(Tags.TotNoInstrumentReports) { }
        public TotNoInstrumentReports(int val)
            : base(Tags.TotNoInstrumentReports, val) { }

    }


    /// <summary>
    /// TotNoPartyDetailReports Field
    /// </summary>/
    public sealed class TotNoPartyDetailReports : IntField
    {
        public const int TAG = 2539;

        public TotNoPartyDetailReports()
            : base(Tags.TotNoPartyDetailReports) { }
        public TotNoPartyDetailReports(int val)
            : base(Tags.TotNoPartyDetailReports, val) { }

    }


    /// <summary>
    /// TotNoEntitlementReports Field
    /// </summary>/
    public sealed class TotNoEntitlementReports : IntField
    {
        public const int TAG = 2540;

        public TotNoEntitlementReports()
            : base(Tags.TotNoEntitlementReports) { }
        public TotNoEntitlementReports(int val)
            : base(Tags.TotNoEntitlementReports, val) { }

    }


    /// <summary>
    /// TotNoRiskLimitReports Field
    /// </summary>/
    public sealed class TotNoRiskLimitReports : IntField
    {
        public const int TAG = 2541;

        public TotNoRiskLimitReports()
            : base(Tags.TotNoRiskLimitReports) { }
        public TotNoRiskLimitReports(int val)
            : base(Tags.TotNoRiskLimitReports, val) { }

    }


    /// <summary>
    /// MarketSegmentStatus Field
    /// </summary>/
    public sealed class MarketSegmentStatus : IntField
    {
        public const int TAG = 2542;

        public MarketSegmentStatus()
            : base(Tags.MarketSegmentStatus) { }
        public MarketSegmentStatus(int val)
            : base(Tags.MarketSegmentStatus, val) { }


        // Field Enumerations
        public const int ACTIVE = 1;
        public const int INACTIVE = 2;
        public const int PUBLISHED = 3;
    }


    /// <summary>
    /// MarketSegmentType Field
    /// </summary>/
    public sealed class MarketSegmentType : IntField
    {
        public const int TAG = 2543;

        public MarketSegmentType()
            : base(Tags.MarketSegmentType) { }
        public MarketSegmentType(int val)
            : base(Tags.MarketSegmentType, val) { }


        // Field Enumerations
        public const int POOL = 1;
        public const int RETAIL = 2;
        public const int WHOLESALE = 3;
    }


    /// <summary>
    /// MarketSegmentSubType Field
    /// </summary>/
    public sealed class MarketSegmentSubType : IntField
    {
        public const int TAG = 2544;

        public MarketSegmentSubType()
            : base(Tags.MarketSegmentSubType) { }
        public MarketSegmentSubType(int val)
            : base(Tags.MarketSegmentSubType, val) { }


        // Field Enumerations
        public const int INTER_PRODUCT_SPREAD = 1;
    }


    /// <summary>
    /// NoRelatedMarketSegments Field
    /// </summary>/
    public sealed class NoRelatedMarketSegments : IntField
    {
        public const int TAG = 2545;

        public NoRelatedMarketSegments()
            : base(Tags.NoRelatedMarketSegments) { }
        public NoRelatedMarketSegments(int val)
            : base(Tags.NoRelatedMarketSegments, val) { }

    }


    /// <summary>
    /// RelatedMarketSegmentID Field
    /// </summary>/
    public sealed class RelatedMarketSegmentID : StringField
    {
        public const int TAG = 2546;

        public RelatedMarketSegmentID()
            : base(Tags.RelatedMarketSegmentID) { }
        public RelatedMarketSegmentID(string val)
            : base(Tags.RelatedMarketSegmentID, val) { }

    }


    /// <summary>
    /// MarketSegmentRelationship Field
    /// </summary>/
    public sealed class MarketSegmentRelationship : IntField
    {
        public const int TAG = 2547;

        public MarketSegmentRelationship()
            : base(Tags.MarketSegmentRelationship) { }
        public MarketSegmentRelationship(int val)
            : base(Tags.MarketSegmentRelationship, val) { }


        // Field Enumerations
        public const int MARKET_SEGMENT_POOL_MEMBER = 1;
        public const int RETAIL_SEGMENT = 2;
        public const int WHOLESALE_SEGMENT = 3;
    }


    /// <summary>
    /// NoAuctionTypeRules Field
    /// </summary>/
    public sealed class NoAuctionTypeRules : IntField
    {
        public const int TAG = 2548;

        public NoAuctionTypeRules()
            : base(Tags.NoAuctionTypeRules) { }
        public NoAuctionTypeRules(int val)
            : base(Tags.NoAuctionTypeRules, val) { }

    }


    /// <summary>
    /// AuctionTypeProductComplex Field
    /// </summary>/
    public sealed class AuctionTypeProductComplex : StringField
    {
        public const int TAG = 2549;

        public AuctionTypeProductComplex()
            : base(Tags.AuctionTypeProductComplex) { }
        public AuctionTypeProductComplex(string val)
            : base(Tags.AuctionTypeProductComplex, val) { }

    }


    /// <summary>
    /// NoPriceRangeRules Field
    /// </summary>/
    public sealed class NoPriceRangeRules : IntField
    {
        public const int TAG = 2550;

        public NoPriceRangeRules()
            : base(Tags.NoPriceRangeRules) { }
        public NoPriceRangeRules(int val)
            : base(Tags.NoPriceRangeRules, val) { }

    }


    /// <summary>
    /// StartPriceRange Field
    /// </summary>/
    public sealed class StartPriceRange : DecimalField
    {
        public const int TAG = 2551;

        public StartPriceRange()
            : base(Tags.StartPriceRange) { }
        public StartPriceRange(Decimal val)
            : base(Tags.StartPriceRange, val) { }

    }


    /// <summary>
    /// EndPriceRange Field
    /// </summary>/
    public sealed class EndPriceRange : DecimalField
    {
        public const int TAG = 2552;

        public EndPriceRange()
            : base(Tags.EndPriceRange) { }
        public EndPriceRange(Decimal val)
            : base(Tags.EndPriceRange, val) { }

    }


    /// <summary>
    /// PriceRangeValue Field
    /// </summary>/
    public sealed class PriceRangeValue : DecimalField
    {
        public const int TAG = 2553;

        public PriceRangeValue()
            : base(Tags.PriceRangeValue) { }
        public PriceRangeValue(Decimal val)
            : base(Tags.PriceRangeValue, val) { }

    }


    /// <summary>
    /// PriceRangePercentage Field
    /// </summary>/
    public sealed class PriceRangePercentage : DecimalField
    {
        public const int TAG = 2554;

        public PriceRangePercentage()
            : base(Tags.PriceRangePercentage) { }
        public PriceRangePercentage(Decimal val)
            : base(Tags.PriceRangePercentage, val) { }

    }


    /// <summary>
    /// PriceRangeProductComplex Field
    /// </summary>/
    public sealed class PriceRangeProductComplex : StringField
    {
        public const int TAG = 2555;

        public PriceRangeProductComplex()
            : base(Tags.PriceRangeProductComplex) { }
        public PriceRangeProductComplex(string val)
            : base(Tags.PriceRangeProductComplex, val) { }

    }


    /// <summary>
    /// PriceRangeRuleID Field
    /// </summary>/
    public sealed class PriceRangeRuleID : StringField
    {
        public const int TAG = 2556;

        public PriceRangeRuleID()
            : base(Tags.PriceRangeRuleID) { }
        public PriceRangeRuleID(string val)
            : base(Tags.PriceRangeRuleID, val) { }

    }


    /// <summary>
    /// FastMarketPercentage Field
    /// </summary>/
    public sealed class FastMarketPercentage : DecimalField
    {
        public const int TAG = 2557;

        public FastMarketPercentage()
            : base(Tags.FastMarketPercentage) { }
        public FastMarketPercentage(Decimal val)
            : base(Tags.FastMarketPercentage, val) { }

    }


    /// <summary>
    /// NoQuoteSizeRules Field
    /// </summary>/
    public sealed class NoQuoteSizeRules : IntField
    {
        public const int TAG = 2558;

        public NoQuoteSizeRules()
            : base(Tags.NoQuoteSizeRules) { }
        public NoQuoteSizeRules(int val)
            : base(Tags.NoQuoteSizeRules, val) { }

    }


    /// <summary>
    /// QuoteSideIndicator Field
    /// </summary>/
    public sealed class QuoteSideIndicator : BooleanField
    {
        public const int TAG = 2559;

        public QuoteSideIndicator()
            : base(Tags.QuoteSideIndicator) { }
        public QuoteSideIndicator(Boolean val)
            : base(Tags.QuoteSideIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// NoFlexProductEligibilities Field
    /// </summary>/
    public sealed class NoFlexProductEligibilities : IntField
    {
        public const int TAG = 2560;

        public NoFlexProductEligibilities()
            : base(Tags.NoFlexProductEligibilities) { }
        public NoFlexProductEligibilities(int val)
            : base(Tags.NoFlexProductEligibilities, val) { }

    }


    /// <summary>
    /// FlexProductEligibilityComplex Field
    /// </summary>/
    public sealed class FlexProductEligibilityComplex : StringField
    {
        public const int TAG = 2561;

        public FlexProductEligibilityComplex()
            : base(Tags.FlexProductEligibilityComplex) { }
        public FlexProductEligibilityComplex(string val)
            : base(Tags.FlexProductEligibilityComplex, val) { }

    }


    /// <summary>
    /// NumOfComplexInstruments Field
    /// </summary>/
    public sealed class NumOfComplexInstruments : IntField
    {
        public const int TAG = 2562;

        public NumOfComplexInstruments()
            : base(Tags.NumOfComplexInstruments) { }
        public NumOfComplexInstruments(int val)
            : base(Tags.NumOfComplexInstruments, val) { }

    }


    /// <summary>
    /// MarketDepthTimeInterval Field
    /// </summary>/
    public sealed class MarketDepthTimeInterval : IntField
    {
        public const int TAG = 2563;

        public MarketDepthTimeInterval()
            : base(Tags.MarketDepthTimeInterval) { }
        public MarketDepthTimeInterval(int val)
            : base(Tags.MarketDepthTimeInterval, val) { }

    }


    /// <summary>
    /// MarketDepthTimeIntervalUnit Field
    /// </summary>/
    public sealed class MarketDepthTimeIntervalUnit : IntField
    {
        public const int TAG = 2564;

        public MarketDepthTimeIntervalUnit()
            : base(Tags.MarketDepthTimeIntervalUnit) { }
        public MarketDepthTimeIntervalUnit(int val)
            : base(Tags.MarketDepthTimeIntervalUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// MDRecoveryTimeInterval Field
    /// </summary>/
    public sealed class MDRecoveryTimeInterval : IntField
    {
        public const int TAG = 2565;

        public MDRecoveryTimeInterval()
            : base(Tags.MDRecoveryTimeInterval) { }
        public MDRecoveryTimeInterval(int val)
            : base(Tags.MDRecoveryTimeInterval, val) { }

    }


    /// <summary>
    /// MDRecoveryTimeIntervalUnit Field
    /// </summary>/
    public sealed class MDRecoveryTimeIntervalUnit : IntField
    {
        public const int TAG = 2566;

        public MDRecoveryTimeIntervalUnit()
            : base(Tags.MDRecoveryTimeIntervalUnit) { }
        public MDRecoveryTimeIntervalUnit(int val)
            : base(Tags.MDRecoveryTimeIntervalUnit, val) { }


        // Field Enumerations
        public const int SECONDS = 0;
        public const int TENTHS_OF_A_SECOND = 1;
        public const int HUNDREDTHS_OF_A_SECOND = 2;
        public const int MILLISECONDS = 3;
        public const int MICROSECONDS = 4;
        public const int NANOSECONDS = 5;
        public const int MINUTES = 10;
        public const int HOURS = 11;
        public const int DAYS = 12;
        public const int WEEKS = 13;
        public const int MONTHS = 14;
        public const int YEARS = 15;
    }


    /// <summary>
    /// PrimaryServiceLocationID Field
    /// </summary>/
    public sealed class PrimaryServiceLocationID : StringField
    {
        public const int TAG = 2567;

        public PrimaryServiceLocationID()
            : base(Tags.PrimaryServiceLocationID) { }
        public PrimaryServiceLocationID(string val)
            : base(Tags.PrimaryServiceLocationID, val) { }

    }


    /// <summary>
    /// SecondaryServiceLocationID Field
    /// </summary>/
    public sealed class SecondaryServiceLocationID : StringField
    {
        public const int TAG = 2568;

        public SecondaryServiceLocationID()
            : base(Tags.SecondaryServiceLocationID) { }
        public SecondaryServiceLocationID(string val)
            : base(Tags.SecondaryServiceLocationID, val) { }

    }


    /// <summary>
    /// MatchRuleProductComplex Field
    /// </summary>/
    public sealed class MatchRuleProductComplex : StringField
    {
        public const int TAG = 2569;

        public MatchRuleProductComplex()
            : base(Tags.MatchRuleProductComplex) { }
        public MatchRuleProductComplex(string val)
            : base(Tags.MatchRuleProductComplex, val) { }

    }


    /// <summary>
    /// CustomerPriority Field
    /// </summary>/
    public sealed class CustomerPriority : IntField
    {
        public const int TAG = 2570;

        public CustomerPriority()
            : base(Tags.CustomerPriority) { }
        public CustomerPriority(int val)
            : base(Tags.CustomerPriority, val) { }


        // Field Enumerations
        public const int NO_PRIORITY = 0;
        public const int UNCONDITIONAL_PRIORITY = 1;
    }


    /// <summary>
    /// TickRuleProductComplex Field
    /// </summary>/
    public sealed class TickRuleProductComplex : StringField
    {
        public const int TAG = 2571;

        public TickRuleProductComplex()
            : base(Tags.TickRuleProductComplex) { }
        public TickRuleProductComplex(string val)
            : base(Tags.TickRuleProductComplex, val) { }

    }


    /// <summary>
    /// PreviousAdjustedOpenInterest Field
    /// </summary>/
    public sealed class PreviousAdjustedOpenInterest : DecimalField
    {
        public const int TAG = 2572;

        public PreviousAdjustedOpenInterest()
            : base(Tags.PreviousAdjustedOpenInterest) { }
        public PreviousAdjustedOpenInterest(Decimal val)
            : base(Tags.PreviousAdjustedOpenInterest, val) { }

    }


    /// <summary>
    /// PreviousUnadjustedOpenInterest Field
    /// </summary>/
    public sealed class PreviousUnadjustedOpenInterest : DecimalField
    {
        public const int TAG = 2573;

        public PreviousUnadjustedOpenInterest()
            : base(Tags.PreviousUnadjustedOpenInterest) { }
        public PreviousUnadjustedOpenInterest(Decimal val)
            : base(Tags.PreviousUnadjustedOpenInterest, val) { }

    }


    /// <summary>
    /// LowExercisePriceOptionIndicator Field
    /// </summary>/
    public sealed class LowExercisePriceOptionIndicator : BooleanField
    {
        public const int TAG = 2574;

        public LowExercisePriceOptionIndicator()
            : base(Tags.LowExercisePriceOptionIndicator) { }
        public LowExercisePriceOptionIndicator(Boolean val)
            : base(Tags.LowExercisePriceOptionIndicator, val) { }

    }


    /// <summary>
    /// BlockTradeEligibilityIndicator Field
    /// </summary>/
    public sealed class BlockTradeEligibilityIndicator : BooleanField
    {
        public const int TAG = 2575;

        public BlockTradeEligibilityIndicator()
            : base(Tags.BlockTradeEligibilityIndicator) { }
        public BlockTradeEligibilityIndicator(Boolean val)
            : base(Tags.BlockTradeEligibilityIndicator, val) { }

    }


    /// <summary>
    /// InstrumentPricePrecision Field
    /// </summary>/
    public sealed class InstrumentPricePrecision : IntField
    {
        public const int TAG = 2576;

        public InstrumentPricePrecision()
            : base(Tags.InstrumentPricePrecision) { }
        public InstrumentPricePrecision(int val)
            : base(Tags.InstrumentPricePrecision, val) { }

    }


    /// <summary>
    /// StrikePricePrecision Field
    /// </summary>/
    public sealed class StrikePricePrecision : IntField
    {
        public const int TAG = 2577;

        public StrikePricePrecision()
            : base(Tags.StrikePricePrecision) { }
        public StrikePricePrecision(int val)
            : base(Tags.StrikePricePrecision, val) { }

    }


    /// <summary>
    /// OrigStrikePrice Field
    /// </summary>/
    public sealed class OrigStrikePrice : DecimalField
    {
        public const int TAG = 2578;

        public OrigStrikePrice()
            : base(Tags.OrigStrikePrice) { }
        public OrigStrikePrice(Decimal val)
            : base(Tags.OrigStrikePrice, val) { }

    }


    /// <summary>
    /// SettlSubMethod Field
    /// </summary>/
    public sealed class SettlSubMethod : IntField
    {
        public const int TAG = 2579;

        public SettlSubMethod()
            : base(Tags.SettlSubMethod) { }
        public SettlSubMethod(int val)
            : base(Tags.SettlSubMethod, val) { }


        // Field Enumerations
        public const int SHARES = 1;
        public const int DERIVATIVES = 2;
        public const int PAYMENT_VS_PAYMENT = 3;
        public const int NOTIONAL = 4;
        public const int CASCADE = 5;
        public const int REPURCHASE = 6;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoClearingPriceParameters Field
    /// </summary>/
    public sealed class NoClearingPriceParameters : IntField
    {
        public const int TAG = 2580;

        public NoClearingPriceParameters()
            : base(Tags.NoClearingPriceParameters) { }
        public NoClearingPriceParameters(int val)
            : base(Tags.NoClearingPriceParameters, val) { }

    }


    /// <summary>
    /// BusinessDayType Field
    /// </summary>/
    public sealed class BusinessDayType : IntField
    {
        public const int TAG = 2581;

        public BusinessDayType()
            : base(Tags.BusinessDayType) { }
        public BusinessDayType(int val)
            : base(Tags.BusinessDayType, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ClearingPriceOffset Field
    /// </summary>/
    public sealed class ClearingPriceOffset : DecimalField
    {
        public const int TAG = 2582;

        public ClearingPriceOffset()
            : base(Tags.ClearingPriceOffset) { }
        public ClearingPriceOffset(Decimal val)
            : base(Tags.ClearingPriceOffset, val) { }

    }


    /// <summary>
    /// VegaMultiplier Field
    /// </summary>/
    public sealed class VegaMultiplier : DecimalField
    {
        public const int TAG = 2583;

        public VegaMultiplier()
            : base(Tags.VegaMultiplier) { }
        public VegaMultiplier(Decimal val)
            : base(Tags.VegaMultiplier, val) { }

    }


    /// <summary>
    /// AnnualTradingBusinessDays Field
    /// </summary>/
    public sealed class AnnualTradingBusinessDays : IntField
    {
        public const int TAG = 2584;

        public AnnualTradingBusinessDays()
            : base(Tags.AnnualTradingBusinessDays) { }
        public AnnualTradingBusinessDays(int val)
            : base(Tags.AnnualTradingBusinessDays, val) { }

    }


    /// <summary>
    /// TotalTradingBusinessDays Field
    /// </summary>/
    public sealed class TotalTradingBusinessDays : IntField
    {
        public const int TAG = 2585;

        public TotalTradingBusinessDays()
            : base(Tags.TotalTradingBusinessDays) { }
        public TotalTradingBusinessDays(int val)
            : base(Tags.TotalTradingBusinessDays, val) { }

    }


    /// <summary>
    /// TradingBusinessDays Field
    /// </summary>/
    public sealed class TradingBusinessDays : IntField
    {
        public const int TAG = 2586;

        public TradingBusinessDays()
            : base(Tags.TradingBusinessDays) { }
        public TradingBusinessDays(int val)
            : base(Tags.TradingBusinessDays, val) { }

    }


    /// <summary>
    /// RealizedVariance Field
    /// </summary>/
    public sealed class RealizedVariance : DecimalField
    {
        public const int TAG = 2587;

        public RealizedVariance()
            : base(Tags.RealizedVariance) { }
        public RealizedVariance(Decimal val)
            : base(Tags.RealizedVariance, val) { }

    }


    /// <summary>
    /// StandardVariance Field
    /// </summary>/
    public sealed class StandardVariance : DecimalField
    {
        public const int TAG = 2588;

        public StandardVariance()
            : base(Tags.StandardVariance) { }
        public StandardVariance(Decimal val)
            : base(Tags.StandardVariance, val) { }

    }


    /// <summary>
    /// RelatedClosePrice Field
    /// </summary>/
    public sealed class RelatedClosePrice : DecimalField
    {
        public const int TAG = 2589;

        public RelatedClosePrice()
            : base(Tags.RelatedClosePrice) { }
        public RelatedClosePrice(Decimal val)
            : base(Tags.RelatedClosePrice, val) { }

    }


    /// <summary>
    /// OvernightInterestRate Field
    /// </summary>/
    public sealed class OvernightInterestRate : DecimalField
    {
        public const int TAG = 2590;

        public OvernightInterestRate()
            : base(Tags.OvernightInterestRate) { }
        public OvernightInterestRate(Decimal val)
            : base(Tags.OvernightInterestRate, val) { }

    }


    /// <summary>
    /// AccumulatedReturnModifiedVariationMargin Field
    /// </summary>/
    public sealed class AccumulatedReturnModifiedVariationMargin : DecimalField
    {
        public const int TAG = 2591;

        public AccumulatedReturnModifiedVariationMargin()
            : base(Tags.AccumulatedReturnModifiedVariationMargin) { }
        public AccumulatedReturnModifiedVariationMargin(Decimal val)
            : base(Tags.AccumulatedReturnModifiedVariationMargin, val) { }

    }


    /// <summary>
    /// CalculationMethod Field
    /// </summary>/
    public sealed class CalculationMethod : IntField
    {
        public const int TAG = 2592;

        public CalculationMethod()
            : base(Tags.CalculationMethod) { }
        public CalculationMethod(int val)
            : base(Tags.CalculationMethod, val) { }


        // Field Enumerations
        public const int AUTOMATIC = 0;
        public const int MANUAL = 1;
    }


    /// <summary>
    /// NoOrderAttributes Field
    /// </summary>/
    public sealed class NoOrderAttributes : IntField
    {
        public const int TAG = 2593;

        public NoOrderAttributes()
            : base(Tags.NoOrderAttributes) { }
        public NoOrderAttributes(int val)
            : base(Tags.NoOrderAttributes, val) { }

    }


    /// <summary>
    /// OrderAttributeType Field
    /// </summary>/
    public sealed class OrderAttributeType : IntField
    {
        public const int TAG = 2594;

        public OrderAttributeType()
            : base(Tags.OrderAttributeType) { }
        public OrderAttributeType(int val)
            : base(Tags.OrderAttributeType, val) { }


        // Field Enumerations
        public const int AGGREGATED_ORDER = 0;
        public const int ORDER_PENDING_ALLOCATION = 1;
        public const int LIQUIDITY_PROVISION_ACTIVITY_ORDER = 2;
        public const int RISK_REDUCTION_ORDER = 3;
        public const int ALGORITHMIC_ORDER = 4;
        public const int SYSTEMIC_INTERNALISER_ORDER = 5;
        public const int ALL_EXECUTIONS_FOR_THE_ORDER_ARE_TO_BE_SUBMITTED_TO_AN_APA = 6;
        public const int ORDER_EXECUTION_INSTRUCTED_BY_CLIENT = 7;
        public const int LARGE_IN_SCALE_ORDER = 8;
        public const int HIDDEN_ORDER = 9;
        public const int SUBJECT_TO_EU_SHARE_TRADING_OBLIGATION = 10;
        public const int SUBJECT_TO_UK_SHARE_TRADING_OBLIGATION = 11;
        public const int REPRESENTATIVE_ORDER = 12;
        public const int LINKAGE_TYPE = 13;
        public const int EXEMPT_FROM_SHARE_TRADING_OBLIGATION = 14;
    }


    /// <summary>
    /// OrderAttributeValue Field
    /// </summary>/
    public sealed class OrderAttributeValue : StringField
    {
        public const int TAG = 2595;

        public OrderAttributeValue()
            : base(Tags.OrderAttributeValue) { }
        public OrderAttributeValue(string val)
            : base(Tags.OrderAttributeValue, val) { }

    }


    /// <summary>
    /// DeltaCrossed Field
    /// </summary>/
    public sealed class DeltaCrossed : BooleanField
    {
        public const int TAG = 2596;

        public DeltaCrossed()
            : base(Tags.DeltaCrossed) { }
        public DeltaCrossed(Boolean val)
            : base(Tags.DeltaCrossed, val) { }

    }


    /// <summary>
    /// ComplexEventFuturesPriceValuation Field
    /// </summary>/
    public sealed class ComplexEventFuturesPriceValuation : BooleanField
    {
        public const int TAG = 2597;

        public ComplexEventFuturesPriceValuation()
            : base(Tags.ComplexEventFuturesPriceValuation) { }
        public ComplexEventFuturesPriceValuation(Boolean val)
            : base(Tags.ComplexEventFuturesPriceValuation, val) { }

    }


    /// <summary>
    /// ComplexEventOptionsPriceValuation Field
    /// </summary>/
    public sealed class ComplexEventOptionsPriceValuation : BooleanField
    {
        public const int TAG = 2598;

        public ComplexEventOptionsPriceValuation()
            : base(Tags.ComplexEventOptionsPriceValuation) { }
        public ComplexEventOptionsPriceValuation(Boolean val)
            : base(Tags.ComplexEventOptionsPriceValuation, val) { }

    }


    /// <summary>
    /// ComplexEventPVFinalPriceElectionFallback Field
    /// </summary>/
    public sealed class ComplexEventPVFinalPriceElectionFallback : IntField
    {
        public const int TAG = 2599;

        public ComplexEventPVFinalPriceElectionFallback()
            : base(Tags.ComplexEventPVFinalPriceElectionFallback) { }
        public ComplexEventPVFinalPriceElectionFallback(int val)
            : base(Tags.ComplexEventPVFinalPriceElectionFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// StrikeIndexCurvePoint Field
    /// </summary>/
    public sealed class StrikeIndexCurvePoint : StringField
    {
        public const int TAG = 2600;

        public StrikeIndexCurvePoint()
            : base(Tags.StrikeIndexCurvePoint) { }
        public StrikeIndexCurvePoint(string val)
            : base(Tags.StrikeIndexCurvePoint, val) { }

    }


    /// <summary>
    /// StrikeIndexQuote Field
    /// </summary>/
    public sealed class StrikeIndexQuote : IntField
    {
        public const int TAG = 2601;

        public StrikeIndexQuote()
            : base(Tags.StrikeIndexQuote) { }
        public StrikeIndexQuote(int val)
            : base(Tags.StrikeIndexQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// ExtraordinaryEventAdjustmentMethod Field
    /// </summary>/
    public sealed class ExtraordinaryEventAdjustmentMethod : IntField
    {
        public const int TAG = 2602;

        public ExtraordinaryEventAdjustmentMethod()
            : base(Tags.ExtraordinaryEventAdjustmentMethod) { }
        public ExtraordinaryEventAdjustmentMethod(int val)
            : base(Tags.ExtraordinaryEventAdjustmentMethod, val) { }


        // Field Enumerations
        public const int CALCULATION_AGENT = 0;
        public const int OPTIONS_EXCHANGE = 1;
    }


    /// <summary>
    /// ExchangeLookAlike Field
    /// </summary>/
    public sealed class ExchangeLookAlike : BooleanField
    {
        public const int TAG = 2603;

        public ExchangeLookAlike()
            : base(Tags.ExchangeLookAlike) { }
        public ExchangeLookAlike(Boolean val)
            : base(Tags.ExchangeLookAlike, val) { }

    }


    /// <summary>
    /// LegStrikeIndexCurvePoint Field
    /// </summary>/
    public sealed class LegStrikeIndexCurvePoint : StringField
    {
        public const int TAG = 2604;

        public LegStrikeIndexCurvePoint()
            : base(Tags.LegStrikeIndexCurvePoint) { }
        public LegStrikeIndexCurvePoint(string val)
            : base(Tags.LegStrikeIndexCurvePoint, val) { }

    }


    /// <summary>
    /// LegStrikeIndexQuote Field
    /// </summary>/
    public sealed class LegStrikeIndexQuote : IntField
    {
        public const int TAG = 2605;

        public LegStrikeIndexQuote()
            : base(Tags.LegStrikeIndexQuote) { }
        public LegStrikeIndexQuote(int val)
            : base(Tags.LegStrikeIndexQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// LegExtraordinaryEventAdjustmentMethod Field
    /// </summary>/
    public sealed class LegExtraordinaryEventAdjustmentMethod : IntField
    {
        public const int TAG = 2606;

        public LegExtraordinaryEventAdjustmentMethod()
            : base(Tags.LegExtraordinaryEventAdjustmentMethod) { }
        public LegExtraordinaryEventAdjustmentMethod(int val)
            : base(Tags.LegExtraordinaryEventAdjustmentMethod, val) { }


        // Field Enumerations
        public const int CALCULATION_AGENT = 0;
        public const int OPTIONS_EXCHANGE = 1;
    }


    /// <summary>
    /// LegExchangeLookAlike Field
    /// </summary>/
    public sealed class LegExchangeLookAlike : BooleanField
    {
        public const int TAG = 2607;

        public LegExchangeLookAlike()
            : base(Tags.LegExchangeLookAlike) { }
        public LegExchangeLookAlike(Boolean val)
            : base(Tags.LegExchangeLookAlike, val) { }

    }


    /// <summary>
    /// LegComplexEventFuturesPriceValuation Field
    /// </summary>/
    public sealed class LegComplexEventFuturesPriceValuation : BooleanField
    {
        public const int TAG = 2608;

        public LegComplexEventFuturesPriceValuation()
            : base(Tags.LegComplexEventFuturesPriceValuation) { }
        public LegComplexEventFuturesPriceValuation(Boolean val)
            : base(Tags.LegComplexEventFuturesPriceValuation, val) { }

    }


    /// <summary>
    /// LegComplexEventOptionsPriceValuation Field
    /// </summary>/
    public sealed class LegComplexEventOptionsPriceValuation : BooleanField
    {
        public const int TAG = 2609;

        public LegComplexEventOptionsPriceValuation()
            : base(Tags.LegComplexEventOptionsPriceValuation) { }
        public LegComplexEventOptionsPriceValuation(Boolean val)
            : base(Tags.LegComplexEventOptionsPriceValuation, val) { }

    }


    /// <summary>
    /// LegComplexEventPVFinalPriceElectionFallback Field
    /// </summary>/
    public sealed class LegComplexEventPVFinalPriceElectionFallback : IntField
    {
        public const int TAG = 2610;

        public LegComplexEventPVFinalPriceElectionFallback()
            : base(Tags.LegComplexEventPVFinalPriceElectionFallback) { }
        public LegComplexEventPVFinalPriceElectionFallback(int val)
            : base(Tags.LegComplexEventPVFinalPriceElectionFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// UnderlyingComplexEventFuturesPriceValuation Field
    /// </summary>/
    public sealed class UnderlyingComplexEventFuturesPriceValuation : BooleanField
    {
        public const int TAG = 2611;

        public UnderlyingComplexEventFuturesPriceValuation()
            : base(Tags.UnderlyingComplexEventFuturesPriceValuation) { }
        public UnderlyingComplexEventFuturesPriceValuation(Boolean val)
            : base(Tags.UnderlyingComplexEventFuturesPriceValuation, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventOptionsPriceValuation Field
    /// </summary>/
    public sealed class UnderlyingComplexEventOptionsPriceValuation : BooleanField
    {
        public const int TAG = 2612;

        public UnderlyingComplexEventOptionsPriceValuation()
            : base(Tags.UnderlyingComplexEventOptionsPriceValuation) { }
        public UnderlyingComplexEventOptionsPriceValuation(Boolean val)
            : base(Tags.UnderlyingComplexEventOptionsPriceValuation, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPVFinalPriceElectionFallback Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPVFinalPriceElectionFallback : IntField
    {
        public const int TAG = 2613;

        public UnderlyingComplexEventPVFinalPriceElectionFallback()
            : base(Tags.UnderlyingComplexEventPVFinalPriceElectionFallback) { }
        public UnderlyingComplexEventPVFinalPriceElectionFallback(int val)
            : base(Tags.UnderlyingComplexEventPVFinalPriceElectionFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// UnderlyingNotional Field
    /// </summary>/
    public sealed class UnderlyingNotional : DecimalField
    {
        public const int TAG = 2614;

        public UnderlyingNotional()
            : base(Tags.UnderlyingNotional) { }
        public UnderlyingNotional(Decimal val)
            : base(Tags.UnderlyingNotional, val) { }

    }


    /// <summary>
    /// UnderlyingNotionalCurrency Field
    /// </summary>/
    public sealed class UnderlyingNotionalCurrency : StringField
    {
        public const int TAG = 2615;

        public UnderlyingNotionalCurrency()
            : base(Tags.UnderlyingNotionalCurrency) { }
        public UnderlyingNotionalCurrency(string val)
            : base(Tags.UnderlyingNotionalCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingNotionalDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingNotionalDeterminationMethod : StringField
    {
        public const int TAG = 2616;

        public UnderlyingNotionalDeterminationMethod()
            : base(Tags.UnderlyingNotionalDeterminationMethod) { }
        public UnderlyingNotionalDeterminationMethod(string val)
            : base(Tags.UnderlyingNotionalDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingNotionalAdjustments Field
    /// </summary>/
    public sealed class UnderlyingNotionalAdjustments : IntField
    {
        public const int TAG = 2617;

        public UnderlyingNotionalAdjustments()
            : base(Tags.UnderlyingNotionalAdjustments) { }
        public UnderlyingNotionalAdjustments(int val)
            : base(Tags.UnderlyingNotionalAdjustments, val) { }


        // Field Enumerations
        public const int EXECUTION = 0;
        public const int PORTFOLIO_REBALANCING = 1;
        public const int STANDRD = 2;
    }


    /// <summary>
    /// PositionID Field
    /// </summary>/
    public sealed class PositionID : StringField
    {
        public const int TAG = 2618;

        public PositionID()
            : base(Tags.PositionID) { }
        public PositionID(string val)
            : base(Tags.PositionID, val) { }

    }


    /// <summary>
    /// UnderlyingNotionalXIDRef Field
    /// </summary>/
    public sealed class UnderlyingNotionalXIDRef : StringField
    {
        public const int TAG = 2619;

        public UnderlyingNotionalXIDRef()
            : base(Tags.UnderlyingNotionalXIDRef) { }
        public UnderlyingNotionalXIDRef(string val)
            : base(Tags.UnderlyingNotionalXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingFutureID Field
    /// </summary>/
    public sealed class UnderlyingFutureID : StringField
    {
        public const int TAG = 2620;

        public UnderlyingFutureID()
            : base(Tags.UnderlyingFutureID) { }
        public UnderlyingFutureID(string val)
            : base(Tags.UnderlyingFutureID, val) { }

    }


    /// <summary>
    /// UnderlyingFutureIDSource Field
    /// </summary>/
    public sealed class UnderlyingFutureIDSource : StringField
    {
        public const int TAG = 2621;

        public UnderlyingFutureIDSource()
            : base(Tags.UnderlyingFutureIDSource) { }
        public UnderlyingFutureIDSource(string val)
            : base(Tags.UnderlyingFutureIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingStrikeIndexCurvePoint Field
    /// </summary>/
    public sealed class UnderlyingStrikeIndexCurvePoint : StringField
    {
        public const int TAG = 2622;

        public UnderlyingStrikeIndexCurvePoint()
            : base(Tags.UnderlyingStrikeIndexCurvePoint) { }
        public UnderlyingStrikeIndexCurvePoint(string val)
            : base(Tags.UnderlyingStrikeIndexCurvePoint, val) { }

    }


    /// <summary>
    /// UnderlyingStrikeIndexQuote Field
    /// </summary>/
    public sealed class UnderlyingStrikeIndexQuote : IntField
    {
        public const int TAG = 2623;

        public UnderlyingStrikeIndexQuote()
            : base(Tags.UnderlyingStrikeIndexQuote) { }
        public UnderlyingStrikeIndexQuote(int val)
            : base(Tags.UnderlyingStrikeIndexQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// UnderlyingExtraordinaryEventAdjustmentMethod Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryEventAdjustmentMethod : IntField
    {
        public const int TAG = 2624;

        public UnderlyingExtraordinaryEventAdjustmentMethod()
            : base(Tags.UnderlyingExtraordinaryEventAdjustmentMethod) { }
        public UnderlyingExtraordinaryEventAdjustmentMethod(int val)
            : base(Tags.UnderlyingExtraordinaryEventAdjustmentMethod, val) { }


        // Field Enumerations
        public const int CALCULATION_AGENT = 0;
        public const int OPTIONS_EXCHANGE = 1;
    }


    /// <summary>
    /// UnderlyingExchangeLookAlike Field
    /// </summary>/
    public sealed class UnderlyingExchangeLookAlike : BooleanField
    {
        public const int TAG = 2625;

        public UnderlyingExchangeLookAlike()
            : base(Tags.UnderlyingExchangeLookAlike) { }
        public UnderlyingExchangeLookAlike(Boolean val)
            : base(Tags.UnderlyingExchangeLookAlike, val) { }

    }


    /// <summary>
    /// UnderlyingAverageVolumeLimitationPercentage Field
    /// </summary>/
    public sealed class UnderlyingAverageVolumeLimitationPercentage : DecimalField
    {
        public const int TAG = 2626;

        public UnderlyingAverageVolumeLimitationPercentage()
            : base(Tags.UnderlyingAverageVolumeLimitationPercentage) { }
        public UnderlyingAverageVolumeLimitationPercentage(Decimal val)
            : base(Tags.UnderlyingAverageVolumeLimitationPercentage, val) { }

    }


    /// <summary>
    /// UnderlyingAverageVolumeLimitationPeriodDays Field
    /// </summary>/
    public sealed class UnderlyingAverageVolumeLimitationPeriodDays : IntField
    {
        public const int TAG = 2627;

        public UnderlyingAverageVolumeLimitationPeriodDays()
            : base(Tags.UnderlyingAverageVolumeLimitationPeriodDays) { }
        public UnderlyingAverageVolumeLimitationPeriodDays(int val)
            : base(Tags.UnderlyingAverageVolumeLimitationPeriodDays, val) { }

    }


    /// <summary>
    /// UnderlyingDepositoryReceiptIndicator Field
    /// </summary>/
    public sealed class UnderlyingDepositoryReceiptIndicator : BooleanField
    {
        public const int TAG = 2628;

        public UnderlyingDepositoryReceiptIndicator()
            : base(Tags.UnderlyingDepositoryReceiptIndicator) { }
        public UnderlyingDepositoryReceiptIndicator(Boolean val)
            : base(Tags.UnderlyingDepositoryReceiptIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingOpenUnits Field
    /// </summary>/
    public sealed class UnderlyingOpenUnits : DecimalField
    {
        public const int TAG = 2629;

        public UnderlyingOpenUnits()
            : base(Tags.UnderlyingOpenUnits) { }
        public UnderlyingOpenUnits(Decimal val)
            : base(Tags.UnderlyingOpenUnits, val) { }

    }


    /// <summary>
    /// UnderlyingBasketDivisor Field
    /// </summary>/
    public sealed class UnderlyingBasketDivisor : DecimalField
    {
        public const int TAG = 2630;

        public UnderlyingBasketDivisor()
            : base(Tags.UnderlyingBasketDivisor) { }
        public UnderlyingBasketDivisor(Decimal val)
            : base(Tags.UnderlyingBasketDivisor, val) { }

    }


    /// <summary>
    /// UnderlyingInstrumentXID Field
    /// </summary>/
    public sealed class UnderlyingInstrumentXID : StringField
    {
        public const int TAG = 2631;

        public UnderlyingInstrumentXID()
            : base(Tags.UnderlyingInstrumentXID) { }
        public UnderlyingInstrumentXID(string val)
            : base(Tags.UnderlyingInstrumentXID, val) { }

    }


    /// <summary>
    /// CollateralAmountType Field
    /// </summary>/
    public sealed class CollateralAmountType : IntField
    {
        public const int TAG = 2632;

        public CollateralAmountType()
            : base(Tags.CollateralAmountType) { }
        public CollateralAmountType(int val)
            : base(Tags.CollateralAmountType, val) { }


        // Field Enumerations
        public const int MARKET_VALUATION = 0;
        public const int PORTFOLIO_VALUE_BEFORE_PROCESSING_PLEDGE_REQUEST = 1;
        public const int VALUE_CONFIRMED_AS_LOCKED_UP_FOR_PROCESSING_A_PLEDGE_REQUEST = 2;
        public const int CREDIT_VALUE_OF_COLLATERAL_AT_CCP_PROCESSING_A_PLEDGE_REQUEST = 3;
        public const int ADDITIONAL_COLLATERAL_VALUE = 4;
        public const int ESTIMATED_MARKET_VALUATION = 5;
    }


    /// <summary>
    /// NoMiscFeeSubTypes Field
    /// </summary>/
    public sealed class NoMiscFeeSubTypes : IntField
    {
        public const int TAG = 2633;

        public NoMiscFeeSubTypes()
            : base(Tags.NoMiscFeeSubTypes) { }
        public NoMiscFeeSubTypes(int val)
            : base(Tags.NoMiscFeeSubTypes, val) { }

    }


    /// <summary>
    /// MiscFeeSubType Field
    /// </summary>/
    public sealed class MiscFeeSubType : StringField
    {
        public const int TAG = 2634;

        public MiscFeeSubType()
            : base(Tags.MiscFeeSubType) { }
        public MiscFeeSubType(string val)
            : base(Tags.MiscFeeSubType, val) { }

    }


    /// <summary>
    /// MiscFeeSubTypeAmt Field
    /// </summary>/
    public sealed class MiscFeeSubTypeAmt : DecimalField
    {
        public const int TAG = 2635;

        public MiscFeeSubTypeAmt()
            : base(Tags.MiscFeeSubTypeAmt) { }
        public MiscFeeSubTypeAmt(Decimal val)
            : base(Tags.MiscFeeSubTypeAmt, val) { }

    }


    /// <summary>
    /// MiscFeeSubTypeDesc Field
    /// </summary>/
    public sealed class MiscFeeSubTypeDesc : StringField
    {
        public const int TAG = 2636;

        public MiscFeeSubTypeDesc()
            : base(Tags.MiscFeeSubTypeDesc) { }
        public MiscFeeSubTypeDesc(string val)
            : base(Tags.MiscFeeSubTypeDesc, val) { }

    }


    /// <summary>
    /// EncodedMiscFeeSubTypeDescLen Field
    /// </summary>/
    public sealed class EncodedMiscFeeSubTypeDescLen : IntField
    {
        public const int TAG = 2637;

        public EncodedMiscFeeSubTypeDescLen()
            : base(Tags.EncodedMiscFeeSubTypeDescLen) { }
        public EncodedMiscFeeSubTypeDescLen(int val)
            : base(Tags.EncodedMiscFeeSubTypeDescLen, val) { }

    }


    /// <summary>
    /// EncodedMiscFeeSubTypeDesc Field
    /// </summary>/
    public sealed class EncodedMiscFeeSubTypeDesc : StringField
    {
        public const int TAG = 2638;

        public EncodedMiscFeeSubTypeDesc()
            : base(Tags.EncodedMiscFeeSubTypeDesc) { }
        public EncodedMiscFeeSubTypeDesc(string val)
            : base(Tags.EncodedMiscFeeSubTypeDesc, val) { }

    }


    /// <summary>
    /// NoCommissions Field
    /// </summary>/
    public sealed class NoCommissions : IntField
    {
        public const int TAG = 2639;

        public NoCommissions()
            : base(Tags.NoCommissions) { }
        public NoCommissions(int val)
            : base(Tags.NoCommissions, val) { }

    }


    /// <summary>
    /// CommissionAmount Field
    /// </summary>/
    public sealed class CommissionAmount : DecimalField
    {
        public const int TAG = 2640;

        public CommissionAmount()
            : base(Tags.CommissionAmount) { }
        public CommissionAmount(Decimal val)
            : base(Tags.CommissionAmount, val) { }

    }


    /// <summary>
    /// CommissionAmountType Field
    /// </summary>/
    public sealed class CommissionAmountType : IntField
    {
        public const int TAG = 2641;

        public CommissionAmountType()
            : base(Tags.CommissionAmountType) { }
        public CommissionAmountType(int val)
            : base(Tags.CommissionAmountType, val) { }


        // Field Enumerations
        public const int UNSPECIFIED = 0;
        public const int ACCEPTANCE = 1;
        public const int BROKER = 2;
        public const int CLEARING_BROKER = 3;
        public const int RETAIL = 4;
        public const int SALES_COMMISSION = 5;
        public const int LOCAL_COMMISSION = 6;
        public const int RESEARCH_PAYMENT = 7;
    }


    /// <summary>
    /// CommissionBasis Field
    /// </summary>/
    public sealed class CommissionBasis : CharField
    {
        public const int TAG = 2642;

        public CommissionBasis()
            : base(Tags.CommissionBasis) { }
        public CommissionBasis(char val)
            : base(Tags.CommissionBasis, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
    }


    /// <summary>
    /// CommissionCurrency Field
    /// </summary>/
    public sealed class CommissionCurrency : StringField
    {
        public const int TAG = 2643;

        public CommissionCurrency()
            : base(Tags.CommissionCurrency) { }
        public CommissionCurrency(string val)
            : base(Tags.CommissionCurrency, val) { }

    }


    /// <summary>
    /// CommissionUnitOfMeasure Field
    /// </summary>/
    public sealed class CommissionUnitOfMeasure : StringField
    {
        public const int TAG = 2644;

        public CommissionUnitOfMeasure()
            : base(Tags.CommissionUnitOfMeasure) { }
        public CommissionUnitOfMeasure(string val)
            : base(Tags.CommissionUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// CommissionUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class CommissionUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 2645;

        public CommissionUnitOfMeasureCurrency()
            : base(Tags.CommissionUnitOfMeasureCurrency) { }
        public CommissionUnitOfMeasureCurrency(string val)
            : base(Tags.CommissionUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// CommissionRate Field
    /// </summary>/
    public sealed class CommissionRate : DecimalField
    {
        public const int TAG = 2646;

        public CommissionRate()
            : base(Tags.CommissionRate) { }
        public CommissionRate(Decimal val)
            : base(Tags.CommissionRate, val) { }

    }


    /// <summary>
    /// CommissionSharedIndicator Field
    /// </summary>/
    public sealed class CommissionSharedIndicator : BooleanField
    {
        public const int TAG = 2647;

        public CommissionSharedIndicator()
            : base(Tags.CommissionSharedIndicator) { }
        public CommissionSharedIndicator(Boolean val)
            : base(Tags.CommissionSharedIndicator, val) { }

    }


    /// <summary>
    /// CommissionAmountShared Field
    /// </summary>/
    public sealed class CommissionAmountShared : DecimalField
    {
        public const int TAG = 2648;

        public CommissionAmountShared()
            : base(Tags.CommissionAmountShared) { }
        public CommissionAmountShared(Decimal val)
            : base(Tags.CommissionAmountShared, val) { }

    }


    /// <summary>
    /// CommissionLegRefID Field
    /// </summary>/
    public sealed class CommissionLegRefID : StringField
    {
        public const int TAG = 2649;

        public CommissionLegRefID()
            : base(Tags.CommissionLegRefID) { }
        public CommissionLegRefID(string val)
            : base(Tags.CommissionLegRefID, val) { }

    }


    /// <summary>
    /// CommissionDesc Field
    /// </summary>/
    public sealed class CommissionDesc : StringField
    {
        public const int TAG = 2650;

        public CommissionDesc()
            : base(Tags.CommissionDesc) { }
        public CommissionDesc(string val)
            : base(Tags.CommissionDesc, val) { }

    }


    /// <summary>
    /// EncodedCommissionDescLen Field
    /// </summary>/
    public sealed class EncodedCommissionDescLen : IntField
    {
        public const int TAG = 2651;

        public EncodedCommissionDescLen()
            : base(Tags.EncodedCommissionDescLen) { }
        public EncodedCommissionDescLen(int val)
            : base(Tags.EncodedCommissionDescLen, val) { }

    }


    /// <summary>
    /// EncodedCommissionDesc Field
    /// </summary>/
    public sealed class EncodedCommissionDesc : StringField
    {
        public const int TAG = 2652;

        public EncodedCommissionDesc()
            : base(Tags.EncodedCommissionDesc) { }
        public EncodedCommissionDesc(string val)
            : base(Tags.EncodedCommissionDesc, val) { }

    }


    /// <summary>
    /// NoAllocCommissions Field
    /// </summary>/
    public sealed class NoAllocCommissions : IntField
    {
        public const int TAG = 2653;

        public NoAllocCommissions()
            : base(Tags.NoAllocCommissions) { }
        public NoAllocCommissions(int val)
            : base(Tags.NoAllocCommissions, val) { }

    }


    /// <summary>
    /// AllocCommissionAmount Field
    /// </summary>/
    public sealed class AllocCommissionAmount : DecimalField
    {
        public const int TAG = 2654;

        public AllocCommissionAmount()
            : base(Tags.AllocCommissionAmount) { }
        public AllocCommissionAmount(Decimal val)
            : base(Tags.AllocCommissionAmount, val) { }

    }


    /// <summary>
    /// AllocCommissionAmountType Field
    /// </summary>/
    public sealed class AllocCommissionAmountType : IntField
    {
        public const int TAG = 2655;

        public AllocCommissionAmountType()
            : base(Tags.AllocCommissionAmountType) { }
        public AllocCommissionAmountType(int val)
            : base(Tags.AllocCommissionAmountType, val) { }


        // Field Enumerations
        public const int UNSPECIFIED = 0;
        public const int ACCEPTANCE = 1;
        public const int BROKER = 2;
        public const int CLEARING_BROKER = 3;
        public const int RETAIL = 4;
        public const int SALES_COMMISSION = 5;
        public const int LOCAL_COMMISSION = 6;
        public const int RESEARCH_PAYMENT = 7;
    }


    /// <summary>
    /// AllocCommissionBasis Field
    /// </summary>/
    public sealed class AllocCommissionBasis : CharField
    {
        public const int TAG = 2656;

        public AllocCommissionBasis()
            : base(Tags.AllocCommissionBasis) { }
        public AllocCommissionBasis(char val)
            : base(Tags.AllocCommissionBasis, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
    }


    /// <summary>
    /// AllocCommissionCurrency Field
    /// </summary>/
    public sealed class AllocCommissionCurrency : StringField
    {
        public const int TAG = 2657;

        public AllocCommissionCurrency()
            : base(Tags.AllocCommissionCurrency) { }
        public AllocCommissionCurrency(string val)
            : base(Tags.AllocCommissionCurrency, val) { }

    }


    /// <summary>
    /// AllocCommissionUnitOfMeasure Field
    /// </summary>/
    public sealed class AllocCommissionUnitOfMeasure : StringField
    {
        public const int TAG = 2658;

        public AllocCommissionUnitOfMeasure()
            : base(Tags.AllocCommissionUnitOfMeasure) { }
        public AllocCommissionUnitOfMeasure(string val)
            : base(Tags.AllocCommissionUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// AllocCommissionUnitOfMeasureCurrency Field
    /// </summary>/
    public sealed class AllocCommissionUnitOfMeasureCurrency : StringField
    {
        public const int TAG = 2659;

        public AllocCommissionUnitOfMeasureCurrency()
            : base(Tags.AllocCommissionUnitOfMeasureCurrency) { }
        public AllocCommissionUnitOfMeasureCurrency(string val)
            : base(Tags.AllocCommissionUnitOfMeasureCurrency, val) { }

    }


    /// <summary>
    /// AllocCommissionRate Field
    /// </summary>/
    public sealed class AllocCommissionRate : DecimalField
    {
        public const int TAG = 2660;

        public AllocCommissionRate()
            : base(Tags.AllocCommissionRate) { }
        public AllocCommissionRate(Decimal val)
            : base(Tags.AllocCommissionRate, val) { }

    }


    /// <summary>
    /// AllocCommissionSharedIndicator Field
    /// </summary>/
    public sealed class AllocCommissionSharedIndicator : BooleanField
    {
        public const int TAG = 2661;

        public AllocCommissionSharedIndicator()
            : base(Tags.AllocCommissionSharedIndicator) { }
        public AllocCommissionSharedIndicator(Boolean val)
            : base(Tags.AllocCommissionSharedIndicator, val) { }

    }


    /// <summary>
    /// AllocCommissionAmountShared Field
    /// </summary>/
    public sealed class AllocCommissionAmountShared : DecimalField
    {
        public const int TAG = 2662;

        public AllocCommissionAmountShared()
            : base(Tags.AllocCommissionAmountShared) { }
        public AllocCommissionAmountShared(Decimal val)
            : base(Tags.AllocCommissionAmountShared, val) { }

    }


    /// <summary>
    /// AllocCommissionLegRefID Field
    /// </summary>/
    public sealed class AllocCommissionLegRefID : StringField
    {
        public const int TAG = 2663;

        public AllocCommissionLegRefID()
            : base(Tags.AllocCommissionLegRefID) { }
        public AllocCommissionLegRefID(string val)
            : base(Tags.AllocCommissionLegRefID, val) { }

    }


    /// <summary>
    /// AllocCommissionDesc Field
    /// </summary>/
    public sealed class AllocCommissionDesc : StringField
    {
        public const int TAG = 2664;

        public AllocCommissionDesc()
            : base(Tags.AllocCommissionDesc) { }
        public AllocCommissionDesc(string val)
            : base(Tags.AllocCommissionDesc, val) { }

    }


    /// <summary>
    /// EncodedAllocCommissionDescLen Field
    /// </summary>/
    public sealed class EncodedAllocCommissionDescLen : IntField
    {
        public const int TAG = 2665;

        public EncodedAllocCommissionDescLen()
            : base(Tags.EncodedAllocCommissionDescLen) { }
        public EncodedAllocCommissionDescLen(int val)
            : base(Tags.EncodedAllocCommissionDescLen, val) { }

    }


    /// <summary>
    /// EncodedAllocCommissionDesc Field
    /// </summary>/
    public sealed class EncodedAllocCommissionDesc : StringField
    {
        public const int TAG = 2666;

        public EncodedAllocCommissionDesc()
            : base(Tags.EncodedAllocCommissionDesc) { }
        public EncodedAllocCommissionDesc(string val)
            : base(Tags.EncodedAllocCommissionDesc, val) { }

    }


    /// <summary>
    /// AlgorithmicTradeIndicator Field
    /// </summary>/
    public sealed class AlgorithmicTradeIndicator : IntField
    {
        public const int TAG = 2667;

        public AlgorithmicTradeIndicator()
            : base(Tags.AlgorithmicTradeIndicator) { }
        public AlgorithmicTradeIndicator(int val)
            : base(Tags.AlgorithmicTradeIndicator, val) { }


        // Field Enumerations
        public const int NON_ALGORITHMIC_TRADE = 0;
        public const int ALGORITHMIC_TRADE = 1;
    }


    /// <summary>
    /// NoTrdRegPublications Field
    /// </summary>/
    public sealed class NoTrdRegPublications : IntField
    {
        public const int TAG = 2668;

        public NoTrdRegPublications()
            : base(Tags.NoTrdRegPublications) { }
        public NoTrdRegPublications(int val)
            : base(Tags.NoTrdRegPublications, val) { }

    }


    /// <summary>
    /// TrdRegPublicationType Field
    /// </summary>/
    public sealed class TrdRegPublicationType : IntField
    {
        public const int TAG = 2669;

        public TrdRegPublicationType()
            : base(Tags.TrdRegPublicationType) { }
        public TrdRegPublicationType(int val)
            : base(Tags.TrdRegPublicationType, val) { }


        // Field Enumerations
        public const int PRE_TRADE_TRANSPARENCY_WAIVER = 0;
        public const int POST_TRADE_DEFERRAL = 1;
        public const int EXEMPT_FROM_PUBLICATION = 2;
        public const int ORDER_LEVEL_PUBLICATION_TO_SUBSCRIBERS = 3;
        public const int PRICE_LEVEL_PUBLICATION_TO_SUBSCRIBERS = 4;
        public const int ORDER_LEVEL_PUBLICATION_TO_THE_PUBLIC = 5;
        public const int PUBLICATION_INTERNAL_TO_EXECUTION_VENUE = 6;
    }


    /// <summary>
    /// TrdRegPublicationReason Field
    /// </summary>/
    public sealed class TrdRegPublicationReason : IntField
    {
        public const int TAG = 2670;

        public TrdRegPublicationReason()
            : base(Tags.TrdRegPublicationReason) { }
        public TrdRegPublicationReason(int val)
            : base(Tags.TrdRegPublicationReason, val) { }


        // Field Enumerations
        public const int NO_PRECEDING_ORDER_IN_BOOK_AS_TRANSACTION_PRICE_SET_WITHIN_AVERAGE_SPREAD_OF_A_LIQUID_INSTRUMENT = 0;
        public const int NO_PRECEDING_ORDER_IN_BOOK_AS_TRANSACTION_PRICE_DEPENDS_ON_SYSTEM_SET_REFERENCE_PRICE_FOR_AN_ILLIQUID_INSTRUMENT = 1;
        public const int NO_PRECEDING_ORDER_IN_BOOK_AS_TRANSACTION_PRICE_IS_FOR_TRANSACTION_SUBJECT_TO_CONDITIONS_OTHER_THAN_CURRENT_MARKET_PRICE = 2;
        public const int NO_PUBLIC_PRICE_FOR_PRECEDING_ORDER_AS_PUBLIC_REFERENCE_PRICE_WAS_USED_FOR_MATCHING_ORDERS = 3;
        public const int NO_PUBLIC_PRICE_QUOTED_AS_INSTRUMENT_IS_ILLIQUID = 4;
        public const int NO_PUBLIC_PRICE_QUOTED_DUE_TO_SIZE = 5;
        public const int DEFERRAL_DUE_TO_LARGE_IN_SCALE = 6;
        public const int DEFERRAL_DUE_TO_ILLIQUID_INSTRUMENT = 7;
        public const int DEFERRAL_DUE_TO_SIZE_SPECIFIC = 8;
        public const int NO_PUBLIC_PRICE_AND_OR_SIZE_QUOTED_AS_TRANSACTION_IS_LARGE_IN_SCALE = 9;
        public const int NO_PUBLIC_PRICE_AND_OR_SIZE_QUOTED_DUE_TO_ORDER_BEING_HIDDEN = 10;
        public const int EXEMPTED_DUE_TO_SECURITIES_FINANCING_TRANSACTION = 11;
        public const int EXEMPTED_DUE_TO_EUROPEAN_SYSTEM_OF_CENTRAL_BANKS = 12;
        public const int EXCEPTION_DUE_TO_REPORT_BY_PAPER = 13;
        public const int EXCEPTION_DUE_TO_TRADE_WITH_NON_REPORTING_PARTY = 14;
        public const int EXCEPTION_DUE_TO_INTRA_FIRM_ORDER = 15;
        public const int REPORTED_OUTSIDE_OF_REPORTING_HOURS = 16;
    }


    /// <summary>
    /// SideTradeReportingIndicator Field
    /// </summary>/
    public sealed class SideTradeReportingIndicator : IntField
    {
        public const int TAG = 2671;

        public SideTradeReportingIndicator()
            : base(Tags.SideTradeReportingIndicator) { }
        public SideTradeReportingIndicator(int val)
            : base(Tags.SideTradeReportingIndicator, val) { }


        // Field Enumerations
        public const int TRADE_HAS_NOT = 0;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_BY_A_TRADING_VENUE_AS_AN_ON_BOOK_TRADE = 1;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_SYSTEMATIC_INTERNALISER_SELLER_TRADE = 2;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_SYSTEMATIC_INTERNALISER_BUYER_TRADE = 3;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_NON_SYSTEMATIC_INTERNALISER_SELLER_TRADE = 4;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_UNDER_A_SUB_DELEGATION_ARRANGEMENT_BY_AN_INVESTMENT_FIRM_TO_A_REPORTING_FACILITY = 5;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED = 6;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_AS_A_NON_SYSTEMATIC_INTERNALISER_BUYER_TRADE = 7;
        public const int TRADE_HAS_BEEN_OR_WILL_BE_REPORTED_BY_A_TRADING_VENUE_AS_AN_OFF_BOOK_TRADE = 8;
        public const int TRADE_IS_NOT_REPORTABLE = 9;
    }


    /// <summary>
    /// CrossRequestID Field
    /// </summary>/
    public sealed class CrossRequestID : StringField
    {
        public const int TAG = 2672;

        public CrossRequestID()
            : base(Tags.CrossRequestID) { }
        public CrossRequestID(string val)
            : base(Tags.CrossRequestID, val) { }

    }


    /// <summary>
    /// FillMatchID Field
    /// </summary>/
    public sealed class FillMatchID : StringField
    {
        public const int TAG = 2673;

        public FillMatchID()
            : base(Tags.FillMatchID) { }
        public FillMatchID(string val)
            : base(Tags.FillMatchID, val) { }

    }


    /// <summary>
    /// FillMatchSubID Field
    /// </summary>/
    public sealed class FillMatchSubID : StringField
    {
        public const int TAG = 2674;

        public FillMatchSubID()
            : base(Tags.FillMatchSubID) { }
        public FillMatchSubID(string val)
            : base(Tags.FillMatchSubID, val) { }

    }


    /// <summary>
    /// MassActionReason Field
    /// </summary>/
    public sealed class MassActionReason : IntField
    {
        public const int TAG = 2675;

        public MassActionReason()
            : base(Tags.MassActionReason) { }
        public MassActionReason(int val)
            : base(Tags.MassActionReason, val) { }


        // Field Enumerations
        public const int NO_SPECIAL_REASON = 0;
        public const int TRADING_RISK_CONTROL = 1;
        public const int CLEARING_RISK_CONTROL = 2;
        public const int MARKET_MAKER_PROTECTION = 3;
        public const int STOP_TRADING = 4;
        public const int EMERGENCY_ACTION = 5;
        public const int SESSION_LOSS_OR_LOGOUT = 6;
        public const int DUPLICATE_LOGIN = 7;
        public const int PRODUCT_NOT_TRADED = 8;
        public const int INSTRUMENT_NOT_TRADED = 9;
        public const int COMPLEX_INSTRUMENT_DELETED = 10;
        public const int CIRCUIT_BREAKER_ACTIVATED = 11;
        public const int OTHER = 99;
    }


    /// <summary>
    /// MaximumPricePercentage Field
    /// </summary>/
    public sealed class MaximumPricePercentage : DecimalField
    {
        public const int TAG = 2676;

        public MaximumPricePercentage()
            : base(Tags.MaximumPricePercentage) { }
        public MaximumPricePercentage(Decimal val)
            : base(Tags.MaximumPricePercentage, val) { }

    }


    /// <summary>
    /// NotAffectedReason Field
    /// </summary>/
    public sealed class NotAffectedReason : IntField
    {
        public const int TAG = 2677;

        public NotAffectedReason()
            : base(Tags.NotAffectedReason) { }
        public NotAffectedReason(int val)
            : base(Tags.NotAffectedReason, val) { }


        // Field Enumerations
        public const int ORDER_SUSPENDED = 0;
        public const int INSTRUMENT_SUSPENDED = 1;
    }


    /// <summary>
    /// TotalNotAffectedOrders Field
    /// </summary>/
    public sealed class TotalNotAffectedOrders : IntField
    {
        public const int TAG = 2678;

        public TotalNotAffectedOrders()
            : base(Tags.TotalNotAffectedOrders) { }
        public TotalNotAffectedOrders(int val)
            : base(Tags.TotalNotAffectedOrders, val) { }

    }


    /// <summary>
    /// OrderOwnershipIndicator Field
    /// </summary>/
    public sealed class OrderOwnershipIndicator : IntField
    {
        public const int TAG = 2679;

        public OrderOwnershipIndicator()
            : base(Tags.OrderOwnershipIndicator) { }
        public OrderOwnershipIndicator(int val)
            : base(Tags.OrderOwnershipIndicator, val) { }


        // Field Enumerations
        public const int NO_CHANGE_OF_OWNERSHIP = 0;
        public const int CHANGE_OF_OWNERSHIP_TO_EXECUTING_PARTY = 1;
        public const int CHANGE_OF_OWNERSHIP_TO_ENTERING_PARTY = 2;
        public const int CHANGE_OF_OWNERSHIP_TO_SPECIFIED_PARTY = 3;
    }


    /// <summary>
    /// LegAccount Field
    /// </summary>/
    public sealed class LegAccount : StringField
    {
        public const int TAG = 2680;

        public LegAccount()
            : base(Tags.LegAccount) { }
        public LegAccount(string val)
            : base(Tags.LegAccount, val) { }

    }


    /// <summary>
    /// InTheMoneyCondition Field
    /// </summary>/
    public sealed class InTheMoneyCondition : IntField
    {
        public const int TAG = 2681;

        public InTheMoneyCondition()
            : base(Tags.InTheMoneyCondition) { }
        public InTheMoneyCondition(int val)
            : base(Tags.InTheMoneyCondition, val) { }


        // Field Enumerations
        public const int STANDARD_IN_THE_MONEY = 0;
        public const int AT_THE_MONEY_IS_IN_THE_MONEY = 1;
        public const int AT_THE_MONEY_CALL_IS_IN_THE_MONEY = 2;
        public const int AT_THE_MONEY_PUT_IS_IN_THE_MONEY = 3;
    }


    /// <summary>
    /// LegInTheMoneyCondition Field
    /// </summary>/
    public sealed class LegInTheMoneyCondition : IntField
    {
        public const int TAG = 2682;

        public LegInTheMoneyCondition()
            : base(Tags.LegInTheMoneyCondition) { }
        public LegInTheMoneyCondition(int val)
            : base(Tags.LegInTheMoneyCondition, val) { }


        // Field Enumerations
        public const int STANDARD_IN_THE_MONEY = 0;
        public const int AT_THE_MONEY_IS_IN_THE_MONEY = 1;
        public const int AT_THE_MONEY_CALL_IS_IN_THE_MONEY = 2;
        public const int AT_THE_MONEY_PUT_IS_IN_THE_MONEY = 3;
    }


    /// <summary>
    /// UnderlyingInTheMoneyCondition Field
    /// </summary>/
    public sealed class UnderlyingInTheMoneyCondition : IntField
    {
        public const int TAG = 2683;

        public UnderlyingInTheMoneyCondition()
            : base(Tags.UnderlyingInTheMoneyCondition) { }
        public UnderlyingInTheMoneyCondition(int val)
            : base(Tags.UnderlyingInTheMoneyCondition, val) { }


        // Field Enumerations
        public const int STANDARD_IN_THE_MONEY = 0;
        public const int AT_THE_MONEY_IS_IN_THE_MONEY = 1;
        public const int AT_THE_MONEY_CALL_IS_IN_THE_MONEY = 2;
        public const int AT_THE_MONEY_PUT_IS_IN_THE_MONEY = 3;
    }


    /// <summary>
    /// DerivativeInTheMoneyCondition Field
    /// </summary>/
    public sealed class DerivativeInTheMoneyCondition : IntField
    {
        public const int TAG = 2684;

        public DerivativeInTheMoneyCondition()
            : base(Tags.DerivativeInTheMoneyCondition) { }
        public DerivativeInTheMoneyCondition(int val)
            : base(Tags.DerivativeInTheMoneyCondition, val) { }


        // Field Enumerations
        public const int STANDARD_IN_THE_MONEY = 0;
        public const int AT_THE_MONEY_IS_IN_THE_MONEY = 1;
        public const int AT_THE_MONEY_CALL_IS_IN_THE_MONEY = 2;
        public const int AT_THE_MONEY_PUT_IS_IN_THE_MONEY = 3;
    }


    /// <summary>
    /// ContraryInstructionEligibilityIndicator Field
    /// </summary>/
    public sealed class ContraryInstructionEligibilityIndicator : BooleanField
    {
        public const int TAG = 2685;

        public ContraryInstructionEligibilityIndicator()
            : base(Tags.ContraryInstructionEligibilityIndicator) { }
        public ContraryInstructionEligibilityIndicator(Boolean val)
            : base(Tags.ContraryInstructionEligibilityIndicator, val) { }

    }


    /// <summary>
    /// LegContraryInstructionEligibilityIndicator Field
    /// </summary>/
    public sealed class LegContraryInstructionEligibilityIndicator : BooleanField
    {
        public const int TAG = 2686;

        public LegContraryInstructionEligibilityIndicator()
            : base(Tags.LegContraryInstructionEligibilityIndicator) { }
        public LegContraryInstructionEligibilityIndicator(Boolean val)
            : base(Tags.LegContraryInstructionEligibilityIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingContraryInstructionEligibilityIndicator Field
    /// </summary>/
    public sealed class UnderlyingContraryInstructionEligibilityIndicator : BooleanField
    {
        public const int TAG = 2687;

        public UnderlyingContraryInstructionEligibilityIndicator()
            : base(Tags.UnderlyingContraryInstructionEligibilityIndicator) { }
        public UnderlyingContraryInstructionEligibilityIndicator(Boolean val)
            : base(Tags.UnderlyingContraryInstructionEligibilityIndicator, val) { }

    }


    /// <summary>
    /// DerivativeContraryInstructionEligibilityIndicator Field
    /// </summary>/
    public sealed class DerivativeContraryInstructionEligibilityIndicator : BooleanField
    {
        public const int TAG = 2688;

        public DerivativeContraryInstructionEligibilityIndicator()
            : base(Tags.DerivativeContraryInstructionEligibilityIndicator) { }
        public DerivativeContraryInstructionEligibilityIndicator(Boolean val)
            : base(Tags.DerivativeContraryInstructionEligibilityIndicator, val) { }

    }


    /// <summary>
    /// CollateralMarketPrice Field
    /// </summary>/
    public sealed class CollateralMarketPrice : DecimalField
    {
        public const int TAG = 2689;

        public CollateralMarketPrice()
            : base(Tags.CollateralMarketPrice) { }
        public CollateralMarketPrice(Decimal val)
            : base(Tags.CollateralMarketPrice, val) { }

    }


    /// <summary>
    /// CollateralPercentOverage Field
    /// </summary>/
    public sealed class CollateralPercentOverage : DecimalField
    {
        public const int TAG = 2690;

        public CollateralPercentOverage()
            : base(Tags.CollateralPercentOverage) { }
        public CollateralPercentOverage(Decimal val)
            : base(Tags.CollateralPercentOverage, val) { }

    }


    /// <summary>
    /// NoSideCollateralAmounts Field
    /// </summary>/
    public sealed class NoSideCollateralAmounts : IntField
    {
        public const int TAG = 2691;

        public NoSideCollateralAmounts()
            : base(Tags.NoSideCollateralAmounts) { }
        public NoSideCollateralAmounts(int val)
            : base(Tags.NoSideCollateralAmounts, val) { }

    }


    /// <summary>
    /// SideCollateralAmountMarketID Field
    /// </summary>/
    public sealed class SideCollateralAmountMarketID : StringField
    {
        public const int TAG = 2692;

        public SideCollateralAmountMarketID()
            : base(Tags.SideCollateralAmountMarketID) { }
        public SideCollateralAmountMarketID(string val)
            : base(Tags.SideCollateralAmountMarketID, val) { }

    }


    /// <summary>
    /// SideCollateralAmountMarketSegmentID Field
    /// </summary>/
    public sealed class SideCollateralAmountMarketSegmentID : StringField
    {
        public const int TAG = 2693;

        public SideCollateralAmountMarketSegmentID()
            : base(Tags.SideCollateralAmountMarketSegmentID) { }
        public SideCollateralAmountMarketSegmentID(string val)
            : base(Tags.SideCollateralAmountMarketSegmentID, val) { }

    }


    /// <summary>
    /// SideCollateralAmountType Field
    /// </summary>/
    public sealed class SideCollateralAmountType : IntField
    {
        public const int TAG = 2694;

        public SideCollateralAmountType()
            : base(Tags.SideCollateralAmountType) { }
        public SideCollateralAmountType(int val)
            : base(Tags.SideCollateralAmountType, val) { }


        // Field Enumerations
        public const int MARKET_VALUATION = 0;
        public const int PORTFOLIO_VALUE_BEFORE_PROCESSING_PLEDGE_REQUEST = 1;
        public const int VALUE_CONFIRMED_AS_LOCKED_UP_FOR_PROCESSING_A_PLEDGE_REQUEST = 2;
        public const int CREDIT_VALUE_OF_COLLATERAL_AT_CCP_PROCESSING_A_PLEDGE_REQUEST = 3;
        public const int ADDITIONAL_COLLATERAL_VALUE = 4;
        public const int ESTIMATED_MARKET_VALUATION = 5;
    }


    /// <summary>
    /// SideCollateralCurrency Field
    /// </summary>/
    public sealed class SideCollateralCurrency : StringField
    {
        public const int TAG = 2695;

        public SideCollateralCurrency()
            : base(Tags.SideCollateralCurrency) { }
        public SideCollateralCurrency(string val)
            : base(Tags.SideCollateralCurrency, val) { }

    }


    /// <summary>
    /// SideCollateralFXRate Field
    /// </summary>/
    public sealed class SideCollateralFXRate : DecimalField
    {
        public const int TAG = 2696;

        public SideCollateralFXRate()
            : base(Tags.SideCollateralFXRate) { }
        public SideCollateralFXRate(Decimal val)
            : base(Tags.SideCollateralFXRate, val) { }

    }


    /// <summary>
    /// SideCollateralFXRateCalc Field
    /// </summary>/
    public sealed class SideCollateralFXRateCalc : CharField
    {
        public const int TAG = 2697;

        public SideCollateralFXRateCalc()
            : base(Tags.SideCollateralFXRateCalc) { }
        public SideCollateralFXRateCalc(char val)
            : base(Tags.SideCollateralFXRateCalc, val) { }


        // Field Enumerations
        public const char DIVIDE = 'D';
        public const char MULTIPLY = 'M';
    }


    /// <summary>
    /// SideCollateralMarketPrice Field
    /// </summary>/
    public sealed class SideCollateralMarketPrice : DecimalField
    {
        public const int TAG = 2698;

        public SideCollateralMarketPrice()
            : base(Tags.SideCollateralMarketPrice) { }
        public SideCollateralMarketPrice(Decimal val)
            : base(Tags.SideCollateralMarketPrice, val) { }

    }


    /// <summary>
    /// SideCollateralPercentOverage Field
    /// </summary>/
    public sealed class SideCollateralPercentOverage : DecimalField
    {
        public const int TAG = 2699;

        public SideCollateralPercentOverage()
            : base(Tags.SideCollateralPercentOverage) { }
        public SideCollateralPercentOverage(Decimal val)
            : base(Tags.SideCollateralPercentOverage, val) { }

    }


    /// <summary>
    /// SideCollateralPortfolioID Field
    /// </summary>/
    public sealed class SideCollateralPortfolioID : StringField
    {
        public const int TAG = 2700;

        public SideCollateralPortfolioID()
            : base(Tags.SideCollateralPortfolioID) { }
        public SideCollateralPortfolioID(string val)
            : base(Tags.SideCollateralPortfolioID, val) { }

    }


    /// <summary>
    /// SideCollateralType Field
    /// </summary>/
    public sealed class SideCollateralType : StringField
    {
        public const int TAG = 2701;

        public SideCollateralType()
            : base(Tags.SideCollateralType) { }
        public SideCollateralType(string val)
            : base(Tags.SideCollateralType, val) { }

    }


    /// <summary>
    /// SideCurrentCollateralAmount Field
    /// </summary>/
    public sealed class SideCurrentCollateralAmount : DecimalField
    {
        public const int TAG = 2702;

        public SideCurrentCollateralAmount()
            : base(Tags.SideCurrentCollateralAmount) { }
        public SideCurrentCollateralAmount(Decimal val)
            : base(Tags.SideCurrentCollateralAmount, val) { }

    }


    /// <summary>
    /// SideHaircutIndicator Field
    /// </summary>/
    public sealed class SideHaircutIndicator : BooleanField
    {
        public const int TAG = 2703;

        public SideHaircutIndicator()
            : base(Tags.SideHaircutIndicator) { }
        public SideHaircutIndicator(Boolean val)
            : base(Tags.SideHaircutIndicator, val) { }

    }


    /// <summary>
    /// ExDestinationType Field
    /// </summary>/
    public sealed class ExDestinationType : IntField
    {
        public const int TAG = 2704;

        public ExDestinationType()
            : base(Tags.ExDestinationType) { }
        public ExDestinationType(int val)
            : base(Tags.ExDestinationType, val) { }


        // Field Enumerations
        public const int NO_RESTRICTION = 0;
        public const int CAN_BE_TRADED_ONLY_ON_A_TRADING_VENUE = 1;
        public const int CAN_BE_TRADED_ONLY_ON_A_SYSTEMATIC_INTERNALISER = 2;
        public const int CAN_BE_TRADED_ON_A_TRADING_VENUE_OR_SYSTEMATIC_INTERNALISER = 3;
    }


    /// <summary>
    /// MarketCondition Field
    /// </summary>/
    public sealed class MarketCondition : IntField
    {
        public const int TAG = 2705;

        public MarketCondition()
            : base(Tags.MarketCondition) { }
        public MarketCondition(int val)
            : base(Tags.MarketCondition, val) { }


        // Field Enumerations
        public const int NORMAL = 0;
        public const int STRESSED = 1;
        public const int EXCEPTIONAL = 2;
    }


    /// <summary>
    /// NoQuoteAttributes Field
    /// </summary>/
    public sealed class NoQuoteAttributes : IntField
    {
        public const int TAG = 2706;

        public NoQuoteAttributes()
            : base(Tags.NoQuoteAttributes) { }
        public NoQuoteAttributes(int val)
            : base(Tags.NoQuoteAttributes, val) { }

    }


    /// <summary>
    /// QuoteAttributeType Field
    /// </summary>/
    public sealed class QuoteAttributeType : IntField
    {
        public const int TAG = 2707;

        public QuoteAttributeType()
            : base(Tags.QuoteAttributeType) { }
        public QuoteAttributeType(int val)
            : base(Tags.QuoteAttributeType, val) { }


        // Field Enumerations
        public const int QUOTE_IS_ABOVE_STANDARD_MARKET_SIZE = 0;
        public const int QUOTE_IS_ABOVE_SIZE_SPECIFIC_TO_THE_INSTRUMENT = 1;
        public const int QUOTE_APPLICABLE_FOR_LIQUIDITY_PROVISION_ACTIVITY = 2;
        public const int QUOTE_ISSUER_STATUS = 3;
        public const int BID_OR_ASK_REQUEST = 4;
    }


    /// <summary>
    /// QuoteAttributeValue Field
    /// </summary>/
    public sealed class QuoteAttributeValue : StringField
    {
        public const int TAG = 2708;

        public QuoteAttributeValue()
            : base(Tags.QuoteAttributeValue) { }
        public QuoteAttributeValue(string val)
            : base(Tags.QuoteAttributeValue, val) { }

    }


    /// <summary>
    /// NoPriceQualifiers Field
    /// </summary>/
    public sealed class NoPriceQualifiers : IntField
    {
        public const int TAG = 2709;

        public NoPriceQualifiers()
            : base(Tags.NoPriceQualifiers) { }
        public NoPriceQualifiers(int val)
            : base(Tags.NoPriceQualifiers, val) { }

    }


    /// <summary>
    /// PriceQualifier Field
    /// </summary>/
    public sealed class PriceQualifier : IntField
    {
        public const int TAG = 2710;

        public PriceQualifier()
            : base(Tags.PriceQualifier) { }
        public PriceQualifier(int val)
            : base(Tags.PriceQualifier, val) { }


        // Field Enumerations
        public const int ACCRUED_INTEREST = 0;
        public const int TAX_IS_FACTORED_INTO_THE_PRICE = 1;
        public const int THE_EFFECT_OF_BOND_AMORTIZATION_OR_THE_FLOATING_RATE_INDEX_OFFSET_IS_FACTORED_INTO_THE_PRICE = 2;
    }


    /// <summary>
    /// MDValueTier Field
    /// </summary>/
    public sealed class MDValueTier : IntField
    {
        public const int TAG = 2711;

        public MDValueTier()
            : base(Tags.MDValueTier) { }
        public MDValueTier(int val)
            : base(Tags.MDValueTier, val) { }


        // Field Enumerations
        public const int RANGE_1 = 1;
        public const int RANGE_2 = 2;
        public const int RANGE_3 = 3;
    }


    /// <summary>
    /// MiscFeeQualifier Field
    /// </summary>/
    public sealed class MiscFeeQualifier : IntField
    {
        public const int TAG = 2712;

        public MiscFeeQualifier()
            : base(Tags.MiscFeeQualifier) { }
        public MiscFeeQualifier(int val)
            : base(Tags.MiscFeeQualifier, val) { }


        // Field Enumerations
        public const int CONTRIBUTES = 0;
        public const int DOES_NOT_CONTRIBUTE = 1;
    }


    /// <summary>
    /// MiscFeeDesc Field
    /// </summary>/
    public sealed class MiscFeeDesc : StringField
    {
        public const int TAG = 2713;

        public MiscFeeDesc()
            : base(Tags.MiscFeeDesc) { }
        public MiscFeeDesc(string val)
            : base(Tags.MiscFeeDesc, val) { }

    }


    /// <summary>
    /// FinancialInstrumentFullName Field
    /// </summary>/
    public sealed class FinancialInstrumentFullName : StringField
    {
        public const int TAG = 2714;

        public FinancialInstrumentFullName()
            : base(Tags.FinancialInstrumentFullName) { }
        public FinancialInstrumentFullName(string val)
            : base(Tags.FinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// EncodedFinancialInstrumentFullNameLen Field
    /// </summary>/
    public sealed class EncodedFinancialInstrumentFullNameLen : IntField
    {
        public const int TAG = 2715;

        public EncodedFinancialInstrumentFullNameLen()
            : base(Tags.EncodedFinancialInstrumentFullNameLen) { }
        public EncodedFinancialInstrumentFullNameLen(int val)
            : base(Tags.EncodedFinancialInstrumentFullNameLen, val) { }

    }


    /// <summary>
    /// EncodedFinancialInstrumentFullName Field
    /// </summary>/
    public sealed class EncodedFinancialInstrumentFullName : StringField
    {
        public const int TAG = 2716;

        public EncodedFinancialInstrumentFullName()
            : base(Tags.EncodedFinancialInstrumentFullName) { }
        public EncodedFinancialInstrumentFullName(string val)
            : base(Tags.EncodedFinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// LegFinancialInstrumentFullName Field
    /// </summary>/
    public sealed class LegFinancialInstrumentFullName : StringField
    {
        public const int TAG = 2717;

        public LegFinancialInstrumentFullName()
            : base(Tags.LegFinancialInstrumentFullName) { }
        public LegFinancialInstrumentFullName(string val)
            : base(Tags.LegFinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// EncodedLegFinancialInstrumentFullNameLen Field
    /// </summary>/
    public sealed class EncodedLegFinancialInstrumentFullNameLen : IntField
    {
        public const int TAG = 2718;

        public EncodedLegFinancialInstrumentFullNameLen()
            : base(Tags.EncodedLegFinancialInstrumentFullNameLen) { }
        public EncodedLegFinancialInstrumentFullNameLen(int val)
            : base(Tags.EncodedLegFinancialInstrumentFullNameLen, val) { }

    }


    /// <summary>
    /// EncodedLegFinancialInstrumentFullName Field
    /// </summary>/
    public sealed class EncodedLegFinancialInstrumentFullName : StringField
    {
        public const int TAG = 2719;

        public EncodedLegFinancialInstrumentFullName()
            : base(Tags.EncodedLegFinancialInstrumentFullName) { }
        public EncodedLegFinancialInstrumentFullName(string val)
            : base(Tags.EncodedLegFinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// UnderlyingFinancialInstrumentFullName Field
    /// </summary>/
    public sealed class UnderlyingFinancialInstrumentFullName : StringField
    {
        public const int TAG = 2720;

        public UnderlyingFinancialInstrumentFullName()
            : base(Tags.UnderlyingFinancialInstrumentFullName) { }
        public UnderlyingFinancialInstrumentFullName(string val)
            : base(Tags.UnderlyingFinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingFinancialInstrumentFullNameLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingFinancialInstrumentFullNameLen : IntField
    {
        public const int TAG = 2721;

        public EncodedUnderlyingFinancialInstrumentFullNameLen()
            : base(Tags.EncodedUnderlyingFinancialInstrumentFullNameLen) { }
        public EncodedUnderlyingFinancialInstrumentFullNameLen(int val)
            : base(Tags.EncodedUnderlyingFinancialInstrumentFullNameLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingFinancialInstrumentFullName Field
    /// </summary>/
    public sealed class EncodedUnderlyingFinancialInstrumentFullName : StringField
    {
        public const int TAG = 2722;

        public EncodedUnderlyingFinancialInstrumentFullName()
            : base(Tags.EncodedUnderlyingFinancialInstrumentFullName) { }
        public EncodedUnderlyingFinancialInstrumentFullName(string val)
            : base(Tags.EncodedUnderlyingFinancialInstrumentFullName, val) { }

    }


    /// <summary>
    /// UnderlyingIndexCurveUnit Field
    /// </summary>/
    public sealed class UnderlyingIndexCurveUnit : StringField
    {
        public const int TAG = 2723;

        public UnderlyingIndexCurveUnit()
            : base(Tags.UnderlyingIndexCurveUnit) { }
        public UnderlyingIndexCurveUnit(string val)
            : base(Tags.UnderlyingIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingIndexCurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingIndexCurvePeriod : IntField
    {
        public const int TAG = 2724;

        public UnderlyingIndexCurvePeriod()
            : base(Tags.UnderlyingIndexCurvePeriod) { }
        public UnderlyingIndexCurvePeriod(int val)
            : base(Tags.UnderlyingIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// CommissionAmountSubType Field
    /// </summary>/
    public sealed class CommissionAmountSubType : IntField
    {
        public const int TAG = 2725;

        public CommissionAmountSubType()
            : base(Tags.CommissionAmountSubType) { }
        public CommissionAmountSubType(int val)
            : base(Tags.CommissionAmountSubType, val) { }


        // Field Enumerations
        public const int RESEARCH_PAYMENT_ACCOUNT = 0;
        public const int COMISSION_SHARING_AGREEMENT = 1;
        public const int OTHER_TYPE_OF_RESEARCH_PAYMENT = 2;
    }


    /// <summary>
    /// AllocCommissionAmountSubType Field
    /// </summary>/
    public sealed class AllocCommissionAmountSubType : IntField
    {
        public const int TAG = 2726;

        public AllocCommissionAmountSubType()
            : base(Tags.AllocCommissionAmountSubType) { }
        public AllocCommissionAmountSubType(int val)
            : base(Tags.AllocCommissionAmountSubType, val) { }


        // Field Enumerations
        public const int RESEARCH_PAYMENT_ACCOUNT = 0;
        public const int COMISSION_SHARING_AGREEMENT = 1;
        public const int OTHER_TYPE_OF_RESEARCH_PAYMENT = 2;
    }


    /// <summary>
    /// AllocLegRefID Field
    /// </summary>/
    public sealed class AllocLegRefID : StringField
    {
        public const int TAG = 2727;

        public AllocLegRefID()
            : base(Tags.AllocLegRefID) { }
        public AllocLegRefID(string val)
            : base(Tags.AllocLegRefID, val) { }

    }


    /// <summary>
    /// FloatingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class FloatingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 2728;

        public FloatingRateIndexCurvePeriod()
            : base(Tags.FloatingRateIndexCurvePeriod) { }
        public FloatingRateIndexCurvePeriod(int val)
            : base(Tags.FloatingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// FloatingRateIndexCurveSpread Field
    /// </summary>/
    public sealed class FloatingRateIndexCurveSpread : DecimalField
    {
        public const int TAG = 2729;

        public FloatingRateIndexCurveSpread()
            : base(Tags.FloatingRateIndexCurveSpread) { }
        public FloatingRateIndexCurveSpread(Decimal val)
            : base(Tags.FloatingRateIndexCurveSpread, val) { }

    }


    /// <summary>
    /// FloatingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class FloatingRateIndexCurveUnit : StringField
    {
        public const int TAG = 2730;

        public FloatingRateIndexCurveUnit()
            : base(Tags.FloatingRateIndexCurveUnit) { }
        public FloatingRateIndexCurveUnit(string val)
            : base(Tags.FloatingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// FloatingRateIndexID Field
    /// </summary>/
    public sealed class FloatingRateIndexID : StringField
    {
        public const int TAG = 2731;

        public FloatingRateIndexID()
            : base(Tags.FloatingRateIndexID) { }
        public FloatingRateIndexID(string val)
            : base(Tags.FloatingRateIndexID, val) { }

    }


    /// <summary>
    /// FloatingRateIndexIDSource Field
    /// </summary>/
    public sealed class FloatingRateIndexIDSource : StringField
    {
        public const int TAG = 2732;

        public FloatingRateIndexIDSource()
            : base(Tags.FloatingRateIndexIDSource) { }
        public FloatingRateIndexIDSource(string val)
            : base(Tags.FloatingRateIndexIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// IndexRollMonth Field
    /// </summary>/
    public sealed class IndexRollMonth : StringField
    {
        public const int TAG = 2733;

        public IndexRollMonth()
            : base(Tags.IndexRollMonth) { }
        public IndexRollMonth(string val)
            : base(Tags.IndexRollMonth, val) { }

    }


    /// <summary>
    /// NoIndexRollMonths Field
    /// </summary>/
    public sealed class NoIndexRollMonths : IntField
    {
        public const int TAG = 2734;

        public NoIndexRollMonths()
            : base(Tags.NoIndexRollMonths) { }
        public NoIndexRollMonths(int val)
            : base(Tags.NoIndexRollMonths, val) { }

    }


    /// <summary>
    /// AssetSubType Field
    /// </summary>/
    public sealed class AssetSubType : StringField
    {
        public const int TAG = 2735;

        public AssetSubType()
            : base(Tags.AssetSubType) { }
        public AssetSubType(string val)
            : base(Tags.AssetSubType, val) { }

    }


    /// <summary>
    /// CommodityFinalPriceType Field
    /// </summary>/
    public sealed class CommodityFinalPriceType : IntField
    {
        public const int TAG = 2736;

        public CommodityFinalPriceType()
            : base(Tags.CommodityFinalPriceType) { }
        public CommodityFinalPriceType(int val)
            : base(Tags.CommodityFinalPriceType, val) { }


        // Field Enumerations
        public const int ARGUS_MCCLOSKEY = 0;
        public const int BALTIC = 1;
        public const int EXCHANGE = 2;
        public const int GLOBAL_COAL = 3;
        public const int IHS_MCCLOSKEY = 4;
        public const int PLATTS = 5;
        public const int OTHER = 99;
    }


    /// <summary>
    /// FinancialInstrumentShortName Field
    /// </summary>/
    public sealed class FinancialInstrumentShortName : StringField
    {
        public const int TAG = 2737;

        public FinancialInstrumentShortName()
            : base(Tags.FinancialInstrumentShortName) { }
        public FinancialInstrumentShortName(string val)
            : base(Tags.FinancialInstrumentShortName, val) { }

    }


    /// <summary>
    /// NextIndexRollDate Field
    /// </summary>/
    public sealed class NextIndexRollDate : StringField
    {
        public const int TAG = 2738;

        public NextIndexRollDate()
            : base(Tags.NextIndexRollDate) { }
        public NextIndexRollDate(string val)
            : base(Tags.NextIndexRollDate, val) { }

    }


    /// <summary>
    /// LegAssetSubType Field
    /// </summary>/
    public sealed class LegAssetSubType : StringField
    {
        public const int TAG = 2739;

        public LegAssetSubType()
            : base(Tags.LegAssetSubType) { }
        public LegAssetSubType(string val)
            : base(Tags.LegAssetSubType, val) { }

    }


    /// <summary>
    /// LegFinancialInstrumentShortName Field
    /// </summary>/
    public sealed class LegFinancialInstrumentShortName : StringField
    {
        public const int TAG = 2740;

        public LegFinancialInstrumentShortName()
            : base(Tags.LegFinancialInstrumentShortName) { }
        public LegFinancialInstrumentShortName(string val)
            : base(Tags.LegFinancialInstrumentShortName, val) { }

    }


    /// <summary>
    /// SecondaryAssetSubType Field
    /// </summary>/
    public sealed class SecondaryAssetSubType : StringField
    {
        public const int TAG = 2741;

        public SecondaryAssetSubType()
            : base(Tags.SecondaryAssetSubType) { }
        public SecondaryAssetSubType(string val)
            : base(Tags.SecondaryAssetSubType, val) { }

    }


    /// <summary>
    /// UnderlyingFinancialInstrumentShortName Field
    /// </summary>/
    public sealed class UnderlyingFinancialInstrumentShortName : StringField
    {
        public const int TAG = 2742;

        public UnderlyingFinancialInstrumentShortName()
            : base(Tags.UnderlyingFinancialInstrumentShortName) { }
        public UnderlyingFinancialInstrumentShortName(string val)
            : base(Tags.UnderlyingFinancialInstrumentShortName, val) { }

    }


    /// <summary>
    /// LegSecondaryAssetSubType Field
    /// </summary>/
    public sealed class LegSecondaryAssetSubType : StringField
    {
        public const int TAG = 2743;

        public LegSecondaryAssetSubType()
            : base(Tags.LegSecondaryAssetSubType) { }
        public LegSecondaryAssetSubType(string val)
            : base(Tags.LegSecondaryAssetSubType, val) { }

    }


    /// <summary>
    /// UnderlyingAssetSubType Field
    /// </summary>/
    public sealed class UnderlyingAssetSubType : StringField
    {
        public const int TAG = 2744;

        public UnderlyingAssetSubType()
            : base(Tags.UnderlyingAssetSubType) { }
        public UnderlyingAssetSubType(string val)
            : base(Tags.UnderlyingAssetSubType, val) { }

    }


    /// <summary>
    /// UnderlyingSecondaryAssetSubType Field
    /// </summary>/
    public sealed class UnderlyingSecondaryAssetSubType : StringField
    {
        public const int TAG = 2745;

        public UnderlyingSecondaryAssetSubType()
            : base(Tags.UnderlyingSecondaryAssetSubType) { }
        public UnderlyingSecondaryAssetSubType(string val)
            : base(Tags.UnderlyingSecondaryAssetSubType, val) { }

    }


    /// <summary>
    /// NoReferenceDataDates Field
    /// </summary>/
    public sealed class NoReferenceDataDates : IntField
    {
        public const int TAG = 2746;

        public NoReferenceDataDates()
            : base(Tags.NoReferenceDataDates) { }
        public NoReferenceDataDates(int val)
            : base(Tags.NoReferenceDataDates, val) { }

    }


    /// <summary>
    /// ReferenceDataDate Field
    /// </summary>/
    public sealed class ReferenceDataDate : DateTimeField
    {
        public const int TAG = 2747;

        public ReferenceDataDate()
            : base(Tags.ReferenceDataDate) { }
        public ReferenceDataDate(DateTime val)
            : base(Tags.ReferenceDataDate, val) { }
        public ReferenceDataDate(DateTime val, bool showMilliseconds)
            : base(Tags.ReferenceDataDate, val, showMilliseconds) { }
        public ReferenceDataDate(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ReferenceDataDate, val, precision) { }

    }


    /// <summary>
    /// ReferenceDataDateType Field
    /// </summary>/
    public sealed class ReferenceDataDateType : IntField
    {
        public const int TAG = 2748;

        public ReferenceDataDateType()
            : base(Tags.ReferenceDataDateType) { }
        public ReferenceDataDateType(int val)
            : base(Tags.ReferenceDataDateType, val) { }


        // Field Enumerations
        public const int DATE_OF_REQUEST_FOR_ADMISSION_TO_TRADING = 0;
        public const int DATE_OF_APPROVAL_OF_ADMISSION_TO_TRADING = 1;
        public const int DATE_OF_ADMISSION_TO_TRADING_OR_DATE_OF_FIRST_TRADE = 2;
        public const int TERMINATION_DATE = 3;
    }


    /// <summary>
    /// ExecutionTimestamp Field
    /// </summary>/
    public sealed class ExecutionTimestamp : DateTimeField
    {
        public const int TAG = 2749;

        public ExecutionTimestamp()
            : base(Tags.ExecutionTimestamp) { }
        public ExecutionTimestamp(DateTime val)
            : base(Tags.ExecutionTimestamp, val) { }
        public ExecutionTimestamp(DateTime val, bool showMilliseconds)
            : base(Tags.ExecutionTimestamp, val, showMilliseconds) { }
        public ExecutionTimestamp(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.ExecutionTimestamp, val, precision) { }

    }


    /// <summary>
    /// ReportingPx Field
    /// </summary>/
    public sealed class ReportingPx : DecimalField
    {
        public const int TAG = 2750;

        public ReportingPx()
            : base(Tags.ReportingPx) { }
        public ReportingPx(Decimal val)
            : base(Tags.ReportingPx, val) { }

    }


    /// <summary>
    /// ReportingQty Field
    /// </summary>/
    public sealed class ReportingQty : DecimalField
    {
        public const int TAG = 2751;

        public ReportingQty()
            : base(Tags.ReportingQty) { }
        public ReportingQty(Decimal val)
            : base(Tags.ReportingQty, val) { }

    }


    /// <summary>
    /// DeliveryRouteOrCharter Field
    /// </summary>/
    public sealed class DeliveryRouteOrCharter : StringField
    {
        public const int TAG = 2752;

        public DeliveryRouteOrCharter()
            : base(Tags.DeliveryRouteOrCharter) { }
        public DeliveryRouteOrCharter(string val)
            : base(Tags.DeliveryRouteOrCharter, val) { }

    }


    /// <summary>
    /// ReturnTrigger Field
    /// </summary>/
    public sealed class ReturnTrigger : IntField
    {
        public const int TAG = 2753;

        public ReturnTrigger()
            : base(Tags.ReturnTrigger) { }
        public ReturnTrigger(int val)
            : base(Tags.ReturnTrigger, val) { }


        // Field Enumerations
        public const int DIVIDEND = 1;
        public const int VARIANCE = 2;
        public const int VOLATILITY = 3;
        public const int TOTAL_RETURN = 4;
        public const int CONTRACT_FOR_DIFFERENCE = 5;
        public const int CREDIT_DEFAULT = 6;
        public const int SPREAD_BET = 7;
        public const int PRICE = 8;
        public const int FORWARD_PRICE_OF_UNDERLYING_INSTRUMENT = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegDeliveryRouteOrCharter Field
    /// </summary>/
    public sealed class LegDeliveryRouteOrCharter : StringField
    {
        public const int TAG = 2754;

        public LegDeliveryRouteOrCharter()
            : base(Tags.LegDeliveryRouteOrCharter) { }
        public LegDeliveryRouteOrCharter(string val)
            : base(Tags.LegDeliveryRouteOrCharter, val) { }

    }


    /// <summary>
    /// LegReturnTrigger Field
    /// </summary>/
    public sealed class LegReturnTrigger : IntField
    {
        public const int TAG = 2755;

        public LegReturnTrigger()
            : base(Tags.LegReturnTrigger) { }
        public LegReturnTrigger(int val)
            : base(Tags.LegReturnTrigger, val) { }


        // Field Enumerations
        public const int DIVIDEND = 1;
        public const int VARIANCE = 2;
        public const int VOLATILITY = 3;
        public const int TOTAL_RETURN = 4;
        public const int CONTRACT_FOR_DIFFERENCE = 5;
        public const int CREDIT_DEFAULT = 6;
        public const int SPREAD_BET = 7;
        public const int PRICE = 8;
        public const int FORWARD_PRICE_OF_UNDERLYING_INSTRUMENT = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingDeliveryRouteOrCharter Field
    /// </summary>/
    public sealed class UnderlyingDeliveryRouteOrCharter : StringField
    {
        public const int TAG = 2756;

        public UnderlyingDeliveryRouteOrCharter()
            : base(Tags.UnderlyingDeliveryRouteOrCharter) { }
        public UnderlyingDeliveryRouteOrCharter(string val)
            : base(Tags.UnderlyingDeliveryRouteOrCharter, val) { }

    }


    /// <summary>
    /// UnderlyingReturnTrigger Field
    /// </summary>/
    public sealed class UnderlyingReturnTrigger : IntField
    {
        public const int TAG = 2757;

        public UnderlyingReturnTrigger()
            : base(Tags.UnderlyingReturnTrigger) { }
        public UnderlyingReturnTrigger(int val)
            : base(Tags.UnderlyingReturnTrigger, val) { }


        // Field Enumerations
        public const int DIVIDEND = 1;
        public const int VARIANCE = 2;
        public const int VOLATILITY = 3;
        public const int TOTAL_RETURN = 4;
        public const int CONTRACT_FOR_DIFFERENCE = 5;
        public const int CREDIT_DEFAULT = 6;
        public const int SPREAD_BET = 7;
        public const int PRICE = 8;
        public const int FORWARD_PRICE_OF_UNDERLYING_INSTRUMENT = 9;
        public const int OTHER = 99;
    }


    /// <summary>
    /// AllocRequestID Field
    /// </summary>/
    public sealed class AllocRequestID : StringField
    {
        public const int TAG = 2758;

        public AllocRequestID()
            : base(Tags.AllocRequestID) { }
        public AllocRequestID(string val)
            : base(Tags.AllocRequestID, val) { }

    }


    /// <summary>
    /// GroupAmount Field
    /// </summary>/
    public sealed class GroupAmount : DecimalField
    {
        public const int TAG = 2759;

        public GroupAmount()
            : base(Tags.GroupAmount) { }
        public GroupAmount(Decimal val)
            : base(Tags.GroupAmount, val) { }

    }


    /// <summary>
    /// GroupRemainingAmount Field
    /// </summary>/
    public sealed class GroupRemainingAmount : DecimalField
    {
        public const int TAG = 2760;

        public GroupRemainingAmount()
            : base(Tags.GroupRemainingAmount) { }
        public GroupRemainingAmount(Decimal val)
            : base(Tags.GroupRemainingAmount, val) { }

    }


    /// <summary>
    /// AllocGroupAmount Field
    /// </summary>/
    public sealed class AllocGroupAmount : DecimalField
    {
        public const int TAG = 2761;

        public AllocGroupAmount()
            : base(Tags.AllocGroupAmount) { }
        public AllocGroupAmount(Decimal val)
            : base(Tags.AllocGroupAmount, val) { }

    }


    /// <summary>
    /// PriceMarkup Field
    /// </summary>/
    public sealed class PriceMarkup : DecimalField
    {
        public const int TAG = 2762;

        public PriceMarkup()
            : base(Tags.PriceMarkup) { }
        public PriceMarkup(Decimal val)
            : base(Tags.PriceMarkup, val) { }

    }


    /// <summary>
    /// AveragePriceType Field
    /// </summary>/
    public sealed class AveragePriceType : IntField
    {
        public const int TAG = 2763;

        public AveragePriceType()
            : base(Tags.AveragePriceType) { }
        public AveragePriceType(int val)
            : base(Tags.AveragePriceType, val) { }


        // Field Enumerations
        public const int TIME_WEIGHTED_AVERAGE_PRICE = 0;
        public const int VOLUME_WEIGHTED_AVERAGE_PRICE = 1;
        public const int PERCENT_OF_VOLUME_AVERAGE_PRICE = 2;
        public const int LIMIT_ORDER_AVERAGE_PRICE = 3;
    }


    /// <summary>
    /// AveragePriceStartTime Field
    /// </summary>/
    public sealed class AveragePriceStartTime : DateTimeField
    {
        public const int TAG = 2764;

        public AveragePriceStartTime()
            : base(Tags.AveragePriceStartTime) { }
        public AveragePriceStartTime(DateTime val)
            : base(Tags.AveragePriceStartTime, val) { }
        public AveragePriceStartTime(DateTime val, bool showMilliseconds)
            : base(Tags.AveragePriceStartTime, val, showMilliseconds) { }
        public AveragePriceStartTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.AveragePriceStartTime, val, precision) { }

    }


    /// <summary>
    /// AveragePriceEndTime Field
    /// </summary>/
    public sealed class AveragePriceEndTime : DateTimeField
    {
        public const int TAG = 2765;

        public AveragePriceEndTime()
            : base(Tags.AveragePriceEndTime) { }
        public AveragePriceEndTime(DateTime val)
            : base(Tags.AveragePriceEndTime, val) { }
        public AveragePriceEndTime(DateTime val, bool showMilliseconds)
            : base(Tags.AveragePriceEndTime, val, showMilliseconds) { }
        public AveragePriceEndTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.AveragePriceEndTime, val, precision) { }

    }


    /// <summary>
    /// OrderPercentOfTotalVolume Field
    /// </summary>/
    public sealed class OrderPercentOfTotalVolume : DecimalField
    {
        public const int TAG = 2766;

        public OrderPercentOfTotalVolume()
            : base(Tags.OrderPercentOfTotalVolume) { }
        public OrderPercentOfTotalVolume(Decimal val)
            : base(Tags.OrderPercentOfTotalVolume, val) { }

    }


    /// <summary>
    /// AllocGroupStatus Field
    /// </summary>/
    public sealed class AllocGroupStatus : IntField
    {
        public const int TAG = 2767;

        public AllocGroupStatus()
            : base(Tags.AllocGroupStatus) { }
        public AllocGroupStatus(int val)
            : base(Tags.AllocGroupStatus, val) { }


        // Field Enumerations
        public const int ADDED = 0;
        public const int CANCELED = 1;
        public const int REPLACED = 2;
        public const int CHANGED = 3;
        public const int PENDING = 4;
    }


    /// <summary>
    /// AllocRequestStatus Field
    /// </summary>/
    public sealed class AllocRequestStatus : IntField
    {
        public const int TAG = 2768;

        public AllocRequestStatus()
            : base(Tags.AllocRequestStatus) { }
        public AllocRequestStatus(int val)
            : base(Tags.AllocRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
    }


    /// <summary>
    /// AllocAvgPxIndicator Field
    /// </summary>/
    public sealed class AllocAvgPxIndicator : IntField
    {
        public const int TAG = 2769;

        public AllocAvgPxIndicator()
            : base(Tags.AllocAvgPxIndicator) { }
        public AllocAvgPxIndicator(int val)
            : base(Tags.AllocAvgPxIndicator, val) { }


        // Field Enumerations
        public const int NO_AVERAGE_PRICING = 0;
        public const int TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_AVGPXGROUPID = 1;
        public const int LAST_TRADE_OF_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_AVGPXGROUPID = 2;
        public const int TRADE_IS_PART_OF_A_NOTIONAL_VALUE_AVERAGE_PRICE_GROUP = 3;
        public const int TRADE_IS_AVERAGE_PRICED = 4;
    }


    /// <summary>
    /// AllocAvgPxGroupID Field
    /// </summary>/
    public sealed class AllocAvgPxGroupID : StringField
    {
        public const int TAG = 2770;

        public AllocAvgPxGroupID()
            : base(Tags.AllocAvgPxGroupID) { }
        public AllocAvgPxGroupID(string val)
            : base(Tags.AllocAvgPxGroupID, val) { }

    }


    /// <summary>
    /// PreviousAllocGroupID Field
    /// </summary>/
    public sealed class PreviousAllocGroupID : StringField
    {
        public const int TAG = 2771;

        public PreviousAllocGroupID()
            : base(Tags.PreviousAllocGroupID) { }
        public PreviousAllocGroupID(string val)
            : base(Tags.PreviousAllocGroupID, val) { }

    }


    /// <summary>
    /// NoMatchExceptions Field
    /// </summary>/
    public sealed class NoMatchExceptions : IntField
    {
        public const int TAG = 2772;

        public NoMatchExceptions()
            : base(Tags.NoMatchExceptions) { }
        public NoMatchExceptions(int val)
            : base(Tags.NoMatchExceptions, val) { }

    }


    /// <summary>
    /// MatchExceptionType Field
    /// </summary>/
    public sealed class MatchExceptionType : IntField
    {
        public const int TAG = 2773;

        public MatchExceptionType()
            : base(Tags.MatchExceptionType) { }
        public MatchExceptionType(int val)
            : base(Tags.MatchExceptionType, val) { }


        // Field Enumerations
        public const int NO_MATCHING_CONFIRMATION = 0;
        public const int NO_MATCHING_ALLOCATION = 1;
        public const int ALLOCATION_DATA_ELEMENT_MISSING = 2;
        public const int CONFIRMATION_DATA_ELEMENT_MISSING = 3;
        public const int DATA_DIFFERENCE_NOT_WITHIN_TOLERANCE = 4;
        public const int MATCH_WITHIN_TOLERANCE = 5;
        public const int OTHER = 99;
    }


    /// <summary>
    /// MatchExceptionElementType Field
    /// </summary>/
    public sealed class MatchExceptionElementType : IntField
    {
        public const int TAG = 2774;

        public MatchExceptionElementType()
            : base(Tags.MatchExceptionElementType) { }
        public MatchExceptionElementType(int val)
            : base(Tags.MatchExceptionElementType, val) { }


        // Field Enumerations
        public const int ACCRUED_INTEREST = 1;
        public const int DEAL_PRICE = 2;
        public const int TRADE_DATE = 3;
        public const int SETTLEMENT_DATE = 4;
        public const int SIDE_INDICATOR = 5;
        public const int TRADED_CURRENCY = 6;
        public const int ACCOUNT_ID = 7;
        public const int EXECUTING_BROKER_ID = 8;
        public const int SETTLEMENT_CURRENCY_AND_AMOUNT = 9;
        public const int INVESTMENT_MANAGER_ID = 10;
        public const int NET_AMOUNT = 11;
        public const int PLACE_OF_SETTLEMENT = 12;
        public const int COMMISSIONS = 13;
        public const int SECURITY_IDENTIFIER = 14;
        public const int QUANTITY_ALLOCATED = 15;
        public const int PRINCIPAL = 16;
        public const int FEES = 17;
        public const int TAX = 18;
    }


    /// <summary>
    /// MatchExceptionElementName Field
    /// </summary>/
    public sealed class MatchExceptionElementName : StringField
    {
        public const int TAG = 2775;

        public MatchExceptionElementName()
            : base(Tags.MatchExceptionElementName) { }
        public MatchExceptionElementName(string val)
            : base(Tags.MatchExceptionElementName, val) { }

    }


    /// <summary>
    /// MatchExceptionAllocValue Field
    /// </summary>/
    public sealed class MatchExceptionAllocValue : StringField
    {
        public const int TAG = 2776;

        public MatchExceptionAllocValue()
            : base(Tags.MatchExceptionAllocValue) { }
        public MatchExceptionAllocValue(string val)
            : base(Tags.MatchExceptionAllocValue, val) { }

    }


    /// <summary>
    /// MatchExceptionConfirmValue Field
    /// </summary>/
    public sealed class MatchExceptionConfirmValue : StringField
    {
        public const int TAG = 2777;

        public MatchExceptionConfirmValue()
            : base(Tags.MatchExceptionConfirmValue) { }
        public MatchExceptionConfirmValue(string val)
            : base(Tags.MatchExceptionConfirmValue, val) { }

    }


    /// <summary>
    /// MatchExceptionToleranceValue Field
    /// </summary>/
    public sealed class MatchExceptionToleranceValue : DecimalField
    {
        public const int TAG = 2778;

        public MatchExceptionToleranceValue()
            : base(Tags.MatchExceptionToleranceValue) { }
        public MatchExceptionToleranceValue(Decimal val)
            : base(Tags.MatchExceptionToleranceValue, val) { }

    }


    /// <summary>
    /// MatchExceptionToleranceValueType Field
    /// </summary>/
    public sealed class MatchExceptionToleranceValueType : IntField
    {
        public const int TAG = 2779;

        public MatchExceptionToleranceValueType()
            : base(Tags.MatchExceptionToleranceValueType) { }
        public MatchExceptionToleranceValueType(int val)
            : base(Tags.MatchExceptionToleranceValueType, val) { }


        // Field Enumerations
        public const int FIXED_AMOUNT = 1;
        public const int PERCENTAGE = 2;
    }


    /// <summary>
    /// MatchExceptionText Field
    /// </summary>/
    public sealed class MatchExceptionText : StringField
    {
        public const int TAG = 2780;

        public MatchExceptionText()
            : base(Tags.MatchExceptionText) { }
        public MatchExceptionText(string val)
            : base(Tags.MatchExceptionText, val) { }

    }


    /// <summary>
    /// NoMatchingDataPoints Field
    /// </summary>/
    public sealed class NoMatchingDataPoints : IntField
    {
        public const int TAG = 2781;

        public NoMatchingDataPoints()
            : base(Tags.NoMatchingDataPoints) { }
        public NoMatchingDataPoints(int val)
            : base(Tags.NoMatchingDataPoints, val) { }

    }


    /// <summary>
    /// MatchingDataPointIndicator Field
    /// </summary>/
    public sealed class MatchingDataPointIndicator : IntField
    {
        public const int TAG = 2782;

        public MatchingDataPointIndicator()
            : base(Tags.MatchingDataPointIndicator) { }
        public MatchingDataPointIndicator(int val)
            : base(Tags.MatchingDataPointIndicator, val) { }


        // Field Enumerations
        public const int MANDATORY = 1;
        public const int OPTIONAL = 2;
    }


    /// <summary>
    /// MatchingDataPointValue Field
    /// </summary>/
    public sealed class MatchingDataPointValue : StringField
    {
        public const int TAG = 2783;

        public MatchingDataPointValue()
            : base(Tags.MatchingDataPointValue) { }
        public MatchingDataPointValue(string val)
            : base(Tags.MatchingDataPointValue, val) { }

    }


    /// <summary>
    /// MatchingDataPointType Field
    /// </summary>/
    public sealed class MatchingDataPointType : IntField
    {
        public const int TAG = 2784;

        public MatchingDataPointType()
            : base(Tags.MatchingDataPointType) { }
        public MatchingDataPointType(int val)
            : base(Tags.MatchingDataPointType, val) { }


        // Field Enumerations
        public const int ACCRUED_INTEREST = 1;
        public const int DEAL_PRICE = 2;
        public const int TRADE_DATE = 3;
        public const int SETTLEMENT_DATE = 4;
        public const int SIDE_INDICATOR = 5;
        public const int TRADED_CURRENCY = 6;
        public const int ACCOUNT_ID = 7;
        public const int EXECUTING_BROKER_ID = 8;
        public const int SETTLEMENT_CURRENCY_AND_AMOUNT = 9;
        public const int INVESTMENT_MANAGER_ID = 10;
        public const int NET_AMOUNT = 11;
        public const int PLACE_OF_SETTLEMENT = 12;
        public const int COMMISSIONS = 13;
        public const int SECURITY_IDENTIFIER = 14;
        public const int QUANTITY_ALLOCATED = 15;
        public const int PRINCIPAL = 16;
        public const int FEES = 17;
        public const int TAX = 18;
    }


    /// <summary>
    /// MatchingDataPointName Field
    /// </summary>/
    public sealed class MatchingDataPointName : StringField
    {
        public const int TAG = 2785;

        public MatchingDataPointName()
            : base(Tags.MatchingDataPointName) { }
        public MatchingDataPointName(string val)
            : base(Tags.MatchingDataPointName, val) { }

    }


    /// <summary>
    /// TradeAggregationRequestID Field
    /// </summary>/
    public sealed class TradeAggregationRequestID : StringField
    {
        public const int TAG = 2786;

        public TradeAggregationRequestID()
            : base(Tags.TradeAggregationRequestID) { }
        public TradeAggregationRequestID(string val)
            : base(Tags.TradeAggregationRequestID, val) { }

    }


    /// <summary>
    /// TradeAggregationRequestRefID Field
    /// </summary>/
    public sealed class TradeAggregationRequestRefID : StringField
    {
        public const int TAG = 2787;

        public TradeAggregationRequestRefID()
            : base(Tags.TradeAggregationRequestRefID) { }
        public TradeAggregationRequestRefID(string val)
            : base(Tags.TradeAggregationRequestRefID, val) { }

    }


    /// <summary>
    /// TradeAggregationTransType Field
    /// </summary>/
    public sealed class TradeAggregationTransType : IntField
    {
        public const int TAG = 2788;

        public TradeAggregationTransType()
            : base(Tags.TradeAggregationTransType) { }
        public TradeAggregationTransType(int val)
            : base(Tags.TradeAggregationTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int CANCEL = 1;
        public const int REPLACE = 2;
    }


    /// <summary>
    /// AggregatedQty Field
    /// </summary>/
    public sealed class AggregatedQty : DecimalField
    {
        public const int TAG = 2789;

        public AggregatedQty()
            : base(Tags.AggregatedQty) { }
        public AggregatedQty(Decimal val)
            : base(Tags.AggregatedQty, val) { }

    }


    /// <summary>
    /// TradeAggregationRequestStatus Field
    /// </summary>/
    public sealed class TradeAggregationRequestStatus : IntField
    {
        public const int TAG = 2790;

        public TradeAggregationRequestStatus()
            : base(Tags.TradeAggregationRequestStatus) { }
        public TradeAggregationRequestStatus(int val)
            : base(Tags.TradeAggregationRequestStatus, val) { }


        // Field Enumerations
        public const int ACCEPTED = 0;
        public const int REJECTED = 1;
    }


    /// <summary>
    /// TradeAggregationRejectReason Field
    /// </summary>/
    public sealed class TradeAggregationRejectReason : IntField
    {
        public const int TAG = 2791;

        public TradeAggregationRejectReason()
            : base(Tags.TradeAggregationRejectReason) { }
        public TradeAggregationRejectReason(int val)
            : base(Tags.TradeAggregationRejectReason, val) { }


        // Field Enumerations
        public const int UNKNOWN_ORDER = 0;
        public const int UNKNOWN_EXECUTION_FILL = 1;
        public const int OTHER = 99;
    }


    /// <summary>
    /// TradeAggregationReportID Field
    /// </summary>/
    public sealed class TradeAggregationReportID : StringField
    {
        public const int TAG = 2792;

        public TradeAggregationReportID()
            : base(Tags.TradeAggregationReportID) { }
        public TradeAggregationReportID(string val)
            : base(Tags.TradeAggregationReportID, val) { }

    }


    /// <summary>
    /// AvgSpotRate Field
    /// </summary>/
    public sealed class AvgSpotRate : DecimalField
    {
        public const int TAG = 2793;

        public AvgSpotRate()
            : base(Tags.AvgSpotRate) { }
        public AvgSpotRate(Decimal val)
            : base(Tags.AvgSpotRate, val) { }

    }


    /// <summary>
    /// AvgForwardPoints Field
    /// </summary>/
    public sealed class AvgForwardPoints : DecimalField
    {
        public const int TAG = 2794;

        public AvgForwardPoints()
            : base(Tags.AvgForwardPoints) { }
        public AvgForwardPoints(Decimal val)
            : base(Tags.AvgForwardPoints, val) { }

    }


    /// <summary>
    /// OffshoreIndicator Field
    /// </summary>/
    public sealed class OffshoreIndicator : IntField
    {
        public const int TAG = 2795;

        public OffshoreIndicator()
            : base(Tags.OffshoreIndicator) { }
        public OffshoreIndicator(int val)
            : base(Tags.OffshoreIndicator, val) { }


        // Field Enumerations
        public const int REGULAR = 0;
        public const int OFFSHORE = 1;
        public const int ONSHORE = 2;
    }


    /// <summary>
    /// FXBenchmarkRateFix Field
    /// </summary>/
    public sealed class FXBenchmarkRateFix : StringField
    {
        public const int TAG = 2796;

        public FXBenchmarkRateFix()
            : base(Tags.FXBenchmarkRateFix) { }
        public FXBenchmarkRateFix(string val)
            : base(Tags.FXBenchmarkRateFix, val) { }

    }


    /// <summary>
    /// EncodedMatchExceptionTextLen Field
    /// </summary>/
    public sealed class EncodedMatchExceptionTextLen : IntField
    {
        public const int TAG = 2797;

        public EncodedMatchExceptionTextLen()
            : base(Tags.EncodedMatchExceptionTextLen) { }
        public EncodedMatchExceptionTextLen(int val)
            : base(Tags.EncodedMatchExceptionTextLen, val) { }

    }


    /// <summary>
    /// EncodedMatchExecptionText Field
    /// </summary>/
    public sealed class EncodedMatchExecptionText : StringField
    {
        public const int TAG = 2798;

        public EncodedMatchExecptionText()
            : base(Tags.EncodedMatchExecptionText) { }
        public EncodedMatchExecptionText(string val)
            : base(Tags.EncodedMatchExecptionText, val) { }

    }


    /// <summary>
    /// PayReportID Field
    /// </summary>/
    public sealed class PayReportID : StringField
    {
        public const int TAG = 2799;

        public PayReportID()
            : base(Tags.PayReportID) { }
        public PayReportID(string val)
            : base(Tags.PayReportID, val) { }

    }


    /// <summary>
    /// PayDisputeReason Field
    /// </summary>/
    public sealed class PayDisputeReason : IntField
    {
        public const int TAG = 2800;

        public PayDisputeReason()
            : base(Tags.PayDisputeReason) { }
        public PayDisputeReason(int val)
            : base(Tags.PayDisputeReason, val) { }

    }


    /// <summary>
    /// EncodedReplaceText Field
    /// </summary>/
    public sealed class EncodedReplaceText : StringField
    {
        public const int TAG = 2801;

        public EncodedReplaceText()
            : base(Tags.EncodedReplaceText) { }
        public EncodedReplaceText(string val)
            : base(Tags.EncodedReplaceText, val) { }

    }


    /// <summary>
    /// EncodedReplaceTextLen Field
    /// </summary>/
    public sealed class EncodedReplaceTextLen : IntField
    {
        public const int TAG = 2802;

        public EncodedReplaceTextLen()
            : base(Tags.EncodedReplaceTextLen) { }
        public EncodedReplaceTextLen(int val)
            : base(Tags.EncodedReplaceTextLen, val) { }

    }


    /// <summary>
    /// PayReportRefID Field
    /// </summary>/
    public sealed class PayReportRefID : StringField
    {
        public const int TAG = 2803;

        public PayReportRefID()
            : base(Tags.PayReportRefID) { }
        public PayReportRefID(string val)
            : base(Tags.PayReportRefID, val) { }

    }


    /// <summary>
    /// PayReportTransType Field
    /// </summary>/
    public sealed class PayReportTransType : IntField
    {
        public const int TAG = 2804;

        public PayReportTransType()
            : base(Tags.PayReportTransType) { }
        public PayReportTransType(int val)
            : base(Tags.PayReportTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int REPLACE = 1;
        public const int STATUS = 2;
    }


    /// <summary>
    /// ReplaceText Field
    /// </summary>/
    public sealed class ReplaceText : StringField
    {
        public const int TAG = 2805;

        public ReplaceText()
            : base(Tags.ReplaceText) { }
        public ReplaceText(string val)
            : base(Tags.ReplaceText, val) { }

    }


    /// <summary>
    /// PayReportStatus Field
    /// </summary>/
    public sealed class PayReportStatus : IntField
    {
        public const int TAG = 2806;

        public PayReportStatus()
            : base(Tags.PayReportStatus) { }
        public PayReportStatus(int val)
            : base(Tags.PayReportStatus, val) { }


        // Field Enumerations
        public const int RECEIVED_NOT_YET_PROCESSED = 0;
        public const int ACCEPTED = 1;
        public const int REJECTED = 2;
        public const int DISPUTED = 3;
    }


    /// <summary>
    /// CancelText Field
    /// </summary>/
    public sealed class CancelText : StringField
    {
        public const int TAG = 2807;

        public CancelText()
            : base(Tags.CancelText) { }
        public CancelText(string val)
            : base(Tags.CancelText, val) { }

    }


    /// <summary>
    /// EncodedCancelText Field
    /// </summary>/
    public sealed class EncodedCancelText : StringField
    {
        public const int TAG = 2808;

        public EncodedCancelText()
            : base(Tags.EncodedCancelText) { }
        public EncodedCancelText(string val)
            : base(Tags.EncodedCancelText, val) { }

    }


    /// <summary>
    /// EncodedCancelTextLen Field
    /// </summary>/
    public sealed class EncodedCancelTextLen : IntField
    {
        public const int TAG = 2809;

        public EncodedCancelTextLen()
            : base(Tags.EncodedCancelTextLen) { }
        public EncodedCancelTextLen(int val)
            : base(Tags.EncodedCancelTextLen, val) { }

    }


    /// <summary>
    /// PayRequestRefID Field
    /// </summary>/
    public sealed class PayRequestRefID : StringField
    {
        public const int TAG = 2810;

        public PayRequestRefID()
            : base(Tags.PayRequestRefID) { }
        public PayRequestRefID(string val)
            : base(Tags.PayRequestRefID, val) { }

    }


    /// <summary>
    /// PayRequestTransType Field
    /// </summary>/
    public sealed class PayRequestTransType : IntField
    {
        public const int TAG = 2811;

        public PayRequestTransType()
            : base(Tags.PayRequestTransType) { }
        public PayRequestTransType(int val)
            : base(Tags.PayRequestTransType, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int CANCEL = 1;
    }


    /// <summary>
    /// PayRequestID Field
    /// </summary>/
    public sealed class PayRequestID : StringField
    {
        public const int TAG = 2812;

        public PayRequestID()
            : base(Tags.PayRequestID) { }
        public PayRequestID(string val)
            : base(Tags.PayRequestID, val) { }

    }


    /// <summary>
    /// PayRequestStatus Field
    /// </summary>/
    public sealed class PayRequestStatus : IntField
    {
        public const int TAG = 2813;

        public PayRequestStatus()
            : base(Tags.PayRequestStatus) { }
        public PayRequestStatus(int val)
            : base(Tags.PayRequestStatus, val) { }


        // Field Enumerations
        public const int RECEIVED_NOT_YET_PROCESSED = 0;
        public const int ACCEPTED = 1;
        public const int REJECTED = 2;
        public const int DISPUTED = 3;
    }


    /// <summary>
    /// EncodedPostTradePaymentDesc Field
    /// </summary>/
    public sealed class EncodedPostTradePaymentDesc : StringField
    {
        public const int TAG = 2814;

        public EncodedPostTradePaymentDesc()
            : base(Tags.EncodedPostTradePaymentDesc) { }
        public EncodedPostTradePaymentDesc(string val)
            : base(Tags.EncodedPostTradePaymentDesc, val) { }

    }


    /// <summary>
    /// EncodedPostTradePaymentDescLen Field
    /// </summary>/
    public sealed class EncodedPostTradePaymentDescLen : IntField
    {
        public const int TAG = 2815;

        public EncodedPostTradePaymentDescLen()
            : base(Tags.EncodedPostTradePaymentDescLen) { }
        public EncodedPostTradePaymentDescLen(int val)
            : base(Tags.EncodedPostTradePaymentDescLen, val) { }

    }


    /// <summary>
    /// PostTradePaymentAccount Field
    /// </summary>/
    public sealed class PostTradePaymentAccount : StringField
    {
        public const int TAG = 2816;

        public PostTradePaymentAccount()
            : base(Tags.PostTradePaymentAccount) { }
        public PostTradePaymentAccount(string val)
            : base(Tags.PostTradePaymentAccount, val) { }

    }


    /// <summary>
    /// PostTradePaymentAmount Field
    /// </summary>/
    public sealed class PostTradePaymentAmount : DecimalField
    {
        public const int TAG = 2817;

        public PostTradePaymentAmount()
            : base(Tags.PostTradePaymentAmount) { }
        public PostTradePaymentAmount(Decimal val)
            : base(Tags.PostTradePaymentAmount, val) { }

    }


    /// <summary>
    /// PostTradePaymentCurrency Field
    /// </summary>/
    public sealed class PostTradePaymentCurrency : StringField
    {
        public const int TAG = 2818;

        public PostTradePaymentCurrency()
            : base(Tags.PostTradePaymentCurrency) { }
        public PostTradePaymentCurrency(string val)
            : base(Tags.PostTradePaymentCurrency, val) { }

    }


    /// <summary>
    /// PostTradePaymentDebitOrCredit Field
    /// </summary>/
    public sealed class PostTradePaymentDebitOrCredit : IntField
    {
        public const int TAG = 2819;

        public PostTradePaymentDebitOrCredit()
            : base(Tags.PostTradePaymentDebitOrCredit) { }
        public PostTradePaymentDebitOrCredit(int val)
            : base(Tags.PostTradePaymentDebitOrCredit, val) { }


        // Field Enumerations
        public const int DEBIT = 0;
        public const int CREDIT = 1;
    }


    /// <summary>
    /// PostTradePaymentDesc Field
    /// </summary>/
    public sealed class PostTradePaymentDesc : StringField
    {
        public const int TAG = 2820;

        public PostTradePaymentDesc()
            : base(Tags.PostTradePaymentDesc) { }
        public PostTradePaymentDesc(string val)
            : base(Tags.PostTradePaymentDesc, val) { }

    }


    /// <summary>
    /// PostTradePaymentID Field
    /// </summary>/
    public sealed class PostTradePaymentID : StringField
    {
        public const int TAG = 2821;

        public PostTradePaymentID()
            : base(Tags.PostTradePaymentID) { }
        public PostTradePaymentID(string val)
            : base(Tags.PostTradePaymentID, val) { }

    }


    /// <summary>
    /// PostTradePaymentLinkID Field
    /// </summary>/
    public sealed class PostTradePaymentLinkID : StringField
    {
        public const int TAG = 2822;

        public PostTradePaymentLinkID()
            : base(Tags.PostTradePaymentLinkID) { }
        public PostTradePaymentLinkID(string val)
            : base(Tags.PostTradePaymentLinkID, val) { }

    }


    /// <summary>
    /// PostTradePaymentStatus Field
    /// </summary>/
    public sealed class PostTradePaymentStatus : IntField
    {
        public const int TAG = 2823;

        public PostTradePaymentStatus()
            : base(Tags.PostTradePaymentStatus) { }
        public PostTradePaymentStatus(int val)
            : base(Tags.PostTradePaymentStatus, val) { }


        // Field Enumerations
        public const int NEW = 0;
        public const int INITIATED = 1;
        public const int PENDING = 2;
        public const int CONFIRMED = 3;
        public const int REJECTED = 4;
    }


    /// <summary>
    /// PostTradePaymentType Field
    /// </summary>/
    public sealed class PostTradePaymentType : StringField
    {
        public const int TAG = 2824;

        public PostTradePaymentType()
            : base(Tags.PostTradePaymentType) { }
        public PostTradePaymentType(string val)
            : base(Tags.PostTradePaymentType, val) { }

    }


    /// <summary>
    /// PostTradePaymentCalculationDate Field
    /// </summary>/
    public sealed class PostTradePaymentCalculationDate : StringField
    {
        public const int TAG = 2825;

        public PostTradePaymentCalculationDate()
            : base(Tags.PostTradePaymentCalculationDate) { }
        public PostTradePaymentCalculationDate(string val)
            : base(Tags.PostTradePaymentCalculationDate, val) { }

    }


    /// <summary>
    /// PostTradePaymentValueDate Field
    /// </summary>/
    public sealed class PostTradePaymentValueDate : StringField
    {
        public const int TAG = 2826;

        public PostTradePaymentValueDate()
            : base(Tags.PostTradePaymentValueDate) { }
        public PostTradePaymentValueDate(string val)
            : base(Tags.PostTradePaymentValueDate, val) { }

    }


    /// <summary>
    /// PostTradePaymentFinalValueDate Field
    /// </summary>/
    public sealed class PostTradePaymentFinalValueDate : StringField
    {
        public const int TAG = 2827;

        public PostTradePaymentFinalValueDate()
            : base(Tags.PostTradePaymentFinalValueDate) { }
        public PostTradePaymentFinalValueDate(string val)
            : base(Tags.PostTradePaymentFinalValueDate, val) { }

    }


    /// <summary>
    /// CurrentDisplayPrice Field
    /// </summary>/
    public sealed class CurrentDisplayPrice : DecimalField
    {
        public const int TAG = 2828;

        public CurrentDisplayPrice()
            : base(Tags.CurrentDisplayPrice) { }
        public CurrentDisplayPrice(Decimal val)
            : base(Tags.CurrentDisplayPrice, val) { }

    }


    /// <summary>
    /// DuplicateClOrdIDIndicator Field
    /// </summary>/
    public sealed class DuplicateClOrdIDIndicator : BooleanField
    {
        public const int TAG = 2829;

        public DuplicateClOrdIDIndicator()
            : base(Tags.DuplicateClOrdIDIndicator) { }
        public DuplicateClOrdIDIndicator(Boolean val)
            : base(Tags.DuplicateClOrdIDIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// EventInitiatorType Field
    /// </summary>/
    public sealed class EventInitiatorType : CharField
    {
        public const int TAG = 2830;

        public EventInitiatorType()
            : base(Tags.EventInitiatorType) { }
        public EventInitiatorType(char val)
            : base(Tags.EventInitiatorType, val) { }


        // Field Enumerations
        public const char CUSTOMER_OR_CLIENT = 'C';
        public const char EXCHANGE_OR_EXECUTION_VENUE = 'E';
        public const char FIRM_OR_BROKER = 'F';
    }


    /// <summary>
    /// NBBOEntryType Field
    /// </summary>/
    public sealed class NBBOEntryType : IntField
    {
        public const int TAG = 2831;

        public NBBOEntryType()
            : base(Tags.NBBOEntryType) { }
        public NBBOEntryType(int val)
            : base(Tags.NBBOEntryType, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int OFFER = 1;
        public const int MID_PRICE = 2;
    }


    /// <summary>
    /// NBBOPrice Field
    /// </summary>/
    public sealed class NBBOPrice : DecimalField
    {
        public const int TAG = 2832;

        public NBBOPrice()
            : base(Tags.NBBOPrice) { }
        public NBBOPrice(Decimal val)
            : base(Tags.NBBOPrice, val) { }

    }


    /// <summary>
    /// NBBOQty Field
    /// </summary>/
    public sealed class NBBOQty : DecimalField
    {
        public const int TAG = 2833;

        public NBBOQty()
            : base(Tags.NBBOQty) { }
        public NBBOQty(Decimal val)
            : base(Tags.NBBOQty, val) { }

    }


    /// <summary>
    /// NBBOSource Field
    /// </summary>/
    public sealed class NBBOSource : IntField
    {
        public const int TAG = 2834;

        public NBBOSource()
            : base(Tags.NBBOSource) { }
        public NBBOSource(int val)
            : base(Tags.NBBOSource, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int DIRECT = 1;
        public const int SECURITIES_INFORMATION_PROCESSOR = 2;
        public const int HYBRID = 3;
    }


    /// <summary>
    /// OrderOriginationFirmID Field
    /// </summary>/
    public sealed class OrderOriginationFirmID : StringField
    {
        public const int TAG = 2835;

        public OrderOriginationFirmID()
            : base(Tags.OrderOriginationFirmID) { }
        public OrderOriginationFirmID(string val)
            : base(Tags.OrderOriginationFirmID, val) { }

    }


    /// <summary>
    /// RelatedOrderTime Field
    /// </summary>/
    public sealed class RelatedOrderTime : DateTimeField
    {
        public const int TAG = 2836;

        public RelatedOrderTime()
            : base(Tags.RelatedOrderTime) { }
        public RelatedOrderTime(DateTime val)
            : base(Tags.RelatedOrderTime, val) { }
        public RelatedOrderTime(DateTime val, bool showMilliseconds)
            : base(Tags.RelatedOrderTime, val, showMilliseconds) { }
        public RelatedOrderTime(DateTime val, Converters.TimeStampPrecision precision)
            : base(Tags.RelatedOrderTime, val, precision) { }

    }


    /// <summary>
    /// SingleQuoteIndicator Field
    /// </summary>/
    public sealed class SingleQuoteIndicator : BooleanField
    {
        public const int TAG = 2837;

        public SingleQuoteIndicator()
            : base(Tags.SingleQuoteIndicator) { }
        public SingleQuoteIndicator(Boolean val)
            : base(Tags.SingleQuoteIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// CurrentWorkingPrice Field
    /// </summary>/
    public sealed class CurrentWorkingPrice : DecimalField
    {
        public const int TAG = 2838;

        public CurrentWorkingPrice()
            : base(Tags.CurrentWorkingPrice) { }
        public CurrentWorkingPrice(Decimal val)
            : base(Tags.CurrentWorkingPrice, val) { }

    }


    /// <summary>
    /// TrdRegTimestampManualIndicator Field
    /// </summary>/
    public sealed class TrdRegTimestampManualIndicator : BooleanField
    {
        public const int TAG = 2839;

        public TrdRegTimestampManualIndicator()
            : base(Tags.TrdRegTimestampManualIndicator) { }
        public TrdRegTimestampManualIndicator(Boolean val)
            : base(Tags.TrdRegTimestampManualIndicator, val) { }


        // Field Enumerations
        public const Boolean NO = false;
        public const Boolean YES = true;
    }


    /// <summary>
    /// CollateralReinvestmentRate Field
    /// </summary>/
    public sealed class CollateralReinvestmentRate : DecimalField
    {
        public const int TAG = 2840;

        public CollateralReinvestmentRate()
            : base(Tags.CollateralReinvestmentRate) { }
        public CollateralReinvestmentRate(Decimal val)
            : base(Tags.CollateralReinvestmentRate, val) { }

    }


    /// <summary>
    /// UnderlyingRefID Field
    /// </summary>/
    public sealed class UnderlyingRefID : StringField
    {
        public const int TAG = 2841;

        public UnderlyingRefID()
            : base(Tags.UnderlyingRefID) { }
        public UnderlyingRefID(string val)
            : base(Tags.UnderlyingRefID, val) { }

    }


    /// <summary>
    /// CollateralReinvestmentAmount Field
    /// </summary>/
    public sealed class CollateralReinvestmentAmount : DecimalField
    {
        public const int TAG = 2842;

        public CollateralReinvestmentAmount()
            : base(Tags.CollateralReinvestmentAmount) { }
        public CollateralReinvestmentAmount(Decimal val)
            : base(Tags.CollateralReinvestmentAmount, val) { }

    }


    /// <summary>
    /// CollateralReinvestmentCurrency Field
    /// </summary>/
    public sealed class CollateralReinvestmentCurrency : StringField
    {
        public const int TAG = 2843;

        public CollateralReinvestmentCurrency()
            : base(Tags.CollateralReinvestmentCurrency) { }
        public CollateralReinvestmentCurrency(string val)
            : base(Tags.CollateralReinvestmentCurrency, val) { }

    }


    /// <summary>
    /// CollateralReinvestmentType Field
    /// </summary>/
    public sealed class CollateralReinvestmentType : IntField
    {
        public const int TAG = 2844;

        public CollateralReinvestmentType()
            : base(Tags.CollateralReinvestmentType) { }
        public CollateralReinvestmentType(int val)
            : base(Tags.CollateralReinvestmentType, val) { }


        // Field Enumerations
        public const int MONEY_MARKET_FUND = 0;
        public const int OTHER_COMINGLED_POOL = 1;
        public const int REPO_MARKET = 2;
        public const int DIRECT_PURCHASE_OF_SECURITIES = 3;
        public const int OTHER_INVESTMENTS = 4;
    }


    /// <summary>
    /// NoCollateralReinvestments Field
    /// </summary>/
    public sealed class NoCollateralReinvestments : IntField
    {
        public const int TAG = 2845;

        public NoCollateralReinvestments()
            : base(Tags.NoCollateralReinvestments) { }
        public NoCollateralReinvestments(int val)
            : base(Tags.NoCollateralReinvestments, val) { }

    }


    /// <summary>
    /// FundingSource Field
    /// </summary>/
    public sealed class FundingSource : IntField
    {
        public const int TAG = 2846;

        public FundingSource()
            : base(Tags.FundingSource) { }
        public FundingSource(int val)
            : base(Tags.FundingSource, val) { }


        // Field Enumerations
        public const int REPURCHASE_AGREEMENT = 0;
        public const int CASH = 1;
        public const int FREE_CREDITS = 2;
        public const int CUSTOMER_SHORT_SALES = 3;
        public const int BROKER_SHORT_SALES = 4;
        public const int UNSECURED_BORROWING = 5;
        public const int OTHER = 99;
    }


    /// <summary>
    /// FundingSourceCurrency Field
    /// </summary>/
    public sealed class FundingSourceCurrency : StringField
    {
        public const int TAG = 2847;

        public FundingSourceCurrency()
            : base(Tags.FundingSourceCurrency) { }
        public FundingSourceCurrency(string val)
            : base(Tags.FundingSourceCurrency, val) { }

    }


    /// <summary>
    /// FundingSourceMarketValue Field
    /// </summary>/
    public sealed class FundingSourceMarketValue : DecimalField
    {
        public const int TAG = 2848;

        public FundingSourceMarketValue()
            : base(Tags.FundingSourceMarketValue) { }
        public FundingSourceMarketValue(Decimal val)
            : base(Tags.FundingSourceMarketValue, val) { }

    }


    /// <summary>
    /// NoFundingSources Field
    /// </summary>/
    public sealed class NoFundingSources : IntField
    {
        public const int TAG = 2849;

        public NoFundingSources()
            : base(Tags.NoFundingSources) { }
        public NoFundingSources(int val)
            : base(Tags.NoFundingSources, val) { }

    }


    /// <summary>
    /// MarginDirection Field
    /// </summary>/
    public sealed class MarginDirection : IntField
    {
        public const int TAG = 2851;

        public MarginDirection()
            : base(Tags.MarginDirection) { }
        public MarginDirection(int val)
            : base(Tags.MarginDirection, val) { }


        // Field Enumerations
        public const int POSTED = 0;
        public const int RECEIVED = 1;
    }


    /// <summary>
    /// SideCollateralReinvestmentRate Field
    /// </summary>/
    public sealed class SideCollateralReinvestmentRate : DecimalField
    {
        public const int TAG = 2862;

        public SideCollateralReinvestmentRate()
            : base(Tags.SideCollateralReinvestmentRate) { }
        public SideCollateralReinvestmentRate(Decimal val)
            : base(Tags.SideCollateralReinvestmentRate, val) { }

    }


    /// <summary>
    /// SideUnderlyingRefID Field
    /// </summary>/
    public sealed class SideUnderlyingRefID : StringField
    {
        public const int TAG = 2863;

        public SideUnderlyingRefID()
            : base(Tags.SideUnderlyingRefID) { }
        public SideUnderlyingRefID(string val)
            : base(Tags.SideUnderlyingRefID, val) { }

    }


    /// <summary>
    /// NoSideCollateralReinvestments Field
    /// </summary>/
    public sealed class NoSideCollateralReinvestments : IntField
    {
        public const int TAG = 2864;

        public NoSideCollateralReinvestments()
            : base(Tags.NoSideCollateralReinvestments) { }
        public NoSideCollateralReinvestments(int val)
            : base(Tags.NoSideCollateralReinvestments, val) { }

    }


    /// <summary>
    /// SideCollateralReinvestmentAmount Field
    /// </summary>/
    public sealed class SideCollateralReinvestmentAmount : DecimalField
    {
        public const int TAG = 2865;

        public SideCollateralReinvestmentAmount()
            : base(Tags.SideCollateralReinvestmentAmount) { }
        public SideCollateralReinvestmentAmount(Decimal val)
            : base(Tags.SideCollateralReinvestmentAmount, val) { }

    }


    /// <summary>
    /// SideCollateralReinvestmentCurrency Field
    /// </summary>/
    public sealed class SideCollateralReinvestmentCurrency : StringField
    {
        public const int TAG = 2866;

        public SideCollateralReinvestmentCurrency()
            : base(Tags.SideCollateralReinvestmentCurrency) { }
        public SideCollateralReinvestmentCurrency(string val)
            : base(Tags.SideCollateralReinvestmentCurrency, val) { }

    }


    /// <summary>
    /// SideCollateralReinvestmentType Field
    /// </summary>/
    public sealed class SideCollateralReinvestmentType : IntField
    {
        public const int TAG = 2867;

        public SideCollateralReinvestmentType()
            : base(Tags.SideCollateralReinvestmentType) { }
        public SideCollateralReinvestmentType(int val)
            : base(Tags.SideCollateralReinvestmentType, val) { }


        // Field Enumerations
        public const int MONEY_MARKET_FUND = 0;
        public const int OTHER_COMINGLED_POOL = 1;
        public const int REPO_MARKET = 2;
        public const int DIRECT_PURCHASE_OF_SECURITIES = 3;
        public const int OTHER_INVESTMENTS = 4;
    }


    /// <summary>
    /// CollateralizationValueDate Field
    /// </summary>/
    public sealed class CollateralizationValueDate : StringField
    {
        public const int TAG = 2868;

        public CollateralizationValueDate()
            : base(Tags.CollateralizationValueDate) { }
        public CollateralizationValueDate(string val)
            : base(Tags.CollateralizationValueDate, val) { }

    }


    /// <summary>
    /// RegulatoryReportTypeBusinessDate Field
    /// </summary>/
    public sealed class RegulatoryReportTypeBusinessDate : StringField
    {
        public const int TAG = 2869;

        public RegulatoryReportTypeBusinessDate()
            : base(Tags.RegulatoryReportTypeBusinessDate) { }
        public RegulatoryReportTypeBusinessDate(string val)
            : base(Tags.RegulatoryReportTypeBusinessDate, val) { }

    }


    /// <summary>
    /// ClearingPortfolioID Field
    /// </summary>/
    public sealed class ClearingPortfolioID : StringField
    {
        public const int TAG = 2870;

        public ClearingPortfolioID()
            : base(Tags.ClearingPortfolioID) { }
        public ClearingPortfolioID(string val)
            : base(Tags.ClearingPortfolioID, val) { }

    }


    /// <summary>
    /// NoTransactionAttributes Field
    /// </summary>/
    public sealed class NoTransactionAttributes : IntField
    {
        public const int TAG = 2871;

        public NoTransactionAttributes()
            : base(Tags.NoTransactionAttributes) { }
        public NoTransactionAttributes(int val)
            : base(Tags.NoTransactionAttributes, val) { }

    }


    /// <summary>
    /// TransactionAttributeType Field
    /// </summary>/
    public sealed class TransactionAttributeType : IntField
    {
        public const int TAG = 2872;

        public TransactionAttributeType()
            : base(Tags.TransactionAttributeType) { }
        public TransactionAttributeType(int val)
            : base(Tags.TransactionAttributeType, val) { }


        // Field Enumerations
        public const int EXCLUSIVE_ARRANGEMENT = 0;
        public const int COLLATERAL_REUSE = 1;
        public const int COLLATERAL_ARRANGEMENT_TYPE = 2;
    }


    /// <summary>
    /// TransactionAttributeValue Field
    /// </summary>/
    public sealed class TransactionAttributeValue : StringField
    {
        public const int TAG = 2873;

        public TransactionAttributeValue()
            : base(Tags.TransactionAttributeValue) { }
        public TransactionAttributeValue(string val)
            : base(Tags.TransactionAttributeValue, val) { }

    }


    /// <summary>
    /// UnderlyingID Field
    /// </summary>/
    public sealed class UnderlyingID : StringField
    {
        public const int TAG = 2874;

        public UnderlyingID()
            : base(Tags.UnderlyingID) { }
        public UnderlyingID(string val)
            : base(Tags.UnderlyingID, val) { }

    }


    /// <summary>
    /// PosAmtPrice Field
    /// </summary>/
    public sealed class PosAmtPrice : DecimalField
    {
        public const int TAG = 2876;

        public PosAmtPrice()
            : base(Tags.PosAmtPrice) { }
        public PosAmtPrice(Decimal val)
            : base(Tags.PosAmtPrice, val) { }

    }


    /// <summary>
    /// PosAmtPriceType Field
    /// </summary>/
    public sealed class PosAmtPriceType : IntField
    {
        public const int TAG = 2877;

        public PosAmtPriceType()
            : base(Tags.PosAmtPriceType) { }
        public PosAmtPriceType(int val)
            : base(Tags.PosAmtPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// TerminationDate Field
    /// </summary>/
    public sealed class TerminationDate : StringField
    {
        public const int TAG = 2878;

        public TerminationDate()
            : base(Tags.TerminationDate) { }
        public TerminationDate(string val)
            : base(Tags.TerminationDate, val) { }

    }


    /// <summary>
    /// CouponOtherDayCount Field
    /// </summary>/
    public sealed class CouponOtherDayCount : StringField
    {
        public const int TAG = 2879;

        public CouponOtherDayCount()
            : base(Tags.CouponOtherDayCount) { }
        public CouponOtherDayCount(string val)
            : base(Tags.CouponOtherDayCount, val) { }

    }


    /// <summary>
    /// LegCouponOtherDayCount Field
    /// </summary>/
    public sealed class LegCouponOtherDayCount : StringField
    {
        public const int TAG = 2880;

        public LegCouponOtherDayCount()
            : base(Tags.LegCouponOtherDayCount) { }
        public LegCouponOtherDayCount(string val)
            : base(Tags.LegCouponOtherDayCount, val) { }

    }


    /// <summary>
    /// UnderlyingCouponOtherDayCount Field
    /// </summary>/
    public sealed class UnderlyingCouponOtherDayCount : StringField
    {
        public const int TAG = 2881;

        public UnderlyingCouponOtherDayCount()
            : base(Tags.UnderlyingCouponOtherDayCount) { }
        public UnderlyingCouponOtherDayCount(string val)
            : base(Tags.UnderlyingCouponOtherDayCount, val) { }

    }


    /// <summary>
    /// ContraOrderOrigination Field
    /// </summary>/
    public sealed class ContraOrderOrigination : IntField
    {
        public const int TAG = 2882;

        public ContraOrderOrigination()
            : base(Tags.ContraOrderOrigination) { }
        public ContraOrderOrigination(int val)
            : base(Tags.ContraOrderOrigination, val) { }


        // Field Enumerations
        public const int ORDER_RECEIVED_FROM_A_CUSTOMER = 1;
        public const int ORDER_RECEIVED_FROM_WITHIN_THE_FIRM = 2;
        public const int ORDER_RECEIVED_FROM_ANOTHER_BROKER_DEALER = 3;
        public const int ORDER_RECEIVED_FROM_A_CUSTOMER_OR_ORIGINATED_FROM_WITHIN_THE_FIRM = 4;
        public const int ORDER_RECEIVED_FROM_A_DIRECT_ACCESS_OR_SPONSORED_ACCESS_CUSTOMER = 5;
        public const int ORDER_RECEIVED_FROM_A_FOREIGN_DEALER_EQUIVALENT = 6;
        public const int ORDER_RECEIVED_FROM_AN_EXECUTION_ONLY_SERVICE = 7;
    }


    /// <summary>
    /// RoutingArrangmentIndicator Field
    /// </summary>/
    public sealed class RoutingArrangmentIndicator : IntField
    {
        public const int TAG = 2883;

        public RoutingArrangmentIndicator()
            : base(Tags.RoutingArrangmentIndicator) { }
        public RoutingArrangmentIndicator(int val)
            : base(Tags.RoutingArrangmentIndicator, val) { }


        // Field Enumerations
        public const int NO_ROUTING_ARRANGEMENT_IN_PLACE = 0;
        public const int ROUTING_ARRANGEMENT_IN_PLACE = 1;
    }


    /// <summary>
    /// ContraRoutingArrangmentIndicator Field
    /// </summary>/
    public sealed class ContraRoutingArrangmentIndicator : IntField
    {
        public const int TAG = 2884;

        public ContraRoutingArrangmentIndicator()
            : base(Tags.ContraRoutingArrangmentIndicator) { }
        public ContraRoutingArrangmentIndicator(int val)
            : base(Tags.ContraRoutingArrangmentIndicator, val) { }


        // Field Enumerations
        public const int NO_ROUTING_ARRANGEMENT_IN_PLACE = 0;
        public const int ROUTING_ARRANGEMENT_IN_PLACE = 1;
    }


    /// <summary>
    /// UnderlyingAccruedInterestAmt Field
    /// </summary>/
    public sealed class UnderlyingAccruedInterestAmt : DecimalField
    {
        public const int TAG = 2885;

        public UnderlyingAccruedInterestAmt()
            : base(Tags.UnderlyingAccruedInterestAmt) { }
        public UnderlyingAccruedInterestAmt(Decimal val)
            : base(Tags.UnderlyingAccruedInterestAmt, val) { }

    }


    /// <summary>
    /// UnderlyingNumDaysInterest Field
    /// </summary>/
    public sealed class UnderlyingNumDaysInterest : IntField
    {
        public const int TAG = 2886;

        public UnderlyingNumDaysInterest()
            : base(Tags.UnderlyingNumDaysInterest) { }
        public UnderlyingNumDaysInterest(int val)
            : base(Tags.UnderlyingNumDaysInterest, val) { }

    }


    /// <summary>
    /// RelatedOrderID Field
    /// </summary>/
    public sealed class RelatedOrderID : StringField
    {
        public const int TAG = 2887;

        public RelatedOrderID()
            : base(Tags.RelatedOrderID) { }
        public RelatedOrderID(string val)
            : base(Tags.RelatedOrderID, val) { }

    }


    /// <summary>
    /// RelatedOrderIDSource Field
    /// </summary>/
    public sealed class RelatedOrderIDSource : IntField
    {
        public const int TAG = 2888;

        public RelatedOrderIDSource()
            : base(Tags.RelatedOrderIDSource) { }
        public RelatedOrderIDSource(int val)
            : base(Tags.RelatedOrderIDSource, val) { }


        // Field Enumerations
        public const int NON_FIX_SOURCE = 0;
        public const int ORDER_IDENTIFIER = 1;
        public const int CLIENT_ORDER_IDENTIFIER = 2;
        public const int SECONDARY_ORDER_IDENTIFIER = 3;
        public const int SECONDARY_CLIENT_ORDER_IDENTIFIER = 4;
    }


    /// <summary>
    /// RelatedOrderQty Field
    /// </summary>/
    public sealed class RelatedOrderQty : DecimalField
    {
        public const int TAG = 2889;

        public RelatedOrderQty()
            : base(Tags.RelatedOrderQty) { }
        public RelatedOrderQty(Decimal val)
            : base(Tags.RelatedOrderQty, val) { }

    }


    /// <summary>
    /// OrderRelationship Field
    /// </summary>/
    public sealed class OrderRelationship : IntField
    {
        public const int TAG = 2890;

        public OrderRelationship()
            : base(Tags.OrderRelationship) { }
        public OrderRelationship(int val)
            : base(Tags.OrderRelationship, val) { }


        // Field Enumerations
        public const int NOT_SPECIFIED = 0;
        public const int ORDER_AGGREGATION = 1;
        public const int ORDER_SPLIT = 2;
    }


    /// <summary>
    /// UPICode Field
    /// </summary>/
    public sealed class UPICode : StringField
    {
        public const int TAG = 2891;

        public UPICode()
            : base(Tags.UPICode) { }
        public UPICode(string val)
            : base(Tags.UPICode, val) { }

    }


    /// <summary>
    /// DerivativeUPICode Field
    /// </summary>/
    public sealed class DerivativeUPICode : StringField
    {
        public const int TAG = 2892;

        public DerivativeUPICode()
            : base(Tags.DerivativeUPICode) { }
        public DerivativeUPICode(string val)
            : base(Tags.DerivativeUPICode, val) { }

    }


    /// <summary>
    /// LegUPICode Field
    /// </summary>/
    public sealed class LegUPICode : StringField
    {
        public const int TAG = 2893;

        public LegUPICode()
            : base(Tags.LegUPICode) { }
        public LegUPICode(string val)
            : base(Tags.LegUPICode, val) { }

    }


    /// <summary>
    /// UnderlyingUPICode Field
    /// </summary>/
    public sealed class UnderlyingUPICode : StringField
    {
        public const int TAG = 2894;

        public UnderlyingUPICode()
            : base(Tags.UnderlyingUPICode) { }
        public UnderlyingUPICode(string val)
            : base(Tags.UnderlyingUPICode, val) { }

    }


    /// <summary>
    /// InstrumentScopeUPICode Field
    /// </summary>/
    public sealed class InstrumentScopeUPICode : StringField
    {
        public const int TAG = 2895;

        public InstrumentScopeUPICode()
            : base(Tags.InstrumentScopeUPICode) { }
        public InstrumentScopeUPICode(string val)
            : base(Tags.InstrumentScopeUPICode, val) { }

    }


    /// <summary>
    /// TertiaryTrdType Field
    /// </summary>/
    public sealed class TertiaryTrdType : IntField
    {
        public const int TAG = 2896;

        public TertiaryTrdType()
            : base(Tags.TertiaryTrdType) { }
        public TertiaryTrdType(int val)
            : base(Tags.TertiaryTrdType, val) { }


        // Field Enumerations
        public const int REGULAR_TRADE = 0;
        public const int BLOCK_TRADE_1 = 1;
        public const int EXCHANGE_FOR_PHYSICAL = 2;
        public const int TRANSFER = 3;
        public const int LATE_TRADE = 4;
        public const int T_TRADE = 5;
        public const int WEIGHTED_AVERAGE_PRICE_TRADE = 6;
        public const int BUNCHED_TRADE = 7;
        public const int LATE_BUNCHED_TRADE = 8;
        public const int PRIOR_REFERENCE_PRICE_TRADE = 9;
        public const int AFTER_HOURS_TRADE = 10;
        public const int EXCHANGE_FOR_RISK = 11;
        public const int EXCHANGE_FOR_SWAP = 12;
        public const int EXCHANGE_OF_FUTURES_FOR_IN_MARKET_FUTURES = 13;
        public const int EXCHANGE_OF_OPTIONS_FOR_OPTIONS = 14;
        public const int TRADING_AT_SETTLEMENT = 15;
        public const int ALL_OR_NONE = 16;
        public const int FUTURES_LARGE_ORDER_EXECUTION = 17;
        public const int EXCHANGE_OF_FUTURES_FOR_EXTERNAL_MARKET_FUTURES = 18;
        public const int OPTION_INTERIM_TRADE = 19;
        public const int OPTION_CABINET_TRADE = 20;
        public const int PRIVATELY_NEGOTIATED_TRADE = 22;
        public const int SUBSTITUTION_OF_FUTURES_FOR_FORWARDS = 23;
        public const int NON_STANDARD_SETTLEMENT = 48;
        public const int DERIVATIVE_RELATED_TRANSACTION = 49;
        public const int PORTFOLIO_TRADE = 50;
        public const int VOLUME_WEIGHTED_AVERAGE_TRADE = 51;
        public const int EXCHANGE_GRANTED_TRADE = 52;
        public const int REPURCHASE_AGREEMENT = 53;
        public const int OTC = 54;
        public const int EXCHANGE_BASIS_FACILITY = 55;
        public const int ERROR_TRADE = 24;
        public const int SPECIAL_CUM_DIVIDEND = 25;
        public const int SPECIAL_EX_DIVIDEND = 26;
        public const int SPECIAL_CUM_COUPON = 27;
        public const int SPECIAL_EX_COUPON = 28;
        public const int CASH_SETTLEMENT = 29;
        public const int SPECIAL_PRICE = 30;
        public const int GUARANTEED_DELIVERY = 31;
        public const int SPECIAL_CUM_RIGHTS = 32;
        public const int SPECIAL_EX_RIGHTS = 33;
        public const int SPECIAL_CUM_CAPITAL_REPAYMENTS = 34;
        public const int SPECIAL_EX_CAPITAL_REPAYMENTS = 35;
        public const int SPECIAL_CUM_BONUS = 36;
        public const int SPECIAL_EX_BONUS = 37;
        public const int BLOCK_TRADE_38 = 38;
        public const int WORKED_PRINCIPAL_TRADE = 39;
        public const int BLOCK_TRADES = 40;
        public const int NAME_CHANGE = 41;
        public const int PORTFOLIO_TRANSFER = 42;
        public const int PROROGATION_BUY = 43;
        public const int PROROGATION_SELL = 44;
        public const int OPTION_EXERCISE = 45;
        public const int DELTA_NEUTRAL_TRANSACTION = 46;
        public const int FINANCING_TRANSACTION = 47;
        public const int OPENING_TRADE = 56;
        public const int NETTED_TRADE = 57;
        public const int BLOCK_SWAP_TRADE = 58;
        public const int GIVE_UP_GIVE_IN_TRADE = 61;
        public const int DARK_TRADE = 62;
        public const int TECHNICAL_TRADE = 63;
        public const int BENCHMARK = 64;
        public const int CREDIT_EVENT_TRADE = 59;
        public const int SUCCESSION_EVENT_TRADE = 60;
        public const int PACKAGE_TRADE = 65;
        public const int ROLL_TRADE = 66;
    }


    /// <summary>
    /// NoAdditionalTermBondRefs Field
    /// </summary>/
    public sealed class NoAdditionalTermBondRefs : IntField
    {
        public const int TAG = 40000;

        public NoAdditionalTermBondRefs()
            : base(Tags.NoAdditionalTermBondRefs) { }
        public NoAdditionalTermBondRefs(int val)
            : base(Tags.NoAdditionalTermBondRefs, val) { }

    }


    /// <summary>
    /// AdditionalTermBondSecurityID Field
    /// </summary>/
    public sealed class AdditionalTermBondSecurityID : StringField
    {
        public const int TAG = 40001;

        public AdditionalTermBondSecurityID()
            : base(Tags.AdditionalTermBondSecurityID) { }
        public AdditionalTermBondSecurityID(string val)
            : base(Tags.AdditionalTermBondSecurityID, val) { }

    }


    /// <summary>
    /// AdditionalTermBondSecurityIDSource Field
    /// </summary>/
    public sealed class AdditionalTermBondSecurityIDSource : StringField
    {
        public const int TAG = 40002;

        public AdditionalTermBondSecurityIDSource()
            : base(Tags.AdditionalTermBondSecurityIDSource) { }
        public AdditionalTermBondSecurityIDSource(string val)
            : base(Tags.AdditionalTermBondSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// AdditionalTermBondDesc Field
    /// </summary>/
    public sealed class AdditionalTermBondDesc : StringField
    {
        public const int TAG = 40003;

        public AdditionalTermBondDesc()
            : base(Tags.AdditionalTermBondDesc) { }
        public AdditionalTermBondDesc(string val)
            : base(Tags.AdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// EncodedAdditionalTermBondDescLen Field
    /// </summary>/
    public sealed class EncodedAdditionalTermBondDescLen : IntField
    {
        public const int TAG = 40004;

        public EncodedAdditionalTermBondDescLen()
            : base(Tags.EncodedAdditionalTermBondDescLen) { }
        public EncodedAdditionalTermBondDescLen(int val)
            : base(Tags.EncodedAdditionalTermBondDescLen, val) { }

    }


    /// <summary>
    /// EncodedAdditionalTermBondDesc Field
    /// </summary>/
    public sealed class EncodedAdditionalTermBondDesc : StringField
    {
        public const int TAG = 40005;

        public EncodedAdditionalTermBondDesc()
            : base(Tags.EncodedAdditionalTermBondDesc) { }
        public EncodedAdditionalTermBondDesc(string val)
            : base(Tags.EncodedAdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// AdditionalTermBondCurrency Field
    /// </summary>/
    public sealed class AdditionalTermBondCurrency : StringField
    {
        public const int TAG = 40006;

        public AdditionalTermBondCurrency()
            : base(Tags.AdditionalTermBondCurrency) { }
        public AdditionalTermBondCurrency(string val)
            : base(Tags.AdditionalTermBondCurrency, val) { }

    }


    /// <summary>
    /// AdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class AdditionalTermBondIssuer : StringField
    {
        public const int TAG = 40007;

        public AdditionalTermBondIssuer()
            : base(Tags.AdditionalTermBondIssuer) { }
        public AdditionalTermBondIssuer(string val)
            : base(Tags.AdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// EncodedAdditionalTermBondIssuerLen Field
    /// </summary>/
    public sealed class EncodedAdditionalTermBondIssuerLen : IntField
    {
        public const int TAG = 40008;

        public EncodedAdditionalTermBondIssuerLen()
            : base(Tags.EncodedAdditionalTermBondIssuerLen) { }
        public EncodedAdditionalTermBondIssuerLen(int val)
            : base(Tags.EncodedAdditionalTermBondIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedAdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class EncodedAdditionalTermBondIssuer : StringField
    {
        public const int TAG = 40009;

        public EncodedAdditionalTermBondIssuer()
            : base(Tags.EncodedAdditionalTermBondIssuer) { }
        public EncodedAdditionalTermBondIssuer(string val)
            : base(Tags.EncodedAdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// AdditionalTermBondSeniority Field
    /// </summary>/
    public sealed class AdditionalTermBondSeniority : StringField
    {
        public const int TAG = 40010;

        public AdditionalTermBondSeniority()
            : base(Tags.AdditionalTermBondSeniority) { }
        public AdditionalTermBondSeniority(string val)
            : base(Tags.AdditionalTermBondSeniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// AdditionalTermBondCouponType Field
    /// </summary>/
    public sealed class AdditionalTermBondCouponType : IntField
    {
        public const int TAG = 40011;

        public AdditionalTermBondCouponType()
            : base(Tags.AdditionalTermBondCouponType) { }
        public AdditionalTermBondCouponType(int val)
            : base(Tags.AdditionalTermBondCouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// AdditionalTermBondCouponRate Field
    /// </summary>/
    public sealed class AdditionalTermBondCouponRate : DecimalField
    {
        public const int TAG = 40012;

        public AdditionalTermBondCouponRate()
            : base(Tags.AdditionalTermBondCouponRate) { }
        public AdditionalTermBondCouponRate(Decimal val)
            : base(Tags.AdditionalTermBondCouponRate, val) { }

    }


    /// <summary>
    /// AdditionalTermBondMaturityDate Field
    /// </summary>/
    public sealed class AdditionalTermBondMaturityDate : StringField
    {
        public const int TAG = 40013;

        public AdditionalTermBondMaturityDate()
            : base(Tags.AdditionalTermBondMaturityDate) { }
        public AdditionalTermBondMaturityDate(string val)
            : base(Tags.AdditionalTermBondMaturityDate, val) { }

    }


    /// <summary>
    /// AdditionalTermBondParValue Field
    /// </summary>/
    public sealed class AdditionalTermBondParValue : DecimalField
    {
        public const int TAG = 40014;

        public AdditionalTermBondParValue()
            : base(Tags.AdditionalTermBondParValue) { }
        public AdditionalTermBondParValue(Decimal val)
            : base(Tags.AdditionalTermBondParValue, val) { }

    }


    /// <summary>
    /// AdditionalTermBondCurrentTotalIssuedAmount Field
    /// </summary>/
    public sealed class AdditionalTermBondCurrentTotalIssuedAmount : DecimalField
    {
        public const int TAG = 40015;

        public AdditionalTermBondCurrentTotalIssuedAmount()
            : base(Tags.AdditionalTermBondCurrentTotalIssuedAmount) { }
        public AdditionalTermBondCurrentTotalIssuedAmount(Decimal val)
            : base(Tags.AdditionalTermBondCurrentTotalIssuedAmount, val) { }

    }


    /// <summary>
    /// AdditionalTermBondCouponFrequencyPeriod Field
    /// </summary>/
    public sealed class AdditionalTermBondCouponFrequencyPeriod : IntField
    {
        public const int TAG = 40016;

        public AdditionalTermBondCouponFrequencyPeriod()
            : base(Tags.AdditionalTermBondCouponFrequencyPeriod) { }
        public AdditionalTermBondCouponFrequencyPeriod(int val)
            : base(Tags.AdditionalTermBondCouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// AdditionalTermBondCouponFrequencyUnit Field
    /// </summary>/
    public sealed class AdditionalTermBondCouponFrequencyUnit : StringField
    {
        public const int TAG = 40017;

        public AdditionalTermBondCouponFrequencyUnit()
            : base(Tags.AdditionalTermBondCouponFrequencyUnit) { }
        public AdditionalTermBondCouponFrequencyUnit(string val)
            : base(Tags.AdditionalTermBondCouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// AdditionalTermBondDayCount Field
    /// </summary>/
    public sealed class AdditionalTermBondDayCount : IntField
    {
        public const int TAG = 40018;

        public AdditionalTermBondDayCount()
            : base(Tags.AdditionalTermBondDayCount) { }
        public AdditionalTermBondDayCount(int val)
            : base(Tags.AdditionalTermBondDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoAdditionalTerms Field
    /// </summary>/
    public sealed class NoAdditionalTerms : IntField
    {
        public const int TAG = 40019;

        public NoAdditionalTerms()
            : base(Tags.NoAdditionalTerms) { }
        public NoAdditionalTerms(int val)
            : base(Tags.NoAdditionalTerms, val) { }

    }


    /// <summary>
    /// AdditionalTermConditionPrecedentBondIndicator Field
    /// </summary>/
    public sealed class AdditionalTermConditionPrecedentBondIndicator : BooleanField
    {
        public const int TAG = 40020;

        public AdditionalTermConditionPrecedentBondIndicator()
            : base(Tags.AdditionalTermConditionPrecedentBondIndicator) { }
        public AdditionalTermConditionPrecedentBondIndicator(Boolean val)
            : base(Tags.AdditionalTermConditionPrecedentBondIndicator, val) { }

    }


    /// <summary>
    /// AdditionalTermDiscrepancyClauseIndicator Field
    /// </summary>/
    public sealed class AdditionalTermDiscrepancyClauseIndicator : BooleanField
    {
        public const int TAG = 40021;

        public AdditionalTermDiscrepancyClauseIndicator()
            : base(Tags.AdditionalTermDiscrepancyClauseIndicator) { }
        public AdditionalTermDiscrepancyClauseIndicator(Boolean val)
            : base(Tags.AdditionalTermDiscrepancyClauseIndicator, val) { }

    }


    /// <summary>
    /// NoCashSettlTerms Field
    /// </summary>/
    public sealed class NoCashSettlTerms : IntField
    {
        public const int TAG = 40022;

        public NoCashSettlTerms()
            : base(Tags.NoCashSettlTerms) { }
        public NoCashSettlTerms(int val)
            : base(Tags.NoCashSettlTerms, val) { }

    }


    /// <summary>
    /// CashSettlCurrency Field
    /// </summary>/
    public sealed class CashSettlCurrency : StringField
    {
        public const int TAG = 40023;

        public CashSettlCurrency()
            : base(Tags.CashSettlCurrency) { }
        public CashSettlCurrency(string val)
            : base(Tags.CashSettlCurrency, val) { }

    }


    /// <summary>
    /// CashSettlValuationFirstBusinessDayOffset Field
    /// </summary>/
    public sealed class CashSettlValuationFirstBusinessDayOffset : IntField
    {
        public const int TAG = 40024;

        public CashSettlValuationFirstBusinessDayOffset()
            : base(Tags.CashSettlValuationFirstBusinessDayOffset) { }
        public CashSettlValuationFirstBusinessDayOffset(int val)
            : base(Tags.CashSettlValuationFirstBusinessDayOffset, val) { }

    }


    /// <summary>
    /// CashSettlValuationTime Field
    /// </summary>/
    public sealed class CashSettlValuationTime : StringField
    {
        public const int TAG = 40025;

        public CashSettlValuationTime()
            : base(Tags.CashSettlValuationTime) { }
        public CashSettlValuationTime(string val)
            : base(Tags.CashSettlValuationTime, val) { }

    }


    /// <summary>
    /// CashSettlBusinessCenter Field
    /// </summary>/
    public sealed class CashSettlBusinessCenter : StringField
    {
        public const int TAG = 40026;

        public CashSettlBusinessCenter()
            : base(Tags.CashSettlBusinessCenter) { }
        public CashSettlBusinessCenter(string val)
            : base(Tags.CashSettlBusinessCenter, val) { }

    }


    /// <summary>
    /// CashSettlQuoteMethod Field
    /// </summary>/
    public sealed class CashSettlQuoteMethod : IntField
    {
        public const int TAG = 40027;

        public CashSettlQuoteMethod()
            : base(Tags.CashSettlQuoteMethod) { }
        public CashSettlQuoteMethod(int val)
            : base(Tags.CashSettlQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// CashSettlQuoteAmount Field
    /// </summary>/
    public sealed class CashSettlQuoteAmount : DecimalField
    {
        public const int TAG = 40028;

        public CashSettlQuoteAmount()
            : base(Tags.CashSettlQuoteAmount) { }
        public CashSettlQuoteAmount(Decimal val)
            : base(Tags.CashSettlQuoteAmount, val) { }

    }


    /// <summary>
    /// CashSettlQuoteCurrency Field
    /// </summary>/
    public sealed class CashSettlQuoteCurrency : StringField
    {
        public const int TAG = 40029;

        public CashSettlQuoteCurrency()
            : base(Tags.CashSettlQuoteCurrency) { }
        public CashSettlQuoteCurrency(string val)
            : base(Tags.CashSettlQuoteCurrency, val) { }

    }


    /// <summary>
    /// CashSettlMinimumQuoteAmount Field
    /// </summary>/
    public sealed class CashSettlMinimumQuoteAmount : DecimalField
    {
        public const int TAG = 40030;

        public CashSettlMinimumQuoteAmount()
            : base(Tags.CashSettlMinimumQuoteAmount) { }
        public CashSettlMinimumQuoteAmount(Decimal val)
            : base(Tags.CashSettlMinimumQuoteAmount, val) { }

    }


    /// <summary>
    /// CashSettlMinimumQuoteCurrency Field
    /// </summary>/
    public sealed class CashSettlMinimumQuoteCurrency : StringField
    {
        public const int TAG = 40031;

        public CashSettlMinimumQuoteCurrency()
            : base(Tags.CashSettlMinimumQuoteCurrency) { }
        public CashSettlMinimumQuoteCurrency(string val)
            : base(Tags.CashSettlMinimumQuoteCurrency, val) { }

    }


    /// <summary>
    /// CashSettlDealer Field
    /// </summary>/
    public sealed class CashSettlDealer : StringField
    {
        public const int TAG = 40032;

        public CashSettlDealer()
            : base(Tags.CashSettlDealer) { }
        public CashSettlDealer(string val)
            : base(Tags.CashSettlDealer, val) { }

    }


    /// <summary>
    /// CashSettlBusinessDays Field
    /// </summary>/
    public sealed class CashSettlBusinessDays : IntField
    {
        public const int TAG = 40033;

        public CashSettlBusinessDays()
            : base(Tags.CashSettlBusinessDays) { }
        public CashSettlBusinessDays(int val)
            : base(Tags.CashSettlBusinessDays, val) { }

    }


    /// <summary>
    /// CashSettlAmount Field
    /// </summary>/
    public sealed class CashSettlAmount : DecimalField
    {
        public const int TAG = 40034;

        public CashSettlAmount()
            : base(Tags.CashSettlAmount) { }
        public CashSettlAmount(Decimal val)
            : base(Tags.CashSettlAmount, val) { }

    }


    /// <summary>
    /// CashSettlRecoveryFactor Field
    /// </summary>/
    public sealed class CashSettlRecoveryFactor : DecimalField
    {
        public const int TAG = 40035;

        public CashSettlRecoveryFactor()
            : base(Tags.CashSettlRecoveryFactor) { }
        public CashSettlRecoveryFactor(Decimal val)
            : base(Tags.CashSettlRecoveryFactor, val) { }

    }


    /// <summary>
    /// CashSettlFixedTermIndicator Field
    /// </summary>/
    public sealed class CashSettlFixedTermIndicator : BooleanField
    {
        public const int TAG = 40036;

        public CashSettlFixedTermIndicator()
            : base(Tags.CashSettlFixedTermIndicator) { }
        public CashSettlFixedTermIndicator(Boolean val)
            : base(Tags.CashSettlFixedTermIndicator, val) { }

    }


    /// <summary>
    /// CashSettlAccruedInterestIndicator Field
    /// </summary>/
    public sealed class CashSettlAccruedInterestIndicator : BooleanField
    {
        public const int TAG = 40037;

        public CashSettlAccruedInterestIndicator()
            : base(Tags.CashSettlAccruedInterestIndicator) { }
        public CashSettlAccruedInterestIndicator(Boolean val)
            : base(Tags.CashSettlAccruedInterestIndicator, val) { }

    }


    /// <summary>
    /// CashSettlValuationMethod Field
    /// </summary>/
    public sealed class CashSettlValuationMethod : IntField
    {
        public const int TAG = 40038;

        public CashSettlValuationMethod()
            : base(Tags.CashSettlValuationMethod) { }
        public CashSettlValuationMethod(int val)
            : base(Tags.CashSettlValuationMethod, val) { }


        // Field Enumerations
        public const int MARKET = 0;
        public const int HIGHEST = 1;
        public const int AVERAGE_MARKET = 2;
        public const int AVERAGE_HIGHEST = 3;
        public const int BLENDED_MARKET = 4;
        public const int BLENDED_HIGHEST = 5;
        public const int AVERAGE_BLENDED_MARKET = 6;
        public const int AVERAGE_BLENDED_HIGHEST = 7;
    }


    /// <summary>
    /// CashSettlTermXID Field
    /// </summary>/
    public sealed class CashSettlTermXID : StringField
    {
        public const int TAG = 40039;

        public CashSettlTermXID()
            : base(Tags.CashSettlTermXID) { }
        public CashSettlTermXID(string val)
            : base(Tags.CashSettlTermXID, val) { }

    }


    /// <summary>
    /// NoContractualDefinitions Field
    /// </summary>/
    public sealed class NoContractualDefinitions : IntField
    {
        public const int TAG = 40040;

        public NoContractualDefinitions()
            : base(Tags.NoContractualDefinitions) { }
        public NoContractualDefinitions(int val)
            : base(Tags.NoContractualDefinitions, val) { }

    }


    /// <summary>
    /// ContractualDefinition Field
    /// </summary>/
    public sealed class ContractualDefinition : StringField
    {
        public const int TAG = 40041;

        public ContractualDefinition()
            : base(Tags.ContractualDefinition) { }
        public ContractualDefinition(string val)
            : base(Tags.ContractualDefinition, val) { }

    }


    /// <summary>
    /// NoContractualMatrices Field
    /// </summary>/
    public sealed class NoContractualMatrices : IntField
    {
        public const int TAG = 40042;

        public NoContractualMatrices()
            : base(Tags.NoContractualMatrices) { }
        public NoContractualMatrices(int val)
            : base(Tags.NoContractualMatrices, val) { }

    }


    /// <summary>
    /// ContractualMatrixSource Field
    /// </summary>/
    public sealed class ContractualMatrixSource : StringField
    {
        public const int TAG = 40043;

        public ContractualMatrixSource()
            : base(Tags.ContractualMatrixSource) { }
        public ContractualMatrixSource(string val)
            : base(Tags.ContractualMatrixSource, val) { }

    }


    /// <summary>
    /// ContractualMatrixDate Field
    /// </summary>/
    public sealed class ContractualMatrixDate : StringField
    {
        public const int TAG = 40044;

        public ContractualMatrixDate()
            : base(Tags.ContractualMatrixDate) { }
        public ContractualMatrixDate(string val)
            : base(Tags.ContractualMatrixDate, val) { }

    }


    /// <summary>
    /// ContractualMatrixTerm Field
    /// </summary>/
    public sealed class ContractualMatrixTerm : StringField
    {
        public const int TAG = 40045;

        public ContractualMatrixTerm()
            : base(Tags.ContractualMatrixTerm) { }
        public ContractualMatrixTerm(string val)
            : base(Tags.ContractualMatrixTerm, val) { }

    }


    /// <summary>
    /// NoFinancingTermSupplements Field
    /// </summary>/
    public sealed class NoFinancingTermSupplements : IntField
    {
        public const int TAG = 40046;

        public NoFinancingTermSupplements()
            : base(Tags.NoFinancingTermSupplements) { }
        public NoFinancingTermSupplements(int val)
            : base(Tags.NoFinancingTermSupplements, val) { }

    }


    /// <summary>
    /// FinancingTermSupplementDesc Field
    /// </summary>/
    public sealed class FinancingTermSupplementDesc : StringField
    {
        public const int TAG = 40047;

        public FinancingTermSupplementDesc()
            : base(Tags.FinancingTermSupplementDesc) { }
        public FinancingTermSupplementDesc(string val)
            : base(Tags.FinancingTermSupplementDesc, val) { }

    }


    /// <summary>
    /// FinancingTermSupplementDate Field
    /// </summary>/
    public sealed class FinancingTermSupplementDate : StringField
    {
        public const int TAG = 40048;

        public FinancingTermSupplementDate()
            : base(Tags.FinancingTermSupplementDate) { }
        public FinancingTermSupplementDate(string val)
            : base(Tags.FinancingTermSupplementDate, val) { }

    }


    /// <summary>
    /// NoStreams Field
    /// </summary>/
    public sealed class NoStreams : IntField
    {
        public const int TAG = 40049;

        public NoStreams()
            : base(Tags.NoStreams) { }
        public NoStreams(int val)
            : base(Tags.NoStreams, val) { }

    }


    /// <summary>
    /// StreamType Field
    /// </summary>/
    public sealed class StreamType : IntField
    {
        public const int TAG = 40050;

        public StreamType()
            : base(Tags.StreamType) { }
        public StreamType(int val)
            : base(Tags.StreamType, val) { }


        // Field Enumerations
        public const int PAYMENT = 0;
        public const int PHYSICAL_DELIVERY = 1;
    }


    /// <summary>
    /// StreamDesc Field
    /// </summary>/
    public sealed class StreamDesc : StringField
    {
        public const int TAG = 40051;

        public StreamDesc()
            : base(Tags.StreamDesc) { }
        public StreamDesc(string val)
            : base(Tags.StreamDesc, val) { }

    }


    /// <summary>
    /// StreamPaySide Field
    /// </summary>/
    public sealed class StreamPaySide : IntField
    {
        public const int TAG = 40052;

        public StreamPaySide()
            : base(Tags.StreamPaySide) { }
        public StreamPaySide(int val)
            : base(Tags.StreamPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// StreamReceiveSide Field
    /// </summary>/
    public sealed class StreamReceiveSide : IntField
    {
        public const int TAG = 40053;

        public StreamReceiveSide()
            : base(Tags.StreamReceiveSide) { }
        public StreamReceiveSide(int val)
            : base(Tags.StreamReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// StreamNotional Field
    /// </summary>/
    public sealed class StreamNotional : DecimalField
    {
        public const int TAG = 40054;

        public StreamNotional()
            : base(Tags.StreamNotional) { }
        public StreamNotional(Decimal val)
            : base(Tags.StreamNotional, val) { }

    }


    /// <summary>
    /// StreamCurrency Field
    /// </summary>/
    public sealed class StreamCurrency : StringField
    {
        public const int TAG = 40055;

        public StreamCurrency()
            : base(Tags.StreamCurrency) { }
        public StreamCurrency(string val)
            : base(Tags.StreamCurrency, val) { }

    }


    /// <summary>
    /// StreamText Field
    /// </summary>/
    public sealed class StreamText : StringField
    {
        public const int TAG = 40056;

        public StreamText()
            : base(Tags.StreamText) { }
        public StreamText(string val)
            : base(Tags.StreamText, val) { }

    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateUnadjusted : StringField
    {
        public const int TAG = 40057;

        public UnderlyingStreamEffectiveDateUnadjusted()
            : base(Tags.UnderlyingStreamEffectiveDateUnadjusted) { }
        public UnderlyingStreamEffectiveDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamEffectiveDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateBusinessDayConvention : IntField
    {
        public const int TAG = 40058;

        public UnderlyingStreamEffectiveDateBusinessDayConvention()
            : base(Tags.UnderlyingStreamEffectiveDateBusinessDayConvention) { }
        public UnderlyingStreamEffectiveDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingStreamEffectiveDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateBusinessCenter : StringField
    {
        public const int TAG = 40059;

        public UnderlyingStreamEffectiveDateBusinessCenter()
            : base(Tags.UnderlyingStreamEffectiveDateBusinessCenter) { }
        public UnderlyingStreamEffectiveDateBusinessCenter(string val)
            : base(Tags.UnderlyingStreamEffectiveDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateRelativeTo : IntField
    {
        public const int TAG = 40060;

        public UnderlyingStreamEffectiveDateRelativeTo()
            : base(Tags.UnderlyingStreamEffectiveDateRelativeTo) { }
        public UnderlyingStreamEffectiveDateRelativeTo(int val)
            : base(Tags.UnderlyingStreamEffectiveDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateOffsetPeriod : IntField
    {
        public const int TAG = 40061;

        public UnderlyingStreamEffectiveDateOffsetPeriod()
            : base(Tags.UnderlyingStreamEffectiveDateOffsetPeriod) { }
        public UnderlyingStreamEffectiveDateOffsetPeriod(int val)
            : base(Tags.UnderlyingStreamEffectiveDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateOffsetUnit : StringField
    {
        public const int TAG = 40062;

        public UnderlyingStreamEffectiveDateOffsetUnit()
            : base(Tags.UnderlyingStreamEffectiveDateOffsetUnit) { }
        public UnderlyingStreamEffectiveDateOffsetUnit(string val)
            : base(Tags.UnderlyingStreamEffectiveDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateOffsetDayType : IntField
    {
        public const int TAG = 40063;

        public UnderlyingStreamEffectiveDateOffsetDayType()
            : base(Tags.UnderlyingStreamEffectiveDateOffsetDayType) { }
        public UnderlyingStreamEffectiveDateOffsetDayType(int val)
            : base(Tags.UnderlyingStreamEffectiveDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingStreamEffectiveDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamEffectiveDateAdjusted : StringField
    {
        public const int TAG = 40064;

        public UnderlyingStreamEffectiveDateAdjusted()
            : base(Tags.UnderlyingStreamEffectiveDateAdjusted) { }
        public UnderlyingStreamEffectiveDateAdjusted(string val)
            : base(Tags.UnderlyingStreamEffectiveDateAdjusted, val) { }

    }


    /// <summary>
    /// StreamTerminationDateUnadjusted Field
    /// </summary>/
    public sealed class StreamTerminationDateUnadjusted : StringField
    {
        public const int TAG = 40065;

        public StreamTerminationDateUnadjusted()
            : base(Tags.StreamTerminationDateUnadjusted) { }
        public StreamTerminationDateUnadjusted(string val)
            : base(Tags.StreamTerminationDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamTerminationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class StreamTerminationDateBusinessDayConvention : IntField
    {
        public const int TAG = 40066;

        public StreamTerminationDateBusinessDayConvention()
            : base(Tags.StreamTerminationDateBusinessDayConvention) { }
        public StreamTerminationDateBusinessDayConvention(int val)
            : base(Tags.StreamTerminationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// StreamTerminationDateBusinessCenter Field
    /// </summary>/
    public sealed class StreamTerminationDateBusinessCenter : StringField
    {
        public const int TAG = 40067;

        public StreamTerminationDateBusinessCenter()
            : base(Tags.StreamTerminationDateBusinessCenter) { }
        public StreamTerminationDateBusinessCenter(string val)
            : base(Tags.StreamTerminationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// StreamTerminationDateRelativeTo Field
    /// </summary>/
    public sealed class StreamTerminationDateRelativeTo : IntField
    {
        public const int TAG = 40068;

        public StreamTerminationDateRelativeTo()
            : base(Tags.StreamTerminationDateRelativeTo) { }
        public StreamTerminationDateRelativeTo(int val)
            : base(Tags.StreamTerminationDateRelativeTo, val) { }

    }


    /// <summary>
    /// StreamTerminationDateOffsetPeriod Field
    /// </summary>/
    public sealed class StreamTerminationDateOffsetPeriod : IntField
    {
        public const int TAG = 40069;

        public StreamTerminationDateOffsetPeriod()
            : base(Tags.StreamTerminationDateOffsetPeriod) { }
        public StreamTerminationDateOffsetPeriod(int val)
            : base(Tags.StreamTerminationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// StreamTerminationDateOffsetUnit Field
    /// </summary>/
    public sealed class StreamTerminationDateOffsetUnit : StringField
    {
        public const int TAG = 40070;

        public StreamTerminationDateOffsetUnit()
            : base(Tags.StreamTerminationDateOffsetUnit) { }
        public StreamTerminationDateOffsetUnit(string val)
            : base(Tags.StreamTerminationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// StreamTerminationDateOffsetDayType Field
    /// </summary>/
    public sealed class StreamTerminationDateOffsetDayType : IntField
    {
        public const int TAG = 40071;

        public StreamTerminationDateOffsetDayType()
            : base(Tags.StreamTerminationDateOffsetDayType) { }
        public StreamTerminationDateOffsetDayType(int val)
            : base(Tags.StreamTerminationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// StreamTerminationDateAdjusted Field
    /// </summary>/
    public sealed class StreamTerminationDateAdjusted : StringField
    {
        public const int TAG = 40072;

        public StreamTerminationDateAdjusted()
            : base(Tags.StreamTerminationDateAdjusted) { }
        public StreamTerminationDateAdjusted(string val)
            : base(Tags.StreamTerminationDateAdjusted, val) { }

    }


    /// <summary>
    /// StreamCalculationPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class StreamCalculationPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 40073;

        public StreamCalculationPeriodBusinessDayConvention()
            : base(Tags.StreamCalculationPeriodBusinessDayConvention) { }
        public StreamCalculationPeriodBusinessDayConvention(int val)
            : base(Tags.StreamCalculationPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// StreamCalculationPeriodBusinessCenter Field
    /// </summary>/
    public sealed class StreamCalculationPeriodBusinessCenter : StringField
    {
        public const int TAG = 40074;

        public StreamCalculationPeriodBusinessCenter()
            : base(Tags.StreamCalculationPeriodBusinessCenter) { }
        public StreamCalculationPeriodBusinessCenter(string val)
            : base(Tags.StreamCalculationPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// StreamFirstPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class StreamFirstPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40075;

        public StreamFirstPeriodStartDateUnadjusted()
            : base(Tags.StreamFirstPeriodStartDateUnadjusted) { }
        public StreamFirstPeriodStartDateUnadjusted(string val)
            : base(Tags.StreamFirstPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamFirstPeriodStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class StreamFirstPeriodStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 40076;

        public StreamFirstPeriodStartDateBusinessDayConvention()
            : base(Tags.StreamFirstPeriodStartDateBusinessDayConvention) { }
        public StreamFirstPeriodStartDateBusinessDayConvention(int val)
            : base(Tags.StreamFirstPeriodStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// StreamFirstPeriodStartDateBusinessCenter Field
    /// </summary>/
    public sealed class StreamFirstPeriodStartDateBusinessCenter : StringField
    {
        public const int TAG = 40077;

        public StreamFirstPeriodStartDateBusinessCenter()
            : base(Tags.StreamFirstPeriodStartDateBusinessCenter) { }
        public StreamFirstPeriodStartDateBusinessCenter(string val)
            : base(Tags.StreamFirstPeriodStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// StreamFirstPeriodStartDateAdjusted Field
    /// </summary>/
    public sealed class StreamFirstPeriodStartDateAdjusted : StringField
    {
        public const int TAG = 40078;

        public StreamFirstPeriodStartDateAdjusted()
            : base(Tags.StreamFirstPeriodStartDateAdjusted) { }
        public StreamFirstPeriodStartDateAdjusted(string val)
            : base(Tags.StreamFirstPeriodStartDateAdjusted, val) { }

    }


    /// <summary>
    /// StreamFirstRegularPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class StreamFirstRegularPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40079;

        public StreamFirstRegularPeriodStartDateUnadjusted()
            : base(Tags.StreamFirstRegularPeriodStartDateUnadjusted) { }
        public StreamFirstRegularPeriodStartDateUnadjusted(string val)
            : base(Tags.StreamFirstRegularPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamFirstCompoundingPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class StreamFirstCompoundingPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40080;

        public StreamFirstCompoundingPeriodEndDateUnadjusted()
            : base(Tags.StreamFirstCompoundingPeriodEndDateUnadjusted) { }
        public StreamFirstCompoundingPeriodEndDateUnadjusted(string val)
            : base(Tags.StreamFirstCompoundingPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamLastRegularPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class StreamLastRegularPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40081;

        public StreamLastRegularPeriodEndDateUnadjusted()
            : base(Tags.StreamLastRegularPeriodEndDateUnadjusted) { }
        public StreamLastRegularPeriodEndDateUnadjusted(string val)
            : base(Tags.StreamLastRegularPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamCalculationFrequencyPeriod Field
    /// </summary>/
    public sealed class StreamCalculationFrequencyPeriod : IntField
    {
        public const int TAG = 40082;

        public StreamCalculationFrequencyPeriod()
            : base(Tags.StreamCalculationFrequencyPeriod) { }
        public StreamCalculationFrequencyPeriod(int val)
            : base(Tags.StreamCalculationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// StreamCalculationFrequencyUnit Field
    /// </summary>/
    public sealed class StreamCalculationFrequencyUnit : StringField
    {
        public const int TAG = 40083;

        public StreamCalculationFrequencyUnit()
            : base(Tags.StreamCalculationFrequencyUnit) { }
        public StreamCalculationFrequencyUnit(string val)
            : base(Tags.StreamCalculationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// StreamCalculationRollConvention Field
    /// </summary>/
    public sealed class StreamCalculationRollConvention : StringField
    {
        public const int TAG = 40084;

        public StreamCalculationRollConvention()
            : base(Tags.StreamCalculationRollConvention) { }
        public StreamCalculationRollConvention(string val)
            : base(Tags.StreamCalculationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoSettlRateFallbacks Field
    /// </summary>/
    public sealed class NoSettlRateFallbacks : IntField
    {
        public const int TAG = 40085;

        public NoSettlRateFallbacks()
            : base(Tags.NoSettlRateFallbacks) { }
        public NoSettlRateFallbacks(int val)
            : base(Tags.NoSettlRateFallbacks, val) { }

    }


    /// <summary>
    /// SettlRatePostponementMaximumDays Field
    /// </summary>/
    public sealed class SettlRatePostponementMaximumDays : IntField
    {
        public const int TAG = 40086;

        public SettlRatePostponementMaximumDays()
            : base(Tags.SettlRatePostponementMaximumDays) { }
        public SettlRatePostponementMaximumDays(int val)
            : base(Tags.SettlRatePostponementMaximumDays, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableSettlRateSource Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableSettlRateSource : IntField
    {
        public const int TAG = 40087;

        public LegPaymentStreamNonDeliverableSettlRateSource()
            : base(Tags.LegPaymentStreamNonDeliverableSettlRateSource) { }
        public LegPaymentStreamNonDeliverableSettlRateSource(int val)
            : base(Tags.LegPaymentStreamNonDeliverableSettlRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// SettlRatePostponementSurvey Field
    /// </summary>/
    public sealed class SettlRatePostponementSurvey : BooleanField
    {
        public const int TAG = 40088;

        public SettlRatePostponementSurvey()
            : base(Tags.SettlRatePostponementSurvey) { }
        public SettlRatePostponementSurvey(Boolean val)
            : base(Tags.SettlRatePostponementSurvey, val) { }

    }


    /// <summary>
    /// SettlRatePostponementCalculationAgent Field
    /// </summary>/
    public sealed class SettlRatePostponementCalculationAgent : IntField
    {
        public const int TAG = 40089;

        public SettlRatePostponementCalculationAgent()
            : base(Tags.SettlRatePostponementCalculationAgent) { }
        public SettlRatePostponementCalculationAgent(int val)
            : base(Tags.SettlRatePostponementCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// NoProvisions Field
    /// </summary>/
    public sealed class NoProvisions : IntField
    {
        public const int TAG = 40090;

        public NoProvisions()
            : base(Tags.NoProvisions) { }
        public NoProvisions(int val)
            : base(Tags.NoProvisions, val) { }

    }


    /// <summary>
    /// ProvisionType Field
    /// </summary>/
    public sealed class ProvisionType : IntField
    {
        public const int TAG = 40091;

        public ProvisionType()
            : base(Tags.ProvisionType) { }
        public ProvisionType(int val)
            : base(Tags.ProvisionType, val) { }


        // Field Enumerations
        public const int MANDATORY_EARLY_TERMINATION = 0;
        public const int OPTIONAL_EARLY_TERMINATION = 1;
        public const int CANCELABLE = 2;
        public const int EXTENDABLE = 3;
        public const int MUTUAL_EARLY_TERMINATION = 4;
        public const int EVERGREEN = 5;
        public const int CALLABLE = 6;
        public const int PUTTABLE = 7;
    }


    /// <summary>
    /// ProvisionDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionDateUnadjusted : StringField
    {
        public const int TAG = 40092;

        public ProvisionDateUnadjusted()
            : base(Tags.ProvisionDateUnadjusted) { }
        public ProvisionDateUnadjusted(string val)
            : base(Tags.ProvisionDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionDateBusinessDayConvention : IntField
    {
        public const int TAG = 40093;

        public ProvisionDateBusinessDayConvention()
            : base(Tags.ProvisionDateBusinessDayConvention) { }
        public ProvisionDateBusinessDayConvention(int val)
            : base(Tags.ProvisionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionDateBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionDateBusinessCenter : StringField
    {
        public const int TAG = 40094;

        public ProvisionDateBusinessCenter()
            : base(Tags.ProvisionDateBusinessCenter) { }
        public ProvisionDateBusinessCenter(string val)
            : base(Tags.ProvisionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionDateAdjusted Field
    /// </summary>/
    public sealed class ProvisionDateAdjusted : StringField
    {
        public const int TAG = 40095;

        public ProvisionDateAdjusted()
            : base(Tags.ProvisionDateAdjusted) { }
        public ProvisionDateAdjusted(string val)
            : base(Tags.ProvisionDateAdjusted, val) { }

    }


    /// <summary>
    /// ProvisionDateTenorPeriod Field
    /// </summary>/
    public sealed class ProvisionDateTenorPeriod : IntField
    {
        public const int TAG = 40096;

        public ProvisionDateTenorPeriod()
            : base(Tags.ProvisionDateTenorPeriod) { }
        public ProvisionDateTenorPeriod(int val)
            : base(Tags.ProvisionDateTenorPeriod, val) { }

    }


    /// <summary>
    /// ProvisionDateTenorUnit Field
    /// </summary>/
    public sealed class ProvisionDateTenorUnit : StringField
    {
        public const int TAG = 40097;

        public ProvisionDateTenorUnit()
            : base(Tags.ProvisionDateTenorUnit) { }
        public ProvisionDateTenorUnit(string val)
            : base(Tags.ProvisionDateTenorUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionCalculationAgent Field
    /// </summary>/
    public sealed class ProvisionCalculationAgent : IntField
    {
        public const int TAG = 40098;

        public ProvisionCalculationAgent()
            : base(Tags.ProvisionCalculationAgent) { }
        public ProvisionCalculationAgent(int val)
            : base(Tags.ProvisionCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// ProvisionOptionSinglePartyBuyerSide Field
    /// </summary>/
    public sealed class ProvisionOptionSinglePartyBuyerSide : IntField
    {
        public const int TAG = 40099;

        public ProvisionOptionSinglePartyBuyerSide()
            : base(Tags.ProvisionOptionSinglePartyBuyerSide) { }
        public ProvisionOptionSinglePartyBuyerSide(int val)
            : base(Tags.ProvisionOptionSinglePartyBuyerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// ProvisionOptionSinglePartySellerSide Field
    /// </summary>/
    public sealed class ProvisionOptionSinglePartySellerSide : IntField
    {
        public const int TAG = 40100;

        public ProvisionOptionSinglePartySellerSide()
            : base(Tags.ProvisionOptionSinglePartySellerSide) { }
        public ProvisionOptionSinglePartySellerSide(int val)
            : base(Tags.ProvisionOptionSinglePartySellerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// ProvisionOptionExerciseStyle Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStyle : IntField
    {
        public const int TAG = 40101;

        public ProvisionOptionExerciseStyle()
            : base(Tags.ProvisionOptionExerciseStyle) { }
        public ProvisionOptionExerciseStyle(int val)
            : base(Tags.ProvisionOptionExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// ProvisionOptionExerciseMultipleNotional Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseMultipleNotional : DecimalField
    {
        public const int TAG = 40102;

        public ProvisionOptionExerciseMultipleNotional()
            : base(Tags.ProvisionOptionExerciseMultipleNotional) { }
        public ProvisionOptionExerciseMultipleNotional(Decimal val)
            : base(Tags.ProvisionOptionExerciseMultipleNotional, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseMinimumNotional Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseMinimumNotional : DecimalField
    {
        public const int TAG = 40103;

        public ProvisionOptionExerciseMinimumNotional()
            : base(Tags.ProvisionOptionExerciseMinimumNotional) { }
        public ProvisionOptionExerciseMinimumNotional(Decimal val)
            : base(Tags.ProvisionOptionExerciseMinimumNotional, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseMaximumNotional Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseMaximumNotional : DecimalField
    {
        public const int TAG = 40104;

        public ProvisionOptionExerciseMaximumNotional()
            : base(Tags.ProvisionOptionExerciseMaximumNotional) { }
        public ProvisionOptionExerciseMaximumNotional(Decimal val)
            : base(Tags.ProvisionOptionExerciseMaximumNotional, val) { }

    }


    /// <summary>
    /// ProvisionOptionMinimumNumber Field
    /// </summary>/
    public sealed class ProvisionOptionMinimumNumber : IntField
    {
        public const int TAG = 40105;

        public ProvisionOptionMinimumNumber()
            : base(Tags.ProvisionOptionMinimumNumber) { }
        public ProvisionOptionMinimumNumber(int val)
            : base(Tags.ProvisionOptionMinimumNumber, val) { }

    }


    /// <summary>
    /// ProvisionOptionMaximumNumber Field
    /// </summary>/
    public sealed class ProvisionOptionMaximumNumber : IntField
    {
        public const int TAG = 40106;

        public ProvisionOptionMaximumNumber()
            : base(Tags.ProvisionOptionMaximumNumber) { }
        public ProvisionOptionMaximumNumber(int val)
            : base(Tags.ProvisionOptionMaximumNumber, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseConfirmation Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseConfirmation : BooleanField
    {
        public const int TAG = 40107;

        public ProvisionOptionExerciseConfirmation()
            : base(Tags.ProvisionOptionExerciseConfirmation) { }
        public ProvisionOptionExerciseConfirmation(Boolean val)
            : base(Tags.ProvisionOptionExerciseConfirmation, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlMethod Field
    /// </summary>/
    public sealed class ProvisionCashSettlMethod : IntField
    {
        public const int TAG = 40108;

        public ProvisionCashSettlMethod()
            : base(Tags.ProvisionCashSettlMethod) { }
        public ProvisionCashSettlMethod(int val)
            : base(Tags.ProvisionCashSettlMethod, val) { }


        // Field Enumerations
        public const int CASH_PRICE = 0;
        public const int CASH_PRICE_ALTERNATE = 1;
        public const int PAR_YIELD_CURVE_ADJUSTED = 2;
        public const int ZERO_COUPON_YIELD_CURVE_ADJUSTED = 3;
        public const int PAR_YIELD_CURVE_UNADJUSTED = 4;
        public const int CROSS_CURRENCY = 5;
        public const int COLLATERALIZED_PRICE = 6;
    }


    /// <summary>
    /// ProvisionCashSettlCurrency Field
    /// </summary>/
    public sealed class ProvisionCashSettlCurrency : StringField
    {
        public const int TAG = 40109;

        public ProvisionCashSettlCurrency()
            : base(Tags.ProvisionCashSettlCurrency) { }
        public ProvisionCashSettlCurrency(string val)
            : base(Tags.ProvisionCashSettlCurrency, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlCurrency2 Field
    /// </summary>/
    public sealed class ProvisionCashSettlCurrency2 : StringField
    {
        public const int TAG = 40110;

        public ProvisionCashSettlCurrency2()
            : base(Tags.ProvisionCashSettlCurrency2) { }
        public ProvisionCashSettlCurrency2(string val)
            : base(Tags.ProvisionCashSettlCurrency2, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlQuoteType Field
    /// </summary>/
    public sealed class ProvisionCashSettlQuoteType : IntField
    {
        public const int TAG = 40111;

        public ProvisionCashSettlQuoteType()
            : base(Tags.ProvisionCashSettlQuoteType) { }
        public ProvisionCashSettlQuoteType(int val)
            : base(Tags.ProvisionCashSettlQuoteType, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
        public const int EXERCISING_PARTY_PAYS = 3;
    }


    /// <summary>
    /// ProvisionCashSettlQuoteSource Field
    /// </summary>/
    public sealed class ProvisionCashSettlQuoteSource : IntField
    {
        public const int TAG = 40112;

        public ProvisionCashSettlQuoteSource()
            : base(Tags.ProvisionCashSettlQuoteSource) { }
        public ProvisionCashSettlQuoteSource(int val)
            : base(Tags.ProvisionCashSettlQuoteSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// ProvisionText Field
    /// </summary>/
    public sealed class ProvisionText : StringField
    {
        public const int TAG = 40113;

        public ProvisionText()
            : base(Tags.ProvisionText) { }
        public ProvisionText(string val)
            : base(Tags.ProvisionText, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueTime Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueTime : StringField
    {
        public const int TAG = 40114;

        public ProvisionCashSettlValueTime()
            : base(Tags.ProvisionCashSettlValueTime) { }
        public ProvisionCashSettlValueTime(string val)
            : base(Tags.ProvisionCashSettlValueTime, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueTimeBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueTimeBusinessCenter : StringField
    {
        public const int TAG = 40115;

        public ProvisionCashSettlValueTimeBusinessCenter()
            : base(Tags.ProvisionCashSettlValueTimeBusinessCenter) { }
        public ProvisionCashSettlValueTimeBusinessCenter(string val)
            : base(Tags.ProvisionCashSettlValueTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateBusinessDayConvention : IntField
    {
        public const int TAG = 40116;

        public ProvisionCashSettlValueDateBusinessDayConvention()
            : base(Tags.ProvisionCashSettlValueDateBusinessDayConvention) { }
        public ProvisionCashSettlValueDateBusinessDayConvention(int val)
            : base(Tags.ProvisionCashSettlValueDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionCashSettlValueDateBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateBusinessCenter : StringField
    {
        public const int TAG = 40117;

        public ProvisionCashSettlValueDateBusinessCenter()
            : base(Tags.ProvisionCashSettlValueDateBusinessCenter) { }
        public ProvisionCashSettlValueDateBusinessCenter(string val)
            : base(Tags.ProvisionCashSettlValueDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueDateRelativeTo Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateRelativeTo : IntField
    {
        public const int TAG = 40118;

        public ProvisionCashSettlValueDateRelativeTo()
            : base(Tags.ProvisionCashSettlValueDateRelativeTo) { }
        public ProvisionCashSettlValueDateRelativeTo(int val)
            : base(Tags.ProvisionCashSettlValueDateRelativeTo, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateOffsetPeriod : IntField
    {
        public const int TAG = 40119;

        public ProvisionCashSettlValueDateOffsetPeriod()
            : base(Tags.ProvisionCashSettlValueDateOffsetPeriod) { }
        public ProvisionCashSettlValueDateOffsetPeriod(int val)
            : base(Tags.ProvisionCashSettlValueDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlValueDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateOffsetUnit : StringField
    {
        public const int TAG = 40120;

        public ProvisionCashSettlValueDateOffsetUnit()
            : base(Tags.ProvisionCashSettlValueDateOffsetUnit) { }
        public ProvisionCashSettlValueDateOffsetUnit(string val)
            : base(Tags.ProvisionCashSettlValueDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionCashSettlValueDateOffsetDayType Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateOffsetDayType : IntField
    {
        public const int TAG = 40121;

        public ProvisionCashSettlValueDateOffsetDayType()
            : base(Tags.ProvisionCashSettlValueDateOffsetDayType) { }
        public ProvisionCashSettlValueDateOffsetDayType(int val)
            : base(Tags.ProvisionCashSettlValueDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProvisionCashSettlValueDateAdjusted Field
    /// </summary>/
    public sealed class ProvisionCashSettlValueDateAdjusted : StringField
    {
        public const int TAG = 40122;

        public ProvisionCashSettlValueDateAdjusted()
            : base(Tags.ProvisionCashSettlValueDateAdjusted) { }
        public ProvisionCashSettlValueDateAdjusted(string val)
            : base(Tags.ProvisionCashSettlValueDateAdjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 40123;

        public ProvisionOptionExerciseBusinessDayConvention()
            : base(Tags.ProvisionOptionExerciseBusinessDayConvention) { }
        public ProvisionOptionExerciseBusinessDayConvention(int val)
            : base(Tags.ProvisionOptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionOptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 40124;

        public ProvisionOptionExerciseBusinessCenter()
            : base(Tags.ProvisionOptionExerciseBusinessCenter) { }
        public ProvisionOptionExerciseBusinessCenter(string val)
            : base(Tags.ProvisionOptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 40125;

        public ProvisionOptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.ProvisionOptionExerciseEarliestDateOffsetPeriod) { }
        public ProvisionOptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.ProvisionOptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 40126;

        public ProvisionOptionExerciseEarliestDateOffsetUnit()
            : base(Tags.ProvisionOptionExerciseEarliestDateOffsetUnit) { }
        public ProvisionOptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.ProvisionOptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionOptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 40127;

        public ProvisionOptionExerciseFrequencyPeriod()
            : base(Tags.ProvisionOptionExerciseFrequencyPeriod) { }
        public ProvisionOptionExerciseFrequencyPeriod(int val)
            : base(Tags.ProvisionOptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 40128;

        public ProvisionOptionExerciseFrequencyUnit()
            : base(Tags.ProvisionOptionExerciseFrequencyUnit) { }
        public ProvisionOptionExerciseFrequencyUnit(string val)
            : base(Tags.ProvisionOptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 40129;

        public ProvisionOptionExerciseStartDateUnadjusted()
            : base(Tags.ProvisionOptionExerciseStartDateUnadjusted) { }
        public ProvisionOptionExerciseStartDateUnadjusted(string val)
            : base(Tags.ProvisionOptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 40130;

        public ProvisionOptionExerciseStartDateRelativeTo()
            : base(Tags.ProvisionOptionExerciseStartDateRelativeTo) { }
        public ProvisionOptionExerciseStartDateRelativeTo(int val)
            : base(Tags.ProvisionOptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 40131;

        public ProvisionOptionExerciseStartDateOffsetPeriod()
            : base(Tags.ProvisionOptionExerciseStartDateOffsetPeriod) { }
        public ProvisionOptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.ProvisionOptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 40132;

        public ProvisionOptionExerciseStartDateOffsetUnit()
            : base(Tags.ProvisionOptionExerciseStartDateOffsetUnit) { }
        public ProvisionOptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.ProvisionOptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 40133;

        public ProvisionOptionExerciseStartDateOffsetDayType()
            : base(Tags.ProvisionOptionExerciseStartDateOffsetDayType) { }
        public ProvisionOptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.ProvisionOptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProvisionOptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 40134;

        public ProvisionOptionExerciseStartDateAdjusted()
            : base(Tags.ProvisionOptionExerciseStartDateAdjusted) { }
        public ProvisionOptionExerciseStartDateAdjusted(string val)
            : base(Tags.ProvisionOptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExercisePeriodSkip Field
    /// </summary>/
    public sealed class ProvisionOptionExercisePeriodSkip : IntField
    {
        public const int TAG = 40135;

        public ProvisionOptionExercisePeriodSkip()
            : base(Tags.ProvisionOptionExercisePeriodSkip) { }
        public ProvisionOptionExercisePeriodSkip(int val)
            : base(Tags.ProvisionOptionExercisePeriodSkip, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 40136;

        public ProvisionOptionExerciseBoundsFirstDateUnadjusted()
            : base(Tags.ProvisionOptionExerciseBoundsFirstDateUnadjusted) { }
        public ProvisionOptionExerciseBoundsFirstDateUnadjusted(string val)
            : base(Tags.ProvisionOptionExerciseBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 40137;

        public ProvisionOptionExerciseBoundsLastDateUnadjusted()
            : base(Tags.ProvisionOptionExerciseBoundsLastDateUnadjusted) { }
        public ProvisionOptionExerciseBoundsLastDateUnadjusted(string val)
            : base(Tags.ProvisionOptionExerciseBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseEarliestTime : StringField
    {
        public const int TAG = 40138;

        public ProvisionOptionExerciseEarliestTime()
            : base(Tags.ProvisionOptionExerciseEarliestTime) { }
        public ProvisionOptionExerciseEarliestTime(string val)
            : base(Tags.ProvisionOptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseEarliestTimeBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseEarliestTimeBusinessCenter : StringField
    {
        public const int TAG = 40139;

        public ProvisionOptionExerciseEarliestTimeBusinessCenter()
            : base(Tags.ProvisionOptionExerciseEarliestTimeBusinessCenter) { }
        public ProvisionOptionExerciseEarliestTimeBusinessCenter(string val)
            : base(Tags.ProvisionOptionExerciseEarliestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseLatestTime Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseLatestTime : StringField
    {
        public const int TAG = 40140;

        public ProvisionOptionExerciseLatestTime()
            : base(Tags.ProvisionOptionExerciseLatestTime) { }
        public ProvisionOptionExerciseLatestTime(string val)
            : base(Tags.ProvisionOptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseLatestTimeBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseLatestTimeBusinessCenter : StringField
    {
        public const int TAG = 40141;

        public ProvisionOptionExerciseLatestTimeBusinessCenter()
            : base(Tags.ProvisionOptionExerciseLatestTimeBusinessCenter) { }
        public ProvisionOptionExerciseLatestTimeBusinessCenter(string val)
            : base(Tags.ProvisionOptionExerciseLatestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoProvisionOptionExerciseFixedDates Field
    /// </summary>/
    public sealed class NoProvisionOptionExerciseFixedDates : IntField
    {
        public const int TAG = 40142;

        public NoProvisionOptionExerciseFixedDates()
            : base(Tags.NoProvisionOptionExerciseFixedDates) { }
        public NoProvisionOptionExerciseFixedDates(int val)
            : base(Tags.NoProvisionOptionExerciseFixedDates, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseFixedDate Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseFixedDate : StringField
    {
        public const int TAG = 40143;

        public ProvisionOptionExerciseFixedDate()
            : base(Tags.ProvisionOptionExerciseFixedDate) { }
        public ProvisionOptionExerciseFixedDate(string val)
            : base(Tags.ProvisionOptionExerciseFixedDate, val) { }

    }


    /// <summary>
    /// ProvisionOptionExerciseFixedDateType Field
    /// </summary>/
    public sealed class ProvisionOptionExerciseFixedDateType : IntField
    {
        public const int TAG = 40144;

        public ProvisionOptionExerciseFixedDateType()
            : base(Tags.ProvisionOptionExerciseFixedDateType) { }
        public ProvisionOptionExerciseFixedDateType(int val)
            : base(Tags.ProvisionOptionExerciseFixedDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// ProvisionOptionExpirationDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateUnadjusted : StringField
    {
        public const int TAG = 40145;

        public ProvisionOptionExpirationDateUnadjusted()
            : base(Tags.ProvisionOptionExpirationDateUnadjusted) { }
        public ProvisionOptionExpirationDateUnadjusted(string val)
            : base(Tags.ProvisionOptionExpirationDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 40146;

        public ProvisionOptionExpirationDateBusinessDayConvention()
            : base(Tags.ProvisionOptionExpirationDateBusinessDayConvention) { }
        public ProvisionOptionExpirationDateBusinessDayConvention(int val)
            : base(Tags.ProvisionOptionExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionOptionExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 40147;

        public ProvisionOptionExpirationDateBusinessCenter()
            : base(Tags.ProvisionOptionExpirationDateBusinessCenter) { }
        public ProvisionOptionExpirationDateBusinessCenter(string val)
            : base(Tags.ProvisionOptionExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateRelativeTo : IntField
    {
        public const int TAG = 40148;

        public ProvisionOptionExpirationDateRelativeTo()
            : base(Tags.ProvisionOptionExpirationDateRelativeTo) { }
        public ProvisionOptionExpirationDateRelativeTo(int val)
            : base(Tags.ProvisionOptionExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 40149;

        public ProvisionOptionExpirationDateOffsetPeriod()
            : base(Tags.ProvisionOptionExpirationDateOffsetPeriod) { }
        public ProvisionOptionExpirationDateOffsetPeriod(int val)
            : base(Tags.ProvisionOptionExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 40150;

        public ProvisionOptionExpirationDateOffsetUnit()
            : base(Tags.ProvisionOptionExpirationDateOffsetUnit) { }
        public ProvisionOptionExpirationDateOffsetUnit(string val)
            : base(Tags.ProvisionOptionExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionOptionExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 40151;

        public ProvisionOptionExpirationDateOffsetDayType()
            : base(Tags.ProvisionOptionExpirationDateOffsetDayType) { }
        public ProvisionOptionExpirationDateOffsetDayType(int val)
            : base(Tags.ProvisionOptionExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProvisionOptionExpirationDateAdjusted Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationDateAdjusted : StringField
    {
        public const int TAG = 40152;

        public ProvisionOptionExpirationDateAdjusted()
            : base(Tags.ProvisionOptionExpirationDateAdjusted) { }
        public ProvisionOptionExpirationDateAdjusted(string val)
            : base(Tags.ProvisionOptionExpirationDateAdjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationTime Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationTime : StringField
    {
        public const int TAG = 40153;

        public ProvisionOptionExpirationTime()
            : base(Tags.ProvisionOptionExpirationTime) { }
        public ProvisionOptionExpirationTime(string val)
            : base(Tags.ProvisionOptionExpirationTime, val) { }

    }


    /// <summary>
    /// ProvisionOptionExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 40154;

        public ProvisionOptionExpirationTimeBusinessCenter()
            : base(Tags.ProvisionOptionExpirationTimeBusinessCenter) { }
        public ProvisionOptionExpirationTimeBusinessCenter(string val)
            : base(Tags.ProvisionOptionExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateUnadjusted Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateUnadjusted : StringField
    {
        public const int TAG = 40155;

        public ProvisionOptionRelevantUnderlyingDateUnadjusted()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateUnadjusted) { }
        public ProvisionOptionRelevantUnderlyingDateUnadjusted(string val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateUnadjusted, val) { }

    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40156;

        public ProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention) { }
        public ProvisionOptionRelevantUnderlyingDateBusinessDayConvention(int val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateBusinessCenter : StringField
    {
        public const int TAG = 40157;

        public ProvisionOptionRelevantUnderlyingDateBusinessCenter()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateBusinessCenter) { }
        public ProvisionOptionRelevantUnderlyingDateBusinessCenter(string val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateRelativeTo Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateRelativeTo : IntField
    {
        public const int TAG = 40158;

        public ProvisionOptionRelevantUnderlyingDateRelativeTo()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateRelativeTo) { }
        public ProvisionOptionRelevantUnderlyingDateRelativeTo(int val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateRelativeTo, val) { }

    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateOffsetPeriod : IntField
    {
        public const int TAG = 40159;

        public ProvisionOptionRelevantUnderlyingDateOffsetPeriod()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetPeriod) { }
        public ProvisionOptionRelevantUnderlyingDateOffsetPeriod(int val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateOffsetUnit : StringField
    {
        public const int TAG = 40160;

        public ProvisionOptionRelevantUnderlyingDateOffsetUnit()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetUnit) { }
        public ProvisionOptionRelevantUnderlyingDateOffsetUnit(string val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateOffsetDayType Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateOffsetDayType : IntField
    {
        public const int TAG = 40161;

        public ProvisionOptionRelevantUnderlyingDateOffsetDayType()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetDayType) { }
        public ProvisionOptionRelevantUnderlyingDateOffsetDayType(int val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProvisionOptionRelevantUnderlyingDateAdjusted Field
    /// </summary>/
    public sealed class ProvisionOptionRelevantUnderlyingDateAdjusted : StringField
    {
        public const int TAG = 40162;

        public ProvisionOptionRelevantUnderlyingDateAdjusted()
            : base(Tags.ProvisionOptionRelevantUnderlyingDateAdjusted) { }
        public ProvisionOptionRelevantUnderlyingDateAdjusted(string val)
            : base(Tags.ProvisionOptionRelevantUnderlyingDateAdjusted, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 40163;

        public ProvisionCashSettlPaymentDateBusinessDayConvention()
            : base(Tags.ProvisionCashSettlPaymentDateBusinessDayConvention) { }
        public ProvisionCashSettlPaymentDateBusinessDayConvention(int val)
            : base(Tags.ProvisionCashSettlPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 40164;

        public ProvisionCashSettlPaymentDateBusinessCenter()
            : base(Tags.ProvisionCashSettlPaymentDateBusinessCenter) { }
        public ProvisionCashSettlPaymentDateBusinessCenter(string val)
            : base(Tags.ProvisionCashSettlPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateRelativeTo : IntField
    {
        public const int TAG = 40165;

        public ProvisionCashSettlPaymentDateRelativeTo()
            : base(Tags.ProvisionCashSettlPaymentDateRelativeTo) { }
        public ProvisionCashSettlPaymentDateRelativeTo(int val)
            : base(Tags.ProvisionCashSettlPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 40166;

        public ProvisionCashSettlPaymentDateOffsetPeriod()
            : base(Tags.ProvisionCashSettlPaymentDateOffsetPeriod) { }
        public ProvisionCashSettlPaymentDateOffsetPeriod(int val)
            : base(Tags.ProvisionCashSettlPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 40167;

        public ProvisionCashSettlPaymentDateOffsetUnit()
            : base(Tags.ProvisionCashSettlPaymentDateOffsetUnit) { }
        public ProvisionCashSettlPaymentDateOffsetUnit(string val)
            : base(Tags.ProvisionCashSettlPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 40168;

        public ProvisionCashSettlPaymentDateOffsetDayType()
            : base(Tags.ProvisionCashSettlPaymentDateOffsetDayType) { }
        public ProvisionCashSettlPaymentDateOffsetDayType(int val)
            : base(Tags.ProvisionCashSettlPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateRangeFirst Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateRangeFirst : StringField
    {
        public const int TAG = 40169;

        public ProvisionCashSettlPaymentDateRangeFirst()
            : base(Tags.ProvisionCashSettlPaymentDateRangeFirst) { }
        public ProvisionCashSettlPaymentDateRangeFirst(string val)
            : base(Tags.ProvisionCashSettlPaymentDateRangeFirst, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateRangeLast Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateRangeLast : StringField
    {
        public const int TAG = 40170;

        public ProvisionCashSettlPaymentDateRangeLast()
            : base(Tags.ProvisionCashSettlPaymentDateRangeLast) { }
        public ProvisionCashSettlPaymentDateRangeLast(string val)
            : base(Tags.ProvisionCashSettlPaymentDateRangeLast, val) { }

    }


    /// <summary>
    /// NoProvisionCashSettlPaymentDates Field
    /// </summary>/
    public sealed class NoProvisionCashSettlPaymentDates : IntField
    {
        public const int TAG = 40171;

        public NoProvisionCashSettlPaymentDates()
            : base(Tags.NoProvisionCashSettlPaymentDates) { }
        public NoProvisionCashSettlPaymentDates(int val)
            : base(Tags.NoProvisionCashSettlPaymentDates, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDate Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDate : StringField
    {
        public const int TAG = 40172;

        public ProvisionCashSettlPaymentDate()
            : base(Tags.ProvisionCashSettlPaymentDate) { }
        public ProvisionCashSettlPaymentDate(string val)
            : base(Tags.ProvisionCashSettlPaymentDate, val) { }

    }


    /// <summary>
    /// ProvisionCashSettlPaymentDateType Field
    /// </summary>/
    public sealed class ProvisionCashSettlPaymentDateType : IntField
    {
        public const int TAG = 40173;

        public ProvisionCashSettlPaymentDateType()
            : base(Tags.ProvisionCashSettlPaymentDateType) { }
        public ProvisionCashSettlPaymentDateType(int val)
            : base(Tags.ProvisionCashSettlPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoProvisionPartyIDs Field
    /// </summary>/
    public sealed class NoProvisionPartyIDs : IntField
    {
        public const int TAG = 40174;

        public NoProvisionPartyIDs()
            : base(Tags.NoProvisionPartyIDs) { }
        public NoProvisionPartyIDs(int val)
            : base(Tags.NoProvisionPartyIDs, val) { }

    }


    /// <summary>
    /// ProvisionPartyID Field
    /// </summary>/
    public sealed class ProvisionPartyID : StringField
    {
        public const int TAG = 40175;

        public ProvisionPartyID()
            : base(Tags.ProvisionPartyID) { }
        public ProvisionPartyID(string val)
            : base(Tags.ProvisionPartyID, val) { }

    }


    /// <summary>
    /// ProvisionPartyIDSource Field
    /// </summary>/
    public sealed class ProvisionPartyIDSource : CharField
    {
        public const int TAG = 40176;

        public ProvisionPartyIDSource()
            : base(Tags.ProvisionPartyIDSource) { }
        public ProvisionPartyIDSource(char val)
            : base(Tags.ProvisionPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// ProvisionPartyRole Field
    /// </summary>/
    public sealed class ProvisionPartyRole : IntField
    {
        public const int TAG = 40177;

        public ProvisionPartyRole()
            : base(Tags.ProvisionPartyRole) { }
        public ProvisionPartyRole(int val)
            : base(Tags.ProvisionPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoProvisionPartySubIDs Field
    /// </summary>/
    public sealed class NoProvisionPartySubIDs : IntField
    {
        public const int TAG = 40178;

        public NoProvisionPartySubIDs()
            : base(Tags.NoProvisionPartySubIDs) { }
        public NoProvisionPartySubIDs(int val)
            : base(Tags.NoProvisionPartySubIDs, val) { }

    }


    /// <summary>
    /// ProvisionPartySubID Field
    /// </summary>/
    public sealed class ProvisionPartySubID : StringField
    {
        public const int TAG = 40179;

        public ProvisionPartySubID()
            : base(Tags.ProvisionPartySubID) { }
        public ProvisionPartySubID(string val)
            : base(Tags.ProvisionPartySubID, val) { }

    }


    /// <summary>
    /// ProvisionPartySubIDType Field
    /// </summary>/
    public sealed class ProvisionPartySubIDType : IntField
    {
        public const int TAG = 40180;

        public ProvisionPartySubIDType()
            : base(Tags.ProvisionPartySubIDType) { }
        public ProvisionPartySubIDType(int val)
            : base(Tags.ProvisionPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoProtectionTerms Field
    /// </summary>/
    public sealed class NoProtectionTerms : IntField
    {
        public const int TAG = 40181;

        public NoProtectionTerms()
            : base(Tags.NoProtectionTerms) { }
        public NoProtectionTerms(int val)
            : base(Tags.NoProtectionTerms, val) { }

    }


    /// <summary>
    /// ProtectionTermNotional Field
    /// </summary>/
    public sealed class ProtectionTermNotional : DecimalField
    {
        public const int TAG = 40182;

        public ProtectionTermNotional()
            : base(Tags.ProtectionTermNotional) { }
        public ProtectionTermNotional(Decimal val)
            : base(Tags.ProtectionTermNotional, val) { }

    }


    /// <summary>
    /// ProtectionTermCurrency Field
    /// </summary>/
    public sealed class ProtectionTermCurrency : StringField
    {
        public const int TAG = 40183;

        public ProtectionTermCurrency()
            : base(Tags.ProtectionTermCurrency) { }
        public ProtectionTermCurrency(string val)
            : base(Tags.ProtectionTermCurrency, val) { }

    }


    /// <summary>
    /// ProtectionTermSellerNotifies Field
    /// </summary>/
    public sealed class ProtectionTermSellerNotifies : BooleanField
    {
        public const int TAG = 40184;

        public ProtectionTermSellerNotifies()
            : base(Tags.ProtectionTermSellerNotifies) { }
        public ProtectionTermSellerNotifies(Boolean val)
            : base(Tags.ProtectionTermSellerNotifies, val) { }

    }


    /// <summary>
    /// ProtectionTermBuyerNotifies Field
    /// </summary>/
    public sealed class ProtectionTermBuyerNotifies : BooleanField
    {
        public const int TAG = 40185;

        public ProtectionTermBuyerNotifies()
            : base(Tags.ProtectionTermBuyerNotifies) { }
        public ProtectionTermBuyerNotifies(Boolean val)
            : base(Tags.ProtectionTermBuyerNotifies, val) { }

    }


    /// <summary>
    /// ProtectionTermEventBusinessCenter Field
    /// </summary>/
    public sealed class ProtectionTermEventBusinessCenter : StringField
    {
        public const int TAG = 40186;

        public ProtectionTermEventBusinessCenter()
            : base(Tags.ProtectionTermEventBusinessCenter) { }
        public ProtectionTermEventBusinessCenter(string val)
            : base(Tags.ProtectionTermEventBusinessCenter, val) { }

    }


    /// <summary>
    /// ProtectionTermStandardSources Field
    /// </summary>/
    public sealed class ProtectionTermStandardSources : BooleanField
    {
        public const int TAG = 40187;

        public ProtectionTermStandardSources()
            : base(Tags.ProtectionTermStandardSources) { }
        public ProtectionTermStandardSources(Boolean val)
            : base(Tags.ProtectionTermStandardSources, val) { }

    }


    /// <summary>
    /// ProtectionTermEventMinimumSources Field
    /// </summary>/
    public sealed class ProtectionTermEventMinimumSources : IntField
    {
        public const int TAG = 40188;

        public ProtectionTermEventMinimumSources()
            : base(Tags.ProtectionTermEventMinimumSources) { }
        public ProtectionTermEventMinimumSources(int val)
            : base(Tags.ProtectionTermEventMinimumSources, val) { }

    }


    /// <summary>
    /// ProtectionTermEventNewsSource Field
    /// </summary>/
    public sealed class ProtectionTermEventNewsSource : StringField
    {
        public const int TAG = 40189;

        public ProtectionTermEventNewsSource()
            : base(Tags.ProtectionTermEventNewsSource) { }
        public ProtectionTermEventNewsSource(string val)
            : base(Tags.ProtectionTermEventNewsSource, val) { }

    }


    /// <summary>
    /// ProtectionTermXID Field
    /// </summary>/
    public sealed class ProtectionTermXID : StringField
    {
        public const int TAG = 40190;

        public ProtectionTermXID()
            : base(Tags.ProtectionTermXID) { }
        public ProtectionTermXID(string val)
            : base(Tags.ProtectionTermXID, val) { }

    }


    /// <summary>
    /// NoProtectionTermEvents Field
    /// </summary>/
    public sealed class NoProtectionTermEvents : IntField
    {
        public const int TAG = 40191;

        public NoProtectionTermEvents()
            : base(Tags.NoProtectionTermEvents) { }
        public NoProtectionTermEvents(int val)
            : base(Tags.NoProtectionTermEvents, val) { }

    }


    /// <summary>
    /// ProtectionTermEventType Field
    /// </summary>/
    public sealed class ProtectionTermEventType : StringField
    {
        public const int TAG = 40192;

        public ProtectionTermEventType()
            : base(Tags.ProtectionTermEventType) { }
        public ProtectionTermEventType(string val)
            : base(Tags.ProtectionTermEventType, val) { }

    }


    /// <summary>
    /// ProtectionTermEventValue Field
    /// </summary>/
    public sealed class ProtectionTermEventValue : StringField
    {
        public const int TAG = 40193;

        public ProtectionTermEventValue()
            : base(Tags.ProtectionTermEventValue) { }
        public ProtectionTermEventValue(string val)
            : base(Tags.ProtectionTermEventValue, val) { }

    }


    /// <summary>
    /// ProtectionTermEventCurrency Field
    /// </summary>/
    public sealed class ProtectionTermEventCurrency : StringField
    {
        public const int TAG = 40194;

        public ProtectionTermEventCurrency()
            : base(Tags.ProtectionTermEventCurrency) { }
        public ProtectionTermEventCurrency(string val)
            : base(Tags.ProtectionTermEventCurrency, val) { }

    }


    /// <summary>
    /// ProtectionTermEventPeriod Field
    /// </summary>/
    public sealed class ProtectionTermEventPeriod : IntField
    {
        public const int TAG = 40195;

        public ProtectionTermEventPeriod()
            : base(Tags.ProtectionTermEventPeriod) { }
        public ProtectionTermEventPeriod(int val)
            : base(Tags.ProtectionTermEventPeriod, val) { }

    }


    /// <summary>
    /// ProtectionTermEventUnit Field
    /// </summary>/
    public sealed class ProtectionTermEventUnit : StringField
    {
        public const int TAG = 40196;

        public ProtectionTermEventUnit()
            : base(Tags.ProtectionTermEventUnit) { }
        public ProtectionTermEventUnit(string val)
            : base(Tags.ProtectionTermEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ProtectionTermEventDayType Field
    /// </summary>/
    public sealed class ProtectionTermEventDayType : IntField
    {
        public const int TAG = 40197;

        public ProtectionTermEventDayType()
            : base(Tags.ProtectionTermEventDayType) { }
        public ProtectionTermEventDayType(int val)
            : base(Tags.ProtectionTermEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ProtectionTermEventRateSource Field
    /// </summary>/
    public sealed class ProtectionTermEventRateSource : StringField
    {
        public const int TAG = 40198;

        public ProtectionTermEventRateSource()
            : base(Tags.ProtectionTermEventRateSource) { }
        public ProtectionTermEventRateSource(string val)
            : base(Tags.ProtectionTermEventRateSource, val) { }

    }


    /// <summary>
    /// NoProtectionTermEventQualifiers Field
    /// </summary>/
    public sealed class NoProtectionTermEventQualifiers : IntField
    {
        public const int TAG = 40199;

        public NoProtectionTermEventQualifiers()
            : base(Tags.NoProtectionTermEventQualifiers) { }
        public NoProtectionTermEventQualifiers(int val)
            : base(Tags.NoProtectionTermEventQualifiers, val) { }

    }


    /// <summary>
    /// ProtectionTermEventQualifier Field
    /// </summary>/
    public sealed class ProtectionTermEventQualifier : CharField
    {
        public const int TAG = 40200;

        public ProtectionTermEventQualifier()
            : base(Tags.ProtectionTermEventQualifier) { }
        public ProtectionTermEventQualifier(char val)
            : base(Tags.ProtectionTermEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoProtectionTermObligations Field
    /// </summary>/
    public sealed class NoProtectionTermObligations : IntField
    {
        public const int TAG = 40201;

        public NoProtectionTermObligations()
            : base(Tags.NoProtectionTermObligations) { }
        public NoProtectionTermObligations(int val)
            : base(Tags.NoProtectionTermObligations, val) { }

    }


    /// <summary>
    /// ProtectionTermObligationType Field
    /// </summary>/
    public sealed class ProtectionTermObligationType : StringField
    {
        public const int TAG = 40202;

        public ProtectionTermObligationType()
            : base(Tags.ProtectionTermObligationType) { }
        public ProtectionTermObligationType(string val)
            : base(Tags.ProtectionTermObligationType, val) { }

    }


    /// <summary>
    /// ProtectionTermObligationValue Field
    /// </summary>/
    public sealed class ProtectionTermObligationValue : StringField
    {
        public const int TAG = 40203;

        public ProtectionTermObligationValue()
            : base(Tags.ProtectionTermObligationValue) { }
        public ProtectionTermObligationValue(string val)
            : base(Tags.ProtectionTermObligationValue, val) { }

    }


    /// <summary>
    /// NoPhysicalSettlTerms Field
    /// </summary>/
    public sealed class NoPhysicalSettlTerms : IntField
    {
        public const int TAG = 40204;

        public NoPhysicalSettlTerms()
            : base(Tags.NoPhysicalSettlTerms) { }
        public NoPhysicalSettlTerms(int val)
            : base(Tags.NoPhysicalSettlTerms, val) { }

    }


    /// <summary>
    /// PhysicalSettlCurrency Field
    /// </summary>/
    public sealed class PhysicalSettlCurrency : StringField
    {
        public const int TAG = 40205;

        public PhysicalSettlCurrency()
            : base(Tags.PhysicalSettlCurrency) { }
        public PhysicalSettlCurrency(string val)
            : base(Tags.PhysicalSettlCurrency, val) { }

    }


    /// <summary>
    /// PhysicalSettlBusinessDays Field
    /// </summary>/
    public sealed class PhysicalSettlBusinessDays : IntField
    {
        public const int TAG = 40206;

        public PhysicalSettlBusinessDays()
            : base(Tags.PhysicalSettlBusinessDays) { }
        public PhysicalSettlBusinessDays(int val)
            : base(Tags.PhysicalSettlBusinessDays, val) { }

    }


    /// <summary>
    /// PhysicalSettlMaximumBusinessDays Field
    /// </summary>/
    public sealed class PhysicalSettlMaximumBusinessDays : IntField
    {
        public const int TAG = 40207;

        public PhysicalSettlMaximumBusinessDays()
            : base(Tags.PhysicalSettlMaximumBusinessDays) { }
        public PhysicalSettlMaximumBusinessDays(int val)
            : base(Tags.PhysicalSettlMaximumBusinessDays, val) { }

    }


    /// <summary>
    /// PhysicalSettlTermXID Field
    /// </summary>/
    public sealed class PhysicalSettlTermXID : StringField
    {
        public const int TAG = 40208;

        public PhysicalSettlTermXID()
            : base(Tags.PhysicalSettlTermXID) { }
        public PhysicalSettlTermXID(string val)
            : base(Tags.PhysicalSettlTermXID, val) { }

    }


    /// <summary>
    /// NoPhysicalSettlDeliverableObligations Field
    /// </summary>/
    public sealed class NoPhysicalSettlDeliverableObligations : IntField
    {
        public const int TAG = 40209;

        public NoPhysicalSettlDeliverableObligations()
            : base(Tags.NoPhysicalSettlDeliverableObligations) { }
        public NoPhysicalSettlDeliverableObligations(int val)
            : base(Tags.NoPhysicalSettlDeliverableObligations, val) { }

    }


    /// <summary>
    /// PhysicalSettlDeliverableObligationType Field
    /// </summary>/
    public sealed class PhysicalSettlDeliverableObligationType : StringField
    {
        public const int TAG = 40210;

        public PhysicalSettlDeliverableObligationType()
            : base(Tags.PhysicalSettlDeliverableObligationType) { }
        public PhysicalSettlDeliverableObligationType(string val)
            : base(Tags.PhysicalSettlDeliverableObligationType, val) { }

    }


    /// <summary>
    /// PhysicalSettlDeliverableObligationValue Field
    /// </summary>/
    public sealed class PhysicalSettlDeliverableObligationValue : StringField
    {
        public const int TAG = 40211;

        public PhysicalSettlDeliverableObligationValue()
            : base(Tags.PhysicalSettlDeliverableObligationValue) { }
        public PhysicalSettlDeliverableObligationValue(string val)
            : base(Tags.PhysicalSettlDeliverableObligationValue, val) { }

    }


    /// <summary>
    /// NoPayments Field
    /// </summary>/
    public sealed class NoPayments : IntField
    {
        public const int TAG = 40212;

        public NoPayments()
            : base(Tags.NoPayments) { }
        public NoPayments(int val)
            : base(Tags.NoPayments, val) { }

    }


    /// <summary>
    /// PaymentType Field
    /// </summary>/
    public sealed class PaymentType : IntField
    {
        public const int TAG = 40213;

        public PaymentType()
            : base(Tags.PaymentType) { }
        public PaymentType(int val)
            : base(Tags.PaymentType, val) { }


        // Field Enumerations
        public const int BROKERAGE = 0;
        public const int UPFRONT_FEE = 1;
        public const int INDEPENDENT_AMOUNT = 2;
        public const int PRINCIPAL_EXCHANGE = 3;
        public const int NOVATION = 4;
        public const int EARLY_TERMINATION_PROVISION = 5;
        public const int CANCELABLE_PROVISION = 6;
        public const int EXTENDIBLE_PROVISION = 7;
        public const int CAP_RATE_PROVISION = 8;
        public const int FLOOR_RATE_PROVISION = 9;
        public const int OPTION_PREMIUM = 10;
        public const int OTHER = 99;
        public const int SETTLEMENT_PAYMENT = 11;
        public const int CASH_SETTLEMENT = 12;
        public const int SECURITY_LENDING = 13;
        public const int REBATE = 14;
    }


    /// <summary>
    /// PaymentPaySide Field
    /// </summary>/
    public sealed class PaymentPaySide : IntField
    {
        public const int TAG = 40214;

        public PaymentPaySide()
            : base(Tags.PaymentPaySide) { }
        public PaymentPaySide(int val)
            : base(Tags.PaymentPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// PaymentReceiveSide Field
    /// </summary>/
    public sealed class PaymentReceiveSide : IntField
    {
        public const int TAG = 40215;

        public PaymentReceiveSide()
            : base(Tags.PaymentReceiveSide) { }
        public PaymentReceiveSide(int val)
            : base(Tags.PaymentReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// PaymentCurrency Field
    /// </summary>/
    public sealed class PaymentCurrency : StringField
    {
        public const int TAG = 40216;

        public PaymentCurrency()
            : base(Tags.PaymentCurrency) { }
        public PaymentCurrency(string val)
            : base(Tags.PaymentCurrency, val) { }

    }


    /// <summary>
    /// PaymentAmount Field
    /// </summary>/
    public sealed class PaymentAmount : DecimalField
    {
        public const int TAG = 40217;

        public PaymentAmount()
            : base(Tags.PaymentAmount) { }
        public PaymentAmount(Decimal val)
            : base(Tags.PaymentAmount, val) { }

    }


    /// <summary>
    /// PaymentPrice Field
    /// </summary>/
    public sealed class PaymentPrice : DecimalField
    {
        public const int TAG = 40218;

        public PaymentPrice()
            : base(Tags.PaymentPrice) { }
        public PaymentPrice(Decimal val)
            : base(Tags.PaymentPrice, val) { }

    }


    /// <summary>
    /// PaymentDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentDateUnadjusted : StringField
    {
        public const int TAG = 40219;

        public PaymentDateUnadjusted()
            : base(Tags.PaymentDateUnadjusted) { }
        public PaymentDateUnadjusted(string val)
            : base(Tags.PaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentBusinessDayConvention : IntField
    {
        public const int TAG = 40220;

        public PaymentBusinessDayConvention()
            : base(Tags.PaymentBusinessDayConvention) { }
        public PaymentBusinessDayConvention(int val)
            : base(Tags.PaymentBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentBusinessCenter Field
    /// </summary>/
    public sealed class PaymentBusinessCenter : StringField
    {
        public const int TAG = 40221;

        public PaymentBusinessCenter()
            : base(Tags.PaymentBusinessCenter) { }
        public PaymentBusinessCenter(string val)
            : base(Tags.PaymentBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentDateAdjusted Field
    /// </summary>/
    public sealed class PaymentDateAdjusted : StringField
    {
        public const int TAG = 40222;

        public PaymentDateAdjusted()
            : base(Tags.PaymentDateAdjusted) { }
        public PaymentDateAdjusted(string val)
            : base(Tags.PaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionValue Field
    /// </summary>/
    public sealed class LegMarketDisruptionValue : StringField
    {
        public const int TAG = 40223;

        public LegMarketDisruptionValue()
            : base(Tags.LegMarketDisruptionValue) { }
        public LegMarketDisruptionValue(string val)
            : base(Tags.LegMarketDisruptionValue, val) { }

    }


    /// <summary>
    /// PaymentDiscountFactor Field
    /// </summary>/
    public sealed class PaymentDiscountFactor : DecimalField
    {
        public const int TAG = 40224;

        public PaymentDiscountFactor()
            : base(Tags.PaymentDiscountFactor) { }
        public PaymentDiscountFactor(Decimal val)
            : base(Tags.PaymentDiscountFactor, val) { }

    }


    /// <summary>
    /// PaymentPresentValueAmount Field
    /// </summary>/
    public sealed class PaymentPresentValueAmount : DecimalField
    {
        public const int TAG = 40225;

        public PaymentPresentValueAmount()
            : base(Tags.PaymentPresentValueAmount) { }
        public PaymentPresentValueAmount(Decimal val)
            : base(Tags.PaymentPresentValueAmount, val) { }

    }


    /// <summary>
    /// PaymentPresentValueCurrency Field
    /// </summary>/
    public sealed class PaymentPresentValueCurrency : StringField
    {
        public const int TAG = 40226;

        public PaymentPresentValueCurrency()
            : base(Tags.PaymentPresentValueCurrency) { }
        public PaymentPresentValueCurrency(string val)
            : base(Tags.PaymentPresentValueCurrency, val) { }

    }


    /// <summary>
    /// PaymentSettlStyle Field
    /// </summary>/
    public sealed class PaymentSettlStyle : IntField
    {
        public const int TAG = 40227;

        public PaymentSettlStyle()
            : base(Tags.PaymentSettlStyle) { }
        public PaymentSettlStyle(int val)
            : base(Tags.PaymentSettlStyle, val) { }


        // Field Enumerations
        public const int STANDARD = 0;
        public const int NET = 1;
        public const int STANDARD_AND_NET = 2;
    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableSettlReferencePage Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableSettlReferencePage : StringField
    {
        public const int TAG = 40228;

        public LegPaymentStreamNonDeliverableSettlReferencePage()
            : base(Tags.LegPaymentStreamNonDeliverableSettlReferencePage) { }
        public LegPaymentStreamNonDeliverableSettlReferencePage(string val)
            : base(Tags.LegPaymentStreamNonDeliverableSettlReferencePage, val) { }

    }


    /// <summary>
    /// PaymentText Field
    /// </summary>/
    public sealed class PaymentText : StringField
    {
        public const int TAG = 40229;

        public PaymentText()
            : base(Tags.PaymentText) { }
        public PaymentText(string val)
            : base(Tags.PaymentText, val) { }

    }


    /// <summary>
    /// NoPaymentSettls Field
    /// </summary>/
    public sealed class NoPaymentSettls : IntField
    {
        public const int TAG = 40230;

        public NoPaymentSettls()
            : base(Tags.NoPaymentSettls) { }
        public NoPaymentSettls(int val)
            : base(Tags.NoPaymentSettls, val) { }

    }


    /// <summary>
    /// PaymentSettlAmount Field
    /// </summary>/
    public sealed class PaymentSettlAmount : DecimalField
    {
        public const int TAG = 40231;

        public PaymentSettlAmount()
            : base(Tags.PaymentSettlAmount) { }
        public PaymentSettlAmount(Decimal val)
            : base(Tags.PaymentSettlAmount, val) { }

    }


    /// <summary>
    /// PaymentSettlCurrency Field
    /// </summary>/
    public sealed class PaymentSettlCurrency : StringField
    {
        public const int TAG = 40232;

        public PaymentSettlCurrency()
            : base(Tags.PaymentSettlCurrency) { }
        public PaymentSettlCurrency(string val)
            : base(Tags.PaymentSettlCurrency, val) { }

    }


    /// <summary>
    /// NoPaymentSettlPartyIDs Field
    /// </summary>/
    public sealed class NoPaymentSettlPartyIDs : IntField
    {
        public const int TAG = 40233;

        public NoPaymentSettlPartyIDs()
            : base(Tags.NoPaymentSettlPartyIDs) { }
        public NoPaymentSettlPartyIDs(int val)
            : base(Tags.NoPaymentSettlPartyIDs, val) { }

    }


    /// <summary>
    /// PaymentSettlPartyID Field
    /// </summary>/
    public sealed class PaymentSettlPartyID : StringField
    {
        public const int TAG = 40234;

        public PaymentSettlPartyID()
            : base(Tags.PaymentSettlPartyID) { }
        public PaymentSettlPartyID(string val)
            : base(Tags.PaymentSettlPartyID, val) { }

    }


    /// <summary>
    /// PaymentSettlPartyIDSource Field
    /// </summary>/
    public sealed class PaymentSettlPartyIDSource : CharField
    {
        public const int TAG = 40235;

        public PaymentSettlPartyIDSource()
            : base(Tags.PaymentSettlPartyIDSource) { }
        public PaymentSettlPartyIDSource(char val)
            : base(Tags.PaymentSettlPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// PaymentSettlPartyRole Field
    /// </summary>/
    public sealed class PaymentSettlPartyRole : IntField
    {
        public const int TAG = 40236;

        public PaymentSettlPartyRole()
            : base(Tags.PaymentSettlPartyRole) { }
        public PaymentSettlPartyRole(int val)
            : base(Tags.PaymentSettlPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// PaymentSettlPartyRoleQualifier Field
    /// </summary>/
    public sealed class PaymentSettlPartyRoleQualifier : IntField
    {
        public const int TAG = 40237;

        public PaymentSettlPartyRoleQualifier()
            : base(Tags.PaymentSettlPartyRoleQualifier) { }
        public PaymentSettlPartyRoleQualifier(int val)
            : base(Tags.PaymentSettlPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// NoPaymentSettlPartySubIDs Field
    /// </summary>/
    public sealed class NoPaymentSettlPartySubIDs : IntField
    {
        public const int TAG = 40238;

        public NoPaymentSettlPartySubIDs()
            : base(Tags.NoPaymentSettlPartySubIDs) { }
        public NoPaymentSettlPartySubIDs(int val)
            : base(Tags.NoPaymentSettlPartySubIDs, val) { }

    }


    /// <summary>
    /// PaymentSettlPartySubID Field
    /// </summary>/
    public sealed class PaymentSettlPartySubID : StringField
    {
        public const int TAG = 40239;

        public PaymentSettlPartySubID()
            : base(Tags.PaymentSettlPartySubID) { }
        public PaymentSettlPartySubID(string val)
            : base(Tags.PaymentSettlPartySubID, val) { }

    }


    /// <summary>
    /// PaymentSettlPartySubIDType Field
    /// </summary>/
    public sealed class PaymentSettlPartySubIDType : IntField
    {
        public const int TAG = 40240;

        public PaymentSettlPartySubIDType()
            : base(Tags.PaymentSettlPartySubIDType) { }
        public PaymentSettlPartySubIDType(int val)
            : base(Tags.PaymentSettlPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoLegStreams Field
    /// </summary>/
    public sealed class NoLegStreams : IntField
    {
        public const int TAG = 40241;

        public NoLegStreams()
            : base(Tags.NoLegStreams) { }
        public NoLegStreams(int val)
            : base(Tags.NoLegStreams, val) { }

    }


    /// <summary>
    /// LegStreamType Field
    /// </summary>/
    public sealed class LegStreamType : IntField
    {
        public const int TAG = 40242;

        public LegStreamType()
            : base(Tags.LegStreamType) { }
        public LegStreamType(int val)
            : base(Tags.LegStreamType, val) { }


        // Field Enumerations
        public const int PAYMENT = 0;
        public const int PHYSICAL_DELIVERY = 1;
    }


    /// <summary>
    /// LegStreamDesc Field
    /// </summary>/
    public sealed class LegStreamDesc : StringField
    {
        public const int TAG = 40243;

        public LegStreamDesc()
            : base(Tags.LegStreamDesc) { }
        public LegStreamDesc(string val)
            : base(Tags.LegStreamDesc, val) { }

    }


    /// <summary>
    /// LegStreamPaySide Field
    /// </summary>/
    public sealed class LegStreamPaySide : IntField
    {
        public const int TAG = 40244;

        public LegStreamPaySide()
            : base(Tags.LegStreamPaySide) { }
        public LegStreamPaySide(int val)
            : base(Tags.LegStreamPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegStreamReceiveSide Field
    /// </summary>/
    public sealed class LegStreamReceiveSide : IntField
    {
        public const int TAG = 40245;

        public LegStreamReceiveSide()
            : base(Tags.LegStreamReceiveSide) { }
        public LegStreamReceiveSide(int val)
            : base(Tags.LegStreamReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegStreamNotional Field
    /// </summary>/
    public sealed class LegStreamNotional : DecimalField
    {
        public const int TAG = 40246;

        public LegStreamNotional()
            : base(Tags.LegStreamNotional) { }
        public LegStreamNotional(Decimal val)
            : base(Tags.LegStreamNotional, val) { }

    }


    /// <summary>
    /// LegStreamCurrency Field
    /// </summary>/
    public sealed class LegStreamCurrency : StringField
    {
        public const int TAG = 40247;

        public LegStreamCurrency()
            : base(Tags.LegStreamCurrency) { }
        public LegStreamCurrency(string val)
            : base(Tags.LegStreamCurrency, val) { }

    }


    /// <summary>
    /// LegStreamText Field
    /// </summary>/
    public sealed class LegStreamText : StringField
    {
        public const int TAG = 40248;

        public LegStreamText()
            : base(Tags.LegStreamText) { }
        public LegStreamText(string val)
            : base(Tags.LegStreamText, val) { }

    }


    /// <summary>
    /// LegStreamEffectiveDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateUnadjusted : StringField
    {
        public const int TAG = 40249;

        public LegStreamEffectiveDateUnadjusted()
            : base(Tags.LegStreamEffectiveDateUnadjusted) { }
        public LegStreamEffectiveDateUnadjusted(string val)
            : base(Tags.LegStreamEffectiveDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamEffectiveDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateBusinessDayConvention : IntField
    {
        public const int TAG = 40250;

        public LegStreamEffectiveDateBusinessDayConvention()
            : base(Tags.LegStreamEffectiveDateBusinessDayConvention) { }
        public LegStreamEffectiveDateBusinessDayConvention(int val)
            : base(Tags.LegStreamEffectiveDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamEffectiveDateBusinessCenter Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateBusinessCenter : StringField
    {
        public const int TAG = 40251;

        public LegStreamEffectiveDateBusinessCenter()
            : base(Tags.LegStreamEffectiveDateBusinessCenter) { }
        public LegStreamEffectiveDateBusinessCenter(string val)
            : base(Tags.LegStreamEffectiveDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamEffectiveDateRelativeTo Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateRelativeTo : IntField
    {
        public const int TAG = 40252;

        public LegStreamEffectiveDateRelativeTo()
            : base(Tags.LegStreamEffectiveDateRelativeTo) { }
        public LegStreamEffectiveDateRelativeTo(int val)
            : base(Tags.LegStreamEffectiveDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegStreamEffectiveDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateOffsetPeriod : IntField
    {
        public const int TAG = 40253;

        public LegStreamEffectiveDateOffsetPeriod()
            : base(Tags.LegStreamEffectiveDateOffsetPeriod) { }
        public LegStreamEffectiveDateOffsetPeriod(int val)
            : base(Tags.LegStreamEffectiveDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegStreamEffectiveDateOffsetUnit Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateOffsetUnit : StringField
    {
        public const int TAG = 40254;

        public LegStreamEffectiveDateOffsetUnit()
            : base(Tags.LegStreamEffectiveDateOffsetUnit) { }
        public LegStreamEffectiveDateOffsetUnit(string val)
            : base(Tags.LegStreamEffectiveDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegStreamEffectiveDateOffsetDayType Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateOffsetDayType : IntField
    {
        public const int TAG = 40255;

        public LegStreamEffectiveDateOffsetDayType()
            : base(Tags.LegStreamEffectiveDateOffsetDayType) { }
        public LegStreamEffectiveDateOffsetDayType(int val)
            : base(Tags.LegStreamEffectiveDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegStreamEffectiveDateAdjusted Field
    /// </summary>/
    public sealed class LegStreamEffectiveDateAdjusted : StringField
    {
        public const int TAG = 40256;

        public LegStreamEffectiveDateAdjusted()
            : base(Tags.LegStreamEffectiveDateAdjusted) { }
        public LegStreamEffectiveDateAdjusted(string val)
            : base(Tags.LegStreamEffectiveDateAdjusted, val) { }

    }


    /// <summary>
    /// LegStreamTerminationDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamTerminationDateUnadjusted : StringField
    {
        public const int TAG = 40257;

        public LegStreamTerminationDateUnadjusted()
            : base(Tags.LegStreamTerminationDateUnadjusted) { }
        public LegStreamTerminationDateUnadjusted(string val)
            : base(Tags.LegStreamTerminationDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamTerminationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegStreamTerminationDateBusinessDayConvention : IntField
    {
        public const int TAG = 40258;

        public LegStreamTerminationDateBusinessDayConvention()
            : base(Tags.LegStreamTerminationDateBusinessDayConvention) { }
        public LegStreamTerminationDateBusinessDayConvention(int val)
            : base(Tags.LegStreamTerminationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamTerminationDateBusinessCenter Field
    /// </summary>/
    public sealed class LegStreamTerminationDateBusinessCenter : StringField
    {
        public const int TAG = 40259;

        public LegStreamTerminationDateBusinessCenter()
            : base(Tags.LegStreamTerminationDateBusinessCenter) { }
        public LegStreamTerminationDateBusinessCenter(string val)
            : base(Tags.LegStreamTerminationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamTerminationDateRelativeTo Field
    /// </summary>/
    public sealed class LegStreamTerminationDateRelativeTo : IntField
    {
        public const int TAG = 40260;

        public LegStreamTerminationDateRelativeTo()
            : base(Tags.LegStreamTerminationDateRelativeTo) { }
        public LegStreamTerminationDateRelativeTo(int val)
            : base(Tags.LegStreamTerminationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegStreamTerminationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegStreamTerminationDateOffsetPeriod : IntField
    {
        public const int TAG = 40261;

        public LegStreamTerminationDateOffsetPeriod()
            : base(Tags.LegStreamTerminationDateOffsetPeriod) { }
        public LegStreamTerminationDateOffsetPeriod(int val)
            : base(Tags.LegStreamTerminationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegStreamTerminationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegStreamTerminationDateOffsetUnit : StringField
    {
        public const int TAG = 40262;

        public LegStreamTerminationDateOffsetUnit()
            : base(Tags.LegStreamTerminationDateOffsetUnit) { }
        public LegStreamTerminationDateOffsetUnit(string val)
            : base(Tags.LegStreamTerminationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegStreamTerminationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegStreamTerminationDateOffsetDayType : IntField
    {
        public const int TAG = 40263;

        public LegStreamTerminationDateOffsetDayType()
            : base(Tags.LegStreamTerminationDateOffsetDayType) { }
        public LegStreamTerminationDateOffsetDayType(int val)
            : base(Tags.LegStreamTerminationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegStreamTerminationDateAdjusted Field
    /// </summary>/
    public sealed class LegStreamTerminationDateAdjusted : StringField
    {
        public const int TAG = 40264;

        public LegStreamTerminationDateAdjusted()
            : base(Tags.LegStreamTerminationDateAdjusted) { }
        public LegStreamTerminationDateAdjusted(string val)
            : base(Tags.LegStreamTerminationDateAdjusted, val) { }

    }


    /// <summary>
    /// LegStreamCalculationPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 40265;

        public LegStreamCalculationPeriodBusinessDayConvention()
            : base(Tags.LegStreamCalculationPeriodBusinessDayConvention) { }
        public LegStreamCalculationPeriodBusinessDayConvention(int val)
            : base(Tags.LegStreamCalculationPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamCalculationPeriodBusinessCenter Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodBusinessCenter : StringField
    {
        public const int TAG = 40266;

        public LegStreamCalculationPeriodBusinessCenter()
            : base(Tags.LegStreamCalculationPeriodBusinessCenter) { }
        public LegStreamCalculationPeriodBusinessCenter(string val)
            : base(Tags.LegStreamCalculationPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamFirstPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamFirstPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40267;

        public LegStreamFirstPeriodStartDateUnadjusted()
            : base(Tags.LegStreamFirstPeriodStartDateUnadjusted) { }
        public LegStreamFirstPeriodStartDateUnadjusted(string val)
            : base(Tags.LegStreamFirstPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamFirstPeriodStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegStreamFirstPeriodStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 40268;

        public LegStreamFirstPeriodStartDateBusinessDayConvention()
            : base(Tags.LegStreamFirstPeriodStartDateBusinessDayConvention) { }
        public LegStreamFirstPeriodStartDateBusinessDayConvention(int val)
            : base(Tags.LegStreamFirstPeriodStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamFirstPeriodStartDateBusinessCenter Field
    /// </summary>/
    public sealed class LegStreamFirstPeriodStartDateBusinessCenter : StringField
    {
        public const int TAG = 40269;

        public LegStreamFirstPeriodStartDateBusinessCenter()
            : base(Tags.LegStreamFirstPeriodStartDateBusinessCenter) { }
        public LegStreamFirstPeriodStartDateBusinessCenter(string val)
            : base(Tags.LegStreamFirstPeriodStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamFirstPeriodStartDateAdjusted Field
    /// </summary>/
    public sealed class LegStreamFirstPeriodStartDateAdjusted : StringField
    {
        public const int TAG = 40270;

        public LegStreamFirstPeriodStartDateAdjusted()
            : base(Tags.LegStreamFirstPeriodStartDateAdjusted) { }
        public LegStreamFirstPeriodStartDateAdjusted(string val)
            : base(Tags.LegStreamFirstPeriodStartDateAdjusted, val) { }

    }


    /// <summary>
    /// LegStreamFirstRegularPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamFirstRegularPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40271;

        public LegStreamFirstRegularPeriodStartDateUnadjusted()
            : base(Tags.LegStreamFirstRegularPeriodStartDateUnadjusted) { }
        public LegStreamFirstRegularPeriodStartDateUnadjusted(string val)
            : base(Tags.LegStreamFirstRegularPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamFirstCompoundingPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamFirstCompoundingPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40272;

        public LegStreamFirstCompoundingPeriodEndDateUnadjusted()
            : base(Tags.LegStreamFirstCompoundingPeriodEndDateUnadjusted) { }
        public LegStreamFirstCompoundingPeriodEndDateUnadjusted(string val)
            : base(Tags.LegStreamFirstCompoundingPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamLastRegularPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamLastRegularPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40273;

        public LegStreamLastRegularPeriodEndDateUnadjusted()
            : base(Tags.LegStreamLastRegularPeriodEndDateUnadjusted) { }
        public LegStreamLastRegularPeriodEndDateUnadjusted(string val)
            : base(Tags.LegStreamLastRegularPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamCalculationFrequencyPeriod Field
    /// </summary>/
    public sealed class LegStreamCalculationFrequencyPeriod : IntField
    {
        public const int TAG = 40274;

        public LegStreamCalculationFrequencyPeriod()
            : base(Tags.LegStreamCalculationFrequencyPeriod) { }
        public LegStreamCalculationFrequencyPeriod(int val)
            : base(Tags.LegStreamCalculationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCalculationFrequencyUnit Field
    /// </summary>/
    public sealed class LegStreamCalculationFrequencyUnit : StringField
    {
        public const int TAG = 40275;

        public LegStreamCalculationFrequencyUnit()
            : base(Tags.LegStreamCalculationFrequencyUnit) { }
        public LegStreamCalculationFrequencyUnit(string val)
            : base(Tags.LegStreamCalculationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegStreamCalculationRollConvention Field
    /// </summary>/
    public sealed class LegStreamCalculationRollConvention : StringField
    {
        public const int TAG = 40276;

        public LegStreamCalculationRollConvention()
            : base(Tags.LegStreamCalculationRollConvention) { }
        public LegStreamCalculationRollConvention(string val)
            : base(Tags.LegStreamCalculationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoCashSettlDealers Field
    /// </summary>/
    public sealed class NoCashSettlDealers : IntField
    {
        public const int TAG = 40277;

        public NoCashSettlDealers()
            : base(Tags.NoCashSettlDealers) { }
        public NoCashSettlDealers(int val)
            : base(Tags.NoCashSettlDealers, val) { }

    }


    /// <summary>
    /// NoBusinessCenters Field
    /// </summary>/
    public sealed class NoBusinessCenters : IntField
    {
        public const int TAG = 40278;

        public NoBusinessCenters()
            : base(Tags.NoBusinessCenters) { }
        public NoBusinessCenters(int val)
            : base(Tags.NoBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPaymentStreamType Field
    /// </summary>/
    public sealed class LegPaymentStreamType : IntField
    {
        public const int TAG = 40279;

        public LegPaymentStreamType()
            : base(Tags.LegPaymentStreamType) { }
        public LegPaymentStreamType(int val)
            : base(Tags.LegPaymentStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
        public const int DIVIDEND = 3;
        public const int INTEREST = 4;
        public const int DIVIDEND_RETURN = 5;
        public const int PRICE_RETURN = 6;
        public const int TOTAL_RETURN = 7;
        public const int VARIANCE = 8;
        public const int CORRELATION = 9;
    }


    /// <summary>
    /// LegPaymentStreamMarketRate Field
    /// </summary>/
    public sealed class LegPaymentStreamMarketRate : IntField
    {
        public const int TAG = 40280;

        public LegPaymentStreamMarketRate()
            : base(Tags.LegPaymentStreamMarketRate) { }
        public LegPaymentStreamMarketRate(int val)
            : base(Tags.LegPaymentStreamMarketRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamDelayIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamDelayIndicator : BooleanField
    {
        public const int TAG = 40281;

        public LegPaymentStreamDelayIndicator()
            : base(Tags.LegPaymentStreamDelayIndicator) { }
        public LegPaymentStreamDelayIndicator(Boolean val)
            : base(Tags.LegPaymentStreamDelayIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamSettlCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamSettlCurrency : StringField
    {
        public const int TAG = 40282;

        public LegPaymentStreamSettlCurrency()
            : base(Tags.LegPaymentStreamSettlCurrency) { }
        public LegPaymentStreamSettlCurrency(string val)
            : base(Tags.LegPaymentStreamSettlCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamDayCount Field
    /// </summary>/
    public sealed class LegPaymentStreamDayCount : IntField
    {
        public const int TAG = 40283;

        public LegPaymentStreamDayCount()
            : base(Tags.LegPaymentStreamDayCount) { }
        public LegPaymentStreamDayCount(int val)
            : base(Tags.LegPaymentStreamDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStreamAccrualDays Field
    /// </summary>/
    public sealed class LegPaymentStreamAccrualDays : IntField
    {
        public const int TAG = 40284;

        public LegPaymentStreamAccrualDays()
            : base(Tags.LegPaymentStreamAccrualDays) { }
        public LegPaymentStreamAccrualDays(int val)
            : base(Tags.LegPaymentStreamAccrualDays, val) { }

    }


    /// <summary>
    /// LegPaymentStreamDiscountType Field
    /// </summary>/
    public sealed class LegPaymentStreamDiscountType : IntField
    {
        public const int TAG = 40285;

        public LegPaymentStreamDiscountType()
            : base(Tags.LegPaymentStreamDiscountType) { }
        public LegPaymentStreamDiscountType(int val)
            : base(Tags.LegPaymentStreamDiscountType, val) { }


        // Field Enumerations
        public const int STANDARD = 0;
        public const int FORWARD_RATE_AGREEMENT = 1;
    }


    /// <summary>
    /// LegPaymentStreamDiscountRate Field
    /// </summary>/
    public sealed class LegPaymentStreamDiscountRate : DecimalField
    {
        public const int TAG = 40286;

        public LegPaymentStreamDiscountRate()
            : base(Tags.LegPaymentStreamDiscountRate) { }
        public LegPaymentStreamDiscountRate(Decimal val)
            : base(Tags.LegPaymentStreamDiscountRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamDiscountRateDayCount Field
    /// </summary>/
    public sealed class LegPaymentStreamDiscountRateDayCount : IntField
    {
        public const int TAG = 40287;

        public LegPaymentStreamDiscountRateDayCount()
            : base(Tags.LegPaymentStreamDiscountRateDayCount) { }
        public LegPaymentStreamDiscountRateDayCount(int val)
            : base(Tags.LegPaymentStreamDiscountRateDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingMethod : IntField
    {
        public const int TAG = 40288;

        public LegPaymentStreamCompoundingMethod()
            : base(Tags.LegPaymentStreamCompoundingMethod) { }
        public LegPaymentStreamCompoundingMethod(int val)
            : base(Tags.LegPaymentStreamCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// LegPaymentStreamInitialPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40289;

        public LegPaymentStreamInitialPrincipalExchangeIndicator()
            : base(Tags.LegPaymentStreamInitialPrincipalExchangeIndicator) { }
        public LegPaymentStreamInitialPrincipalExchangeIndicator(Boolean val)
            : base(Tags.LegPaymentStreamInitialPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInterimPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamInterimPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40290;

        public LegPaymentStreamInterimPrincipalExchangeIndicator()
            : base(Tags.LegPaymentStreamInterimPrincipalExchangeIndicator) { }
        public LegPaymentStreamInterimPrincipalExchangeIndicator(Boolean val)
            : base(Tags.LegPaymentStreamInterimPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40291;

        public LegPaymentStreamFinalPrincipalExchangeIndicator()
            : base(Tags.LegPaymentStreamFinalPrincipalExchangeIndicator) { }
        public LegPaymentStreamFinalPrincipalExchangeIndicator(Boolean val)
            : base(Tags.LegPaymentStreamFinalPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 40292;

        public LegPaymentStreamPaymentDateBusinessDayConvention()
            : base(Tags.LegPaymentStreamPaymentDateBusinessDayConvention) { }
        public LegPaymentStreamPaymentDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 40293;

        public LegPaymentStreamPaymentDateBusinessCenter()
            : base(Tags.LegPaymentStreamPaymentDateBusinessCenter) { }
        public LegPaymentStreamPaymentDateBusinessCenter(string val)
            : base(Tags.LegPaymentStreamPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentFrequencyPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentFrequencyPeriod : IntField
    {
        public const int TAG = 40294;

        public LegPaymentStreamPaymentFrequencyPeriod()
            : base(Tags.LegPaymentStreamPaymentFrequencyPeriod) { }
        public LegPaymentStreamPaymentFrequencyPeriod(int val)
            : base(Tags.LegPaymentStreamPaymentFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentFrequencyUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentFrequencyUnit : StringField
    {
        public const int TAG = 40295;

        public LegPaymentStreamPaymentFrequencyUnit()
            : base(Tags.LegPaymentStreamPaymentFrequencyUnit) { }
        public LegPaymentStreamPaymentFrequencyUnit(string val)
            : base(Tags.LegPaymentStreamPaymentFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegPaymentStreamPaymentRollConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentRollConvention : StringField
    {
        public const int TAG = 40296;

        public LegPaymentStreamPaymentRollConvention()
            : base(Tags.LegPaymentStreamPaymentRollConvention) { }
        public LegPaymentStreamPaymentRollConvention(string val)
            : base(Tags.LegPaymentStreamPaymentRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// LegPaymentStreamFirstPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40297;

        public LegPaymentStreamFirstPaymentDateUnadjusted()
            : base(Tags.LegPaymentStreamFirstPaymentDateUnadjusted) { }
        public LegPaymentStreamFirstPaymentDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamFirstPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLastRegularPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamLastRegularPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40298;

        public LegPaymentStreamLastRegularPaymentDateUnadjusted()
            : base(Tags.LegPaymentStreamLastRegularPaymentDateUnadjusted) { }
        public LegPaymentStreamLastRegularPaymentDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamLastRegularPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateRelativeTo : IntField
    {
        public const int TAG = 40299;

        public LegPaymentStreamPaymentDateRelativeTo()
            : base(Tags.LegPaymentStreamPaymentDateRelativeTo) { }
        public LegPaymentStreamPaymentDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 40300;

        public LegPaymentStreamPaymentDateOffsetPeriod()
            : base(Tags.LegPaymentStreamPaymentDateOffsetPeriod) { }
        public LegPaymentStreamPaymentDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 40301;

        public LegPaymentStreamPaymentDateOffsetUnit()
            : base(Tags.LegPaymentStreamPaymentDateOffsetUnit) { }
        public LegPaymentStreamPaymentDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 40302;

        public LegPaymentStreamPaymentDateOffsetDayType()
            : base(Tags.LegPaymentStreamPaymentDateOffsetDayType) { }
        public LegPaymentStreamPaymentDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamResetDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamResetDateRelativeTo : IntField
    {
        public const int TAG = 40303;

        public LegPaymentStreamResetDateRelativeTo()
            : base(Tags.LegPaymentStreamResetDateRelativeTo) { }
        public LegPaymentStreamResetDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamResetDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamResetDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamResetDateBusinessDayConvention : IntField
    {
        public const int TAG = 40304;

        public LegPaymentStreamResetDateBusinessDayConvention()
            : base(Tags.LegPaymentStreamResetDateBusinessDayConvention) { }
        public LegPaymentStreamResetDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamResetDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamResetDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamResetDateBusinessCenter : StringField
    {
        public const int TAG = 40305;

        public LegPaymentStreamResetDateBusinessCenter()
            : base(Tags.LegPaymentStreamResetDateBusinessCenter) { }
        public LegPaymentStreamResetDateBusinessCenter(string val)
            : base(Tags.LegPaymentStreamResetDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamResetFrequencyPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamResetFrequencyPeriod : IntField
    {
        public const int TAG = 40306;

        public LegPaymentStreamResetFrequencyPeriod()
            : base(Tags.LegPaymentStreamResetFrequencyPeriod) { }
        public LegPaymentStreamResetFrequencyPeriod(int val)
            : base(Tags.LegPaymentStreamResetFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamResetFrequencyUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamResetFrequencyUnit : StringField
    {
        public const int TAG = 40307;

        public LegPaymentStreamResetFrequencyUnit()
            : base(Tags.LegPaymentStreamResetFrequencyUnit) { }
        public LegPaymentStreamResetFrequencyUnit(string val)
            : base(Tags.LegPaymentStreamResetFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegPaymentStreamResetWeeklyRollConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamResetWeeklyRollConvention : StringField
    {
        public const int TAG = 40308;

        public LegPaymentStreamResetWeeklyRollConvention()
            : base(Tags.LegPaymentStreamResetWeeklyRollConvention) { }
        public LegPaymentStreamResetWeeklyRollConvention(string val)
            : base(Tags.LegPaymentStreamResetWeeklyRollConvention, val) { }


        // Field Enumerations
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateRelativeTo : IntField
    {
        public const int TAG = 40309;

        public LegPaymentStreamInitialFixingDateRelativeTo()
            : base(Tags.LegPaymentStreamInitialFixingDateRelativeTo) { }
        public LegPaymentStreamInitialFixingDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamInitialFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40310;

        public LegPaymentStreamInitialFixingDateBusinessDayConvention()
            : base(Tags.LegPaymentStreamInitialFixingDateBusinessDayConvention) { }
        public LegPaymentStreamInitialFixingDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamInitialFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40311;

        public LegPaymentStreamInitialFixingDateBusinessCenter()
            : base(Tags.LegPaymentStreamInitialFixingDateBusinessCenter) { }
        public LegPaymentStreamInitialFixingDateBusinessCenter(string val)
            : base(Tags.LegPaymentStreamInitialFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40312;

        public LegPaymentStreamInitialFixingDateOffsetPeriod()
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetPeriod) { }
        public LegPaymentStreamInitialFixingDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40313;

        public LegPaymentStreamInitialFixingDateOffsetUnit()
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetUnit) { }
        public LegPaymentStreamInitialFixingDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40314;

        public LegPaymentStreamInitialFixingDateOffsetDayType()
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetDayType) { }
        public LegPaymentStreamInitialFixingDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamInitialFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamInitialFixingDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialFixingDateAdjusted : StringField
    {
        public const int TAG = 40315;

        public LegPaymentStreamInitialFixingDateAdjusted()
            : base(Tags.LegPaymentStreamInitialFixingDateAdjusted) { }
        public LegPaymentStreamInitialFixingDateAdjusted(string val)
            : base(Tags.LegPaymentStreamInitialFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateRelativeTo : IntField
    {
        public const int TAG = 40316;

        public LegPaymentStreamFixingDateRelativeTo()
            : base(Tags.LegPaymentStreamFixingDateRelativeTo) { }
        public LegPaymentStreamFixingDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40317;

        public LegPaymentStreamFixingDateBusinessDayConvention()
            : base(Tags.LegPaymentStreamFixingDateBusinessDayConvention) { }
        public LegPaymentStreamFixingDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40318;

        public LegPaymentStreamFixingDateBusinessCenter()
            : base(Tags.LegPaymentStreamFixingDateBusinessCenter) { }
        public LegPaymentStreamFixingDateBusinessCenter(string val)
            : base(Tags.LegPaymentStreamFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40319;

        public LegPaymentStreamFixingDateOffsetPeriod()
            : base(Tags.LegPaymentStreamFixingDateOffsetPeriod) { }
        public LegPaymentStreamFixingDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40320;

        public LegPaymentStreamFixingDateOffsetUnit()
            : base(Tags.LegPaymentStreamFixingDateOffsetUnit) { }
        public LegPaymentStreamFixingDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40321;

        public LegPaymentStreamFixingDateOffsetDayType()
            : base(Tags.LegPaymentStreamFixingDateOffsetDayType) { }
        public LegPaymentStreamFixingDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamFixingDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateAdjusted : StringField
    {
        public const int TAG = 40322;

        public LegPaymentStreamFixingDateAdjusted()
            : base(Tags.LegPaymentStreamFixingDateAdjusted) { }
        public LegPaymentStreamFixingDateAdjusted(string val)
            : base(Tags.LegPaymentStreamFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateCutoffDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamRateCutoffDateOffsetPeriod : IntField
    {
        public const int TAG = 40323;

        public LegPaymentStreamRateCutoffDateOffsetPeriod()
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetPeriod) { }
        public LegPaymentStreamRateCutoffDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateCutoffDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamRateCutoffDateOffsetUnit : StringField
    {
        public const int TAG = 40324;

        public LegPaymentStreamRateCutoffDateOffsetUnit()
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetUnit) { }
        public LegPaymentStreamRateCutoffDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamRateCutoffDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamRateCutoffDateOffsetDayType : IntField
    {
        public const int TAG = 40325;

        public LegPaymentStreamRateCutoffDateOffsetDayType()
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetDayType) { }
        public LegPaymentStreamRateCutoffDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamRateCutoffDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamRate Field
    /// </summary>/
    public sealed class LegPaymentStreamRate : DecimalField
    {
        public const int TAG = 40326;

        public LegPaymentStreamRate()
            : base(Tags.LegPaymentStreamRate) { }
        public LegPaymentStreamRate(Decimal val)
            : base(Tags.LegPaymentStreamRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixedAmount Field
    /// </summary>/
    public sealed class LegPaymentStreamFixedAmount : DecimalField
    {
        public const int TAG = 40327;

        public LegPaymentStreamFixedAmount()
            : base(Tags.LegPaymentStreamFixedAmount) { }
        public LegPaymentStreamFixedAmount(Decimal val)
            : base(Tags.LegPaymentStreamFixedAmount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateOrAmountCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamRateOrAmountCurrency : StringField
    {
        public const int TAG = 40328;

        public LegPaymentStreamRateOrAmountCurrency()
            : base(Tags.LegPaymentStreamRateOrAmountCurrency) { }
        public LegPaymentStreamRateOrAmountCurrency(string val)
            : base(Tags.LegPaymentStreamRateOrAmountCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFutureValueNotional Field
    /// </summary>/
    public sealed class LegPaymentStreamFutureValueNotional : DecimalField
    {
        public const int TAG = 40329;

        public LegPaymentStreamFutureValueNotional()
            : base(Tags.LegPaymentStreamFutureValueNotional) { }
        public LegPaymentStreamFutureValueNotional(Decimal val)
            : base(Tags.LegPaymentStreamFutureValueNotional, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFutureValueDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFutureValueDateAdjusted : StringField
    {
        public const int TAG = 40330;

        public LegPaymentStreamFutureValueDateAdjusted()
            : base(Tags.LegPaymentStreamFutureValueDateAdjusted) { }
        public LegPaymentStreamFutureValueDateAdjusted(string val)
            : base(Tags.LegPaymentStreamFutureValueDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndex Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndex : StringField
    {
        public const int TAG = 40331;

        public LegPaymentStreamRateIndex()
            : base(Tags.LegPaymentStreamRateIndex) { }
        public LegPaymentStreamRateIndex(string val)
            : base(Tags.LegPaymentStreamRateIndex, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexSource Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexSource : IntField
    {
        public const int TAG = 40332;

        public LegPaymentStreamRateIndexSource()
            : base(Tags.LegPaymentStreamRateIndexSource) { }
        public LegPaymentStreamRateIndexSource(int val)
            : base(Tags.LegPaymentStreamRateIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStreamRateIndexCurveUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexCurveUnit : StringField
    {
        public const int TAG = 40333;

        public LegPaymentStreamRateIndexCurveUnit()
            : base(Tags.LegPaymentStreamRateIndexCurveUnit) { }
        public LegPaymentStreamRateIndexCurveUnit(string val)
            : base(Tags.LegPaymentStreamRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexCurvePeriod : IntField
    {
        public const int TAG = 40334;

        public LegPaymentStreamRateIndexCurvePeriod()
            : base(Tags.LegPaymentStreamRateIndexCurvePeriod) { }
        public LegPaymentStreamRateIndexCurvePeriod(int val)
            : base(Tags.LegPaymentStreamRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateMultiplier Field
    /// </summary>/
    public sealed class LegPaymentStreamRateMultiplier : DecimalField
    {
        public const int TAG = 40335;

        public LegPaymentStreamRateMultiplier()
            : base(Tags.LegPaymentStreamRateMultiplier) { }
        public LegPaymentStreamRateMultiplier(Decimal val)
            : base(Tags.LegPaymentStreamRateMultiplier, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateSpread Field
    /// </summary>/
    public sealed class LegPaymentStreamRateSpread : DecimalField
    {
        public const int TAG = 40336;

        public LegPaymentStreamRateSpread()
            : base(Tags.LegPaymentStreamRateSpread) { }
        public LegPaymentStreamRateSpread(Decimal val)
            : base(Tags.LegPaymentStreamRateSpread, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateSpreadPositionType Field
    /// </summary>/
    public sealed class LegPaymentStreamRateSpreadPositionType : IntField
    {
        public const int TAG = 40337;

        public LegPaymentStreamRateSpreadPositionType()
            : base(Tags.LegPaymentStreamRateSpreadPositionType) { }
        public LegPaymentStreamRateSpreadPositionType(int val)
            : base(Tags.LegPaymentStreamRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentStreamRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStreamRateTreatment : IntField
    {
        public const int TAG = 40338;

        public LegPaymentStreamRateTreatment()
            : base(Tags.LegPaymentStreamRateTreatment) { }
        public LegPaymentStreamRateTreatment(int val)
            : base(Tags.LegPaymentStreamRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStreamCapRate Field
    /// </summary>/
    public sealed class LegPaymentStreamCapRate : DecimalField
    {
        public const int TAG = 40339;

        public LegPaymentStreamCapRate()
            : base(Tags.LegPaymentStreamCapRate) { }
        public LegPaymentStreamCapRate(Decimal val)
            : base(Tags.LegPaymentStreamCapRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCapRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStreamCapRateBuySide : IntField
    {
        public const int TAG = 40340;

        public LegPaymentStreamCapRateBuySide()
            : base(Tags.LegPaymentStreamCapRateBuySide) { }
        public LegPaymentStreamCapRateBuySide(int val)
            : base(Tags.LegPaymentStreamCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamCapRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStreamCapRateSellSide : IntField
    {
        public const int TAG = 40341;

        public LegPaymentStreamCapRateSellSide()
            : base(Tags.LegPaymentStreamCapRateSellSide) { }
        public LegPaymentStreamCapRateSellSide(int val)
            : base(Tags.LegPaymentStreamCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamFloorRate Field
    /// </summary>/
    public sealed class LegPaymentStreamFloorRate : DecimalField
    {
        public const int TAG = 40342;

        public LegPaymentStreamFloorRate()
            : base(Tags.LegPaymentStreamFloorRate) { }
        public LegPaymentStreamFloorRate(Decimal val)
            : base(Tags.LegPaymentStreamFloorRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFloorRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStreamFloorRateBuySide : IntField
    {
        public const int TAG = 40343;

        public LegPaymentStreamFloorRateBuySide()
            : base(Tags.LegPaymentStreamFloorRateBuySide) { }
        public LegPaymentStreamFloorRateBuySide(int val)
            : base(Tags.LegPaymentStreamFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamFloorRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStreamFloorRateSellSide : IntField
    {
        public const int TAG = 40344;

        public LegPaymentStreamFloorRateSellSide()
            : base(Tags.LegPaymentStreamFloorRateSellSide) { }
        public LegPaymentStreamFloorRateSellSide(int val)
            : base(Tags.LegPaymentStreamFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamInitialRate Field
    /// </summary>/
    public sealed class LegPaymentStreamInitialRate : DecimalField
    {
        public const int TAG = 40345;

        public LegPaymentStreamInitialRate()
            : base(Tags.LegPaymentStreamInitialRate) { }
        public LegPaymentStreamInitialRate(Decimal val)
            : base(Tags.LegPaymentStreamInitialRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalRateRoundingDirection : CharField
    {
        public const int TAG = 40346;

        public LegPaymentStreamFinalRateRoundingDirection()
            : base(Tags.LegPaymentStreamFinalRateRoundingDirection) { }
        public LegPaymentStreamFinalRateRoundingDirection(char val)
            : base(Tags.LegPaymentStreamFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// LegPaymentStreamFinalRatePrecision Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalRatePrecision : IntField
    {
        public const int TAG = 40347;

        public LegPaymentStreamFinalRatePrecision()
            : base(Tags.LegPaymentStreamFinalRatePrecision) { }
        public LegPaymentStreamFinalRatePrecision(int val)
            : base(Tags.LegPaymentStreamFinalRatePrecision, val) { }

    }


    /// <summary>
    /// LegPaymentStreamAveragingMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamAveragingMethod : IntField
    {
        public const int TAG = 40348;

        public LegPaymentStreamAveragingMethod()
            : base(Tags.LegPaymentStreamAveragingMethod) { }
        public LegPaymentStreamAveragingMethod(int val)
            : base(Tags.LegPaymentStreamAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// LegPaymentStreamNegativeRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStreamNegativeRateTreatment : IntField
    {
        public const int TAG = 40349;

        public LegPaymentStreamNegativeRateTreatment()
            : base(Tags.LegPaymentStreamNegativeRateTreatment) { }
        public LegPaymentStreamNegativeRateTreatment(int val)
            : base(Tags.LegPaymentStreamNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// LegPaymentStreamInflationLagPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationLagPeriod : IntField
    {
        public const int TAG = 40350;

        public LegPaymentStreamInflationLagPeriod()
            : base(Tags.LegPaymentStreamInflationLagPeriod) { }
        public LegPaymentStreamInflationLagPeriod(int val)
            : base(Tags.LegPaymentStreamInflationLagPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInflationLagUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationLagUnit : StringField
    {
        public const int TAG = 40351;

        public LegPaymentStreamInflationLagUnit()
            : base(Tags.LegPaymentStreamInflationLagUnit) { }
        public LegPaymentStreamInflationLagUnit(string val)
            : base(Tags.LegPaymentStreamInflationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamInflationLagDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationLagDayType : IntField
    {
        public const int TAG = 40352;

        public LegPaymentStreamInflationLagDayType()
            : base(Tags.LegPaymentStreamInflationLagDayType) { }
        public LegPaymentStreamInflationLagDayType(int val)
            : base(Tags.LegPaymentStreamInflationLagDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamInflationInterpolationMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationInterpolationMethod : IntField
    {
        public const int TAG = 40353;

        public LegPaymentStreamInflationInterpolationMethod()
            : base(Tags.LegPaymentStreamInflationInterpolationMethod) { }
        public LegPaymentStreamInflationInterpolationMethod(int val)
            : base(Tags.LegPaymentStreamInflationInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStreamInflationIndexSource Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationIndexSource : IntField
    {
        public const int TAG = 40354;

        public LegPaymentStreamInflationIndexSource()
            : base(Tags.LegPaymentStreamInflationIndexSource) { }
        public LegPaymentStreamInflationIndexSource(int val)
            : base(Tags.LegPaymentStreamInflationIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStreamInflationPublicationSource Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationPublicationSource : StringField
    {
        public const int TAG = 40355;

        public LegPaymentStreamInflationPublicationSource()
            : base(Tags.LegPaymentStreamInflationPublicationSource) { }
        public LegPaymentStreamInflationPublicationSource(string val)
            : base(Tags.LegPaymentStreamInflationPublicationSource, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInflationInitialIndexLevel Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationInitialIndexLevel : DecimalField
    {
        public const int TAG = 40356;

        public LegPaymentStreamInflationInitialIndexLevel()
            : base(Tags.LegPaymentStreamInflationInitialIndexLevel) { }
        public LegPaymentStreamInflationInitialIndexLevel(Decimal val)
            : base(Tags.LegPaymentStreamInflationInitialIndexLevel, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInflationFallbackBondApplicable Field
    /// </summary>/
    public sealed class LegPaymentStreamInflationFallbackBondApplicable : BooleanField
    {
        public const int TAG = 40357;

        public LegPaymentStreamInflationFallbackBondApplicable()
            : base(Tags.LegPaymentStreamInflationFallbackBondApplicable) { }
        public LegPaymentStreamInflationFallbackBondApplicable(Boolean val)
            : base(Tags.LegPaymentStreamInflationFallbackBondApplicable, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFRADiscounting Field
    /// </summary>/
    public sealed class LegPaymentStreamFRADiscounting : IntField
    {
        public const int TAG = 40358;

        public LegPaymentStreamFRADiscounting()
            : base(Tags.LegPaymentStreamFRADiscounting) { }
        public LegPaymentStreamFRADiscounting(int val)
            : base(Tags.LegPaymentStreamFRADiscounting, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int INTERNATIONAL_SWAPS_AND_DERIVATIVES_ASSOCIATION = 1;
        public const int AUSTRALIAN_FINANCIAL_MARKETS_ASSOCIATION = 2;
    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableRefCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableRefCurrency : StringField
    {
        public const int TAG = 40359;

        public LegPaymentStreamNonDeliverableRefCurrency()
            : base(Tags.LegPaymentStreamNonDeliverableRefCurrency) { }
        public LegPaymentStreamNonDeliverableRefCurrency(string val)
            : base(Tags.LegPaymentStreamNonDeliverableRefCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40360;

        public LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention) { }
        public LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesBusinessCenter : StringField
    {
        public const int TAG = 40361;

        public LegPaymentStreamNonDeliverableFixingDatesBusinessCenter()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesBusinessCenter) { }
        public LegPaymentStreamNonDeliverableFixingDatesBusinessCenter(string val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesRelativeTo : IntField
    {
        public const int TAG = 40362;

        public LegPaymentStreamNonDeliverableFixingDatesRelativeTo()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesRelativeTo) { }
        public LegPaymentStreamNonDeliverableFixingDatesRelativeTo(int val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod : IntField
    {
        public const int TAG = 40363;

        public LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod) { }
        public LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesOffsetUnit : StringField
    {
        public const int TAG = 40364;

        public LegPaymentStreamNonDeliverableFixingDatesOffsetUnit()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetUnit) { }
        public LegPaymentStreamNonDeliverableFixingDatesOffsetUnit(string val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamNonDeliverableFixingDatesOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamNonDeliverableFixingDatesOffsetDayType : IntField
    {
        public const int TAG = 40365;

        public LegPaymentStreamNonDeliverableFixingDatesOffsetDayType()
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetDayType) { }
        public LegPaymentStreamNonDeliverableFixingDatesOffsetDayType(int val)
            : base(Tags.LegPaymentStreamNonDeliverableFixingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegSettlRateFallbackRateSource Field
    /// </summary>/
    public sealed class LegSettlRateFallbackRateSource : IntField
    {
        public const int TAG = 40366;

        public LegSettlRateFallbackRateSource()
            : base(Tags.LegSettlRateFallbackRateSource) { }
        public LegSettlRateFallbackRateSource(int val)
            : base(Tags.LegSettlRateFallbackRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// NoLegNonDeliverableFixingDates Field
    /// </summary>/
    public sealed class NoLegNonDeliverableFixingDates : IntField
    {
        public const int TAG = 40367;

        public NoLegNonDeliverableFixingDates()
            : base(Tags.NoLegNonDeliverableFixingDates) { }
        public NoLegNonDeliverableFixingDates(int val)
            : base(Tags.NoLegNonDeliverableFixingDates, val) { }

    }


    /// <summary>
    /// LegNonDeliverableFixingDate Field
    /// </summary>/
    public sealed class LegNonDeliverableFixingDate : StringField
    {
        public const int TAG = 40368;

        public LegNonDeliverableFixingDate()
            : base(Tags.LegNonDeliverableFixingDate) { }
        public LegNonDeliverableFixingDate(string val)
            : base(Tags.LegNonDeliverableFixingDate, val) { }

    }


    /// <summary>
    /// LegNonDeliverableFixingDateType Field
    /// </summary>/
    public sealed class LegNonDeliverableFixingDateType : IntField
    {
        public const int TAG = 40369;

        public LegNonDeliverableFixingDateType()
            : base(Tags.LegNonDeliverableFixingDateType) { }
        public LegNonDeliverableFixingDateType(int val)
            : base(Tags.LegNonDeliverableFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegSettlRateFallbackReferencePage Field
    /// </summary>/
    public sealed class LegSettlRateFallbackReferencePage : StringField
    {
        public const int TAG = 40370;

        public LegSettlRateFallbackReferencePage()
            : base(Tags.LegSettlRateFallbackReferencePage) { }
        public LegSettlRateFallbackReferencePage(string val)
            : base(Tags.LegSettlRateFallbackReferencePage, val) { }

    }


    /// <summary>
    /// PaymentStreamNonDeliverableSettlRateSource Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableSettlRateSource : IntField
    {
        public const int TAG = 40371;

        public PaymentStreamNonDeliverableSettlRateSource()
            : base(Tags.PaymentStreamNonDeliverableSettlRateSource) { }
        public PaymentStreamNonDeliverableSettlRateSource(int val)
            : base(Tags.PaymentStreamNonDeliverableSettlRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// PaymentStreamNonDeliverableSettlReferencePage Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableSettlReferencePage : StringField
    {
        public const int TAG = 40372;

        public PaymentStreamNonDeliverableSettlReferencePage()
            : base(Tags.PaymentStreamNonDeliverableSettlReferencePage) { }
        public PaymentStreamNonDeliverableSettlReferencePage(string val)
            : base(Tags.PaymentStreamNonDeliverableSettlReferencePage, val) { }

    }


    /// <summary>
    /// SettlRateFallbackRateSource Field
    /// </summary>/
    public sealed class SettlRateFallbackRateSource : IntField
    {
        public const int TAG = 40373;

        public SettlRateFallbackRateSource()
            : base(Tags.SettlRateFallbackRateSource) { }
        public SettlRateFallbackRateSource(int val)
            : base(Tags.SettlRateFallbackRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// NoLegPaymentSchedules Field
    /// </summary>/
    public sealed class NoLegPaymentSchedules : IntField
    {
        public const int TAG = 40374;

        public NoLegPaymentSchedules()
            : base(Tags.NoLegPaymentSchedules) { }
        public NoLegPaymentSchedules(int val)
            : base(Tags.NoLegPaymentSchedules, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleType Field
    /// </summary>/
    public sealed class LegPaymentScheduleType : IntField
    {
        public const int TAG = 40375;

        public LegPaymentScheduleType()
            : base(Tags.LegPaymentScheduleType) { }
        public LegPaymentScheduleType(int val)
            : base(Tags.LegPaymentScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int CASH_FLOW = 1;
        public const int FX_LINKED_NOTIONAL = 2;
        public const int FIXED_RATE = 3;
        public const int FUTURE_VALUE_NOTIONAL = 4;
        public const int KNOWN_AMOUNT = 5;
        public const int FLOATING_RATE_MULTIPLIER = 6;
        public const int SPREAD = 7;
        public const int CAP_RATE = 8;
        public const int FLOOR_RATE = 9;
        public const int NON_DELIVERABLE_SETTLEMENT_PAYMENT_DATES = 10;
        public const int NON_DELIVERABLE_SETTLEMENT_CALCULATION_DATES = 11;
        public const int NON_DELIVERABLE_FIXING_DATES = 12;
        public const int SETTLEMENT_PERIOD_NOTIONAL = 13;
        public const int SETTLEMENT_PERIOD_PRICE = 14;
        public const int CALCULATION_PERIOD = 15;
        public const int DIVIDEND_ACCRUAL_RATE_MULTIPLIER = 16;
        public const int DIVIDEND_ACCRUAL_RATE_SPREAD = 17;
        public const int DIVIDEND_ACCRUAL_CAP_RATE = 18;
        public const int DIVIDEND_ACCRUAL_FLOOR_RATE = 19;
        public const int COMPOUNDING_RATE_MULTIPLIER = 20;
        public const int COMPOUNDING_RATE_SPREAD = 21;
        public const int COMPOUNDING_CAP_RATE = 22;
        public const int COMPOUNDING_FLOOR_RATE = 23;
    }


    /// <summary>
    /// LegPaymentScheduleStubType Field
    /// </summary>/
    public sealed class LegPaymentScheduleStubType : IntField
    {
        public const int TAG = 40376;

        public LegPaymentScheduleStubType()
            : base(Tags.LegPaymentScheduleStubType) { }
        public LegPaymentScheduleStubType(int val)
            : base(Tags.LegPaymentScheduleStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// LegPaymentScheduleStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentScheduleStartDateUnadjusted : StringField
    {
        public const int TAG = 40377;

        public LegPaymentScheduleStartDateUnadjusted()
            : base(Tags.LegPaymentScheduleStartDateUnadjusted) { }
        public LegPaymentScheduleStartDateUnadjusted(string val)
            : base(Tags.LegPaymentScheduleStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentScheduleEndDateUnadjusted : StringField
    {
        public const int TAG = 40378;

        public LegPaymentScheduleEndDateUnadjusted()
            : base(Tags.LegPaymentScheduleEndDateUnadjusted) { }
        public LegPaymentScheduleEndDateUnadjusted(string val)
            : base(Tags.LegPaymentScheduleEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentSchedulePaySide Field
    /// </summary>/
    public sealed class LegPaymentSchedulePaySide : IntField
    {
        public const int TAG = 40379;

        public LegPaymentSchedulePaySide()
            : base(Tags.LegPaymentSchedulePaySide) { }
        public LegPaymentSchedulePaySide(int val)
            : base(Tags.LegPaymentSchedulePaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegPaymentScheduleReceiveSide Field
    /// </summary>/
    public sealed class LegPaymentScheduleReceiveSide : IntField
    {
        public const int TAG = 40380;

        public LegPaymentScheduleReceiveSide()
            : base(Tags.LegPaymentScheduleReceiveSide) { }
        public LegPaymentScheduleReceiveSide(int val)
            : base(Tags.LegPaymentScheduleReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegPaymentScheduleNotional Field
    /// </summary>/
    public sealed class LegPaymentScheduleNotional : DecimalField
    {
        public const int TAG = 40381;

        public LegPaymentScheduleNotional()
            : base(Tags.LegPaymentScheduleNotional) { }
        public LegPaymentScheduleNotional(Decimal val)
            : base(Tags.LegPaymentScheduleNotional, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleCurrency Field
    /// </summary>/
    public sealed class LegPaymentScheduleCurrency : StringField
    {
        public const int TAG = 40382;

        public LegPaymentScheduleCurrency()
            : base(Tags.LegPaymentScheduleCurrency) { }
        public LegPaymentScheduleCurrency(string val)
            : base(Tags.LegPaymentScheduleCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRate Field
    /// </summary>/
    public sealed class LegPaymentScheduleRate : DecimalField
    {
        public const int TAG = 40383;

        public LegPaymentScheduleRate()
            : base(Tags.LegPaymentScheduleRate) { }
        public LegPaymentScheduleRate(Decimal val)
            : base(Tags.LegPaymentScheduleRate, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateMultiplier Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateMultiplier : DecimalField
    {
        public const int TAG = 40384;

        public LegPaymentScheduleRateMultiplier()
            : base(Tags.LegPaymentScheduleRateMultiplier) { }
        public LegPaymentScheduleRateMultiplier(Decimal val)
            : base(Tags.LegPaymentScheduleRateMultiplier, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateSpread Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateSpread : DecimalField
    {
        public const int TAG = 40385;

        public LegPaymentScheduleRateSpread()
            : base(Tags.LegPaymentScheduleRateSpread) { }
        public LegPaymentScheduleRateSpread(Decimal val)
            : base(Tags.LegPaymentScheduleRateSpread, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateSpreadPositionType Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateSpreadPositionType : IntField
    {
        public const int TAG = 40386;

        public LegPaymentScheduleRateSpreadPositionType()
            : base(Tags.LegPaymentScheduleRateSpreadPositionType) { }
        public LegPaymentScheduleRateSpreadPositionType(int val)
            : base(Tags.LegPaymentScheduleRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentScheduleRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateTreatment : IntField
    {
        public const int TAG = 40387;

        public LegPaymentScheduleRateTreatment()
            : base(Tags.LegPaymentScheduleRateTreatment) { }
        public LegPaymentScheduleRateTreatment(int val)
            : base(Tags.LegPaymentScheduleRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentScheduleFixedAmount Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixedAmount : DecimalField
    {
        public const int TAG = 40388;

        public LegPaymentScheduleFixedAmount()
            : base(Tags.LegPaymentScheduleFixedAmount) { }
        public LegPaymentScheduleFixedAmount(Decimal val)
            : base(Tags.LegPaymentScheduleFixedAmount, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixedCurrency Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixedCurrency : StringField
    {
        public const int TAG = 40389;

        public LegPaymentScheduleFixedCurrency()
            : base(Tags.LegPaymentScheduleFixedCurrency) { }
        public LegPaymentScheduleFixedCurrency(string val)
            : base(Tags.LegPaymentScheduleFixedCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleStepFrequencyPeriod Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepFrequencyPeriod : IntField
    {
        public const int TAG = 40390;

        public LegPaymentScheduleStepFrequencyPeriod()
            : base(Tags.LegPaymentScheduleStepFrequencyPeriod) { }
        public LegPaymentScheduleStepFrequencyPeriod(int val)
            : base(Tags.LegPaymentScheduleStepFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleStepFrequencyUnit Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepFrequencyUnit : StringField
    {
        public const int TAG = 40391;

        public LegPaymentScheduleStepFrequencyUnit()
            : base(Tags.LegPaymentScheduleStepFrequencyUnit) { }
        public LegPaymentScheduleStepFrequencyUnit(string val)
            : base(Tags.LegPaymentScheduleStepFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegPaymentScheduleStepOffsetValue Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepOffsetValue : DecimalField
    {
        public const int TAG = 40392;

        public LegPaymentScheduleStepOffsetValue()
            : base(Tags.LegPaymentScheduleStepOffsetValue) { }
        public LegPaymentScheduleStepOffsetValue(Decimal val)
            : base(Tags.LegPaymentScheduleStepOffsetValue, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleStepRate Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepRate : DecimalField
    {
        public const int TAG = 40393;

        public LegPaymentScheduleStepRate()
            : base(Tags.LegPaymentScheduleStepRate) { }
        public LegPaymentScheduleStepRate(Decimal val)
            : base(Tags.LegPaymentScheduleStepRate, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleStepOffsetRate Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepOffsetRate : DecimalField
    {
        public const int TAG = 40394;

        public LegPaymentScheduleStepOffsetRate()
            : base(Tags.LegPaymentScheduleStepOffsetRate) { }
        public LegPaymentScheduleStepOffsetRate(Decimal val)
            : base(Tags.LegPaymentScheduleStepOffsetRate, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleStepRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepRelativeTo : IntField
    {
        public const int TAG = 40395;

        public LegPaymentScheduleStepRelativeTo()
            : base(Tags.LegPaymentScheduleStepRelativeTo) { }
        public LegPaymentScheduleStepRelativeTo(int val)
            : base(Tags.LegPaymentScheduleStepRelativeTo, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int PREVIOUS = 1;
    }


    /// <summary>
    /// LegPaymentScheduleFixingDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateUnadjusted : StringField
    {
        public const int TAG = 40396;

        public LegPaymentScheduleFixingDateUnadjusted()
            : base(Tags.LegPaymentScheduleFixingDateUnadjusted) { }
        public LegPaymentScheduleFixingDateUnadjusted(string val)
            : base(Tags.LegPaymentScheduleFixingDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleWeight Field
    /// </summary>/
    public sealed class LegPaymentScheduleWeight : DecimalField
    {
        public const int TAG = 40397;

        public LegPaymentScheduleWeight()
            : base(Tags.LegPaymentScheduleWeight) { }
        public LegPaymentScheduleWeight(Decimal val)
            : base(Tags.LegPaymentScheduleWeight, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateRelativeTo : IntField
    {
        public const int TAG = 40398;

        public LegPaymentScheduleFixingDateRelativeTo()
            : base(Tags.LegPaymentScheduleFixingDateRelativeTo) { }
        public LegPaymentScheduleFixingDateRelativeTo(int val)
            : base(Tags.LegPaymentScheduleFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40399;

        public LegPaymentScheduleFixingDateBusinessDayConvention()
            : base(Tags.LegPaymentScheduleFixingDateBusinessDayConvention) { }
        public LegPaymentScheduleFixingDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentScheduleFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentScheduleFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40400;

        public LegPaymentScheduleFixingDateBusinessCenter()
            : base(Tags.LegPaymentScheduleFixingDateBusinessCenter) { }
        public LegPaymentScheduleFixingDateBusinessCenter(string val)
            : base(Tags.LegPaymentScheduleFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40401;

        public LegPaymentScheduleFixingDateOffsetPeriod()
            : base(Tags.LegPaymentScheduleFixingDateOffsetPeriod) { }
        public LegPaymentScheduleFixingDateOffsetPeriod(int val)
            : base(Tags.LegPaymentScheduleFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40402;

        public LegPaymentScheduleFixingDateOffsetUnit()
            : base(Tags.LegPaymentScheduleFixingDateOffsetUnit) { }
        public LegPaymentScheduleFixingDateOffsetUnit(string val)
            : base(Tags.LegPaymentScheduleFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentScheduleFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40403;

        public LegPaymentScheduleFixingDateOffsetDayType()
            : base(Tags.LegPaymentScheduleFixingDateOffsetDayType) { }
        public LegPaymentScheduleFixingDateOffsetDayType(int val)
            : base(Tags.LegPaymentScheduleFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentScheduleFixingDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDateAdjusted : StringField
    {
        public const int TAG = 40404;

        public LegPaymentScheduleFixingDateAdjusted()
            : base(Tags.LegPaymentScheduleFixingDateAdjusted) { }
        public LegPaymentScheduleFixingDateAdjusted(string val)
            : base(Tags.LegPaymentScheduleFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingTime Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingTime : StringField
    {
        public const int TAG = 40405;

        public LegPaymentScheduleFixingTime()
            : base(Tags.LegPaymentScheduleFixingTime) { }
        public LegPaymentScheduleFixingTime(string val)
            : base(Tags.LegPaymentScheduleFixingTime, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 40406;

        public LegPaymentScheduleFixingTimeBusinessCenter()
            : base(Tags.LegPaymentScheduleFixingTimeBusinessCenter) { }
        public LegPaymentScheduleFixingTimeBusinessCenter(string val)
            : base(Tags.LegPaymentScheduleFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangePaymentDateRelativeTo : IntField
    {
        public const int TAG = 40407;

        public LegPaymentScheduleInterimExchangePaymentDateRelativeTo()
            : base(Tags.LegPaymentScheduleInterimExchangePaymentDateRelativeTo) { }
        public LegPaymentScheduleInterimExchangePaymentDateRelativeTo(int val)
            : base(Tags.LegPaymentScheduleInterimExchangePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40408;

        public LegPaymentScheduleInterimExchangeDatesBusinessDayConvention()
            : base(Tags.LegPaymentScheduleInterimExchangeDatesBusinessDayConvention) { }
        public LegPaymentScheduleInterimExchangeDatesBusinessDayConvention(int val)
            : base(Tags.LegPaymentScheduleInterimExchangeDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDatesBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDatesBusinessCenter : StringField
    {
        public const int TAG = 40409;

        public LegPaymentScheduleInterimExchangeDatesBusinessCenter()
            : base(Tags.LegPaymentScheduleInterimExchangeDatesBusinessCenter) { }
        public LegPaymentScheduleInterimExchangeDatesBusinessCenter(string val)
            : base(Tags.LegPaymentScheduleInterimExchangeDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDatesOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDatesOffsetPeriod : IntField
    {
        public const int TAG = 40410;

        public LegPaymentScheduleInterimExchangeDatesOffsetPeriod()
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetPeriod) { }
        public LegPaymentScheduleInterimExchangeDatesOffsetPeriod(int val)
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDatesOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDatesOffsetUnit : StringField
    {
        public const int TAG = 40411;

        public LegPaymentScheduleInterimExchangeDatesOffsetUnit()
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetUnit) { }
        public LegPaymentScheduleInterimExchangeDatesOffsetUnit(string val)
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDatesOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDatesOffsetDayType : IntField
    {
        public const int TAG = 40412;

        public LegPaymentScheduleInterimExchangeDatesOffsetDayType()
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetDayType) { }
        public LegPaymentScheduleInterimExchangeDatesOffsetDayType(int val)
            : base(Tags.LegPaymentScheduleInterimExchangeDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentScheduleInterimExchangeDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentScheduleInterimExchangeDateAdjusted : StringField
    {
        public const int TAG = 40413;

        public LegPaymentScheduleInterimExchangeDateAdjusted()
            : base(Tags.LegPaymentScheduleInterimExchangeDateAdjusted) { }
        public LegPaymentScheduleInterimExchangeDateAdjusted(string val)
            : base(Tags.LegPaymentScheduleInterimExchangeDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegPaymentScheduleRateSources Field
    /// </summary>/
    public sealed class NoLegPaymentScheduleRateSources : IntField
    {
        public const int TAG = 40414;

        public NoLegPaymentScheduleRateSources()
            : base(Tags.NoLegPaymentScheduleRateSources) { }
        public NoLegPaymentScheduleRateSources(int val)
            : base(Tags.NoLegPaymentScheduleRateSources, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateSource Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateSource : IntField
    {
        public const int TAG = 40415;

        public LegPaymentScheduleRateSource()
            : base(Tags.LegPaymentScheduleRateSource) { }
        public LegPaymentScheduleRateSource(int val)
            : base(Tags.LegPaymentScheduleRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// LegPaymentScheduleRateSourceType Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateSourceType : IntField
    {
        public const int TAG = 40416;

        public LegPaymentScheduleRateSourceType()
            : base(Tags.LegPaymentScheduleRateSourceType) { }
        public LegPaymentScheduleRateSourceType(int val)
            : base(Tags.LegPaymentScheduleRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// LegPaymentScheduleReferencePage Field
    /// </summary>/
    public sealed class LegPaymentScheduleReferencePage : StringField
    {
        public const int TAG = 40417;

        public LegPaymentScheduleReferencePage()
            : base(Tags.LegPaymentScheduleReferencePage) { }
        public LegPaymentScheduleReferencePage(string val)
            : base(Tags.LegPaymentScheduleReferencePage, val) { }

    }


    /// <summary>
    /// NoLegPaymentStubs Field
    /// </summary>/
    public sealed class NoLegPaymentStubs : IntField
    {
        public const int TAG = 40418;

        public NoLegPaymentStubs()
            : base(Tags.NoLegPaymentStubs) { }
        public NoLegPaymentStubs(int val)
            : base(Tags.NoLegPaymentStubs, val) { }

    }


    /// <summary>
    /// LegPaymentStubType Field
    /// </summary>/
    public sealed class LegPaymentStubType : IntField
    {
        public const int TAG = 40419;

        public LegPaymentStubType()
            : base(Tags.LegPaymentStubType) { }
        public LegPaymentStubType(int val)
            : base(Tags.LegPaymentStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// LegPaymentStubLength Field
    /// </summary>/
    public sealed class LegPaymentStubLength : IntField
    {
        public const int TAG = 40420;

        public LegPaymentStubLength()
            : base(Tags.LegPaymentStubLength) { }
        public LegPaymentStubLength(int val)
            : base(Tags.LegPaymentStubLength, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentStubRate Field
    /// </summary>/
    public sealed class LegPaymentStubRate : DecimalField
    {
        public const int TAG = 40421;

        public LegPaymentStubRate()
            : base(Tags.LegPaymentStubRate) { }
        public LegPaymentStubRate(Decimal val)
            : base(Tags.LegPaymentStubRate, val) { }

    }


    /// <summary>
    /// LegPaymentStubFixedAmount Field
    /// </summary>/
    public sealed class LegPaymentStubFixedAmount : DecimalField
    {
        public const int TAG = 40422;

        public LegPaymentStubFixedAmount()
            : base(Tags.LegPaymentStubFixedAmount) { }
        public LegPaymentStubFixedAmount(Decimal val)
            : base(Tags.LegPaymentStubFixedAmount, val) { }

    }


    /// <summary>
    /// LegPaymentStubFixedCurrency Field
    /// </summary>/
    public sealed class LegPaymentStubFixedCurrency : StringField
    {
        public const int TAG = 40423;

        public LegPaymentStubFixedCurrency()
            : base(Tags.LegPaymentStubFixedCurrency) { }
        public LegPaymentStubFixedCurrency(string val)
            : base(Tags.LegPaymentStubFixedCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex Field
    /// </summary>/
    public sealed class LegPaymentStubIndex : StringField
    {
        public const int TAG = 40424;

        public LegPaymentStubIndex()
            : base(Tags.LegPaymentStubIndex) { }
        public LegPaymentStubIndex(string val)
            : base(Tags.LegPaymentStubIndex, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexSource Field
    /// </summary>/
    public sealed class LegPaymentStubIndexSource : IntField
    {
        public const int TAG = 40425;

        public LegPaymentStubIndexSource()
            : base(Tags.LegPaymentStubIndexSource) { }
        public LegPaymentStubIndexSource(int val)
            : base(Tags.LegPaymentStubIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStubIndexCurvePeriod Field
    /// </summary>/
    public sealed class LegPaymentStubIndexCurvePeriod : IntField
    {
        public const int TAG = 40426;

        public LegPaymentStubIndexCurvePeriod()
            : base(Tags.LegPaymentStubIndexCurvePeriod) { }
        public LegPaymentStubIndexCurvePeriod(int val)
            : base(Tags.LegPaymentStubIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexCurveUnit Field
    /// </summary>/
    public sealed class LegPaymentStubIndexCurveUnit : StringField
    {
        public const int TAG = 40427;

        public LegPaymentStubIndexCurveUnit()
            : base(Tags.LegPaymentStubIndexCurveUnit) { }
        public LegPaymentStubIndexCurveUnit(string val)
            : base(Tags.LegPaymentStubIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStubIndexRateMultiplier Field
    /// </summary>/
    public sealed class LegPaymentStubIndexRateMultiplier : DecimalField
    {
        public const int TAG = 40428;

        public LegPaymentStubIndexRateMultiplier()
            : base(Tags.LegPaymentStubIndexRateMultiplier) { }
        public LegPaymentStubIndexRateMultiplier(Decimal val)
            : base(Tags.LegPaymentStubIndexRateMultiplier, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexRateSpread Field
    /// </summary>/
    public sealed class LegPaymentStubIndexRateSpread : DecimalField
    {
        public const int TAG = 40429;

        public LegPaymentStubIndexRateSpread()
            : base(Tags.LegPaymentStubIndexRateSpread) { }
        public LegPaymentStubIndexRateSpread(Decimal val)
            : base(Tags.LegPaymentStubIndexRateSpread, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexRateSpreadPositionType Field
    /// </summary>/
    public sealed class LegPaymentStubIndexRateSpreadPositionType : IntField
    {
        public const int TAG = 40430;

        public LegPaymentStubIndexRateSpreadPositionType()
            : base(Tags.LegPaymentStubIndexRateSpreadPositionType) { }
        public LegPaymentStubIndexRateSpreadPositionType(int val)
            : base(Tags.LegPaymentStubIndexRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentStubIndexRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStubIndexRateTreatment : IntField
    {
        public const int TAG = 40431;

        public LegPaymentStubIndexRateTreatment()
            : base(Tags.LegPaymentStubIndexRateTreatment) { }
        public LegPaymentStubIndexRateTreatment(int val)
            : base(Tags.LegPaymentStubIndexRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStubIndexCapRate Field
    /// </summary>/
    public sealed class LegPaymentStubIndexCapRate : DecimalField
    {
        public const int TAG = 40432;

        public LegPaymentStubIndexCapRate()
            : base(Tags.LegPaymentStubIndexCapRate) { }
        public LegPaymentStubIndexCapRate(Decimal val)
            : base(Tags.LegPaymentStubIndexCapRate, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexCapRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStubIndexCapRateBuySide : IntField
    {
        public const int TAG = 40433;

        public LegPaymentStubIndexCapRateBuySide()
            : base(Tags.LegPaymentStubIndexCapRateBuySide) { }
        public LegPaymentStubIndexCapRateBuySide(int val)
            : base(Tags.LegPaymentStubIndexCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStubIndexCapRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStubIndexCapRateSellSide : IntField
    {
        public const int TAG = 40434;

        public LegPaymentStubIndexCapRateSellSide()
            : base(Tags.LegPaymentStubIndexCapRateSellSide) { }
        public LegPaymentStubIndexCapRateSellSide(int val)
            : base(Tags.LegPaymentStubIndexCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStubIndexFloorRate Field
    /// </summary>/
    public sealed class LegPaymentStubIndexFloorRate : DecimalField
    {
        public const int TAG = 40435;

        public LegPaymentStubIndexFloorRate()
            : base(Tags.LegPaymentStubIndexFloorRate) { }
        public LegPaymentStubIndexFloorRate(Decimal val)
            : base(Tags.LegPaymentStubIndexFloorRate, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndexFloorRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStubIndexFloorRateBuySide : IntField
    {
        public const int TAG = 40436;

        public LegPaymentStubIndexFloorRateBuySide()
            : base(Tags.LegPaymentStubIndexFloorRateBuySide) { }
        public LegPaymentStubIndexFloorRateBuySide(int val)
            : base(Tags.LegPaymentStubIndexFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStubIndexFloorRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStubIndexFloorRateSellSide : IntField
    {
        public const int TAG = 40437;

        public LegPaymentStubIndexFloorRateSellSide()
            : base(Tags.LegPaymentStubIndexFloorRateSellSide) { }
        public LegPaymentStubIndexFloorRateSellSide(int val)
            : base(Tags.LegPaymentStubIndexFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStubIndex2 Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2 : StringField
    {
        public const int TAG = 40438;

        public LegPaymentStubIndex2()
            : base(Tags.LegPaymentStubIndex2) { }
        public LegPaymentStubIndex2(string val)
            : base(Tags.LegPaymentStubIndex2, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex2Source Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2Source : IntField
    {
        public const int TAG = 40439;

        public LegPaymentStubIndex2Source()
            : base(Tags.LegPaymentStubIndex2Source) { }
        public LegPaymentStubIndex2Source(int val)
            : base(Tags.LegPaymentStubIndex2Source, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegPaymentStubIndex2CurvePeriod Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2CurvePeriod : IntField
    {
        public const int TAG = 40440;

        public LegPaymentStubIndex2CurvePeriod()
            : base(Tags.LegPaymentStubIndex2CurvePeriod) { }
        public LegPaymentStubIndex2CurvePeriod(int val)
            : base(Tags.LegPaymentStubIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex2CurveUnit Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2CurveUnit : StringField
    {
        public const int TAG = 40441;

        public LegPaymentStubIndex2CurveUnit()
            : base(Tags.LegPaymentStubIndex2CurveUnit) { }
        public LegPaymentStubIndex2CurveUnit(string val)
            : base(Tags.LegPaymentStubIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStubIndex2RateMultiplier Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2RateMultiplier : DecimalField
    {
        public const int TAG = 40442;

        public LegPaymentStubIndex2RateMultiplier()
            : base(Tags.LegPaymentStubIndex2RateMultiplier) { }
        public LegPaymentStubIndex2RateMultiplier(Decimal val)
            : base(Tags.LegPaymentStubIndex2RateMultiplier, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex2RateSpread Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2RateSpread : DecimalField
    {
        public const int TAG = 40443;

        public LegPaymentStubIndex2RateSpread()
            : base(Tags.LegPaymentStubIndex2RateSpread) { }
        public LegPaymentStubIndex2RateSpread(Decimal val)
            : base(Tags.LegPaymentStubIndex2RateSpread, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex2RateSpreadPositionType Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2RateSpreadPositionType : IntField
    {
        public const int TAG = 40444;

        public LegPaymentStubIndex2RateSpreadPositionType()
            : base(Tags.LegPaymentStubIndex2RateSpreadPositionType) { }
        public LegPaymentStubIndex2RateSpreadPositionType(int val)
            : base(Tags.LegPaymentStubIndex2RateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentStubIndex2RateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2RateTreatment : IntField
    {
        public const int TAG = 40445;

        public LegPaymentStubIndex2RateTreatment()
            : base(Tags.LegPaymentStubIndex2RateTreatment) { }
        public LegPaymentStubIndex2RateTreatment(int val)
            : base(Tags.LegPaymentStubIndex2RateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStubIndex2CapRate Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2CapRate : DecimalField
    {
        public const int TAG = 40446;

        public LegPaymentStubIndex2CapRate()
            : base(Tags.LegPaymentStubIndex2CapRate) { }
        public LegPaymentStubIndex2CapRate(Decimal val)
            : base(Tags.LegPaymentStubIndex2CapRate, val) { }

    }


    /// <summary>
    /// LegPaymentStubIndex2FloorRate Field
    /// </summary>/
    public sealed class LegPaymentStubIndex2FloorRate : DecimalField
    {
        public const int TAG = 40447;

        public LegPaymentStubIndex2FloorRate()
            : base(Tags.LegPaymentStubIndex2FloorRate) { }
        public LegPaymentStubIndex2FloorRate(Decimal val)
            : base(Tags.LegPaymentStubIndex2FloorRate, val) { }

    }


    /// <summary>
    /// NoLegProvisions Field
    /// </summary>/
    public sealed class NoLegProvisions : IntField
    {
        public const int TAG = 40448;

        public NoLegProvisions()
            : base(Tags.NoLegProvisions) { }
        public NoLegProvisions(int val)
            : base(Tags.NoLegProvisions, val) { }

    }


    /// <summary>
    /// LegProvisionType Field
    /// </summary>/
    public sealed class LegProvisionType : IntField
    {
        public const int TAG = 40449;

        public LegProvisionType()
            : base(Tags.LegProvisionType) { }
        public LegProvisionType(int val)
            : base(Tags.LegProvisionType, val) { }


        // Field Enumerations
        public const int MANDATORY_EARLY_TERMINATION = 0;
        public const int OPTIONAL_EARLY_TERMINATION = 1;
        public const int CANCELABLE = 2;
        public const int EXTENDABLE = 3;
        public const int MUTUAL_EARLY_TERMINATION = 4;
        public const int EVERGREEN = 5;
        public const int CALLABLE = 6;
        public const int PUTTABLE = 7;
    }


    /// <summary>
    /// LegProvisionDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionDateUnadjusted : StringField
    {
        public const int TAG = 40450;

        public LegProvisionDateUnadjusted()
            : base(Tags.LegProvisionDateUnadjusted) { }
        public LegProvisionDateUnadjusted(string val)
            : base(Tags.LegProvisionDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionDateBusinessDayConvention : IntField
    {
        public const int TAG = 40451;

        public LegProvisionDateBusinessDayConvention()
            : base(Tags.LegProvisionDateBusinessDayConvention) { }
        public LegProvisionDateBusinessDayConvention(int val)
            : base(Tags.LegProvisionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionDateBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionDateBusinessCenter : StringField
    {
        public const int TAG = 40452;

        public LegProvisionDateBusinessCenter()
            : base(Tags.LegProvisionDateBusinessCenter) { }
        public LegProvisionDateBusinessCenter(string val)
            : base(Tags.LegProvisionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionDateAdjusted Field
    /// </summary>/
    public sealed class LegProvisionDateAdjusted : StringField
    {
        public const int TAG = 40453;

        public LegProvisionDateAdjusted()
            : base(Tags.LegProvisionDateAdjusted) { }
        public LegProvisionDateAdjusted(string val)
            : base(Tags.LegProvisionDateAdjusted, val) { }

    }


    /// <summary>
    /// LegProvisionDateTenorPeriod Field
    /// </summary>/
    public sealed class LegProvisionDateTenorPeriod : IntField
    {
        public const int TAG = 40454;

        public LegProvisionDateTenorPeriod()
            : base(Tags.LegProvisionDateTenorPeriod) { }
        public LegProvisionDateTenorPeriod(int val)
            : base(Tags.LegProvisionDateTenorPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionDateTenorUnit Field
    /// </summary>/
    public sealed class LegProvisionDateTenorUnit : StringField
    {
        public const int TAG = 40455;

        public LegProvisionDateTenorUnit()
            : base(Tags.LegProvisionDateTenorUnit) { }
        public LegProvisionDateTenorUnit(string val)
            : base(Tags.LegProvisionDateTenorUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionCalculationAgent Field
    /// </summary>/
    public sealed class LegProvisionCalculationAgent : IntField
    {
        public const int TAG = 40456;

        public LegProvisionCalculationAgent()
            : base(Tags.LegProvisionCalculationAgent) { }
        public LegProvisionCalculationAgent(int val)
            : base(Tags.LegProvisionCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// LegProvisionOptionSinglePartyBuyerSide Field
    /// </summary>/
    public sealed class LegProvisionOptionSinglePartyBuyerSide : IntField
    {
        public const int TAG = 40457;

        public LegProvisionOptionSinglePartyBuyerSide()
            : base(Tags.LegProvisionOptionSinglePartyBuyerSide) { }
        public LegProvisionOptionSinglePartyBuyerSide(int val)
            : base(Tags.LegProvisionOptionSinglePartyBuyerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegProvisionOptionSinglePartySellerSide Field
    /// </summary>/
    public sealed class LegProvisionOptionSinglePartySellerSide : IntField
    {
        public const int TAG = 40458;

        public LegProvisionOptionSinglePartySellerSide()
            : base(Tags.LegProvisionOptionSinglePartySellerSide) { }
        public LegProvisionOptionSinglePartySellerSide(int val)
            : base(Tags.LegProvisionOptionSinglePartySellerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegProvisionOptionExerciseStyle Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStyle : IntField
    {
        public const int TAG = 40459;

        public LegProvisionOptionExerciseStyle()
            : base(Tags.LegProvisionOptionExerciseStyle) { }
        public LegProvisionOptionExerciseStyle(int val)
            : base(Tags.LegProvisionOptionExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// LegProvisionOptionExerciseMultipleNotional Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseMultipleNotional : DecimalField
    {
        public const int TAG = 40460;

        public LegProvisionOptionExerciseMultipleNotional()
            : base(Tags.LegProvisionOptionExerciseMultipleNotional) { }
        public LegProvisionOptionExerciseMultipleNotional(Decimal val)
            : base(Tags.LegProvisionOptionExerciseMultipleNotional, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseMinimumNotional Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseMinimumNotional : DecimalField
    {
        public const int TAG = 40461;

        public LegProvisionOptionExerciseMinimumNotional()
            : base(Tags.LegProvisionOptionExerciseMinimumNotional) { }
        public LegProvisionOptionExerciseMinimumNotional(Decimal val)
            : base(Tags.LegProvisionOptionExerciseMinimumNotional, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseMaximumNotional Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseMaximumNotional : DecimalField
    {
        public const int TAG = 40462;

        public LegProvisionOptionExerciseMaximumNotional()
            : base(Tags.LegProvisionOptionExerciseMaximumNotional) { }
        public LegProvisionOptionExerciseMaximumNotional(Decimal val)
            : base(Tags.LegProvisionOptionExerciseMaximumNotional, val) { }

    }


    /// <summary>
    /// LegProvisionOptionMinimumNumber Field
    /// </summary>/
    public sealed class LegProvisionOptionMinimumNumber : IntField
    {
        public const int TAG = 40463;

        public LegProvisionOptionMinimumNumber()
            : base(Tags.LegProvisionOptionMinimumNumber) { }
        public LegProvisionOptionMinimumNumber(int val)
            : base(Tags.LegProvisionOptionMinimumNumber, val) { }

    }


    /// <summary>
    /// LegProvisionOptionMaximumNumber Field
    /// </summary>/
    public sealed class LegProvisionOptionMaximumNumber : IntField
    {
        public const int TAG = 40464;

        public LegProvisionOptionMaximumNumber()
            : base(Tags.LegProvisionOptionMaximumNumber) { }
        public LegProvisionOptionMaximumNumber(int val)
            : base(Tags.LegProvisionOptionMaximumNumber, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseConfirmation Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseConfirmation : BooleanField
    {
        public const int TAG = 40465;

        public LegProvisionOptionExerciseConfirmation()
            : base(Tags.LegProvisionOptionExerciseConfirmation) { }
        public LegProvisionOptionExerciseConfirmation(Boolean val)
            : base(Tags.LegProvisionOptionExerciseConfirmation, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlMethod Field
    /// </summary>/
    public sealed class LegProvisionCashSettlMethod : IntField
    {
        public const int TAG = 40466;

        public LegProvisionCashSettlMethod()
            : base(Tags.LegProvisionCashSettlMethod) { }
        public LegProvisionCashSettlMethod(int val)
            : base(Tags.LegProvisionCashSettlMethod, val) { }


        // Field Enumerations
        public const int CASH_PRICE = 0;
        public const int CASH_PRICE_ALTERNATE = 1;
        public const int PAR_YIELD_CURVE_ADJUSTED = 2;
        public const int ZERO_COUPON_YIELD_CURVE_ADJUSTED = 3;
        public const int PAR_YIELD_CURVE_UNADJUSTED = 4;
        public const int CROSS_CURRENCY = 5;
        public const int COLLATERALIZED_PRICE = 6;
    }


    /// <summary>
    /// LegProvisionCashSettlCurrency Field
    /// </summary>/
    public sealed class LegProvisionCashSettlCurrency : StringField
    {
        public const int TAG = 40467;

        public LegProvisionCashSettlCurrency()
            : base(Tags.LegProvisionCashSettlCurrency) { }
        public LegProvisionCashSettlCurrency(string val)
            : base(Tags.LegProvisionCashSettlCurrency, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlCurrency2 Field
    /// </summary>/
    public sealed class LegProvisionCashSettlCurrency2 : StringField
    {
        public const int TAG = 40468;

        public LegProvisionCashSettlCurrency2()
            : base(Tags.LegProvisionCashSettlCurrency2) { }
        public LegProvisionCashSettlCurrency2(string val)
            : base(Tags.LegProvisionCashSettlCurrency2, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlQuoteType Field
    /// </summary>/
    public sealed class LegProvisionCashSettlQuoteType : IntField
    {
        public const int TAG = 40469;

        public LegProvisionCashSettlQuoteType()
            : base(Tags.LegProvisionCashSettlQuoteType) { }
        public LegProvisionCashSettlQuoteType(int val)
            : base(Tags.LegProvisionCashSettlQuoteType, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
        public const int EXERCISING_PARTY_PAYS = 3;
    }


    /// <summary>
    /// LegProvisionCashSettlQuoteSource Field
    /// </summary>/
    public sealed class LegProvisionCashSettlQuoteSource : IntField
    {
        public const int TAG = 40470;

        public LegProvisionCashSettlQuoteSource()
            : base(Tags.LegProvisionCashSettlQuoteSource) { }
        public LegProvisionCashSettlQuoteSource(int val)
            : base(Tags.LegProvisionCashSettlQuoteSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// BusinessCenter Field
    /// </summary>/
    public sealed class BusinessCenter : StringField
    {
        public const int TAG = 40471;

        public BusinessCenter()
            : base(Tags.BusinessCenter) { }
        public BusinessCenter(string val)
            : base(Tags.BusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionText Field
    /// </summary>/
    public sealed class LegProvisionText : StringField
    {
        public const int TAG = 40472;

        public LegProvisionText()
            : base(Tags.LegProvisionText) { }
        public LegProvisionText(string val)
            : base(Tags.LegProvisionText, val) { }

    }


    /// <summary>
    /// NoLegProvisionCashSettlPaymentDates Field
    /// </summary>/
    public sealed class NoLegProvisionCashSettlPaymentDates : IntField
    {
        public const int TAG = 40473;

        public NoLegProvisionCashSettlPaymentDates()
            : base(Tags.NoLegProvisionCashSettlPaymentDates) { }
        public NoLegProvisionCashSettlPaymentDates(int val)
            : base(Tags.NoLegProvisionCashSettlPaymentDates, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDate Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDate : StringField
    {
        public const int TAG = 40474;

        public LegProvisionCashSettlPaymentDate()
            : base(Tags.LegProvisionCashSettlPaymentDate) { }
        public LegProvisionCashSettlPaymentDate(string val)
            : base(Tags.LegProvisionCashSettlPaymentDate, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateType Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateType : IntField
    {
        public const int TAG = 40475;

        public LegProvisionCashSettlPaymentDateType()
            : base(Tags.LegProvisionCashSettlPaymentDateType) { }
        public LegProvisionCashSettlPaymentDateType(int val)
            : base(Tags.LegProvisionCashSettlPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegProvisionOptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 40476;

        public LegProvisionOptionExerciseBusinessDayConvention()
            : base(Tags.LegProvisionOptionExerciseBusinessDayConvention) { }
        public LegProvisionOptionExerciseBusinessDayConvention(int val)
            : base(Tags.LegProvisionOptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionOptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 40477;

        public LegProvisionOptionExerciseBusinessCenter()
            : base(Tags.LegProvisionOptionExerciseBusinessCenter) { }
        public LegProvisionOptionExerciseBusinessCenter(string val)
            : base(Tags.LegProvisionOptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 40478;

        public LegProvisionOptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.LegProvisionOptionExerciseEarliestDateOffsetPeriod) { }
        public LegProvisionOptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.LegProvisionOptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 40479;

        public LegProvisionOptionExerciseEarliestDateOffsetUnit()
            : base(Tags.LegProvisionOptionExerciseEarliestDateOffsetUnit) { }
        public LegProvisionOptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.LegProvisionOptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionOptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 40480;

        public LegProvisionOptionExerciseFrequencyPeriod()
            : base(Tags.LegProvisionOptionExerciseFrequencyPeriod) { }
        public LegProvisionOptionExerciseFrequencyPeriod(int val)
            : base(Tags.LegProvisionOptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 40481;

        public LegProvisionOptionExerciseFrequencyUnit()
            : base(Tags.LegProvisionOptionExerciseFrequencyUnit) { }
        public LegProvisionOptionExerciseFrequencyUnit(string val)
            : base(Tags.LegProvisionOptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 40482;

        public LegProvisionOptionExerciseStartDateUnadjusted()
            : base(Tags.LegProvisionOptionExerciseStartDateUnadjusted) { }
        public LegProvisionOptionExerciseStartDateUnadjusted(string val)
            : base(Tags.LegProvisionOptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 40483;

        public LegProvisionOptionExerciseStartDateRelativeTo()
            : base(Tags.LegProvisionOptionExerciseStartDateRelativeTo) { }
        public LegProvisionOptionExerciseStartDateRelativeTo(int val)
            : base(Tags.LegProvisionOptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 40484;

        public LegProvisionOptionExerciseStartDateOffsetPeriod()
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetPeriod) { }
        public LegProvisionOptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 40485;

        public LegProvisionOptionExerciseStartDateOffsetUnit()
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetUnit) { }
        public LegProvisionOptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 40486;

        public LegProvisionOptionExerciseStartDateOffsetDayType()
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetDayType) { }
        public LegProvisionOptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.LegProvisionOptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProvisionOptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 40487;

        public LegProvisionOptionExerciseStartDateAdjusted()
            : base(Tags.LegProvisionOptionExerciseStartDateAdjusted) { }
        public LegProvisionOptionExerciseStartDateAdjusted(string val)
            : base(Tags.LegProvisionOptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExercisePeriodSkip Field
    /// </summary>/
    public sealed class LegProvisionOptionExercisePeriodSkip : IntField
    {
        public const int TAG = 40488;

        public LegProvisionOptionExercisePeriodSkip()
            : base(Tags.LegProvisionOptionExercisePeriodSkip) { }
        public LegProvisionOptionExercisePeriodSkip(int val)
            : base(Tags.LegProvisionOptionExercisePeriodSkip, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 40489;

        public LegProvisionOptionExerciseBoundsFirstDateUnadjusted()
            : base(Tags.LegProvisionOptionExerciseBoundsFirstDateUnadjusted) { }
        public LegProvisionOptionExerciseBoundsFirstDateUnadjusted(string val)
            : base(Tags.LegProvisionOptionExerciseBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 40490;

        public LegProvisionOptionExerciseBoundsLastDateUnadjusted()
            : base(Tags.LegProvisionOptionExerciseBoundsLastDateUnadjusted) { }
        public LegProvisionOptionExerciseBoundsLastDateUnadjusted(string val)
            : base(Tags.LegProvisionOptionExerciseBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseEarliestTime : StringField
    {
        public const int TAG = 40491;

        public LegProvisionOptionExerciseEarliestTime()
            : base(Tags.LegProvisionOptionExerciseEarliestTime) { }
        public LegProvisionOptionExerciseEarliestTime(string val)
            : base(Tags.LegProvisionOptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseEarliestTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseEarliestTimeBusinessCenter : StringField
    {
        public const int TAG = 40492;

        public LegProvisionOptionExerciseEarliestTimeBusinessCenter()
            : base(Tags.LegProvisionOptionExerciseEarliestTimeBusinessCenter) { }
        public LegProvisionOptionExerciseEarliestTimeBusinessCenter(string val)
            : base(Tags.LegProvisionOptionExerciseEarliestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseLatestTime Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseLatestTime : StringField
    {
        public const int TAG = 40493;

        public LegProvisionOptionExerciseLatestTime()
            : base(Tags.LegProvisionOptionExerciseLatestTime) { }
        public LegProvisionOptionExerciseLatestTime(string val)
            : base(Tags.LegProvisionOptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseLatestTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseLatestTimeBusinessCenter : StringField
    {
        public const int TAG = 40494;

        public LegProvisionOptionExerciseLatestTimeBusinessCenter()
            : base(Tags.LegProvisionOptionExerciseLatestTimeBusinessCenter) { }
        public LegProvisionOptionExerciseLatestTimeBusinessCenter(string val)
            : base(Tags.LegProvisionOptionExerciseLatestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegProvisionOptionExerciseFixedDates Field
    /// </summary>/
    public sealed class NoLegProvisionOptionExerciseFixedDates : IntField
    {
        public const int TAG = 40495;

        public NoLegProvisionOptionExerciseFixedDates()
            : base(Tags.NoLegProvisionOptionExerciseFixedDates) { }
        public NoLegProvisionOptionExerciseFixedDates(int val)
            : base(Tags.NoLegProvisionOptionExerciseFixedDates, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseFixedDate Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseFixedDate : StringField
    {
        public const int TAG = 40496;

        public LegProvisionOptionExerciseFixedDate()
            : base(Tags.LegProvisionOptionExerciseFixedDate) { }
        public LegProvisionOptionExerciseFixedDate(string val)
            : base(Tags.LegProvisionOptionExerciseFixedDate, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExerciseFixedDateType Field
    /// </summary>/
    public sealed class LegProvisionOptionExerciseFixedDateType : IntField
    {
        public const int TAG = 40497;

        public LegProvisionOptionExerciseFixedDateType()
            : base(Tags.LegProvisionOptionExerciseFixedDateType) { }
        public LegProvisionOptionExerciseFixedDateType(int val)
            : base(Tags.LegProvisionOptionExerciseFixedDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegProvisionOptionExpirationDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateUnadjusted : StringField
    {
        public const int TAG = 40498;

        public LegProvisionOptionExpirationDateUnadjusted()
            : base(Tags.LegProvisionOptionExpirationDateUnadjusted) { }
        public LegProvisionOptionExpirationDateUnadjusted(string val)
            : base(Tags.LegProvisionOptionExpirationDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 40499;

        public LegProvisionOptionExpirationDateBusinessDayConvention()
            : base(Tags.LegProvisionOptionExpirationDateBusinessDayConvention) { }
        public LegProvisionOptionExpirationDateBusinessDayConvention(int val)
            : base(Tags.LegProvisionOptionExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionOptionExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 40500;

        public LegProvisionOptionExpirationDateBusinessCenter()
            : base(Tags.LegProvisionOptionExpirationDateBusinessCenter) { }
        public LegProvisionOptionExpirationDateBusinessCenter(string val)
            : base(Tags.LegProvisionOptionExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateRelativeTo : IntField
    {
        public const int TAG = 40501;

        public LegProvisionOptionExpirationDateRelativeTo()
            : base(Tags.LegProvisionOptionExpirationDateRelativeTo) { }
        public LegProvisionOptionExpirationDateRelativeTo(int val)
            : base(Tags.LegProvisionOptionExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 40502;

        public LegProvisionOptionExpirationDateOffsetPeriod()
            : base(Tags.LegProvisionOptionExpirationDateOffsetPeriod) { }
        public LegProvisionOptionExpirationDateOffsetPeriod(int val)
            : base(Tags.LegProvisionOptionExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 40503;

        public LegProvisionOptionExpirationDateOffsetUnit()
            : base(Tags.LegProvisionOptionExpirationDateOffsetUnit) { }
        public LegProvisionOptionExpirationDateOffsetUnit(string val)
            : base(Tags.LegProvisionOptionExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionOptionExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 40504;

        public LegProvisionOptionExpirationDateOffsetDayType()
            : base(Tags.LegProvisionOptionExpirationDateOffsetDayType) { }
        public LegProvisionOptionExpirationDateOffsetDayType(int val)
            : base(Tags.LegProvisionOptionExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProvisionOptionExpirationDateAdjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationDateAdjusted : StringField
    {
        public const int TAG = 40505;

        public LegProvisionOptionExpirationDateAdjusted()
            : base(Tags.LegProvisionOptionExpirationDateAdjusted) { }
        public LegProvisionOptionExpirationDateAdjusted(string val)
            : base(Tags.LegProvisionOptionExpirationDateAdjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationTime Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationTime : StringField
    {
        public const int TAG = 40506;

        public LegProvisionOptionExpirationTime()
            : base(Tags.LegProvisionOptionExpirationTime) { }
        public LegProvisionOptionExpirationTime(string val)
            : base(Tags.LegProvisionOptionExpirationTime, val) { }

    }


    /// <summary>
    /// LegProvisionOptionExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 40507;

        public LegProvisionOptionExpirationTimeBusinessCenter()
            : base(Tags.LegProvisionOptionExpirationTimeBusinessCenter) { }
        public LegProvisionOptionExpirationTimeBusinessCenter(string val)
            : base(Tags.LegProvisionOptionExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateUnadjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateUnadjusted : StringField
    {
        public const int TAG = 40508;

        public LegProvisionOptionRelevantUnderlyingDateUnadjusted()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateUnadjusted) { }
        public LegProvisionOptionRelevantUnderlyingDateUnadjusted(string val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40509;

        public LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention) { }
        public LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention(int val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateBusinessCenter : StringField
    {
        public const int TAG = 40510;

        public LegProvisionOptionRelevantUnderlyingDateBusinessCenter()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateBusinessCenter) { }
        public LegProvisionOptionRelevantUnderlyingDateBusinessCenter(string val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateRelativeTo Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateRelativeTo : IntField
    {
        public const int TAG = 40511;

        public LegProvisionOptionRelevantUnderlyingDateRelativeTo()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateRelativeTo) { }
        public LegProvisionOptionRelevantUnderlyingDateRelativeTo(int val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateOffsetPeriod : IntField
    {
        public const int TAG = 40512;

        public LegProvisionOptionRelevantUnderlyingDateOffsetPeriod()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetPeriod) { }
        public LegProvisionOptionRelevantUnderlyingDateOffsetPeriod(int val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateOffsetUnit : StringField
    {
        public const int TAG = 40513;

        public LegProvisionOptionRelevantUnderlyingDateOffsetUnit()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetUnit) { }
        public LegProvisionOptionRelevantUnderlyingDateOffsetUnit(string val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateOffsetDayType Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateOffsetDayType : IntField
    {
        public const int TAG = 40514;

        public LegProvisionOptionRelevantUnderlyingDateOffsetDayType()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetDayType) { }
        public LegProvisionOptionRelevantUnderlyingDateOffsetDayType(int val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProvisionOptionRelevantUnderlyingDateAdjusted Field
    /// </summary>/
    public sealed class LegProvisionOptionRelevantUnderlyingDateAdjusted : StringField
    {
        public const int TAG = 40515;

        public LegProvisionOptionRelevantUnderlyingDateAdjusted()
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateAdjusted) { }
        public LegProvisionOptionRelevantUnderlyingDateAdjusted(string val)
            : base(Tags.LegProvisionOptionRelevantUnderlyingDateAdjusted, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 40516;

        public LegProvisionCashSettlPaymentDateBusinessDayConvention()
            : base(Tags.LegProvisionCashSettlPaymentDateBusinessDayConvention) { }
        public LegProvisionCashSettlPaymentDateBusinessDayConvention(int val)
            : base(Tags.LegProvisionCashSettlPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 40517;

        public LegProvisionCashSettlPaymentDateBusinessCenter()
            : base(Tags.LegProvisionCashSettlPaymentDateBusinessCenter) { }
        public LegProvisionCashSettlPaymentDateBusinessCenter(string val)
            : base(Tags.LegProvisionCashSettlPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateRelativeTo : IntField
    {
        public const int TAG = 40518;

        public LegProvisionCashSettlPaymentDateRelativeTo()
            : base(Tags.LegProvisionCashSettlPaymentDateRelativeTo) { }
        public LegProvisionCashSettlPaymentDateRelativeTo(int val)
            : base(Tags.LegProvisionCashSettlPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 40519;

        public LegProvisionCashSettlPaymentDateOffsetPeriod()
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetPeriod) { }
        public LegProvisionCashSettlPaymentDateOffsetPeriod(int val)
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 40520;

        public LegProvisionCashSettlPaymentDateOffsetUnit()
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetUnit) { }
        public LegProvisionCashSettlPaymentDateOffsetUnit(string val)
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 40521;

        public LegProvisionCashSettlPaymentDateOffsetDayType()
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetDayType) { }
        public LegProvisionCashSettlPaymentDateOffsetDayType(int val)
            : base(Tags.LegProvisionCashSettlPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateRangeFirst Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateRangeFirst : StringField
    {
        public const int TAG = 40522;

        public LegProvisionCashSettlPaymentDateRangeFirst()
            : base(Tags.LegProvisionCashSettlPaymentDateRangeFirst) { }
        public LegProvisionCashSettlPaymentDateRangeFirst(string val)
            : base(Tags.LegProvisionCashSettlPaymentDateRangeFirst, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlPaymentDateRangeLast Field
    /// </summary>/
    public sealed class LegProvisionCashSettlPaymentDateRangeLast : StringField
    {
        public const int TAG = 40523;

        public LegProvisionCashSettlPaymentDateRangeLast()
            : base(Tags.LegProvisionCashSettlPaymentDateRangeLast) { }
        public LegProvisionCashSettlPaymentDateRangeLast(string val)
            : base(Tags.LegProvisionCashSettlPaymentDateRangeLast, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueTime Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueTime : StringField
    {
        public const int TAG = 40524;

        public LegProvisionCashSettlValueTime()
            : base(Tags.LegProvisionCashSettlValueTime) { }
        public LegProvisionCashSettlValueTime(string val)
            : base(Tags.LegProvisionCashSettlValueTime, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueTimeBusinessCenter : StringField
    {
        public const int TAG = 40525;

        public LegProvisionCashSettlValueTimeBusinessCenter()
            : base(Tags.LegProvisionCashSettlValueTimeBusinessCenter) { }
        public LegProvisionCashSettlValueTimeBusinessCenter(string val)
            : base(Tags.LegProvisionCashSettlValueTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateBusinessDayConvention : IntField
    {
        public const int TAG = 40526;

        public LegProvisionCashSettlValueDateBusinessDayConvention()
            : base(Tags.LegProvisionCashSettlValueDateBusinessDayConvention) { }
        public LegProvisionCashSettlValueDateBusinessDayConvention(int val)
            : base(Tags.LegProvisionCashSettlValueDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegProvisionCashSettlValueDateBusinessCenter Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateBusinessCenter : StringField
    {
        public const int TAG = 40527;

        public LegProvisionCashSettlValueDateBusinessCenter()
            : base(Tags.LegProvisionCashSettlValueDateBusinessCenter) { }
        public LegProvisionCashSettlValueDateBusinessCenter(string val)
            : base(Tags.LegProvisionCashSettlValueDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueDateRelativeTo Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateRelativeTo : IntField
    {
        public const int TAG = 40528;

        public LegProvisionCashSettlValueDateRelativeTo()
            : base(Tags.LegProvisionCashSettlValueDateRelativeTo) { }
        public LegProvisionCashSettlValueDateRelativeTo(int val)
            : base(Tags.LegProvisionCashSettlValueDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateOffsetPeriod : IntField
    {
        public const int TAG = 40529;

        public LegProvisionCashSettlValueDateOffsetPeriod()
            : base(Tags.LegProvisionCashSettlValueDateOffsetPeriod) { }
        public LegProvisionCashSettlValueDateOffsetPeriod(int val)
            : base(Tags.LegProvisionCashSettlValueDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlValueDateOffsetUnit Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateOffsetUnit : StringField
    {
        public const int TAG = 40530;

        public LegProvisionCashSettlValueDateOffsetUnit()
            : base(Tags.LegProvisionCashSettlValueDateOffsetUnit) { }
        public LegProvisionCashSettlValueDateOffsetUnit(string val)
            : base(Tags.LegProvisionCashSettlValueDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProvisionCashSettlValueDateOffsetDayType Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateOffsetDayType : IntField
    {
        public const int TAG = 40531;

        public LegProvisionCashSettlValueDateOffsetDayType()
            : base(Tags.LegProvisionCashSettlValueDateOffsetDayType) { }
        public LegProvisionCashSettlValueDateOffsetDayType(int val)
            : base(Tags.LegProvisionCashSettlValueDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProvisionCashSettlValueDateAdjusted Field
    /// </summary>/
    public sealed class LegProvisionCashSettlValueDateAdjusted : StringField
    {
        public const int TAG = 40532;

        public LegProvisionCashSettlValueDateAdjusted()
            : base(Tags.LegProvisionCashSettlValueDateAdjusted) { }
        public LegProvisionCashSettlValueDateAdjusted(string val)
            : base(Tags.LegProvisionCashSettlValueDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegProvisionPartyIDs Field
    /// </summary>/
    public sealed class NoLegProvisionPartyIDs : IntField
    {
        public const int TAG = 40533;

        public NoLegProvisionPartyIDs()
            : base(Tags.NoLegProvisionPartyIDs) { }
        public NoLegProvisionPartyIDs(int val)
            : base(Tags.NoLegProvisionPartyIDs, val) { }

    }


    /// <summary>
    /// LegProvisionPartyID Field
    /// </summary>/
    public sealed class LegProvisionPartyID : StringField
    {
        public const int TAG = 40534;

        public LegProvisionPartyID()
            : base(Tags.LegProvisionPartyID) { }
        public LegProvisionPartyID(string val)
            : base(Tags.LegProvisionPartyID, val) { }

    }


    /// <summary>
    /// LegProvisionPartyIDSource Field
    /// </summary>/
    public sealed class LegProvisionPartyIDSource : CharField
    {
        public const int TAG = 40535;

        public LegProvisionPartyIDSource()
            : base(Tags.LegProvisionPartyIDSource) { }
        public LegProvisionPartyIDSource(char val)
            : base(Tags.LegProvisionPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// LegProvisionPartyRole Field
    /// </summary>/
    public sealed class LegProvisionPartyRole : IntField
    {
        public const int TAG = 40536;

        public LegProvisionPartyRole()
            : base(Tags.LegProvisionPartyRole) { }
        public LegProvisionPartyRole(int val)
            : base(Tags.LegProvisionPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoLegProvisionPartySubIDs Field
    /// </summary>/
    public sealed class NoLegProvisionPartySubIDs : IntField
    {
        public const int TAG = 40537;

        public NoLegProvisionPartySubIDs()
            : base(Tags.NoLegProvisionPartySubIDs) { }
        public NoLegProvisionPartySubIDs(int val)
            : base(Tags.NoLegProvisionPartySubIDs, val) { }

    }


    /// <summary>
    /// LegProvisionPartySubID Field
    /// </summary>/
    public sealed class LegProvisionPartySubID : StringField
    {
        public const int TAG = 40538;

        public LegProvisionPartySubID()
            : base(Tags.LegProvisionPartySubID) { }
        public LegProvisionPartySubID(string val)
            : base(Tags.LegProvisionPartySubID, val) { }

    }


    /// <summary>
    /// LegProvisionPartySubIDType Field
    /// </summary>/
    public sealed class LegProvisionPartySubIDType : IntField
    {
        public const int TAG = 40539;

        public LegProvisionPartySubIDType()
            : base(Tags.LegProvisionPartySubIDType) { }
        public LegProvisionPartySubIDType(int val)
            : base(Tags.LegProvisionPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoUnderlyingStreams Field
    /// </summary>/
    public sealed class NoUnderlyingStreams : IntField
    {
        public const int TAG = 40540;

        public NoUnderlyingStreams()
            : base(Tags.NoUnderlyingStreams) { }
        public NoUnderlyingStreams(int val)
            : base(Tags.NoUnderlyingStreams, val) { }

    }


    /// <summary>
    /// UnderlyingStreamType Field
    /// </summary>/
    public sealed class UnderlyingStreamType : IntField
    {
        public const int TAG = 40541;

        public UnderlyingStreamType()
            : base(Tags.UnderlyingStreamType) { }
        public UnderlyingStreamType(int val)
            : base(Tags.UnderlyingStreamType, val) { }


        // Field Enumerations
        public const int PAYMENT = 0;
        public const int PHYSICAL_DELIVERY = 1;
    }


    /// <summary>
    /// UnderlyingStreamDesc Field
    /// </summary>/
    public sealed class UnderlyingStreamDesc : StringField
    {
        public const int TAG = 40542;

        public UnderlyingStreamDesc()
            : base(Tags.UnderlyingStreamDesc) { }
        public UnderlyingStreamDesc(string val)
            : base(Tags.UnderlyingStreamDesc, val) { }

    }


    /// <summary>
    /// UnderlyingStreamPaySide Field
    /// </summary>/
    public sealed class UnderlyingStreamPaySide : IntField
    {
        public const int TAG = 40543;

        public UnderlyingStreamPaySide()
            : base(Tags.UnderlyingStreamPaySide) { }
        public UnderlyingStreamPaySide(int val)
            : base(Tags.UnderlyingStreamPaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingStreamReceiveSide Field
    /// </summary>/
    public sealed class UnderlyingStreamReceiveSide : IntField
    {
        public const int TAG = 40544;

        public UnderlyingStreamReceiveSide()
            : base(Tags.UnderlyingStreamReceiveSide) { }
        public UnderlyingStreamReceiveSide(int val)
            : base(Tags.UnderlyingStreamReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingStreamNotional Field
    /// </summary>/
    public sealed class UnderlyingStreamNotional : DecimalField
    {
        public const int TAG = 40545;

        public UnderlyingStreamNotional()
            : base(Tags.UnderlyingStreamNotional) { }
        public UnderlyingStreamNotional(Decimal val)
            : base(Tags.UnderlyingStreamNotional, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCurrency Field
    /// </summary>/
    public sealed class UnderlyingStreamCurrency : StringField
    {
        public const int TAG = 40546;

        public UnderlyingStreamCurrency()
            : base(Tags.UnderlyingStreamCurrency) { }
        public UnderlyingStreamCurrency(string val)
            : base(Tags.UnderlyingStreamCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingStreamText Field
    /// </summary>/
    public sealed class UnderlyingStreamText : StringField
    {
        public const int TAG = 40547;

        public UnderlyingStreamText()
            : base(Tags.UnderlyingStreamText) { }
        public UnderlyingStreamText(string val)
            : base(Tags.UnderlyingStreamText, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTerminationDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateUnadjusted : StringField
    {
        public const int TAG = 40548;

        public UnderlyingStreamTerminationDateUnadjusted()
            : base(Tags.UnderlyingStreamTerminationDateUnadjusted) { }
        public UnderlyingStreamTerminationDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamTerminationDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTerminationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateBusinessDayConvention : IntField
    {
        public const int TAG = 40549;

        public UnderlyingStreamTerminationDateBusinessDayConvention()
            : base(Tags.UnderlyingStreamTerminationDateBusinessDayConvention) { }
        public UnderlyingStreamTerminationDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingStreamTerminationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingStreamTerminationDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateBusinessCenter : StringField
    {
        public const int TAG = 40550;

        public UnderlyingStreamTerminationDateBusinessCenter()
            : base(Tags.UnderlyingStreamTerminationDateBusinessCenter) { }
        public UnderlyingStreamTerminationDateBusinessCenter(string val)
            : base(Tags.UnderlyingStreamTerminationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTerminationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateRelativeTo : IntField
    {
        public const int TAG = 40551;

        public UnderlyingStreamTerminationDateRelativeTo()
            : base(Tags.UnderlyingStreamTerminationDateRelativeTo) { }
        public UnderlyingStreamTerminationDateRelativeTo(int val)
            : base(Tags.UnderlyingStreamTerminationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTerminationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateOffsetPeriod : IntField
    {
        public const int TAG = 40552;

        public UnderlyingStreamTerminationDateOffsetPeriod()
            : base(Tags.UnderlyingStreamTerminationDateOffsetPeriod) { }
        public UnderlyingStreamTerminationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingStreamTerminationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTerminationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateOffsetUnit : StringField
    {
        public const int TAG = 40553;

        public UnderlyingStreamTerminationDateOffsetUnit()
            : base(Tags.UnderlyingStreamTerminationDateOffsetUnit) { }
        public UnderlyingStreamTerminationDateOffsetUnit(string val)
            : base(Tags.UnderlyingStreamTerminationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingStreamTerminationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateOffsetDayType : IntField
    {
        public const int TAG = 40554;

        public UnderlyingStreamTerminationDateOffsetDayType()
            : base(Tags.UnderlyingStreamTerminationDateOffsetDayType) { }
        public UnderlyingStreamTerminationDateOffsetDayType(int val)
            : base(Tags.UnderlyingStreamTerminationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingStreamTerminationDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamTerminationDateAdjusted : StringField
    {
        public const int TAG = 40555;

        public UnderlyingStreamTerminationDateAdjusted()
            : base(Tags.UnderlyingStreamTerminationDateAdjusted) { }
        public UnderlyingStreamTerminationDateAdjusted(string val)
            : base(Tags.UnderlyingStreamTerminationDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 40556;

        public UnderlyingStreamCalculationPeriodBusinessDayConvention()
            : base(Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention) { }
        public UnderlyingStreamCalculationPeriodBusinessDayConvention(int val)
            : base(Tags.UnderlyingStreamCalculationPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodBusinessCenter : StringField
    {
        public const int TAG = 40557;

        public UnderlyingStreamCalculationPeriodBusinessCenter()
            : base(Tags.UnderlyingStreamCalculationPeriodBusinessCenter) { }
        public UnderlyingStreamCalculationPeriodBusinessCenter(string val)
            : base(Tags.UnderlyingStreamCalculationPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingStreamFirstPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40558;

        public UnderlyingStreamFirstPeriodStartDateUnadjusted()
            : base(Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted) { }
        public UnderlyingStreamFirstPeriodStartDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamFirstPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamFirstPeriodStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstPeriodStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 40559;

        public UnderlyingStreamFirstPeriodStartDateBusinessDayConvention()
            : base(Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention) { }
        public UnderlyingStreamFirstPeriodStartDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingStreamFirstPeriodStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingStreamFirstPeriodStartDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstPeriodStartDateBusinessCenter : StringField
    {
        public const int TAG = 40560;

        public UnderlyingStreamFirstPeriodStartDateBusinessCenter()
            : base(Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter) { }
        public UnderlyingStreamFirstPeriodStartDateBusinessCenter(string val)
            : base(Tags.UnderlyingStreamFirstPeriodStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingStreamFirstPeriodStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstPeriodStartDateAdjusted : StringField
    {
        public const int TAG = 40561;

        public UnderlyingStreamFirstPeriodStartDateAdjusted()
            : base(Tags.UnderlyingStreamFirstPeriodStartDateAdjusted) { }
        public UnderlyingStreamFirstPeriodStartDateAdjusted(string val)
            : base(Tags.UnderlyingStreamFirstPeriodStartDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamFirstRegularPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstRegularPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 40562;

        public UnderlyingStreamFirstRegularPeriodStartDateUnadjusted()
            : base(Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted) { }
        public UnderlyingStreamFirstRegularPeriodStartDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamFirstRegularPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40563;

        public UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted()
            : base(Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted) { }
        public UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamLastRegularPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamLastRegularPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 40564;

        public UnderlyingStreamLastRegularPeriodEndDateUnadjusted()
            : base(Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted) { }
        public UnderlyingStreamLastRegularPeriodEndDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamLastRegularPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationFrequencyPeriod : IntField
    {
        public const int TAG = 40565;

        public UnderlyingStreamCalculationFrequencyPeriod()
            : base(Tags.UnderlyingStreamCalculationFrequencyPeriod) { }
        public UnderlyingStreamCalculationFrequencyPeriod(int val)
            : base(Tags.UnderlyingStreamCalculationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationFrequencyUnit : StringField
    {
        public const int TAG = 40566;

        public UnderlyingStreamCalculationFrequencyUnit()
            : base(Tags.UnderlyingStreamCalculationFrequencyUnit) { }
        public UnderlyingStreamCalculationFrequencyUnit(string val)
            : base(Tags.UnderlyingStreamCalculationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingStreamCalculationRollConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationRollConvention : StringField
    {
        public const int TAG = 40567;

        public UnderlyingStreamCalculationRollConvention()
            : base(Tags.UnderlyingStreamCalculationRollConvention) { }
        public UnderlyingStreamCalculationRollConvention(string val)
            : base(Tags.UnderlyingStreamCalculationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingPaymentStreamType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamType : IntField
    {
        public const int TAG = 40568;

        public UnderlyingPaymentStreamType()
            : base(Tags.UnderlyingPaymentStreamType) { }
        public UnderlyingPaymentStreamType(int val)
            : base(Tags.UnderlyingPaymentStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
        public const int DIVIDEND = 3;
        public const int INTEREST = 4;
        public const int DIVIDEND_RETURN = 5;
        public const int PRICE_RETURN = 6;
        public const int TOTAL_RETURN = 7;
        public const int VARIANCE = 8;
        public const int CORRELATION = 9;
    }


    /// <summary>
    /// UnderlyingPaymentStreamMarketRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMarketRate : IntField
    {
        public const int TAG = 40569;

        public UnderlyingPaymentStreamMarketRate()
            : base(Tags.UnderlyingPaymentStreamMarketRate) { }
        public UnderlyingPaymentStreamMarketRate(int val)
            : base(Tags.UnderlyingPaymentStreamMarketRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamDelayIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDelayIndicator : BooleanField
    {
        public const int TAG = 40570;

        public UnderlyingPaymentStreamDelayIndicator()
            : base(Tags.UnderlyingPaymentStreamDelayIndicator) { }
        public UnderlyingPaymentStreamDelayIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamDelayIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamSettlCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamSettlCurrency : StringField
    {
        public const int TAG = 40571;

        public UnderlyingPaymentStreamSettlCurrency()
            : base(Tags.UnderlyingPaymentStreamSettlCurrency) { }
        public UnderlyingPaymentStreamSettlCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamSettlCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamDayCount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDayCount : IntField
    {
        public const int TAG = 40572;

        public UnderlyingPaymentStreamDayCount()
            : base(Tags.UnderlyingPaymentStreamDayCount) { }
        public UnderlyingPaymentStreamDayCount(int val)
            : base(Tags.UnderlyingPaymentStreamDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStreamAccrualDays Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamAccrualDays : IntField
    {
        public const int TAG = 40573;

        public UnderlyingPaymentStreamAccrualDays()
            : base(Tags.UnderlyingPaymentStreamAccrualDays) { }
        public UnderlyingPaymentStreamAccrualDays(int val)
            : base(Tags.UnderlyingPaymentStreamAccrualDays, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamDiscountType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDiscountType : IntField
    {
        public const int TAG = 40574;

        public UnderlyingPaymentStreamDiscountType()
            : base(Tags.UnderlyingPaymentStreamDiscountType) { }
        public UnderlyingPaymentStreamDiscountType(int val)
            : base(Tags.UnderlyingPaymentStreamDiscountType, val) { }


        // Field Enumerations
        public const int STANDARD = 0;
        public const int FORWARD_RATE_AGREEMENT = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamDiscountRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDiscountRate : DecimalField
    {
        public const int TAG = 40575;

        public UnderlyingPaymentStreamDiscountRate()
            : base(Tags.UnderlyingPaymentStreamDiscountRate) { }
        public UnderlyingPaymentStreamDiscountRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamDiscountRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamDiscountRateDayCount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDiscountRateDayCount : IntField
    {
        public const int TAG = 40576;

        public UnderlyingPaymentStreamDiscountRateDayCount()
            : base(Tags.UnderlyingPaymentStreamDiscountRateDayCount) { }
        public UnderlyingPaymentStreamDiscountRateDayCount(int val)
            : base(Tags.UnderlyingPaymentStreamDiscountRateDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingMethod : IntField
    {
        public const int TAG = 40577;

        public UnderlyingPaymentStreamCompoundingMethod()
            : base(Tags.UnderlyingPaymentStreamCompoundingMethod) { }
        public UnderlyingPaymentStreamCompoundingMethod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40578;

        public UnderlyingPaymentStreamInitialPrincipalExchangeIndicator()
            : base(Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator) { }
        public UnderlyingPaymentStreamInitialPrincipalExchangeIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamInitialPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInterimPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInterimPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40579;

        public UnderlyingPaymentStreamInterimPrincipalExchangeIndicator()
            : base(Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator) { }
        public UnderlyingPaymentStreamInterimPrincipalExchangeIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamInterimPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40580;

        public UnderlyingPaymentStreamFinalPrincipalExchangeIndicator()
            : base(Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator) { }
        public UnderlyingPaymentStreamFinalPrincipalExchangeIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamFinalPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 40581;

        public UnderlyingPaymentStreamPaymentDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention) { }
        public UnderlyingPaymentStreamPaymentDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 40582;

        public UnderlyingPaymentStreamPaymentDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter) { }
        public UnderlyingPaymentStreamPaymentDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentFrequencyPeriod : IntField
    {
        public const int TAG = 40583;

        public UnderlyingPaymentStreamPaymentFrequencyPeriod()
            : base(Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod) { }
        public UnderlyingPaymentStreamPaymentFrequencyPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentFrequencyUnit : StringField
    {
        public const int TAG = 40584;

        public UnderlyingPaymentStreamPaymentFrequencyUnit()
            : base(Tags.UnderlyingPaymentStreamPaymentFrequencyUnit) { }
        public UnderlyingPaymentStreamPaymentFrequencyUnit(string val)
            : base(Tags.UnderlyingPaymentStreamPaymentFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentRollConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentRollConvention : StringField
    {
        public const int TAG = 40585;

        public UnderlyingPaymentStreamPaymentRollConvention()
            : base(Tags.UnderlyingPaymentStreamPaymentRollConvention) { }
        public UnderlyingPaymentStreamPaymentRollConvention(string val)
            : base(Tags.UnderlyingPaymentStreamPaymentRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40586;

        public UnderlyingPaymentStreamFirstPaymentDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted) { }
        public UnderlyingPaymentStreamFirstPaymentDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFirstPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40587;

        public UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted) { }
        public UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateRelativeTo : IntField
    {
        public const int TAG = 40588;

        public UnderlyingPaymentStreamPaymentDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamPaymentDateRelativeTo) { }
        public UnderlyingPaymentStreamPaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 40589;

        public UnderlyingPaymentStreamPaymentDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod) { }
        public UnderlyingPaymentStreamPaymentDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 40590;

        public UnderlyingPaymentStreamPaymentDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit) { }
        public UnderlyingPaymentStreamPaymentDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 40591;

        public UnderlyingPaymentStreamPaymentDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType) { }
        public UnderlyingPaymentStreamPaymentDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamResetDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetDateRelativeTo : IntField
    {
        public const int TAG = 40592;

        public UnderlyingPaymentStreamResetDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamResetDateRelativeTo) { }
        public UnderlyingPaymentStreamResetDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamResetDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamResetDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetDateBusinessDayConvention : IntField
    {
        public const int TAG = 40593;

        public UnderlyingPaymentStreamResetDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention) { }
        public UnderlyingPaymentStreamResetDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamResetDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamResetDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetDateBusinessCenter : StringField
    {
        public const int TAG = 40594;

        public UnderlyingPaymentStreamResetDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamResetDateBusinessCenter) { }
        public UnderlyingPaymentStreamResetDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamResetDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamResetFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetFrequencyPeriod : IntField
    {
        public const int TAG = 40595;

        public UnderlyingPaymentStreamResetFrequencyPeriod()
            : base(Tags.UnderlyingPaymentStreamResetFrequencyPeriod) { }
        public UnderlyingPaymentStreamResetFrequencyPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamResetFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamResetFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetFrequencyUnit : StringField
    {
        public const int TAG = 40596;

        public UnderlyingPaymentStreamResetFrequencyUnit()
            : base(Tags.UnderlyingPaymentStreamResetFrequencyUnit) { }
        public UnderlyingPaymentStreamResetFrequencyUnit(string val)
            : base(Tags.UnderlyingPaymentStreamResetFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingPaymentStreamResetWeeklyRollConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamResetWeeklyRollConvention : StringField
    {
        public const int TAG = 40597;

        public UnderlyingPaymentStreamResetWeeklyRollConvention()
            : base(Tags.UnderlyingPaymentStreamResetWeeklyRollConvention) { }
        public UnderlyingPaymentStreamResetWeeklyRollConvention(string val)
            : base(Tags.UnderlyingPaymentStreamResetWeeklyRollConvention, val) { }


        // Field Enumerations
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateRelativeTo : IntField
    {
        public const int TAG = 40598;

        public UnderlyingPaymentStreamInitialFixingDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo) { }
        public UnderlyingPaymentStreamInitialFixingDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40599;

        public UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention) { }
        public UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40600;

        public UnderlyingPaymentStreamInitialFixingDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter) { }
        public UnderlyingPaymentStreamInitialFixingDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40601;

        public UnderlyingPaymentStreamInitialFixingDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod) { }
        public UnderlyingPaymentStreamInitialFixingDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40602;

        public UnderlyingPaymentStreamInitialFixingDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit) { }
        public UnderlyingPaymentStreamInitialFixingDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40603;

        public UnderlyingPaymentStreamInitialFixingDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType) { }
        public UnderlyingPaymentStreamInitialFixingDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialFixingDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialFixingDateAdjusted : StringField
    {
        public const int TAG = 40604;

        public UnderlyingPaymentStreamInitialFixingDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted) { }
        public UnderlyingPaymentStreamInitialFixingDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamInitialFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateRelativeTo : IntField
    {
        public const int TAG = 40605;

        public UnderlyingPaymentStreamFixingDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamFixingDateRelativeTo) { }
        public UnderlyingPaymentStreamFixingDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40606;

        public UnderlyingPaymentStreamFixingDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention) { }
        public UnderlyingPaymentStreamFixingDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40607;

        public UnderlyingPaymentStreamFixingDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamFixingDateBusinessCenter) { }
        public UnderlyingPaymentStreamFixingDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40608;

        public UnderlyingPaymentStreamFixingDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod) { }
        public UnderlyingPaymentStreamFixingDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40609;

        public UnderlyingPaymentStreamFixingDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetUnit) { }
        public UnderlyingPaymentStreamFixingDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40610;

        public UnderlyingPaymentStreamFixingDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetDayType) { }
        public UnderlyingPaymentStreamFixingDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateAdjusted : StringField
    {
        public const int TAG = 40611;

        public UnderlyingPaymentStreamFixingDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamFixingDateAdjusted) { }
        public UnderlyingPaymentStreamFixingDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateCutoffDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateCutoffDateOffsetPeriod : IntField
    {
        public const int TAG = 40612;

        public UnderlyingPaymentStreamRateCutoffDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod) { }
        public UnderlyingPaymentStreamRateCutoffDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateCutoffDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateCutoffDateOffsetUnit : StringField
    {
        public const int TAG = 40613;

        public UnderlyingPaymentStreamRateCutoffDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit) { }
        public UnderlyingPaymentStreamRateCutoffDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateCutoffDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateCutoffDateOffsetDayType : IntField
    {
        public const int TAG = 40614;

        public UnderlyingPaymentStreamRateCutoffDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType) { }
        public UnderlyingPaymentStreamRateCutoffDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamRateCutoffDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRate : DecimalField
    {
        public const int TAG = 40615;

        public UnderlyingPaymentStreamRate()
            : base(Tags.UnderlyingPaymentStreamRate) { }
        public UnderlyingPaymentStreamRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixedAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixedAmount : DecimalField
    {
        public const int TAG = 40616;

        public UnderlyingPaymentStreamFixedAmount()
            : base(Tags.UnderlyingPaymentStreamFixedAmount) { }
        public UnderlyingPaymentStreamFixedAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamFixedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateOrAmountCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateOrAmountCurrency : StringField
    {
        public const int TAG = 40617;

        public UnderlyingPaymentStreamRateOrAmountCurrency()
            : base(Tags.UnderlyingPaymentStreamRateOrAmountCurrency) { }
        public UnderlyingPaymentStreamRateOrAmountCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamRateOrAmountCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFutureValueNotional Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFutureValueNotional : DecimalField
    {
        public const int TAG = 40618;

        public UnderlyingPaymentStreamFutureValueNotional()
            : base(Tags.UnderlyingPaymentStreamFutureValueNotional) { }
        public UnderlyingPaymentStreamFutureValueNotional(Decimal val)
            : base(Tags.UnderlyingPaymentStreamFutureValueNotional, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFutureValueDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFutureValueDateAdjusted : StringField
    {
        public const int TAG = 40619;

        public UnderlyingPaymentStreamFutureValueDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamFutureValueDateAdjusted) { }
        public UnderlyingPaymentStreamFutureValueDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFutureValueDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndex Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndex : StringField
    {
        public const int TAG = 40620;

        public UnderlyingPaymentStreamRateIndex()
            : base(Tags.UnderlyingPaymentStreamRateIndex) { }
        public UnderlyingPaymentStreamRateIndex(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndex, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexSource : IntField
    {
        public const int TAG = 40621;

        public UnderlyingPaymentStreamRateIndexSource()
            : base(Tags.UnderlyingPaymentStreamRateIndexSource) { }
        public UnderlyingPaymentStreamRateIndexSource(int val)
            : base(Tags.UnderlyingPaymentStreamRateIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexCurveUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexCurveUnit : StringField
    {
        public const int TAG = 40622;

        public UnderlyingPaymentStreamRateIndexCurveUnit()
            : base(Tags.UnderlyingPaymentStreamRateIndexCurveUnit) { }
        public UnderlyingPaymentStreamRateIndexCurveUnit(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexCurvePeriod : IntField
    {
        public const int TAG = 40623;

        public UnderlyingPaymentStreamRateIndexCurvePeriod()
            : base(Tags.UnderlyingPaymentStreamRateIndexCurvePeriod) { }
        public UnderlyingPaymentStreamRateIndexCurvePeriod(int val)
            : base(Tags.UnderlyingPaymentStreamRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateMultiplier : DecimalField
    {
        public const int TAG = 40624;

        public UnderlyingPaymentStreamRateMultiplier()
            : base(Tags.UnderlyingPaymentStreamRateMultiplier) { }
        public UnderlyingPaymentStreamRateMultiplier(Decimal val)
            : base(Tags.UnderlyingPaymentStreamRateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateSpread : DecimalField
    {
        public const int TAG = 40625;

        public UnderlyingPaymentStreamRateSpread()
            : base(Tags.UnderlyingPaymentStreamRateSpread) { }
        public UnderlyingPaymentStreamRateSpread(Decimal val)
            : base(Tags.UnderlyingPaymentStreamRateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateSpreadPositionType : IntField
    {
        public const int TAG = 40626;

        public UnderlyingPaymentStreamRateSpreadPositionType()
            : base(Tags.UnderlyingPaymentStreamRateSpreadPositionType) { }
        public UnderlyingPaymentStreamRateSpreadPositionType(int val)
            : base(Tags.UnderlyingPaymentStreamRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateTreatment : IntField
    {
        public const int TAG = 40627;

        public UnderlyingPaymentStreamRateTreatment()
            : base(Tags.UnderlyingPaymentStreamRateTreatment) { }
        public UnderlyingPaymentStreamRateTreatment(int val)
            : base(Tags.UnderlyingPaymentStreamRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCapRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCapRate : DecimalField
    {
        public const int TAG = 40628;

        public UnderlyingPaymentStreamCapRate()
            : base(Tags.UnderlyingPaymentStreamCapRate) { }
        public UnderlyingPaymentStreamCapRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCapRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCapRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCapRateBuySide : IntField
    {
        public const int TAG = 40629;

        public UnderlyingPaymentStreamCapRateBuySide()
            : base(Tags.UnderlyingPaymentStreamCapRateBuySide) { }
        public UnderlyingPaymentStreamCapRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStreamCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCapRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCapRateSellSide : IntField
    {
        public const int TAG = 40630;

        public UnderlyingPaymentStreamCapRateSellSide()
            : base(Tags.UnderlyingPaymentStreamCapRateSellSide) { }
        public UnderlyingPaymentStreamCapRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStreamCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFloorRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFloorRate : DecimalField
    {
        public const int TAG = 40631;

        public UnderlyingPaymentStreamFloorRate()
            : base(Tags.UnderlyingPaymentStreamFloorRate) { }
        public UnderlyingPaymentStreamFloorRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamFloorRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFloorRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFloorRateBuySide : IntField
    {
        public const int TAG = 40632;

        public UnderlyingPaymentStreamFloorRateBuySide()
            : base(Tags.UnderlyingPaymentStreamFloorRateBuySide) { }
        public UnderlyingPaymentStreamFloorRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStreamFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFloorRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFloorRateSellSide : IntField
    {
        public const int TAG = 40633;

        public UnderlyingPaymentStreamFloorRateSellSide()
            : base(Tags.UnderlyingPaymentStreamFloorRateSellSide) { }
        public UnderlyingPaymentStreamFloorRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStreamFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInitialRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInitialRate : DecimalField
    {
        public const int TAG = 40634;

        public UnderlyingPaymentStreamInitialRate()
            : base(Tags.UnderlyingPaymentStreamInitialRate) { }
        public UnderlyingPaymentStreamInitialRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamInitialRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalRateRoundingDirection : CharField
    {
        public const int TAG = 40635;

        public UnderlyingPaymentStreamFinalRateRoundingDirection()
            : base(Tags.UnderlyingPaymentStreamFinalRateRoundingDirection) { }
        public UnderlyingPaymentStreamFinalRateRoundingDirection(char val)
            : base(Tags.UnderlyingPaymentStreamFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalRatePrecision Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalRatePrecision : IntField
    {
        public const int TAG = 40636;

        public UnderlyingPaymentStreamFinalRatePrecision()
            : base(Tags.UnderlyingPaymentStreamFinalRatePrecision) { }
        public UnderlyingPaymentStreamFinalRatePrecision(int val)
            : base(Tags.UnderlyingPaymentStreamFinalRatePrecision, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamAveragingMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamAveragingMethod : IntField
    {
        public const int TAG = 40637;

        public UnderlyingPaymentStreamAveragingMethod()
            : base(Tags.UnderlyingPaymentStreamAveragingMethod) { }
        public UnderlyingPaymentStreamAveragingMethod(int val)
            : base(Tags.UnderlyingPaymentStreamAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamNegativeRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNegativeRateTreatment : IntField
    {
        public const int TAG = 40638;

        public UnderlyingPaymentStreamNegativeRateTreatment()
            : base(Tags.UnderlyingPaymentStreamNegativeRateTreatment) { }
        public UnderlyingPaymentStreamNegativeRateTreatment(int val)
            : base(Tags.UnderlyingPaymentStreamNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationLagPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationLagPeriod : IntField
    {
        public const int TAG = 40639;

        public UnderlyingPaymentStreamInflationLagPeriod()
            : base(Tags.UnderlyingPaymentStreamInflationLagPeriod) { }
        public UnderlyingPaymentStreamInflationLagPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamInflationLagPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationLagUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationLagUnit : StringField
    {
        public const int TAG = 40640;

        public UnderlyingPaymentStreamInflationLagUnit()
            : base(Tags.UnderlyingPaymentStreamInflationLagUnit) { }
        public UnderlyingPaymentStreamInflationLagUnit(string val)
            : base(Tags.UnderlyingPaymentStreamInflationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationLagDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationLagDayType : IntField
    {
        public const int TAG = 40641;

        public UnderlyingPaymentStreamInflationLagDayType()
            : base(Tags.UnderlyingPaymentStreamInflationLagDayType) { }
        public UnderlyingPaymentStreamInflationLagDayType(int val)
            : base(Tags.UnderlyingPaymentStreamInflationLagDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationInterpolationMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationInterpolationMethod : IntField
    {
        public const int TAG = 40642;

        public UnderlyingPaymentStreamInflationInterpolationMethod()
            : base(Tags.UnderlyingPaymentStreamInflationInterpolationMethod) { }
        public UnderlyingPaymentStreamInflationInterpolationMethod(int val)
            : base(Tags.UnderlyingPaymentStreamInflationInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationIndexSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationIndexSource : IntField
    {
        public const int TAG = 40643;

        public UnderlyingPaymentStreamInflationIndexSource()
            : base(Tags.UnderlyingPaymentStreamInflationIndexSource) { }
        public UnderlyingPaymentStreamInflationIndexSource(int val)
            : base(Tags.UnderlyingPaymentStreamInflationIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationPublicationSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationPublicationSource : StringField
    {
        public const int TAG = 40644;

        public UnderlyingPaymentStreamInflationPublicationSource()
            : base(Tags.UnderlyingPaymentStreamInflationPublicationSource) { }
        public UnderlyingPaymentStreamInflationPublicationSource(string val)
            : base(Tags.UnderlyingPaymentStreamInflationPublicationSource, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationInitialIndexLevel Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationInitialIndexLevel : DecimalField
    {
        public const int TAG = 40645;

        public UnderlyingPaymentStreamInflationInitialIndexLevel()
            : base(Tags.UnderlyingPaymentStreamInflationInitialIndexLevel) { }
        public UnderlyingPaymentStreamInflationInitialIndexLevel(Decimal val)
            : base(Tags.UnderlyingPaymentStreamInflationInitialIndexLevel, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInflationFallbackBondApplicable Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInflationFallbackBondApplicable : BooleanField
    {
        public const int TAG = 40646;

        public UnderlyingPaymentStreamInflationFallbackBondApplicable()
            : base(Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable) { }
        public UnderlyingPaymentStreamInflationFallbackBondApplicable(Boolean val)
            : base(Tags.UnderlyingPaymentStreamInflationFallbackBondApplicable, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFRADiscounting Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFRADiscounting : IntField
    {
        public const int TAG = 40647;

        public UnderlyingPaymentStreamFRADiscounting()
            : base(Tags.UnderlyingPaymentStreamFRADiscounting) { }
        public UnderlyingPaymentStreamFRADiscounting(int val)
            : base(Tags.UnderlyingPaymentStreamFRADiscounting, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int INTERNATIONAL_SWAPS_AND_DERIVATIVES_ASSOCIATION = 1;
        public const int AUSTRALIAN_FINANCIAL_MARKETS_ASSOCIATION = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableRefCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableRefCurrency : StringField
    {
        public const int TAG = 40648;

        public UnderlyingPaymentStreamNonDeliverableRefCurrency()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency) { }
        public UnderlyingPaymentStreamNonDeliverableRefCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableRefCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40649;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter : StringField
    {
        public const int TAG = 40650;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo : IntField
    {
        public const int TAG = 40651;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod : IntField
    {
        public const int TAG = 40652;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit : StringField
    {
        public const int TAG = 40653;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType : IntField
    {
        public const int TAG = 40654;

        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType) { }
        public UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// SettlRateFallbackReferencePage Field
    /// </summary>/
    public sealed class SettlRateFallbackReferencePage : StringField
    {
        public const int TAG = 40655;

        public SettlRateFallbackReferencePage()
            : base(Tags.SettlRateFallbackReferencePage) { }
        public SettlRateFallbackReferencePage(string val)
            : base(Tags.SettlRateFallbackReferencePage, val) { }

    }


    /// <summary>
    /// NoUnderlyingNonDeliverableFixingDates Field
    /// </summary>/
    public sealed class NoUnderlyingNonDeliverableFixingDates : IntField
    {
        public const int TAG = 40656;

        public NoUnderlyingNonDeliverableFixingDates()
            : base(Tags.NoUnderlyingNonDeliverableFixingDates) { }
        public NoUnderlyingNonDeliverableFixingDates(int val)
            : base(Tags.NoUnderlyingNonDeliverableFixingDates, val) { }

    }


    /// <summary>
    /// UnderlyingNonDeliverableFixingDate Field
    /// </summary>/
    public sealed class UnderlyingNonDeliverableFixingDate : StringField
    {
        public const int TAG = 40657;

        public UnderlyingNonDeliverableFixingDate()
            : base(Tags.UnderlyingNonDeliverableFixingDate) { }
        public UnderlyingNonDeliverableFixingDate(string val)
            : base(Tags.UnderlyingNonDeliverableFixingDate, val) { }

    }


    /// <summary>
    /// UnderlyingNonDeliverableFixingDateType Field
    /// </summary>/
    public sealed class UnderlyingNonDeliverableFixingDateType : IntField
    {
        public const int TAG = 40658;

        public UnderlyingNonDeliverableFixingDateType()
            : base(Tags.UnderlyingNonDeliverableFixingDateType) { }
        public UnderlyingNonDeliverableFixingDateType(int val)
            : base(Tags.UnderlyingNonDeliverableFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoUnderlyingSettlRateFallbacks Field
    /// </summary>/
    public sealed class NoUnderlyingSettlRateFallbacks : IntField
    {
        public const int TAG = 40659;

        public NoUnderlyingSettlRateFallbacks()
            : base(Tags.NoUnderlyingSettlRateFallbacks) { }
        public NoUnderlyingSettlRateFallbacks(int val)
            : base(Tags.NoUnderlyingSettlRateFallbacks, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRatePostponementMaximumDays Field
    /// </summary>/
    public sealed class UnderlyingSettlRatePostponementMaximumDays : IntField
    {
        public const int TAG = 40660;

        public UnderlyingSettlRatePostponementMaximumDays()
            : base(Tags.UnderlyingSettlRatePostponementMaximumDays) { }
        public UnderlyingSettlRatePostponementMaximumDays(int val)
            : base(Tags.UnderlyingSettlRatePostponementMaximumDays, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableSettlRateSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableSettlRateSource : IntField
    {
        public const int TAG = 40661;

        public UnderlyingPaymentStreamNonDeliverableSettlRateSource()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource) { }
        public UnderlyingPaymentStreamNonDeliverableSettlRateSource(int val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableSettlRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// UnderlyingSettlRatePostponementSurvey Field
    /// </summary>/
    public sealed class UnderlyingSettlRatePostponementSurvey : BooleanField
    {
        public const int TAG = 40662;

        public UnderlyingSettlRatePostponementSurvey()
            : base(Tags.UnderlyingSettlRatePostponementSurvey) { }
        public UnderlyingSettlRatePostponementSurvey(Boolean val)
            : base(Tags.UnderlyingSettlRatePostponementSurvey, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRatePostponementCalculationAgent Field
    /// </summary>/
    public sealed class UnderlyingSettlRatePostponementCalculationAgent : IntField
    {
        public const int TAG = 40663;

        public UnderlyingSettlRatePostponementCalculationAgent()
            : base(Tags.UnderlyingSettlRatePostponementCalculationAgent) { }
        public UnderlyingSettlRatePostponementCalculationAgent(int val)
            : base(Tags.UnderlyingSettlRatePostponementCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// NoUnderlyingPaymentSchedules Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentSchedules : IntField
    {
        public const int TAG = 40664;

        public NoUnderlyingPaymentSchedules()
            : base(Tags.NoUnderlyingPaymentSchedules) { }
        public NoUnderlyingPaymentSchedules(int val)
            : base(Tags.NoUnderlyingPaymentSchedules, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleType : IntField
    {
        public const int TAG = 40665;

        public UnderlyingPaymentScheduleType()
            : base(Tags.UnderlyingPaymentScheduleType) { }
        public UnderlyingPaymentScheduleType(int val)
            : base(Tags.UnderlyingPaymentScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int CASH_FLOW = 1;
        public const int FX_LINKED_NOTIONAL = 2;
        public const int FIXED_RATE = 3;
        public const int FUTURE_VALUE_NOTIONAL = 4;
        public const int KNOWN_AMOUNT = 5;
        public const int FLOATING_RATE_MULTIPLIER = 6;
        public const int SPREAD = 7;
        public const int CAP_RATE = 8;
        public const int FLOOR_RATE = 9;
        public const int NON_DELIVERABLE_SETTLEMENT_PAYMENT_DATES = 10;
        public const int NON_DELIVERABLE_SETTLEMENT_CALCULATION_DATES = 11;
        public const int NON_DELIVERABLE_FIXING_DATES = 12;
        public const int SETTLEMENT_PERIOD_NOTIONAL = 13;
        public const int SETTLEMENT_PERIOD_PRICE = 14;
        public const int CALCULATION_PERIOD = 15;
        public const int DIVIDEND_ACCRUAL_RATE_MULTIPLIER = 16;
        public const int DIVIDEND_ACCRUAL_RATE_SPREAD = 17;
        public const int DIVIDEND_ACCRUAL_CAP_RATE = 18;
        public const int DIVIDEND_ACCRUAL_FLOOR_RATE = 19;
        public const int COMPOUNDING_RATE_MULTIPLIER = 20;
        public const int COMPOUNDING_RATE_SPREAD = 21;
        public const int COMPOUNDING_CAP_RATE = 22;
        public const int COMPOUNDING_FLOOR_RATE = 23;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleStubType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStubType : IntField
    {
        public const int TAG = 40666;

        public UnderlyingPaymentScheduleStubType()
            : base(Tags.UnderlyingPaymentScheduleStubType) { }
        public UnderlyingPaymentScheduleStubType(int val)
            : base(Tags.UnderlyingPaymentScheduleStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStartDateUnadjusted : StringField
    {
        public const int TAG = 40667;

        public UnderlyingPaymentScheduleStartDateUnadjusted()
            : base(Tags.UnderlyingPaymentScheduleStartDateUnadjusted) { }
        public UnderlyingPaymentScheduleStartDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentScheduleStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleEndDateUnadjusted : StringField
    {
        public const int TAG = 40668;

        public UnderlyingPaymentScheduleEndDateUnadjusted()
            : base(Tags.UnderlyingPaymentScheduleEndDateUnadjusted) { }
        public UnderlyingPaymentScheduleEndDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentScheduleEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentSchedulePaySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentSchedulePaySide : IntField
    {
        public const int TAG = 40669;

        public UnderlyingPaymentSchedulePaySide()
            : base(Tags.UnderlyingPaymentSchedulePaySide) { }
        public UnderlyingPaymentSchedulePaySide(int val)
            : base(Tags.UnderlyingPaymentSchedulePaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleReceiveSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleReceiveSide : IntField
    {
        public const int TAG = 40670;

        public UnderlyingPaymentScheduleReceiveSide()
            : base(Tags.UnderlyingPaymentScheduleReceiveSide) { }
        public UnderlyingPaymentScheduleReceiveSide(int val)
            : base(Tags.UnderlyingPaymentScheduleReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleNotional Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleNotional : DecimalField
    {
        public const int TAG = 40671;

        public UnderlyingPaymentScheduleNotional()
            : base(Tags.UnderlyingPaymentScheduleNotional) { }
        public UnderlyingPaymentScheduleNotional(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleNotional, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleCurrency : StringField
    {
        public const int TAG = 40672;

        public UnderlyingPaymentScheduleCurrency()
            : base(Tags.UnderlyingPaymentScheduleCurrency) { }
        public UnderlyingPaymentScheduleCurrency(string val)
            : base(Tags.UnderlyingPaymentScheduleCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRate : DecimalField
    {
        public const int TAG = 40673;

        public UnderlyingPaymentScheduleRate()
            : base(Tags.UnderlyingPaymentScheduleRate) { }
        public UnderlyingPaymentScheduleRate(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateMultiplier : DecimalField
    {
        public const int TAG = 40674;

        public UnderlyingPaymentScheduleRateMultiplier()
            : base(Tags.UnderlyingPaymentScheduleRateMultiplier) { }
        public UnderlyingPaymentScheduleRateMultiplier(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleRateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateSpread : DecimalField
    {
        public const int TAG = 40675;

        public UnderlyingPaymentScheduleRateSpread()
            : base(Tags.UnderlyingPaymentScheduleRateSpread) { }
        public UnderlyingPaymentScheduleRateSpread(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleRateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateSpreadPositionType : IntField
    {
        public const int TAG = 40676;

        public UnderlyingPaymentScheduleRateSpreadPositionType()
            : base(Tags.UnderlyingPaymentScheduleRateSpreadPositionType) { }
        public UnderlyingPaymentScheduleRateSpreadPositionType(int val)
            : base(Tags.UnderlyingPaymentScheduleRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateTreatment : IntField
    {
        public const int TAG = 40677;

        public UnderlyingPaymentScheduleRateTreatment()
            : base(Tags.UnderlyingPaymentScheduleRateTreatment) { }
        public UnderlyingPaymentScheduleRateTreatment(int val)
            : base(Tags.UnderlyingPaymentScheduleRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixedAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixedAmount : DecimalField
    {
        public const int TAG = 40678;

        public UnderlyingPaymentScheduleFixedAmount()
            : base(Tags.UnderlyingPaymentScheduleFixedAmount) { }
        public UnderlyingPaymentScheduleFixedAmount(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleFixedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixedCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixedCurrency : StringField
    {
        public const int TAG = 40679;

        public UnderlyingPaymentScheduleFixedCurrency()
            : base(Tags.UnderlyingPaymentScheduleFixedCurrency) { }
        public UnderlyingPaymentScheduleFixedCurrency(string val)
            : base(Tags.UnderlyingPaymentScheduleFixedCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepFrequencyPeriod : IntField
    {
        public const int TAG = 40680;

        public UnderlyingPaymentScheduleStepFrequencyPeriod()
            : base(Tags.UnderlyingPaymentScheduleStepFrequencyPeriod) { }
        public UnderlyingPaymentScheduleStepFrequencyPeriod(int val)
            : base(Tags.UnderlyingPaymentScheduleStepFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepFrequencyUnit : StringField
    {
        public const int TAG = 40681;

        public UnderlyingPaymentScheduleStepFrequencyUnit()
            : base(Tags.UnderlyingPaymentScheduleStepFrequencyUnit) { }
        public UnderlyingPaymentScheduleStepFrequencyUnit(string val)
            : base(Tags.UnderlyingPaymentScheduleStepFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepOffsetValue Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepOffsetValue : DecimalField
    {
        public const int TAG = 40682;

        public UnderlyingPaymentScheduleStepOffsetValue()
            : base(Tags.UnderlyingPaymentScheduleStepOffsetValue) { }
        public UnderlyingPaymentScheduleStepOffsetValue(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleStepOffsetValue, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepRate : DecimalField
    {
        public const int TAG = 40683;

        public UnderlyingPaymentScheduleStepRate()
            : base(Tags.UnderlyingPaymentScheduleStepRate) { }
        public UnderlyingPaymentScheduleStepRate(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleStepRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepOffsetRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepOffsetRate : DecimalField
    {
        public const int TAG = 40684;

        public UnderlyingPaymentScheduleStepOffsetRate()
            : base(Tags.UnderlyingPaymentScheduleStepOffsetRate) { }
        public UnderlyingPaymentScheduleStepOffsetRate(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleStepOffsetRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepRelativeTo : IntField
    {
        public const int TAG = 40685;

        public UnderlyingPaymentScheduleStepRelativeTo()
            : base(Tags.UnderlyingPaymentScheduleStepRelativeTo) { }
        public UnderlyingPaymentScheduleStepRelativeTo(int val)
            : base(Tags.UnderlyingPaymentScheduleStepRelativeTo, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int PREVIOUS = 1;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateUnadjusted : StringField
    {
        public const int TAG = 40686;

        public UnderlyingPaymentScheduleFixingDateUnadjusted()
            : base(Tags.UnderlyingPaymentScheduleFixingDateUnadjusted) { }
        public UnderlyingPaymentScheduleFixingDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleWeight Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleWeight : DecimalField
    {
        public const int TAG = 40687;

        public UnderlyingPaymentScheduleWeight()
            : base(Tags.UnderlyingPaymentScheduleWeight) { }
        public UnderlyingPaymentScheduleWeight(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleWeight, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateRelativeTo : IntField
    {
        public const int TAG = 40688;

        public UnderlyingPaymentScheduleFixingDateRelativeTo()
            : base(Tags.UnderlyingPaymentScheduleFixingDateRelativeTo) { }
        public UnderlyingPaymentScheduleFixingDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn : IntField
    {
        public const int TAG = 40689;

        public UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn()
            : base(Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn) { }
        public UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40690;

        public UnderlyingPaymentScheduleFixingDateBusinessCenter()
            : base(Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter) { }
        public UnderlyingPaymentScheduleFixingDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40691;

        public UnderlyingPaymentScheduleFixingDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod) { }
        public UnderlyingPaymentScheduleFixingDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40692;

        public UnderlyingPaymentScheduleFixingDateOffsetUnit()
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit) { }
        public UnderlyingPaymentScheduleFixingDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40693;

        public UnderlyingPaymentScheduleFixingDateOffsetDayType()
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType) { }
        public UnderlyingPaymentScheduleFixingDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDateAdjusted : StringField
    {
        public const int TAG = 40694;

        public UnderlyingPaymentScheduleFixingDateAdjusted()
            : base(Tags.UnderlyingPaymentScheduleFixingDateAdjusted) { }
        public UnderlyingPaymentScheduleFixingDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingTime Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingTime : StringField
    {
        public const int TAG = 40695;

        public UnderlyingPaymentScheduleFixingTime()
            : base(Tags.UnderlyingPaymentScheduleFixingTime) { }
        public UnderlyingPaymentScheduleFixingTime(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingTime, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 40696;

        public UnderlyingPaymentScheduleFixingTimeBusinessCenter()
            : base(Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter) { }
        public UnderlyingPaymentScheduleFixingTimeBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo : IntField
    {
        public const int TAG = 40697;

        public UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo) { }
        public UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40698;

        public UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention) { }
        public UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter : StringField
    {
        public const int TAG = 40699;

        public UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter) { }
        public UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod : IntField
    {
        public const int TAG = 40700;

        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod) { }
        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit : StringField
    {
        public const int TAG = 40701;

        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit) { }
        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType : IntField
    {
        public const int TAG = 40702;

        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType) { }
        public UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleInterimExchangeDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleInterimExchangeDateAdjusted : StringField
    {
        public const int TAG = 40703;

        public UnderlyingPaymentScheduleInterimExchangeDateAdjusted()
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted) { }
        public UnderlyingPaymentScheduleInterimExchangeDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentScheduleInterimExchangeDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentScheduleRateSources Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentScheduleRateSources : IntField
    {
        public const int TAG = 40704;

        public NoUnderlyingPaymentScheduleRateSources()
            : base(Tags.NoUnderlyingPaymentScheduleRateSources) { }
        public NoUnderlyingPaymentScheduleRateSources(int val)
            : base(Tags.NoUnderlyingPaymentScheduleRateSources, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateSource : IntField
    {
        public const int TAG = 40705;

        public UnderlyingPaymentScheduleRateSource()
            : base(Tags.UnderlyingPaymentScheduleRateSource) { }
        public UnderlyingPaymentScheduleRateSource(int val)
            : base(Tags.UnderlyingPaymentScheduleRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateSourceType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateSourceType : IntField
    {
        public const int TAG = 40706;

        public UnderlyingPaymentScheduleRateSourceType()
            : base(Tags.UnderlyingPaymentScheduleRateSourceType) { }
        public UnderlyingPaymentScheduleRateSourceType(int val)
            : base(Tags.UnderlyingPaymentScheduleRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleReferencePage Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleReferencePage : StringField
    {
        public const int TAG = 40707;

        public UnderlyingPaymentScheduleReferencePage()
            : base(Tags.UnderlyingPaymentScheduleReferencePage) { }
        public UnderlyingPaymentScheduleReferencePage(string val)
            : base(Tags.UnderlyingPaymentScheduleReferencePage, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStubs Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStubs : IntField
    {
        public const int TAG = 40708;

        public NoUnderlyingPaymentStubs()
            : base(Tags.NoUnderlyingPaymentStubs) { }
        public NoUnderlyingPaymentStubs(int val)
            : base(Tags.NoUnderlyingPaymentStubs, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubType : IntField
    {
        public const int TAG = 40709;

        public UnderlyingPaymentStubType()
            : base(Tags.UnderlyingPaymentStubType) { }
        public UnderlyingPaymentStubType(int val)
            : base(Tags.UnderlyingPaymentStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// UnderlyingPaymentStubLength Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubLength : IntField
    {
        public const int TAG = 40710;

        public UnderlyingPaymentStubLength()
            : base(Tags.UnderlyingPaymentStubLength) { }
        public UnderlyingPaymentStubLength(int val)
            : base(Tags.UnderlyingPaymentStubLength, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStubRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubRate : DecimalField
    {
        public const int TAG = 40711;

        public UnderlyingPaymentStubRate()
            : base(Tags.UnderlyingPaymentStubRate) { }
        public UnderlyingPaymentStubRate(Decimal val)
            : base(Tags.UnderlyingPaymentStubRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubFixedAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubFixedAmount : DecimalField
    {
        public const int TAG = 40712;

        public UnderlyingPaymentStubFixedAmount()
            : base(Tags.UnderlyingPaymentStubFixedAmount) { }
        public UnderlyingPaymentStubFixedAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStubFixedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubFixedCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubFixedCurrency : StringField
    {
        public const int TAG = 40713;

        public UnderlyingPaymentStubFixedCurrency()
            : base(Tags.UnderlyingPaymentStubFixedCurrency) { }
        public UnderlyingPaymentStubFixedCurrency(string val)
            : base(Tags.UnderlyingPaymentStubFixedCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex : StringField
    {
        public const int TAG = 40714;

        public UnderlyingPaymentStubIndex()
            : base(Tags.UnderlyingPaymentStubIndex) { }
        public UnderlyingPaymentStubIndex(string val)
            : base(Tags.UnderlyingPaymentStubIndex, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexSource : IntField
    {
        public const int TAG = 40715;

        public UnderlyingPaymentStubIndexSource()
            : base(Tags.UnderlyingPaymentStubIndexSource) { }
        public UnderlyingPaymentStubIndexSource(int val)
            : base(Tags.UnderlyingPaymentStubIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexCurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexCurvePeriod : IntField
    {
        public const int TAG = 40716;

        public UnderlyingPaymentStubIndexCurvePeriod()
            : base(Tags.UnderlyingPaymentStubIndexCurvePeriod) { }
        public UnderlyingPaymentStubIndexCurvePeriod(int val)
            : base(Tags.UnderlyingPaymentStubIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexCurveUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexCurveUnit : StringField
    {
        public const int TAG = 40717;

        public UnderlyingPaymentStubIndexCurveUnit()
            : base(Tags.UnderlyingPaymentStubIndexCurveUnit) { }
        public UnderlyingPaymentStubIndexCurveUnit(string val)
            : base(Tags.UnderlyingPaymentStubIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexRateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexRateMultiplier : DecimalField
    {
        public const int TAG = 40718;

        public UnderlyingPaymentStubIndexRateMultiplier()
            : base(Tags.UnderlyingPaymentStubIndexRateMultiplier) { }
        public UnderlyingPaymentStubIndexRateMultiplier(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndexRateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexRateSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexRateSpread : DecimalField
    {
        public const int TAG = 40719;

        public UnderlyingPaymentStubIndexRateSpread()
            : base(Tags.UnderlyingPaymentStubIndexRateSpread) { }
        public UnderlyingPaymentStubIndexRateSpread(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndexRateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexRateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexRateSpreadPositionType : IntField
    {
        public const int TAG = 40720;

        public UnderlyingPaymentStubIndexRateSpreadPositionType()
            : base(Tags.UnderlyingPaymentStubIndexRateSpreadPositionType) { }
        public UnderlyingPaymentStubIndexRateSpreadPositionType(int val)
            : base(Tags.UnderlyingPaymentStubIndexRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexRateTreatment : IntField
    {
        public const int TAG = 40721;

        public UnderlyingPaymentStubIndexRateTreatment()
            : base(Tags.UnderlyingPaymentStubIndexRateTreatment) { }
        public UnderlyingPaymentStubIndexRateTreatment(int val)
            : base(Tags.UnderlyingPaymentStubIndexRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexCapRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexCapRate : DecimalField
    {
        public const int TAG = 40722;

        public UnderlyingPaymentStubIndexCapRate()
            : base(Tags.UnderlyingPaymentStubIndexCapRate) { }
        public UnderlyingPaymentStubIndexCapRate(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndexCapRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexCapRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexCapRateBuySide : IntField
    {
        public const int TAG = 40723;

        public UnderlyingPaymentStubIndexCapRateBuySide()
            : base(Tags.UnderlyingPaymentStubIndexCapRateBuySide) { }
        public UnderlyingPaymentStubIndexCapRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStubIndexCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexCapRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexCapRateSellSide : IntField
    {
        public const int TAG = 40724;

        public UnderlyingPaymentStubIndexCapRateSellSide()
            : base(Tags.UnderlyingPaymentStubIndexCapRateSellSide) { }
        public UnderlyingPaymentStubIndexCapRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStubIndexCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexFloorRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexFloorRate : DecimalField
    {
        public const int TAG = 40725;

        public UnderlyingPaymentStubIndexFloorRate()
            : base(Tags.UnderlyingPaymentStubIndexFloorRate) { }
        public UnderlyingPaymentStubIndexFloorRate(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndexFloorRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndexFloorRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexFloorRateBuySide : IntField
    {
        public const int TAG = 40726;

        public UnderlyingPaymentStubIndexFloorRateBuySide()
            : base(Tags.UnderlyingPaymentStubIndexFloorRateBuySide) { }
        public UnderlyingPaymentStubIndexFloorRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStubIndexFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndexFloorRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndexFloorRateSellSide : IntField
    {
        public const int TAG = 40727;

        public UnderlyingPaymentStubIndexFloorRateSellSide()
            : base(Tags.UnderlyingPaymentStubIndexFloorRateSellSide) { }
        public UnderlyingPaymentStubIndexFloorRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStubIndexFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2 Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2 : StringField
    {
        public const int TAG = 40728;

        public UnderlyingPaymentStubIndex2()
            : base(Tags.UnderlyingPaymentStubIndex2) { }
        public UnderlyingPaymentStubIndex2(string val)
            : base(Tags.UnderlyingPaymentStubIndex2, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2Source Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2Source : IntField
    {
        public const int TAG = 40729;

        public UnderlyingPaymentStubIndex2Source()
            : base(Tags.UnderlyingPaymentStubIndex2Source) { }
        public UnderlyingPaymentStubIndex2Source(int val)
            : base(Tags.UnderlyingPaymentStubIndex2Source, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2CurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2CurvePeriod : IntField
    {
        public const int TAG = 40730;

        public UnderlyingPaymentStubIndex2CurvePeriod()
            : base(Tags.UnderlyingPaymentStubIndex2CurvePeriod) { }
        public UnderlyingPaymentStubIndex2CurvePeriod(int val)
            : base(Tags.UnderlyingPaymentStubIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2CurveUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2CurveUnit : StringField
    {
        public const int TAG = 40731;

        public UnderlyingPaymentStubIndex2CurveUnit()
            : base(Tags.UnderlyingPaymentStubIndex2CurveUnit) { }
        public UnderlyingPaymentStubIndex2CurveUnit(string val)
            : base(Tags.UnderlyingPaymentStubIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2RateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2RateMultiplier : DecimalField
    {
        public const int TAG = 40732;

        public UnderlyingPaymentStubIndex2RateMultiplier()
            : base(Tags.UnderlyingPaymentStubIndex2RateMultiplier) { }
        public UnderlyingPaymentStubIndex2RateMultiplier(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndex2RateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2RateSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2RateSpread : DecimalField
    {
        public const int TAG = 40733;

        public UnderlyingPaymentStubIndex2RateSpread()
            : base(Tags.UnderlyingPaymentStubIndex2RateSpread) { }
        public UnderlyingPaymentStubIndex2RateSpread(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndex2RateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2RateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2RateSpreadPositionType : IntField
    {
        public const int TAG = 40734;

        public UnderlyingPaymentStubIndex2RateSpreadPositionType()
            : base(Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType) { }
        public UnderlyingPaymentStubIndex2RateSpreadPositionType(int val)
            : base(Tags.UnderlyingPaymentStubIndex2RateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2RateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2RateTreatment : IntField
    {
        public const int TAG = 40735;

        public UnderlyingPaymentStubIndex2RateTreatment()
            : base(Tags.UnderlyingPaymentStubIndex2RateTreatment) { }
        public UnderlyingPaymentStubIndex2RateTreatment(int val)
            : base(Tags.UnderlyingPaymentStubIndex2RateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2CapRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2CapRate : DecimalField
    {
        public const int TAG = 40736;

        public UnderlyingPaymentStubIndex2CapRate()
            : base(Tags.UnderlyingPaymentStubIndex2CapRate) { }
        public UnderlyingPaymentStubIndex2CapRate(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndex2CapRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubIndex2FloorRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubIndex2FloorRate : DecimalField
    {
        public const int TAG = 40737;

        public UnderlyingPaymentStubIndex2FloorRate()
            : base(Tags.UnderlyingPaymentStubIndex2FloorRate) { }
        public UnderlyingPaymentStubIndex2FloorRate(Decimal val)
            : base(Tags.UnderlyingPaymentStubIndex2FloorRate, val) { }

    }


    /// <summary>
    /// PaymentStreamType Field
    /// </summary>/
    public sealed class PaymentStreamType : IntField
    {
        public const int TAG = 40738;

        public PaymentStreamType()
            : base(Tags.PaymentStreamType) { }
        public PaymentStreamType(int val)
            : base(Tags.PaymentStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
        public const int DIVIDEND = 3;
        public const int INTEREST = 4;
        public const int DIVIDEND_RETURN = 5;
        public const int PRICE_RETURN = 6;
        public const int TOTAL_RETURN = 7;
        public const int VARIANCE = 8;
        public const int CORRELATION = 9;
    }


    /// <summary>
    /// PaymentStreamMarketRate Field
    /// </summary>/
    public sealed class PaymentStreamMarketRate : IntField
    {
        public const int TAG = 40739;

        public PaymentStreamMarketRate()
            : base(Tags.PaymentStreamMarketRate) { }
        public PaymentStreamMarketRate(int val)
            : base(Tags.PaymentStreamMarketRate, val) { }

    }


    /// <summary>
    /// PaymentStreamDelayIndicator Field
    /// </summary>/
    public sealed class PaymentStreamDelayIndicator : BooleanField
    {
        public const int TAG = 40740;

        public PaymentStreamDelayIndicator()
            : base(Tags.PaymentStreamDelayIndicator) { }
        public PaymentStreamDelayIndicator(Boolean val)
            : base(Tags.PaymentStreamDelayIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamSettlCurrency Field
    /// </summary>/
    public sealed class PaymentStreamSettlCurrency : StringField
    {
        public const int TAG = 40741;

        public PaymentStreamSettlCurrency()
            : base(Tags.PaymentStreamSettlCurrency) { }
        public PaymentStreamSettlCurrency(string val)
            : base(Tags.PaymentStreamSettlCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamDayCount Field
    /// </summary>/
    public sealed class PaymentStreamDayCount : IntField
    {
        public const int TAG = 40742;

        public PaymentStreamDayCount()
            : base(Tags.PaymentStreamDayCount) { }
        public PaymentStreamDayCount(int val)
            : base(Tags.PaymentStreamDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStreamAccrualDays Field
    /// </summary>/
    public sealed class PaymentStreamAccrualDays : IntField
    {
        public const int TAG = 40743;

        public PaymentStreamAccrualDays()
            : base(Tags.PaymentStreamAccrualDays) { }
        public PaymentStreamAccrualDays(int val)
            : base(Tags.PaymentStreamAccrualDays, val) { }

    }


    /// <summary>
    /// PaymentStreamDiscountType Field
    /// </summary>/
    public sealed class PaymentStreamDiscountType : IntField
    {
        public const int TAG = 40744;

        public PaymentStreamDiscountType()
            : base(Tags.PaymentStreamDiscountType) { }
        public PaymentStreamDiscountType(int val)
            : base(Tags.PaymentStreamDiscountType, val) { }


        // Field Enumerations
        public const int STANDARD = 0;
        public const int FORWARD_RATE_AGREEMENT = 1;
    }


    /// <summary>
    /// PaymentStreamDiscountRate Field
    /// </summary>/
    public sealed class PaymentStreamDiscountRate : DecimalField
    {
        public const int TAG = 40745;

        public PaymentStreamDiscountRate()
            : base(Tags.PaymentStreamDiscountRate) { }
        public PaymentStreamDiscountRate(Decimal val)
            : base(Tags.PaymentStreamDiscountRate, val) { }

    }


    /// <summary>
    /// PaymentStreamDiscountRateDayCount Field
    /// </summary>/
    public sealed class PaymentStreamDiscountRateDayCount : IntField
    {
        public const int TAG = 40746;

        public PaymentStreamDiscountRateDayCount()
            : base(Tags.PaymentStreamDiscountRateDayCount) { }
        public PaymentStreamDiscountRateDayCount(int val)
            : base(Tags.PaymentStreamDiscountRateDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStreamCompoundingMethod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingMethod : IntField
    {
        public const int TAG = 40747;

        public PaymentStreamCompoundingMethod()
            : base(Tags.PaymentStreamCompoundingMethod) { }
        public PaymentStreamCompoundingMethod(int val)
            : base(Tags.PaymentStreamCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// PaymentStreamInitialPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class PaymentStreamInitialPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40748;

        public PaymentStreamInitialPrincipalExchangeIndicator()
            : base(Tags.PaymentStreamInitialPrincipalExchangeIndicator) { }
        public PaymentStreamInitialPrincipalExchangeIndicator(Boolean val)
            : base(Tags.PaymentStreamInitialPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamInterimPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class PaymentStreamInterimPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40749;

        public PaymentStreamInterimPrincipalExchangeIndicator()
            : base(Tags.PaymentStreamInterimPrincipalExchangeIndicator) { }
        public PaymentStreamInterimPrincipalExchangeIndicator(Boolean val)
            : base(Tags.PaymentStreamInterimPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalPrincipalExchangeIndicator Field
    /// </summary>/
    public sealed class PaymentStreamFinalPrincipalExchangeIndicator : BooleanField
    {
        public const int TAG = 40750;

        public PaymentStreamFinalPrincipalExchangeIndicator()
            : base(Tags.PaymentStreamFinalPrincipalExchangeIndicator) { }
        public PaymentStreamFinalPrincipalExchangeIndicator(Boolean val)
            : base(Tags.PaymentStreamFinalPrincipalExchangeIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 40751;

        public PaymentStreamPaymentDateBusinessDayConvention()
            : base(Tags.PaymentStreamPaymentDateBusinessDayConvention) { }
        public PaymentStreamPaymentDateBusinessDayConvention(int val)
            : base(Tags.PaymentStreamPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 40752;

        public PaymentStreamPaymentDateBusinessCenter()
            : base(Tags.PaymentStreamPaymentDateBusinessCenter) { }
        public PaymentStreamPaymentDateBusinessCenter(string val)
            : base(Tags.PaymentStreamPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentStreamPaymentFrequencyPeriod : IntField
    {
        public const int TAG = 40753;

        public PaymentStreamPaymentFrequencyPeriod()
            : base(Tags.PaymentStreamPaymentFrequencyPeriod) { }
        public PaymentStreamPaymentFrequencyPeriod(int val)
            : base(Tags.PaymentStreamPaymentFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentStreamPaymentFrequencyUnit : StringField
    {
        public const int TAG = 40754;

        public PaymentStreamPaymentFrequencyUnit()
            : base(Tags.PaymentStreamPaymentFrequencyUnit) { }
        public PaymentStreamPaymentFrequencyUnit(string val)
            : base(Tags.PaymentStreamPaymentFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string TERM = "T";
    }


    /// <summary>
    /// PaymentStreamPaymentRollConvention Field
    /// </summary>/
    public sealed class PaymentStreamPaymentRollConvention : StringField
    {
        public const int TAG = 40755;

        public PaymentStreamPaymentRollConvention()
            : base(Tags.PaymentStreamPaymentRollConvention) { }
        public PaymentStreamPaymentRollConvention(string val)
            : base(Tags.PaymentStreamPaymentRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// PaymentStreamFirstPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamFirstPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40756;

        public PaymentStreamFirstPaymentDateUnadjusted()
            : base(Tags.PaymentStreamFirstPaymentDateUnadjusted) { }
        public PaymentStreamFirstPaymentDateUnadjusted(string val)
            : base(Tags.PaymentStreamFirstPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamLastRegularPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamLastRegularPaymentDateUnadjusted : StringField
    {
        public const int TAG = 40757;

        public PaymentStreamLastRegularPaymentDateUnadjusted()
            : base(Tags.PaymentStreamLastRegularPaymentDateUnadjusted) { }
        public PaymentStreamLastRegularPaymentDateUnadjusted(string val)
            : base(Tags.PaymentStreamLastRegularPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateRelativeTo : IntField
    {
        public const int TAG = 40758;

        public PaymentStreamPaymentDateRelativeTo()
            : base(Tags.PaymentStreamPaymentDateRelativeTo) { }
        public PaymentStreamPaymentDateRelativeTo(int val)
            : base(Tags.PaymentStreamPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 40759;

        public PaymentStreamPaymentDateOffsetPeriod()
            : base(Tags.PaymentStreamPaymentDateOffsetPeriod) { }
        public PaymentStreamPaymentDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 40760;

        public PaymentStreamPaymentDateOffsetUnit()
            : base(Tags.PaymentStreamPaymentDateOffsetUnit) { }
        public PaymentStreamPaymentDateOffsetUnit(string val)
            : base(Tags.PaymentStreamPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamResetDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamResetDateRelativeTo : IntField
    {
        public const int TAG = 40761;

        public PaymentStreamResetDateRelativeTo()
            : base(Tags.PaymentStreamResetDateRelativeTo) { }
        public PaymentStreamResetDateRelativeTo(int val)
            : base(Tags.PaymentStreamResetDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamResetDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamResetDateBusinessDayConvention : IntField
    {
        public const int TAG = 40762;

        public PaymentStreamResetDateBusinessDayConvention()
            : base(Tags.PaymentStreamResetDateBusinessDayConvention) { }
        public PaymentStreamResetDateBusinessDayConvention(int val)
            : base(Tags.PaymentStreamResetDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamResetDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamResetDateBusinessCenter : StringField
    {
        public const int TAG = 40763;

        public PaymentStreamResetDateBusinessCenter()
            : base(Tags.PaymentStreamResetDateBusinessCenter) { }
        public PaymentStreamResetDateBusinessCenter(string val)
            : base(Tags.PaymentStreamResetDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamResetFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentStreamResetFrequencyPeriod : IntField
    {
        public const int TAG = 40764;

        public PaymentStreamResetFrequencyPeriod()
            : base(Tags.PaymentStreamResetFrequencyPeriod) { }
        public PaymentStreamResetFrequencyPeriod(int val)
            : base(Tags.PaymentStreamResetFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamResetFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentStreamResetFrequencyUnit : StringField
    {
        public const int TAG = 40765;

        public PaymentStreamResetFrequencyUnit()
            : base(Tags.PaymentStreamResetFrequencyUnit) { }
        public PaymentStreamResetFrequencyUnit(string val)
            : base(Tags.PaymentStreamResetFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// PaymentStreamResetWeeklyRollConvention Field
    /// </summary>/
    public sealed class PaymentStreamResetWeeklyRollConvention : StringField
    {
        public const int TAG = 40766;

        public PaymentStreamResetWeeklyRollConvention()
            : base(Tags.PaymentStreamResetWeeklyRollConvention) { }
        public PaymentStreamResetWeeklyRollConvention(string val)
            : base(Tags.PaymentStreamResetWeeklyRollConvention, val) { }


        // Field Enumerations
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// PaymentStreamInitialFixingDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateRelativeTo : IntField
    {
        public const int TAG = 40767;

        public PaymentStreamInitialFixingDateRelativeTo()
            : base(Tags.PaymentStreamInitialFixingDateRelativeTo) { }
        public PaymentStreamInitialFixingDateRelativeTo(int val)
            : base(Tags.PaymentStreamInitialFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamInitialFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40768;

        public PaymentStreamInitialFixingDateBusinessDayConvention()
            : base(Tags.PaymentStreamInitialFixingDateBusinessDayConvention) { }
        public PaymentStreamInitialFixingDateBusinessDayConvention(int val)
            : base(Tags.PaymentStreamInitialFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamInitialFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40769;

        public PaymentStreamInitialFixingDateBusinessCenter()
            : base(Tags.PaymentStreamInitialFixingDateBusinessCenter) { }
        public PaymentStreamInitialFixingDateBusinessCenter(string val)
            : base(Tags.PaymentStreamInitialFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamInitialFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40770;

        public PaymentStreamInitialFixingDateOffsetPeriod()
            : base(Tags.PaymentStreamInitialFixingDateOffsetPeriod) { }
        public PaymentStreamInitialFixingDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamInitialFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamInitialFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40771;

        public PaymentStreamInitialFixingDateOffsetUnit()
            : base(Tags.PaymentStreamInitialFixingDateOffsetUnit) { }
        public PaymentStreamInitialFixingDateOffsetUnit(string val)
            : base(Tags.PaymentStreamInitialFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamInitialFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40772;

        public PaymentStreamInitialFixingDateOffsetDayType()
            : base(Tags.PaymentStreamInitialFixingDateOffsetDayType) { }
        public PaymentStreamInitialFixingDateOffsetDayType(int val)
            : base(Tags.PaymentStreamInitialFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamInitialFixingDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamInitialFixingDateAdjusted : StringField
    {
        public const int TAG = 40773;

        public PaymentStreamInitialFixingDateAdjusted()
            : base(Tags.PaymentStreamInitialFixingDateAdjusted) { }
        public PaymentStreamInitialFixingDateAdjusted(string val)
            : base(Tags.PaymentStreamInitialFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateRelativeTo : IntField
    {
        public const int TAG = 40774;

        public PaymentStreamFixingDateRelativeTo()
            : base(Tags.PaymentStreamFixingDateRelativeTo) { }
        public PaymentStreamFixingDateRelativeTo(int val)
            : base(Tags.PaymentStreamFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40775;

        public PaymentStreamFixingDateBusinessDayConvention()
            : base(Tags.PaymentStreamFixingDateBusinessDayConvention) { }
        public PaymentStreamFixingDateBusinessDayConvention(int val)
            : base(Tags.PaymentStreamFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40776;

        public PaymentStreamFixingDateBusinessCenter()
            : base(Tags.PaymentStreamFixingDateBusinessCenter) { }
        public PaymentStreamFixingDateBusinessCenter(string val)
            : base(Tags.PaymentStreamFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40777;

        public PaymentStreamFixingDateOffsetPeriod()
            : base(Tags.PaymentStreamFixingDateOffsetPeriod) { }
        public PaymentStreamFixingDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40778;

        public PaymentStreamFixingDateOffsetUnit()
            : base(Tags.PaymentStreamFixingDateOffsetUnit) { }
        public PaymentStreamFixingDateOffsetUnit(string val)
            : base(Tags.PaymentStreamFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40779;

        public PaymentStreamFixingDateOffsetDayType()
            : base(Tags.PaymentStreamFixingDateOffsetDayType) { }
        public PaymentStreamFixingDateOffsetDayType(int val)
            : base(Tags.PaymentStreamFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamFixingDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateAdjusted : StringField
    {
        public const int TAG = 40780;

        public PaymentStreamFixingDateAdjusted()
            : base(Tags.PaymentStreamFixingDateAdjusted) { }
        public PaymentStreamFixingDateAdjusted(string val)
            : base(Tags.PaymentStreamFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamRateCutoffDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamRateCutoffDateOffsetPeriod : IntField
    {
        public const int TAG = 40781;

        public PaymentStreamRateCutoffDateOffsetPeriod()
            : base(Tags.PaymentStreamRateCutoffDateOffsetPeriod) { }
        public PaymentStreamRateCutoffDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamRateCutoffDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamRateCutoffDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamRateCutoffDateOffsetUnit : StringField
    {
        public const int TAG = 40782;

        public PaymentStreamRateCutoffDateOffsetUnit()
            : base(Tags.PaymentStreamRateCutoffDateOffsetUnit) { }
        public PaymentStreamRateCutoffDateOffsetUnit(string val)
            : base(Tags.PaymentStreamRateCutoffDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamRateCutoffDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamRateCutoffDateOffsetDayType : IntField
    {
        public const int TAG = 40783;

        public PaymentStreamRateCutoffDateOffsetDayType()
            : base(Tags.PaymentStreamRateCutoffDateOffsetDayType) { }
        public PaymentStreamRateCutoffDateOffsetDayType(int val)
            : base(Tags.PaymentStreamRateCutoffDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamRate Field
    /// </summary>/
    public sealed class PaymentStreamRate : DecimalField
    {
        public const int TAG = 40784;

        public PaymentStreamRate()
            : base(Tags.PaymentStreamRate) { }
        public PaymentStreamRate(Decimal val)
            : base(Tags.PaymentStreamRate, val) { }

    }


    /// <summary>
    /// PaymentStreamFixedAmount Field
    /// </summary>/
    public sealed class PaymentStreamFixedAmount : DecimalField
    {
        public const int TAG = 40785;

        public PaymentStreamFixedAmount()
            : base(Tags.PaymentStreamFixedAmount) { }
        public PaymentStreamFixedAmount(Decimal val)
            : base(Tags.PaymentStreamFixedAmount, val) { }

    }


    /// <summary>
    /// PaymentStreamRateOrAmountCurrency Field
    /// </summary>/
    public sealed class PaymentStreamRateOrAmountCurrency : StringField
    {
        public const int TAG = 40786;

        public PaymentStreamRateOrAmountCurrency()
            : base(Tags.PaymentStreamRateOrAmountCurrency) { }
        public PaymentStreamRateOrAmountCurrency(string val)
            : base(Tags.PaymentStreamRateOrAmountCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamFutureValueNotional Field
    /// </summary>/
    public sealed class PaymentStreamFutureValueNotional : DecimalField
    {
        public const int TAG = 40787;

        public PaymentStreamFutureValueNotional()
            : base(Tags.PaymentStreamFutureValueNotional) { }
        public PaymentStreamFutureValueNotional(Decimal val)
            : base(Tags.PaymentStreamFutureValueNotional, val) { }

    }


    /// <summary>
    /// PaymentStreamFutureValueDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamFutureValueDateAdjusted : StringField
    {
        public const int TAG = 40788;

        public PaymentStreamFutureValueDateAdjusted()
            : base(Tags.PaymentStreamFutureValueDateAdjusted) { }
        public PaymentStreamFutureValueDateAdjusted(string val)
            : base(Tags.PaymentStreamFutureValueDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndex Field
    /// </summary>/
    public sealed class PaymentStreamRateIndex : StringField
    {
        public const int TAG = 40789;

        public PaymentStreamRateIndex()
            : base(Tags.PaymentStreamRateIndex) { }
        public PaymentStreamRateIndex(string val)
            : base(Tags.PaymentStreamRateIndex, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndexSource Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexSource : IntField
    {
        public const int TAG = 40790;

        public PaymentStreamRateIndexSource()
            : base(Tags.PaymentStreamRateIndexSource) { }
        public PaymentStreamRateIndexSource(int val)
            : base(Tags.PaymentStreamRateIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStreamRateIndexCurveUnit Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexCurveUnit : StringField
    {
        public const int TAG = 40791;

        public PaymentStreamRateIndexCurveUnit()
            : base(Tags.PaymentStreamRateIndexCurveUnit) { }
        public PaymentStreamRateIndexCurveUnit(string val)
            : base(Tags.PaymentStreamRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexCurvePeriod : IntField
    {
        public const int TAG = 40792;

        public PaymentStreamRateIndexCurvePeriod()
            : base(Tags.PaymentStreamRateIndexCurvePeriod) { }
        public PaymentStreamRateIndexCurvePeriod(int val)
            : base(Tags.PaymentStreamRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamRateMultiplier Field
    /// </summary>/
    public sealed class PaymentStreamRateMultiplier : DecimalField
    {
        public const int TAG = 40793;

        public PaymentStreamRateMultiplier()
            : base(Tags.PaymentStreamRateMultiplier) { }
        public PaymentStreamRateMultiplier(Decimal val)
            : base(Tags.PaymentStreamRateMultiplier, val) { }

    }


    /// <summary>
    /// PaymentStreamRateSpread Field
    /// </summary>/
    public sealed class PaymentStreamRateSpread : DecimalField
    {
        public const int TAG = 40794;

        public PaymentStreamRateSpread()
            : base(Tags.PaymentStreamRateSpread) { }
        public PaymentStreamRateSpread(Decimal val)
            : base(Tags.PaymentStreamRateSpread, val) { }

    }


    /// <summary>
    /// PaymentStreamRateSpreadPositionType Field
    /// </summary>/
    public sealed class PaymentStreamRateSpreadPositionType : IntField
    {
        public const int TAG = 40795;

        public PaymentStreamRateSpreadPositionType()
            : base(Tags.PaymentStreamRateSpreadPositionType) { }
        public PaymentStreamRateSpreadPositionType(int val)
            : base(Tags.PaymentStreamRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentStreamRateTreatment Field
    /// </summary>/
    public sealed class PaymentStreamRateTreatment : IntField
    {
        public const int TAG = 40796;

        public PaymentStreamRateTreatment()
            : base(Tags.PaymentStreamRateTreatment) { }
        public PaymentStreamRateTreatment(int val)
            : base(Tags.PaymentStreamRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// PaymentStreamCapRate Field
    /// </summary>/
    public sealed class PaymentStreamCapRate : DecimalField
    {
        public const int TAG = 40797;

        public PaymentStreamCapRate()
            : base(Tags.PaymentStreamCapRate) { }
        public PaymentStreamCapRate(Decimal val)
            : base(Tags.PaymentStreamCapRate, val) { }

    }


    /// <summary>
    /// PaymentStreamCapRateBuySide Field
    /// </summary>/
    public sealed class PaymentStreamCapRateBuySide : IntField
    {
        public const int TAG = 40798;

        public PaymentStreamCapRateBuySide()
            : base(Tags.PaymentStreamCapRateBuySide) { }
        public PaymentStreamCapRateBuySide(int val)
            : base(Tags.PaymentStreamCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamCapRateSellSide Field
    /// </summary>/
    public sealed class PaymentStreamCapRateSellSide : IntField
    {
        public const int TAG = 40799;

        public PaymentStreamCapRateSellSide()
            : base(Tags.PaymentStreamCapRateSellSide) { }
        public PaymentStreamCapRateSellSide(int val)
            : base(Tags.PaymentStreamCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamFloorRate Field
    /// </summary>/
    public sealed class PaymentStreamFloorRate : DecimalField
    {
        public const int TAG = 40800;

        public PaymentStreamFloorRate()
            : base(Tags.PaymentStreamFloorRate) { }
        public PaymentStreamFloorRate(Decimal val)
            : base(Tags.PaymentStreamFloorRate, val) { }

    }


    /// <summary>
    /// PaymentStreamFloorRateBuySide Field
    /// </summary>/
    public sealed class PaymentStreamFloorRateBuySide : IntField
    {
        public const int TAG = 40801;

        public PaymentStreamFloorRateBuySide()
            : base(Tags.PaymentStreamFloorRateBuySide) { }
        public PaymentStreamFloorRateBuySide(int val)
            : base(Tags.PaymentStreamFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamFloorRateSellSide Field
    /// </summary>/
    public sealed class PaymentStreamFloorRateSellSide : IntField
    {
        public const int TAG = 40802;

        public PaymentStreamFloorRateSellSide()
            : base(Tags.PaymentStreamFloorRateSellSide) { }
        public PaymentStreamFloorRateSellSide(int val)
            : base(Tags.PaymentStreamFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamInitialRate Field
    /// </summary>/
    public sealed class PaymentStreamInitialRate : DecimalField
    {
        public const int TAG = 40803;

        public PaymentStreamInitialRate()
            : base(Tags.PaymentStreamInitialRate) { }
        public PaymentStreamInitialRate(Decimal val)
            : base(Tags.PaymentStreamInitialRate, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class PaymentStreamFinalRateRoundingDirection : CharField
    {
        public const int TAG = 40804;

        public PaymentStreamFinalRateRoundingDirection()
            : base(Tags.PaymentStreamFinalRateRoundingDirection) { }
        public PaymentStreamFinalRateRoundingDirection(char val)
            : base(Tags.PaymentStreamFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// PaymentStreamFinalRatePrecision Field
    /// </summary>/
    public sealed class PaymentStreamFinalRatePrecision : IntField
    {
        public const int TAG = 40805;

        public PaymentStreamFinalRatePrecision()
            : base(Tags.PaymentStreamFinalRatePrecision) { }
        public PaymentStreamFinalRatePrecision(int val)
            : base(Tags.PaymentStreamFinalRatePrecision, val) { }

    }


    /// <summary>
    /// PaymentStreamAveragingMethod Field
    /// </summary>/
    public sealed class PaymentStreamAveragingMethod : IntField
    {
        public const int TAG = 40806;

        public PaymentStreamAveragingMethod()
            : base(Tags.PaymentStreamAveragingMethod) { }
        public PaymentStreamAveragingMethod(int val)
            : base(Tags.PaymentStreamAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// PaymentStreamNegativeRateTreatment Field
    /// </summary>/
    public sealed class PaymentStreamNegativeRateTreatment : IntField
    {
        public const int TAG = 40807;

        public PaymentStreamNegativeRateTreatment()
            : base(Tags.PaymentStreamNegativeRateTreatment) { }
        public PaymentStreamNegativeRateTreatment(int val)
            : base(Tags.PaymentStreamNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// PaymentStreamInflationLagPeriod Field
    /// </summary>/
    public sealed class PaymentStreamInflationLagPeriod : IntField
    {
        public const int TAG = 40808;

        public PaymentStreamInflationLagPeriod()
            : base(Tags.PaymentStreamInflationLagPeriod) { }
        public PaymentStreamInflationLagPeriod(int val)
            : base(Tags.PaymentStreamInflationLagPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamInflationLagUnit Field
    /// </summary>/
    public sealed class PaymentStreamInflationLagUnit : StringField
    {
        public const int TAG = 40809;

        public PaymentStreamInflationLagUnit()
            : base(Tags.PaymentStreamInflationLagUnit) { }
        public PaymentStreamInflationLagUnit(string val)
            : base(Tags.PaymentStreamInflationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamInflationLagDayType Field
    /// </summary>/
    public sealed class PaymentStreamInflationLagDayType : IntField
    {
        public const int TAG = 40810;

        public PaymentStreamInflationLagDayType()
            : base(Tags.PaymentStreamInflationLagDayType) { }
        public PaymentStreamInflationLagDayType(int val)
            : base(Tags.PaymentStreamInflationLagDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamInflationInterpolationMethod Field
    /// </summary>/
    public sealed class PaymentStreamInflationInterpolationMethod : IntField
    {
        public const int TAG = 40811;

        public PaymentStreamInflationInterpolationMethod()
            : base(Tags.PaymentStreamInflationInterpolationMethod) { }
        public PaymentStreamInflationInterpolationMethod(int val)
            : base(Tags.PaymentStreamInflationInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// PaymentStreamInflationIndexSource Field
    /// </summary>/
    public sealed class PaymentStreamInflationIndexSource : IntField
    {
        public const int TAG = 40812;

        public PaymentStreamInflationIndexSource()
            : base(Tags.PaymentStreamInflationIndexSource) { }
        public PaymentStreamInflationIndexSource(int val)
            : base(Tags.PaymentStreamInflationIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStreamInflationPublicationSource Field
    /// </summary>/
    public sealed class PaymentStreamInflationPublicationSource : StringField
    {
        public const int TAG = 40813;

        public PaymentStreamInflationPublicationSource()
            : base(Tags.PaymentStreamInflationPublicationSource) { }
        public PaymentStreamInflationPublicationSource(string val)
            : base(Tags.PaymentStreamInflationPublicationSource, val) { }

    }


    /// <summary>
    /// PaymentStreamInflationInitialIndexLevel Field
    /// </summary>/
    public sealed class PaymentStreamInflationInitialIndexLevel : DecimalField
    {
        public const int TAG = 40814;

        public PaymentStreamInflationInitialIndexLevel()
            : base(Tags.PaymentStreamInflationInitialIndexLevel) { }
        public PaymentStreamInflationInitialIndexLevel(Decimal val)
            : base(Tags.PaymentStreamInflationInitialIndexLevel, val) { }

    }


    /// <summary>
    /// PaymentStreamInflationFallbackBondApplicable Field
    /// </summary>/
    public sealed class PaymentStreamInflationFallbackBondApplicable : BooleanField
    {
        public const int TAG = 40815;

        public PaymentStreamInflationFallbackBondApplicable()
            : base(Tags.PaymentStreamInflationFallbackBondApplicable) { }
        public PaymentStreamInflationFallbackBondApplicable(Boolean val)
            : base(Tags.PaymentStreamInflationFallbackBondApplicable, val) { }

    }


    /// <summary>
    /// PaymentStreamFRADiscounting Field
    /// </summary>/
    public sealed class PaymentStreamFRADiscounting : IntField
    {
        public const int TAG = 40816;

        public PaymentStreamFRADiscounting()
            : base(Tags.PaymentStreamFRADiscounting) { }
        public PaymentStreamFRADiscounting(int val)
            : base(Tags.PaymentStreamFRADiscounting, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int INTERNATIONAL_SWAPS_AND_DERIVATIVES_ASSOCIATION = 1;
        public const int AUSTRALIAN_FINANCIAL_MARKETS_ASSOCIATION = 2;
    }


    /// <summary>
    /// PaymentStreamNonDeliverableRefCurrency Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableRefCurrency : StringField
    {
        public const int TAG = 40817;

        public PaymentStreamNonDeliverableRefCurrency()
            : base(Tags.PaymentStreamNonDeliverableRefCurrency) { }
        public PaymentStreamNonDeliverableRefCurrency(string val)
            : base(Tags.PaymentStreamNonDeliverableRefCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40818;

        public PaymentStreamNonDeliverableFixingDatesBusinessDayConvention()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention) { }
        public PaymentStreamNonDeliverableFixingDatesBusinessDayConvention(int val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesBusinessCenter : StringField
    {
        public const int TAG = 40819;

        public PaymentStreamNonDeliverableFixingDatesBusinessCenter()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesBusinessCenter) { }
        public PaymentStreamNonDeliverableFixingDatesBusinessCenter(string val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesRelativeTo : IntField
    {
        public const int TAG = 40820;

        public PaymentStreamNonDeliverableFixingDatesRelativeTo()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesRelativeTo) { }
        public PaymentStreamNonDeliverableFixingDatesRelativeTo(int val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesOffsetPeriod : IntField
    {
        public const int TAG = 40821;

        public PaymentStreamNonDeliverableFixingDatesOffsetPeriod()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetPeriod) { }
        public PaymentStreamNonDeliverableFixingDatesOffsetPeriod(int val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesOffsetUnit : StringField
    {
        public const int TAG = 40822;

        public PaymentStreamNonDeliverableFixingDatesOffsetUnit()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetUnit) { }
        public PaymentStreamNonDeliverableFixingDatesOffsetUnit(string val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamNonDeliverableFixingDatesOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamNonDeliverableFixingDatesOffsetDayType : IntField
    {
        public const int TAG = 40823;

        public PaymentStreamNonDeliverableFixingDatesOffsetDayType()
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetDayType) { }
        public PaymentStreamNonDeliverableFixingDatesOffsetDayType(int val)
            : base(Tags.PaymentStreamNonDeliverableFixingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamNonDeliverableSettlReferencePage Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNonDeliverableSettlReferencePage : StringField
    {
        public const int TAG = 40824;

        public UnderlyingPaymentStreamNonDeliverableSettlReferencePage()
            : base(Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage) { }
        public UnderlyingPaymentStreamNonDeliverableSettlReferencePage(string val)
            : base(Tags.UnderlyingPaymentStreamNonDeliverableSettlReferencePage, val) { }

    }


    /// <summary>
    /// NoNonDeliverableFixingDates Field
    /// </summary>/
    public sealed class NoNonDeliverableFixingDates : IntField
    {
        public const int TAG = 40825;

        public NoNonDeliverableFixingDates()
            : base(Tags.NoNonDeliverableFixingDates) { }
        public NoNonDeliverableFixingDates(int val)
            : base(Tags.NoNonDeliverableFixingDates, val) { }

    }


    /// <summary>
    /// NonDeliverableFixingDate Field
    /// </summary>/
    public sealed class NonDeliverableFixingDate : StringField
    {
        public const int TAG = 40826;

        public NonDeliverableFixingDate()
            : base(Tags.NonDeliverableFixingDate) { }
        public NonDeliverableFixingDate(string val)
            : base(Tags.NonDeliverableFixingDate, val) { }

    }


    /// <summary>
    /// NonDeliverableFixingDateType Field
    /// </summary>/
    public sealed class NonDeliverableFixingDateType : IntField
    {
        public const int TAG = 40827;

        public NonDeliverableFixingDateType()
            : base(Tags.NonDeliverableFixingDateType) { }
        public NonDeliverableFixingDateType(int val)
            : base(Tags.NonDeliverableFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoPaymentSchedules Field
    /// </summary>/
    public sealed class NoPaymentSchedules : IntField
    {
        public const int TAG = 40828;

        public NoPaymentSchedules()
            : base(Tags.NoPaymentSchedules) { }
        public NoPaymentSchedules(int val)
            : base(Tags.NoPaymentSchedules, val) { }

    }


    /// <summary>
    /// PaymentScheduleType Field
    /// </summary>/
    public sealed class PaymentScheduleType : IntField
    {
        public const int TAG = 40829;

        public PaymentScheduleType()
            : base(Tags.PaymentScheduleType) { }
        public PaymentScheduleType(int val)
            : base(Tags.PaymentScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int CASH_FLOW = 1;
        public const int FX_LINKED_NOTIONAL = 2;
        public const int FIXED_RATE = 3;
        public const int FUTURE_VALUE_NOTIONAL = 4;
        public const int KNOWN_AMOUNT = 5;
        public const int FLOATING_RATE_MULTIPLIER = 6;
        public const int SPREAD = 7;
        public const int CAP_RATE = 8;
        public const int FLOOR_RATE = 9;
        public const int NON_DELIVERABLE_SETTLEMENT_PAYMENT_DATES = 10;
        public const int NON_DELIVERABLE_SETTLEMENT_CALCULATION_DATES = 11;
        public const int NON_DELIVERABLE_FIXING_DATES = 12;
        public const int SETTLEMENT_PERIOD_NOTIONAL = 13;
        public const int SETTLEMENT_PERIOD_PRICE = 14;
        public const int CALCULATION_PERIOD = 15;
        public const int DIVIDEND_ACCRUAL_RATE_MULTIPLIER = 16;
        public const int DIVIDEND_ACCRUAL_RATE_SPREAD = 17;
        public const int DIVIDEND_ACCRUAL_CAP_RATE = 18;
        public const int DIVIDEND_ACCRUAL_FLOOR_RATE = 19;
        public const int COMPOUNDING_RATE_MULTIPLIER = 20;
        public const int COMPOUNDING_RATE_SPREAD = 21;
        public const int COMPOUNDING_CAP_RATE = 22;
        public const int COMPOUNDING_FLOOR_RATE = 23;
    }


    /// <summary>
    /// PaymentScheduleStubType Field
    /// </summary>/
    public sealed class PaymentScheduleStubType : IntField
    {
        public const int TAG = 40830;

        public PaymentScheduleStubType()
            : base(Tags.PaymentScheduleStubType) { }
        public PaymentScheduleStubType(int val)
            : base(Tags.PaymentScheduleStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// PaymentScheduleStartDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentScheduleStartDateUnadjusted : StringField
    {
        public const int TAG = 40831;

        public PaymentScheduleStartDateUnadjusted()
            : base(Tags.PaymentScheduleStartDateUnadjusted) { }
        public PaymentScheduleStartDateUnadjusted(string val)
            : base(Tags.PaymentScheduleStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentScheduleEndDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentScheduleEndDateUnadjusted : StringField
    {
        public const int TAG = 40832;

        public PaymentScheduleEndDateUnadjusted()
            : base(Tags.PaymentScheduleEndDateUnadjusted) { }
        public PaymentScheduleEndDateUnadjusted(string val)
            : base(Tags.PaymentScheduleEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentSchedulePaySide Field
    /// </summary>/
    public sealed class PaymentSchedulePaySide : IntField
    {
        public const int TAG = 40833;

        public PaymentSchedulePaySide()
            : base(Tags.PaymentSchedulePaySide) { }
        public PaymentSchedulePaySide(int val)
            : base(Tags.PaymentSchedulePaySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// PaymentScheduleReceiveSide Field
    /// </summary>/
    public sealed class PaymentScheduleReceiveSide : IntField
    {
        public const int TAG = 40834;

        public PaymentScheduleReceiveSide()
            : base(Tags.PaymentScheduleReceiveSide) { }
        public PaymentScheduleReceiveSide(int val)
            : base(Tags.PaymentScheduleReceiveSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// PaymentScheduleNotional Field
    /// </summary>/
    public sealed class PaymentScheduleNotional : DecimalField
    {
        public const int TAG = 40835;

        public PaymentScheduleNotional()
            : base(Tags.PaymentScheduleNotional) { }
        public PaymentScheduleNotional(Decimal val)
            : base(Tags.PaymentScheduleNotional, val) { }

    }


    /// <summary>
    /// PaymentScheduleCurrency Field
    /// </summary>/
    public sealed class PaymentScheduleCurrency : StringField
    {
        public const int TAG = 40836;

        public PaymentScheduleCurrency()
            : base(Tags.PaymentScheduleCurrency) { }
        public PaymentScheduleCurrency(string val)
            : base(Tags.PaymentScheduleCurrency, val) { }

    }


    /// <summary>
    /// PaymentScheduleRate Field
    /// </summary>/
    public sealed class PaymentScheduleRate : DecimalField
    {
        public const int TAG = 40837;

        public PaymentScheduleRate()
            : base(Tags.PaymentScheduleRate) { }
        public PaymentScheduleRate(Decimal val)
            : base(Tags.PaymentScheduleRate, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateMultiplier Field
    /// </summary>/
    public sealed class PaymentScheduleRateMultiplier : DecimalField
    {
        public const int TAG = 40838;

        public PaymentScheduleRateMultiplier()
            : base(Tags.PaymentScheduleRateMultiplier) { }
        public PaymentScheduleRateMultiplier(Decimal val)
            : base(Tags.PaymentScheduleRateMultiplier, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateSpread Field
    /// </summary>/
    public sealed class PaymentScheduleRateSpread : DecimalField
    {
        public const int TAG = 40839;

        public PaymentScheduleRateSpread()
            : base(Tags.PaymentScheduleRateSpread) { }
        public PaymentScheduleRateSpread(Decimal val)
            : base(Tags.PaymentScheduleRateSpread, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateSpreadPositionType Field
    /// </summary>/
    public sealed class PaymentScheduleRateSpreadPositionType : IntField
    {
        public const int TAG = 40840;

        public PaymentScheduleRateSpreadPositionType()
            : base(Tags.PaymentScheduleRateSpreadPositionType) { }
        public PaymentScheduleRateSpreadPositionType(int val)
            : base(Tags.PaymentScheduleRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentScheduleRateTreatment Field
    /// </summary>/
    public sealed class PaymentScheduleRateTreatment : IntField
    {
        public const int TAG = 40841;

        public PaymentScheduleRateTreatment()
            : base(Tags.PaymentScheduleRateTreatment) { }
        public PaymentScheduleRateTreatment(int val)
            : base(Tags.PaymentScheduleRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// PaymentScheduleFixedAmount Field
    /// </summary>/
    public sealed class PaymentScheduleFixedAmount : DecimalField
    {
        public const int TAG = 40842;

        public PaymentScheduleFixedAmount()
            : base(Tags.PaymentScheduleFixedAmount) { }
        public PaymentScheduleFixedAmount(Decimal val)
            : base(Tags.PaymentScheduleFixedAmount, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixedCurrency Field
    /// </summary>/
    public sealed class PaymentScheduleFixedCurrency : StringField
    {
        public const int TAG = 40843;

        public PaymentScheduleFixedCurrency()
            : base(Tags.PaymentScheduleFixedCurrency) { }
        public PaymentScheduleFixedCurrency(string val)
            : base(Tags.PaymentScheduleFixedCurrency, val) { }

    }


    /// <summary>
    /// PaymentScheduleStepFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentScheduleStepFrequencyPeriod : IntField
    {
        public const int TAG = 40844;

        public PaymentScheduleStepFrequencyPeriod()
            : base(Tags.PaymentScheduleStepFrequencyPeriod) { }
        public PaymentScheduleStepFrequencyPeriod(int val)
            : base(Tags.PaymentScheduleStepFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentScheduleStepFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentScheduleStepFrequencyUnit : StringField
    {
        public const int TAG = 40845;

        public PaymentScheduleStepFrequencyUnit()
            : base(Tags.PaymentScheduleStepFrequencyUnit) { }
        public PaymentScheduleStepFrequencyUnit(string val)
            : base(Tags.PaymentScheduleStepFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// PaymentScheduleStepOffsetValue Field
    /// </summary>/
    public sealed class PaymentScheduleStepOffsetValue : DecimalField
    {
        public const int TAG = 40846;

        public PaymentScheduleStepOffsetValue()
            : base(Tags.PaymentScheduleStepOffsetValue) { }
        public PaymentScheduleStepOffsetValue(Decimal val)
            : base(Tags.PaymentScheduleStepOffsetValue, val) { }

    }


    /// <summary>
    /// PaymentScheduleStepRate Field
    /// </summary>/
    public sealed class PaymentScheduleStepRate : DecimalField
    {
        public const int TAG = 40847;

        public PaymentScheduleStepRate()
            : base(Tags.PaymentScheduleStepRate) { }
        public PaymentScheduleStepRate(Decimal val)
            : base(Tags.PaymentScheduleStepRate, val) { }

    }


    /// <summary>
    /// PaymentScheduleStepOffsetRate Field
    /// </summary>/
    public sealed class PaymentScheduleStepOffsetRate : DecimalField
    {
        public const int TAG = 40848;

        public PaymentScheduleStepOffsetRate()
            : base(Tags.PaymentScheduleStepOffsetRate) { }
        public PaymentScheduleStepOffsetRate(Decimal val)
            : base(Tags.PaymentScheduleStepOffsetRate, val) { }

    }


    /// <summary>
    /// PaymentScheduleStepRelativeTo Field
    /// </summary>/
    public sealed class PaymentScheduleStepRelativeTo : IntField
    {
        public const int TAG = 40849;

        public PaymentScheduleStepRelativeTo()
            : base(Tags.PaymentScheduleStepRelativeTo) { }
        public PaymentScheduleStepRelativeTo(int val)
            : base(Tags.PaymentScheduleStepRelativeTo, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int PREVIOUS = 1;
    }


    /// <summary>
    /// PaymentScheduleFixingDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateUnadjusted : StringField
    {
        public const int TAG = 40850;

        public PaymentScheduleFixingDateUnadjusted()
            : base(Tags.PaymentScheduleFixingDateUnadjusted) { }
        public PaymentScheduleFixingDateUnadjusted(string val)
            : base(Tags.PaymentScheduleFixingDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentScheduleWeight Field
    /// </summary>/
    public sealed class PaymentScheduleWeight : DecimalField
    {
        public const int TAG = 40851;

        public PaymentScheduleWeight()
            : base(Tags.PaymentScheduleWeight) { }
        public PaymentScheduleWeight(Decimal val)
            : base(Tags.PaymentScheduleWeight, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateRelativeTo : IntField
    {
        public const int TAG = 40852;

        public PaymentScheduleFixingDateRelativeTo()
            : base(Tags.PaymentScheduleFixingDateRelativeTo) { }
        public PaymentScheduleFixingDateRelativeTo(int val)
            : base(Tags.PaymentScheduleFixingDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateBusinessDayConvention : IntField
    {
        public const int TAG = 40853;

        public PaymentScheduleFixingDateBusinessDayConvention()
            : base(Tags.PaymentScheduleFixingDateBusinessDayConvention) { }
        public PaymentScheduleFixingDateBusinessDayConvention(int val)
            : base(Tags.PaymentScheduleFixingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentScheduleFixingDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateBusinessCenter : StringField
    {
        public const int TAG = 40854;

        public PaymentScheduleFixingDateBusinessCenter()
            : base(Tags.PaymentScheduleFixingDateBusinessCenter) { }
        public PaymentScheduleFixingDateBusinessCenter(string val)
            : base(Tags.PaymentScheduleFixingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateOffsetPeriod : IntField
    {
        public const int TAG = 40855;

        public PaymentScheduleFixingDateOffsetPeriod()
            : base(Tags.PaymentScheduleFixingDateOffsetPeriod) { }
        public PaymentScheduleFixingDateOffsetPeriod(int val)
            : base(Tags.PaymentScheduleFixingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateOffsetUnit : StringField
    {
        public const int TAG = 40856;

        public PaymentScheduleFixingDateOffsetUnit()
            : base(Tags.PaymentScheduleFixingDateOffsetUnit) { }
        public PaymentScheduleFixingDateOffsetUnit(string val)
            : base(Tags.PaymentScheduleFixingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentScheduleFixingDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateOffsetDayType : IntField
    {
        public const int TAG = 40857;

        public PaymentScheduleFixingDateOffsetDayType()
            : base(Tags.PaymentScheduleFixingDateOffsetDayType) { }
        public PaymentScheduleFixingDateOffsetDayType(int val)
            : base(Tags.PaymentScheduleFixingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentScheduleFixingDateAdjusted Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDateAdjusted : StringField
    {
        public const int TAG = 40858;

        public PaymentScheduleFixingDateAdjusted()
            : base(Tags.PaymentScheduleFixingDateAdjusted) { }
        public PaymentScheduleFixingDateAdjusted(string val)
            : base(Tags.PaymentScheduleFixingDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingTime Field
    /// </summary>/
    public sealed class PaymentScheduleFixingTime : StringField
    {
        public const int TAG = 40859;

        public PaymentScheduleFixingTime()
            : base(Tags.PaymentScheduleFixingTime) { }
        public PaymentScheduleFixingTime(string val)
            : base(Tags.PaymentScheduleFixingTime, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class PaymentScheduleFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 40860;

        public PaymentScheduleFixingTimeBusinessCenter()
            : base(Tags.PaymentScheduleFixingTimeBusinessCenter) { }
        public PaymentScheduleFixingTimeBusinessCenter(string val)
            : base(Tags.PaymentScheduleFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentScheduleInterimExchangePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangePaymentDateRelativeTo : IntField
    {
        public const int TAG = 40861;

        public PaymentScheduleInterimExchangePaymentDateRelativeTo()
            : base(Tags.PaymentScheduleInterimExchangePaymentDateRelativeTo) { }
        public PaymentScheduleInterimExchangePaymentDateRelativeTo(int val)
            : base(Tags.PaymentScheduleInterimExchangePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDatesBusinessDayConvention : IntField
    {
        public const int TAG = 40862;

        public PaymentScheduleInterimExchangeDatesBusinessDayConvention()
            : base(Tags.PaymentScheduleInterimExchangeDatesBusinessDayConvention) { }
        public PaymentScheduleInterimExchangeDatesBusinessDayConvention(int val)
            : base(Tags.PaymentScheduleInterimExchangeDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDatesBusinessCenter Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDatesBusinessCenter : StringField
    {
        public const int TAG = 40863;

        public PaymentScheduleInterimExchangeDatesBusinessCenter()
            : base(Tags.PaymentScheduleInterimExchangeDatesBusinessCenter) { }
        public PaymentScheduleInterimExchangeDatesBusinessCenter(string val)
            : base(Tags.PaymentScheduleInterimExchangeDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDatesOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDatesOffsetPeriod : IntField
    {
        public const int TAG = 40864;

        public PaymentScheduleInterimExchangeDatesOffsetPeriod()
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetPeriod) { }
        public PaymentScheduleInterimExchangeDatesOffsetPeriod(int val)
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDatesOffsetUnit Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDatesOffsetUnit : StringField
    {
        public const int TAG = 40865;

        public PaymentScheduleInterimExchangeDatesOffsetUnit()
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetUnit) { }
        public PaymentScheduleInterimExchangeDatesOffsetUnit(string val)
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDatesOffsetDayType Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDatesOffsetDayType : IntField
    {
        public const int TAG = 40866;

        public PaymentScheduleInterimExchangeDatesOffsetDayType()
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetDayType) { }
        public PaymentScheduleInterimExchangeDatesOffsetDayType(int val)
            : base(Tags.PaymentScheduleInterimExchangeDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentScheduleInterimExchangeDateAdjusted Field
    /// </summary>/
    public sealed class PaymentScheduleInterimExchangeDateAdjusted : StringField
    {
        public const int TAG = 40867;

        public PaymentScheduleInterimExchangeDateAdjusted()
            : base(Tags.PaymentScheduleInterimExchangeDateAdjusted) { }
        public PaymentScheduleInterimExchangeDateAdjusted(string val)
            : base(Tags.PaymentScheduleInterimExchangeDateAdjusted, val) { }

    }


    /// <summary>
    /// NoPaymentScheduleRateSources Field
    /// </summary>/
    public sealed class NoPaymentScheduleRateSources : IntField
    {
        public const int TAG = 40868;

        public NoPaymentScheduleRateSources()
            : base(Tags.NoPaymentScheduleRateSources) { }
        public NoPaymentScheduleRateSources(int val)
            : base(Tags.NoPaymentScheduleRateSources, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateSource Field
    /// </summary>/
    public sealed class PaymentScheduleRateSource : IntField
    {
        public const int TAG = 40869;

        public PaymentScheduleRateSource()
            : base(Tags.PaymentScheduleRateSource) { }
        public PaymentScheduleRateSource(int val)
            : base(Tags.PaymentScheduleRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// PaymentScheduleRateSourceType Field
    /// </summary>/
    public sealed class PaymentScheduleRateSourceType : IntField
    {
        public const int TAG = 40870;

        public PaymentScheduleRateSourceType()
            : base(Tags.PaymentScheduleRateSourceType) { }
        public PaymentScheduleRateSourceType(int val)
            : base(Tags.PaymentScheduleRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// PaymentScheduleReferencePage Field
    /// </summary>/
    public sealed class PaymentScheduleReferencePage : StringField
    {
        public const int TAG = 40871;

        public PaymentScheduleReferencePage()
            : base(Tags.PaymentScheduleReferencePage) { }
        public PaymentScheduleReferencePage(string val)
            : base(Tags.PaymentScheduleReferencePage, val) { }

    }


    /// <summary>
    /// NoPaymentStubs Field
    /// </summary>/
    public sealed class NoPaymentStubs : IntField
    {
        public const int TAG = 40872;

        public NoPaymentStubs()
            : base(Tags.NoPaymentStubs) { }
        public NoPaymentStubs(int val)
            : base(Tags.NoPaymentStubs, val) { }

    }


    /// <summary>
    /// PaymentStubType Field
    /// </summary>/
    public sealed class PaymentStubType : IntField
    {
        public const int TAG = 40873;

        public PaymentStubType()
            : base(Tags.PaymentStubType) { }
        public PaymentStubType(int val)
            : base(Tags.PaymentStubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int FINAL = 1;
        public const int COMPOUNDING_INITIAL = 2;
        public const int COMPOUNDING_FINAL = 3;
    }


    /// <summary>
    /// PaymentStubLength Field
    /// </summary>/
    public sealed class PaymentStubLength : IntField
    {
        public const int TAG = 40874;

        public PaymentStubLength()
            : base(Tags.PaymentStubLength) { }
        public PaymentStubLength(int val)
            : base(Tags.PaymentStubLength, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentStubRate Field
    /// </summary>/
    public sealed class PaymentStubRate : DecimalField
    {
        public const int TAG = 40875;

        public PaymentStubRate()
            : base(Tags.PaymentStubRate) { }
        public PaymentStubRate(Decimal val)
            : base(Tags.PaymentStubRate, val) { }

    }


    /// <summary>
    /// PaymentStubFixedAmount Field
    /// </summary>/
    public sealed class PaymentStubFixedAmount : DecimalField
    {
        public const int TAG = 40876;

        public PaymentStubFixedAmount()
            : base(Tags.PaymentStubFixedAmount) { }
        public PaymentStubFixedAmount(Decimal val)
            : base(Tags.PaymentStubFixedAmount, val) { }

    }


    /// <summary>
    /// PaymentStubFixedCurrency Field
    /// </summary>/
    public sealed class PaymentStubFixedCurrency : StringField
    {
        public const int TAG = 40877;

        public PaymentStubFixedCurrency()
            : base(Tags.PaymentStubFixedCurrency) { }
        public PaymentStubFixedCurrency(string val)
            : base(Tags.PaymentStubFixedCurrency, val) { }

    }


    /// <summary>
    /// PaymentStubIndex Field
    /// </summary>/
    public sealed class PaymentStubIndex : StringField
    {
        public const int TAG = 40878;

        public PaymentStubIndex()
            : base(Tags.PaymentStubIndex) { }
        public PaymentStubIndex(string val)
            : base(Tags.PaymentStubIndex, val) { }

    }


    /// <summary>
    /// PaymentStubIndexSource Field
    /// </summary>/
    public sealed class PaymentStubIndexSource : IntField
    {
        public const int TAG = 40879;

        public PaymentStubIndexSource()
            : base(Tags.PaymentStubIndexSource) { }
        public PaymentStubIndexSource(int val)
            : base(Tags.PaymentStubIndexSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStubIndexCurvePeriod Field
    /// </summary>/
    public sealed class PaymentStubIndexCurvePeriod : IntField
    {
        public const int TAG = 40880;

        public PaymentStubIndexCurvePeriod()
            : base(Tags.PaymentStubIndexCurvePeriod) { }
        public PaymentStubIndexCurvePeriod(int val)
            : base(Tags.PaymentStubIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentStubIndexCurveUnit Field
    /// </summary>/
    public sealed class PaymentStubIndexCurveUnit : StringField
    {
        public const int TAG = 40881;

        public PaymentStubIndexCurveUnit()
            : base(Tags.PaymentStubIndexCurveUnit) { }
        public PaymentStubIndexCurveUnit(string val)
            : base(Tags.PaymentStubIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStubIndexRateMultiplier Field
    /// </summary>/
    public sealed class PaymentStubIndexRateMultiplier : DecimalField
    {
        public const int TAG = 40882;

        public PaymentStubIndexRateMultiplier()
            : base(Tags.PaymentStubIndexRateMultiplier) { }
        public PaymentStubIndexRateMultiplier(Decimal val)
            : base(Tags.PaymentStubIndexRateMultiplier, val) { }

    }


    /// <summary>
    /// PaymentStubIndexRateSpread Field
    /// </summary>/
    public sealed class PaymentStubIndexRateSpread : DecimalField
    {
        public const int TAG = 40883;

        public PaymentStubIndexRateSpread()
            : base(Tags.PaymentStubIndexRateSpread) { }
        public PaymentStubIndexRateSpread(Decimal val)
            : base(Tags.PaymentStubIndexRateSpread, val) { }

    }


    /// <summary>
    /// PaymentStubIndexRateSpreadPositionType Field
    /// </summary>/
    public sealed class PaymentStubIndexRateSpreadPositionType : IntField
    {
        public const int TAG = 40884;

        public PaymentStubIndexRateSpreadPositionType()
            : base(Tags.PaymentStubIndexRateSpreadPositionType) { }
        public PaymentStubIndexRateSpreadPositionType(int val)
            : base(Tags.PaymentStubIndexRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentStubIndexRateTreatment Field
    /// </summary>/
    public sealed class PaymentStubIndexRateTreatment : IntField
    {
        public const int TAG = 40885;

        public PaymentStubIndexRateTreatment()
            : base(Tags.PaymentStubIndexRateTreatment) { }
        public PaymentStubIndexRateTreatment(int val)
            : base(Tags.PaymentStubIndexRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// PaymentStubIndexCapRate Field
    /// </summary>/
    public sealed class PaymentStubIndexCapRate : DecimalField
    {
        public const int TAG = 40886;

        public PaymentStubIndexCapRate()
            : base(Tags.PaymentStubIndexCapRate) { }
        public PaymentStubIndexCapRate(Decimal val)
            : base(Tags.PaymentStubIndexCapRate, val) { }

    }


    /// <summary>
    /// PaymentStubIndexCapRateBuySide Field
    /// </summary>/
    public sealed class PaymentStubIndexCapRateBuySide : IntField
    {
        public const int TAG = 40887;

        public PaymentStubIndexCapRateBuySide()
            : base(Tags.PaymentStubIndexCapRateBuySide) { }
        public PaymentStubIndexCapRateBuySide(int val)
            : base(Tags.PaymentStubIndexCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStubIndexCapRateSellSide Field
    /// </summary>/
    public sealed class PaymentStubIndexCapRateSellSide : IntField
    {
        public const int TAG = 40888;

        public PaymentStubIndexCapRateSellSide()
            : base(Tags.PaymentStubIndexCapRateSellSide) { }
        public PaymentStubIndexCapRateSellSide(int val)
            : base(Tags.PaymentStubIndexCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStubIndexFloorRate Field
    /// </summary>/
    public sealed class PaymentStubIndexFloorRate : DecimalField
    {
        public const int TAG = 40889;

        public PaymentStubIndexFloorRate()
            : base(Tags.PaymentStubIndexFloorRate) { }
        public PaymentStubIndexFloorRate(Decimal val)
            : base(Tags.PaymentStubIndexFloorRate, val) { }

    }


    /// <summary>
    /// PaymentStubIndexFloorRateBuySide Field
    /// </summary>/
    public sealed class PaymentStubIndexFloorRateBuySide : IntField
    {
        public const int TAG = 40890;

        public PaymentStubIndexFloorRateBuySide()
            : base(Tags.PaymentStubIndexFloorRateBuySide) { }
        public PaymentStubIndexFloorRateBuySide(int val)
            : base(Tags.PaymentStubIndexFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStubIndexFloorRateSellSide Field
    /// </summary>/
    public sealed class PaymentStubIndexFloorRateSellSide : IntField
    {
        public const int TAG = 40891;

        public PaymentStubIndexFloorRateSellSide()
            : base(Tags.PaymentStubIndexFloorRateSellSide) { }
        public PaymentStubIndexFloorRateSellSide(int val)
            : base(Tags.PaymentStubIndexFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStubIndex2 Field
    /// </summary>/
    public sealed class PaymentStubIndex2 : StringField
    {
        public const int TAG = 40892;

        public PaymentStubIndex2()
            : base(Tags.PaymentStubIndex2) { }
        public PaymentStubIndex2(string val)
            : base(Tags.PaymentStubIndex2, val) { }

    }


    /// <summary>
    /// PaymentStubIndex2Source Field
    /// </summary>/
    public sealed class PaymentStubIndex2Source : IntField
    {
        public const int TAG = 40893;

        public PaymentStubIndex2Source()
            : base(Tags.PaymentStubIndex2Source) { }
        public PaymentStubIndex2Source(int val)
            : base(Tags.PaymentStubIndex2Source, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// PaymentStubIndex2CurvePeriod Field
    /// </summary>/
    public sealed class PaymentStubIndex2CurvePeriod : IntField
    {
        public const int TAG = 40894;

        public PaymentStubIndex2CurvePeriod()
            : base(Tags.PaymentStubIndex2CurvePeriod) { }
        public PaymentStubIndex2CurvePeriod(int val)
            : base(Tags.PaymentStubIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentStubIndex2CurveUnit Field
    /// </summary>/
    public sealed class PaymentStubIndex2CurveUnit : StringField
    {
        public const int TAG = 40895;

        public PaymentStubIndex2CurveUnit()
            : base(Tags.PaymentStubIndex2CurveUnit) { }
        public PaymentStubIndex2CurveUnit(string val)
            : base(Tags.PaymentStubIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStubIndex2RateMultiplier Field
    /// </summary>/
    public sealed class PaymentStubIndex2RateMultiplier : DecimalField
    {
        public const int TAG = 40896;

        public PaymentStubIndex2RateMultiplier()
            : base(Tags.PaymentStubIndex2RateMultiplier) { }
        public PaymentStubIndex2RateMultiplier(Decimal val)
            : base(Tags.PaymentStubIndex2RateMultiplier, val) { }

    }


    /// <summary>
    /// PaymentStubIndex2RateSpread Field
    /// </summary>/
    public sealed class PaymentStubIndex2RateSpread : DecimalField
    {
        public const int TAG = 40897;

        public PaymentStubIndex2RateSpread()
            : base(Tags.PaymentStubIndex2RateSpread) { }
        public PaymentStubIndex2RateSpread(Decimal val)
            : base(Tags.PaymentStubIndex2RateSpread, val) { }

    }


    /// <summary>
    /// PaymentStubIndex2RateSpreadPositionType Field
    /// </summary>/
    public sealed class PaymentStubIndex2RateSpreadPositionType : IntField
    {
        public const int TAG = 40898;

        public PaymentStubIndex2RateSpreadPositionType()
            : base(Tags.PaymentStubIndex2RateSpreadPositionType) { }
        public PaymentStubIndex2RateSpreadPositionType(int val)
            : base(Tags.PaymentStubIndex2RateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentStubIndex2RateTreatment Field
    /// </summary>/
    public sealed class PaymentStubIndex2RateTreatment : IntField
    {
        public const int TAG = 40899;

        public PaymentStubIndex2RateTreatment()
            : base(Tags.PaymentStubIndex2RateTreatment) { }
        public PaymentStubIndex2RateTreatment(int val)
            : base(Tags.PaymentStubIndex2RateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// PaymentStubIndex2CapRate Field
    /// </summary>/
    public sealed class PaymentStubIndex2CapRate : DecimalField
    {
        public const int TAG = 40900;

        public PaymentStubIndex2CapRate()
            : base(Tags.PaymentStubIndex2CapRate) { }
        public PaymentStubIndex2CapRate(Decimal val)
            : base(Tags.PaymentStubIndex2CapRate, val) { }

    }


    /// <summary>
    /// PaymentStubIndex2FloorRate Field
    /// </summary>/
    public sealed class PaymentStubIndex2FloorRate : DecimalField
    {
        public const int TAG = 40901;

        public PaymentStubIndex2FloorRate()
            : base(Tags.PaymentStubIndex2FloorRate) { }
        public PaymentStubIndex2FloorRate(Decimal val)
            : base(Tags.PaymentStubIndex2FloorRate, val) { }

    }


    /// <summary>
    /// NoLegSettlRateFallbacks Field
    /// </summary>/
    public sealed class NoLegSettlRateFallbacks : IntField
    {
        public const int TAG = 40902;

        public NoLegSettlRateFallbacks()
            : base(Tags.NoLegSettlRateFallbacks) { }
        public NoLegSettlRateFallbacks(int val)
            : base(Tags.NoLegSettlRateFallbacks, val) { }

    }


    /// <summary>
    /// LegSettlRatePostponementMaximumDays Field
    /// </summary>/
    public sealed class LegSettlRatePostponementMaximumDays : IntField
    {
        public const int TAG = 40903;

        public LegSettlRatePostponementMaximumDays()
            : base(Tags.LegSettlRatePostponementMaximumDays) { }
        public LegSettlRatePostponementMaximumDays(int val)
            : base(Tags.LegSettlRatePostponementMaximumDays, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRateFallbackRateSource Field
    /// </summary>/
    public sealed class UnderlyingSettlRateFallbackRateSource : IntField
    {
        public const int TAG = 40904;

        public UnderlyingSettlRateFallbackRateSource()
            : base(Tags.UnderlyingSettlRateFallbackRateSource) { }
        public UnderlyingSettlRateFallbackRateSource(int val)
            : base(Tags.UnderlyingSettlRateFallbackRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// LegSettlRatePostponementSurvey Field
    /// </summary>/
    public sealed class LegSettlRatePostponementSurvey : BooleanField
    {
        public const int TAG = 40905;

        public LegSettlRatePostponementSurvey()
            : base(Tags.LegSettlRatePostponementSurvey) { }
        public LegSettlRatePostponementSurvey(Boolean val)
            : base(Tags.LegSettlRatePostponementSurvey, val) { }

    }


    /// <summary>
    /// LegSettlRatePostponementCalculationAgent Field
    /// </summary>/
    public sealed class LegSettlRatePostponementCalculationAgent : IntField
    {
        public const int TAG = 40906;

        public LegSettlRatePostponementCalculationAgent()
            : base(Tags.LegSettlRatePostponementCalculationAgent) { }
        public LegSettlRatePostponementCalculationAgent(int val)
            : base(Tags.LegSettlRatePostponementCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// StreamEffectiveDateUnadjusted Field
    /// </summary>/
    public sealed class StreamEffectiveDateUnadjusted : StringField
    {
        public const int TAG = 40907;

        public StreamEffectiveDateUnadjusted()
            : base(Tags.StreamEffectiveDateUnadjusted) { }
        public StreamEffectiveDateUnadjusted(string val)
            : base(Tags.StreamEffectiveDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamEffectiveDateBusinessDayConvention Field
    /// </summary>/
    public sealed class StreamEffectiveDateBusinessDayConvention : IntField
    {
        public const int TAG = 40908;

        public StreamEffectiveDateBusinessDayConvention()
            : base(Tags.StreamEffectiveDateBusinessDayConvention) { }
        public StreamEffectiveDateBusinessDayConvention(int val)
            : base(Tags.StreamEffectiveDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// StreamEffectiveDateBusinessCenter Field
    /// </summary>/
    public sealed class StreamEffectiveDateBusinessCenter : StringField
    {
        public const int TAG = 40909;

        public StreamEffectiveDateBusinessCenter()
            : base(Tags.StreamEffectiveDateBusinessCenter) { }
        public StreamEffectiveDateBusinessCenter(string val)
            : base(Tags.StreamEffectiveDateBusinessCenter, val) { }

    }


    /// <summary>
    /// StreamEffectiveDateRelativeTo Field
    /// </summary>/
    public sealed class StreamEffectiveDateRelativeTo : IntField
    {
        public const int TAG = 40910;

        public StreamEffectiveDateRelativeTo()
            : base(Tags.StreamEffectiveDateRelativeTo) { }
        public StreamEffectiveDateRelativeTo(int val)
            : base(Tags.StreamEffectiveDateRelativeTo, val) { }

    }


    /// <summary>
    /// StreamEffectiveDateOffsetPeriod Field
    /// </summary>/
    public sealed class StreamEffectiveDateOffsetPeriod : IntField
    {
        public const int TAG = 40911;

        public StreamEffectiveDateOffsetPeriod()
            : base(Tags.StreamEffectiveDateOffsetPeriod) { }
        public StreamEffectiveDateOffsetPeriod(int val)
            : base(Tags.StreamEffectiveDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// StreamEffectiveDateOffsetUnit Field
    /// </summary>/
    public sealed class StreamEffectiveDateOffsetUnit : StringField
    {
        public const int TAG = 40912;

        public StreamEffectiveDateOffsetUnit()
            : base(Tags.StreamEffectiveDateOffsetUnit) { }
        public StreamEffectiveDateOffsetUnit(string val)
            : base(Tags.StreamEffectiveDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// StreamEffectiveDateOffsetDayType Field
    /// </summary>/
    public sealed class StreamEffectiveDateOffsetDayType : IntField
    {
        public const int TAG = 40913;

        public StreamEffectiveDateOffsetDayType()
            : base(Tags.StreamEffectiveDateOffsetDayType) { }
        public StreamEffectiveDateOffsetDayType(int val)
            : base(Tags.StreamEffectiveDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// StreamEffectiveDateAdjusted Field
    /// </summary>/
    public sealed class StreamEffectiveDateAdjusted : StringField
    {
        public const int TAG = 40914;

        public StreamEffectiveDateAdjusted()
            : base(Tags.StreamEffectiveDateAdjusted) { }
        public StreamEffectiveDateAdjusted(string val)
            : base(Tags.StreamEffectiveDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingSettlRateFallbackReferencePage Field
    /// </summary>/
    public sealed class UnderlyingSettlRateFallbackReferencePage : StringField
    {
        public const int TAG = 40915;

        public UnderlyingSettlRateFallbackReferencePage()
            : base(Tags.UnderlyingSettlRateFallbackReferencePage) { }
        public UnderlyingSettlRateFallbackReferencePage(string val)
            : base(Tags.UnderlyingSettlRateFallbackReferencePage, val) { }

    }


    /// <summary>
    /// CashSettlValuationSubsequentBusinessDaysOffset Field
    /// </summary>/
    public sealed class CashSettlValuationSubsequentBusinessDaysOffset : IntField
    {
        public const int TAG = 40916;

        public CashSettlValuationSubsequentBusinessDaysOffset()
            : base(Tags.CashSettlValuationSubsequentBusinessDaysOffset) { }
        public CashSettlValuationSubsequentBusinessDaysOffset(int val)
            : base(Tags.CashSettlValuationSubsequentBusinessDaysOffset, val) { }

    }


    /// <summary>
    /// CashSettlNumOfValuationDates Field
    /// </summary>/
    public sealed class CashSettlNumOfValuationDates : IntField
    {
        public const int TAG = 40917;

        public CashSettlNumOfValuationDates()
            : base(Tags.CashSettlNumOfValuationDates) { }
        public CashSettlNumOfValuationDates(int val)
            : base(Tags.CashSettlNumOfValuationDates, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionPartyRoleQualifier Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartyRoleQualifier : IntField
    {
        public const int TAG = 40918;

        public UnderlyingProvisionPartyRoleQualifier()
            : base(Tags.UnderlyingProvisionPartyRoleQualifier) { }
        public UnderlyingProvisionPartyRoleQualifier(int val)
            : base(Tags.UnderlyingProvisionPartyRoleQualifier, val) { }


        // Field Enumerations
        public const int AGENCY = 0;
        public const int PRINCIPAL = 1;
        public const int RISKLESS_PRINCIPAL = 2;
        public const int GENERAL_CLEARING_MEMBER = 3;
        public const int INDIVIDUAL_CLEARING_MEMBER = 4;
        public const int PREFERRED_MARKET_MAKER = 5;
        public const int DIRECTED_MARKET_MAKER = 6;
        public const int BANK = 7;
        public const int HUB = 8;
        public const int PRIMARY_TRADE_REPOSITORY = 9;
        public const int ORIGINAL_TRADE_REPOSITORY = 10;
        public const int ADDITIONAL_INTERNATIONAL_TRADE_REPOSITORY = 11;
        public const int ADDITIONAL_DOMESTIC_TRADE_REPOSITORY = 12;
        public const int RELATED_EXCHANGE = 13;
        public const int OPTIONS_EXCHANGE = 14;
        public const int SPECIFIED_EXCHANGE = 15;
        public const int CONSTITUENT_EXCHANGE = 16;
        public const int EXEMPT_FROM_TRADE_REPORTING = 17;
        public const int CURRENT = 18;
        public const int NEW = 19;
        public const int DESIGNATED_SPONSOR = 20;
        public const int SPECIALIST = 21;
        public const int ALGORITHM = 22;
        public const int FIRM_OR_LEGAL_ENTITY = 23;
        public const int NATURAL_PERSON = 24;
        public const int REGULAR_TRADER = 25;
        public const int HEAD_TRADER = 26;
        public const int SUPERVISOR = 27;
        public const int TRI_PARTY = 28;
        public const int LENDER = 29;
    }


    /// <summary>
    /// PaymentPriceType Field
    /// </summary>/
    public sealed class PaymentPriceType : IntField
    {
        public const int TAG = 40919;

        public PaymentPriceType()
            : base(Tags.PaymentPriceType) { }
        public PaymentPriceType(int val)
            : base(Tags.PaymentPriceType, val) { }


        // Field Enumerations
        public const int PERCENTAGE = 1;
        public const int PER_UNIT = 2;
        public const int FIXED_AMOUNT = 3;
        public const int DISCOUNT = 4;
        public const int PREMIUM = 5;
        public const int SPREAD = 6;
        public const int TED_PRICE = 7;
        public const int TED_YIELD = 8;
        public const int YIELD = 9;
        public const int FIXED_CABINET_TRADE_PRICE = 10;
        public const int VARIABLE_CABINET_TRADE_PRICE = 11;
        public const int PRODUCT_TICKS_IN_HALVES = 13;
        public const int PRODUCT_TICKS_IN_FOURTHS = 14;
        public const int PRODUCT_TICKS_IN_EIGHTHS = 15;
        public const int PRODUCT_TICKS_IN_SIXTEENTHS = 16;
        public const int PRODUCT_TICKS_IN_THIRTY_SECONDS = 17;
        public const int PRODUCT_TICKS_IN_SIXTY_FOURTHS = 18;
        public const int PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTHS = 19;
        public const int NORMAL_RATE_REPRESENTATION = 20;
        public const int INVERSE_RATE_REPRESENTATION = 21;
        public const int BASIS_POINTS = 22;
        public const int UP_FRONT_POINTS = 23;
        public const int INTEREST_RATE = 24;
        public const int PRICE_SPREAD = 12;
        public const int PERCENTAGE_OF_NOTIONAL = 25;
    }


    /// <summary>
    /// PaymentStreamPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 40920;

        public PaymentStreamPaymentDateOffsetDayType()
            : base(Tags.PaymentStreamPaymentDateOffsetDayType) { }
        public PaymentStreamPaymentDateOffsetDayType(int val)
            : base(Tags.PaymentStreamPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// BusinessDayConvention Field
    /// </summary>/
    public sealed class BusinessDayConvention : IntField
    {
        public const int TAG = 40921;

        public BusinessDayConvention()
            : base(Tags.BusinessDayConvention) { }
        public BusinessDayConvention(int val)
            : base(Tags.BusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// DateRollConvention Field
    /// </summary>/
    public sealed class DateRollConvention : StringField
    {
        public const int TAG = 40922;

        public DateRollConvention()
            : base(Tags.DateRollConvention) { }
        public DateRollConvention(string val)
            : base(Tags.DateRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoLegBusinessCenters Field
    /// </summary>/
    public sealed class NoLegBusinessCenters : IntField
    {
        public const int TAG = 40923;

        public NoLegBusinessCenters()
            : base(Tags.NoLegBusinessCenters) { }
        public NoLegBusinessCenters(int val)
            : base(Tags.NoLegBusinessCenters, val) { }

    }


    /// <summary>
    /// LegBusinessCenter Field
    /// </summary>/
    public sealed class LegBusinessCenter : StringField
    {
        public const int TAG = 40924;

        public LegBusinessCenter()
            : base(Tags.LegBusinessCenter) { }
        public LegBusinessCenter(string val)
            : base(Tags.LegBusinessCenter, val) { }

    }


    /// <summary>
    /// LegBusinessDayConvention Field
    /// </summary>/
    public sealed class LegBusinessDayConvention : IntField
    {
        public const int TAG = 40925;

        public LegBusinessDayConvention()
            : base(Tags.LegBusinessDayConvention) { }
        public LegBusinessDayConvention(int val)
            : base(Tags.LegBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegDateRollConvention Field
    /// </summary>/
    public sealed class LegDateRollConvention : StringField
    {
        public const int TAG = 40926;

        public LegDateRollConvention()
            : base(Tags.LegDateRollConvention) { }
        public LegDateRollConvention(string val)
            : base(Tags.LegDateRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoLegPaymentScheduleFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentScheduleFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40927;

        public NoLegPaymentScheduleFixingDateBusinessCenters()
            : base(Tags.NoLegPaymentScheduleFixingDateBusinessCenters) { }
        public NoLegPaymentScheduleFixingDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentScheduleFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentScheduleInterimExchangeDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentScheduleInterimExchangeDateBusinessCenters : IntField
    {
        public const int TAG = 40928;

        public NoLegPaymentScheduleInterimExchangeDateBusinessCenters()
            : base(Tags.NoLegPaymentScheduleInterimExchangeDateBusinessCenters) { }
        public NoLegPaymentScheduleInterimExchangeDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentScheduleInterimExchangeDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40929;

        public NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters()
            : base(Tags.NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters) { }
        public NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamNonDeliverableFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 40930;

        public NoLegPaymentStreamPaymentDateBusinessCenters()
            : base(Tags.NoLegPaymentStreamPaymentDateBusinessCenters) { }
        public NoLegPaymentStreamPaymentDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamResetDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamResetDateBusinessCenters : IntField
    {
        public const int TAG = 40931;

        public NoLegPaymentStreamResetDateBusinessCenters()
            : base(Tags.NoLegPaymentStreamResetDateBusinessCenters) { }
        public NoLegPaymentStreamResetDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamResetDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamInitialFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamInitialFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40932;

        public NoLegPaymentStreamInitialFixingDateBusinessCenters()
            : base(Tags.NoLegPaymentStreamInitialFixingDateBusinessCenters) { }
        public NoLegPaymentStreamInitialFixingDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamInitialFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40933;

        public NoLegPaymentStreamFixingDateBusinessCenters()
            : base(Tags.NoLegPaymentStreamFixingDateBusinessCenters) { }
        public NoLegPaymentStreamFixingDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionCashSettlPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionCashSettlPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 40934;

        public NoLegProvisionCashSettlPaymentDateBusinessCenters()
            : base(Tags.NoLegProvisionCashSettlPaymentDateBusinessCenters) { }
        public NoLegProvisionCashSettlPaymentDateBusinessCenters(int val)
            : base(Tags.NoLegProvisionCashSettlPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionCashSettlValueDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionCashSettlValueDateBusinessCenters : IntField
    {
        public const int TAG = 40935;

        public NoLegProvisionCashSettlValueDateBusinessCenters()
            : base(Tags.NoLegProvisionCashSettlValueDateBusinessCenters) { }
        public NoLegProvisionCashSettlValueDateBusinessCenters(int val)
            : base(Tags.NoLegProvisionCashSettlValueDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 40936;

        public NoLegProvisionOptionExerciseBusinessCenters()
            : base(Tags.NoLegProvisionOptionExerciseBusinessCenters) { }
        public NoLegProvisionOptionExerciseBusinessCenters(int val)
            : base(Tags.NoLegProvisionOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionOptionExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionOptionExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 40937;

        public NoLegProvisionOptionExpirationDateBusinessCenters()
            : base(Tags.NoLegProvisionOptionExpirationDateBusinessCenters) { }
        public NoLegProvisionOptionExpirationDateBusinessCenters(int val)
            : base(Tags.NoLegProvisionOptionExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters : IntField
    {
        public const int TAG = 40938;

        public NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters()
            : base(Tags.NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters) { }
        public NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters(int val)
            : base(Tags.NoLegProvisionOptionRelevantUnderlyingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegProvisionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegProvisionDateBusinessCenters : IntField
    {
        public const int TAG = 40939;

        public NoLegProvisionDateBusinessCenters()
            : base(Tags.NoLegProvisionDateBusinessCenters) { }
        public NoLegProvisionDateBusinessCenters(int val)
            : base(Tags.NoLegProvisionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegStreamCalculationPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoLegStreamCalculationPeriodBusinessCenters : IntField
    {
        public const int TAG = 40940;

        public NoLegStreamCalculationPeriodBusinessCenters()
            : base(Tags.NoLegStreamCalculationPeriodBusinessCenters) { }
        public NoLegStreamCalculationPeriodBusinessCenters(int val)
            : base(Tags.NoLegStreamCalculationPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegStreamFirstPeriodStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegStreamFirstPeriodStartDateBusinessCenters : IntField
    {
        public const int TAG = 40941;

        public NoLegStreamFirstPeriodStartDateBusinessCenters()
            : base(Tags.NoLegStreamFirstPeriodStartDateBusinessCenters) { }
        public NoLegStreamFirstPeriodStartDateBusinessCenters(int val)
            : base(Tags.NoLegStreamFirstPeriodStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegStreamEffectiveDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegStreamEffectiveDateBusinessCenters : IntField
    {
        public const int TAG = 40942;

        public NoLegStreamEffectiveDateBusinessCenters()
            : base(Tags.NoLegStreamEffectiveDateBusinessCenters) { }
        public NoLegStreamEffectiveDateBusinessCenters(int val)
            : base(Tags.NoLegStreamEffectiveDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoLegStreamTerminationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegStreamTerminationDateBusinessCenters : IntField
    {
        public const int TAG = 40943;

        public NoLegStreamTerminationDateBusinessCenters()
            : base(Tags.NoLegStreamTerminationDateBusinessCenters) { }
        public NoLegStreamTerminationDateBusinessCenters(int val)
            : base(Tags.NoLegStreamTerminationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentBusinessCenters : IntField
    {
        public const int TAG = 40944;

        public NoPaymentBusinessCenters()
            : base(Tags.NoPaymentBusinessCenters) { }
        public NoPaymentBusinessCenters(int val)
            : base(Tags.NoPaymentBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentScheduleInterimExchangeDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentScheduleInterimExchangeDateBusinessCenters : IntField
    {
        public const int TAG = 40945;

        public NoPaymentScheduleInterimExchangeDateBusinessCenters()
            : base(Tags.NoPaymentScheduleInterimExchangeDateBusinessCenters) { }
        public NoPaymentScheduleInterimExchangeDateBusinessCenters(int val)
            : base(Tags.NoPaymentScheduleInterimExchangeDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentStreamNonDeliverableFixingDatesBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamNonDeliverableFixingDatesBusinessCenters : IntField
    {
        public const int TAG = 40946;

        public NoPaymentStreamNonDeliverableFixingDatesBusinessCenters()
            : base(Tags.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters) { }
        public NoPaymentStreamNonDeliverableFixingDatesBusinessCenters(int val)
            : base(Tags.NoPaymentStreamNonDeliverableFixingDatesBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentStreamPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 40947;

        public NoPaymentStreamPaymentDateBusinessCenters()
            : base(Tags.NoPaymentStreamPaymentDateBusinessCenters) { }
        public NoPaymentStreamPaymentDateBusinessCenters(int val)
            : base(Tags.NoPaymentStreamPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentStreamResetDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamResetDateBusinessCenters : IntField
    {
        public const int TAG = 40948;

        public NoPaymentStreamResetDateBusinessCenters()
            : base(Tags.NoPaymentStreamResetDateBusinessCenters) { }
        public NoPaymentStreamResetDateBusinessCenters(int val)
            : base(Tags.NoPaymentStreamResetDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentStreamInitialFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamInitialFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40949;

        public NoPaymentStreamInitialFixingDateBusinessCenters()
            : base(Tags.NoPaymentStreamInitialFixingDateBusinessCenters) { }
        public NoPaymentStreamInitialFixingDateBusinessCenters(int val)
            : base(Tags.NoPaymentStreamInitialFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentStreamFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40950;

        public NoPaymentStreamFixingDateBusinessCenters()
            : base(Tags.NoPaymentStreamFixingDateBusinessCenters) { }
        public NoPaymentStreamFixingDateBusinessCenters(int val)
            : base(Tags.NoPaymentStreamFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProtectionTermEventNewsSources Field
    /// </summary>/
    public sealed class NoProtectionTermEventNewsSources : IntField
    {
        public const int TAG = 40951;

        public NoProtectionTermEventNewsSources()
            : base(Tags.NoProtectionTermEventNewsSources) { }
        public NoProtectionTermEventNewsSources(int val)
            : base(Tags.NoProtectionTermEventNewsSources, val) { }

    }


    /// <summary>
    /// NoProvisionCashSettlPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionCashSettlPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 40952;

        public NoProvisionCashSettlPaymentDateBusinessCenters()
            : base(Tags.NoProvisionCashSettlPaymentDateBusinessCenters) { }
        public NoProvisionCashSettlPaymentDateBusinessCenters(int val)
            : base(Tags.NoProvisionCashSettlPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProvisionCashSettlValueDateBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionCashSettlValueDateBusinessCenters : IntField
    {
        public const int TAG = 40953;

        public NoProvisionCashSettlValueDateBusinessCenters()
            : base(Tags.NoProvisionCashSettlValueDateBusinessCenters) { }
        public NoProvisionCashSettlValueDateBusinessCenters(int val)
            : base(Tags.NoProvisionCashSettlValueDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProvisionOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 40954;

        public NoProvisionOptionExerciseBusinessCenters()
            : base(Tags.NoProvisionOptionExerciseBusinessCenters) { }
        public NoProvisionOptionExerciseBusinessCenters(int val)
            : base(Tags.NoProvisionOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProvisionOptionExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionOptionExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 40955;

        public NoProvisionOptionExpirationDateBusinessCenters()
            : base(Tags.NoProvisionOptionExpirationDateBusinessCenters) { }
        public NoProvisionOptionExpirationDateBusinessCenters(int val)
            : base(Tags.NoProvisionOptionExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProvisionOptionRelevantUnderlyingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionOptionRelevantUnderlyingDateBusinessCenters : IntField
    {
        public const int TAG = 40956;

        public NoProvisionOptionRelevantUnderlyingDateBusinessCenters()
            : base(Tags.NoProvisionOptionRelevantUnderlyingDateBusinessCenters) { }
        public NoProvisionOptionRelevantUnderlyingDateBusinessCenters(int val)
            : base(Tags.NoProvisionOptionRelevantUnderlyingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoProvisionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoProvisionDateBusinessCenters : IntField
    {
        public const int TAG = 40957;

        public NoProvisionDateBusinessCenters()
            : base(Tags.NoProvisionDateBusinessCenters) { }
        public NoProvisionDateBusinessCenters(int val)
            : base(Tags.NoProvisionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoStreamCalculationPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoStreamCalculationPeriodBusinessCenters : IntField
    {
        public const int TAG = 40958;

        public NoStreamCalculationPeriodBusinessCenters()
            : base(Tags.NoStreamCalculationPeriodBusinessCenters) { }
        public NoStreamCalculationPeriodBusinessCenters(int val)
            : base(Tags.NoStreamCalculationPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// NoStreamFirstPeriodStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoStreamFirstPeriodStartDateBusinessCenters : IntField
    {
        public const int TAG = 40959;

        public NoStreamFirstPeriodStartDateBusinessCenters()
            : base(Tags.NoStreamFirstPeriodStartDateBusinessCenters) { }
        public NoStreamFirstPeriodStartDateBusinessCenters(int val)
            : base(Tags.NoStreamFirstPeriodStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoStreamEffectiveBusinessCenters Field
    /// </summary>/
    public sealed class NoStreamEffectiveBusinessCenters : IntField
    {
        public const int TAG = 40960;

        public NoStreamEffectiveBusinessCenters()
            : base(Tags.NoStreamEffectiveBusinessCenters) { }
        public NoStreamEffectiveBusinessCenters(int val)
            : base(Tags.NoStreamEffectiveBusinessCenters, val) { }

    }


    /// <summary>
    /// NoStreamTerminationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoStreamTerminationDateBusinessCenters : IntField
    {
        public const int TAG = 40961;

        public NoStreamTerminationDateBusinessCenters()
            : base(Tags.NoStreamTerminationDateBusinessCenters) { }
        public NoStreamTerminationDateBusinessCenters(int val)
            : base(Tags.NoStreamTerminationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingBusinessCenters : IntField
    {
        public const int TAG = 40962;

        public NoUnderlyingBusinessCenters()
            : base(Tags.NoUnderlyingBusinessCenters) { }
        public NoUnderlyingBusinessCenters(int val)
            : base(Tags.NoUnderlyingBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingBusinessCenter : StringField
    {
        public const int TAG = 40963;

        public UnderlyingBusinessCenter()
            : base(Tags.UnderlyingBusinessCenter) { }
        public UnderlyingBusinessCenter(string val)
            : base(Tags.UnderlyingBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingBusinessDayConvention : IntField
    {
        public const int TAG = 40964;

        public UnderlyingBusinessDayConvention()
            : base(Tags.UnderlyingBusinessDayConvention) { }
        public UnderlyingBusinessDayConvention(int val)
            : base(Tags.UnderlyingBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingDateRollConvention Field
    /// </summary>/
    public sealed class UnderlyingDateRollConvention : StringField
    {
        public const int TAG = 40965;

        public UnderlyingDateRollConvention()
            : base(Tags.UnderlyingDateRollConvention) { }
        public UnderlyingDateRollConvention(string val)
            : base(Tags.UnderlyingDateRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoUnderlyingPaymentScheduleFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentScheduleFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40966;

        public NoUnderlyingPaymentScheduleFixingDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters) { }
        public NoUnderlyingPaymentScheduleFixingDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentScheduleFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters : IntField
    {
        public const int TAG = 40967;

        public NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters) { }
        public NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentScheduleInterimExchangeDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters : IntField
    {
        public const int TAG = 40968;

        public NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters) { }
        public NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 40969;

        public NoUnderlyingPaymentStreamPaymentDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters) { }
        public NoUnderlyingPaymentStreamPaymentDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamResetDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamResetDateBusinessCenters : IntField
    {
        public const int TAG = 40970;

        public NoUnderlyingPaymentStreamResetDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters) { }
        public NoUnderlyingPaymentStreamResetDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamResetDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40971;

        public NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters) { }
        public NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamInitialFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40972;

        public NoUnderlyingPaymentStreamFixingDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters) { }
        public NoUnderlyingPaymentStreamFixingDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCalculationPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCalculationPeriodBusinessCenters : IntField
    {
        public const int TAG = 40973;

        public NoUnderlyingStreamCalculationPeriodBusinessCenters()
            : base(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters) { }
        public NoUnderlyingStreamCalculationPeriodBusinessCenters(int val)
            : base(Tags.NoUnderlyingStreamCalculationPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamFirstPeriodStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingStreamFirstPeriodStartDateBusinessCenters : IntField
    {
        public const int TAG = 40974;

        public NoUnderlyingStreamFirstPeriodStartDateBusinessCenters()
            : base(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters) { }
        public NoUnderlyingStreamFirstPeriodStartDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingStreamFirstPeriodStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamEffectiveDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingStreamEffectiveDateBusinessCenters : IntField
    {
        public const int TAG = 40975;

        public NoUnderlyingStreamEffectiveDateBusinessCenters()
            : base(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters) { }
        public NoUnderlyingStreamEffectiveDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingStreamEffectiveDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamTerminationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingStreamTerminationDateBusinessCenters : IntField
    {
        public const int TAG = 40976;

        public NoUnderlyingStreamTerminationDateBusinessCenters()
            : base(Tags.NoUnderlyingStreamTerminationDateBusinessCenters) { }
        public NoUnderlyingStreamTerminationDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingStreamTerminationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// NoPaymentScheduleFixingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentScheduleFixingDateBusinessCenters : IntField
    {
        public const int TAG = 40977;

        public NoPaymentScheduleFixingDateBusinessCenters()
            : base(Tags.NoPaymentScheduleFixingDateBusinessCenters) { }
        public NoPaymentScheduleFixingDateBusinessCenters(int val)
            : base(Tags.NoPaymentScheduleFixingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// EncodedLegStreamTextLen Field
    /// </summary>/
    public sealed class EncodedLegStreamTextLen : IntField
    {
        public const int TAG = 40978;

        public EncodedLegStreamTextLen()
            : base(Tags.EncodedLegStreamTextLen) { }
        public EncodedLegStreamTextLen(int val)
            : base(Tags.EncodedLegStreamTextLen, val) { }

    }


    /// <summary>
    /// EncodedLegStreamText Field
    /// </summary>/
    public sealed class EncodedLegStreamText : StringField
    {
        public const int TAG = 40979;

        public EncodedLegStreamText()
            : base(Tags.EncodedLegStreamText) { }
        public EncodedLegStreamText(string val)
            : base(Tags.EncodedLegStreamText, val) { }

    }


    /// <summary>
    /// EncodedLegProvisionTextLen Field
    /// </summary>/
    public sealed class EncodedLegProvisionTextLen : IntField
    {
        public const int TAG = 40980;

        public EncodedLegProvisionTextLen()
            : base(Tags.EncodedLegProvisionTextLen) { }
        public EncodedLegProvisionTextLen(int val)
            : base(Tags.EncodedLegProvisionTextLen, val) { }

    }


    /// <summary>
    /// EncodedLegProvisionText Field
    /// </summary>/
    public sealed class EncodedLegProvisionText : StringField
    {
        public const int TAG = 40981;

        public EncodedLegProvisionText()
            : base(Tags.EncodedLegProvisionText) { }
        public EncodedLegProvisionText(string val)
            : base(Tags.EncodedLegProvisionText, val) { }

    }


    /// <summary>
    /// EncodedStreamTextLen Field
    /// </summary>/
    public sealed class EncodedStreamTextLen : IntField
    {
        public const int TAG = 40982;

        public EncodedStreamTextLen()
            : base(Tags.EncodedStreamTextLen) { }
        public EncodedStreamTextLen(int val)
            : base(Tags.EncodedStreamTextLen, val) { }

    }


    /// <summary>
    /// EncodedStreamText Field
    /// </summary>/
    public sealed class EncodedStreamText : StringField
    {
        public const int TAG = 40983;

        public EncodedStreamText()
            : base(Tags.EncodedStreamText) { }
        public EncodedStreamText(string val)
            : base(Tags.EncodedStreamText, val) { }

    }


    /// <summary>
    /// EncodedPaymentTextLen Field
    /// </summary>/
    public sealed class EncodedPaymentTextLen : IntField
    {
        public const int TAG = 40984;

        public EncodedPaymentTextLen()
            : base(Tags.EncodedPaymentTextLen) { }
        public EncodedPaymentTextLen(int val)
            : base(Tags.EncodedPaymentTextLen, val) { }

    }


    /// <summary>
    /// EncodedPaymentText Field
    /// </summary>/
    public sealed class EncodedPaymentText : StringField
    {
        public const int TAG = 40985;

        public EncodedPaymentText()
            : base(Tags.EncodedPaymentText) { }
        public EncodedPaymentText(string val)
            : base(Tags.EncodedPaymentText, val) { }

    }


    /// <summary>
    /// EncodedProvisionTextLen Field
    /// </summary>/
    public sealed class EncodedProvisionTextLen : IntField
    {
        public const int TAG = 40986;

        public EncodedProvisionTextLen()
            : base(Tags.EncodedProvisionTextLen) { }
        public EncodedProvisionTextLen(int val)
            : base(Tags.EncodedProvisionTextLen, val) { }

    }


    /// <summary>
    /// EncodedProvisionText Field
    /// </summary>/
    public sealed class EncodedProvisionText : StringField
    {
        public const int TAG = 40987;

        public EncodedProvisionText()
            : base(Tags.EncodedProvisionText) { }
        public EncodedProvisionText(string val)
            : base(Tags.EncodedProvisionText, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingStreamTextLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingStreamTextLen : IntField
    {
        public const int TAG = 40988;

        public EncodedUnderlyingStreamTextLen()
            : base(Tags.EncodedUnderlyingStreamTextLen) { }
        public EncodedUnderlyingStreamTextLen(int val)
            : base(Tags.EncodedUnderlyingStreamTextLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingStreamText Field
    /// </summary>/
    public sealed class EncodedUnderlyingStreamText : StringField
    {
        public const int TAG = 40989;

        public EncodedUnderlyingStreamText()
            : base(Tags.EncodedUnderlyingStreamText) { }
        public EncodedUnderlyingStreamText(string val)
            : base(Tags.EncodedUnderlyingStreamText, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackValue Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackValue : StringField
    {
        public const int TAG = 40990;

        public LegMarketDisruptionFallbackValue()
            : base(Tags.LegMarketDisruptionFallbackValue) { }
        public LegMarketDisruptionFallbackValue(string val)
            : base(Tags.LegMarketDisruptionFallbackValue, val) { }

    }


    /// <summary>
    /// MarketDisruptionValue Field
    /// </summary>/
    public sealed class MarketDisruptionValue : StringField
    {
        public const int TAG = 40991;

        public MarketDisruptionValue()
            : base(Tags.MarketDisruptionValue) { }
        public MarketDisruptionValue(string val)
            : base(Tags.MarketDisruptionValue, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackValue Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackValue : StringField
    {
        public const int TAG = 40992;

        public MarketDisruptionFallbackValue()
            : base(Tags.MarketDisruptionFallbackValue) { }
        public MarketDisruptionFallbackValue(string val)
            : base(Tags.MarketDisruptionFallbackValue, val) { }

    }


    /// <summary>
    /// PaymentSubType Field
    /// </summary>/
    public sealed class PaymentSubType : IntField
    {
        public const int TAG = 40993;

        public PaymentSubType()
            : base(Tags.PaymentSubType) { }
        public PaymentSubType(int val)
            : base(Tags.PaymentSubType, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INTERMEDIATE = 1;
        public const int FINAL = 2;
        public const int PREPAID = 3;
        public const int POSTPAID = 4;
        public const int VARIABLE = 5;
        public const int FIXED = 6;
        public const int SWAP = 7;
        public const int CONDITIONAL = 8;
        public const int FIXED_RATE = 9;
        public const int FLOATING_RATE = 10;
    }


    /// <summary>
    /// NoComplexEventAveragingObservations Field
    /// </summary>/
    public sealed class NoComplexEventAveragingObservations : IntField
    {
        public const int TAG = 40994;

        public NoComplexEventAveragingObservations()
            : base(Tags.NoComplexEventAveragingObservations) { }
        public NoComplexEventAveragingObservations(int val)
            : base(Tags.NoComplexEventAveragingObservations, val) { }

    }


    /// <summary>
    /// ComplexEventAveragingObservationNumber Field
    /// </summary>/
    public sealed class ComplexEventAveragingObservationNumber : IntField
    {
        public const int TAG = 40995;

        public ComplexEventAveragingObservationNumber()
            : base(Tags.ComplexEventAveragingObservationNumber) { }
        public ComplexEventAveragingObservationNumber(int val)
            : base(Tags.ComplexEventAveragingObservationNumber, val) { }

    }


    /// <summary>
    /// ComplexEventAveragingWeight Field
    /// </summary>/
    public sealed class ComplexEventAveragingWeight : DecimalField
    {
        public const int TAG = 40996;

        public ComplexEventAveragingWeight()
            : base(Tags.ComplexEventAveragingWeight) { }
        public ComplexEventAveragingWeight(Decimal val)
            : base(Tags.ComplexEventAveragingWeight, val) { }

    }


    /// <summary>
    /// NoComplexEventCreditEvents Field
    /// </summary>/
    public sealed class NoComplexEventCreditEvents : IntField
    {
        public const int TAG = 40997;

        public NoComplexEventCreditEvents()
            : base(Tags.NoComplexEventCreditEvents) { }
        public NoComplexEventCreditEvents(int val)
            : base(Tags.NoComplexEventCreditEvents, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventType Field
    /// </summary>/
    public sealed class ComplexEventCreditEventType : StringField
    {
        public const int TAG = 40998;

        public ComplexEventCreditEventType()
            : base(Tags.ComplexEventCreditEventType) { }
        public ComplexEventCreditEventType(string val)
            : base(Tags.ComplexEventCreditEventType, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventValue Field
    /// </summary>/
    public sealed class ComplexEventCreditEventValue : StringField
    {
        public const int TAG = 40999;

        public ComplexEventCreditEventValue()
            : base(Tags.ComplexEventCreditEventValue) { }
        public ComplexEventCreditEventValue(string val)
            : base(Tags.ComplexEventCreditEventValue, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventCurrency Field
    /// </summary>/
    public sealed class ComplexEventCreditEventCurrency : StringField
    {
        public const int TAG = 41000;

        public ComplexEventCreditEventCurrency()
            : base(Tags.ComplexEventCreditEventCurrency) { }
        public ComplexEventCreditEventCurrency(string val)
            : base(Tags.ComplexEventCreditEventCurrency, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventPeriod Field
    /// </summary>/
    public sealed class ComplexEventCreditEventPeriod : IntField
    {
        public const int TAG = 41001;

        public ComplexEventCreditEventPeriod()
            : base(Tags.ComplexEventCreditEventPeriod) { }
        public ComplexEventCreditEventPeriod(int val)
            : base(Tags.ComplexEventCreditEventPeriod, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventUnit Field
    /// </summary>/
    public sealed class ComplexEventCreditEventUnit : StringField
    {
        public const int TAG = 41002;

        public ComplexEventCreditEventUnit()
            : base(Tags.ComplexEventCreditEventUnit) { }
        public ComplexEventCreditEventUnit(string val)
            : base(Tags.ComplexEventCreditEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ComplexEventCreditEventDayType Field
    /// </summary>/
    public sealed class ComplexEventCreditEventDayType : IntField
    {
        public const int TAG = 41003;

        public ComplexEventCreditEventDayType()
            : base(Tags.ComplexEventCreditEventDayType) { }
        public ComplexEventCreditEventDayType(int val)
            : base(Tags.ComplexEventCreditEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ComplexEventCreditEventRateSource Field
    /// </summary>/
    public sealed class ComplexEventCreditEventRateSource : IntField
    {
        public const int TAG = 41004;

        public ComplexEventCreditEventRateSource()
            : base(Tags.ComplexEventCreditEventRateSource) { }
        public ComplexEventCreditEventRateSource(int val)
            : base(Tags.ComplexEventCreditEventRateSource, val) { }

    }


    /// <summary>
    /// NoComplexEventCreditEventQualifiers Field
    /// </summary>/
    public sealed class NoComplexEventCreditEventQualifiers : IntField
    {
        public const int TAG = 41005;

        public NoComplexEventCreditEventQualifiers()
            : base(Tags.NoComplexEventCreditEventQualifiers) { }
        public NoComplexEventCreditEventQualifiers(int val)
            : base(Tags.NoComplexEventCreditEventQualifiers, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventQualifier Field
    /// </summary>/
    public sealed class ComplexEventCreditEventQualifier : CharField
    {
        public const int TAG = 41006;

        public ComplexEventCreditEventQualifier()
            : base(Tags.ComplexEventCreditEventQualifier) { }
        public ComplexEventCreditEventQualifier(char val)
            : base(Tags.ComplexEventCreditEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoComplexEventPeriodDateTimes Field
    /// </summary>/
    public sealed class NoComplexEventPeriodDateTimes : IntField
    {
        public const int TAG = 41007;

        public NoComplexEventPeriodDateTimes()
            : base(Tags.NoComplexEventPeriodDateTimes) { }
        public NoComplexEventPeriodDateTimes(int val)
            : base(Tags.NoComplexEventPeriodDateTimes, val) { }

    }


    /// <summary>
    /// ComplexEventPeriodDate Field
    /// </summary>/
    public sealed class ComplexEventPeriodDate : StringField
    {
        public const int TAG = 41008;

        public ComplexEventPeriodDate()
            : base(Tags.ComplexEventPeriodDate) { }
        public ComplexEventPeriodDate(string val)
            : base(Tags.ComplexEventPeriodDate, val) { }

    }


    /// <summary>
    /// ComplexEventPeriodTime Field
    /// </summary>/
    public sealed class ComplexEventPeriodTime : StringField
    {
        public const int TAG = 41009;

        public ComplexEventPeriodTime()
            : base(Tags.ComplexEventPeriodTime) { }
        public ComplexEventPeriodTime(string val)
            : base(Tags.ComplexEventPeriodTime, val) { }

    }


    /// <summary>
    /// NoComplexEventPeriods Field
    /// </summary>/
    public sealed class NoComplexEventPeriods : IntField
    {
        public const int TAG = 41010;

        public NoComplexEventPeriods()
            : base(Tags.NoComplexEventPeriods) { }
        public NoComplexEventPeriods(int val)
            : base(Tags.NoComplexEventPeriods, val) { }

    }


    /// <summary>
    /// ComplexEventPeriodType Field
    /// </summary>/
    public sealed class ComplexEventPeriodType : IntField
    {
        public const int TAG = 41011;

        public ComplexEventPeriodType()
            : base(Tags.ComplexEventPeriodType) { }
        public ComplexEventPeriodType(int val)
            : base(Tags.ComplexEventPeriodType, val) { }


        // Field Enumerations
        public const int ASIAN_OUT = 0;
        public const int ASIAN_IN = 1;
        public const int BARRIER_CAP = 2;
        public const int BARRIER_FLOOR = 3;
        public const int KNOCK_OUT = 4;
        public const int KNOCK_IN = 5;
    }


    /// <summary>
    /// ComplexEventBusinessCenter Field
    /// </summary>/
    public sealed class ComplexEventBusinessCenter : StringField
    {
        public const int TAG = 41012;

        public ComplexEventBusinessCenter()
            : base(Tags.ComplexEventBusinessCenter) { }
        public ComplexEventBusinessCenter(string val)
            : base(Tags.ComplexEventBusinessCenter, val) { }

    }


    /// <summary>
    /// NoComplexEventRateSources Field
    /// </summary>/
    public sealed class NoComplexEventRateSources : IntField
    {
        public const int TAG = 41013;

        public NoComplexEventRateSources()
            : base(Tags.NoComplexEventRateSources) { }
        public NoComplexEventRateSources(int val)
            : base(Tags.NoComplexEventRateSources, val) { }

    }


    /// <summary>
    /// ComplexEventRateSource Field
    /// </summary>/
    public sealed class ComplexEventRateSource : IntField
    {
        public const int TAG = 41014;

        public ComplexEventRateSource()
            : base(Tags.ComplexEventRateSource) { }
        public ComplexEventRateSource(int val)
            : base(Tags.ComplexEventRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// ComplexEventRateSourceType Field
    /// </summary>/
    public sealed class ComplexEventRateSourceType : IntField
    {
        public const int TAG = 41015;

        public ComplexEventRateSourceType()
            : base(Tags.ComplexEventRateSourceType) { }
        public ComplexEventRateSourceType(int val)
            : base(Tags.ComplexEventRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// ComplexEventReferencePage Field
    /// </summary>/
    public sealed class ComplexEventReferencePage : StringField
    {
        public const int TAG = 41016;

        public ComplexEventReferencePage()
            : base(Tags.ComplexEventReferencePage) { }
        public ComplexEventReferencePage(string val)
            : base(Tags.ComplexEventReferencePage, val) { }

    }


    /// <summary>
    /// ComplexEventReferencePageHeading Field
    /// </summary>/
    public sealed class ComplexEventReferencePageHeading : StringField
    {
        public const int TAG = 41017;

        public ComplexEventReferencePageHeading()
            : base(Tags.ComplexEventReferencePageHeading) { }
        public ComplexEventReferencePageHeading(string val)
            : base(Tags.ComplexEventReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoComplexEventDateBusinessCenters Field
    /// </summary>/
    public sealed class NoComplexEventDateBusinessCenters : IntField
    {
        public const int TAG = 41018;

        public NoComplexEventDateBusinessCenters()
            : base(Tags.NoComplexEventDateBusinessCenters) { }
        public NoComplexEventDateBusinessCenters(int val)
            : base(Tags.NoComplexEventDateBusinessCenters, val) { }

    }


    /// <summary>
    /// ComplexEventDateBusinessCenter Field
    /// </summary>/
    public sealed class ComplexEventDateBusinessCenter : StringField
    {
        public const int TAG = 41019;

        public ComplexEventDateBusinessCenter()
            : base(Tags.ComplexEventDateBusinessCenter) { }
        public ComplexEventDateBusinessCenter(string val)
            : base(Tags.ComplexEventDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ComplexEventDateUnadjusted Field
    /// </summary>/
    public sealed class ComplexEventDateUnadjusted : StringField
    {
        public const int TAG = 41020;

        public ComplexEventDateUnadjusted()
            : base(Tags.ComplexEventDateUnadjusted) { }
        public ComplexEventDateUnadjusted(string val)
            : base(Tags.ComplexEventDateUnadjusted, val) { }

    }


    /// <summary>
    /// ComplexEventDateRelativeTo Field
    /// </summary>/
    public sealed class ComplexEventDateRelativeTo : IntField
    {
        public const int TAG = 41021;

        public ComplexEventDateRelativeTo()
            : base(Tags.ComplexEventDateRelativeTo) { }
        public ComplexEventDateRelativeTo(int val)
            : base(Tags.ComplexEventDateRelativeTo, val) { }

    }


    /// <summary>
    /// ComplexEventDateOffsetPeriod Field
    /// </summary>/
    public sealed class ComplexEventDateOffsetPeriod : IntField
    {
        public const int TAG = 41022;

        public ComplexEventDateOffsetPeriod()
            : base(Tags.ComplexEventDateOffsetPeriod) { }
        public ComplexEventDateOffsetPeriod(int val)
            : base(Tags.ComplexEventDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ComplexEventDateOffsetUnit Field
    /// </summary>/
    public sealed class ComplexEventDateOffsetUnit : StringField
    {
        public const int TAG = 41023;

        public ComplexEventDateOffsetUnit()
            : base(Tags.ComplexEventDateOffsetUnit) { }
        public ComplexEventDateOffsetUnit(string val)
            : base(Tags.ComplexEventDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ComplexEventDateOffsetDayType Field
    /// </summary>/
    public sealed class ComplexEventDateOffsetDayType : IntField
    {
        public const int TAG = 41024;

        public ComplexEventDateOffsetDayType()
            : base(Tags.ComplexEventDateOffsetDayType) { }
        public ComplexEventDateOffsetDayType(int val)
            : base(Tags.ComplexEventDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ComplexEventDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ComplexEventDateBusinessDayConvention : IntField
    {
        public const int TAG = 41025;

        public ComplexEventDateBusinessDayConvention()
            : base(Tags.ComplexEventDateBusinessDayConvention) { }
        public ComplexEventDateBusinessDayConvention(int val)
            : base(Tags.ComplexEventDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// ComplexEventDateAdjusted Field
    /// </summary>/
    public sealed class ComplexEventDateAdjusted : StringField
    {
        public const int TAG = 41026;

        public ComplexEventDateAdjusted()
            : base(Tags.ComplexEventDateAdjusted) { }
        public ComplexEventDateAdjusted(string val)
            : base(Tags.ComplexEventDateAdjusted, val) { }

    }


    /// <summary>
    /// ComplexEventFixingTime Field
    /// </summary>/
    public sealed class ComplexEventFixingTime : StringField
    {
        public const int TAG = 41027;

        public ComplexEventFixingTime()
            : base(Tags.ComplexEventFixingTime) { }
        public ComplexEventFixingTime(string val)
            : base(Tags.ComplexEventFixingTime, val) { }

    }


    /// <summary>
    /// ComplexEventFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class ComplexEventFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 41028;

        public ComplexEventFixingTimeBusinessCenter()
            : base(Tags.ComplexEventFixingTimeBusinessCenter) { }
        public ComplexEventFixingTimeBusinessCenter(string val)
            : base(Tags.ComplexEventFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoComplexEventCreditEventSources Field
    /// </summary>/
    public sealed class NoComplexEventCreditEventSources : IntField
    {
        public const int TAG = 41029;

        public NoComplexEventCreditEventSources()
            : base(Tags.NoComplexEventCreditEventSources) { }
        public NoComplexEventCreditEventSources(int val)
            : base(Tags.NoComplexEventCreditEventSources, val) { }

    }


    /// <summary>
    /// ComplexEventCreditEventSource Field
    /// </summary>/
    public sealed class ComplexEventCreditEventSource : StringField
    {
        public const int TAG = 41030;

        public ComplexEventCreditEventSource()
            : base(Tags.ComplexEventCreditEventSource) { }
        public ComplexEventCreditEventSource(string val)
            : base(Tags.ComplexEventCreditEventSource, val) { }

    }


    /// <summary>
    /// NoComplexEventSchedules Field
    /// </summary>/
    public sealed class NoComplexEventSchedules : IntField
    {
        public const int TAG = 41031;

        public NoComplexEventSchedules()
            : base(Tags.NoComplexEventSchedules) { }
        public NoComplexEventSchedules(int val)
            : base(Tags.NoComplexEventSchedules, val) { }

    }


    /// <summary>
    /// ComplexEventScheduleStartDate Field
    /// </summary>/
    public sealed class ComplexEventScheduleStartDate : StringField
    {
        public const int TAG = 41032;

        public ComplexEventScheduleStartDate()
            : base(Tags.ComplexEventScheduleStartDate) { }
        public ComplexEventScheduleStartDate(string val)
            : base(Tags.ComplexEventScheduleStartDate, val) { }

    }


    /// <summary>
    /// ComplexEventScheduleEndDate Field
    /// </summary>/
    public sealed class ComplexEventScheduleEndDate : StringField
    {
        public const int TAG = 41033;

        public ComplexEventScheduleEndDate()
            : base(Tags.ComplexEventScheduleEndDate) { }
        public ComplexEventScheduleEndDate(string val)
            : base(Tags.ComplexEventScheduleEndDate, val) { }

    }


    /// <summary>
    /// ComplexEventScheduleFrequencyPeriod Field
    /// </summary>/
    public sealed class ComplexEventScheduleFrequencyPeriod : IntField
    {
        public const int TAG = 41034;

        public ComplexEventScheduleFrequencyPeriod()
            : base(Tags.ComplexEventScheduleFrequencyPeriod) { }
        public ComplexEventScheduleFrequencyPeriod(int val)
            : base(Tags.ComplexEventScheduleFrequencyPeriod, val) { }

    }


    /// <summary>
    /// ComplexEventScheduleFrequencyUnit Field
    /// </summary>/
    public sealed class ComplexEventScheduleFrequencyUnit : StringField
    {
        public const int TAG = 41035;

        public ComplexEventScheduleFrequencyUnit()
            : base(Tags.ComplexEventScheduleFrequencyUnit) { }
        public ComplexEventScheduleFrequencyUnit(string val)
            : base(Tags.ComplexEventScheduleFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ComplexEventScheduleRollConvention Field
    /// </summary>/
    public sealed class ComplexEventScheduleRollConvention : StringField
    {
        public const int TAG = 41036;

        public ComplexEventScheduleRollConvention()
            : base(Tags.ComplexEventScheduleRollConvention) { }
        public ComplexEventScheduleRollConvention(string val)
            : base(Tags.ComplexEventScheduleRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoDeliverySchedules Field
    /// </summary>/
    public sealed class NoDeliverySchedules : IntField
    {
        public const int TAG = 41037;

        public NoDeliverySchedules()
            : base(Tags.NoDeliverySchedules) { }
        public NoDeliverySchedules(int val)
            : base(Tags.NoDeliverySchedules, val) { }

    }


    /// <summary>
    /// DeliveryScheduleType Field
    /// </summary>/
    public sealed class DeliveryScheduleType : IntField
    {
        public const int TAG = 41038;

        public DeliveryScheduleType()
            : base(Tags.DeliveryScheduleType) { }
        public DeliveryScheduleType(int val)
            : base(Tags.DeliveryScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int DELIVERY = 1;
        public const int PHYSICAL_SETTLEMENT_PERIOD = 2;
    }


    /// <summary>
    /// DeliveryScheduleXID Field
    /// </summary>/
    public sealed class DeliveryScheduleXID : StringField
    {
        public const int TAG = 41039;

        public DeliveryScheduleXID()
            : base(Tags.DeliveryScheduleXID) { }
        public DeliveryScheduleXID(string val)
            : base(Tags.DeliveryScheduleXID, val) { }

    }


    /// <summary>
    /// DeliveryScheduleNotional Field
    /// </summary>/
    public sealed class DeliveryScheduleNotional : DecimalField
    {
        public const int TAG = 41040;

        public DeliveryScheduleNotional()
            : base(Tags.DeliveryScheduleNotional) { }
        public DeliveryScheduleNotional(Decimal val)
            : base(Tags.DeliveryScheduleNotional, val) { }

    }


    /// <summary>
    /// DeliveryScheduleNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class DeliveryScheduleNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41041;

        public DeliveryScheduleNotionalUnitOfMeasure()
            : base(Tags.DeliveryScheduleNotionalUnitOfMeasure) { }
        public DeliveryScheduleNotionalUnitOfMeasure(string val)
            : base(Tags.DeliveryScheduleNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DeliveryScheduleNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class DeliveryScheduleNotionalCommodityFrequency : IntField
    {
        public const int TAG = 41042;

        public DeliveryScheduleNotionalCommodityFrequency()
            : base(Tags.DeliveryScheduleNotionalCommodityFrequency) { }
        public DeliveryScheduleNotionalCommodityFrequency(int val)
            : base(Tags.DeliveryScheduleNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// DeliveryScheduleNegativeTolerance Field
    /// </summary>/
    public sealed class DeliveryScheduleNegativeTolerance : DecimalField
    {
        public const int TAG = 41043;

        public DeliveryScheduleNegativeTolerance()
            : base(Tags.DeliveryScheduleNegativeTolerance) { }
        public DeliveryScheduleNegativeTolerance(Decimal val)
            : base(Tags.DeliveryScheduleNegativeTolerance, val) { }

    }


    /// <summary>
    /// DeliverySchedulePositiveTolerance Field
    /// </summary>/
    public sealed class DeliverySchedulePositiveTolerance : DecimalField
    {
        public const int TAG = 41044;

        public DeliverySchedulePositiveTolerance()
            : base(Tags.DeliverySchedulePositiveTolerance) { }
        public DeliverySchedulePositiveTolerance(Decimal val)
            : base(Tags.DeliverySchedulePositiveTolerance, val) { }

    }


    /// <summary>
    /// DeliveryScheduleToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class DeliveryScheduleToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41045;

        public DeliveryScheduleToleranceUnitOfMeasure()
            : base(Tags.DeliveryScheduleToleranceUnitOfMeasure) { }
        public DeliveryScheduleToleranceUnitOfMeasure(string val)
            : base(Tags.DeliveryScheduleToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DeliveryScheduleToleranceType Field
    /// </summary>/
    public sealed class DeliveryScheduleToleranceType : IntField
    {
        public const int TAG = 41046;

        public DeliveryScheduleToleranceType()
            : base(Tags.DeliveryScheduleToleranceType) { }
        public DeliveryScheduleToleranceType(int val)
            : base(Tags.DeliveryScheduleToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// DeliveryScheduleSettlCountry Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlCountry : StringField
    {
        public const int TAG = 41047;

        public DeliveryScheduleSettlCountry()
            : base(Tags.DeliveryScheduleSettlCountry) { }
        public DeliveryScheduleSettlCountry(string val)
            : base(Tags.DeliveryScheduleSettlCountry, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlTimeZone Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlTimeZone : StringField
    {
        public const int TAG = 41048;

        public DeliveryScheduleSettlTimeZone()
            : base(Tags.DeliveryScheduleSettlTimeZone) { }
        public DeliveryScheduleSettlTimeZone(string val)
            : base(Tags.DeliveryScheduleSettlTimeZone, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlFlowType Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlFlowType : IntField
    {
        public const int TAG = 41049;

        public DeliveryScheduleSettlFlowType()
            : base(Tags.DeliveryScheduleSettlFlowType) { }
        public DeliveryScheduleSettlFlowType(int val)
            : base(Tags.DeliveryScheduleSettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// DeliveryScheduleSettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 41050;

        public DeliveryScheduleSettlHolidaysProcessingInstruction()
            : base(Tags.DeliveryScheduleSettlHolidaysProcessingInstruction) { }
        public DeliveryScheduleSettlHolidaysProcessingInstruction(int val)
            : base(Tags.DeliveryScheduleSettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// NoDeliveryScheduleSettlDays Field
    /// </summary>/
    public sealed class NoDeliveryScheduleSettlDays : IntField
    {
        public const int TAG = 41051;

        public NoDeliveryScheduleSettlDays()
            : base(Tags.NoDeliveryScheduleSettlDays) { }
        public NoDeliveryScheduleSettlDays(int val)
            : base(Tags.NoDeliveryScheduleSettlDays, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlDay Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlDay : IntField
    {
        public const int TAG = 41052;

        public DeliveryScheduleSettlDay()
            : base(Tags.DeliveryScheduleSettlDay) { }
        public DeliveryScheduleSettlDay(int val)
            : base(Tags.DeliveryScheduleSettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// DeliveryScheduleSettlTotalHours Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlTotalHours : IntField
    {
        public const int TAG = 41053;

        public DeliveryScheduleSettlTotalHours()
            : base(Tags.DeliveryScheduleSettlTotalHours) { }
        public DeliveryScheduleSettlTotalHours(int val)
            : base(Tags.DeliveryScheduleSettlTotalHours, val) { }

    }


    /// <summary>
    /// NoDeliveryScheduleSettlTimes Field
    /// </summary>/
    public sealed class NoDeliveryScheduleSettlTimes : IntField
    {
        public const int TAG = 41054;

        public NoDeliveryScheduleSettlTimes()
            : base(Tags.NoDeliveryScheduleSettlTimes) { }
        public NoDeliveryScheduleSettlTimes(int val)
            : base(Tags.NoDeliveryScheduleSettlTimes, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlStart Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlStart : StringField
    {
        public const int TAG = 41055;

        public DeliveryScheduleSettlStart()
            : base(Tags.DeliveryScheduleSettlStart) { }
        public DeliveryScheduleSettlStart(string val)
            : base(Tags.DeliveryScheduleSettlStart, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlEnd Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlEnd : StringField
    {
        public const int TAG = 41056;

        public DeliveryScheduleSettlEnd()
            : base(Tags.DeliveryScheduleSettlEnd) { }
        public DeliveryScheduleSettlEnd(string val)
            : base(Tags.DeliveryScheduleSettlEnd, val) { }

    }


    /// <summary>
    /// DeliveryScheduleSettlTimeType Field
    /// </summary>/
    public sealed class DeliveryScheduleSettlTimeType : IntField
    {
        public const int TAG = 41057;

        public DeliveryScheduleSettlTimeType()
            : base(Tags.DeliveryScheduleSettlTimeType) { }
        public DeliveryScheduleSettlTimeType(int val)
            : base(Tags.DeliveryScheduleSettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// DeliveryStreamType Field
    /// </summary>/
    public sealed class DeliveryStreamType : IntField
    {
        public const int TAG = 41058;

        public DeliveryStreamType()
            : base(Tags.DeliveryStreamType) { }
        public DeliveryStreamType(int val)
            : base(Tags.DeliveryStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
    }


    /// <summary>
    /// DeliveryStreamPipeline Field
    /// </summary>/
    public sealed class DeliveryStreamPipeline : StringField
    {
        public const int TAG = 41059;

        public DeliveryStreamPipeline()
            : base(Tags.DeliveryStreamPipeline) { }
        public DeliveryStreamPipeline(string val)
            : base(Tags.DeliveryStreamPipeline, val) { }

    }


    /// <summary>
    /// DeliveryStreamEntryPoint Field
    /// </summary>/
    public sealed class DeliveryStreamEntryPoint : StringField
    {
        public const int TAG = 41060;

        public DeliveryStreamEntryPoint()
            : base(Tags.DeliveryStreamEntryPoint) { }
        public DeliveryStreamEntryPoint(string val)
            : base(Tags.DeliveryStreamEntryPoint, val) { }

    }


    /// <summary>
    /// DeliveryStreamWithdrawalPoint Field
    /// </summary>/
    public sealed class DeliveryStreamWithdrawalPoint : StringField
    {
        public const int TAG = 41061;

        public DeliveryStreamWithdrawalPoint()
            : base(Tags.DeliveryStreamWithdrawalPoint) { }
        public DeliveryStreamWithdrawalPoint(string val)
            : base(Tags.DeliveryStreamWithdrawalPoint, val) { }

    }


    /// <summary>
    /// DeliveryStreamDeliveryPoint Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryPoint : StringField
    {
        public const int TAG = 41062;

        public DeliveryStreamDeliveryPoint()
            : base(Tags.DeliveryStreamDeliveryPoint) { }
        public DeliveryStreamDeliveryPoint(string val)
            : base(Tags.DeliveryStreamDeliveryPoint, val) { }

    }


    /// <summary>
    /// DeliveryStreamDeliveryRestriction Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryRestriction : IntField
    {
        public const int TAG = 41063;

        public DeliveryStreamDeliveryRestriction()
            : base(Tags.DeliveryStreamDeliveryRestriction) { }
        public DeliveryStreamDeliveryRestriction(int val)
            : base(Tags.DeliveryStreamDeliveryRestriction, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int INTERRUPTABLE_OR_NON_FIRM = 2;
        public const int FORCE_MAJEURE = 3;
        public const int SYSTEM_FIRM = 4;
        public const int UNIT_FIRM = 5;
    }


    /// <summary>
    /// DeliveryStreamDeliveryContingency Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryContingency : StringField
    {
        public const int TAG = 41064;

        public DeliveryStreamDeliveryContingency()
            : base(Tags.DeliveryStreamDeliveryContingency) { }
        public DeliveryStreamDeliveryContingency(string val)
            : base(Tags.DeliveryStreamDeliveryContingency, val) { }

    }


    /// <summary>
    /// DeliveryStreamDeliveryContingentPartySide Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryContingentPartySide : IntField
    {
        public const int TAG = 41065;

        public DeliveryStreamDeliveryContingentPartySide()
            : base(Tags.DeliveryStreamDeliveryContingentPartySide) { }
        public DeliveryStreamDeliveryContingentPartySide(int val)
            : base(Tags.DeliveryStreamDeliveryContingentPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// DeliveryStreamDeliverAtSourceIndicator Field
    /// </summary>/
    public sealed class DeliveryStreamDeliverAtSourceIndicator : BooleanField
    {
        public const int TAG = 41066;

        public DeliveryStreamDeliverAtSourceIndicator()
            : base(Tags.DeliveryStreamDeliverAtSourceIndicator) { }
        public DeliveryStreamDeliverAtSourceIndicator(Boolean val)
            : base(Tags.DeliveryStreamDeliverAtSourceIndicator, val) { }

    }


    /// <summary>
    /// DeliveryStreamRiskApportionment Field
    /// </summary>/
    public sealed class DeliveryStreamRiskApportionment : StringField
    {
        public const int TAG = 41067;

        public DeliveryStreamRiskApportionment()
            : base(Tags.DeliveryStreamRiskApportionment) { }
        public DeliveryStreamRiskApportionment(string val)
            : base(Tags.DeliveryStreamRiskApportionment, val) { }

    }


    /// <summary>
    /// DeliveryStreamTitleTransferLocation Field
    /// </summary>/
    public sealed class DeliveryStreamTitleTransferLocation : StringField
    {
        public const int TAG = 41068;

        public DeliveryStreamTitleTransferLocation()
            : base(Tags.DeliveryStreamTitleTransferLocation) { }
        public DeliveryStreamTitleTransferLocation(string val)
            : base(Tags.DeliveryStreamTitleTransferLocation, val) { }

    }


    /// <summary>
    /// DeliveryStreamTitleTransferCondition Field
    /// </summary>/
    public sealed class DeliveryStreamTitleTransferCondition : IntField
    {
        public const int TAG = 41069;

        public DeliveryStreamTitleTransferCondition()
            : base(Tags.DeliveryStreamTitleTransferCondition) { }
        public DeliveryStreamTitleTransferCondition(int val)
            : base(Tags.DeliveryStreamTitleTransferCondition, val) { }


        // Field Enumerations
        public const int TRANSFERS_WITH_RISK_OF_LOSS = 0;
        public const int DOES_NOT_TRANSFER_WITH_RISK_OF_LOSS = 1;
    }


    /// <summary>
    /// DeliveryStreamImporterOfRecord Field
    /// </summary>/
    public sealed class DeliveryStreamImporterOfRecord : StringField
    {
        public const int TAG = 41070;

        public DeliveryStreamImporterOfRecord()
            : base(Tags.DeliveryStreamImporterOfRecord) { }
        public DeliveryStreamImporterOfRecord(string val)
            : base(Tags.DeliveryStreamImporterOfRecord, val) { }

    }


    /// <summary>
    /// DeliveryStreamNegativeTolerance Field
    /// </summary>/
    public sealed class DeliveryStreamNegativeTolerance : DecimalField
    {
        public const int TAG = 41071;

        public DeliveryStreamNegativeTolerance()
            : base(Tags.DeliveryStreamNegativeTolerance) { }
        public DeliveryStreamNegativeTolerance(Decimal val)
            : base(Tags.DeliveryStreamNegativeTolerance, val) { }

    }


    /// <summary>
    /// DeliveryStreamPositiveTolerance Field
    /// </summary>/
    public sealed class DeliveryStreamPositiveTolerance : DecimalField
    {
        public const int TAG = 41072;

        public DeliveryStreamPositiveTolerance()
            : base(Tags.DeliveryStreamPositiveTolerance) { }
        public DeliveryStreamPositiveTolerance(Decimal val)
            : base(Tags.DeliveryStreamPositiveTolerance, val) { }

    }


    /// <summary>
    /// DeliveryStreamToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class DeliveryStreamToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41073;

        public DeliveryStreamToleranceUnitOfMeasure()
            : base(Tags.DeliveryStreamToleranceUnitOfMeasure) { }
        public DeliveryStreamToleranceUnitOfMeasure(string val)
            : base(Tags.DeliveryStreamToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// DeliveryStreamToleranceType Field
    /// </summary>/
    public sealed class DeliveryStreamToleranceType : IntField
    {
        public const int TAG = 41074;

        public DeliveryStreamToleranceType()
            : base(Tags.DeliveryStreamToleranceType) { }
        public DeliveryStreamToleranceType(int val)
            : base(Tags.DeliveryStreamToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// DeliveryStreamToleranceOptionSide Field
    /// </summary>/
    public sealed class DeliveryStreamToleranceOptionSide : IntField
    {
        public const int TAG = 41075;

        public DeliveryStreamToleranceOptionSide()
            : base(Tags.DeliveryStreamToleranceOptionSide) { }
        public DeliveryStreamToleranceOptionSide(int val)
            : base(Tags.DeliveryStreamToleranceOptionSide, val) { }


        // Field Enumerations
        public const int BUYER = 1;
        public const int SELLER = 2;
    }


    /// <summary>
    /// DeliveryStreamTotalPositiveTolerance Field
    /// </summary>/
    public sealed class DeliveryStreamTotalPositiveTolerance : DecimalField
    {
        public const int TAG = 41076;

        public DeliveryStreamTotalPositiveTolerance()
            : base(Tags.DeliveryStreamTotalPositiveTolerance) { }
        public DeliveryStreamTotalPositiveTolerance(Decimal val)
            : base(Tags.DeliveryStreamTotalPositiveTolerance, val) { }

    }


    /// <summary>
    /// DeliveryStreamTotalNegativeTolerance Field
    /// </summary>/
    public sealed class DeliveryStreamTotalNegativeTolerance : DecimalField
    {
        public const int TAG = 41077;

        public DeliveryStreamTotalNegativeTolerance()
            : base(Tags.DeliveryStreamTotalNegativeTolerance) { }
        public DeliveryStreamTotalNegativeTolerance(Decimal val)
            : base(Tags.DeliveryStreamTotalNegativeTolerance, val) { }

    }


    /// <summary>
    /// DeliveryStreamNotionalConversionFactor Field
    /// </summary>/
    public sealed class DeliveryStreamNotionalConversionFactor : DecimalField
    {
        public const int TAG = 41078;

        public DeliveryStreamNotionalConversionFactor()
            : base(Tags.DeliveryStreamNotionalConversionFactor) { }
        public DeliveryStreamNotionalConversionFactor(Decimal val)
            : base(Tags.DeliveryStreamNotionalConversionFactor, val) { }

    }


    /// <summary>
    /// DeliveryStreamTransportEquipment Field
    /// </summary>/
    public sealed class DeliveryStreamTransportEquipment : StringField
    {
        public const int TAG = 41079;

        public DeliveryStreamTransportEquipment()
            : base(Tags.DeliveryStreamTransportEquipment) { }
        public DeliveryStreamTransportEquipment(string val)
            : base(Tags.DeliveryStreamTransportEquipment, val) { }

    }


    /// <summary>
    /// DeliveryStreamElectingPartySide Field
    /// </summary>/
    public sealed class DeliveryStreamElectingPartySide : IntField
    {
        public const int TAG = 41080;

        public DeliveryStreamElectingPartySide()
            : base(Tags.DeliveryStreamElectingPartySide) { }
        public DeliveryStreamElectingPartySide(int val)
            : base(Tags.DeliveryStreamElectingPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// NoDeliveryStreamCycles Field
    /// </summary>/
    public sealed class NoDeliveryStreamCycles : IntField
    {
        public const int TAG = 41081;

        public NoDeliveryStreamCycles()
            : base(Tags.NoDeliveryStreamCycles) { }
        public NoDeliveryStreamCycles(int val)
            : base(Tags.NoDeliveryStreamCycles, val) { }

    }


    /// <summary>
    /// DeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class DeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41082;

        public DeliveryStreamCycleDesc()
            : base(Tags.DeliveryStreamCycleDesc) { }
        public DeliveryStreamCycleDesc(string val)
            : base(Tags.DeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// EncodedDeliveryStreamCycleDescLen Field
    /// </summary>/
    public sealed class EncodedDeliveryStreamCycleDescLen : IntField
    {
        public const int TAG = 41083;

        public EncodedDeliveryStreamCycleDescLen()
            : base(Tags.EncodedDeliveryStreamCycleDescLen) { }
        public EncodedDeliveryStreamCycleDescLen(int val)
            : base(Tags.EncodedDeliveryStreamCycleDescLen, val) { }

    }


    /// <summary>
    /// EncodedDeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class EncodedDeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41084;

        public EncodedDeliveryStreamCycleDesc()
            : base(Tags.EncodedDeliveryStreamCycleDesc) { }
        public EncodedDeliveryStreamCycleDesc(string val)
            : base(Tags.EncodedDeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// NoDeliveryStreamCommoditySources Field
    /// </summary>/
    public sealed class NoDeliveryStreamCommoditySources : IntField
    {
        public const int TAG = 41085;

        public NoDeliveryStreamCommoditySources()
            : base(Tags.NoDeliveryStreamCommoditySources) { }
        public NoDeliveryStreamCommoditySources(int val)
            : base(Tags.NoDeliveryStreamCommoditySources, val) { }

    }


    /// <summary>
    /// DeliveryStreamCommoditySource Field
    /// </summary>/
    public sealed class DeliveryStreamCommoditySource : StringField
    {
        public const int TAG = 41086;

        public DeliveryStreamCommoditySource()
            : base(Tags.DeliveryStreamCommoditySource) { }
        public DeliveryStreamCommoditySource(string val)
            : base(Tags.DeliveryStreamCommoditySource, val) { }

    }


    /// <summary>
    /// MarketDisruptionProvision Field
    /// </summary>/
    public sealed class MarketDisruptionProvision : IntField
    {
        public const int TAG = 41087;

        public MarketDisruptionProvision()
            : base(Tags.MarketDisruptionProvision) { }
        public MarketDisruptionProvision(int val)
            : base(Tags.MarketDisruptionProvision, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int APPLICABLE = 1;
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 3;
    }


    /// <summary>
    /// MarketDisruptionFallbackProvision Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackProvision : IntField
    {
        public const int TAG = 41088;

        public MarketDisruptionFallbackProvision()
            : base(Tags.MarketDisruptionFallbackProvision) { }
        public MarketDisruptionFallbackProvision(int val)
            : base(Tags.MarketDisruptionFallbackProvision, val) { }


        // Field Enumerations
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 0;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 1;
    }


    /// <summary>
    /// MarketDisruptionMaximumDays Field
    /// </summary>/
    public sealed class MarketDisruptionMaximumDays : IntField
    {
        public const int TAG = 41089;

        public MarketDisruptionMaximumDays()
            : base(Tags.MarketDisruptionMaximumDays) { }
        public MarketDisruptionMaximumDays(int val)
            : base(Tags.MarketDisruptionMaximumDays, val) { }

    }


    /// <summary>
    /// MarketDisruptionMaterialityPercentage Field
    /// </summary>/
    public sealed class MarketDisruptionMaterialityPercentage : DecimalField
    {
        public const int TAG = 41090;

        public MarketDisruptionMaterialityPercentage()
            : base(Tags.MarketDisruptionMaterialityPercentage) { }
        public MarketDisruptionMaterialityPercentage(Decimal val)
            : base(Tags.MarketDisruptionMaterialityPercentage, val) { }

    }


    /// <summary>
    /// MarketDisruptionMinimumFuturesContracts Field
    /// </summary>/
    public sealed class MarketDisruptionMinimumFuturesContracts : IntField
    {
        public const int TAG = 41091;

        public MarketDisruptionMinimumFuturesContracts()
            : base(Tags.MarketDisruptionMinimumFuturesContracts) { }
        public MarketDisruptionMinimumFuturesContracts(int val)
            : base(Tags.MarketDisruptionMinimumFuturesContracts, val) { }

    }


    /// <summary>
    /// NoMarketDisruptionEvents Field
    /// </summary>/
    public sealed class NoMarketDisruptionEvents : IntField
    {
        public const int TAG = 41092;

        public NoMarketDisruptionEvents()
            : base(Tags.NoMarketDisruptionEvents) { }
        public NoMarketDisruptionEvents(int val)
            : base(Tags.NoMarketDisruptionEvents, val) { }

    }


    /// <summary>
    /// MarketDisruptionEvent Field
    /// </summary>/
    public sealed class MarketDisruptionEvent : StringField
    {
        public const int TAG = 41093;

        public MarketDisruptionEvent()
            : base(Tags.MarketDisruptionEvent) { }
        public MarketDisruptionEvent(string val)
            : base(Tags.MarketDisruptionEvent, val) { }

    }


    /// <summary>
    /// NoMarketDisruptionFallbacks Field
    /// </summary>/
    public sealed class NoMarketDisruptionFallbacks : IntField
    {
        public const int TAG = 41094;

        public NoMarketDisruptionFallbacks()
            : base(Tags.NoMarketDisruptionFallbacks) { }
        public NoMarketDisruptionFallbacks(int val)
            : base(Tags.NoMarketDisruptionFallbacks, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackType Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackType : StringField
    {
        public const int TAG = 41095;

        public MarketDisruptionFallbackType()
            : base(Tags.MarketDisruptionFallbackType) { }
        public MarketDisruptionFallbackType(string val)
            : base(Tags.MarketDisruptionFallbackType, val) { }

    }


    /// <summary>
    /// NoMarketDisruptionFallbackReferencePrices Field
    /// </summary>/
    public sealed class NoMarketDisruptionFallbackReferencePrices : IntField
    {
        public const int TAG = 41096;

        public NoMarketDisruptionFallbackReferencePrices()
            : base(Tags.NoMarketDisruptionFallbackReferencePrices) { }
        public NoMarketDisruptionFallbackReferencePrices(int val)
            : base(Tags.NoMarketDisruptionFallbackReferencePrices, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackUnderlierType Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackUnderlierType : IntField
    {
        public const int TAG = 41097;

        public MarketDisruptionFallbackUnderlierType()
            : base(Tags.MarketDisruptionFallbackUnderlierType) { }
        public MarketDisruptionFallbackUnderlierType(int val)
            : base(Tags.MarketDisruptionFallbackUnderlierType, val) { }


        // Field Enumerations
        public const int BASKET = 0;
        public const int BOND = 1;
        public const int CASH = 2;
        public const int COMMODITY = 3;
        public const int CONVERTIBLE_BOND = 4;
        public const int EQUITY = 5;
        public const int EXCHANGE_TRADED_FUND = 6;
        public const int FUTURE = 7;
        public const int INDEX = 8;
        public const int LOAN = 9;
        public const int MORTGAGE = 10;
        public const int MUTUAL_FUND = 11;
    }


    /// <summary>
    /// MarketDisruptionFallbackUnderlierSecurityID Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackUnderlierSecurityID : StringField
    {
        public const int TAG = 41098;

        public MarketDisruptionFallbackUnderlierSecurityID()
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityID) { }
        public MarketDisruptionFallbackUnderlierSecurityID(string val)
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityID, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackUnderlierSecurityIDSource Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackUnderlierSecurityIDSource : StringField
    {
        public const int TAG = 41099;

        public MarketDisruptionFallbackUnderlierSecurityIDSource()
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityIDSource) { }
        public MarketDisruptionFallbackUnderlierSecurityIDSource(string val)
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// MarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41100;

        public MarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityDesc) { }
        public MarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.MarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// EncodedMarketDisruptionFallbackUnderlierSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedMarketDisruptionFallbackUnderlierSecurityDescLen : IntField
    {
        public const int TAG = 41101;

        public EncodedMarketDisruptionFallbackUnderlierSecurityDescLen()
            : base(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen) { }
        public EncodedMarketDisruptionFallbackUnderlierSecurityDescLen(int val)
            : base(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedMarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class EncodedMarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41102;

        public EncodedMarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDesc) { }
        public EncodedMarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.EncodedMarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackOpenUnits Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackOpenUnits : DecimalField
    {
        public const int TAG = 41103;

        public MarketDisruptionFallbackOpenUnits()
            : base(Tags.MarketDisruptionFallbackOpenUnits) { }
        public MarketDisruptionFallbackOpenUnits(Decimal val)
            : base(Tags.MarketDisruptionFallbackOpenUnits, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackBasketCurrency Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackBasketCurrency : StringField
    {
        public const int TAG = 41104;

        public MarketDisruptionFallbackBasketCurrency()
            : base(Tags.MarketDisruptionFallbackBasketCurrency) { }
        public MarketDisruptionFallbackBasketCurrency(string val)
            : base(Tags.MarketDisruptionFallbackBasketCurrency, val) { }

    }


    /// <summary>
    /// MarketDisruptionFallbackBasketDivisor Field
    /// </summary>/
    public sealed class MarketDisruptionFallbackBasketDivisor : DecimalField
    {
        public const int TAG = 41105;

        public MarketDisruptionFallbackBasketDivisor()
            : base(Tags.MarketDisruptionFallbackBasketDivisor) { }
        public MarketDisruptionFallbackBasketDivisor(Decimal val)
            : base(Tags.MarketDisruptionFallbackBasketDivisor, val) { }

    }


    /// <summary>
    /// ExerciseDesc Field
    /// </summary>/
    public sealed class ExerciseDesc : StringField
    {
        public const int TAG = 41106;

        public ExerciseDesc()
            : base(Tags.ExerciseDesc) { }
        public ExerciseDesc(string val)
            : base(Tags.ExerciseDesc, val) { }

    }


    /// <summary>
    /// EncodedExerciseDescLen Field
    /// </summary>/
    public sealed class EncodedExerciseDescLen : IntField
    {
        public const int TAG = 41107;

        public EncodedExerciseDescLen()
            : base(Tags.EncodedExerciseDescLen) { }
        public EncodedExerciseDescLen(int val)
            : base(Tags.EncodedExerciseDescLen, val) { }

    }


    /// <summary>
    /// EncodedExerciseDesc Field
    /// </summary>/
    public sealed class EncodedExerciseDesc : StringField
    {
        public const int TAG = 41108;

        public EncodedExerciseDesc()
            : base(Tags.EncodedExerciseDesc) { }
        public EncodedExerciseDesc(string val)
            : base(Tags.EncodedExerciseDesc, val) { }

    }


    /// <summary>
    /// AutomaticExerciseIndicator Field
    /// </summary>/
    public sealed class AutomaticExerciseIndicator : BooleanField
    {
        public const int TAG = 41109;

        public AutomaticExerciseIndicator()
            : base(Tags.AutomaticExerciseIndicator) { }
        public AutomaticExerciseIndicator(Boolean val)
            : base(Tags.AutomaticExerciseIndicator, val) { }

    }


    /// <summary>
    /// AutomaticExerciseThresholdRate Field
    /// </summary>/
    public sealed class AutomaticExerciseThresholdRate : DecimalField
    {
        public const int TAG = 41110;

        public AutomaticExerciseThresholdRate()
            : base(Tags.AutomaticExerciseThresholdRate) { }
        public AutomaticExerciseThresholdRate(Decimal val)
            : base(Tags.AutomaticExerciseThresholdRate, val) { }

    }


    /// <summary>
    /// ExerciseConfirmationMethod Field
    /// </summary>/
    public sealed class ExerciseConfirmationMethod : IntField
    {
        public const int TAG = 41111;

        public ExerciseConfirmationMethod()
            : base(Tags.ExerciseConfirmationMethod) { }
        public ExerciseConfirmationMethod(int val)
            : base(Tags.ExerciseConfirmationMethod, val) { }


        // Field Enumerations
        public const int NOT_REQUIRED = 0;
        public const int NON_ELECTRONIC = 1;
        public const int ELECTRONIC = 2;
        public const int UNKNOWN_AT_TIME_OF_REPORT = 3;
    }


    /// <summary>
    /// ManualNoticeBusinessCenter Field
    /// </summary>/
    public sealed class ManualNoticeBusinessCenter : StringField
    {
        public const int TAG = 41112;

        public ManualNoticeBusinessCenter()
            : base(Tags.ManualNoticeBusinessCenter) { }
        public ManualNoticeBusinessCenter(string val)
            : base(Tags.ManualNoticeBusinessCenter, val) { }

    }


    /// <summary>
    /// FallbackExerciseIndicator Field
    /// </summary>/
    public sealed class FallbackExerciseIndicator : BooleanField
    {
        public const int TAG = 41113;

        public FallbackExerciseIndicator()
            : base(Tags.FallbackExerciseIndicator) { }
        public FallbackExerciseIndicator(Boolean val)
            : base(Tags.FallbackExerciseIndicator, val) { }

    }


    /// <summary>
    /// LimitedRightToConfirmIndicator Field
    /// </summary>/
    public sealed class LimitedRightToConfirmIndicator : BooleanField
    {
        public const int TAG = 41114;

        public LimitedRightToConfirmIndicator()
            : base(Tags.LimitedRightToConfirmIndicator) { }
        public LimitedRightToConfirmIndicator(Boolean val)
            : base(Tags.LimitedRightToConfirmIndicator, val) { }

    }


    /// <summary>
    /// ExerciseSplitTicketIndicator Field
    /// </summary>/
    public sealed class ExerciseSplitTicketIndicator : BooleanField
    {
        public const int TAG = 41115;

        public ExerciseSplitTicketIndicator()
            : base(Tags.ExerciseSplitTicketIndicator) { }
        public ExerciseSplitTicketIndicator(Boolean val)
            : base(Tags.ExerciseSplitTicketIndicator, val) { }

    }


    /// <summary>
    /// NoOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 41116;

        public NoOptionExerciseBusinessCenters()
            : base(Tags.NoOptionExerciseBusinessCenters) { }
        public NoOptionExerciseBusinessCenters(int val)
            : base(Tags.NoOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// OptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class OptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 41117;

        public OptionExerciseBusinessCenter()
            : base(Tags.OptionExerciseBusinessCenter) { }
        public OptionExerciseBusinessCenter(string val)
            : base(Tags.OptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// OptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class OptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 41118;

        public OptionExerciseBusinessDayConvention()
            : base(Tags.OptionExerciseBusinessDayConvention) { }
        public OptionExerciseBusinessDayConvention(int val)
            : base(Tags.OptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// OptionExerciseEarliestDateOffsetDayType Field
    /// </summary>/
    public sealed class OptionExerciseEarliestDateOffsetDayType : IntField
    {
        public const int TAG = 41119;

        public OptionExerciseEarliestDateOffsetDayType()
            : base(Tags.OptionExerciseEarliestDateOffsetDayType) { }
        public OptionExerciseEarliestDateOffsetDayType(int val)
            : base(Tags.OptionExerciseEarliestDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// OptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class OptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 41120;

        public OptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.OptionExerciseEarliestDateOffsetPeriod) { }
        public OptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.OptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// OptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class OptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 41121;

        public OptionExerciseEarliestDateOffsetUnit()
            : base(Tags.OptionExerciseEarliestDateOffsetUnit) { }
        public OptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.OptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// OptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class OptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 41122;

        public OptionExerciseFrequencyPeriod()
            : base(Tags.OptionExerciseFrequencyPeriod) { }
        public OptionExerciseFrequencyPeriod(int val)
            : base(Tags.OptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// OptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class OptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 41123;

        public OptionExerciseFrequencyUnit()
            : base(Tags.OptionExerciseFrequencyUnit) { }
        public OptionExerciseFrequencyUnit(string val)
            : base(Tags.OptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// OptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class OptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 41124;

        public OptionExerciseStartDateUnadjusted()
            : base(Tags.OptionExerciseStartDateUnadjusted) { }
        public OptionExerciseStartDateUnadjusted(string val)
            : base(Tags.OptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// OptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class OptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 41125;

        public OptionExerciseStartDateRelativeTo()
            : base(Tags.OptionExerciseStartDateRelativeTo) { }
        public OptionExerciseStartDateRelativeTo(int val)
            : base(Tags.OptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// OptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class OptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 41126;

        public OptionExerciseStartDateOffsetPeriod()
            : base(Tags.OptionExerciseStartDateOffsetPeriod) { }
        public OptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.OptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// OptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class OptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 41127;

        public OptionExerciseStartDateOffsetUnit()
            : base(Tags.OptionExerciseStartDateOffsetUnit) { }
        public OptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.OptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// OptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class OptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 41128;

        public OptionExerciseStartDateOffsetDayType()
            : base(Tags.OptionExerciseStartDateOffsetDayType) { }
        public OptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.OptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// OptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class OptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 41129;

        public OptionExerciseStartDateAdjusted()
            : base(Tags.OptionExerciseStartDateAdjusted) { }
        public OptionExerciseStartDateAdjusted(string val)
            : base(Tags.OptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// OptionExerciseSkip Field
    /// </summary>/
    public sealed class OptionExerciseSkip : IntField
    {
        public const int TAG = 41130;

        public OptionExerciseSkip()
            : base(Tags.OptionExerciseSkip) { }
        public OptionExerciseSkip(int val)
            : base(Tags.OptionExerciseSkip, val) { }

    }


    /// <summary>
    /// OptionExerciseNominationDeadline Field
    /// </summary>/
    public sealed class OptionExerciseNominationDeadline : StringField
    {
        public const int TAG = 41131;

        public OptionExerciseNominationDeadline()
            : base(Tags.OptionExerciseNominationDeadline) { }
        public OptionExerciseNominationDeadline(string val)
            : base(Tags.OptionExerciseNominationDeadline, val) { }

    }


    /// <summary>
    /// OptionExerciseFirstDateUnadjusted Field
    /// </summary>/
    public sealed class OptionExerciseFirstDateUnadjusted : StringField
    {
        public const int TAG = 41132;

        public OptionExerciseFirstDateUnadjusted()
            : base(Tags.OptionExerciseFirstDateUnadjusted) { }
        public OptionExerciseFirstDateUnadjusted(string val)
            : base(Tags.OptionExerciseFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// OptionExerciseLastDateUnadjusted Field
    /// </summary>/
    public sealed class OptionExerciseLastDateUnadjusted : StringField
    {
        public const int TAG = 41133;

        public OptionExerciseLastDateUnadjusted()
            : base(Tags.OptionExerciseLastDateUnadjusted) { }
        public OptionExerciseLastDateUnadjusted(string val)
            : base(Tags.OptionExerciseLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// OptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class OptionExerciseEarliestTime : StringField
    {
        public const int TAG = 41134;

        public OptionExerciseEarliestTime()
            : base(Tags.OptionExerciseEarliestTime) { }
        public OptionExerciseEarliestTime(string val)
            : base(Tags.OptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// OptionExerciseLatestTime Field
    /// </summary>/
    public sealed class OptionExerciseLatestTime : StringField
    {
        public const int TAG = 41135;

        public OptionExerciseLatestTime()
            : base(Tags.OptionExerciseLatestTime) { }
        public OptionExerciseLatestTime(string val)
            : base(Tags.OptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// OptionExerciseTimeBusinessCenter Field
    /// </summary>/
    public sealed class OptionExerciseTimeBusinessCenter : StringField
    {
        public const int TAG = 41136;

        public OptionExerciseTimeBusinessCenter()
            : base(Tags.OptionExerciseTimeBusinessCenter) { }
        public OptionExerciseTimeBusinessCenter(string val)
            : base(Tags.OptionExerciseTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoOptionExerciseDates Field
    /// </summary>/
    public sealed class NoOptionExerciseDates : IntField
    {
        public const int TAG = 41137;

        public NoOptionExerciseDates()
            : base(Tags.NoOptionExerciseDates) { }
        public NoOptionExerciseDates(int val)
            : base(Tags.NoOptionExerciseDates, val) { }

    }


    /// <summary>
    /// OptionExerciseDate Field
    /// </summary>/
    public sealed class OptionExerciseDate : StringField
    {
        public const int TAG = 41138;

        public OptionExerciseDate()
            : base(Tags.OptionExerciseDate) { }
        public OptionExerciseDate(string val)
            : base(Tags.OptionExerciseDate, val) { }

    }


    /// <summary>
    /// OptionExerciseDateType Field
    /// </summary>/
    public sealed class OptionExerciseDateType : IntField
    {
        public const int TAG = 41139;

        public OptionExerciseDateType()
            : base(Tags.OptionExerciseDateType) { }
        public OptionExerciseDateType(int val)
            : base(Tags.OptionExerciseDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoOptionExerciseExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoOptionExerciseExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 41140;

        public NoOptionExerciseExpirationDateBusinessCenters()
            : base(Tags.NoOptionExerciseExpirationDateBusinessCenters) { }
        public NoOptionExerciseExpirationDateBusinessCenters(int val)
            : base(Tags.NoOptionExerciseExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 41141;

        public OptionExerciseExpirationDateBusinessCenter()
            : base(Tags.OptionExerciseExpirationDateBusinessCenter) { }
        public OptionExerciseExpirationDateBusinessCenter(string val)
            : base(Tags.OptionExerciseExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 41142;

        public OptionExerciseExpirationDateBusinessDayConvention()
            : base(Tags.OptionExerciseExpirationDateBusinessDayConvention) { }
        public OptionExerciseExpirationDateBusinessDayConvention(int val)
            : base(Tags.OptionExerciseExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// OptionExerciseExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateRelativeTo : IntField
    {
        public const int TAG = 41143;

        public OptionExerciseExpirationDateRelativeTo()
            : base(Tags.OptionExerciseExpirationDateRelativeTo) { }
        public OptionExerciseExpirationDateRelativeTo(int val)
            : base(Tags.OptionExerciseExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 41144;

        public OptionExerciseExpirationDateOffsetPeriod()
            : base(Tags.OptionExerciseExpirationDateOffsetPeriod) { }
        public OptionExerciseExpirationDateOffsetPeriod(int val)
            : base(Tags.OptionExerciseExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 41145;

        public OptionExerciseExpirationDateOffsetUnit()
            : base(Tags.OptionExerciseExpirationDateOffsetUnit) { }
        public OptionExerciseExpirationDateOffsetUnit(string val)
            : base(Tags.OptionExerciseExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// OptionExerciseExpirationFrequencyPeriod Field
    /// </summary>/
    public sealed class OptionExerciseExpirationFrequencyPeriod : IntField
    {
        public const int TAG = 41146;

        public OptionExerciseExpirationFrequencyPeriod()
            : base(Tags.OptionExerciseExpirationFrequencyPeriod) { }
        public OptionExerciseExpirationFrequencyPeriod(int val)
            : base(Tags.OptionExerciseExpirationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationFrequencyUnit Field
    /// </summary>/
    public sealed class OptionExerciseExpirationFrequencyUnit : StringField
    {
        public const int TAG = 41147;

        public OptionExerciseExpirationFrequencyUnit()
            : base(Tags.OptionExerciseExpirationFrequencyUnit) { }
        public OptionExerciseExpirationFrequencyUnit(string val)
            : base(Tags.OptionExerciseExpirationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// OptionExerciseExpirationRollConvention Field
    /// </summary>/
    public sealed class OptionExerciseExpirationRollConvention : StringField
    {
        public const int TAG = 41148;

        public OptionExerciseExpirationRollConvention()
            : base(Tags.OptionExerciseExpirationRollConvention) { }
        public OptionExerciseExpirationRollConvention(string val)
            : base(Tags.OptionExerciseExpirationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// OptionExerciseExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 41149;

        public OptionExerciseExpirationDateOffsetDayType()
            : base(Tags.OptionExerciseExpirationDateOffsetDayType) { }
        public OptionExerciseExpirationDateOffsetDayType(int val)
            : base(Tags.OptionExerciseExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// OptionExerciseExpirationTime Field
    /// </summary>/
    public sealed class OptionExerciseExpirationTime : StringField
    {
        public const int TAG = 41150;

        public OptionExerciseExpirationTime()
            : base(Tags.OptionExerciseExpirationTime) { }
        public OptionExerciseExpirationTime(string val)
            : base(Tags.OptionExerciseExpirationTime, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class OptionExerciseExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 41151;

        public OptionExerciseExpirationTimeBusinessCenter()
            : base(Tags.OptionExerciseExpirationTimeBusinessCenter) { }
        public OptionExerciseExpirationTimeBusinessCenter(string val)
            : base(Tags.OptionExerciseExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoOptionExerciseExpirationDates Field
    /// </summary>/
    public sealed class NoOptionExerciseExpirationDates : IntField
    {
        public const int TAG = 41152;

        public NoOptionExerciseExpirationDates()
            : base(Tags.NoOptionExerciseExpirationDates) { }
        public NoOptionExerciseExpirationDates(int val)
            : base(Tags.NoOptionExerciseExpirationDates, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDate Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDate : StringField
    {
        public const int TAG = 41153;

        public OptionExerciseExpirationDate()
            : base(Tags.OptionExerciseExpirationDate) { }
        public OptionExerciseExpirationDate(string val)
            : base(Tags.OptionExerciseExpirationDate, val) { }

    }


    /// <summary>
    /// OptionExerciseExpirationDateType Field
    /// </summary>/
    public sealed class OptionExerciseExpirationDateType : IntField
    {
        public const int TAG = 41154;

        public OptionExerciseExpirationDateType()
            : base(Tags.OptionExerciseExpirationDateType) { }
        public OptionExerciseExpirationDateType(int val)
            : base(Tags.OptionExerciseExpirationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// PaymentUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentUnitOfMeasure : StringField
    {
        public const int TAG = 41155;

        public PaymentUnitOfMeasure()
            : base(Tags.PaymentUnitOfMeasure) { }
        public PaymentUnitOfMeasure(string val)
            : base(Tags.PaymentUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentDateRelativeTo : IntField
    {
        public const int TAG = 41156;

        public PaymentDateRelativeTo()
            : base(Tags.PaymentDateRelativeTo) { }
        public PaymentDateRelativeTo(int val)
            : base(Tags.PaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 41157;

        public PaymentDateOffsetPeriod()
            : base(Tags.PaymentDateOffsetPeriod) { }
        public PaymentDateOffsetPeriod(int val)
            : base(Tags.PaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentDateOffsetUnit : StringField
    {
        public const int TAG = 41158;

        public PaymentDateOffsetUnit()
            : base(Tags.PaymentDateOffsetUnit) { }
        public PaymentDateOffsetUnit(string val)
            : base(Tags.PaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentDateOffsetDayType : IntField
    {
        public const int TAG = 41159;

        public PaymentDateOffsetDayType()
            : base(Tags.PaymentDateOffsetDayType) { }
        public PaymentDateOffsetDayType(int val)
            : base(Tags.PaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentForwardStartType Field
    /// </summary>/
    public sealed class PaymentForwardStartType : IntField
    {
        public const int TAG = 41160;

        public PaymentForwardStartType()
            : base(Tags.PaymentForwardStartType) { }
        public PaymentForwardStartType(int val)
            : base(Tags.PaymentForwardStartType, val) { }


        // Field Enumerations
        public const int PREPAID = 0;
        public const int POST_PAID = 1;
        public const int VARIABLE = 2;
        public const int FIXED = 3;
    }


    /// <summary>
    /// NoPaymentScheduleFixingDays Field
    /// </summary>/
    public sealed class NoPaymentScheduleFixingDays : IntField
    {
        public const int TAG = 41161;

        public NoPaymentScheduleFixingDays()
            : base(Tags.NoPaymentScheduleFixingDays) { }
        public NoPaymentScheduleFixingDays(int val)
            : base(Tags.NoPaymentScheduleFixingDays, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingDayOfWeek Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDayOfWeek : IntField
    {
        public const int TAG = 41162;

        public PaymentScheduleFixingDayOfWeek()
            : base(Tags.PaymentScheduleFixingDayOfWeek) { }
        public PaymentScheduleFixingDayOfWeek(int val)
            : base(Tags.PaymentScheduleFixingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// PaymentScheduleFixingDayNumber Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDayNumber : IntField
    {
        public const int TAG = 41163;

        public PaymentScheduleFixingDayNumber()
            : base(Tags.PaymentScheduleFixingDayNumber) { }
        public PaymentScheduleFixingDayNumber(int val)
            : base(Tags.PaymentScheduleFixingDayNumber, val) { }

    }


    /// <summary>
    /// PaymentScheduleXID Field
    /// </summary>/
    public sealed class PaymentScheduleXID : StringField
    {
        public const int TAG = 41164;

        public PaymentScheduleXID()
            : base(Tags.PaymentScheduleXID) { }
        public PaymentScheduleXID(string val)
            : base(Tags.PaymentScheduleXID, val) { }

    }


    /// <summary>
    /// PaymentScheduleXIDRef Field
    /// </summary>/
    public sealed class PaymentScheduleXIDRef : StringField
    {
        public const int TAG = 41165;

        public PaymentScheduleXIDRef()
            : base(Tags.PaymentScheduleXIDRef) { }
        public PaymentScheduleXIDRef(string val)
            : base(Tags.PaymentScheduleXIDRef, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateCurrency Field
    /// </summary>/
    public sealed class PaymentScheduleRateCurrency : StringField
    {
        public const int TAG = 41166;

        public PaymentScheduleRateCurrency()
            : base(Tags.PaymentScheduleRateCurrency) { }
        public PaymentScheduleRateCurrency(string val)
            : base(Tags.PaymentScheduleRateCurrency, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentScheduleRateUnitOfMeasure : StringField
    {
        public const int TAG = 41167;

        public PaymentScheduleRateUnitOfMeasure()
            : base(Tags.PaymentScheduleRateUnitOfMeasure) { }
        public PaymentScheduleRateUnitOfMeasure(string val)
            : base(Tags.PaymentScheduleRateUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentScheduleRateConversionFactor Field
    /// </summary>/
    public sealed class PaymentScheduleRateConversionFactor : DecimalField
    {
        public const int TAG = 41168;

        public PaymentScheduleRateConversionFactor()
            : base(Tags.PaymentScheduleRateConversionFactor) { }
        public PaymentScheduleRateConversionFactor(Decimal val)
            : base(Tags.PaymentScheduleRateConversionFactor, val) { }

    }


    /// <summary>
    /// PaymentScheduleRateSpreadType Field
    /// </summary>/
    public sealed class PaymentScheduleRateSpreadType : IntField
    {
        public const int TAG = 41169;

        public PaymentScheduleRateSpreadType()
            : base(Tags.PaymentScheduleRateSpreadType) { }
        public PaymentScheduleRateSpreadType(int val)
            : base(Tags.PaymentScheduleRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// PaymentScheduleSettlPeriodPrice Field
    /// </summary>/
    public sealed class PaymentScheduleSettlPeriodPrice : DecimalField
    {
        public const int TAG = 41170;

        public PaymentScheduleSettlPeriodPrice()
            : base(Tags.PaymentScheduleSettlPeriodPrice) { }
        public PaymentScheduleSettlPeriodPrice(Decimal val)
            : base(Tags.PaymentScheduleSettlPeriodPrice, val) { }

    }


    /// <summary>
    /// PaymentScheduleSettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class PaymentScheduleSettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 41171;

        public PaymentScheduleSettlPeriodPriceCurrency()
            : base(Tags.PaymentScheduleSettlPeriodPriceCurrency) { }
        public PaymentScheduleSettlPeriodPriceCurrency(string val)
            : base(Tags.PaymentScheduleSettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// PaymentScheduleSettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentScheduleSettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 41172;

        public PaymentScheduleSettlPeriodPriceUnitOfMeasure()
            : base(Tags.PaymentScheduleSettlPeriodPriceUnitOfMeasure) { }
        public PaymentScheduleSettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.PaymentScheduleSettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentScheduleStepUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentScheduleStepUnitOfMeasure : StringField
    {
        public const int TAG = 41173;

        public PaymentScheduleStepUnitOfMeasure()
            : base(Tags.PaymentScheduleStepUnitOfMeasure) { }
        public PaymentScheduleStepUnitOfMeasure(string val)
            : base(Tags.PaymentScheduleStepUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentScheduleFixingDayDistribution Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDayDistribution : IntField
    {
        public const int TAG = 41174;

        public PaymentScheduleFixingDayDistribution()
            : base(Tags.PaymentScheduleFixingDayDistribution) { }
        public PaymentScheduleFixingDayDistribution(int val)
            : base(Tags.PaymentScheduleFixingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// PaymentScheduleFixingDayCount Field
    /// </summary>/
    public sealed class PaymentScheduleFixingDayCount : IntField
    {
        public const int TAG = 41175;

        public PaymentScheduleFixingDayCount()
            : base(Tags.PaymentScheduleFixingDayCount) { }
        public PaymentScheduleFixingDayCount(int val)
            : base(Tags.PaymentScheduleFixingDayCount, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingLagPeriod Field
    /// </summary>/
    public sealed class PaymentScheduleFixingLagPeriod : IntField
    {
        public const int TAG = 41176;

        public PaymentScheduleFixingLagPeriod()
            : base(Tags.PaymentScheduleFixingLagPeriod) { }
        public PaymentScheduleFixingLagPeriod(int val)
            : base(Tags.PaymentScheduleFixingLagPeriod, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingLagUnit Field
    /// </summary>/
    public sealed class PaymentScheduleFixingLagUnit : StringField
    {
        public const int TAG = 41177;

        public PaymentScheduleFixingLagUnit()
            : base(Tags.PaymentScheduleFixingLagUnit) { }
        public PaymentScheduleFixingLagUnit(string val)
            : base(Tags.PaymentScheduleFixingLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentScheduleFixingFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentScheduleFixingFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41178;

        public PaymentScheduleFixingFirstObservationDateOffsetPeriod()
            : base(Tags.PaymentScheduleFixingFirstObservationDateOffsetPeriod) { }
        public PaymentScheduleFixingFirstObservationDateOffsetPeriod(int val)
            : base(Tags.PaymentScheduleFixingFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentScheduleFixingFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentScheduleFixingFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41179;

        public PaymentScheduleFixingFirstObservationDateOffsetUnit()
            : base(Tags.PaymentScheduleFixingFirstObservationDateOffsetUnit) { }
        public PaymentScheduleFixingFirstObservationDateOffsetUnit(string val)
            : base(Tags.PaymentScheduleFixingFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamFlatRateIndicator Field
    /// </summary>/
    public sealed class PaymentStreamFlatRateIndicator : BooleanField
    {
        public const int TAG = 41180;

        public PaymentStreamFlatRateIndicator()
            : base(Tags.PaymentStreamFlatRateIndicator) { }
        public PaymentStreamFlatRateIndicator(Boolean val)
            : base(Tags.PaymentStreamFlatRateIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamFlatRateAmount Field
    /// </summary>/
    public sealed class PaymentStreamFlatRateAmount : DecimalField
    {
        public const int TAG = 41181;

        public PaymentStreamFlatRateAmount()
            : base(Tags.PaymentStreamFlatRateAmount) { }
        public PaymentStreamFlatRateAmount(Decimal val)
            : base(Tags.PaymentStreamFlatRateAmount, val) { }

    }


    /// <summary>
    /// PaymentStreamFlatRateCurrency Field
    /// </summary>/
    public sealed class PaymentStreamFlatRateCurrency : StringField
    {
        public const int TAG = 41182;

        public PaymentStreamFlatRateCurrency()
            : base(Tags.PaymentStreamFlatRateCurrency) { }
        public PaymentStreamFlatRateCurrency(string val)
            : base(Tags.PaymentStreamFlatRateCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamMaximumPaymentAmount Field
    /// </summary>/
    public sealed class PaymentStreamMaximumPaymentAmount : DecimalField
    {
        public const int TAG = 41183;

        public PaymentStreamMaximumPaymentAmount()
            : base(Tags.PaymentStreamMaximumPaymentAmount) { }
        public PaymentStreamMaximumPaymentAmount(Decimal val)
            : base(Tags.PaymentStreamMaximumPaymentAmount, val) { }

    }


    /// <summary>
    /// PaymentStreamMaximumPaymentCurrency Field
    /// </summary>/
    public sealed class PaymentStreamMaximumPaymentCurrency : StringField
    {
        public const int TAG = 41184;

        public PaymentStreamMaximumPaymentCurrency()
            : base(Tags.PaymentStreamMaximumPaymentCurrency) { }
        public PaymentStreamMaximumPaymentCurrency(string val)
            : base(Tags.PaymentStreamMaximumPaymentCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamMaximumTransactionAmount Field
    /// </summary>/
    public sealed class PaymentStreamMaximumTransactionAmount : DecimalField
    {
        public const int TAG = 41185;

        public PaymentStreamMaximumTransactionAmount()
            : base(Tags.PaymentStreamMaximumTransactionAmount) { }
        public PaymentStreamMaximumTransactionAmount(Decimal val)
            : base(Tags.PaymentStreamMaximumTransactionAmount, val) { }

    }


    /// <summary>
    /// PaymentStreamMaximumTransactionCurrency Field
    /// </summary>/
    public sealed class PaymentStreamMaximumTransactionCurrency : StringField
    {
        public const int TAG = 41186;

        public PaymentStreamMaximumTransactionCurrency()
            : base(Tags.PaymentStreamMaximumTransactionCurrency) { }
        public PaymentStreamMaximumTransactionCurrency(string val)
            : base(Tags.PaymentStreamMaximumTransactionCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamFixedAmountUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentStreamFixedAmountUnitOfMeasure : StringField
    {
        public const int TAG = 41187;

        public PaymentStreamFixedAmountUnitOfMeasure()
            : base(Tags.PaymentStreamFixedAmountUnitOfMeasure) { }
        public PaymentStreamFixedAmountUnitOfMeasure(string val)
            : base(Tags.PaymentStreamFixedAmountUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentStreamTotalFixedAmount Field
    /// </summary>/
    public sealed class PaymentStreamTotalFixedAmount : DecimalField
    {
        public const int TAG = 41188;

        public PaymentStreamTotalFixedAmount()
            : base(Tags.PaymentStreamTotalFixedAmount) { }
        public PaymentStreamTotalFixedAmount(Decimal val)
            : base(Tags.PaymentStreamTotalFixedAmount, val) { }

    }


    /// <summary>
    /// PaymentStreamWorldScaleRate Field
    /// </summary>/
    public sealed class PaymentStreamWorldScaleRate : DecimalField
    {
        public const int TAG = 41189;

        public PaymentStreamWorldScaleRate()
            : base(Tags.PaymentStreamWorldScaleRate) { }
        public PaymentStreamWorldScaleRate(Decimal val)
            : base(Tags.PaymentStreamWorldScaleRate, val) { }

    }


    /// <summary>
    /// PaymentStreamContractPrice Field
    /// </summary>/
    public sealed class PaymentStreamContractPrice : DecimalField
    {
        public const int TAG = 41190;

        public PaymentStreamContractPrice()
            : base(Tags.PaymentStreamContractPrice) { }
        public PaymentStreamContractPrice(Decimal val)
            : base(Tags.PaymentStreamContractPrice, val) { }

    }


    /// <summary>
    /// PaymentStreamContractPriceCurrency Field
    /// </summary>/
    public sealed class PaymentStreamContractPriceCurrency : StringField
    {
        public const int TAG = 41191;

        public PaymentStreamContractPriceCurrency()
            : base(Tags.PaymentStreamContractPriceCurrency) { }
        public PaymentStreamContractPriceCurrency(string val)
            : base(Tags.PaymentStreamContractPriceCurrency, val) { }

    }


    /// <summary>
    /// NoPaymentStreamPricingBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamPricingBusinessCenters : IntField
    {
        public const int TAG = 41192;

        public NoPaymentStreamPricingBusinessCenters()
            : base(Tags.NoPaymentStreamPricingBusinessCenters) { }
        public NoPaymentStreamPricingBusinessCenters(int val)
            : base(Tags.NoPaymentStreamPricingBusinessCenters, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamPricingBusinessCenter : StringField
    {
        public const int TAG = 41193;

        public PaymentStreamPricingBusinessCenter()
            : base(Tags.PaymentStreamPricingBusinessCenter) { }
        public PaymentStreamPricingBusinessCenter(string val)
            : base(Tags.PaymentStreamPricingBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndex2CurvePeriod Field
    /// </summary>/
    public sealed class PaymentStreamRateIndex2CurvePeriod : IntField
    {
        public const int TAG = 41194;

        public PaymentStreamRateIndex2CurvePeriod()
            : base(Tags.PaymentStreamRateIndex2CurvePeriod) { }
        public PaymentStreamRateIndex2CurvePeriod(int val)
            : base(Tags.PaymentStreamRateIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndex2CurveUnit Field
    /// </summary>/
    public sealed class PaymentStreamRateIndex2CurveUnit : StringField
    {
        public const int TAG = 41195;

        public PaymentStreamRateIndex2CurveUnit()
            : base(Tags.PaymentStreamRateIndex2CurveUnit) { }
        public PaymentStreamRateIndex2CurveUnit(string val)
            : base(Tags.PaymentStreamRateIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamRateIndexLocation Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexLocation : StringField
    {
        public const int TAG = 41196;

        public PaymentStreamRateIndexLocation()
            : base(Tags.PaymentStreamRateIndexLocation) { }
        public PaymentStreamRateIndexLocation(string val)
            : base(Tags.PaymentStreamRateIndexLocation, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndexLevel Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexLevel : DecimalField
    {
        public const int TAG = 41197;

        public PaymentStreamRateIndexLevel()
            : base(Tags.PaymentStreamRateIndexLevel) { }
        public PaymentStreamRateIndexLevel(Decimal val)
            : base(Tags.PaymentStreamRateIndexLevel, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndexUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexUnitOfMeasure : StringField
    {
        public const int TAG = 41198;

        public PaymentStreamRateIndexUnitOfMeasure()
            : base(Tags.PaymentStreamRateIndexUnitOfMeasure) { }
        public PaymentStreamRateIndexUnitOfMeasure(string val)
            : base(Tags.PaymentStreamRateIndexUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentStreamSettlLevel Field
    /// </summary>/
    public sealed class PaymentStreamSettlLevel : IntField
    {
        public const int TAG = 41199;

        public PaymentStreamSettlLevel()
            : base(Tags.PaymentStreamSettlLevel) { }
        public PaymentStreamSettlLevel(int val)
            : base(Tags.PaymentStreamSettlLevel, val) { }


        // Field Enumerations
        public const int AVERAGE = 0;
        public const int MAXIMUM = 1;
        public const int MINIMUM = 2;
        public const int CUMULATIVE = 3;
    }


    /// <summary>
    /// PaymentStreamReferenceLevel Field
    /// </summary>/
    public sealed class PaymentStreamReferenceLevel : DecimalField
    {
        public const int TAG = 41200;

        public PaymentStreamReferenceLevel()
            : base(Tags.PaymentStreamReferenceLevel) { }
        public PaymentStreamReferenceLevel(Decimal val)
            : base(Tags.PaymentStreamReferenceLevel, val) { }

    }


    /// <summary>
    /// PaymentStreamReferenceLevelUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentStreamReferenceLevelUnitOfMeasure : StringField
    {
        public const int TAG = 41201;

        public PaymentStreamReferenceLevelUnitOfMeasure()
            : base(Tags.PaymentStreamReferenceLevelUnitOfMeasure) { }
        public PaymentStreamReferenceLevelUnitOfMeasure(string val)
            : base(Tags.PaymentStreamReferenceLevelUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentStreamReferenceLevelEqualsZeroIndicator Field
    /// </summary>/
    public sealed class PaymentStreamReferenceLevelEqualsZeroIndicator : BooleanField
    {
        public const int TAG = 41202;

        public PaymentStreamReferenceLevelEqualsZeroIndicator()
            : base(Tags.PaymentStreamReferenceLevelEqualsZeroIndicator) { }
        public PaymentStreamReferenceLevelEqualsZeroIndicator(Boolean val)
            : base(Tags.PaymentStreamReferenceLevelEqualsZeroIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamRateSpreadCurrency Field
    /// </summary>/
    public sealed class PaymentStreamRateSpreadCurrency : StringField
    {
        public const int TAG = 41203;

        public PaymentStreamRateSpreadCurrency()
            : base(Tags.PaymentStreamRateSpreadCurrency) { }
        public PaymentStreamRateSpreadCurrency(string val)
            : base(Tags.PaymentStreamRateSpreadCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamRateSpreadUnitOfMeasure Field
    /// </summary>/
    public sealed class PaymentStreamRateSpreadUnitOfMeasure : StringField
    {
        public const int TAG = 41204;

        public PaymentStreamRateSpreadUnitOfMeasure()
            : base(Tags.PaymentStreamRateSpreadUnitOfMeasure) { }
        public PaymentStreamRateSpreadUnitOfMeasure(string val)
            : base(Tags.PaymentStreamRateSpreadUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// PaymentStreamRateConversionFactor Field
    /// </summary>/
    public sealed class PaymentStreamRateConversionFactor : DecimalField
    {
        public const int TAG = 41205;

        public PaymentStreamRateConversionFactor()
            : base(Tags.PaymentStreamRateConversionFactor) { }
        public PaymentStreamRateConversionFactor(Decimal val)
            : base(Tags.PaymentStreamRateConversionFactor, val) { }

    }


    /// <summary>
    /// PaymentStreamRateSpreadType Field
    /// </summary>/
    public sealed class PaymentStreamRateSpreadType : IntField
    {
        public const int TAG = 41206;

        public PaymentStreamRateSpreadType()
            : base(Tags.PaymentStreamRateSpreadType) { }
        public PaymentStreamRateSpreadType(int val)
            : base(Tags.PaymentStreamRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// PaymentStreamLastResetRate Field
    /// </summary>/
    public sealed class PaymentStreamLastResetRate : DecimalField
    {
        public const int TAG = 41207;

        public PaymentStreamLastResetRate()
            : base(Tags.PaymentStreamLastResetRate) { }
        public PaymentStreamLastResetRate(Decimal val)
            : base(Tags.PaymentStreamLastResetRate, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalRate Field
    /// </summary>/
    public sealed class PaymentStreamFinalRate : DecimalField
    {
        public const int TAG = 41208;

        public PaymentStreamFinalRate()
            : base(Tags.PaymentStreamFinalRate) { }
        public PaymentStreamFinalRate(Decimal val)
            : base(Tags.PaymentStreamFinalRate, val) { }

    }


    /// <summary>
    /// PaymentStreamCalculationLagPeriod Field
    /// </summary>/
    public sealed class PaymentStreamCalculationLagPeriod : IntField
    {
        public const int TAG = 41209;

        public PaymentStreamCalculationLagPeriod()
            : base(Tags.PaymentStreamCalculationLagPeriod) { }
        public PaymentStreamCalculationLagPeriod(int val)
            : base(Tags.PaymentStreamCalculationLagPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCalculationLagUnit Field
    /// </summary>/
    public sealed class PaymentStreamCalculationLagUnit : StringField
    {
        public const int TAG = 41210;

        public PaymentStreamCalculationLagUnit()
            : base(Tags.PaymentStreamCalculationLagUnit) { }
        public PaymentStreamCalculationLagUnit(string val)
            : base(Tags.PaymentStreamCalculationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41211;

        public PaymentStreamFirstObservationDateOffsetPeriod()
            : base(Tags.PaymentStreamFirstObservationDateOffsetPeriod) { }
        public PaymentStreamFirstObservationDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41212;

        public PaymentStreamFirstObservationDateOffsetUnit()
            : base(Tags.PaymentStreamFirstObservationDateOffsetUnit) { }
        public PaymentStreamFirstObservationDateOffsetUnit(string val)
            : base(Tags.PaymentStreamFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamPricingDayType Field
    /// </summary>/
    public sealed class PaymentStreamPricingDayType : IntField
    {
        public const int TAG = 41213;

        public PaymentStreamPricingDayType()
            : base(Tags.PaymentStreamPricingDayType) { }
        public PaymentStreamPricingDayType(int val)
            : base(Tags.PaymentStreamPricingDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamPricingDayDistribution Field
    /// </summary>/
    public sealed class PaymentStreamPricingDayDistribution : IntField
    {
        public const int TAG = 41214;

        public PaymentStreamPricingDayDistribution()
            : base(Tags.PaymentStreamPricingDayDistribution) { }
        public PaymentStreamPricingDayDistribution(int val)
            : base(Tags.PaymentStreamPricingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// PaymentStreamPricingDayCount Field
    /// </summary>/
    public sealed class PaymentStreamPricingDayCount : IntField
    {
        public const int TAG = 41215;

        public PaymentStreamPricingDayCount()
            : base(Tags.PaymentStreamPricingDayCount) { }
        public PaymentStreamPricingDayCount(int val)
            : base(Tags.PaymentStreamPricingDayCount, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingBusinessCalendar Field
    /// </summary>/
    public sealed class PaymentStreamPricingBusinessCalendar : StringField
    {
        public const int TAG = 41216;

        public PaymentStreamPricingBusinessCalendar()
            : base(Tags.PaymentStreamPricingBusinessCalendar) { }
        public PaymentStreamPricingBusinessCalendar(string val)
            : base(Tags.PaymentStreamPricingBusinessCalendar, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamPricingBusinessDayConvention : IntField
    {
        public const int TAG = 41217;

        public PaymentStreamPricingBusinessDayConvention()
            : base(Tags.PaymentStreamPricingBusinessDayConvention) { }
        public PaymentStreamPricingBusinessDayConvention(int val)
            : base(Tags.PaymentStreamPricingBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// DeliveryStreamRiskApportionmentSource Field
    /// </summary>/
    public sealed class DeliveryStreamRiskApportionmentSource : StringField
    {
        public const int TAG = 41218;

        public DeliveryStreamRiskApportionmentSource()
            : base(Tags.DeliveryStreamRiskApportionmentSource) { }
        public DeliveryStreamRiskApportionmentSource(string val)
            : base(Tags.DeliveryStreamRiskApportionmentSource, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamRiskApportionmentSource Field
    /// </summary>/
    public sealed class LegDeliveryStreamRiskApportionmentSource : StringField
    {
        public const int TAG = 41219;

        public LegDeliveryStreamRiskApportionmentSource()
            : base(Tags.LegDeliveryStreamRiskApportionmentSource) { }
        public LegDeliveryStreamRiskApportionmentSource(string val)
            : base(Tags.LegDeliveryStreamRiskApportionmentSource, val) { }

    }


    /// <summary>
    /// NoPaymentStreamPaymentDates Field
    /// </summary>/
    public sealed class NoPaymentStreamPaymentDates : IntField
    {
        public const int TAG = 41220;

        public NoPaymentStreamPaymentDates()
            : base(Tags.NoPaymentStreamPaymentDates) { }
        public NoPaymentStreamPaymentDates(int val)
            : base(Tags.NoPaymentStreamPaymentDates, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDate Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDate : StringField
    {
        public const int TAG = 41221;

        public PaymentStreamPaymentDate()
            : base(Tags.PaymentStreamPaymentDate) { }
        public PaymentStreamPaymentDate(string val)
            : base(Tags.PaymentStreamPaymentDate, val) { }

    }


    /// <summary>
    /// PaymentStreamPaymentDateType Field
    /// </summary>/
    public sealed class PaymentStreamPaymentDateType : IntField
    {
        public const int TAG = 41222;

        public PaymentStreamPaymentDateType()
            : base(Tags.PaymentStreamPaymentDateType) { }
        public PaymentStreamPaymentDateType(int val)
            : base(Tags.PaymentStreamPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// PaymentStreamMasterAgreementPaymentDatesIndicator Field
    /// </summary>/
    public sealed class PaymentStreamMasterAgreementPaymentDatesIndicator : BooleanField
    {
        public const int TAG = 41223;

        public PaymentStreamMasterAgreementPaymentDatesIndicator()
            : base(Tags.PaymentStreamMasterAgreementPaymentDatesIndicator) { }
        public PaymentStreamMasterAgreementPaymentDatesIndicator(Boolean val)
            : base(Tags.PaymentStreamMasterAgreementPaymentDatesIndicator, val) { }

    }


    /// <summary>
    /// NoPaymentStreamPricingDates Field
    /// </summary>/
    public sealed class NoPaymentStreamPricingDates : IntField
    {
        public const int TAG = 41224;

        public NoPaymentStreamPricingDates()
            : base(Tags.NoPaymentStreamPricingDates) { }
        public NoPaymentStreamPricingDates(int val)
            : base(Tags.NoPaymentStreamPricingDates, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingDate Field
    /// </summary>/
    public sealed class PaymentStreamPricingDate : StringField
    {
        public const int TAG = 41225;

        public PaymentStreamPricingDate()
            : base(Tags.PaymentStreamPricingDate) { }
        public PaymentStreamPricingDate(string val)
            : base(Tags.PaymentStreamPricingDate, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingDateType Field
    /// </summary>/
    public sealed class PaymentStreamPricingDateType : IntField
    {
        public const int TAG = 41226;

        public PaymentStreamPricingDateType()
            : base(Tags.PaymentStreamPricingDateType) { }
        public PaymentStreamPricingDateType(int val)
            : base(Tags.PaymentStreamPricingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoPaymentStreamPricingDays Field
    /// </summary>/
    public sealed class NoPaymentStreamPricingDays : IntField
    {
        public const int TAG = 41227;

        public NoPaymentStreamPricingDays()
            : base(Tags.NoPaymentStreamPricingDays) { }
        public NoPaymentStreamPricingDays(int val)
            : base(Tags.NoPaymentStreamPricingDays, val) { }

    }


    /// <summary>
    /// PaymentStreamPricingDayOfWeek Field
    /// </summary>/
    public sealed class PaymentStreamPricingDayOfWeek : IntField
    {
        public const int TAG = 41228;

        public PaymentStreamPricingDayOfWeek()
            : base(Tags.PaymentStreamPricingDayOfWeek) { }
        public PaymentStreamPricingDayOfWeek(int val)
            : base(Tags.PaymentStreamPricingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// PaymentStreamPricingDayNumber Field
    /// </summary>/
    public sealed class PaymentStreamPricingDayNumber : IntField
    {
        public const int TAG = 41229;

        public PaymentStreamPricingDayNumber()
            : base(Tags.PaymentStreamPricingDayNumber) { }
        public PaymentStreamPricingDayNumber(int val)
            : base(Tags.PaymentStreamPricingDayNumber, val) { }

    }


    /// <summary>
    /// NoPricingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPricingDateBusinessCenters : IntField
    {
        public const int TAG = 41230;

        public NoPricingDateBusinessCenters()
            : base(Tags.NoPricingDateBusinessCenters) { }
        public NoPricingDateBusinessCenters(int val)
            : base(Tags.NoPricingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// PricingDateBusinessCenter Field
    /// </summary>/
    public sealed class PricingDateBusinessCenter : StringField
    {
        public const int TAG = 41231;

        public PricingDateBusinessCenter()
            : base(Tags.PricingDateBusinessCenter) { }
        public PricingDateBusinessCenter(string val)
            : base(Tags.PricingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PricingDateUnadjusted Field
    /// </summary>/
    public sealed class PricingDateUnadjusted : StringField
    {
        public const int TAG = 41232;

        public PricingDateUnadjusted()
            : base(Tags.PricingDateUnadjusted) { }
        public PricingDateUnadjusted(string val)
            : base(Tags.PricingDateUnadjusted, val) { }

    }


    /// <summary>
    /// PricingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PricingDateBusinessDayConvention : IntField
    {
        public const int TAG = 41233;

        public PricingDateBusinessDayConvention()
            : base(Tags.PricingDateBusinessDayConvention) { }
        public PricingDateBusinessDayConvention(int val)
            : base(Tags.PricingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PricingDateAdjusted Field
    /// </summary>/
    public sealed class PricingDateAdjusted : StringField
    {
        public const int TAG = 41234;

        public PricingDateAdjusted()
            : base(Tags.PricingDateAdjusted) { }
        public PricingDateAdjusted(string val)
            : base(Tags.PricingDateAdjusted, val) { }

    }


    /// <summary>
    /// PricingTime Field
    /// </summary>/
    public sealed class PricingTime : StringField
    {
        public const int TAG = 41235;

        public PricingTime()
            : base(Tags.PricingTime) { }
        public PricingTime(string val)
            : base(Tags.PricingTime, val) { }

    }


    /// <summary>
    /// PricingTimeBusinessCenter Field
    /// </summary>/
    public sealed class PricingTimeBusinessCenter : StringField
    {
        public const int TAG = 41236;

        public PricingTimeBusinessCenter()
            : base(Tags.PricingTimeBusinessCenter) { }
        public PricingTimeBusinessCenter(string val)
            : base(Tags.PricingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoStreamAssetAttributes Field
    /// </summary>/
    public sealed class NoStreamAssetAttributes : IntField
    {
        public const int TAG = 41237;

        public NoStreamAssetAttributes()
            : base(Tags.NoStreamAssetAttributes) { }
        public NoStreamAssetAttributes(int val)
            : base(Tags.NoStreamAssetAttributes, val) { }

    }


    /// <summary>
    /// StreamAssetAttributeType Field
    /// </summary>/
    public sealed class StreamAssetAttributeType : StringField
    {
        public const int TAG = 41238;

        public StreamAssetAttributeType()
            : base(Tags.StreamAssetAttributeType) { }
        public StreamAssetAttributeType(string val)
            : base(Tags.StreamAssetAttributeType, val) { }

    }


    /// <summary>
    /// StreamAssetAttributeValue Field
    /// </summary>/
    public sealed class StreamAssetAttributeValue : StringField
    {
        public const int TAG = 41239;

        public StreamAssetAttributeValue()
            : base(Tags.StreamAssetAttributeValue) { }
        public StreamAssetAttributeValue(string val)
            : base(Tags.StreamAssetAttributeValue, val) { }

    }


    /// <summary>
    /// StreamAssetAttributeLimit Field
    /// </summary>/
    public sealed class StreamAssetAttributeLimit : StringField
    {
        public const int TAG = 41240;

        public StreamAssetAttributeLimit()
            : base(Tags.StreamAssetAttributeLimit) { }
        public StreamAssetAttributeLimit(string val)
            : base(Tags.StreamAssetAttributeLimit, val) { }

    }


    /// <summary>
    /// NoStreamCalculationPeriodDates Field
    /// </summary>/
    public sealed class NoStreamCalculationPeriodDates : IntField
    {
        public const int TAG = 41241;

        public NoStreamCalculationPeriodDates()
            : base(Tags.NoStreamCalculationPeriodDates) { }
        public NoStreamCalculationPeriodDates(int val)
            : base(Tags.NoStreamCalculationPeriodDates, val) { }

    }


    /// <summary>
    /// StreamCalculationPeriodDate Field
    /// </summary>/
    public sealed class StreamCalculationPeriodDate : StringField
    {
        public const int TAG = 41242;

        public StreamCalculationPeriodDate()
            : base(Tags.StreamCalculationPeriodDate) { }
        public StreamCalculationPeriodDate(string val)
            : base(Tags.StreamCalculationPeriodDate, val) { }

    }


    /// <summary>
    /// StreamCalculationPeriodDateType Field
    /// </summary>/
    public sealed class StreamCalculationPeriodDateType : IntField
    {
        public const int TAG = 41243;

        public StreamCalculationPeriodDateType()
            : base(Tags.StreamCalculationPeriodDateType) { }
        public StreamCalculationPeriodDateType(int val)
            : base(Tags.StreamCalculationPeriodDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// StreamCalculationPeriodDatesXID Field
    /// </summary>/
    public sealed class StreamCalculationPeriodDatesXID : StringField
    {
        public const int TAG = 41244;

        public StreamCalculationPeriodDatesXID()
            : base(Tags.StreamCalculationPeriodDatesXID) { }
        public StreamCalculationPeriodDatesXID(string val)
            : base(Tags.StreamCalculationPeriodDatesXID, val) { }

    }


    /// <summary>
    /// StreamCalculationPeriodDatesXIDRef Field
    /// </summary>/
    public sealed class StreamCalculationPeriodDatesXIDRef : StringField
    {
        public const int TAG = 41245;

        public StreamCalculationPeriodDatesXIDRef()
            : base(Tags.StreamCalculationPeriodDatesXIDRef) { }
        public StreamCalculationPeriodDatesXIDRef(string val)
            : base(Tags.StreamCalculationPeriodDatesXIDRef, val) { }

    }


    /// <summary>
    /// StreamCalculationBalanceOfFirstPeriod Field
    /// </summary>/
    public sealed class StreamCalculationBalanceOfFirstPeriod : BooleanField
    {
        public const int TAG = 41246;

        public StreamCalculationBalanceOfFirstPeriod()
            : base(Tags.StreamCalculationBalanceOfFirstPeriod) { }
        public StreamCalculationBalanceOfFirstPeriod(Boolean val)
            : base(Tags.StreamCalculationBalanceOfFirstPeriod, val) { }

    }


    /// <summary>
    /// StreamCalculationCorrectionPeriod Field
    /// </summary>/
    public sealed class StreamCalculationCorrectionPeriod : IntField
    {
        public const int TAG = 41247;

        public StreamCalculationCorrectionPeriod()
            : base(Tags.StreamCalculationCorrectionPeriod) { }
        public StreamCalculationCorrectionPeriod(int val)
            : base(Tags.StreamCalculationCorrectionPeriod, val) { }

    }


    /// <summary>
    /// StreamCalculationCorrectionUnit Field
    /// </summary>/
    public sealed class StreamCalculationCorrectionUnit : StringField
    {
        public const int TAG = 41248;

        public StreamCalculationCorrectionUnit()
            : base(Tags.StreamCalculationCorrectionUnit) { }
        public StreamCalculationCorrectionUnit(string val)
            : base(Tags.StreamCalculationCorrectionUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// NoStreamCommoditySettlBusinessCenters Field
    /// </summary>/
    public sealed class NoStreamCommoditySettlBusinessCenters : IntField
    {
        public const int TAG = 41249;

        public NoStreamCommoditySettlBusinessCenters()
            : base(Tags.NoStreamCommoditySettlBusinessCenters) { }
        public NoStreamCommoditySettlBusinessCenters(int val)
            : base(Tags.NoStreamCommoditySettlBusinessCenters, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlBusinessCenter Field
    /// </summary>/
    public sealed class StreamCommoditySettlBusinessCenter : StringField
    {
        public const int TAG = 41250;

        public StreamCommoditySettlBusinessCenter()
            : base(Tags.StreamCommoditySettlBusinessCenter) { }
        public StreamCommoditySettlBusinessCenter(string val)
            : base(Tags.StreamCommoditySettlBusinessCenter, val) { }

    }


    /// <summary>
    /// StreamCommodityBase Field
    /// </summary>/
    public sealed class StreamCommodityBase : StringField
    {
        public const int TAG = 41251;

        public StreamCommodityBase()
            : base(Tags.StreamCommodityBase) { }
        public StreamCommodityBase(string val)
            : base(Tags.StreamCommodityBase, val) { }

    }


    /// <summary>
    /// StreamCommodityType Field
    /// </summary>/
    public sealed class StreamCommodityType : StringField
    {
        public const int TAG = 41252;

        public StreamCommodityType()
            : base(Tags.StreamCommodityType) { }
        public StreamCommodityType(string val)
            : base(Tags.StreamCommodityType, val) { }

    }


    /// <summary>
    /// StreamCommoditySecurityID Field
    /// </summary>/
    public sealed class StreamCommoditySecurityID : StringField
    {
        public const int TAG = 41253;

        public StreamCommoditySecurityID()
            : base(Tags.StreamCommoditySecurityID) { }
        public StreamCommoditySecurityID(string val)
            : base(Tags.StreamCommoditySecurityID, val) { }

    }


    /// <summary>
    /// StreamCommoditySecurityIDSource Field
    /// </summary>/
    public sealed class StreamCommoditySecurityIDSource : StringField
    {
        public const int TAG = 41254;

        public StreamCommoditySecurityIDSource()
            : base(Tags.StreamCommoditySecurityIDSource) { }
        public StreamCommoditySecurityIDSource(string val)
            : base(Tags.StreamCommoditySecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// StreamCommodityDesc Field
    /// </summary>/
    public sealed class StreamCommodityDesc : StringField
    {
        public const int TAG = 41255;

        public StreamCommodityDesc()
            : base(Tags.StreamCommodityDesc) { }
        public StreamCommodityDesc(string val)
            : base(Tags.StreamCommodityDesc, val) { }

    }


    /// <summary>
    /// EncodedStreamCommodityDescLen Field
    /// </summary>/
    public sealed class EncodedStreamCommodityDescLen : IntField
    {
        public const int TAG = 41256;

        public EncodedStreamCommodityDescLen()
            : base(Tags.EncodedStreamCommodityDescLen) { }
        public EncodedStreamCommodityDescLen(int val)
            : base(Tags.EncodedStreamCommodityDescLen, val) { }

    }


    /// <summary>
    /// EncodedStreamCommodityDesc Field
    /// </summary>/
    public sealed class EncodedStreamCommodityDesc : StringField
    {
        public const int TAG = 41257;

        public EncodedStreamCommodityDesc()
            : base(Tags.EncodedStreamCommodityDesc) { }
        public EncodedStreamCommodityDesc(string val)
            : base(Tags.EncodedStreamCommodityDesc, val) { }

    }


    /// <summary>
    /// StreamCommodityUnitOfMeasure Field
    /// </summary>/
    public sealed class StreamCommodityUnitOfMeasure : StringField
    {
        public const int TAG = 41258;

        public StreamCommodityUnitOfMeasure()
            : base(Tags.StreamCommodityUnitOfMeasure) { }
        public StreamCommodityUnitOfMeasure(string val)
            : base(Tags.StreamCommodityUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// StreamCommodityCurrency Field
    /// </summary>/
    public sealed class StreamCommodityCurrency : StringField
    {
        public const int TAG = 41259;

        public StreamCommodityCurrency()
            : base(Tags.StreamCommodityCurrency) { }
        public StreamCommodityCurrency(string val)
            : base(Tags.StreamCommodityCurrency, val) { }

    }


    /// <summary>
    /// StreamCommodityExchange Field
    /// </summary>/
    public sealed class StreamCommodityExchange : StringField
    {
        public const int TAG = 41260;

        public StreamCommodityExchange()
            : base(Tags.StreamCommodityExchange) { }
        public StreamCommodityExchange(string val)
            : base(Tags.StreamCommodityExchange, val) { }

    }


    /// <summary>
    /// StreamCommodityRateSource Field
    /// </summary>/
    public sealed class StreamCommodityRateSource : IntField
    {
        public const int TAG = 41261;

        public StreamCommodityRateSource()
            : base(Tags.StreamCommodityRateSource) { }
        public StreamCommodityRateSource(int val)
            : base(Tags.StreamCommodityRateSource, val) { }

    }


    /// <summary>
    /// StreamCommodityRateReferencePage Field
    /// </summary>/
    public sealed class StreamCommodityRateReferencePage : StringField
    {
        public const int TAG = 41262;

        public StreamCommodityRateReferencePage()
            : base(Tags.StreamCommodityRateReferencePage) { }
        public StreamCommodityRateReferencePage(string val)
            : base(Tags.StreamCommodityRateReferencePage, val) { }

    }


    /// <summary>
    /// StreamCommodityRateReferencePageHeading Field
    /// </summary>/
    public sealed class StreamCommodityRateReferencePageHeading : StringField
    {
        public const int TAG = 41263;

        public StreamCommodityRateReferencePageHeading()
            : base(Tags.StreamCommodityRateReferencePageHeading) { }
        public StreamCommodityRateReferencePageHeading(string val)
            : base(Tags.StreamCommodityRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// StreamDataProvider Field
    /// </summary>/
    public sealed class StreamDataProvider : StringField
    {
        public const int TAG = 41264;

        public StreamDataProvider()
            : base(Tags.StreamDataProvider) { }
        public StreamDataProvider(string val)
            : base(Tags.StreamDataProvider, val) { }

    }


    /// <summary>
    /// StreamCommodityPricingType Field
    /// </summary>/
    public sealed class StreamCommodityPricingType : StringField
    {
        public const int TAG = 41265;

        public StreamCommodityPricingType()
            : base(Tags.StreamCommodityPricingType) { }
        public StreamCommodityPricingType(string val)
            : base(Tags.StreamCommodityPricingType, val) { }

    }


    /// <summary>
    /// StreamCommodityNearbySettlDayPeriod Field
    /// </summary>/
    public sealed class StreamCommodityNearbySettlDayPeriod : IntField
    {
        public const int TAG = 41266;

        public StreamCommodityNearbySettlDayPeriod()
            : base(Tags.StreamCommodityNearbySettlDayPeriod) { }
        public StreamCommodityNearbySettlDayPeriod(int val)
            : base(Tags.StreamCommodityNearbySettlDayPeriod, val) { }

    }


    /// <summary>
    /// StreamCommodityNearbySettlDayUnit Field
    /// </summary>/
    public sealed class StreamCommodityNearbySettlDayUnit : StringField
    {
        public const int TAG = 41267;

        public StreamCommodityNearbySettlDayUnit()
            : base(Tags.StreamCommodityNearbySettlDayUnit) { }
        public StreamCommodityNearbySettlDayUnit(string val)
            : base(Tags.StreamCommodityNearbySettlDayUnit, val) { }


        // Field Enumerations
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
    }


    /// <summary>
    /// StreamCommoditySettlDateUnadjusted Field
    /// </summary>/
    public sealed class StreamCommoditySettlDateUnadjusted : StringField
    {
        public const int TAG = 41268;

        public StreamCommoditySettlDateUnadjusted()
            : base(Tags.StreamCommoditySettlDateUnadjusted) { }
        public StreamCommoditySettlDateUnadjusted(string val)
            : base(Tags.StreamCommoditySettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class StreamCommoditySettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 41269;

        public StreamCommoditySettlDateBusinessDayConvention()
            : base(Tags.StreamCommoditySettlDateBusinessDayConvention) { }
        public StreamCommoditySettlDateBusinessDayConvention(int val)
            : base(Tags.StreamCommoditySettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// StreamCommoditySettlDateAdjusted Field
    /// </summary>/
    public sealed class StreamCommoditySettlDateAdjusted : StringField
    {
        public const int TAG = 41270;

        public StreamCommoditySettlDateAdjusted()
            : base(Tags.StreamCommoditySettlDateAdjusted) { }
        public StreamCommoditySettlDateAdjusted(string val)
            : base(Tags.StreamCommoditySettlDateAdjusted, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlMonth Field
    /// </summary>/
    public sealed class StreamCommoditySettlMonth : IntField
    {
        public const int TAG = 41271;

        public StreamCommoditySettlMonth()
            : base(Tags.StreamCommoditySettlMonth) { }
        public StreamCommoditySettlMonth(int val)
            : base(Tags.StreamCommoditySettlMonth, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlDateRollPeriod Field
    /// </summary>/
    public sealed class StreamCommoditySettlDateRollPeriod : IntField
    {
        public const int TAG = 41272;

        public StreamCommoditySettlDateRollPeriod()
            : base(Tags.StreamCommoditySettlDateRollPeriod) { }
        public StreamCommoditySettlDateRollPeriod(int val)
            : base(Tags.StreamCommoditySettlDateRollPeriod, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlDateRollUnit Field
    /// </summary>/
    public sealed class StreamCommoditySettlDateRollUnit : StringField
    {
        public const int TAG = 41273;

        public StreamCommoditySettlDateRollUnit()
            : base(Tags.StreamCommoditySettlDateRollUnit) { }
        public StreamCommoditySettlDateRollUnit(string val)
            : base(Tags.StreamCommoditySettlDateRollUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
    }


    /// <summary>
    /// StreamCommoditySettlDayType Field
    /// </summary>/
    public sealed class StreamCommoditySettlDayType : IntField
    {
        public const int TAG = 41274;

        public StreamCommoditySettlDayType()
            : base(Tags.StreamCommoditySettlDayType) { }
        public StreamCommoditySettlDayType(int val)
            : base(Tags.StreamCommoditySettlDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// StreamCommodityXID Field
    /// </summary>/
    public sealed class StreamCommodityXID : StringField
    {
        public const int TAG = 41275;

        public StreamCommodityXID()
            : base(Tags.StreamCommodityXID) { }
        public StreamCommodityXID(string val)
            : base(Tags.StreamCommodityXID, val) { }

    }


    /// <summary>
    /// StreamCommodityXIDRef Field
    /// </summary>/
    public sealed class StreamCommodityXIDRef : StringField
    {
        public const int TAG = 41276;

        public StreamCommodityXIDRef()
            : base(Tags.StreamCommodityXIDRef) { }
        public StreamCommodityXIDRef(string val)
            : base(Tags.StreamCommodityXIDRef, val) { }

    }


    /// <summary>
    /// NoStreamCommodityAltIDs Field
    /// </summary>/
    public sealed class NoStreamCommodityAltIDs : IntField
    {
        public const int TAG = 41277;

        public NoStreamCommodityAltIDs()
            : base(Tags.NoStreamCommodityAltIDs) { }
        public NoStreamCommodityAltIDs(int val)
            : base(Tags.NoStreamCommodityAltIDs, val) { }

    }


    /// <summary>
    /// StreamCommodityAltID Field
    /// </summary>/
    public sealed class StreamCommodityAltID : StringField
    {
        public const int TAG = 41278;

        public StreamCommodityAltID()
            : base(Tags.StreamCommodityAltID) { }
        public StreamCommodityAltID(string val)
            : base(Tags.StreamCommodityAltID, val) { }

    }


    /// <summary>
    /// StreamCommodityAltIDSource Field
    /// </summary>/
    public sealed class StreamCommodityAltIDSource : StringField
    {
        public const int TAG = 41279;

        public StreamCommodityAltIDSource()
            : base(Tags.StreamCommodityAltIDSource) { }
        public StreamCommodityAltIDSource(string val)
            : base(Tags.StreamCommodityAltIDSource, val) { }

    }


    /// <summary>
    /// NoStreamCommodityDataSources Field
    /// </summary>/
    public sealed class NoStreamCommodityDataSources : IntField
    {
        public const int TAG = 41280;

        public NoStreamCommodityDataSources()
            : base(Tags.NoStreamCommodityDataSources) { }
        public NoStreamCommodityDataSources(int val)
            : base(Tags.NoStreamCommodityDataSources, val) { }

    }


    /// <summary>
    /// StreamCommodityDataSourceID Field
    /// </summary>/
    public sealed class StreamCommodityDataSourceID : StringField
    {
        public const int TAG = 41281;

        public StreamCommodityDataSourceID()
            : base(Tags.StreamCommodityDataSourceID) { }
        public StreamCommodityDataSourceID(string val)
            : base(Tags.StreamCommodityDataSourceID, val) { }

    }


    /// <summary>
    /// StreamCommodityDataSourceIDType Field
    /// </summary>/
    public sealed class StreamCommodityDataSourceIDType : IntField
    {
        public const int TAG = 41282;

        public StreamCommodityDataSourceIDType()
            : base(Tags.StreamCommodityDataSourceIDType) { }
        public StreamCommodityDataSourceIDType(int val)
            : base(Tags.StreamCommodityDataSourceIDType, val) { }


        // Field Enumerations
        public const int CITY = 0;
        public const int AIRPORT = 1;
        public const int WEATHER_STATION_WBAN = 2;
        public const int WEATHER_INDEX_WMO = 3;
    }


    /// <summary>
    /// NoStreamCommoditySettlDays Field
    /// </summary>/
    public sealed class NoStreamCommoditySettlDays : IntField
    {
        public const int TAG = 41283;

        public NoStreamCommoditySettlDays()
            : base(Tags.NoStreamCommoditySettlDays) { }
        public NoStreamCommoditySettlDays(int val)
            : base(Tags.NoStreamCommoditySettlDays, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlDay Field
    /// </summary>/
    public sealed class StreamCommoditySettlDay : IntField
    {
        public const int TAG = 41284;

        public StreamCommoditySettlDay()
            : base(Tags.StreamCommoditySettlDay) { }
        public StreamCommoditySettlDay(int val)
            : base(Tags.StreamCommoditySettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// StreamCommoditySettlTotalHours Field
    /// </summary>/
    public sealed class StreamCommoditySettlTotalHours : IntField
    {
        public const int TAG = 41285;

        public StreamCommoditySettlTotalHours()
            : base(Tags.StreamCommoditySettlTotalHours) { }
        public StreamCommoditySettlTotalHours(int val)
            : base(Tags.StreamCommoditySettlTotalHours, val) { }

    }


    /// <summary>
    /// NoStreamCommoditySettlTimes Field
    /// </summary>/
    public sealed class NoStreamCommoditySettlTimes : IntField
    {
        public const int TAG = 41286;

        public NoStreamCommoditySettlTimes()
            : base(Tags.NoStreamCommoditySettlTimes) { }
        public NoStreamCommoditySettlTimes(int val)
            : base(Tags.NoStreamCommoditySettlTimes, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlStart Field
    /// </summary>/
    public sealed class StreamCommoditySettlStart : StringField
    {
        public const int TAG = 41287;

        public StreamCommoditySettlStart()
            : base(Tags.StreamCommoditySettlStart) { }
        public StreamCommoditySettlStart(string val)
            : base(Tags.StreamCommoditySettlStart, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlEnd Field
    /// </summary>/
    public sealed class StreamCommoditySettlEnd : StringField
    {
        public const int TAG = 41288;

        public StreamCommoditySettlEnd()
            : base(Tags.StreamCommoditySettlEnd) { }
        public StreamCommoditySettlEnd(string val)
            : base(Tags.StreamCommoditySettlEnd, val) { }

    }


    /// <summary>
    /// NoStreamCommoditySettlPeriods Field
    /// </summary>/
    public sealed class NoStreamCommoditySettlPeriods : IntField
    {
        public const int TAG = 41289;

        public NoStreamCommoditySettlPeriods()
            : base(Tags.NoStreamCommoditySettlPeriods) { }
        public NoStreamCommoditySettlPeriods(int val)
            : base(Tags.NoStreamCommoditySettlPeriods, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlCountry Field
    /// </summary>/
    public sealed class StreamCommoditySettlCountry : StringField
    {
        public const int TAG = 41290;

        public StreamCommoditySettlCountry()
            : base(Tags.StreamCommoditySettlCountry) { }
        public StreamCommoditySettlCountry(string val)
            : base(Tags.StreamCommoditySettlCountry, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlTimeZone Field
    /// </summary>/
    public sealed class StreamCommoditySettlTimeZone : StringField
    {
        public const int TAG = 41291;

        public StreamCommoditySettlTimeZone()
            : base(Tags.StreamCommoditySettlTimeZone) { }
        public StreamCommoditySettlTimeZone(string val)
            : base(Tags.StreamCommoditySettlTimeZone, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlFlowType Field
    /// </summary>/
    public sealed class StreamCommoditySettlFlowType : IntField
    {
        public const int TAG = 41292;

        public StreamCommoditySettlFlowType()
            : base(Tags.StreamCommoditySettlFlowType) { }
        public StreamCommoditySettlFlowType(int val)
            : base(Tags.StreamCommoditySettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// StreamCommoditySettlPeriodNotional Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodNotional : DecimalField
    {
        public const int TAG = 41293;

        public StreamCommoditySettlPeriodNotional()
            : base(Tags.StreamCommoditySettlPeriodNotional) { }
        public StreamCommoditySettlPeriodNotional(Decimal val)
            : base(Tags.StreamCommoditySettlPeriodNotional, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlPeriodNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41294;

        public StreamCommoditySettlPeriodNotionalUnitOfMeasure()
            : base(Tags.StreamCommoditySettlPeriodNotionalUnitOfMeasure) { }
        public StreamCommoditySettlPeriodNotionalUnitOfMeasure(string val)
            : base(Tags.StreamCommoditySettlPeriodNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// StreamCommoditySettlPeriodFrequencyPeriod Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodFrequencyPeriod : IntField
    {
        public const int TAG = 41295;

        public StreamCommoditySettlPeriodFrequencyPeriod()
            : base(Tags.StreamCommoditySettlPeriodFrequencyPeriod) { }
        public StreamCommoditySettlPeriodFrequencyPeriod(int val)
            : base(Tags.StreamCommoditySettlPeriodFrequencyPeriod, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlPeriodFrequencyUnit Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodFrequencyUnit : StringField
    {
        public const int TAG = 41296;

        public StreamCommoditySettlPeriodFrequencyUnit()
            : base(Tags.StreamCommoditySettlPeriodFrequencyUnit) { }
        public StreamCommoditySettlPeriodFrequencyUnit(string val)
            : base(Tags.StreamCommoditySettlPeriodFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// StreamCommoditySettlPeriodPrice Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodPrice : DecimalField
    {
        public const int TAG = 41297;

        public StreamCommoditySettlPeriodPrice()
            : base(Tags.StreamCommoditySettlPeriodPrice) { }
        public StreamCommoditySettlPeriodPrice(Decimal val)
            : base(Tags.StreamCommoditySettlPeriodPrice, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 41298;

        public StreamCommoditySettlPeriodPriceUnitOfMeasure()
            : base(Tags.StreamCommoditySettlPeriodPriceUnitOfMeasure) { }
        public StreamCommoditySettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.StreamCommoditySettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// StreamCommoditySettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 41299;

        public StreamCommoditySettlPeriodPriceCurrency()
            : base(Tags.StreamCommoditySettlPeriodPriceCurrency) { }
        public StreamCommoditySettlPeriodPriceCurrency(string val)
            : base(Tags.StreamCommoditySettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class StreamCommoditySettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 41300;

        public StreamCommoditySettlHolidaysProcessingInstruction()
            : base(Tags.StreamCommoditySettlHolidaysProcessingInstruction) { }
        public StreamCommoditySettlHolidaysProcessingInstruction(int val)
            : base(Tags.StreamCommoditySettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// StreamCommoditySettlPeriodXID Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodXID : StringField
    {
        public const int TAG = 41301;

        public StreamCommoditySettlPeriodXID()
            : base(Tags.StreamCommoditySettlPeriodXID) { }
        public StreamCommoditySettlPeriodXID(string val)
            : base(Tags.StreamCommoditySettlPeriodXID, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlPeriodXIDRef Field
    /// </summary>/
    public sealed class StreamCommoditySettlPeriodXIDRef : StringField
    {
        public const int TAG = 41302;

        public StreamCommoditySettlPeriodXIDRef()
            : base(Tags.StreamCommoditySettlPeriodXIDRef) { }
        public StreamCommoditySettlPeriodXIDRef(string val)
            : base(Tags.StreamCommoditySettlPeriodXIDRef, val) { }

    }


    /// <summary>
    /// StreamXID Field
    /// </summary>/
    public sealed class StreamXID : StringField
    {
        public const int TAG = 41303;

        public StreamXID()
            : base(Tags.StreamXID) { }
        public StreamXID(string val)
            : base(Tags.StreamXID, val) { }

    }


    /// <summary>
    /// PaymentLegRefID Field
    /// </summary>/
    public sealed class PaymentLegRefID : StringField
    {
        public const int TAG = 41304;

        public PaymentLegRefID()
            : base(Tags.PaymentLegRefID) { }
        public PaymentLegRefID(string val)
            : base(Tags.PaymentLegRefID, val) { }

    }


    /// <summary>
    /// StreamNotionalXIDRef Field
    /// </summary>/
    public sealed class StreamNotionalXIDRef : StringField
    {
        public const int TAG = 41305;

        public StreamNotionalXIDRef()
            : base(Tags.StreamNotionalXIDRef) { }
        public StreamNotionalXIDRef(string val)
            : base(Tags.StreamNotionalXIDRef, val) { }

    }


    /// <summary>
    /// StreamNotionalFrequencyPeriod Field
    /// </summary>/
    public sealed class StreamNotionalFrequencyPeriod : IntField
    {
        public const int TAG = 41306;

        public StreamNotionalFrequencyPeriod()
            : base(Tags.StreamNotionalFrequencyPeriod) { }
        public StreamNotionalFrequencyPeriod(int val)
            : base(Tags.StreamNotionalFrequencyPeriod, val) { }

    }


    /// <summary>
    /// StreamNotionalFrequencyUnit Field
    /// </summary>/
    public sealed class StreamNotionalFrequencyUnit : StringField
    {
        public const int TAG = 41307;

        public StreamNotionalFrequencyUnit()
            : base(Tags.StreamNotionalFrequencyUnit) { }
        public StreamNotionalFrequencyUnit(string val)
            : base(Tags.StreamNotionalFrequencyUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// StreamNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class StreamNotionalCommodityFrequency : IntField
    {
        public const int TAG = 41308;

        public StreamNotionalCommodityFrequency()
            : base(Tags.StreamNotionalCommodityFrequency) { }
        public StreamNotionalCommodityFrequency(int val)
            : base(Tags.StreamNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// StreamNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class StreamNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41309;

        public StreamNotionalUnitOfMeasure()
            : base(Tags.StreamNotionalUnitOfMeasure) { }
        public StreamNotionalUnitOfMeasure(string val)
            : base(Tags.StreamNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// StreamTotalNotional Field
    /// </summary>/
    public sealed class StreamTotalNotional : DecimalField
    {
        public const int TAG = 41310;

        public StreamTotalNotional()
            : base(Tags.StreamTotalNotional) { }
        public StreamTotalNotional(Decimal val)
            : base(Tags.StreamTotalNotional, val) { }

    }


    /// <summary>
    /// StreamTotalNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class StreamTotalNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41311;

        public StreamTotalNotionalUnitOfMeasure()
            : base(Tags.StreamTotalNotionalUnitOfMeasure) { }
        public StreamTotalNotionalUnitOfMeasure(string val)
            : base(Tags.StreamTotalNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// NoMandatoryClearingJurisdictions Field
    /// </summary>/
    public sealed class NoMandatoryClearingJurisdictions : IntField
    {
        public const int TAG = 41312;

        public NoMandatoryClearingJurisdictions()
            : base(Tags.NoMandatoryClearingJurisdictions) { }
        public NoMandatoryClearingJurisdictions(int val)
            : base(Tags.NoMandatoryClearingJurisdictions, val) { }

    }


    /// <summary>
    /// MandatoryClearingJurisdiction Field
    /// </summary>/
    public sealed class MandatoryClearingJurisdiction : StringField
    {
        public const int TAG = 41313;

        public MandatoryClearingJurisdiction()
            : base(Tags.MandatoryClearingJurisdiction) { }
        public MandatoryClearingJurisdiction(string val)
            : base(Tags.MandatoryClearingJurisdiction, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermXIDRef Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermXIDRef : StringField
    {
        public const int TAG = 41314;

        public UnderlyingProtectionTermXIDRef()
            : base(Tags.UnderlyingProtectionTermXIDRef) { }
        public UnderlyingProtectionTermXIDRef(string val)
            : base(Tags.UnderlyingProtectionTermXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingSettlTermXIDRef Field
    /// </summary>/
    public sealed class UnderlyingSettlTermXIDRef : StringField
    {
        public const int TAG = 41315;

        public UnderlyingSettlTermXIDRef()
            : base(Tags.UnderlyingSettlTermXIDRef) { }
        public UnderlyingSettlTermXIDRef(string val)
            : base(Tags.UnderlyingSettlTermXIDRef, val) { }

    }


    /// <summary>
    /// NoLegAdditionalTermBondRefs Field
    /// </summary>/
    public sealed class NoLegAdditionalTermBondRefs : IntField
    {
        public const int TAG = 41316;

        public NoLegAdditionalTermBondRefs()
            : base(Tags.NoLegAdditionalTermBondRefs) { }
        public NoLegAdditionalTermBondRefs(int val)
            : base(Tags.NoLegAdditionalTermBondRefs, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondSecurityID Field
    /// </summary>/
    public sealed class LegAdditionalTermBondSecurityID : StringField
    {
        public const int TAG = 41317;

        public LegAdditionalTermBondSecurityID()
            : base(Tags.LegAdditionalTermBondSecurityID) { }
        public LegAdditionalTermBondSecurityID(string val)
            : base(Tags.LegAdditionalTermBondSecurityID, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondSecurityIDSource Field
    /// </summary>/
    public sealed class LegAdditionalTermBondSecurityIDSource : StringField
    {
        public const int TAG = 41318;

        public LegAdditionalTermBondSecurityIDSource()
            : base(Tags.LegAdditionalTermBondSecurityIDSource) { }
        public LegAdditionalTermBondSecurityIDSource(string val)
            : base(Tags.LegAdditionalTermBondSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegAdditionalTermBondDesc Field
    /// </summary>/
    public sealed class LegAdditionalTermBondDesc : StringField
    {
        public const int TAG = 41319;

        public LegAdditionalTermBondDesc()
            : base(Tags.LegAdditionalTermBondDesc) { }
        public LegAdditionalTermBondDesc(string val)
            : base(Tags.LegAdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// EncodedLegAdditionalTermBondDescLen Field
    /// </summary>/
    public sealed class EncodedLegAdditionalTermBondDescLen : IntField
    {
        public const int TAG = 41320;

        public EncodedLegAdditionalTermBondDescLen()
            : base(Tags.EncodedLegAdditionalTermBondDescLen) { }
        public EncodedLegAdditionalTermBondDescLen(int val)
            : base(Tags.EncodedLegAdditionalTermBondDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegAdditionalTermBondDesc Field
    /// </summary>/
    public sealed class EncodedLegAdditionalTermBondDesc : StringField
    {
        public const int TAG = 41321;

        public EncodedLegAdditionalTermBondDesc()
            : base(Tags.EncodedLegAdditionalTermBondDesc) { }
        public EncodedLegAdditionalTermBondDesc(string val)
            : base(Tags.EncodedLegAdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondCurrency Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCurrency : StringField
    {
        public const int TAG = 41322;

        public LegAdditionalTermBondCurrency()
            : base(Tags.LegAdditionalTermBondCurrency) { }
        public LegAdditionalTermBondCurrency(string val)
            : base(Tags.LegAdditionalTermBondCurrency, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class LegAdditionalTermBondIssuer : StringField
    {
        public const int TAG = 41323;

        public LegAdditionalTermBondIssuer()
            : base(Tags.LegAdditionalTermBondIssuer) { }
        public LegAdditionalTermBondIssuer(string val)
            : base(Tags.LegAdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// EncodedLegAdditionalTermBondIssuerLen Field
    /// </summary>/
    public sealed class EncodedLegAdditionalTermBondIssuerLen : IntField
    {
        public const int TAG = 41324;

        public EncodedLegAdditionalTermBondIssuerLen()
            : base(Tags.EncodedLegAdditionalTermBondIssuerLen) { }
        public EncodedLegAdditionalTermBondIssuerLen(int val)
            : base(Tags.EncodedLegAdditionalTermBondIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedLegAdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class EncodedLegAdditionalTermBondIssuer : StringField
    {
        public const int TAG = 41325;

        public EncodedLegAdditionalTermBondIssuer()
            : base(Tags.EncodedLegAdditionalTermBondIssuer) { }
        public EncodedLegAdditionalTermBondIssuer(string val)
            : base(Tags.EncodedLegAdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondSeniority Field
    /// </summary>/
    public sealed class LegAdditionalTermBondSeniority : StringField
    {
        public const int TAG = 41326;

        public LegAdditionalTermBondSeniority()
            : base(Tags.LegAdditionalTermBondSeniority) { }
        public LegAdditionalTermBondSeniority(string val)
            : base(Tags.LegAdditionalTermBondSeniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// LegAdditionalTermBondCouponType Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCouponType : IntField
    {
        public const int TAG = 41327;

        public LegAdditionalTermBondCouponType()
            : base(Tags.LegAdditionalTermBondCouponType) { }
        public LegAdditionalTermBondCouponType(int val)
            : base(Tags.LegAdditionalTermBondCouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// LegAdditionalTermBondCouponRate Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCouponRate : DecimalField
    {
        public const int TAG = 41328;

        public LegAdditionalTermBondCouponRate()
            : base(Tags.LegAdditionalTermBondCouponRate) { }
        public LegAdditionalTermBondCouponRate(Decimal val)
            : base(Tags.LegAdditionalTermBondCouponRate, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondMaturityDate Field
    /// </summary>/
    public sealed class LegAdditionalTermBondMaturityDate : StringField
    {
        public const int TAG = 41329;

        public LegAdditionalTermBondMaturityDate()
            : base(Tags.LegAdditionalTermBondMaturityDate) { }
        public LegAdditionalTermBondMaturityDate(string val)
            : base(Tags.LegAdditionalTermBondMaturityDate, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondParValue Field
    /// </summary>/
    public sealed class LegAdditionalTermBondParValue : DecimalField
    {
        public const int TAG = 41330;

        public LegAdditionalTermBondParValue()
            : base(Tags.LegAdditionalTermBondParValue) { }
        public LegAdditionalTermBondParValue(Decimal val)
            : base(Tags.LegAdditionalTermBondParValue, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondCurrentTotalIssuedAmount Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCurrentTotalIssuedAmount : DecimalField
    {
        public const int TAG = 41331;

        public LegAdditionalTermBondCurrentTotalIssuedAmount()
            : base(Tags.LegAdditionalTermBondCurrentTotalIssuedAmount) { }
        public LegAdditionalTermBondCurrentTotalIssuedAmount(Decimal val)
            : base(Tags.LegAdditionalTermBondCurrentTotalIssuedAmount, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondCouponFrequencyPeriod Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCouponFrequencyPeriod : IntField
    {
        public const int TAG = 41332;

        public LegAdditionalTermBondCouponFrequencyPeriod()
            : base(Tags.LegAdditionalTermBondCouponFrequencyPeriod) { }
        public LegAdditionalTermBondCouponFrequencyPeriod(int val)
            : base(Tags.LegAdditionalTermBondCouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegAdditionalTermBondCouponFrequencyUnit Field
    /// </summary>/
    public sealed class LegAdditionalTermBondCouponFrequencyUnit : StringField
    {
        public const int TAG = 41333;

        public LegAdditionalTermBondCouponFrequencyUnit()
            : base(Tags.LegAdditionalTermBondCouponFrequencyUnit) { }
        public LegAdditionalTermBondCouponFrequencyUnit(string val)
            : base(Tags.LegAdditionalTermBondCouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegAdditionalTermBondDayCount Field
    /// </summary>/
    public sealed class LegAdditionalTermBondDayCount : IntField
    {
        public const int TAG = 41334;

        public LegAdditionalTermBondDayCount()
            : base(Tags.LegAdditionalTermBondDayCount) { }
        public LegAdditionalTermBondDayCount(int val)
            : base(Tags.LegAdditionalTermBondDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoLegAdditionalTerms Field
    /// </summary>/
    public sealed class NoLegAdditionalTerms : IntField
    {
        public const int TAG = 41335;

        public NoLegAdditionalTerms()
            : base(Tags.NoLegAdditionalTerms) { }
        public NoLegAdditionalTerms(int val)
            : base(Tags.NoLegAdditionalTerms, val) { }

    }


    /// <summary>
    /// LegAdditionalTermConditionPrecedentBondIndicator Field
    /// </summary>/
    public sealed class LegAdditionalTermConditionPrecedentBondIndicator : BooleanField
    {
        public const int TAG = 41336;

        public LegAdditionalTermConditionPrecedentBondIndicator()
            : base(Tags.LegAdditionalTermConditionPrecedentBondIndicator) { }
        public LegAdditionalTermConditionPrecedentBondIndicator(Boolean val)
            : base(Tags.LegAdditionalTermConditionPrecedentBondIndicator, val) { }

    }


    /// <summary>
    /// LegAdditionalTermDiscrepancyClauseIndicator Field
    /// </summary>/
    public sealed class LegAdditionalTermDiscrepancyClauseIndicator : BooleanField
    {
        public const int TAG = 41337;

        public LegAdditionalTermDiscrepancyClauseIndicator()
            : base(Tags.LegAdditionalTermDiscrepancyClauseIndicator) { }
        public LegAdditionalTermDiscrepancyClauseIndicator(Boolean val)
            : base(Tags.LegAdditionalTermDiscrepancyClauseIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionValue Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionValue : StringField
    {
        public const int TAG = 41338;

        public UnderlyingMarketDisruptionValue()
            : base(Tags.UnderlyingMarketDisruptionValue) { }
        public UnderlyingMarketDisruptionValue(string val)
            : base(Tags.UnderlyingMarketDisruptionValue, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackValue Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackValue : StringField
    {
        public const int TAG = 41339;

        public UnderlyingMarketDisruptionFallbackValue()
            : base(Tags.UnderlyingMarketDisruptionFallbackValue) { }
        public UnderlyingMarketDisruptionFallbackValue(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingAdditionalTermBondRefs Field
    /// </summary>/
    public sealed class NoUnderlyingAdditionalTermBondRefs : IntField
    {
        public const int TAG = 41340;

        public NoUnderlyingAdditionalTermBondRefs()
            : base(Tags.NoUnderlyingAdditionalTermBondRefs) { }
        public NoUnderlyingAdditionalTermBondRefs(int val)
            : base(Tags.NoUnderlyingAdditionalTermBondRefs, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondSecurityID Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondSecurityID : StringField
    {
        public const int TAG = 41341;

        public UnderlyingAdditionalTermBondSecurityID()
            : base(Tags.UnderlyingAdditionalTermBondSecurityID) { }
        public UnderlyingAdditionalTermBondSecurityID(string val)
            : base(Tags.UnderlyingAdditionalTermBondSecurityID, val) { }

    }


    /// <summary>
    /// NoLegCashSettlDealers Field
    /// </summary>/
    public sealed class NoLegCashSettlDealers : IntField
    {
        public const int TAG = 41342;

        public NoLegCashSettlDealers()
            : base(Tags.NoLegCashSettlDealers) { }
        public NoLegCashSettlDealers(int val)
            : base(Tags.NoLegCashSettlDealers, val) { }

    }


    /// <summary>
    /// LegCashSettlDealer Field
    /// </summary>/
    public sealed class LegCashSettlDealer : StringField
    {
        public const int TAG = 41343;

        public LegCashSettlDealer()
            : base(Tags.LegCashSettlDealer) { }
        public LegCashSettlDealer(string val)
            : base(Tags.LegCashSettlDealer, val) { }

    }


    /// <summary>
    /// NoLegCashSettlTerms Field
    /// </summary>/
    public sealed class NoLegCashSettlTerms : IntField
    {
        public const int TAG = 41344;

        public NoLegCashSettlTerms()
            : base(Tags.NoLegCashSettlTerms) { }
        public NoLegCashSettlTerms(int val)
            : base(Tags.NoLegCashSettlTerms, val) { }

    }


    /// <summary>
    /// LegCashSettlCurrency Field
    /// </summary>/
    public sealed class LegCashSettlCurrency : StringField
    {
        public const int TAG = 41345;

        public LegCashSettlCurrency()
            : base(Tags.LegCashSettlCurrency) { }
        public LegCashSettlCurrency(string val)
            : base(Tags.LegCashSettlCurrency, val) { }

    }


    /// <summary>
    /// LegCasSettlValuationFirstBusinessDayOffset Field
    /// </summary>/
    public sealed class LegCasSettlValuationFirstBusinessDayOffset : IntField
    {
        public const int TAG = 41346;

        public LegCasSettlValuationFirstBusinessDayOffset()
            : base(Tags.LegCasSettlValuationFirstBusinessDayOffset) { }
        public LegCasSettlValuationFirstBusinessDayOffset(int val)
            : base(Tags.LegCasSettlValuationFirstBusinessDayOffset, val) { }

    }


    /// <summary>
    /// LegCashSettlValuationSubsequentBusinessDaysOffset Field
    /// </summary>/
    public sealed class LegCashSettlValuationSubsequentBusinessDaysOffset : IntField
    {
        public const int TAG = 41347;

        public LegCashSettlValuationSubsequentBusinessDaysOffset()
            : base(Tags.LegCashSettlValuationSubsequentBusinessDaysOffset) { }
        public LegCashSettlValuationSubsequentBusinessDaysOffset(int val)
            : base(Tags.LegCashSettlValuationSubsequentBusinessDaysOffset, val) { }

    }


    /// <summary>
    /// LegCashSettlNumOfValuationDates Field
    /// </summary>/
    public sealed class LegCashSettlNumOfValuationDates : IntField
    {
        public const int TAG = 41348;

        public LegCashSettlNumOfValuationDates()
            : base(Tags.LegCashSettlNumOfValuationDates) { }
        public LegCashSettlNumOfValuationDates(int val)
            : base(Tags.LegCashSettlNumOfValuationDates, val) { }

    }


    /// <summary>
    /// LegCashSettlValuationTime Field
    /// </summary>/
    public sealed class LegCashSettlValuationTime : StringField
    {
        public const int TAG = 41349;

        public LegCashSettlValuationTime()
            : base(Tags.LegCashSettlValuationTime) { }
        public LegCashSettlValuationTime(string val)
            : base(Tags.LegCashSettlValuationTime, val) { }

    }


    /// <summary>
    /// LegCashSettlBusinessCenter Field
    /// </summary>/
    public sealed class LegCashSettlBusinessCenter : StringField
    {
        public const int TAG = 41350;

        public LegCashSettlBusinessCenter()
            : base(Tags.LegCashSettlBusinessCenter) { }
        public LegCashSettlBusinessCenter(string val)
            : base(Tags.LegCashSettlBusinessCenter, val) { }

    }


    /// <summary>
    /// LegCashSettlQuoteMethod Field
    /// </summary>/
    public sealed class LegCashSettlQuoteMethod : IntField
    {
        public const int TAG = 41351;

        public LegCashSettlQuoteMethod()
            : base(Tags.LegCashSettlQuoteMethod) { }
        public LegCashSettlQuoteMethod(int val)
            : base(Tags.LegCashSettlQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// LegCashSettlQuoteAmount Field
    /// </summary>/
    public sealed class LegCashSettlQuoteAmount : DecimalField
    {
        public const int TAG = 41352;

        public LegCashSettlQuoteAmount()
            : base(Tags.LegCashSettlQuoteAmount) { }
        public LegCashSettlQuoteAmount(Decimal val)
            : base(Tags.LegCashSettlQuoteAmount, val) { }

    }


    /// <summary>
    /// LegCashSettlQuoteCurrency Field
    /// </summary>/
    public sealed class LegCashSettlQuoteCurrency : StringField
    {
        public const int TAG = 41353;

        public LegCashSettlQuoteCurrency()
            : base(Tags.LegCashSettlQuoteCurrency) { }
        public LegCashSettlQuoteCurrency(string val)
            : base(Tags.LegCashSettlQuoteCurrency, val) { }

    }


    /// <summary>
    /// LegCashSettlMinimumQuoteAmount Field
    /// </summary>/
    public sealed class LegCashSettlMinimumQuoteAmount : DecimalField
    {
        public const int TAG = 41354;

        public LegCashSettlMinimumQuoteAmount()
            : base(Tags.LegCashSettlMinimumQuoteAmount) { }
        public LegCashSettlMinimumQuoteAmount(Decimal val)
            : base(Tags.LegCashSettlMinimumQuoteAmount, val) { }

    }


    /// <summary>
    /// LegCashSettlMinimumQuoteCurrency Field
    /// </summary>/
    public sealed class LegCashSettlMinimumQuoteCurrency : StringField
    {
        public const int TAG = 41355;

        public LegCashSettlMinimumQuoteCurrency()
            : base(Tags.LegCashSettlMinimumQuoteCurrency) { }
        public LegCashSettlMinimumQuoteCurrency(string val)
            : base(Tags.LegCashSettlMinimumQuoteCurrency, val) { }

    }


    /// <summary>
    /// LegCashSettlBusinessDays Field
    /// </summary>/
    public sealed class LegCashSettlBusinessDays : IntField
    {
        public const int TAG = 41356;

        public LegCashSettlBusinessDays()
            : base(Tags.LegCashSettlBusinessDays) { }
        public LegCashSettlBusinessDays(int val)
            : base(Tags.LegCashSettlBusinessDays, val) { }

    }


    /// <summary>
    /// LegCashSettlAmount Field
    /// </summary>/
    public sealed class LegCashSettlAmount : DecimalField
    {
        public const int TAG = 41357;

        public LegCashSettlAmount()
            : base(Tags.LegCashSettlAmount) { }
        public LegCashSettlAmount(Decimal val)
            : base(Tags.LegCashSettlAmount, val) { }

    }


    /// <summary>
    /// LegCashSettlRecoveryFactor Field
    /// </summary>/
    public sealed class LegCashSettlRecoveryFactor : DecimalField
    {
        public const int TAG = 41358;

        public LegCashSettlRecoveryFactor()
            : base(Tags.LegCashSettlRecoveryFactor) { }
        public LegCashSettlRecoveryFactor(Decimal val)
            : base(Tags.LegCashSettlRecoveryFactor, val) { }

    }


    /// <summary>
    /// LegCashSettlFixedTermIndicator Field
    /// </summary>/
    public sealed class LegCashSettlFixedTermIndicator : BooleanField
    {
        public const int TAG = 41359;

        public LegCashSettlFixedTermIndicator()
            : base(Tags.LegCashSettlFixedTermIndicator) { }
        public LegCashSettlFixedTermIndicator(Boolean val)
            : base(Tags.LegCashSettlFixedTermIndicator, val) { }

    }


    /// <summary>
    /// LegCashSettlAccruedInterestIndicator Field
    /// </summary>/
    public sealed class LegCashSettlAccruedInterestIndicator : BooleanField
    {
        public const int TAG = 41360;

        public LegCashSettlAccruedInterestIndicator()
            : base(Tags.LegCashSettlAccruedInterestIndicator) { }
        public LegCashSettlAccruedInterestIndicator(Boolean val)
            : base(Tags.LegCashSettlAccruedInterestIndicator, val) { }

    }


    /// <summary>
    /// LegCashSettlValuationMethod Field
    /// </summary>/
    public sealed class LegCashSettlValuationMethod : IntField
    {
        public const int TAG = 41361;

        public LegCashSettlValuationMethod()
            : base(Tags.LegCashSettlValuationMethod) { }
        public LegCashSettlValuationMethod(int val)
            : base(Tags.LegCashSettlValuationMethod, val) { }


        // Field Enumerations
        public const int MARKET = 0;
        public const int HIGHEST = 1;
        public const int AVERAGE_MARKET = 2;
        public const int AVERAGE_HIGHEST = 3;
        public const int BLENDED_MARKET = 4;
        public const int BLENDED_HIGHEST = 5;
        public const int AVERAGE_BLENDED_MARKET = 6;
        public const int AVERAGE_BLENDED_HIGHEST = 7;
    }


    /// <summary>
    /// LegCashSettlTermXID Field
    /// </summary>/
    public sealed class LegCashSettlTermXID : StringField
    {
        public const int TAG = 41362;

        public LegCashSettlTermXID()
            : base(Tags.LegCashSettlTermXID) { }
        public LegCashSettlTermXID(string val)
            : base(Tags.LegCashSettlTermXID, val) { }

    }


    /// <summary>
    /// NoLegComplexEventAveragingObservations Field
    /// </summary>/
    public sealed class NoLegComplexEventAveragingObservations : IntField
    {
        public const int TAG = 41363;

        public NoLegComplexEventAveragingObservations()
            : base(Tags.NoLegComplexEventAveragingObservations) { }
        public NoLegComplexEventAveragingObservations(int val)
            : base(Tags.NoLegComplexEventAveragingObservations, val) { }

    }


    /// <summary>
    /// LegComplexEventAveragingObservationNumber Field
    /// </summary>/
    public sealed class LegComplexEventAveragingObservationNumber : IntField
    {
        public const int TAG = 41364;

        public LegComplexEventAveragingObservationNumber()
            : base(Tags.LegComplexEventAveragingObservationNumber) { }
        public LegComplexEventAveragingObservationNumber(int val)
            : base(Tags.LegComplexEventAveragingObservationNumber, val) { }

    }


    /// <summary>
    /// LegComplexEventAveragingWeight Field
    /// </summary>/
    public sealed class LegComplexEventAveragingWeight : DecimalField
    {
        public const int TAG = 41365;

        public LegComplexEventAveragingWeight()
            : base(Tags.LegComplexEventAveragingWeight) { }
        public LegComplexEventAveragingWeight(Decimal val)
            : base(Tags.LegComplexEventAveragingWeight, val) { }

    }


    /// <summary>
    /// NoLegComplexEventCreditEvents Field
    /// </summary>/
    public sealed class NoLegComplexEventCreditEvents : IntField
    {
        public const int TAG = 41366;

        public NoLegComplexEventCreditEvents()
            : base(Tags.NoLegComplexEventCreditEvents) { }
        public NoLegComplexEventCreditEvents(int val)
            : base(Tags.NoLegComplexEventCreditEvents, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventType Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventType : StringField
    {
        public const int TAG = 41367;

        public LegComplexEventCreditEventType()
            : base(Tags.LegComplexEventCreditEventType) { }
        public LegComplexEventCreditEventType(string val)
            : base(Tags.LegComplexEventCreditEventType, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventValue Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventValue : StringField
    {
        public const int TAG = 41368;

        public LegComplexEventCreditEventValue()
            : base(Tags.LegComplexEventCreditEventValue) { }
        public LegComplexEventCreditEventValue(string val)
            : base(Tags.LegComplexEventCreditEventValue, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventCurrency Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventCurrency : StringField
    {
        public const int TAG = 41369;

        public LegComplexEventCreditEventCurrency()
            : base(Tags.LegComplexEventCreditEventCurrency) { }
        public LegComplexEventCreditEventCurrency(string val)
            : base(Tags.LegComplexEventCreditEventCurrency, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventPeriod Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventPeriod : IntField
    {
        public const int TAG = 41370;

        public LegComplexEventCreditEventPeriod()
            : base(Tags.LegComplexEventCreditEventPeriod) { }
        public LegComplexEventCreditEventPeriod(int val)
            : base(Tags.LegComplexEventCreditEventPeriod, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventUnit Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventUnit : StringField
    {
        public const int TAG = 41371;

        public LegComplexEventCreditEventUnit()
            : base(Tags.LegComplexEventCreditEventUnit) { }
        public LegComplexEventCreditEventUnit(string val)
            : base(Tags.LegComplexEventCreditEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegComplexEventCreditEventDayType Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventDayType : IntField
    {
        public const int TAG = 41372;

        public LegComplexEventCreditEventDayType()
            : base(Tags.LegComplexEventCreditEventDayType) { }
        public LegComplexEventCreditEventDayType(int val)
            : base(Tags.LegComplexEventCreditEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegComplexEventCreditEventRateSource Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventRateSource : IntField
    {
        public const int TAG = 41373;

        public LegComplexEventCreditEventRateSource()
            : base(Tags.LegComplexEventCreditEventRateSource) { }
        public LegComplexEventCreditEventRateSource(int val)
            : base(Tags.LegComplexEventCreditEventRateSource, val) { }

    }


    /// <summary>
    /// NoLegComplexEventCreditEventQualifiers Field
    /// </summary>/
    public sealed class NoLegComplexEventCreditEventQualifiers : IntField
    {
        public const int TAG = 41374;

        public NoLegComplexEventCreditEventQualifiers()
            : base(Tags.NoLegComplexEventCreditEventQualifiers) { }
        public NoLegComplexEventCreditEventQualifiers(int val)
            : base(Tags.NoLegComplexEventCreditEventQualifiers, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventQualifier Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventQualifier : CharField
    {
        public const int TAG = 41375;

        public LegComplexEventCreditEventQualifier()
            : base(Tags.LegComplexEventCreditEventQualifier) { }
        public LegComplexEventCreditEventQualifier(char val)
            : base(Tags.LegComplexEventCreditEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoLegComplexEventPeriodDateTimes Field
    /// </summary>/
    public sealed class NoLegComplexEventPeriodDateTimes : IntField
    {
        public const int TAG = 41376;

        public NoLegComplexEventPeriodDateTimes()
            : base(Tags.NoLegComplexEventPeriodDateTimes) { }
        public NoLegComplexEventPeriodDateTimes(int val)
            : base(Tags.NoLegComplexEventPeriodDateTimes, val) { }

    }


    /// <summary>
    /// LegComplexEventPeriodDate Field
    /// </summary>/
    public sealed class LegComplexEventPeriodDate : StringField
    {
        public const int TAG = 41377;

        public LegComplexEventPeriodDate()
            : base(Tags.LegComplexEventPeriodDate) { }
        public LegComplexEventPeriodDate(string val)
            : base(Tags.LegComplexEventPeriodDate, val) { }

    }


    /// <summary>
    /// LegComplexEventPeriodTime Field
    /// </summary>/
    public sealed class LegComplexEventPeriodTime : StringField
    {
        public const int TAG = 41378;

        public LegComplexEventPeriodTime()
            : base(Tags.LegComplexEventPeriodTime) { }
        public LegComplexEventPeriodTime(string val)
            : base(Tags.LegComplexEventPeriodTime, val) { }

    }


    /// <summary>
    /// NoLegComplexEventPeriods Field
    /// </summary>/
    public sealed class NoLegComplexEventPeriods : IntField
    {
        public const int TAG = 41379;

        public NoLegComplexEventPeriods()
            : base(Tags.NoLegComplexEventPeriods) { }
        public NoLegComplexEventPeriods(int val)
            : base(Tags.NoLegComplexEventPeriods, val) { }

    }


    /// <summary>
    /// LegComplexEventPeriodType Field
    /// </summary>/
    public sealed class LegComplexEventPeriodType : IntField
    {
        public const int TAG = 41380;

        public LegComplexEventPeriodType()
            : base(Tags.LegComplexEventPeriodType) { }
        public LegComplexEventPeriodType(int val)
            : base(Tags.LegComplexEventPeriodType, val) { }


        // Field Enumerations
        public const int ASIAN_OUT = 0;
        public const int ASIAN_IN = 1;
        public const int BARRIER_CAP = 2;
        public const int BARRIER_FLOOR = 3;
        public const int KNOCK_OUT = 4;
        public const int KNOCK_IN = 5;
    }


    /// <summary>
    /// LegComplexEventBusinessCenter Field
    /// </summary>/
    public sealed class LegComplexEventBusinessCenter : StringField
    {
        public const int TAG = 41381;

        public LegComplexEventBusinessCenter()
            : base(Tags.LegComplexEventBusinessCenter) { }
        public LegComplexEventBusinessCenter(string val)
            : base(Tags.LegComplexEventBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegComplexEventRateSources Field
    /// </summary>/
    public sealed class NoLegComplexEventRateSources : IntField
    {
        public const int TAG = 41382;

        public NoLegComplexEventRateSources()
            : base(Tags.NoLegComplexEventRateSources) { }
        public NoLegComplexEventRateSources(int val)
            : base(Tags.NoLegComplexEventRateSources, val) { }

    }


    /// <summary>
    /// LegComplexEventRateSource Field
    /// </summary>/
    public sealed class LegComplexEventRateSource : IntField
    {
        public const int TAG = 41383;

        public LegComplexEventRateSource()
            : base(Tags.LegComplexEventRateSource) { }
        public LegComplexEventRateSource(int val)
            : base(Tags.LegComplexEventRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// LegComplexEventRateSourceType Field
    /// </summary>/
    public sealed class LegComplexEventRateSourceType : IntField
    {
        public const int TAG = 41384;

        public LegComplexEventRateSourceType()
            : base(Tags.LegComplexEventRateSourceType) { }
        public LegComplexEventRateSourceType(int val)
            : base(Tags.LegComplexEventRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// LegComplexEventReferencePage Field
    /// </summary>/
    public sealed class LegComplexEventReferencePage : StringField
    {
        public const int TAG = 41385;

        public LegComplexEventReferencePage()
            : base(Tags.LegComplexEventReferencePage) { }
        public LegComplexEventReferencePage(string val)
            : base(Tags.LegComplexEventReferencePage, val) { }

    }


    /// <summary>
    /// LegComplexEvenReferencePageHeading Field
    /// </summary>/
    public sealed class LegComplexEvenReferencePageHeading : StringField
    {
        public const int TAG = 41386;

        public LegComplexEvenReferencePageHeading()
            : base(Tags.LegComplexEvenReferencePageHeading) { }
        public LegComplexEvenReferencePageHeading(string val)
            : base(Tags.LegComplexEvenReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoLegComplexEventDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegComplexEventDateBusinessCenters : IntField
    {
        public const int TAG = 41387;

        public NoLegComplexEventDateBusinessCenters()
            : base(Tags.NoLegComplexEventDateBusinessCenters) { }
        public NoLegComplexEventDateBusinessCenters(int val)
            : base(Tags.NoLegComplexEventDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegComplexEventDateBusinessCenter Field
    /// </summary>/
    public sealed class LegComplexEventDateBusinessCenter : StringField
    {
        public const int TAG = 41388;

        public LegComplexEventDateBusinessCenter()
            : base(Tags.LegComplexEventDateBusinessCenter) { }
        public LegComplexEventDateBusinessCenter(string val)
            : base(Tags.LegComplexEventDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegComplexEventDateUnadjusted Field
    /// </summary>/
    public sealed class LegComplexEventDateUnadjusted : StringField
    {
        public const int TAG = 41389;

        public LegComplexEventDateUnadjusted()
            : base(Tags.LegComplexEventDateUnadjusted) { }
        public LegComplexEventDateUnadjusted(string val)
            : base(Tags.LegComplexEventDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegComplexEventDateRelativeTo Field
    /// </summary>/
    public sealed class LegComplexEventDateRelativeTo : IntField
    {
        public const int TAG = 41390;

        public LegComplexEventDateRelativeTo()
            : base(Tags.LegComplexEventDateRelativeTo) { }
        public LegComplexEventDateRelativeTo(int val)
            : base(Tags.LegComplexEventDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegComplexEventDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegComplexEventDateOffsetPeriod : IntField
    {
        public const int TAG = 41391;

        public LegComplexEventDateOffsetPeriod()
            : base(Tags.LegComplexEventDateOffsetPeriod) { }
        public LegComplexEventDateOffsetPeriod(int val)
            : base(Tags.LegComplexEventDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegComplexEventDateOffsetUnit Field
    /// </summary>/
    public sealed class LegComplexEventDateOffsetUnit : StringField
    {
        public const int TAG = 41392;

        public LegComplexEventDateOffsetUnit()
            : base(Tags.LegComplexEventDateOffsetUnit) { }
        public LegComplexEventDateOffsetUnit(string val)
            : base(Tags.LegComplexEventDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegComplexEventDateOffsetDayType Field
    /// </summary>/
    public sealed class LegComplexEventDateOffsetDayType : IntField
    {
        public const int TAG = 41393;

        public LegComplexEventDateOffsetDayType()
            : base(Tags.LegComplexEventDateOffsetDayType) { }
        public LegComplexEventDateOffsetDayType(int val)
            : base(Tags.LegComplexEventDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegComplexEventDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegComplexEventDateBusinessDayConvention : IntField
    {
        public const int TAG = 41394;

        public LegComplexEventDateBusinessDayConvention()
            : base(Tags.LegComplexEventDateBusinessDayConvention) { }
        public LegComplexEventDateBusinessDayConvention(int val)
            : base(Tags.LegComplexEventDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegComplexEventDateAdjusted Field
    /// </summary>/
    public sealed class LegComplexEventDateAdjusted : StringField
    {
        public const int TAG = 41395;

        public LegComplexEventDateAdjusted()
            : base(Tags.LegComplexEventDateAdjusted) { }
        public LegComplexEventDateAdjusted(string val)
            : base(Tags.LegComplexEventDateAdjusted, val) { }

    }


    /// <summary>
    /// LegComplexEventFixingTime Field
    /// </summary>/
    public sealed class LegComplexEventFixingTime : StringField
    {
        public const int TAG = 41396;

        public LegComplexEventFixingTime()
            : base(Tags.LegComplexEventFixingTime) { }
        public LegComplexEventFixingTime(string val)
            : base(Tags.LegComplexEventFixingTime, val) { }

    }


    /// <summary>
    /// LegComplexEventFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegComplexEventFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 41397;

        public LegComplexEventFixingTimeBusinessCenter()
            : base(Tags.LegComplexEventFixingTimeBusinessCenter) { }
        public LegComplexEventFixingTimeBusinessCenter(string val)
            : base(Tags.LegComplexEventFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegComplexEventCreditEventSources Field
    /// </summary>/
    public sealed class NoLegComplexEventCreditEventSources : IntField
    {
        public const int TAG = 41398;

        public NoLegComplexEventCreditEventSources()
            : base(Tags.NoLegComplexEventCreditEventSources) { }
        public NoLegComplexEventCreditEventSources(int val)
            : base(Tags.NoLegComplexEventCreditEventSources, val) { }

    }


    /// <summary>
    /// LegComplexEventCreditEventSource Field
    /// </summary>/
    public sealed class LegComplexEventCreditEventSource : StringField
    {
        public const int TAG = 41399;

        public LegComplexEventCreditEventSource()
            : base(Tags.LegComplexEventCreditEventSource) { }
        public LegComplexEventCreditEventSource(string val)
            : base(Tags.LegComplexEventCreditEventSource, val) { }

    }


    /// <summary>
    /// NoLegComplexEventSchedules Field
    /// </summary>/
    public sealed class NoLegComplexEventSchedules : IntField
    {
        public const int TAG = 41400;

        public NoLegComplexEventSchedules()
            : base(Tags.NoLegComplexEventSchedules) { }
        public NoLegComplexEventSchedules(int val)
            : base(Tags.NoLegComplexEventSchedules, val) { }

    }


    /// <summary>
    /// LegComplexEventScheduleStartDate Field
    /// </summary>/
    public sealed class LegComplexEventScheduleStartDate : StringField
    {
        public const int TAG = 41401;

        public LegComplexEventScheduleStartDate()
            : base(Tags.LegComplexEventScheduleStartDate) { }
        public LegComplexEventScheduleStartDate(string val)
            : base(Tags.LegComplexEventScheduleStartDate, val) { }

    }


    /// <summary>
    /// LegComplexEventScheduleEndDate Field
    /// </summary>/
    public sealed class LegComplexEventScheduleEndDate : StringField
    {
        public const int TAG = 41402;

        public LegComplexEventScheduleEndDate()
            : base(Tags.LegComplexEventScheduleEndDate) { }
        public LegComplexEventScheduleEndDate(string val)
            : base(Tags.LegComplexEventScheduleEndDate, val) { }

    }


    /// <summary>
    /// LegComplexEventScheduleFrequencyPeriod Field
    /// </summary>/
    public sealed class LegComplexEventScheduleFrequencyPeriod : IntField
    {
        public const int TAG = 41403;

        public LegComplexEventScheduleFrequencyPeriod()
            : base(Tags.LegComplexEventScheduleFrequencyPeriod) { }
        public LegComplexEventScheduleFrequencyPeriod(int val)
            : base(Tags.LegComplexEventScheduleFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegComplexEventScheduleFrequencyUnit Field
    /// </summary>/
    public sealed class LegComplexEventScheduleFrequencyUnit : StringField
    {
        public const int TAG = 41404;

        public LegComplexEventScheduleFrequencyUnit()
            : base(Tags.LegComplexEventScheduleFrequencyUnit) { }
        public LegComplexEventScheduleFrequencyUnit(string val)
            : base(Tags.LegComplexEventScheduleFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegComplexEventScheduleRollConvention Field
    /// </summary>/
    public sealed class LegComplexEventScheduleRollConvention : StringField
    {
        public const int TAG = 41405;

        public LegComplexEventScheduleRollConvention()
            : base(Tags.LegComplexEventScheduleRollConvention) { }
        public LegComplexEventScheduleRollConvention(string val)
            : base(Tags.LegComplexEventScheduleRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// ProvisionCashSettlQuoteReferencePage Field
    /// </summary>/
    public sealed class ProvisionCashSettlQuoteReferencePage : StringField
    {
        public const int TAG = 41406;

        public ProvisionCashSettlQuoteReferencePage()
            : base(Tags.ProvisionCashSettlQuoteReferencePage) { }
        public ProvisionCashSettlQuoteReferencePage(string val)
            : base(Tags.ProvisionCashSettlQuoteReferencePage, val) { }

    }


    /// <summary>
    /// LegProvisionCashSettlQuoteReferencePage Field
    /// </summary>/
    public sealed class LegProvisionCashSettlQuoteReferencePage : StringField
    {
        public const int TAG = 41407;

        public LegProvisionCashSettlQuoteReferencePage()
            : base(Tags.LegProvisionCashSettlQuoteReferencePage) { }
        public LegProvisionCashSettlQuoteReferencePage(string val)
            : base(Tags.LegProvisionCashSettlQuoteReferencePage, val) { }

    }


    /// <summary>
    /// NoLegDeliverySchedules Field
    /// </summary>/
    public sealed class NoLegDeliverySchedules : IntField
    {
        public const int TAG = 41408;

        public NoLegDeliverySchedules()
            : base(Tags.NoLegDeliverySchedules) { }
        public NoLegDeliverySchedules(int val)
            : base(Tags.NoLegDeliverySchedules, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleType Field
    /// </summary>/
    public sealed class LegDeliveryScheduleType : IntField
    {
        public const int TAG = 41409;

        public LegDeliveryScheduleType()
            : base(Tags.LegDeliveryScheduleType) { }
        public LegDeliveryScheduleType(int val)
            : base(Tags.LegDeliveryScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int DELIVERY = 1;
        public const int PHYSICAL_SETTLEMENT_PERIOD = 2;
    }


    /// <summary>
    /// LegDeliveryScheduleXID Field
    /// </summary>/
    public sealed class LegDeliveryScheduleXID : StringField
    {
        public const int TAG = 41410;

        public LegDeliveryScheduleXID()
            : base(Tags.LegDeliveryScheduleXID) { }
        public LegDeliveryScheduleXID(string val)
            : base(Tags.LegDeliveryScheduleXID, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleNotional Field
    /// </summary>/
    public sealed class LegDeliveryScheduleNotional : DecimalField
    {
        public const int TAG = 41411;

        public LegDeliveryScheduleNotional()
            : base(Tags.LegDeliveryScheduleNotional) { }
        public LegDeliveryScheduleNotional(Decimal val)
            : base(Tags.LegDeliveryScheduleNotional, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class LegDeliveryScheduleNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41412;

        public LegDeliveryScheduleNotionalUnitOfMeasure()
            : base(Tags.LegDeliveryScheduleNotionalUnitOfMeasure) { }
        public LegDeliveryScheduleNotionalUnitOfMeasure(string val)
            : base(Tags.LegDeliveryScheduleNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegDeliveryScheduleNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class LegDeliveryScheduleNotionalCommodityFrequency : IntField
    {
        public const int TAG = 41413;

        public LegDeliveryScheduleNotionalCommodityFrequency()
            : base(Tags.LegDeliveryScheduleNotionalCommodityFrequency) { }
        public LegDeliveryScheduleNotionalCommodityFrequency(int val)
            : base(Tags.LegDeliveryScheduleNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// LegDeliveryScheduleNegativeTolerance Field
    /// </summary>/
    public sealed class LegDeliveryScheduleNegativeTolerance : DecimalField
    {
        public const int TAG = 41414;

        public LegDeliveryScheduleNegativeTolerance()
            : base(Tags.LegDeliveryScheduleNegativeTolerance) { }
        public LegDeliveryScheduleNegativeTolerance(Decimal val)
            : base(Tags.LegDeliveryScheduleNegativeTolerance, val) { }

    }


    /// <summary>
    /// LegDeliverySchedulePositiveTolerance Field
    /// </summary>/
    public sealed class LegDeliverySchedulePositiveTolerance : DecimalField
    {
        public const int TAG = 41415;

        public LegDeliverySchedulePositiveTolerance()
            : base(Tags.LegDeliverySchedulePositiveTolerance) { }
        public LegDeliverySchedulePositiveTolerance(Decimal val)
            : base(Tags.LegDeliverySchedulePositiveTolerance, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class LegDeliveryScheduleToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41416;

        public LegDeliveryScheduleToleranceUnitOfMeasure()
            : base(Tags.LegDeliveryScheduleToleranceUnitOfMeasure) { }
        public LegDeliveryScheduleToleranceUnitOfMeasure(string val)
            : base(Tags.LegDeliveryScheduleToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegDeliveryScheduleToleranceType Field
    /// </summary>/
    public sealed class LegDeliveryScheduleToleranceType : IntField
    {
        public const int TAG = 41417;

        public LegDeliveryScheduleToleranceType()
            : base(Tags.LegDeliveryScheduleToleranceType) { }
        public LegDeliveryScheduleToleranceType(int val)
            : base(Tags.LegDeliveryScheduleToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// LegDeliveryScheduleSettlCountry Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlCountry : StringField
    {
        public const int TAG = 41418;

        public LegDeliveryScheduleSettlCountry()
            : base(Tags.LegDeliveryScheduleSettlCountry) { }
        public LegDeliveryScheduleSettlCountry(string val)
            : base(Tags.LegDeliveryScheduleSettlCountry, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlTimeZone Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlTimeZone : StringField
    {
        public const int TAG = 41419;

        public LegDeliveryScheduleSettlTimeZone()
            : base(Tags.LegDeliveryScheduleSettlTimeZone) { }
        public LegDeliveryScheduleSettlTimeZone(string val)
            : base(Tags.LegDeliveryScheduleSettlTimeZone, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlFlowType Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlFlowType : IntField
    {
        public const int TAG = 41420;

        public LegDeliveryScheduleSettlFlowType()
            : base(Tags.LegDeliveryScheduleSettlFlowType) { }
        public LegDeliveryScheduleSettlFlowType(int val)
            : base(Tags.LegDeliveryScheduleSettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// LegDeliveryScheduleSettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 41421;

        public LegDeliveryScheduleSettlHolidaysProcessingInstruction()
            : base(Tags.LegDeliveryScheduleSettlHolidaysProcessingInstruction) { }
        public LegDeliveryScheduleSettlHolidaysProcessingInstruction(int val)
            : base(Tags.LegDeliveryScheduleSettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// NoLegDeliveryScheduleSettlDays Field
    /// </summary>/
    public sealed class NoLegDeliveryScheduleSettlDays : IntField
    {
        public const int TAG = 41422;

        public NoLegDeliveryScheduleSettlDays()
            : base(Tags.NoLegDeliveryScheduleSettlDays) { }
        public NoLegDeliveryScheduleSettlDays(int val)
            : base(Tags.NoLegDeliveryScheduleSettlDays, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlDay Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlDay : IntField
    {
        public const int TAG = 41423;

        public LegDeliveryScheduleSettlDay()
            : base(Tags.LegDeliveryScheduleSettlDay) { }
        public LegDeliveryScheduleSettlDay(int val)
            : base(Tags.LegDeliveryScheduleSettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// LegDeliveryScheduleSettlTotalHours Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlTotalHours : IntField
    {
        public const int TAG = 41424;

        public LegDeliveryScheduleSettlTotalHours()
            : base(Tags.LegDeliveryScheduleSettlTotalHours) { }
        public LegDeliveryScheduleSettlTotalHours(int val)
            : base(Tags.LegDeliveryScheduleSettlTotalHours, val) { }

    }


    /// <summary>
    /// NoLegDeliveryScheduleSettlTimes Field
    /// </summary>/
    public sealed class NoLegDeliveryScheduleSettlTimes : IntField
    {
        public const int TAG = 41425;

        public NoLegDeliveryScheduleSettlTimes()
            : base(Tags.NoLegDeliveryScheduleSettlTimes) { }
        public NoLegDeliveryScheduleSettlTimes(int val)
            : base(Tags.NoLegDeliveryScheduleSettlTimes, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlStart Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlStart : StringField
    {
        public const int TAG = 41426;

        public LegDeliveryScheduleSettlStart()
            : base(Tags.LegDeliveryScheduleSettlStart) { }
        public LegDeliveryScheduleSettlStart(string val)
            : base(Tags.LegDeliveryScheduleSettlStart, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlEnd Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlEnd : StringField
    {
        public const int TAG = 41427;

        public LegDeliveryScheduleSettlEnd()
            : base(Tags.LegDeliveryScheduleSettlEnd) { }
        public LegDeliveryScheduleSettlEnd(string val)
            : base(Tags.LegDeliveryScheduleSettlEnd, val) { }

    }


    /// <summary>
    /// LegDeliveryScheduleSettlTimeType Field
    /// </summary>/
    public sealed class LegDeliveryScheduleSettlTimeType : IntField
    {
        public const int TAG = 41428;

        public LegDeliveryScheduleSettlTimeType()
            : base(Tags.LegDeliveryScheduleSettlTimeType) { }
        public LegDeliveryScheduleSettlTimeType(int val)
            : base(Tags.LegDeliveryScheduleSettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// LegDeliveryStreamType Field
    /// </summary>/
    public sealed class LegDeliveryStreamType : IntField
    {
        public const int TAG = 41429;

        public LegDeliveryStreamType()
            : base(Tags.LegDeliveryStreamType) { }
        public LegDeliveryStreamType(int val)
            : base(Tags.LegDeliveryStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
    }


    /// <summary>
    /// LegDeliveryStreamPipeline Field
    /// </summary>/
    public sealed class LegDeliveryStreamPipeline : StringField
    {
        public const int TAG = 41430;

        public LegDeliveryStreamPipeline()
            : base(Tags.LegDeliveryStreamPipeline) { }
        public LegDeliveryStreamPipeline(string val)
            : base(Tags.LegDeliveryStreamPipeline, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamEntryPoint Field
    /// </summary>/
    public sealed class LegDeliveryStreamEntryPoint : StringField
    {
        public const int TAG = 41431;

        public LegDeliveryStreamEntryPoint()
            : base(Tags.LegDeliveryStreamEntryPoint) { }
        public LegDeliveryStreamEntryPoint(string val)
            : base(Tags.LegDeliveryStreamEntryPoint, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamWithdrawalPoint Field
    /// </summary>/
    public sealed class LegDeliveryStreamWithdrawalPoint : StringField
    {
        public const int TAG = 41432;

        public LegDeliveryStreamWithdrawalPoint()
            : base(Tags.LegDeliveryStreamWithdrawalPoint) { }
        public LegDeliveryStreamWithdrawalPoint(string val)
            : base(Tags.LegDeliveryStreamWithdrawalPoint, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamDeliveryPoint Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryPoint : StringField
    {
        public const int TAG = 41433;

        public LegDeliveryStreamDeliveryPoint()
            : base(Tags.LegDeliveryStreamDeliveryPoint) { }
        public LegDeliveryStreamDeliveryPoint(string val)
            : base(Tags.LegDeliveryStreamDeliveryPoint, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamDeliveryRestriction Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryRestriction : IntField
    {
        public const int TAG = 41434;

        public LegDeliveryStreamDeliveryRestriction()
            : base(Tags.LegDeliveryStreamDeliveryRestriction) { }
        public LegDeliveryStreamDeliveryRestriction(int val)
            : base(Tags.LegDeliveryStreamDeliveryRestriction, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int INTERRUPTABLE_OR_NON_FIRM = 2;
        public const int FORCE_MAJEURE = 3;
        public const int SYSTEM_FIRM = 4;
        public const int UNIT_FIRM = 5;
    }


    /// <summary>
    /// LegDeliveryStreamDeliveryContingency Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryContingency : StringField
    {
        public const int TAG = 41435;

        public LegDeliveryStreamDeliveryContingency()
            : base(Tags.LegDeliveryStreamDeliveryContingency) { }
        public LegDeliveryStreamDeliveryContingency(string val)
            : base(Tags.LegDeliveryStreamDeliveryContingency, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamDeliveryContingentPartySide Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryContingentPartySide : IntField
    {
        public const int TAG = 41436;

        public LegDeliveryStreamDeliveryContingentPartySide()
            : base(Tags.LegDeliveryStreamDeliveryContingentPartySide) { }
        public LegDeliveryStreamDeliveryContingentPartySide(int val)
            : base(Tags.LegDeliveryStreamDeliveryContingentPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// LegDeliveryStreamDeliverAtSourceIndicator Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliverAtSourceIndicator : BooleanField
    {
        public const int TAG = 41437;

        public LegDeliveryStreamDeliverAtSourceIndicator()
            : base(Tags.LegDeliveryStreamDeliverAtSourceIndicator) { }
        public LegDeliveryStreamDeliverAtSourceIndicator(Boolean val)
            : base(Tags.LegDeliveryStreamDeliverAtSourceIndicator, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamRiskApportionment Field
    /// </summary>/
    public sealed class LegDeliveryStreamRiskApportionment : StringField
    {
        public const int TAG = 41438;

        public LegDeliveryStreamRiskApportionment()
            : base(Tags.LegDeliveryStreamRiskApportionment) { }
        public LegDeliveryStreamRiskApportionment(string val)
            : base(Tags.LegDeliveryStreamRiskApportionment, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamTitleTransferLocation Field
    /// </summary>/
    public sealed class LegDeliveryStreamTitleTransferLocation : StringField
    {
        public const int TAG = 41439;

        public LegDeliveryStreamTitleTransferLocation()
            : base(Tags.LegDeliveryStreamTitleTransferLocation) { }
        public LegDeliveryStreamTitleTransferLocation(string val)
            : base(Tags.LegDeliveryStreamTitleTransferLocation, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamTitleTransferCondition Field
    /// </summary>/
    public sealed class LegDeliveryStreamTitleTransferCondition : IntField
    {
        public const int TAG = 41440;

        public LegDeliveryStreamTitleTransferCondition()
            : base(Tags.LegDeliveryStreamTitleTransferCondition) { }
        public LegDeliveryStreamTitleTransferCondition(int val)
            : base(Tags.LegDeliveryStreamTitleTransferCondition, val) { }


        // Field Enumerations
        public const int TRANSFERS_WITH_RISK_OF_LOSS = 0;
        public const int DOES_NOT_TRANSFER_WITH_RISK_OF_LOSS = 1;
    }


    /// <summary>
    /// LegDeliveryStreamImporterOfRecord Field
    /// </summary>/
    public sealed class LegDeliveryStreamImporterOfRecord : StringField
    {
        public const int TAG = 41441;

        public LegDeliveryStreamImporterOfRecord()
            : base(Tags.LegDeliveryStreamImporterOfRecord) { }
        public LegDeliveryStreamImporterOfRecord(string val)
            : base(Tags.LegDeliveryStreamImporterOfRecord, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamNegativeTolerance Field
    /// </summary>/
    public sealed class LegDeliveryStreamNegativeTolerance : DecimalField
    {
        public const int TAG = 41442;

        public LegDeliveryStreamNegativeTolerance()
            : base(Tags.LegDeliveryStreamNegativeTolerance) { }
        public LegDeliveryStreamNegativeTolerance(Decimal val)
            : base(Tags.LegDeliveryStreamNegativeTolerance, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamPositiveTolerance Field
    /// </summary>/
    public sealed class LegDeliveryStreamPositiveTolerance : DecimalField
    {
        public const int TAG = 41443;

        public LegDeliveryStreamPositiveTolerance()
            : base(Tags.LegDeliveryStreamPositiveTolerance) { }
        public LegDeliveryStreamPositiveTolerance(Decimal val)
            : base(Tags.LegDeliveryStreamPositiveTolerance, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class LegDeliveryStreamToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41444;

        public LegDeliveryStreamToleranceUnitOfMeasure()
            : base(Tags.LegDeliveryStreamToleranceUnitOfMeasure) { }
        public LegDeliveryStreamToleranceUnitOfMeasure(string val)
            : base(Tags.LegDeliveryStreamToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegDeliveryStreamToleranceType Field
    /// </summary>/
    public sealed class LegDeliveryStreamToleranceType : IntField
    {
        public const int TAG = 41445;

        public LegDeliveryStreamToleranceType()
            : base(Tags.LegDeliveryStreamToleranceType) { }
        public LegDeliveryStreamToleranceType(int val)
            : base(Tags.LegDeliveryStreamToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// LegDeliveryStreamToleranceOptionSide Field
    /// </summary>/
    public sealed class LegDeliveryStreamToleranceOptionSide : IntField
    {
        public const int TAG = 41446;

        public LegDeliveryStreamToleranceOptionSide()
            : base(Tags.LegDeliveryStreamToleranceOptionSide) { }
        public LegDeliveryStreamToleranceOptionSide(int val)
            : base(Tags.LegDeliveryStreamToleranceOptionSide, val) { }


        // Field Enumerations
        public const int BUYER = 1;
        public const int SELLER = 2;
    }


    /// <summary>
    /// LegDeliveryStreamTotalPositiveTolerance Field
    /// </summary>/
    public sealed class LegDeliveryStreamTotalPositiveTolerance : DecimalField
    {
        public const int TAG = 41447;

        public LegDeliveryStreamTotalPositiveTolerance()
            : base(Tags.LegDeliveryStreamTotalPositiveTolerance) { }
        public LegDeliveryStreamTotalPositiveTolerance(Decimal val)
            : base(Tags.LegDeliveryStreamTotalPositiveTolerance, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamTotalNegativeTolerance Field
    /// </summary>/
    public sealed class LegDeliveryStreamTotalNegativeTolerance : DecimalField
    {
        public const int TAG = 41448;

        public LegDeliveryStreamTotalNegativeTolerance()
            : base(Tags.LegDeliveryStreamTotalNegativeTolerance) { }
        public LegDeliveryStreamTotalNegativeTolerance(Decimal val)
            : base(Tags.LegDeliveryStreamTotalNegativeTolerance, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamNotionalConversionFactor Field
    /// </summary>/
    public sealed class LegDeliveryStreamNotionalConversionFactor : DecimalField
    {
        public const int TAG = 41449;

        public LegDeliveryStreamNotionalConversionFactor()
            : base(Tags.LegDeliveryStreamNotionalConversionFactor) { }
        public LegDeliveryStreamNotionalConversionFactor(Decimal val)
            : base(Tags.LegDeliveryStreamNotionalConversionFactor, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamTransportEquipment Field
    /// </summary>/
    public sealed class LegDeliveryStreamTransportEquipment : StringField
    {
        public const int TAG = 41450;

        public LegDeliveryStreamTransportEquipment()
            : base(Tags.LegDeliveryStreamTransportEquipment) { }
        public LegDeliveryStreamTransportEquipment(string val)
            : base(Tags.LegDeliveryStreamTransportEquipment, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamElectingPartySide Field
    /// </summary>/
    public sealed class LegDeliveryStreamElectingPartySide : IntField
    {
        public const int TAG = 41451;

        public LegDeliveryStreamElectingPartySide()
            : base(Tags.LegDeliveryStreamElectingPartySide) { }
        public LegDeliveryStreamElectingPartySide(int val)
            : base(Tags.LegDeliveryStreamElectingPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// NoLegStreamAssetAttributes Field
    /// </summary>/
    public sealed class NoLegStreamAssetAttributes : IntField
    {
        public const int TAG = 41452;

        public NoLegStreamAssetAttributes()
            : base(Tags.NoLegStreamAssetAttributes) { }
        public NoLegStreamAssetAttributes(int val)
            : base(Tags.NoLegStreamAssetAttributes, val) { }

    }


    /// <summary>
    /// LegStreamAssetAttributeType Field
    /// </summary>/
    public sealed class LegStreamAssetAttributeType : StringField
    {
        public const int TAG = 41453;

        public LegStreamAssetAttributeType()
            : base(Tags.LegStreamAssetAttributeType) { }
        public LegStreamAssetAttributeType(string val)
            : base(Tags.LegStreamAssetAttributeType, val) { }

    }


    /// <summary>
    /// LegStreamAssetAttributeValue Field
    /// </summary>/
    public sealed class LegStreamAssetAttributeValue : StringField
    {
        public const int TAG = 41454;

        public LegStreamAssetAttributeValue()
            : base(Tags.LegStreamAssetAttributeValue) { }
        public LegStreamAssetAttributeValue(string val)
            : base(Tags.LegStreamAssetAttributeValue, val) { }

    }


    /// <summary>
    /// LegStreamAssetAttributeLimit Field
    /// </summary>/
    public sealed class LegStreamAssetAttributeLimit : StringField
    {
        public const int TAG = 41455;

        public LegStreamAssetAttributeLimit()
            : base(Tags.LegStreamAssetAttributeLimit) { }
        public LegStreamAssetAttributeLimit(string val)
            : base(Tags.LegStreamAssetAttributeLimit, val) { }

    }


    /// <summary>
    /// NoLegDeliveryStreamCycles Field
    /// </summary>/
    public sealed class NoLegDeliveryStreamCycles : IntField
    {
        public const int TAG = 41456;

        public NoLegDeliveryStreamCycles()
            : base(Tags.NoLegDeliveryStreamCycles) { }
        public NoLegDeliveryStreamCycles(int val)
            : base(Tags.NoLegDeliveryStreamCycles, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class LegDeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41457;

        public LegDeliveryStreamCycleDesc()
            : base(Tags.LegDeliveryStreamCycleDesc) { }
        public LegDeliveryStreamCycleDesc(string val)
            : base(Tags.LegDeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// EncodedLegDeliveryStreamCycleDescLen Field
    /// </summary>/
    public sealed class EncodedLegDeliveryStreamCycleDescLen : IntField
    {
        public const int TAG = 41458;

        public EncodedLegDeliveryStreamCycleDescLen()
            : base(Tags.EncodedLegDeliveryStreamCycleDescLen) { }
        public EncodedLegDeliveryStreamCycleDescLen(int val)
            : base(Tags.EncodedLegDeliveryStreamCycleDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegDeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class EncodedLegDeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41459;

        public EncodedLegDeliveryStreamCycleDesc()
            : base(Tags.EncodedLegDeliveryStreamCycleDesc) { }
        public EncodedLegDeliveryStreamCycleDesc(string val)
            : base(Tags.EncodedLegDeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// NoLegDeliveryStreamCommoditySources Field
    /// </summary>/
    public sealed class NoLegDeliveryStreamCommoditySources : IntField
    {
        public const int TAG = 41460;

        public NoLegDeliveryStreamCommoditySources()
            : base(Tags.NoLegDeliveryStreamCommoditySources) { }
        public NoLegDeliveryStreamCommoditySources(int val)
            : base(Tags.NoLegDeliveryStreamCommoditySources, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamCommoditySource Field
    /// </summary>/
    public sealed class LegDeliveryStreamCommoditySource : StringField
    {
        public const int TAG = 41461;

        public LegDeliveryStreamCommoditySource()
            : base(Tags.LegDeliveryStreamCommoditySource) { }
        public LegDeliveryStreamCommoditySource(string val)
            : base(Tags.LegDeliveryStreamCommoditySource, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionProvision Field
    /// </summary>/
    public sealed class LegMarketDisruptionProvision : IntField
    {
        public const int TAG = 41462;

        public LegMarketDisruptionProvision()
            : base(Tags.LegMarketDisruptionProvision) { }
        public LegMarketDisruptionProvision(int val)
            : base(Tags.LegMarketDisruptionProvision, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int APPLICABLE = 1;
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 3;
    }


    /// <summary>
    /// LegMarketDisruptionFallbackProvision Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackProvision : IntField
    {
        public const int TAG = 41463;

        public LegMarketDisruptionFallbackProvision()
            : base(Tags.LegMarketDisruptionFallbackProvision) { }
        public LegMarketDisruptionFallbackProvision(int val)
            : base(Tags.LegMarketDisruptionFallbackProvision, val) { }


        // Field Enumerations
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 0;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 1;
    }


    /// <summary>
    /// LegMarketDisruptionMaximumDays Field
    /// </summary>/
    public sealed class LegMarketDisruptionMaximumDays : IntField
    {
        public const int TAG = 41464;

        public LegMarketDisruptionMaximumDays()
            : base(Tags.LegMarketDisruptionMaximumDays) { }
        public LegMarketDisruptionMaximumDays(int val)
            : base(Tags.LegMarketDisruptionMaximumDays, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionMaterialityPercentage Field
    /// </summary>/
    public sealed class LegMarketDisruptionMaterialityPercentage : DecimalField
    {
        public const int TAG = 41465;

        public LegMarketDisruptionMaterialityPercentage()
            : base(Tags.LegMarketDisruptionMaterialityPercentage) { }
        public LegMarketDisruptionMaterialityPercentage(Decimal val)
            : base(Tags.LegMarketDisruptionMaterialityPercentage, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionMinimumFuturesContracts Field
    /// </summary>/
    public sealed class LegMarketDisruptionMinimumFuturesContracts : IntField
    {
        public const int TAG = 41466;

        public LegMarketDisruptionMinimumFuturesContracts()
            : base(Tags.LegMarketDisruptionMinimumFuturesContracts) { }
        public LegMarketDisruptionMinimumFuturesContracts(int val)
            : base(Tags.LegMarketDisruptionMinimumFuturesContracts, val) { }

    }


    /// <summary>
    /// NoLegMarketDisruptionEvents Field
    /// </summary>/
    public sealed class NoLegMarketDisruptionEvents : IntField
    {
        public const int TAG = 41467;

        public NoLegMarketDisruptionEvents()
            : base(Tags.NoLegMarketDisruptionEvents) { }
        public NoLegMarketDisruptionEvents(int val)
            : base(Tags.NoLegMarketDisruptionEvents, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionEvent Field
    /// </summary>/
    public sealed class LegMarketDisruptionEvent : StringField
    {
        public const int TAG = 41468;

        public LegMarketDisruptionEvent()
            : base(Tags.LegMarketDisruptionEvent) { }
        public LegMarketDisruptionEvent(string val)
            : base(Tags.LegMarketDisruptionEvent, val) { }

    }


    /// <summary>
    /// NoLegMarketDisruptionFallbacks Field
    /// </summary>/
    public sealed class NoLegMarketDisruptionFallbacks : IntField
    {
        public const int TAG = 41469;

        public NoLegMarketDisruptionFallbacks()
            : base(Tags.NoLegMarketDisruptionFallbacks) { }
        public NoLegMarketDisruptionFallbacks(int val)
            : base(Tags.NoLegMarketDisruptionFallbacks, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackType Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackType : StringField
    {
        public const int TAG = 41470;

        public LegMarketDisruptionFallbackType()
            : base(Tags.LegMarketDisruptionFallbackType) { }
        public LegMarketDisruptionFallbackType(string val)
            : base(Tags.LegMarketDisruptionFallbackType, val) { }

    }


    /// <summary>
    /// NoLegMarketDisruptionFallbackReferencePrices Field
    /// </summary>/
    public sealed class NoLegMarketDisruptionFallbackReferencePrices : IntField
    {
        public const int TAG = 41471;

        public NoLegMarketDisruptionFallbackReferencePrices()
            : base(Tags.NoLegMarketDisruptionFallbackReferencePrices) { }
        public NoLegMarketDisruptionFallbackReferencePrices(int val)
            : base(Tags.NoLegMarketDisruptionFallbackReferencePrices, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackUnderlierType Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackUnderlierType : IntField
    {
        public const int TAG = 41472;

        public LegMarketDisruptionFallbackUnderlierType()
            : base(Tags.LegMarketDisruptionFallbackUnderlierType) { }
        public LegMarketDisruptionFallbackUnderlierType(int val)
            : base(Tags.LegMarketDisruptionFallbackUnderlierType, val) { }


        // Field Enumerations
        public const int BASKET = 0;
        public const int BOND = 1;
        public const int CASH = 2;
        public const int COMMODITY = 3;
        public const int CONVERTIBLE_BOND = 4;
        public const int EQUITY = 5;
        public const int EXCHANGE_TRADED_FUND = 6;
        public const int FUTURE = 7;
        public const int INDEX = 8;
        public const int LOAN = 9;
        public const int MORTGAGE = 10;
        public const int MUTUAL_FUND = 11;
    }


    /// <summary>
    /// LegMarketDisruptionFallbackUnderlierSecurityID Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackUnderlierSecurityID : StringField
    {
        public const int TAG = 41473;

        public LegMarketDisruptionFallbackUnderlierSecurityID()
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityID) { }
        public LegMarketDisruptionFallbackUnderlierSecurityID(string val)
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityID, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackUnderlierSecurityIDSource Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackUnderlierSecurityIDSource : StringField
    {
        public const int TAG = 41474;

        public LegMarketDisruptionFallbackUnderlierSecurityIDSource()
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityIDSource) { }
        public LegMarketDisruptionFallbackUnderlierSecurityIDSource(string val)
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegMarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41475;

        public LegMarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityDesc) { }
        public LegMarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.LegMarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen : IntField
    {
        public const int TAG = 41476;

        public EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen()
            : base(Tags.EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen) { }
        public EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen(int val)
            : base(Tags.EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41477;

        public EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc) { }
        public EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackOpenUnits Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackOpenUnits : DecimalField
    {
        public const int TAG = 41478;

        public LegMarketDisruptionFallbackOpenUnits()
            : base(Tags.LegMarketDisruptionFallbackOpenUnits) { }
        public LegMarketDisruptionFallbackOpenUnits(Decimal val)
            : base(Tags.LegMarketDisruptionFallbackOpenUnits, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackBasketCurrency Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackBasketCurrency : StringField
    {
        public const int TAG = 41479;

        public LegMarketDisruptionFallbackBasketCurrency()
            : base(Tags.LegMarketDisruptionFallbackBasketCurrency) { }
        public LegMarketDisruptionFallbackBasketCurrency(string val)
            : base(Tags.LegMarketDisruptionFallbackBasketCurrency, val) { }

    }


    /// <summary>
    /// LegMarketDisruptionFallbackBasketDivisor Field
    /// </summary>/
    public sealed class LegMarketDisruptionFallbackBasketDivisor : DecimalField
    {
        public const int TAG = 41480;

        public LegMarketDisruptionFallbackBasketDivisor()
            : base(Tags.LegMarketDisruptionFallbackBasketDivisor) { }
        public LegMarketDisruptionFallbackBasketDivisor(Decimal val)
            : base(Tags.LegMarketDisruptionFallbackBasketDivisor, val) { }

    }


    /// <summary>
    /// LegExerciseDesc Field
    /// </summary>/
    public sealed class LegExerciseDesc : StringField
    {
        public const int TAG = 41481;

        public LegExerciseDesc()
            : base(Tags.LegExerciseDesc) { }
        public LegExerciseDesc(string val)
            : base(Tags.LegExerciseDesc, val) { }

    }


    /// <summary>
    /// EncodedLegExerciseDescLen Field
    /// </summary>/
    public sealed class EncodedLegExerciseDescLen : IntField
    {
        public const int TAG = 41482;

        public EncodedLegExerciseDescLen()
            : base(Tags.EncodedLegExerciseDescLen) { }
        public EncodedLegExerciseDescLen(int val)
            : base(Tags.EncodedLegExerciseDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegExerciseDesc Field
    /// </summary>/
    public sealed class EncodedLegExerciseDesc : StringField
    {
        public const int TAG = 41483;

        public EncodedLegExerciseDesc()
            : base(Tags.EncodedLegExerciseDesc) { }
        public EncodedLegExerciseDesc(string val)
            : base(Tags.EncodedLegExerciseDesc, val) { }

    }


    /// <summary>
    /// LegAutomaticExerciseIndicator Field
    /// </summary>/
    public sealed class LegAutomaticExerciseIndicator : BooleanField
    {
        public const int TAG = 41484;

        public LegAutomaticExerciseIndicator()
            : base(Tags.LegAutomaticExerciseIndicator) { }
        public LegAutomaticExerciseIndicator(Boolean val)
            : base(Tags.LegAutomaticExerciseIndicator, val) { }

    }


    /// <summary>
    /// LegAutomaticExerciseThresholdRate Field
    /// </summary>/
    public sealed class LegAutomaticExerciseThresholdRate : DecimalField
    {
        public const int TAG = 41485;

        public LegAutomaticExerciseThresholdRate()
            : base(Tags.LegAutomaticExerciseThresholdRate) { }
        public LegAutomaticExerciseThresholdRate(Decimal val)
            : base(Tags.LegAutomaticExerciseThresholdRate, val) { }

    }


    /// <summary>
    /// LegExerciseConfirmationMethod Field
    /// </summary>/
    public sealed class LegExerciseConfirmationMethod : IntField
    {
        public const int TAG = 41486;

        public LegExerciseConfirmationMethod()
            : base(Tags.LegExerciseConfirmationMethod) { }
        public LegExerciseConfirmationMethod(int val)
            : base(Tags.LegExerciseConfirmationMethod, val) { }


        // Field Enumerations
        public const int NOT_REQUIRED = 0;
        public const int NON_ELECTRONIC = 1;
        public const int ELECTRONIC = 2;
        public const int UNKNOWN_AT_TIME_OF_REPORT = 3;
    }


    /// <summary>
    /// LegManualNoticeBusinessCenter Field
    /// </summary>/
    public sealed class LegManualNoticeBusinessCenter : StringField
    {
        public const int TAG = 41487;

        public LegManualNoticeBusinessCenter()
            : base(Tags.LegManualNoticeBusinessCenter) { }
        public LegManualNoticeBusinessCenter(string val)
            : base(Tags.LegManualNoticeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegFallbackExerciseIndicator Field
    /// </summary>/
    public sealed class LegFallbackExerciseIndicator : BooleanField
    {
        public const int TAG = 41488;

        public LegFallbackExerciseIndicator()
            : base(Tags.LegFallbackExerciseIndicator) { }
        public LegFallbackExerciseIndicator(Boolean val)
            : base(Tags.LegFallbackExerciseIndicator, val) { }

    }


    /// <summary>
    /// LegLimitRightToConfirmIndicator Field
    /// </summary>/
    public sealed class LegLimitRightToConfirmIndicator : BooleanField
    {
        public const int TAG = 41489;

        public LegLimitRightToConfirmIndicator()
            : base(Tags.LegLimitRightToConfirmIndicator) { }
        public LegLimitRightToConfirmIndicator(Boolean val)
            : base(Tags.LegLimitRightToConfirmIndicator, val) { }

    }


    /// <summary>
    /// LegExerciseSplitTicketIndicator Field
    /// </summary>/
    public sealed class LegExerciseSplitTicketIndicator : BooleanField
    {
        public const int TAG = 41490;

        public LegExerciseSplitTicketIndicator()
            : base(Tags.LegExerciseSplitTicketIndicator) { }
        public LegExerciseSplitTicketIndicator(Boolean val)
            : base(Tags.LegExerciseSplitTicketIndicator, val) { }

    }


    /// <summary>
    /// NoLegOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoLegOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 41491;

        public NoLegOptionExerciseBusinessCenters()
            : base(Tags.NoLegOptionExerciseBusinessCenters) { }
        public NoLegOptionExerciseBusinessCenters(int val)
            : base(Tags.NoLegOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// LegOptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class LegOptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 41492;

        public LegOptionExerciseBusinessCenter()
            : base(Tags.LegOptionExerciseBusinessCenter) { }
        public LegOptionExerciseBusinessCenter(string val)
            : base(Tags.LegOptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// LegOptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class LegOptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 41493;

        public LegOptionExerciseBusinessDayConvention()
            : base(Tags.LegOptionExerciseBusinessDayConvention) { }
        public LegOptionExerciseBusinessDayConvention(int val)
            : base(Tags.LegOptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegOptionExerciseEarliestDateOffsetDayType Field
    /// </summary>/
    public sealed class LegOptionExerciseEarliestDateOffsetDayType : IntField
    {
        public const int TAG = 41494;

        public LegOptionExerciseEarliestDateOffsetDayType()
            : base(Tags.LegOptionExerciseEarliestDateOffsetDayType) { }
        public LegOptionExerciseEarliestDateOffsetDayType(int val)
            : base(Tags.LegOptionExerciseEarliestDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegOptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegOptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 41495;

        public LegOptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.LegOptionExerciseEarliestDateOffsetPeriod) { }
        public LegOptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.LegOptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegOptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class LegOptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 41496;

        public LegOptionExerciseEarliestDateOffsetUnit()
            : base(Tags.LegOptionExerciseEarliestDateOffsetUnit) { }
        public LegOptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.LegOptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegOptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class LegOptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 41497;

        public LegOptionExerciseFrequencyPeriod()
            : base(Tags.LegOptionExerciseFrequencyPeriod) { }
        public LegOptionExerciseFrequencyPeriod(int val)
            : base(Tags.LegOptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegOptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class LegOptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 41498;

        public LegOptionExerciseFrequencyUnit()
            : base(Tags.LegOptionExerciseFrequencyUnit) { }
        public LegOptionExerciseFrequencyUnit(string val)
            : base(Tags.LegOptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegOptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 41499;

        public LegOptionExerciseStartDateUnadjusted()
            : base(Tags.LegOptionExerciseStartDateUnadjusted) { }
        public LegOptionExerciseStartDateUnadjusted(string val)
            : base(Tags.LegOptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegOptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 41500;

        public LegOptionExerciseStartDateRelativeTo()
            : base(Tags.LegOptionExerciseStartDateRelativeTo) { }
        public LegOptionExerciseStartDateRelativeTo(int val)
            : base(Tags.LegOptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegOptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 41501;

        public LegOptionExerciseStartDateOffsetPeriod()
            : base(Tags.LegOptionExerciseStartDateOffsetPeriod) { }
        public LegOptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.LegOptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegOptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 41502;

        public LegOptionExerciseStartDateOffsetUnit()
            : base(Tags.LegOptionExerciseStartDateOffsetUnit) { }
        public LegOptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.LegOptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegOptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 41503;

        public LegOptionExerciseStartDateOffsetDayType()
            : base(Tags.LegOptionExerciseStartDateOffsetDayType) { }
        public LegOptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.LegOptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegOptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class LegOptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 41504;

        public LegOptionExerciseStartDateAdjusted()
            : base(Tags.LegOptionExerciseStartDateAdjusted) { }
        public LegOptionExerciseStartDateAdjusted(string val)
            : base(Tags.LegOptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// LegOptionExerciseSkip Field
    /// </summary>/
    public sealed class LegOptionExerciseSkip : IntField
    {
        public const int TAG = 41505;

        public LegOptionExerciseSkip()
            : base(Tags.LegOptionExerciseSkip) { }
        public LegOptionExerciseSkip(int val)
            : base(Tags.LegOptionExerciseSkip, val) { }

    }


    /// <summary>
    /// LegOptionExerciseNominationDeadline Field
    /// </summary>/
    public sealed class LegOptionExerciseNominationDeadline : StringField
    {
        public const int TAG = 41506;

        public LegOptionExerciseNominationDeadline()
            : base(Tags.LegOptionExerciseNominationDeadline) { }
        public LegOptionExerciseNominationDeadline(string val)
            : base(Tags.LegOptionExerciseNominationDeadline, val) { }

    }


    /// <summary>
    /// LegOptionExerciseFirstDateUnadjusted Field
    /// </summary>/
    public sealed class LegOptionExerciseFirstDateUnadjusted : StringField
    {
        public const int TAG = 41507;

        public LegOptionExerciseFirstDateUnadjusted()
            : base(Tags.LegOptionExerciseFirstDateUnadjusted) { }
        public LegOptionExerciseFirstDateUnadjusted(string val)
            : base(Tags.LegOptionExerciseFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegOptionExerciseLastDateUnadjusted Field
    /// </summary>/
    public sealed class LegOptionExerciseLastDateUnadjusted : StringField
    {
        public const int TAG = 41508;

        public LegOptionExerciseLastDateUnadjusted()
            : base(Tags.LegOptionExerciseLastDateUnadjusted) { }
        public LegOptionExerciseLastDateUnadjusted(string val)
            : base(Tags.LegOptionExerciseLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegOptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class LegOptionExerciseEarliestTime : StringField
    {
        public const int TAG = 41509;

        public LegOptionExerciseEarliestTime()
            : base(Tags.LegOptionExerciseEarliestTime) { }
        public LegOptionExerciseEarliestTime(string val)
            : base(Tags.LegOptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// LegOptionExerciseLatestTime Field
    /// </summary>/
    public sealed class LegOptionExerciseLatestTime : StringField
    {
        public const int TAG = 41510;

        public LegOptionExerciseLatestTime()
            : base(Tags.LegOptionExerciseLatestTime) { }
        public LegOptionExerciseLatestTime(string val)
            : base(Tags.LegOptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// LegOptionExerciseTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegOptionExerciseTimeBusinessCenter : StringField
    {
        public const int TAG = 41511;

        public LegOptionExerciseTimeBusinessCenter()
            : base(Tags.LegOptionExerciseTimeBusinessCenter) { }
        public LegOptionExerciseTimeBusinessCenter(string val)
            : base(Tags.LegOptionExerciseTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegOptionExerciseDates Field
    /// </summary>/
    public sealed class NoLegOptionExerciseDates : IntField
    {
        public const int TAG = 41512;

        public NoLegOptionExerciseDates()
            : base(Tags.NoLegOptionExerciseDates) { }
        public NoLegOptionExerciseDates(int val)
            : base(Tags.NoLegOptionExerciseDates, val) { }

    }


    /// <summary>
    /// LegOptionExerciseDate Field
    /// </summary>/
    public sealed class LegOptionExerciseDate : StringField
    {
        public const int TAG = 41513;

        public LegOptionExerciseDate()
            : base(Tags.LegOptionExerciseDate) { }
        public LegOptionExerciseDate(string val)
            : base(Tags.LegOptionExerciseDate, val) { }

    }


    /// <summary>
    /// LegOptionExerciseDateType Field
    /// </summary>/
    public sealed class LegOptionExerciseDateType : IntField
    {
        public const int TAG = 41514;

        public LegOptionExerciseDateType()
            : base(Tags.LegOptionExerciseDateType) { }
        public LegOptionExerciseDateType(int val)
            : base(Tags.LegOptionExerciseDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoLegOptionExerciseExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegOptionExerciseExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 41515;

        public NoLegOptionExerciseExpirationDateBusinessCenters()
            : base(Tags.NoLegOptionExerciseExpirationDateBusinessCenters) { }
        public NoLegOptionExerciseExpirationDateBusinessCenters(int val)
            : base(Tags.NoLegOptionExerciseExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 41516;

        public LegOptionExerciseExpirationDateBusinessCenter()
            : base(Tags.LegOptionExerciseExpirationDateBusinessCenter) { }
        public LegOptionExerciseExpirationDateBusinessCenter(string val)
            : base(Tags.LegOptionExerciseExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 41517;

        public LegOptionExerciseExpirationDateBusinessDayConvention()
            : base(Tags.LegOptionExerciseExpirationDateBusinessDayConvention) { }
        public LegOptionExerciseExpirationDateBusinessDayConvention(int val)
            : base(Tags.LegOptionExerciseExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegOptionExerciseExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateRelativeTo : IntField
    {
        public const int TAG = 41518;

        public LegOptionExerciseExpirationDateRelativeTo()
            : base(Tags.LegOptionExerciseExpirationDateRelativeTo) { }
        public LegOptionExerciseExpirationDateRelativeTo(int val)
            : base(Tags.LegOptionExerciseExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 41519;

        public LegOptionExerciseExpirationDateOffsetPeriod()
            : base(Tags.LegOptionExerciseExpirationDateOffsetPeriod) { }
        public LegOptionExerciseExpirationDateOffsetPeriod(int val)
            : base(Tags.LegOptionExerciseExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 41520;

        public LegOptionExerciseExpirationDateOffsetUnit()
            : base(Tags.LegOptionExerciseExpirationDateOffsetUnit) { }
        public LegOptionExerciseExpirationDateOffsetUnit(string val)
            : base(Tags.LegOptionExerciseExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegOptionExerciseExpirationFrequencyPeriod Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationFrequencyPeriod : IntField
    {
        public const int TAG = 41521;

        public LegOptionExerciseExpirationFrequencyPeriod()
            : base(Tags.LegOptionExerciseExpirationFrequencyPeriod) { }
        public LegOptionExerciseExpirationFrequencyPeriod(int val)
            : base(Tags.LegOptionExerciseExpirationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationFrequencyUnit Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationFrequencyUnit : StringField
    {
        public const int TAG = 41522;

        public LegOptionExerciseExpirationFrequencyUnit()
            : base(Tags.LegOptionExerciseExpirationFrequencyUnit) { }
        public LegOptionExerciseExpirationFrequencyUnit(string val)
            : base(Tags.LegOptionExerciseExpirationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegOptionExerciseExpirationRollConvention Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationRollConvention : StringField
    {
        public const int TAG = 41523;

        public LegOptionExerciseExpirationRollConvention()
            : base(Tags.LegOptionExerciseExpirationRollConvention) { }
        public LegOptionExerciseExpirationRollConvention(string val)
            : base(Tags.LegOptionExerciseExpirationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// LegOptionExerciseExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 41524;

        public LegOptionExerciseExpirationDateOffsetDayType()
            : base(Tags.LegOptionExerciseExpirationDateOffsetDayType) { }
        public LegOptionExerciseExpirationDateOffsetDayType(int val)
            : base(Tags.LegOptionExerciseExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegOptionExerciseExpirationTime Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationTime : StringField
    {
        public const int TAG = 41525;

        public LegOptionExerciseExpirationTime()
            : base(Tags.LegOptionExerciseExpirationTime) { }
        public LegOptionExerciseExpirationTime(string val)
            : base(Tags.LegOptionExerciseExpirationTime, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 41526;

        public LegOptionExerciseExpirationTimeBusinessCenter()
            : base(Tags.LegOptionExerciseExpirationTimeBusinessCenter) { }
        public LegOptionExerciseExpirationTimeBusinessCenter(string val)
            : base(Tags.LegOptionExerciseExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegOptionExerciseExpirationDates Field
    /// </summary>/
    public sealed class NoLegOptionExerciseExpirationDates : IntField
    {
        public const int TAG = 41527;

        public NoLegOptionExerciseExpirationDates()
            : base(Tags.NoLegOptionExerciseExpirationDates) { }
        public NoLegOptionExerciseExpirationDates(int val)
            : base(Tags.NoLegOptionExerciseExpirationDates, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDate Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDate : StringField
    {
        public const int TAG = 41528;

        public LegOptionExerciseExpirationDate()
            : base(Tags.LegOptionExerciseExpirationDate) { }
        public LegOptionExerciseExpirationDate(string val)
            : base(Tags.LegOptionExerciseExpirationDate, val) { }

    }


    /// <summary>
    /// LegOptionExerciseExpirationDateType Field
    /// </summary>/
    public sealed class LegOptionExerciseExpirationDateType : IntField
    {
        public const int TAG = 41529;

        public LegOptionExerciseExpirationDateType()
            : base(Tags.LegOptionExerciseExpirationDateType) { }
        public LegOptionExerciseExpirationDateType(int val)
            : base(Tags.LegOptionExerciseExpirationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoLegPaymentScheduleFixingDays Field
    /// </summary>/
    public sealed class NoLegPaymentScheduleFixingDays : IntField
    {
        public const int TAG = 41530;

        public NoLegPaymentScheduleFixingDays()
            : base(Tags.NoLegPaymentScheduleFixingDays) { }
        public NoLegPaymentScheduleFixingDays(int val)
            : base(Tags.NoLegPaymentScheduleFixingDays, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingDayOfWeek Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDayOfWeek : IntField
    {
        public const int TAG = 41531;

        public LegPaymentScheduleFixingDayOfWeek()
            : base(Tags.LegPaymentScheduleFixingDayOfWeek) { }
        public LegPaymentScheduleFixingDayOfWeek(int val)
            : base(Tags.LegPaymentScheduleFixingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// LegPaymentScheduleFixingDayNumber Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDayNumber : IntField
    {
        public const int TAG = 41532;

        public LegPaymentScheduleFixingDayNumber()
            : base(Tags.LegPaymentScheduleFixingDayNumber) { }
        public LegPaymentScheduleFixingDayNumber(int val)
            : base(Tags.LegPaymentScheduleFixingDayNumber, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleXID Field
    /// </summary>/
    public sealed class LegPaymentScheduleXID : StringField
    {
        public const int TAG = 41533;

        public LegPaymentScheduleXID()
            : base(Tags.LegPaymentScheduleXID) { }
        public LegPaymentScheduleXID(string val)
            : base(Tags.LegPaymentScheduleXID, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleXIDRef Field
    /// </summary>/
    public sealed class LegPaymentScheduleXIDRef : StringField
    {
        public const int TAG = 41534;

        public LegPaymentScheduleXIDRef()
            : base(Tags.LegPaymentScheduleXIDRef) { }
        public LegPaymentScheduleXIDRef(string val)
            : base(Tags.LegPaymentScheduleXIDRef, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateCurrency Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateCurrency : StringField
    {
        public const int TAG = 41535;

        public LegPaymentScheduleRateCurrency()
            : base(Tags.LegPaymentScheduleRateCurrency) { }
        public LegPaymentScheduleRateCurrency(string val)
            : base(Tags.LegPaymentScheduleRateCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateUnitOfMeasure : StringField
    {
        public const int TAG = 41536;

        public LegPaymentScheduleRateUnitOfMeasure()
            : base(Tags.LegPaymentScheduleRateUnitOfMeasure) { }
        public LegPaymentScheduleRateUnitOfMeasure(string val)
            : base(Tags.LegPaymentScheduleRateUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentScheduleRateConversionFactor Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateConversionFactor : DecimalField
    {
        public const int TAG = 41537;

        public LegPaymentScheduleRateConversionFactor()
            : base(Tags.LegPaymentScheduleRateConversionFactor) { }
        public LegPaymentScheduleRateConversionFactor(Decimal val)
            : base(Tags.LegPaymentScheduleRateConversionFactor, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleRateSpreadType Field
    /// </summary>/
    public sealed class LegPaymentScheduleRateSpreadType : IntField
    {
        public const int TAG = 41538;

        public LegPaymentScheduleRateSpreadType()
            : base(Tags.LegPaymentScheduleRateSpreadType) { }
        public LegPaymentScheduleRateSpreadType(int val)
            : base(Tags.LegPaymentScheduleRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// LegPaymentScheduleSettlPeriodPrice Field
    /// </summary>/
    public sealed class LegPaymentScheduleSettlPeriodPrice : DecimalField
    {
        public const int TAG = 41539;

        public LegPaymentScheduleSettlPeriodPrice()
            : base(Tags.LegPaymentScheduleSettlPeriodPrice) { }
        public LegPaymentScheduleSettlPeriodPrice(Decimal val)
            : base(Tags.LegPaymentScheduleSettlPeriodPrice, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleSettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class LegPaymentScheduleSettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 41540;

        public LegPaymentScheduleSettlPeriodPriceCurrency()
            : base(Tags.LegPaymentScheduleSettlPeriodPriceCurrency) { }
        public LegPaymentScheduleSettlPeriodPriceCurrency(string val)
            : base(Tags.LegPaymentScheduleSettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleSettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentScheduleSettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 41541;

        public LegPaymentScheduleSettlPeriodPriceUnitOfMeasure()
            : base(Tags.LegPaymentScheduleSettlPeriodPriceUnitOfMeasure) { }
        public LegPaymentScheduleSettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.LegPaymentScheduleSettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentScheduleStepUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentScheduleStepUnitOfMeasure : StringField
    {
        public const int TAG = 41542;

        public LegPaymentScheduleStepUnitOfMeasure()
            : base(Tags.LegPaymentScheduleStepUnitOfMeasure) { }
        public LegPaymentScheduleStepUnitOfMeasure(string val)
            : base(Tags.LegPaymentScheduleStepUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentScheduleFixingDayDistribution Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDayDistribution : IntField
    {
        public const int TAG = 41543;

        public LegPaymentScheduleFixingDayDistribution()
            : base(Tags.LegPaymentScheduleFixingDayDistribution) { }
        public LegPaymentScheduleFixingDayDistribution(int val)
            : base(Tags.LegPaymentScheduleFixingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// LegPaymentScheduleFixingDayCount Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingDayCount : IntField
    {
        public const int TAG = 41544;

        public LegPaymentScheduleFixingDayCount()
            : base(Tags.LegPaymentScheduleFixingDayCount) { }
        public LegPaymentScheduleFixingDayCount(int val)
            : base(Tags.LegPaymentScheduleFixingDayCount, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingLagPeriod Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingLagPeriod : IntField
    {
        public const int TAG = 41545;

        public LegPaymentScheduleFixingLagPeriod()
            : base(Tags.LegPaymentScheduleFixingLagPeriod) { }
        public LegPaymentScheduleFixingLagPeriod(int val)
            : base(Tags.LegPaymentScheduleFixingLagPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingLagUnit Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingLagUnit : StringField
    {
        public const int TAG = 41546;

        public LegPaymentScheduleFixingLagUnit()
            : base(Tags.LegPaymentScheduleFixingLagUnit) { }
        public LegPaymentScheduleFixingLagUnit(string val)
            : base(Tags.LegPaymentScheduleFixingLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentScheduleFixingFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41547;

        public LegPaymentScheduleFixingFirstObservationDateOffsetPeriod()
            : base(Tags.LegPaymentScheduleFixingFirstObservationDateOffsetPeriod) { }
        public LegPaymentScheduleFixingFirstObservationDateOffsetPeriod(int val)
            : base(Tags.LegPaymentScheduleFixingFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentScheduleFixingFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentScheduleFixingFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41548;

        public LegPaymentScheduleFixingFirstObservationDateOffsetUnit()
            : base(Tags.LegPaymentScheduleFixingFirstObservationDateOffsetUnit) { }
        public LegPaymentScheduleFixingFirstObservationDateOffsetUnit(string val)
            : base(Tags.LegPaymentScheduleFixingFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamFlatRateIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamFlatRateIndicator : BooleanField
    {
        public const int TAG = 41549;

        public LegPaymentStreamFlatRateIndicator()
            : base(Tags.LegPaymentStreamFlatRateIndicator) { }
        public LegPaymentStreamFlatRateIndicator(Boolean val)
            : base(Tags.LegPaymentStreamFlatRateIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFlatRateAmount Field
    /// </summary>/
    public sealed class LegPaymentStreamFlatRateAmount : DecimalField
    {
        public const int TAG = 41550;

        public LegPaymentStreamFlatRateAmount()
            : base(Tags.LegPaymentStreamFlatRateAmount) { }
        public LegPaymentStreamFlatRateAmount(Decimal val)
            : base(Tags.LegPaymentStreamFlatRateAmount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFlatRateCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamFlatRateCurrency : StringField
    {
        public const int TAG = 41551;

        public LegPaymentStreamFlatRateCurrency()
            : base(Tags.LegPaymentStreamFlatRateCurrency) { }
        public LegPaymentStreamFlatRateCurrency(string val)
            : base(Tags.LegPaymentStreamFlatRateCurrency, val) { }

    }


    /// <summary>
    /// LegStreamMaximumPaymentAmount Field
    /// </summary>/
    public sealed class LegStreamMaximumPaymentAmount : DecimalField
    {
        public const int TAG = 41552;

        public LegStreamMaximumPaymentAmount()
            : base(Tags.LegStreamMaximumPaymentAmount) { }
        public LegStreamMaximumPaymentAmount(Decimal val)
            : base(Tags.LegStreamMaximumPaymentAmount, val) { }

    }


    /// <summary>
    /// LegStreamMaximumPaymentCurrency Field
    /// </summary>/
    public sealed class LegStreamMaximumPaymentCurrency : StringField
    {
        public const int TAG = 41553;

        public LegStreamMaximumPaymentCurrency()
            : base(Tags.LegStreamMaximumPaymentCurrency) { }
        public LegStreamMaximumPaymentCurrency(string val)
            : base(Tags.LegStreamMaximumPaymentCurrency, val) { }

    }


    /// <summary>
    /// LegStreamMaximumTransactionAmount Field
    /// </summary>/
    public sealed class LegStreamMaximumTransactionAmount : DecimalField
    {
        public const int TAG = 41554;

        public LegStreamMaximumTransactionAmount()
            : base(Tags.LegStreamMaximumTransactionAmount) { }
        public LegStreamMaximumTransactionAmount(Decimal val)
            : base(Tags.LegStreamMaximumTransactionAmount, val) { }

    }


    /// <summary>
    /// LegStreamMaximumTransactionCurrency Field
    /// </summary>/
    public sealed class LegStreamMaximumTransactionCurrency : StringField
    {
        public const int TAG = 41555;

        public LegStreamMaximumTransactionCurrency()
            : base(Tags.LegStreamMaximumTransactionCurrency) { }
        public LegStreamMaximumTransactionCurrency(string val)
            : base(Tags.LegStreamMaximumTransactionCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixedAmountUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentStreamFixedAmountUnitOfMeasure : StringField
    {
        public const int TAG = 41556;

        public LegPaymentStreamFixedAmountUnitOfMeasure()
            : base(Tags.LegPaymentStreamFixedAmountUnitOfMeasure) { }
        public LegPaymentStreamFixedAmountUnitOfMeasure(string val)
            : base(Tags.LegPaymentStreamFixedAmountUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentStreamTotalFixedAmount Field
    /// </summary>/
    public sealed class LegPaymentStreamTotalFixedAmount : DecimalField
    {
        public const int TAG = 41557;

        public LegPaymentStreamTotalFixedAmount()
            : base(Tags.LegPaymentStreamTotalFixedAmount) { }
        public LegPaymentStreamTotalFixedAmount(Decimal val)
            : base(Tags.LegPaymentStreamTotalFixedAmount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamWorldScaleRate Field
    /// </summary>/
    public sealed class LegPaymentStreamWorldScaleRate : DecimalField
    {
        public const int TAG = 41558;

        public LegPaymentStreamWorldScaleRate()
            : base(Tags.LegPaymentStreamWorldScaleRate) { }
        public LegPaymentStreamWorldScaleRate(Decimal val)
            : base(Tags.LegPaymentStreamWorldScaleRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamContractPrice Field
    /// </summary>/
    public sealed class LegPaymentStreamContractPrice : DecimalField
    {
        public const int TAG = 41559;

        public LegPaymentStreamContractPrice()
            : base(Tags.LegPaymentStreamContractPrice) { }
        public LegPaymentStreamContractPrice(Decimal val)
            : base(Tags.LegPaymentStreamContractPrice, val) { }

    }


    /// <summary>
    /// LegPaymentStreamContractPriceCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamContractPriceCurrency : StringField
    {
        public const int TAG = 41560;

        public LegPaymentStreamContractPriceCurrency()
            : base(Tags.LegPaymentStreamContractPriceCurrency) { }
        public LegPaymentStreamContractPriceCurrency(string val)
            : base(Tags.LegPaymentStreamContractPriceCurrency, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamPricingBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamPricingBusinessCenters : IntField
    {
        public const int TAG = 41561;

        public NoLegPaymentStreamPricingBusinessCenters()
            : base(Tags.NoLegPaymentStreamPricingBusinessCenters) { }
        public NoLegPaymentStreamPricingBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamPricingBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingBusinessCenter : StringField
    {
        public const int TAG = 41562;

        public LegPaymentStreamPricingBusinessCenter()
            : base(Tags.LegPaymentStreamPricingBusinessCenter) { }
        public LegPaymentStreamPricingBusinessCenter(string val)
            : base(Tags.LegPaymentStreamPricingBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndex2CurveUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndex2CurveUnit : StringField
    {
        public const int TAG = 41563;

        public LegPaymentStreamRateIndex2CurveUnit()
            : base(Tags.LegPaymentStreamRateIndex2CurveUnit) { }
        public LegPaymentStreamRateIndex2CurveUnit(string val)
            : base(Tags.LegPaymentStreamRateIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamRateIndex2CurvePeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndex2CurvePeriod : IntField
    {
        public const int TAG = 41564;

        public LegPaymentStreamRateIndex2CurvePeriod()
            : base(Tags.LegPaymentStreamRateIndex2CurvePeriod) { }
        public LegPaymentStreamRateIndex2CurvePeriod(int val)
            : base(Tags.LegPaymentStreamRateIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexLocation Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexLocation : StringField
    {
        public const int TAG = 41565;

        public LegPaymentStreamRateIndexLocation()
            : base(Tags.LegPaymentStreamRateIndexLocation) { }
        public LegPaymentStreamRateIndexLocation(string val)
            : base(Tags.LegPaymentStreamRateIndexLocation, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexLevel Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexLevel : DecimalField
    {
        public const int TAG = 41566;

        public LegPaymentStreamRateIndexLevel()
            : base(Tags.LegPaymentStreamRateIndexLevel) { }
        public LegPaymentStreamRateIndexLevel(Decimal val)
            : base(Tags.LegPaymentStreamRateIndexLevel, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexUnitOfMeasure : StringField
    {
        public const int TAG = 41567;

        public LegPaymentStreamRateIndexUnitOfMeasure()
            : base(Tags.LegPaymentStreamRateIndexUnitOfMeasure) { }
        public LegPaymentStreamRateIndexUnitOfMeasure(string val)
            : base(Tags.LegPaymentStreamRateIndexUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentStreamSettlLevel Field
    /// </summary>/
    public sealed class LegPaymentStreamSettlLevel : IntField
    {
        public const int TAG = 41568;

        public LegPaymentStreamSettlLevel()
            : base(Tags.LegPaymentStreamSettlLevel) { }
        public LegPaymentStreamSettlLevel(int val)
            : base(Tags.LegPaymentStreamSettlLevel, val) { }


        // Field Enumerations
        public const int AVERAGE = 0;
        public const int MAXIMUM = 1;
        public const int MINIMUM = 2;
        public const int CUMULATIVE = 3;
    }


    /// <summary>
    /// LegPaymentStreamReferenceLevel Field
    /// </summary>/
    public sealed class LegPaymentStreamReferenceLevel : DecimalField
    {
        public const int TAG = 41569;

        public LegPaymentStreamReferenceLevel()
            : base(Tags.LegPaymentStreamReferenceLevel) { }
        public LegPaymentStreamReferenceLevel(Decimal val)
            : base(Tags.LegPaymentStreamReferenceLevel, val) { }

    }


    /// <summary>
    /// LegPaymentStreamReferenceLevelUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentStreamReferenceLevelUnitOfMeasure : StringField
    {
        public const int TAG = 41570;

        public LegPaymentStreamReferenceLevelUnitOfMeasure()
            : base(Tags.LegPaymentStreamReferenceLevelUnitOfMeasure) { }
        public LegPaymentStreamReferenceLevelUnitOfMeasure(string val)
            : base(Tags.LegPaymentStreamReferenceLevelUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentStreamReferenceLevelEqualsZeroIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamReferenceLevelEqualsZeroIndicator : BooleanField
    {
        public const int TAG = 41571;

        public LegPaymentStreamReferenceLevelEqualsZeroIndicator()
            : base(Tags.LegPaymentStreamReferenceLevelEqualsZeroIndicator) { }
        public LegPaymentStreamReferenceLevelEqualsZeroIndicator(Boolean val)
            : base(Tags.LegPaymentStreamReferenceLevelEqualsZeroIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateSpreadCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamRateSpreadCurrency : StringField
    {
        public const int TAG = 41572;

        public LegPaymentStreamRateSpreadCurrency()
            : base(Tags.LegPaymentStreamRateSpreadCurrency) { }
        public LegPaymentStreamRateSpreadCurrency(string val)
            : base(Tags.LegPaymentStreamRateSpreadCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateSpreadUnitOfMeasure Field
    /// </summary>/
    public sealed class LegPaymentStreamRateSpreadUnitOfMeasure : StringField
    {
        public const int TAG = 41573;

        public LegPaymentStreamRateSpreadUnitOfMeasure()
            : base(Tags.LegPaymentStreamRateSpreadUnitOfMeasure) { }
        public LegPaymentStreamRateSpreadUnitOfMeasure(string val)
            : base(Tags.LegPaymentStreamRateSpreadUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegPaymentStreamRateConversionFactor Field
    /// </summary>/
    public sealed class LegPaymentStreamRateConversionFactor : DecimalField
    {
        public const int TAG = 41574;

        public LegPaymentStreamRateConversionFactor()
            : base(Tags.LegPaymentStreamRateConversionFactor) { }
        public LegPaymentStreamRateConversionFactor(Decimal val)
            : base(Tags.LegPaymentStreamRateConversionFactor, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateSpreadType Field
    /// </summary>/
    public sealed class LegPaymentStreamRateSpreadType : IntField
    {
        public const int TAG = 41575;

        public LegPaymentStreamRateSpreadType()
            : base(Tags.LegPaymentStreamRateSpreadType) { }
        public LegPaymentStreamRateSpreadType(int val)
            : base(Tags.LegPaymentStreamRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// LegPaymentStreamLastResetRate Field
    /// </summary>/
    public sealed class LegPaymentStreamLastResetRate : DecimalField
    {
        public const int TAG = 41576;

        public LegPaymentStreamLastResetRate()
            : base(Tags.LegPaymentStreamLastResetRate) { }
        public LegPaymentStreamLastResetRate(Decimal val)
            : base(Tags.LegPaymentStreamLastResetRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalRate Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalRate : DecimalField
    {
        public const int TAG = 41577;

        public LegPaymentStreamFinalRate()
            : base(Tags.LegPaymentStreamFinalRate) { }
        public LegPaymentStreamFinalRate(Decimal val)
            : base(Tags.LegPaymentStreamFinalRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCalculationLagPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCalculationLagPeriod : IntField
    {
        public const int TAG = 41578;

        public LegPaymentStreamCalculationLagPeriod()
            : base(Tags.LegPaymentStreamCalculationLagPeriod) { }
        public LegPaymentStreamCalculationLagPeriod(int val)
            : base(Tags.LegPaymentStreamCalculationLagPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCalculationLagUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCalculationLagUnit : StringField
    {
        public const int TAG = 41579;

        public LegPaymentStreamCalculationLagUnit()
            : base(Tags.LegPaymentStreamCalculationLagUnit) { }
        public LegPaymentStreamCalculationLagUnit(string val)
            : base(Tags.LegPaymentStreamCalculationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41580;

        public LegPaymentStreamFirstObservationDateOffsetPeriod()
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetPeriod) { }
        public LegPaymentStreamFirstObservationDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41581;

        public LegPaymentStreamFirstObservationDateOffsetUnit()
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetUnit) { }
        public LegPaymentStreamFirstObservationDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamPricingDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDayType : IntField
    {
        public const int TAG = 41582;

        public LegPaymentStreamPricingDayType()
            : base(Tags.LegPaymentStreamPricingDayType) { }
        public LegPaymentStreamPricingDayType(int val)
            : base(Tags.LegPaymentStreamPricingDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamPricingDayDistribution Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDayDistribution : IntField
    {
        public const int TAG = 41583;

        public LegPaymentStreamPricingDayDistribution()
            : base(Tags.LegPaymentStreamPricingDayDistribution) { }
        public LegPaymentStreamPricingDayDistribution(int val)
            : base(Tags.LegPaymentStreamPricingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// LegPaymentStreamPricingDayCount Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDayCount : IntField
    {
        public const int TAG = 41584;

        public LegPaymentStreamPricingDayCount()
            : base(Tags.LegPaymentStreamPricingDayCount) { }
        public LegPaymentStreamPricingDayCount(int val)
            : base(Tags.LegPaymentStreamPricingDayCount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingBusinessCalendar Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingBusinessCalendar : StringField
    {
        public const int TAG = 41585;

        public LegPaymentStreamPricingBusinessCalendar()
            : base(Tags.LegPaymentStreamPricingBusinessCalendar) { }
        public LegPaymentStreamPricingBusinessCalendar(string val)
            : base(Tags.LegPaymentStreamPricingBusinessCalendar, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingBusinessDayConvention : IntField
    {
        public const int TAG = 41586;

        public LegPaymentStreamPricingBusinessDayConvention()
            : base(Tags.LegPaymentStreamPricingBusinessDayConvention) { }
        public LegPaymentStreamPricingBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamPricingBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamRiskApportionmentSource Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamRiskApportionmentSource : StringField
    {
        public const int TAG = 41587;

        public UnderlyingDeliveryStreamRiskApportionmentSource()
            : base(Tags.UnderlyingDeliveryStreamRiskApportionmentSource) { }
        public UnderlyingDeliveryStreamRiskApportionmentSource(string val)
            : base(Tags.UnderlyingDeliveryStreamRiskApportionmentSource, val) { }

    }


    /// <summary>
    /// StreamCommoditySettlTimeType Field
    /// </summary>/
    public sealed class StreamCommoditySettlTimeType : IntField
    {
        public const int TAG = 41588;

        public StreamCommoditySettlTimeType()
            : base(Tags.StreamCommoditySettlTimeType) { }
        public StreamCommoditySettlTimeType(int val)
            : base(Tags.StreamCommoditySettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// NoLegPaymentStreamPaymentDates Field
    /// </summary>/
    public sealed class NoLegPaymentStreamPaymentDates : IntField
    {
        public const int TAG = 41589;

        public NoLegPaymentStreamPaymentDates()
            : base(Tags.NoLegPaymentStreamPaymentDates) { }
        public NoLegPaymentStreamPaymentDates(int val)
            : base(Tags.NoLegPaymentStreamPaymentDates, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDate Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDate : StringField
    {
        public const int TAG = 41590;

        public LegPaymentStreamPaymentDate()
            : base(Tags.LegPaymentStreamPaymentDate) { }
        public LegPaymentStreamPaymentDate(string val)
            : base(Tags.LegPaymentStreamPaymentDate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPaymentDateType Field
    /// </summary>/
    public sealed class LegPaymentStreamPaymentDateType : IntField
    {
        public const int TAG = 41591;

        public LegPaymentStreamPaymentDateType()
            : base(Tags.LegPaymentStreamPaymentDateType) { }
        public LegPaymentStreamPaymentDateType(int val)
            : base(Tags.LegPaymentStreamPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegPaymentStreamMasterAgreementPaymentDatesIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamMasterAgreementPaymentDatesIndicator : BooleanField
    {
        public const int TAG = 41592;

        public LegPaymentStreamMasterAgreementPaymentDatesIndicator()
            : base(Tags.LegPaymentStreamMasterAgreementPaymentDatesIndicator) { }
        public LegPaymentStreamMasterAgreementPaymentDatesIndicator(Boolean val)
            : base(Tags.LegPaymentStreamMasterAgreementPaymentDatesIndicator, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamPricingDates Field
    /// </summary>/
    public sealed class NoLegPaymentStreamPricingDates : IntField
    {
        public const int TAG = 41593;

        public NoLegPaymentStreamPricingDates()
            : base(Tags.NoLegPaymentStreamPricingDates) { }
        public NoLegPaymentStreamPricingDates(int val)
            : base(Tags.NoLegPaymentStreamPricingDates, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingDate Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDate : StringField
    {
        public const int TAG = 41594;

        public LegPaymentStreamPricingDate()
            : base(Tags.LegPaymentStreamPricingDate) { }
        public LegPaymentStreamPricingDate(string val)
            : base(Tags.LegPaymentStreamPricingDate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingDateType Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDateType : IntField
    {
        public const int TAG = 41595;

        public LegPaymentStreamPricingDateType()
            : base(Tags.LegPaymentStreamPricingDateType) { }
        public LegPaymentStreamPricingDateType(int val)
            : base(Tags.LegPaymentStreamPricingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoLegPaymentStreamPricingDays Field
    /// </summary>/
    public sealed class NoLegPaymentStreamPricingDays : IntField
    {
        public const int TAG = 41596;

        public NoLegPaymentStreamPricingDays()
            : base(Tags.NoLegPaymentStreamPricingDays) { }
        public NoLegPaymentStreamPricingDays(int val)
            : base(Tags.NoLegPaymentStreamPricingDays, val) { }

    }


    /// <summary>
    /// LegPaymentStreamPricingDayOfWeek Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDayOfWeek : IntField
    {
        public const int TAG = 41597;

        public LegPaymentStreamPricingDayOfWeek()
            : base(Tags.LegPaymentStreamPricingDayOfWeek) { }
        public LegPaymentStreamPricingDayOfWeek(int val)
            : base(Tags.LegPaymentStreamPricingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamPricingDayNumber Field
    /// </summary>/
    public sealed class LegPaymentStreamPricingDayNumber : IntField
    {
        public const int TAG = 41598;

        public LegPaymentStreamPricingDayNumber()
            : base(Tags.LegPaymentStreamPricingDayNumber) { }
        public LegPaymentStreamPricingDayNumber(int val)
            : base(Tags.LegPaymentStreamPricingDayNumber, val) { }

    }


    /// <summary>
    /// NoLegPhysicalSettlTerms Field
    /// </summary>/
    public sealed class NoLegPhysicalSettlTerms : IntField
    {
        public const int TAG = 41599;

        public NoLegPhysicalSettlTerms()
            : base(Tags.NoLegPhysicalSettlTerms) { }
        public NoLegPhysicalSettlTerms(int val)
            : base(Tags.NoLegPhysicalSettlTerms, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlTermXID Field
    /// </summary>/
    public sealed class LegPhysicalSettlTermXID : StringField
    {
        public const int TAG = 41600;

        public LegPhysicalSettlTermXID()
            : base(Tags.LegPhysicalSettlTermXID) { }
        public LegPhysicalSettlTermXID(string val)
            : base(Tags.LegPhysicalSettlTermXID, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlCurency Field
    /// </summary>/
    public sealed class LegPhysicalSettlCurency : StringField
    {
        public const int TAG = 41601;

        public LegPhysicalSettlCurency()
            : base(Tags.LegPhysicalSettlCurency) { }
        public LegPhysicalSettlCurency(string val)
            : base(Tags.LegPhysicalSettlCurency, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlBusinessDays Field
    /// </summary>/
    public sealed class LegPhysicalSettlBusinessDays : IntField
    {
        public const int TAG = 41602;

        public LegPhysicalSettlBusinessDays()
            : base(Tags.LegPhysicalSettlBusinessDays) { }
        public LegPhysicalSettlBusinessDays(int val)
            : base(Tags.LegPhysicalSettlBusinessDays, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlMaximumBusinessDays Field
    /// </summary>/
    public sealed class LegPhysicalSettlMaximumBusinessDays : IntField
    {
        public const int TAG = 41603;

        public LegPhysicalSettlMaximumBusinessDays()
            : base(Tags.LegPhysicalSettlMaximumBusinessDays) { }
        public LegPhysicalSettlMaximumBusinessDays(int val)
            : base(Tags.LegPhysicalSettlMaximumBusinessDays, val) { }

    }


    /// <summary>
    /// NoLegPhysicalSettlDeliverableObligations Field
    /// </summary>/
    public sealed class NoLegPhysicalSettlDeliverableObligations : IntField
    {
        public const int TAG = 41604;

        public NoLegPhysicalSettlDeliverableObligations()
            : base(Tags.NoLegPhysicalSettlDeliverableObligations) { }
        public NoLegPhysicalSettlDeliverableObligations(int val)
            : base(Tags.NoLegPhysicalSettlDeliverableObligations, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlDeliverableObligationType Field
    /// </summary>/
    public sealed class LegPhysicalSettlDeliverableObligationType : StringField
    {
        public const int TAG = 41605;

        public LegPhysicalSettlDeliverableObligationType()
            : base(Tags.LegPhysicalSettlDeliverableObligationType) { }
        public LegPhysicalSettlDeliverableObligationType(string val)
            : base(Tags.LegPhysicalSettlDeliverableObligationType, val) { }

    }


    /// <summary>
    /// LegPhysicalSettlDeliverableObligationValue Field
    /// </summary>/
    public sealed class LegPhysicalSettlDeliverableObligationValue : StringField
    {
        public const int TAG = 41606;

        public LegPhysicalSettlDeliverableObligationValue()
            : base(Tags.LegPhysicalSettlDeliverableObligationValue) { }
        public LegPhysicalSettlDeliverableObligationValue(string val)
            : base(Tags.LegPhysicalSettlDeliverableObligationValue, val) { }

    }


    /// <summary>
    /// NoLegPricingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPricingDateBusinessCenters : IntField
    {
        public const int TAG = 41607;

        public NoLegPricingDateBusinessCenters()
            : base(Tags.NoLegPricingDateBusinessCenters) { }
        public NoLegPricingDateBusinessCenters(int val)
            : base(Tags.NoLegPricingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPricingDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPricingDateBusinessCenter : StringField
    {
        public const int TAG = 41608;

        public LegPricingDateBusinessCenter()
            : base(Tags.LegPricingDateBusinessCenter) { }
        public LegPricingDateBusinessCenter(string val)
            : base(Tags.LegPricingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPricingDateUnadjusted Field
    /// </summary>/
    public sealed class LegPricingDateUnadjusted : StringField
    {
        public const int TAG = 41609;

        public LegPricingDateUnadjusted()
            : base(Tags.LegPricingDateUnadjusted) { }
        public LegPricingDateUnadjusted(string val)
            : base(Tags.LegPricingDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPricingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPricingDateBusinessDayConvention : IntField
    {
        public const int TAG = 41610;

        public LegPricingDateBusinessDayConvention()
            : base(Tags.LegPricingDateBusinessDayConvention) { }
        public LegPricingDateBusinessDayConvention(int val)
            : base(Tags.LegPricingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPricingDateAdjusted Field
    /// </summary>/
    public sealed class LegPricingDateAdjusted : StringField
    {
        public const int TAG = 41611;

        public LegPricingDateAdjusted()
            : base(Tags.LegPricingDateAdjusted) { }
        public LegPricingDateAdjusted(string val)
            : base(Tags.LegPricingDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPricingTime Field
    /// </summary>/
    public sealed class LegPricingTime : StringField
    {
        public const int TAG = 41612;

        public LegPricingTime()
            : base(Tags.LegPricingTime) { }
        public LegPricingTime(string val)
            : base(Tags.LegPricingTime, val) { }

    }


    /// <summary>
    /// LegPricingTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegPricingTimeBusinessCenter : StringField
    {
        public const int TAG = 41613;

        public LegPricingTimeBusinessCenter()
            : base(Tags.LegPricingTimeBusinessCenter) { }
        public LegPricingTimeBusinessCenter(string val)
            : base(Tags.LegPricingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegProtectionTermEventNewsSources Field
    /// </summary>/
    public sealed class NoLegProtectionTermEventNewsSources : IntField
    {
        public const int TAG = 41614;

        public NoLegProtectionTermEventNewsSources()
            : base(Tags.NoLegProtectionTermEventNewsSources) { }
        public NoLegProtectionTermEventNewsSources(int val)
            : base(Tags.NoLegProtectionTermEventNewsSources, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventNewsSource Field
    /// </summary>/
    public sealed class LegProtectionTermEventNewsSource : StringField
    {
        public const int TAG = 41615;

        public LegProtectionTermEventNewsSource()
            : base(Tags.LegProtectionTermEventNewsSource) { }
        public LegProtectionTermEventNewsSource(string val)
            : base(Tags.LegProtectionTermEventNewsSource, val) { }

    }


    /// <summary>
    /// NoLegProtectionTerms Field
    /// </summary>/
    public sealed class NoLegProtectionTerms : IntField
    {
        public const int TAG = 41616;

        public NoLegProtectionTerms()
            : base(Tags.NoLegProtectionTerms) { }
        public NoLegProtectionTerms(int val)
            : base(Tags.NoLegProtectionTerms, val) { }

    }


    /// <summary>
    /// LegProtectionTermXID Field
    /// </summary>/
    public sealed class LegProtectionTermXID : StringField
    {
        public const int TAG = 41617;

        public LegProtectionTermXID()
            : base(Tags.LegProtectionTermXID) { }
        public LegProtectionTermXID(string val)
            : base(Tags.LegProtectionTermXID, val) { }

    }


    /// <summary>
    /// LegProtectionTermNotional Field
    /// </summary>/
    public sealed class LegProtectionTermNotional : DecimalField
    {
        public const int TAG = 41618;

        public LegProtectionTermNotional()
            : base(Tags.LegProtectionTermNotional) { }
        public LegProtectionTermNotional(Decimal val)
            : base(Tags.LegProtectionTermNotional, val) { }

    }


    /// <summary>
    /// LegProtectionTermCurrency Field
    /// </summary>/
    public sealed class LegProtectionTermCurrency : StringField
    {
        public const int TAG = 41619;

        public LegProtectionTermCurrency()
            : base(Tags.LegProtectionTermCurrency) { }
        public LegProtectionTermCurrency(string val)
            : base(Tags.LegProtectionTermCurrency, val) { }

    }


    /// <summary>
    /// LegProtectionTermSellerNotifies Field
    /// </summary>/
    public sealed class LegProtectionTermSellerNotifies : BooleanField
    {
        public const int TAG = 41620;

        public LegProtectionTermSellerNotifies()
            : base(Tags.LegProtectionTermSellerNotifies) { }
        public LegProtectionTermSellerNotifies(Boolean val)
            : base(Tags.LegProtectionTermSellerNotifies, val) { }

    }


    /// <summary>
    /// LegProtectionTermBuyerNotifies Field
    /// </summary>/
    public sealed class LegProtectionTermBuyerNotifies : BooleanField
    {
        public const int TAG = 41621;

        public LegProtectionTermBuyerNotifies()
            : base(Tags.LegProtectionTermBuyerNotifies) { }
        public LegProtectionTermBuyerNotifies(Boolean val)
            : base(Tags.LegProtectionTermBuyerNotifies, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventBusinessCenter Field
    /// </summary>/
    public sealed class LegProtectionTermEventBusinessCenter : StringField
    {
        public const int TAG = 41622;

        public LegProtectionTermEventBusinessCenter()
            : base(Tags.LegProtectionTermEventBusinessCenter) { }
        public LegProtectionTermEventBusinessCenter(string val)
            : base(Tags.LegProtectionTermEventBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProtectionTermStandardSources Field
    /// </summary>/
    public sealed class LegProtectionTermStandardSources : BooleanField
    {
        public const int TAG = 41623;

        public LegProtectionTermStandardSources()
            : base(Tags.LegProtectionTermStandardSources) { }
        public LegProtectionTermStandardSources(Boolean val)
            : base(Tags.LegProtectionTermStandardSources, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventMinimumSources Field
    /// </summary>/
    public sealed class LegProtectionTermEventMinimumSources : IntField
    {
        public const int TAG = 41624;

        public LegProtectionTermEventMinimumSources()
            : base(Tags.LegProtectionTermEventMinimumSources) { }
        public LegProtectionTermEventMinimumSources(int val)
            : base(Tags.LegProtectionTermEventMinimumSources, val) { }

    }


    /// <summary>
    /// NoLegProtectionTermEvents Field
    /// </summary>/
    public sealed class NoLegProtectionTermEvents : IntField
    {
        public const int TAG = 41625;

        public NoLegProtectionTermEvents()
            : base(Tags.NoLegProtectionTermEvents) { }
        public NoLegProtectionTermEvents(int val)
            : base(Tags.NoLegProtectionTermEvents, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventType Field
    /// </summary>/
    public sealed class LegProtectionTermEventType : StringField
    {
        public const int TAG = 41626;

        public LegProtectionTermEventType()
            : base(Tags.LegProtectionTermEventType) { }
        public LegProtectionTermEventType(string val)
            : base(Tags.LegProtectionTermEventType, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventValue Field
    /// </summary>/
    public sealed class LegProtectionTermEventValue : StringField
    {
        public const int TAG = 41627;

        public LegProtectionTermEventValue()
            : base(Tags.LegProtectionTermEventValue) { }
        public LegProtectionTermEventValue(string val)
            : base(Tags.LegProtectionTermEventValue, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventCurrency Field
    /// </summary>/
    public sealed class LegProtectionTermEventCurrency : StringField
    {
        public const int TAG = 41628;

        public LegProtectionTermEventCurrency()
            : base(Tags.LegProtectionTermEventCurrency) { }
        public LegProtectionTermEventCurrency(string val)
            : base(Tags.LegProtectionTermEventCurrency, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventPeriod Field
    /// </summary>/
    public sealed class LegProtectionTermEventPeriod : IntField
    {
        public const int TAG = 41629;

        public LegProtectionTermEventPeriod()
            : base(Tags.LegProtectionTermEventPeriod) { }
        public LegProtectionTermEventPeriod(int val)
            : base(Tags.LegProtectionTermEventPeriod, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventUnit Field
    /// </summary>/
    public sealed class LegProtectionTermEventUnit : StringField
    {
        public const int TAG = 41630;

        public LegProtectionTermEventUnit()
            : base(Tags.LegProtectionTermEventUnit) { }
        public LegProtectionTermEventUnit(string val)
            : base(Tags.LegProtectionTermEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegProtectionTermEventDayType Field
    /// </summary>/
    public sealed class LegProtectionTermEventDayType : IntField
    {
        public const int TAG = 41631;

        public LegProtectionTermEventDayType()
            : base(Tags.LegProtectionTermEventDayType) { }
        public LegProtectionTermEventDayType(int val)
            : base(Tags.LegProtectionTermEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegProtectionTermEventRateSource Field
    /// </summary>/
    public sealed class LegProtectionTermEventRateSource : StringField
    {
        public const int TAG = 41632;

        public LegProtectionTermEventRateSource()
            : base(Tags.LegProtectionTermEventRateSource) { }
        public LegProtectionTermEventRateSource(string val)
            : base(Tags.LegProtectionTermEventRateSource, val) { }

    }


    /// <summary>
    /// NoLegProtectionTermEventQualifiers Field
    /// </summary>/
    public sealed class NoLegProtectionTermEventQualifiers : IntField
    {
        public const int TAG = 41633;

        public NoLegProtectionTermEventQualifiers()
            : base(Tags.NoLegProtectionTermEventQualifiers) { }
        public NoLegProtectionTermEventQualifiers(int val)
            : base(Tags.NoLegProtectionTermEventQualifiers, val) { }

    }


    /// <summary>
    /// LegProtectionTermEventQualifier Field
    /// </summary>/
    public sealed class LegProtectionTermEventQualifier : CharField
    {
        public const int TAG = 41634;

        public LegProtectionTermEventQualifier()
            : base(Tags.LegProtectionTermEventQualifier) { }
        public LegProtectionTermEventQualifier(char val)
            : base(Tags.LegProtectionTermEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoLegProtectionTermObligations Field
    /// </summary>/
    public sealed class NoLegProtectionTermObligations : IntField
    {
        public const int TAG = 41635;

        public NoLegProtectionTermObligations()
            : base(Tags.NoLegProtectionTermObligations) { }
        public NoLegProtectionTermObligations(int val)
            : base(Tags.NoLegProtectionTermObligations, val) { }

    }


    /// <summary>
    /// LegProtectionTermObligationType Field
    /// </summary>/
    public sealed class LegProtectionTermObligationType : StringField
    {
        public const int TAG = 41636;

        public LegProtectionTermObligationType()
            : base(Tags.LegProtectionTermObligationType) { }
        public LegProtectionTermObligationType(string val)
            : base(Tags.LegProtectionTermObligationType, val) { }

    }


    /// <summary>
    /// LegProtectionTermObligationValue Field
    /// </summary>/
    public sealed class LegProtectionTermObligationValue : StringField
    {
        public const int TAG = 41637;

        public LegProtectionTermObligationValue()
            : base(Tags.LegProtectionTermObligationValue) { }
        public LegProtectionTermObligationValue(string val)
            : base(Tags.LegProtectionTermObligationValue, val) { }

    }


    /// <summary>
    /// NoLegStreamCalculationPeriodDates Field
    /// </summary>/
    public sealed class NoLegStreamCalculationPeriodDates : IntField
    {
        public const int TAG = 41638;

        public NoLegStreamCalculationPeriodDates()
            : base(Tags.NoLegStreamCalculationPeriodDates) { }
        public NoLegStreamCalculationPeriodDates(int val)
            : base(Tags.NoLegStreamCalculationPeriodDates, val) { }

    }


    /// <summary>
    /// LegStreamCalculationPeriodDate Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodDate : StringField
    {
        public const int TAG = 41639;

        public LegStreamCalculationPeriodDate()
            : base(Tags.LegStreamCalculationPeriodDate) { }
        public LegStreamCalculationPeriodDate(string val)
            : base(Tags.LegStreamCalculationPeriodDate, val) { }

    }


    /// <summary>
    /// LegStreamCalculationPeriodDateType Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodDateType : IntField
    {
        public const int TAG = 41640;

        public LegStreamCalculationPeriodDateType()
            : base(Tags.LegStreamCalculationPeriodDateType) { }
        public LegStreamCalculationPeriodDateType(int val)
            : base(Tags.LegStreamCalculationPeriodDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegStreamCalculationPeriodDatesXID Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodDatesXID : StringField
    {
        public const int TAG = 41641;

        public LegStreamCalculationPeriodDatesXID()
            : base(Tags.LegStreamCalculationPeriodDatesXID) { }
        public LegStreamCalculationPeriodDatesXID(string val)
            : base(Tags.LegStreamCalculationPeriodDatesXID, val) { }

    }


    /// <summary>
    /// LegStreamCalculationPeriodDatesXIDRef Field
    /// </summary>/
    public sealed class LegStreamCalculationPeriodDatesXIDRef : StringField
    {
        public const int TAG = 41642;

        public LegStreamCalculationPeriodDatesXIDRef()
            : base(Tags.LegStreamCalculationPeriodDatesXIDRef) { }
        public LegStreamCalculationPeriodDatesXIDRef(string val)
            : base(Tags.LegStreamCalculationPeriodDatesXIDRef, val) { }

    }


    /// <summary>
    /// LegStreamCalculationBalanceOfFirstPeriod Field
    /// </summary>/
    public sealed class LegStreamCalculationBalanceOfFirstPeriod : BooleanField
    {
        public const int TAG = 41643;

        public LegStreamCalculationBalanceOfFirstPeriod()
            : base(Tags.LegStreamCalculationBalanceOfFirstPeriod) { }
        public LegStreamCalculationBalanceOfFirstPeriod(Boolean val)
            : base(Tags.LegStreamCalculationBalanceOfFirstPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCalculationCorrectionPeriod Field
    /// </summary>/
    public sealed class LegStreamCalculationCorrectionPeriod : IntField
    {
        public const int TAG = 41644;

        public LegStreamCalculationCorrectionPeriod()
            : base(Tags.LegStreamCalculationCorrectionPeriod) { }
        public LegStreamCalculationCorrectionPeriod(int val)
            : base(Tags.LegStreamCalculationCorrectionPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCalculationCorrectionUnit Field
    /// </summary>/
    public sealed class LegStreamCalculationCorrectionUnit : StringField
    {
        public const int TAG = 41645;

        public LegStreamCalculationCorrectionUnit()
            : base(Tags.LegStreamCalculationCorrectionUnit) { }
        public LegStreamCalculationCorrectionUnit(string val)
            : base(Tags.LegStreamCalculationCorrectionUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// NoLegStreamCommoditySettlBusinessCenters Field
    /// </summary>/
    public sealed class NoLegStreamCommoditySettlBusinessCenters : IntField
    {
        public const int TAG = 41646;

        public NoLegStreamCommoditySettlBusinessCenters()
            : base(Tags.NoLegStreamCommoditySettlBusinessCenters) { }
        public NoLegStreamCommoditySettlBusinessCenters(int val)
            : base(Tags.NoLegStreamCommoditySettlBusinessCenters, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlBusinessCenter Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlBusinessCenter : StringField
    {
        public const int TAG = 41647;

        public LegStreamCommoditySettlBusinessCenter()
            : base(Tags.LegStreamCommoditySettlBusinessCenter) { }
        public LegStreamCommoditySettlBusinessCenter(string val)
            : base(Tags.LegStreamCommoditySettlBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamCommodityBase Field
    /// </summary>/
    public sealed class LegStreamCommodityBase : StringField
    {
        public const int TAG = 41648;

        public LegStreamCommodityBase()
            : base(Tags.LegStreamCommodityBase) { }
        public LegStreamCommodityBase(string val)
            : base(Tags.LegStreamCommodityBase, val) { }

    }


    /// <summary>
    /// LegStreamCommodityType Field
    /// </summary>/
    public sealed class LegStreamCommodityType : StringField
    {
        public const int TAG = 41649;

        public LegStreamCommodityType()
            : base(Tags.LegStreamCommodityType) { }
        public LegStreamCommodityType(string val)
            : base(Tags.LegStreamCommodityType, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySecurityID Field
    /// </summary>/
    public sealed class LegStreamCommoditySecurityID : StringField
    {
        public const int TAG = 41650;

        public LegStreamCommoditySecurityID()
            : base(Tags.LegStreamCommoditySecurityID) { }
        public LegStreamCommoditySecurityID(string val)
            : base(Tags.LegStreamCommoditySecurityID, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySecurityIDSource Field
    /// </summary>/
    public sealed class LegStreamCommoditySecurityIDSource : StringField
    {
        public const int TAG = 41651;

        public LegStreamCommoditySecurityIDSource()
            : base(Tags.LegStreamCommoditySecurityIDSource) { }
        public LegStreamCommoditySecurityIDSource(string val)
            : base(Tags.LegStreamCommoditySecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegStreamCommodityDesc Field
    /// </summary>/
    public sealed class LegStreamCommodityDesc : StringField
    {
        public const int TAG = 41652;

        public LegStreamCommodityDesc()
            : base(Tags.LegStreamCommodityDesc) { }
        public LegStreamCommodityDesc(string val)
            : base(Tags.LegStreamCommodityDesc, val) { }

    }


    /// <summary>
    /// EncodedLegStreamCommodityDescLen Field
    /// </summary>/
    public sealed class EncodedLegStreamCommodityDescLen : IntField
    {
        public const int TAG = 41653;

        public EncodedLegStreamCommodityDescLen()
            : base(Tags.EncodedLegStreamCommodityDescLen) { }
        public EncodedLegStreamCommodityDescLen(int val)
            : base(Tags.EncodedLegStreamCommodityDescLen, val) { }

    }


    /// <summary>
    /// EncodedLegStreamCommodityDesc Field
    /// </summary>/
    public sealed class EncodedLegStreamCommodityDesc : StringField
    {
        public const int TAG = 41654;

        public EncodedLegStreamCommodityDesc()
            : base(Tags.EncodedLegStreamCommodityDesc) { }
        public EncodedLegStreamCommodityDesc(string val)
            : base(Tags.EncodedLegStreamCommodityDesc, val) { }

    }


    /// <summary>
    /// LegStreamCommodityUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStreamCommodityUnitOfMeasure : StringField
    {
        public const int TAG = 41655;

        public LegStreamCommodityUnitOfMeasure()
            : base(Tags.LegStreamCommodityUnitOfMeasure) { }
        public LegStreamCommodityUnitOfMeasure(string val)
            : base(Tags.LegStreamCommodityUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegStreamCommodityCurrency Field
    /// </summary>/
    public sealed class LegStreamCommodityCurrency : StringField
    {
        public const int TAG = 41656;

        public LegStreamCommodityCurrency()
            : base(Tags.LegStreamCommodityCurrency) { }
        public LegStreamCommodityCurrency(string val)
            : base(Tags.LegStreamCommodityCurrency, val) { }

    }


    /// <summary>
    /// LegStreamCommodityExchange Field
    /// </summary>/
    public sealed class LegStreamCommodityExchange : StringField
    {
        public const int TAG = 41657;

        public LegStreamCommodityExchange()
            : base(Tags.LegStreamCommodityExchange) { }
        public LegStreamCommodityExchange(string val)
            : base(Tags.LegStreamCommodityExchange, val) { }

    }


    /// <summary>
    /// LegStreamCommodityRateSource Field
    /// </summary>/
    public sealed class LegStreamCommodityRateSource : IntField
    {
        public const int TAG = 41658;

        public LegStreamCommodityRateSource()
            : base(Tags.LegStreamCommodityRateSource) { }
        public LegStreamCommodityRateSource(int val)
            : base(Tags.LegStreamCommodityRateSource, val) { }

    }


    /// <summary>
    /// LegStreamCommodityRateReferencePage Field
    /// </summary>/
    public sealed class LegStreamCommodityRateReferencePage : StringField
    {
        public const int TAG = 41659;

        public LegStreamCommodityRateReferencePage()
            : base(Tags.LegStreamCommodityRateReferencePage) { }
        public LegStreamCommodityRateReferencePage(string val)
            : base(Tags.LegStreamCommodityRateReferencePage, val) { }

    }


    /// <summary>
    /// LegStreamCommodityRateReferencePageHeading Field
    /// </summary>/
    public sealed class LegStreamCommodityRateReferencePageHeading : StringField
    {
        public const int TAG = 41660;

        public LegStreamCommodityRateReferencePageHeading()
            : base(Tags.LegStreamCommodityRateReferencePageHeading) { }
        public LegStreamCommodityRateReferencePageHeading(string val)
            : base(Tags.LegStreamCommodityRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// LegStreamDataProvider Field
    /// </summary>/
    public sealed class LegStreamDataProvider : StringField
    {
        public const int TAG = 41661;

        public LegStreamDataProvider()
            : base(Tags.LegStreamDataProvider) { }
        public LegStreamDataProvider(string val)
            : base(Tags.LegStreamDataProvider, val) { }

    }


    /// <summary>
    /// LegStreamCommodityPricingType Field
    /// </summary>/
    public sealed class LegStreamCommodityPricingType : StringField
    {
        public const int TAG = 41662;

        public LegStreamCommodityPricingType()
            : base(Tags.LegStreamCommodityPricingType) { }
        public LegStreamCommodityPricingType(string val)
            : base(Tags.LegStreamCommodityPricingType, val) { }

    }


    /// <summary>
    /// LegStreamCommodityNearbySettlDayPeriod Field
    /// </summary>/
    public sealed class LegStreamCommodityNearbySettlDayPeriod : IntField
    {
        public const int TAG = 41663;

        public LegStreamCommodityNearbySettlDayPeriod()
            : base(Tags.LegStreamCommodityNearbySettlDayPeriod) { }
        public LegStreamCommodityNearbySettlDayPeriod(int val)
            : base(Tags.LegStreamCommodityNearbySettlDayPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCommodityNearbySettlDayUnit Field
    /// </summary>/
    public sealed class LegStreamCommodityNearbySettlDayUnit : StringField
    {
        public const int TAG = 41664;

        public LegStreamCommodityNearbySettlDayUnit()
            : base(Tags.LegStreamCommodityNearbySettlDayUnit) { }
        public LegStreamCommodityNearbySettlDayUnit(string val)
            : base(Tags.LegStreamCommodityNearbySettlDayUnit, val) { }


        // Field Enumerations
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
    }


    /// <summary>
    /// LegStreamCommoditySettlDateUnadjusted Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDateUnadjusted : StringField
    {
        public const int TAG = 41665;

        public LegStreamCommoditySettlDateUnadjusted()
            : base(Tags.LegStreamCommoditySettlDateUnadjusted) { }
        public LegStreamCommoditySettlDateUnadjusted(string val)
            : base(Tags.LegStreamCommoditySettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 41666;

        public LegStreamCommoditySettlDateBusinessDayConvention()
            : base(Tags.LegStreamCommoditySettlDateBusinessDayConvention) { }
        public LegStreamCommoditySettlDateBusinessDayConvention(int val)
            : base(Tags.LegStreamCommoditySettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamCommoditySettlDateAdjusted Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDateAdjusted : StringField
    {
        public const int TAG = 41667;

        public LegStreamCommoditySettlDateAdjusted()
            : base(Tags.LegStreamCommoditySettlDateAdjusted) { }
        public LegStreamCommoditySettlDateAdjusted(string val)
            : base(Tags.LegStreamCommoditySettlDateAdjusted, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlMonth Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlMonth : IntField
    {
        public const int TAG = 41668;

        public LegStreamCommoditySettlMonth()
            : base(Tags.LegStreamCommoditySettlMonth) { }
        public LegStreamCommoditySettlMonth(int val)
            : base(Tags.LegStreamCommoditySettlMonth, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlDateRollPeriod Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDateRollPeriod : IntField
    {
        public const int TAG = 41669;

        public LegStreamCommoditySettlDateRollPeriod()
            : base(Tags.LegStreamCommoditySettlDateRollPeriod) { }
        public LegStreamCommoditySettlDateRollPeriod(int val)
            : base(Tags.LegStreamCommoditySettlDateRollPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlDateRollUnit Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDateRollUnit : StringField
    {
        public const int TAG = 41670;

        public LegStreamCommoditySettlDateRollUnit()
            : base(Tags.LegStreamCommoditySettlDateRollUnit) { }
        public LegStreamCommoditySettlDateRollUnit(string val)
            : base(Tags.LegStreamCommoditySettlDateRollUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
    }


    /// <summary>
    /// LegStreamCommoditySettlDayType Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDayType : IntField
    {
        public const int TAG = 41671;

        public LegStreamCommoditySettlDayType()
            : base(Tags.LegStreamCommoditySettlDayType) { }
        public LegStreamCommoditySettlDayType(int val)
            : base(Tags.LegStreamCommoditySettlDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegStreamCommodityXID Field
    /// </summary>/
    public sealed class LegStreamCommodityXID : StringField
    {
        public const int TAG = 41672;

        public LegStreamCommodityXID()
            : base(Tags.LegStreamCommodityXID) { }
        public LegStreamCommodityXID(string val)
            : base(Tags.LegStreamCommodityXID, val) { }

    }


    /// <summary>
    /// LegStreamCommodityXIDRef Field
    /// </summary>/
    public sealed class LegStreamCommodityXIDRef : StringField
    {
        public const int TAG = 41673;

        public LegStreamCommodityXIDRef()
            : base(Tags.LegStreamCommodityXIDRef) { }
        public LegStreamCommodityXIDRef(string val)
            : base(Tags.LegStreamCommodityXIDRef, val) { }

    }


    /// <summary>
    /// NoLegStreamCommodityAltIDs Field
    /// </summary>/
    public sealed class NoLegStreamCommodityAltIDs : IntField
    {
        public const int TAG = 41674;

        public NoLegStreamCommodityAltIDs()
            : base(Tags.NoLegStreamCommodityAltIDs) { }
        public NoLegStreamCommodityAltIDs(int val)
            : base(Tags.NoLegStreamCommodityAltIDs, val) { }

    }


    /// <summary>
    /// LegStreamCommodityAltID Field
    /// </summary>/
    public sealed class LegStreamCommodityAltID : StringField
    {
        public const int TAG = 41675;

        public LegStreamCommodityAltID()
            : base(Tags.LegStreamCommodityAltID) { }
        public LegStreamCommodityAltID(string val)
            : base(Tags.LegStreamCommodityAltID, val) { }

    }


    /// <summary>
    /// LegStreamCommodityAltIDSource Field
    /// </summary>/
    public sealed class LegStreamCommodityAltIDSource : StringField
    {
        public const int TAG = 41676;

        public LegStreamCommodityAltIDSource()
            : base(Tags.LegStreamCommodityAltIDSource) { }
        public LegStreamCommodityAltIDSource(string val)
            : base(Tags.LegStreamCommodityAltIDSource, val) { }

    }


    /// <summary>
    /// NoLegStreamCommodityDataSources Field
    /// </summary>/
    public sealed class NoLegStreamCommodityDataSources : IntField
    {
        public const int TAG = 41677;

        public NoLegStreamCommodityDataSources()
            : base(Tags.NoLegStreamCommodityDataSources) { }
        public NoLegStreamCommodityDataSources(int val)
            : base(Tags.NoLegStreamCommodityDataSources, val) { }

    }


    /// <summary>
    /// LegStreamCommodityDataSourceID Field
    /// </summary>/
    public sealed class LegStreamCommodityDataSourceID : StringField
    {
        public const int TAG = 41678;

        public LegStreamCommodityDataSourceID()
            : base(Tags.LegStreamCommodityDataSourceID) { }
        public LegStreamCommodityDataSourceID(string val)
            : base(Tags.LegStreamCommodityDataSourceID, val) { }

    }


    /// <summary>
    /// LegStreamCommodityDataSourceIDType Field
    /// </summary>/
    public sealed class LegStreamCommodityDataSourceIDType : IntField
    {
        public const int TAG = 41679;

        public LegStreamCommodityDataSourceIDType()
            : base(Tags.LegStreamCommodityDataSourceIDType) { }
        public LegStreamCommodityDataSourceIDType(int val)
            : base(Tags.LegStreamCommodityDataSourceIDType, val) { }


        // Field Enumerations
        public const int CITY = 0;
        public const int AIRPORT = 1;
        public const int WEATHER_STATION_WBAN = 2;
        public const int WEATHER_INDEX_WMO = 3;
    }


    /// <summary>
    /// NoLegStreamCommoditySettlDays Field
    /// </summary>/
    public sealed class NoLegStreamCommoditySettlDays : IntField
    {
        public const int TAG = 41680;

        public NoLegStreamCommoditySettlDays()
            : base(Tags.NoLegStreamCommoditySettlDays) { }
        public NoLegStreamCommoditySettlDays(int val)
            : base(Tags.NoLegStreamCommoditySettlDays, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlDay Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlDay : IntField
    {
        public const int TAG = 41681;

        public LegStreamCommoditySettlDay()
            : base(Tags.LegStreamCommoditySettlDay) { }
        public LegStreamCommoditySettlDay(int val)
            : base(Tags.LegStreamCommoditySettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// LegStreamCommoditySettlTotalHours Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlTotalHours : IntField
    {
        public const int TAG = 41682;

        public LegStreamCommoditySettlTotalHours()
            : base(Tags.LegStreamCommoditySettlTotalHours) { }
        public LegStreamCommoditySettlTotalHours(int val)
            : base(Tags.LegStreamCommoditySettlTotalHours, val) { }

    }


    /// <summary>
    /// NoLegStreamCommoditySettlTimes Field
    /// </summary>/
    public sealed class NoLegStreamCommoditySettlTimes : IntField
    {
        public const int TAG = 41683;

        public NoLegStreamCommoditySettlTimes()
            : base(Tags.NoLegStreamCommoditySettlTimes) { }
        public NoLegStreamCommoditySettlTimes(int val)
            : base(Tags.NoLegStreamCommoditySettlTimes, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlStart Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlStart : StringField
    {
        public const int TAG = 41684;

        public LegStreamCommoditySettlStart()
            : base(Tags.LegStreamCommoditySettlStart) { }
        public LegStreamCommoditySettlStart(string val)
            : base(Tags.LegStreamCommoditySettlStart, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlEnd Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlEnd : StringField
    {
        public const int TAG = 41685;

        public LegStreamCommoditySettlEnd()
            : base(Tags.LegStreamCommoditySettlEnd) { }
        public LegStreamCommoditySettlEnd(string val)
            : base(Tags.LegStreamCommoditySettlEnd, val) { }

    }


    /// <summary>
    /// NoLegStreamCommoditySettlPeriods Field
    /// </summary>/
    public sealed class NoLegStreamCommoditySettlPeriods : IntField
    {
        public const int TAG = 41686;

        public NoLegStreamCommoditySettlPeriods()
            : base(Tags.NoLegStreamCommoditySettlPeriods) { }
        public NoLegStreamCommoditySettlPeriods(int val)
            : base(Tags.NoLegStreamCommoditySettlPeriods, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlCountry Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlCountry : StringField
    {
        public const int TAG = 41687;

        public LegStreamCommoditySettlCountry()
            : base(Tags.LegStreamCommoditySettlCountry) { }
        public LegStreamCommoditySettlCountry(string val)
            : base(Tags.LegStreamCommoditySettlCountry, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlTimeZone Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlTimeZone : StringField
    {
        public const int TAG = 41688;

        public LegStreamCommoditySettlTimeZone()
            : base(Tags.LegStreamCommoditySettlTimeZone) { }
        public LegStreamCommoditySettlTimeZone(string val)
            : base(Tags.LegStreamCommoditySettlTimeZone, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlFlowType Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlFlowType : IntField
    {
        public const int TAG = 41689;

        public LegStreamCommoditySettlFlowType()
            : base(Tags.LegStreamCommoditySettlFlowType) { }
        public LegStreamCommoditySettlFlowType(int val)
            : base(Tags.LegStreamCommoditySettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodNotional Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodNotional : DecimalField
    {
        public const int TAG = 41690;

        public LegStreamCommoditySettlPeriodNotional()
            : base(Tags.LegStreamCommoditySettlPeriodNotional) { }
        public LegStreamCommoditySettlPeriodNotional(Decimal val)
            : base(Tags.LegStreamCommoditySettlPeriodNotional, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41691;

        public LegStreamCommoditySettlPeriodNotionalUnitOfMeasure()
            : base(Tags.LegStreamCommoditySettlPeriodNotionalUnitOfMeasure) { }
        public LegStreamCommoditySettlPeriodNotionalUnitOfMeasure(string val)
            : base(Tags.LegStreamCommoditySettlPeriodNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodFrequencyPeriod Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodFrequencyPeriod : IntField
    {
        public const int TAG = 41692;

        public LegStreamCommoditySettlPeriodFrequencyPeriod()
            : base(Tags.LegStreamCommoditySettlPeriodFrequencyPeriod) { }
        public LegStreamCommoditySettlPeriodFrequencyPeriod(int val)
            : base(Tags.LegStreamCommoditySettlPeriodFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodFrequencyUnit Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodFrequencyUnit : StringField
    {
        public const int TAG = 41693;

        public LegStreamCommoditySettlPeriodFrequencyUnit()
            : base(Tags.LegStreamCommoditySettlPeriodFrequencyUnit) { }
        public LegStreamCommoditySettlPeriodFrequencyUnit(string val)
            : base(Tags.LegStreamCommoditySettlPeriodFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodPrice Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodPrice : DecimalField
    {
        public const int TAG = 41694;

        public LegStreamCommoditySettlPeriodPrice()
            : base(Tags.LegStreamCommoditySettlPeriodPrice) { }
        public LegStreamCommoditySettlPeriodPrice(Decimal val)
            : base(Tags.LegStreamCommoditySettlPeriodPrice, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 41695;

        public LegStreamCommoditySettlPeriodPriceUnitOfMeasure()
            : base(Tags.LegStreamCommoditySettlPeriodPriceUnitOfMeasure) { }
        public LegStreamCommoditySettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.LegStreamCommoditySettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 41696;

        public LegStreamCommoditySettlPeriodPriceCurrency()
            : base(Tags.LegStreamCommoditySettlPeriodPriceCurrency) { }
        public LegStreamCommoditySettlPeriodPriceCurrency(string val)
            : base(Tags.LegStreamCommoditySettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 41697;

        public LegStreamCommoditySettlHolidaysProcessingInstruction()
            : base(Tags.LegStreamCommoditySettlHolidaysProcessingInstruction) { }
        public LegStreamCommoditySettlHolidaysProcessingInstruction(int val)
            : base(Tags.LegStreamCommoditySettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodXID Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodXID : StringField
    {
        public const int TAG = 41698;

        public LegStreamCommoditySettlPeriodXID()
            : base(Tags.LegStreamCommoditySettlPeriodXID) { }
        public LegStreamCommoditySettlPeriodXID(string val)
            : base(Tags.LegStreamCommoditySettlPeriodXID, val) { }

    }


    /// <summary>
    /// LegStreamCommoditySettlPeriodXIDRef Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlPeriodXIDRef : StringField
    {
        public const int TAG = 41699;

        public LegStreamCommoditySettlPeriodXIDRef()
            : base(Tags.LegStreamCommoditySettlPeriodXIDRef) { }
        public LegStreamCommoditySettlPeriodXIDRef(string val)
            : base(Tags.LegStreamCommoditySettlPeriodXIDRef, val) { }

    }


    /// <summary>
    /// LegStreamXID Field
    /// </summary>/
    public sealed class LegStreamXID : StringField
    {
        public const int TAG = 41700;

        public LegStreamXID()
            : base(Tags.LegStreamXID) { }
        public LegStreamXID(string val)
            : base(Tags.LegStreamXID, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondSecurityIDSource Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondSecurityIDSource : StringField
    {
        public const int TAG = 41701;

        public UnderlyingAdditionalTermBondSecurityIDSource()
            : base(Tags.UnderlyingAdditionalTermBondSecurityIDSource) { }
        public UnderlyingAdditionalTermBondSecurityIDSource(string val)
            : base(Tags.UnderlyingAdditionalTermBondSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// LegStreamNotionalXIDRef Field
    /// </summary>/
    public sealed class LegStreamNotionalXIDRef : StringField
    {
        public const int TAG = 41702;

        public LegStreamNotionalXIDRef()
            : base(Tags.LegStreamNotionalXIDRef) { }
        public LegStreamNotionalXIDRef(string val)
            : base(Tags.LegStreamNotionalXIDRef, val) { }

    }


    /// <summary>
    /// LegStreamNotionalFrequencyPeriod Field
    /// </summary>/
    public sealed class LegStreamNotionalFrequencyPeriod : IntField
    {
        public const int TAG = 41703;

        public LegStreamNotionalFrequencyPeriod()
            : base(Tags.LegStreamNotionalFrequencyPeriod) { }
        public LegStreamNotionalFrequencyPeriod(int val)
            : base(Tags.LegStreamNotionalFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegStreamNotionalFrequencyUnit Field
    /// </summary>/
    public sealed class LegStreamNotionalFrequencyUnit : StringField
    {
        public const int TAG = 41704;

        public LegStreamNotionalFrequencyUnit()
            : base(Tags.LegStreamNotionalFrequencyUnit) { }
        public LegStreamNotionalFrequencyUnit(string val)
            : base(Tags.LegStreamNotionalFrequencyUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// LegStreamNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class LegStreamNotionalCommodityFrequency : IntField
    {
        public const int TAG = 41705;

        public LegStreamNotionalCommodityFrequency()
            : base(Tags.LegStreamNotionalCommodityFrequency) { }
        public LegStreamNotionalCommodityFrequency(int val)
            : base(Tags.LegStreamNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// LegStreamNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStreamNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41706;

        public LegStreamNotionalUnitOfMeasure()
            : base(Tags.LegStreamNotionalUnitOfMeasure) { }
        public LegStreamNotionalUnitOfMeasure(string val)
            : base(Tags.LegStreamNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// LegStreamTotalNotional Field
    /// </summary>/
    public sealed class LegStreamTotalNotional : DecimalField
    {
        public const int TAG = 41707;

        public LegStreamTotalNotional()
            : base(Tags.LegStreamTotalNotional) { }
        public LegStreamTotalNotional(Decimal val)
            : base(Tags.LegStreamTotalNotional, val) { }

    }


    /// <summary>
    /// LegStreamTotalNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class LegStreamTotalNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41708;

        public LegStreamTotalNotionalUnitOfMeasure()
            : base(Tags.LegStreamTotalNotionalUnitOfMeasure) { }
        public LegStreamTotalNotionalUnitOfMeasure(string val)
            : base(Tags.LegStreamTotalNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingAdditionalTermBondDesc Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondDesc : StringField
    {
        public const int TAG = 41709;

        public UnderlyingAdditionalTermBondDesc()
            : base(Tags.UnderlyingAdditionalTermBondDesc) { }
        public UnderlyingAdditionalTermBondDesc(string val)
            : base(Tags.UnderlyingAdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingAdditionalTermBondDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingAdditionalTermBondDescLen : IntField
    {
        public const int TAG = 41710;

        public EncodedUnderlyingAdditionalTermBondDescLen()
            : base(Tags.EncodedUnderlyingAdditionalTermBondDescLen) { }
        public EncodedUnderlyingAdditionalTermBondDescLen(int val)
            : base(Tags.EncodedUnderlyingAdditionalTermBondDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingAdditionalTermBondDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingAdditionalTermBondDesc : StringField
    {
        public const int TAG = 41711;

        public EncodedUnderlyingAdditionalTermBondDesc()
            : base(Tags.EncodedUnderlyingAdditionalTermBondDesc) { }
        public EncodedUnderlyingAdditionalTermBondDesc(string val)
            : base(Tags.EncodedUnderlyingAdditionalTermBondDesc, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCurrency Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCurrency : StringField
    {
        public const int TAG = 41712;

        public UnderlyingAdditionalTermBondCurrency()
            : base(Tags.UnderlyingAdditionalTermBondCurrency) { }
        public UnderlyingAdditionalTermBondCurrency(string val)
            : base(Tags.UnderlyingAdditionalTermBondCurrency, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventAveragingObservations Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventAveragingObservations : IntField
    {
        public const int TAG = 41713;

        public NoUnderlyingComplexEventAveragingObservations()
            : base(Tags.NoUnderlyingComplexEventAveragingObservations) { }
        public NoUnderlyingComplexEventAveragingObservations(int val)
            : base(Tags.NoUnderlyingComplexEventAveragingObservations, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventAveragingObservationNumber Field
    /// </summary>/
    public sealed class UnderlyingComplexEventAveragingObservationNumber : IntField
    {
        public const int TAG = 41714;

        public UnderlyingComplexEventAveragingObservationNumber()
            : base(Tags.UnderlyingComplexEventAveragingObservationNumber) { }
        public UnderlyingComplexEventAveragingObservationNumber(int val)
            : base(Tags.UnderlyingComplexEventAveragingObservationNumber, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventAveragingWeight Field
    /// </summary>/
    public sealed class UnderlyingComplexEventAveragingWeight : DecimalField
    {
        public const int TAG = 41715;

        public UnderlyingComplexEventAveragingWeight()
            : base(Tags.UnderlyingComplexEventAveragingWeight) { }
        public UnderlyingComplexEventAveragingWeight(Decimal val)
            : base(Tags.UnderlyingComplexEventAveragingWeight, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventCreditEvents Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventCreditEvents : IntField
    {
        public const int TAG = 41716;

        public NoUnderlyingComplexEventCreditEvents()
            : base(Tags.NoUnderlyingComplexEventCreditEvents) { }
        public NoUnderlyingComplexEventCreditEvents(int val)
            : base(Tags.NoUnderlyingComplexEventCreditEvents, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventType : StringField
    {
        public const int TAG = 41717;

        public UnderlyingComplexEventCreditEventType()
            : base(Tags.UnderlyingComplexEventCreditEventType) { }
        public UnderlyingComplexEventCreditEventType(string val)
            : base(Tags.UnderlyingComplexEventCreditEventType, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventValue Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventValue : StringField
    {
        public const int TAG = 41718;

        public UnderlyingComplexEventCreditEventValue()
            : base(Tags.UnderlyingComplexEventCreditEventValue) { }
        public UnderlyingComplexEventCreditEventValue(string val)
            : base(Tags.UnderlyingComplexEventCreditEventValue, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventCurrency Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventCurrency : StringField
    {
        public const int TAG = 41719;

        public UnderlyingComplexEventCreditEventCurrency()
            : base(Tags.UnderlyingComplexEventCreditEventCurrency) { }
        public UnderlyingComplexEventCreditEventCurrency(string val)
            : base(Tags.UnderlyingComplexEventCreditEventCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventPeriod Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventPeriod : IntField
    {
        public const int TAG = 41720;

        public UnderlyingComplexEventCreditEventPeriod()
            : base(Tags.UnderlyingComplexEventCreditEventPeriod) { }
        public UnderlyingComplexEventCreditEventPeriod(int val)
            : base(Tags.UnderlyingComplexEventCreditEventPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventUnit Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventUnit : StringField
    {
        public const int TAG = 41721;

        public UnderlyingComplexEventCreditEventUnit()
            : base(Tags.UnderlyingComplexEventCreditEventUnit) { }
        public UnderlyingComplexEventCreditEventUnit(string val)
            : base(Tags.UnderlyingComplexEventCreditEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventDayType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventDayType : IntField
    {
        public const int TAG = 41722;

        public UnderlyingComplexEventCreditEventDayType()
            : base(Tags.UnderlyingComplexEventCreditEventDayType) { }
        public UnderlyingComplexEventCreditEventDayType(int val)
            : base(Tags.UnderlyingComplexEventCreditEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventRateSource Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventRateSource : IntField
    {
        public const int TAG = 41723;

        public UnderlyingComplexEventCreditEventRateSource()
            : base(Tags.UnderlyingComplexEventCreditEventRateSource) { }
        public UnderlyingComplexEventCreditEventRateSource(int val)
            : base(Tags.UnderlyingComplexEventCreditEventRateSource, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventCreditEventQualifiers Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventCreditEventQualifiers : IntField
    {
        public const int TAG = 41724;

        public NoUnderlyingComplexEventCreditEventQualifiers()
            : base(Tags.NoUnderlyingComplexEventCreditEventQualifiers) { }
        public NoUnderlyingComplexEventCreditEventQualifiers(int val)
            : base(Tags.NoUnderlyingComplexEventCreditEventQualifiers, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventQualifier Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventQualifier : CharField
    {
        public const int TAG = 41725;

        public UnderlyingComplexEventCreditEventQualifier()
            : base(Tags.UnderlyingComplexEventCreditEventQualifier) { }
        public UnderlyingComplexEventCreditEventQualifier(char val)
            : base(Tags.UnderlyingComplexEventCreditEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoUnderlyingComplexEventPeriodDateTimes Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventPeriodDateTimes : IntField
    {
        public const int TAG = 41726;

        public NoUnderlyingComplexEventPeriodDateTimes()
            : base(Tags.NoUnderlyingComplexEventPeriodDateTimes) { }
        public NoUnderlyingComplexEventPeriodDateTimes(int val)
            : base(Tags.NoUnderlyingComplexEventPeriodDateTimes, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPeriodDate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPeriodDate : StringField
    {
        public const int TAG = 41727;

        public UnderlyingComplexEventPeriodDate()
            : base(Tags.UnderlyingComplexEventPeriodDate) { }
        public UnderlyingComplexEventPeriodDate(string val)
            : base(Tags.UnderlyingComplexEventPeriodDate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPeriodTime Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPeriodTime : StringField
    {
        public const int TAG = 41728;

        public UnderlyingComplexEventPeriodTime()
            : base(Tags.UnderlyingComplexEventPeriodTime) { }
        public UnderlyingComplexEventPeriodTime(string val)
            : base(Tags.UnderlyingComplexEventPeriodTime, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventPeriods Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventPeriods : IntField
    {
        public const int TAG = 41729;

        public NoUnderlyingComplexEventPeriods()
            : base(Tags.NoUnderlyingComplexEventPeriods) { }
        public NoUnderlyingComplexEventPeriods(int val)
            : base(Tags.NoUnderlyingComplexEventPeriods, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventPeriodType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventPeriodType : IntField
    {
        public const int TAG = 41730;

        public UnderlyingComplexEventPeriodType()
            : base(Tags.UnderlyingComplexEventPeriodType) { }
        public UnderlyingComplexEventPeriodType(int val)
            : base(Tags.UnderlyingComplexEventPeriodType, val) { }


        // Field Enumerations
        public const int ASIAN_OUT = 0;
        public const int ASIAN_IN = 1;
        public const int BARRIER_CAP = 2;
        public const int BARRIER_FLOOR = 3;
        public const int KNOCK_OUT = 4;
        public const int KNOCK_IN = 5;
    }


    /// <summary>
    /// UnderlyingComplexEventBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingComplexEventBusinessCenter : StringField
    {
        public const int TAG = 41731;

        public UnderlyingComplexEventBusinessCenter()
            : base(Tags.UnderlyingComplexEventBusinessCenter) { }
        public UnderlyingComplexEventBusinessCenter(string val)
            : base(Tags.UnderlyingComplexEventBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventRateSources Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventRateSources : IntField
    {
        public const int TAG = 41732;

        public NoUnderlyingComplexEventRateSources()
            : base(Tags.NoUnderlyingComplexEventRateSources) { }
        public NoUnderlyingComplexEventRateSources(int val)
            : base(Tags.NoUnderlyingComplexEventRateSources, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventRateSource Field
    /// </summary>/
    public sealed class UnderlyingComplexEventRateSource : IntField
    {
        public const int TAG = 41733;

        public UnderlyingComplexEventRateSource()
            : base(Tags.UnderlyingComplexEventRateSource) { }
        public UnderlyingComplexEventRateSource(int val)
            : base(Tags.UnderlyingComplexEventRateSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// UnderlyingComplexEventRateSourceType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventRateSourceType : IntField
    {
        public const int TAG = 41734;

        public UnderlyingComplexEventRateSourceType()
            : base(Tags.UnderlyingComplexEventRateSourceType) { }
        public UnderlyingComplexEventRateSourceType(int val)
            : base(Tags.UnderlyingComplexEventRateSourceType, val) { }


        // Field Enumerations
        public const int PRIMARY = 0;
        public const int SECONDARY = 1;
    }


    /// <summary>
    /// UnderlyingComplexEventReferencePage Field
    /// </summary>/
    public sealed class UnderlyingComplexEventReferencePage : StringField
    {
        public const int TAG = 41735;

        public UnderlyingComplexEventReferencePage()
            : base(Tags.UnderlyingComplexEventReferencePage) { }
        public UnderlyingComplexEventReferencePage(string val)
            : base(Tags.UnderlyingComplexEventReferencePage, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventReferencePageHeading Field
    /// </summary>/
    public sealed class UnderlyingComplexEventReferencePageHeading : StringField
    {
        public const int TAG = 41736;

        public UnderlyingComplexEventReferencePageHeading()
            : base(Tags.UnderlyingComplexEventReferencePageHeading) { }
        public UnderlyingComplexEventReferencePageHeading(string val)
            : base(Tags.UnderlyingComplexEventReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventDateBusinessCenters : IntField
    {
        public const int TAG = 41737;

        public NoUnderlyingComplexEventDateBusinessCenters()
            : base(Tags.NoUnderlyingComplexEventDateBusinessCenters) { }
        public NoUnderlyingComplexEventDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingComplexEventDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateBusinessCenter : StringField
    {
        public const int TAG = 41738;

        public UnderlyingComplexEventDateBusinessCenter()
            : base(Tags.UnderlyingComplexEventDateBusinessCenter) { }
        public UnderlyingComplexEventDateBusinessCenter(string val)
            : base(Tags.UnderlyingComplexEventDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateUnadjusted : StringField
    {
        public const int TAG = 41739;

        public UnderlyingComplexEventDateUnadjusted()
            : base(Tags.UnderlyingComplexEventDateUnadjusted) { }
        public UnderlyingComplexEventDateUnadjusted(string val)
            : base(Tags.UnderlyingComplexEventDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateRelativeTo : IntField
    {
        public const int TAG = 41740;

        public UnderlyingComplexEventDateRelativeTo()
            : base(Tags.UnderlyingComplexEventDateRelativeTo) { }
        public UnderlyingComplexEventDateRelativeTo(int val)
            : base(Tags.UnderlyingComplexEventDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateOffsetPeriod : IntField
    {
        public const int TAG = 41741;

        public UnderlyingComplexEventDateOffsetPeriod()
            : base(Tags.UnderlyingComplexEventDateOffsetPeriod) { }
        public UnderlyingComplexEventDateOffsetPeriod(int val)
            : base(Tags.UnderlyingComplexEventDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateOffsetUnit : StringField
    {
        public const int TAG = 41742;

        public UnderlyingComplexEventDateOffsetUnit()
            : base(Tags.UnderlyingComplexEventDateOffsetUnit) { }
        public UnderlyingComplexEventDateOffsetUnit(string val)
            : base(Tags.UnderlyingComplexEventDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingComplexEventDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateOffsetDayType : IntField
    {
        public const int TAG = 41743;

        public UnderlyingComplexEventDateOffsetDayType()
            : base(Tags.UnderlyingComplexEventDateOffsetDayType) { }
        public UnderlyingComplexEventDateOffsetDayType(int val)
            : base(Tags.UnderlyingComplexEventDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingComplexEventDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateBusinessDayConvention : IntField
    {
        public const int TAG = 41744;

        public UnderlyingComplexEventDateBusinessDayConvention()
            : base(Tags.UnderlyingComplexEventDateBusinessDayConvention) { }
        public UnderlyingComplexEventDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingComplexEventDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingComplexEventDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingComplexEventDateAdjusted : StringField
    {
        public const int TAG = 41745;

        public UnderlyingComplexEventDateAdjusted()
            : base(Tags.UnderlyingComplexEventDateAdjusted) { }
        public UnderlyingComplexEventDateAdjusted(string val)
            : base(Tags.UnderlyingComplexEventDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventFixingTime Field
    /// </summary>/
    public sealed class UnderlyingComplexEventFixingTime : StringField
    {
        public const int TAG = 41746;

        public UnderlyingComplexEventFixingTime()
            : base(Tags.UnderlyingComplexEventFixingTime) { }
        public UnderlyingComplexEventFixingTime(string val)
            : base(Tags.UnderlyingComplexEventFixingTime, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventFixingTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingComplexEventFixingTimeBusinessCenter : StringField
    {
        public const int TAG = 41747;

        public UnderlyingComplexEventFixingTimeBusinessCenter()
            : base(Tags.UnderlyingComplexEventFixingTimeBusinessCenter) { }
        public UnderlyingComplexEventFixingTimeBusinessCenter(string val)
            : base(Tags.UnderlyingComplexEventFixingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventCreditEventSources Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventCreditEventSources : IntField
    {
        public const int TAG = 41748;

        public NoUnderlyingComplexEventCreditEventSources()
            : base(Tags.NoUnderlyingComplexEventCreditEventSources) { }
        public NoUnderlyingComplexEventCreditEventSources(int val)
            : base(Tags.NoUnderlyingComplexEventCreditEventSources, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventCreditEventSource Field
    /// </summary>/
    public sealed class UnderlyingComplexEventCreditEventSource : StringField
    {
        public const int TAG = 41749;

        public UnderlyingComplexEventCreditEventSource()
            : base(Tags.UnderlyingComplexEventCreditEventSource) { }
        public UnderlyingComplexEventCreditEventSource(string val)
            : base(Tags.UnderlyingComplexEventCreditEventSource, val) { }

    }


    /// <summary>
    /// NoUnderlyingComplexEventSchedules Field
    /// </summary>/
    public sealed class NoUnderlyingComplexEventSchedules : IntField
    {
        public const int TAG = 41750;

        public NoUnderlyingComplexEventSchedules()
            : base(Tags.NoUnderlyingComplexEventSchedules) { }
        public NoUnderlyingComplexEventSchedules(int val)
            : base(Tags.NoUnderlyingComplexEventSchedules, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventScheduleStartDate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventScheduleStartDate : StringField
    {
        public const int TAG = 41751;

        public UnderlyingComplexEventScheduleStartDate()
            : base(Tags.UnderlyingComplexEventScheduleStartDate) { }
        public UnderlyingComplexEventScheduleStartDate(string val)
            : base(Tags.UnderlyingComplexEventScheduleStartDate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventScheduleEndDate Field
    /// </summary>/
    public sealed class UnderlyingComplexEventScheduleEndDate : StringField
    {
        public const int TAG = 41752;

        public UnderlyingComplexEventScheduleEndDate()
            : base(Tags.UnderlyingComplexEventScheduleEndDate) { }
        public UnderlyingComplexEventScheduleEndDate(string val)
            : base(Tags.UnderlyingComplexEventScheduleEndDate, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventScheduleFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingComplexEventScheduleFrequencyPeriod : IntField
    {
        public const int TAG = 41753;

        public UnderlyingComplexEventScheduleFrequencyPeriod()
            : base(Tags.UnderlyingComplexEventScheduleFrequencyPeriod) { }
        public UnderlyingComplexEventScheduleFrequencyPeriod(int val)
            : base(Tags.UnderlyingComplexEventScheduleFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingComplexEventScheduleFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingComplexEventScheduleFrequencyUnit : StringField
    {
        public const int TAG = 41754;

        public UnderlyingComplexEventScheduleFrequencyUnit()
            : base(Tags.UnderlyingComplexEventScheduleFrequencyUnit) { }
        public UnderlyingComplexEventScheduleFrequencyUnit(string val)
            : base(Tags.UnderlyingComplexEventScheduleFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingComplexEventScheduleRollConvention Field
    /// </summary>/
    public sealed class UnderlyingComplexEventScheduleRollConvention : StringField
    {
        public const int TAG = 41755;

        public UnderlyingComplexEventScheduleRollConvention()
            : base(Tags.UnderlyingComplexEventScheduleRollConvention) { }
        public UnderlyingComplexEventScheduleRollConvention(string val)
            : base(Tags.UnderlyingComplexEventScheduleRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// NoUnderlyingDeliverySchedules Field
    /// </summary>/
    public sealed class NoUnderlyingDeliverySchedules : IntField
    {
        public const int TAG = 41756;

        public NoUnderlyingDeliverySchedules()
            : base(Tags.NoUnderlyingDeliverySchedules) { }
        public NoUnderlyingDeliverySchedules(int val)
            : base(Tags.NoUnderlyingDeliverySchedules, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleType : IntField
    {
        public const int TAG = 41757;

        public UnderlyingDeliveryScheduleType()
            : base(Tags.UnderlyingDeliveryScheduleType) { }
        public UnderlyingDeliveryScheduleType(int val)
            : base(Tags.UnderlyingDeliveryScheduleType, val) { }


        // Field Enumerations
        public const int NOTIONAL = 0;
        public const int DELIVERY = 1;
        public const int PHYSICAL_SETTLEMENT_PERIOD = 2;
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleXID Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleXID : StringField
    {
        public const int TAG = 41758;

        public UnderlyingDeliveryScheduleXID()
            : base(Tags.UnderlyingDeliveryScheduleXID) { }
        public UnderlyingDeliveryScheduleXID(string val)
            : base(Tags.UnderlyingDeliveryScheduleXID, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleNotional Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleNotional : DecimalField
    {
        public const int TAG = 41759;

        public UnderlyingDeliveryScheduleNotional()
            : base(Tags.UnderlyingDeliveryScheduleNotional) { }
        public UnderlyingDeliveryScheduleNotional(Decimal val)
            : base(Tags.UnderlyingDeliveryScheduleNotional, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 41760;

        public UnderlyingDeliveryScheduleNotionalUnitOfMeasure()
            : base(Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure) { }
        public UnderlyingDeliveryScheduleNotionalUnitOfMeasure(string val)
            : base(Tags.UnderlyingDeliveryScheduleNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleNotionalCommodityFrequency : IntField
    {
        public const int TAG = 41761;

        public UnderlyingDeliveryScheduleNotionalCommodityFrequency()
            : base(Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency) { }
        public UnderlyingDeliveryScheduleNotionalCommodityFrequency(int val)
            : base(Tags.UnderlyingDeliveryScheduleNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleNegativeTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleNegativeTolerance : DecimalField
    {
        public const int TAG = 41762;

        public UnderlyingDeliveryScheduleNegativeTolerance()
            : base(Tags.UnderlyingDeliveryScheduleNegativeTolerance) { }
        public UnderlyingDeliveryScheduleNegativeTolerance(Decimal val)
            : base(Tags.UnderlyingDeliveryScheduleNegativeTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliverySchedulePositiveTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliverySchedulePositiveTolerance : DecimalField
    {
        public const int TAG = 41763;

        public UnderlyingDeliverySchedulePositiveTolerance()
            : base(Tags.UnderlyingDeliverySchedulePositiveTolerance) { }
        public UnderlyingDeliverySchedulePositiveTolerance(Decimal val)
            : base(Tags.UnderlyingDeliverySchedulePositiveTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41764;

        public UnderlyingDeliveryScheduleToleranceUnitOfMeasure()
            : base(Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure) { }
        public UnderlyingDeliveryScheduleToleranceUnitOfMeasure(string val)
            : base(Tags.UnderlyingDeliveryScheduleToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleToleranceType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleToleranceType : IntField
    {
        public const int TAG = 41765;

        public UnderlyingDeliveryScheduleToleranceType()
            : base(Tags.UnderlyingDeliveryScheduleToleranceType) { }
        public UnderlyingDeliveryScheduleToleranceType(int val)
            : base(Tags.UnderlyingDeliveryScheduleToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlCountry Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlCountry : StringField
    {
        public const int TAG = 41766;

        public UnderlyingDeliveryScheduleSettlCountry()
            : base(Tags.UnderlyingDeliveryScheduleSettlCountry) { }
        public UnderlyingDeliveryScheduleSettlCountry(string val)
            : base(Tags.UnderlyingDeliveryScheduleSettlCountry, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlTimeZone Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlTimeZone : StringField
    {
        public const int TAG = 41767;

        public UnderlyingDeliveryScheduleSettlTimeZone()
            : base(Tags.UnderlyingDeliveryScheduleSettlTimeZone) { }
        public UnderlyingDeliveryScheduleSettlTimeZone(string val)
            : base(Tags.UnderlyingDeliveryScheduleSettlTimeZone, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlFlowType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlFlowType : IntField
    {
        public const int TAG = 41768;

        public UnderlyingDeliveryScheduleSettlFlowType()
            : base(Tags.UnderlyingDeliveryScheduleSettlFlowType) { }
        public UnderlyingDeliveryScheduleSettlFlowType(int val)
            : base(Tags.UnderlyingDeliveryScheduleSettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 41769;

        public UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction()
            : base(Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction) { }
        public UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction(int val)
            : base(Tags.UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// NoUnderlyingDeliveryScheduleSettlDays Field
    /// </summary>/
    public sealed class NoUnderlyingDeliveryScheduleSettlDays : IntField
    {
        public const int TAG = 41770;

        public NoUnderlyingDeliveryScheduleSettlDays()
            : base(Tags.NoUnderlyingDeliveryScheduleSettlDays) { }
        public NoUnderlyingDeliveryScheduleSettlDays(int val)
            : base(Tags.NoUnderlyingDeliveryScheduleSettlDays, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlDay Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlDay : IntField
    {
        public const int TAG = 41771;

        public UnderlyingDeliveryScheduleSettlDay()
            : base(Tags.UnderlyingDeliveryScheduleSettlDay) { }
        public UnderlyingDeliveryScheduleSettlDay(int val)
            : base(Tags.UnderlyingDeliveryScheduleSettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlTotalHours Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlTotalHours : IntField
    {
        public const int TAG = 41772;

        public UnderlyingDeliveryScheduleSettlTotalHours()
            : base(Tags.UnderlyingDeliveryScheduleSettlTotalHours) { }
        public UnderlyingDeliveryScheduleSettlTotalHours(int val)
            : base(Tags.UnderlyingDeliveryScheduleSettlTotalHours, val) { }

    }


    /// <summary>
    /// NoUnderlyingDeliveryScheduleSettlTimes Field
    /// </summary>/
    public sealed class NoUnderlyingDeliveryScheduleSettlTimes : IntField
    {
        public const int TAG = 41773;

        public NoUnderlyingDeliveryScheduleSettlTimes()
            : base(Tags.NoUnderlyingDeliveryScheduleSettlTimes) { }
        public NoUnderlyingDeliveryScheduleSettlTimes(int val)
            : base(Tags.NoUnderlyingDeliveryScheduleSettlTimes, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlStart Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlStart : StringField
    {
        public const int TAG = 41774;

        public UnderlyingDeliveryScheduleSettlStart()
            : base(Tags.UnderlyingDeliveryScheduleSettlStart) { }
        public UnderlyingDeliveryScheduleSettlStart(string val)
            : base(Tags.UnderlyingDeliveryScheduleSettlStart, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlEnd Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlEnd : StringField
    {
        public const int TAG = 41775;

        public UnderlyingDeliveryScheduleSettlEnd()
            : base(Tags.UnderlyingDeliveryScheduleSettlEnd) { }
        public UnderlyingDeliveryScheduleSettlEnd(string val)
            : base(Tags.UnderlyingDeliveryScheduleSettlEnd, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryScheduleSettlTimeType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryScheduleSettlTimeType : IntField
    {
        public const int TAG = 41776;

        public UnderlyingDeliveryScheduleSettlTimeType()
            : base(Tags.UnderlyingDeliveryScheduleSettlTimeType) { }
        public UnderlyingDeliveryScheduleSettlTimeType(int val)
            : base(Tags.UnderlyingDeliveryScheduleSettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamType : IntField
    {
        public const int TAG = 41777;

        public UnderlyingDeliveryStreamType()
            : base(Tags.UnderlyingDeliveryStreamType) { }
        public UnderlyingDeliveryStreamType(int val)
            : base(Tags.UnderlyingDeliveryStreamType, val) { }


        // Field Enumerations
        public const int PERIODIC = 0;
        public const int INITIAL = 1;
        public const int SINGLE = 2;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamPipeline Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamPipeline : StringField
    {
        public const int TAG = 41778;

        public UnderlyingDeliveryStreamPipeline()
            : base(Tags.UnderlyingDeliveryStreamPipeline) { }
        public UnderlyingDeliveryStreamPipeline(string val)
            : base(Tags.UnderlyingDeliveryStreamPipeline, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamEntryPoint Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamEntryPoint : StringField
    {
        public const int TAG = 41779;

        public UnderlyingDeliveryStreamEntryPoint()
            : base(Tags.UnderlyingDeliveryStreamEntryPoint) { }
        public UnderlyingDeliveryStreamEntryPoint(string val)
            : base(Tags.UnderlyingDeliveryStreamEntryPoint, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamWithdrawalPoint Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamWithdrawalPoint : StringField
    {
        public const int TAG = 41780;

        public UnderlyingDeliveryStreamWithdrawalPoint()
            : base(Tags.UnderlyingDeliveryStreamWithdrawalPoint) { }
        public UnderlyingDeliveryStreamWithdrawalPoint(string val)
            : base(Tags.UnderlyingDeliveryStreamWithdrawalPoint, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryPoint Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryPoint : StringField
    {
        public const int TAG = 41781;

        public UnderlyingDeliveryStreamDeliveryPoint()
            : base(Tags.UnderlyingDeliveryStreamDeliveryPoint) { }
        public UnderlyingDeliveryStreamDeliveryPoint(string val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryPoint, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryRestriction Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryRestriction : IntField
    {
        public const int TAG = 41782;

        public UnderlyingDeliveryStreamDeliveryRestriction()
            : base(Tags.UnderlyingDeliveryStreamDeliveryRestriction) { }
        public UnderlyingDeliveryStreamDeliveryRestriction(int val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryRestriction, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int INTERRUPTABLE_OR_NON_FIRM = 2;
        public const int FORCE_MAJEURE = 3;
        public const int SYSTEM_FIRM = 4;
        public const int UNIT_FIRM = 5;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryContingency Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryContingency : StringField
    {
        public const int TAG = 41783;

        public UnderlyingDeliveryStreamDeliveryContingency()
            : base(Tags.UnderlyingDeliveryStreamDeliveryContingency) { }
        public UnderlyingDeliveryStreamDeliveryContingency(string val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryContingency, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryContingentPartySide Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryContingentPartySide : IntField
    {
        public const int TAG = 41784;

        public UnderlyingDeliveryStreamDeliveryContingentPartySide()
            : base(Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide) { }
        public UnderlyingDeliveryStreamDeliveryContingentPartySide(int val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryContingentPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliverAtSourceIndicator Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliverAtSourceIndicator : BooleanField
    {
        public const int TAG = 41785;

        public UnderlyingDeliveryStreamDeliverAtSourceIndicator()
            : base(Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator) { }
        public UnderlyingDeliveryStreamDeliverAtSourceIndicator(Boolean val)
            : base(Tags.UnderlyingDeliveryStreamDeliverAtSourceIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamRiskApportionment Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamRiskApportionment : StringField
    {
        public const int TAG = 41786;

        public UnderlyingDeliveryStreamRiskApportionment()
            : base(Tags.UnderlyingDeliveryStreamRiskApportionment) { }
        public UnderlyingDeliveryStreamRiskApportionment(string val)
            : base(Tags.UnderlyingDeliveryStreamRiskApportionment, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamTitleTransferLocation Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamTitleTransferLocation : StringField
    {
        public const int TAG = 41787;

        public UnderlyingDeliveryStreamTitleTransferLocation()
            : base(Tags.UnderlyingDeliveryStreamTitleTransferLocation) { }
        public UnderlyingDeliveryStreamTitleTransferLocation(string val)
            : base(Tags.UnderlyingDeliveryStreamTitleTransferLocation, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamTitleTransferCondition Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamTitleTransferCondition : IntField
    {
        public const int TAG = 41788;

        public UnderlyingDeliveryStreamTitleTransferCondition()
            : base(Tags.UnderlyingDeliveryStreamTitleTransferCondition) { }
        public UnderlyingDeliveryStreamTitleTransferCondition(int val)
            : base(Tags.UnderlyingDeliveryStreamTitleTransferCondition, val) { }


        // Field Enumerations
        public const int TRANSFERS_WITH_RISK_OF_LOSS = 0;
        public const int DOES_NOT_TRANSFER_WITH_RISK_OF_LOSS = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamImporterOfRecord Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamImporterOfRecord : StringField
    {
        public const int TAG = 41789;

        public UnderlyingDeliveryStreamImporterOfRecord()
            : base(Tags.UnderlyingDeliveryStreamImporterOfRecord) { }
        public UnderlyingDeliveryStreamImporterOfRecord(string val)
            : base(Tags.UnderlyingDeliveryStreamImporterOfRecord, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamNegativeTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamNegativeTolerance : DecimalField
    {
        public const int TAG = 41790;

        public UnderlyingDeliveryStreamNegativeTolerance()
            : base(Tags.UnderlyingDeliveryStreamNegativeTolerance) { }
        public UnderlyingDeliveryStreamNegativeTolerance(Decimal val)
            : base(Tags.UnderlyingDeliveryStreamNegativeTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamPositiveTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamPositiveTolerance : DecimalField
    {
        public const int TAG = 41791;

        public UnderlyingDeliveryStreamPositiveTolerance()
            : base(Tags.UnderlyingDeliveryStreamPositiveTolerance) { }
        public UnderlyingDeliveryStreamPositiveTolerance(Decimal val)
            : base(Tags.UnderlyingDeliveryStreamPositiveTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamToleranceUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamToleranceUnitOfMeasure : StringField
    {
        public const int TAG = 41792;

        public UnderlyingDeliveryStreamToleranceUnitOfMeasure()
            : base(Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure) { }
        public UnderlyingDeliveryStreamToleranceUnitOfMeasure(string val)
            : base(Tags.UnderlyingDeliveryStreamToleranceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingDeliveryStreamToleranceType Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamToleranceType : IntField
    {
        public const int TAG = 41793;

        public UnderlyingDeliveryStreamToleranceType()
            : base(Tags.UnderlyingDeliveryStreamToleranceType) { }
        public UnderlyingDeliveryStreamToleranceType(int val)
            : base(Tags.UnderlyingDeliveryStreamToleranceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamToleranceOptionSide Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamToleranceOptionSide : IntField
    {
        public const int TAG = 41794;

        public UnderlyingDeliveryStreamToleranceOptionSide()
            : base(Tags.UnderlyingDeliveryStreamToleranceOptionSide) { }
        public UnderlyingDeliveryStreamToleranceOptionSide(int val)
            : base(Tags.UnderlyingDeliveryStreamToleranceOptionSide, val) { }


        // Field Enumerations
        public const int BUYER = 1;
        public const int SELLER = 2;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamTotalPositiveTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamTotalPositiveTolerance : DecimalField
    {
        public const int TAG = 41795;

        public UnderlyingDeliveryStreamTotalPositiveTolerance()
            : base(Tags.UnderlyingDeliveryStreamTotalPositiveTolerance) { }
        public UnderlyingDeliveryStreamTotalPositiveTolerance(Decimal val)
            : base(Tags.UnderlyingDeliveryStreamTotalPositiveTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamTotalNegativeTolerance Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamTotalNegativeTolerance : DecimalField
    {
        public const int TAG = 41796;

        public UnderlyingDeliveryStreamTotalNegativeTolerance()
            : base(Tags.UnderlyingDeliveryStreamTotalNegativeTolerance) { }
        public UnderlyingDeliveryStreamTotalNegativeTolerance(Decimal val)
            : base(Tags.UnderlyingDeliveryStreamTotalNegativeTolerance, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamNotionalConversionFactor Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamNotionalConversionFactor : DecimalField
    {
        public const int TAG = 41797;

        public UnderlyingDeliveryStreamNotionalConversionFactor()
            : base(Tags.UnderlyingDeliveryStreamNotionalConversionFactor) { }
        public UnderlyingDeliveryStreamNotionalConversionFactor(Decimal val)
            : base(Tags.UnderlyingDeliveryStreamNotionalConversionFactor, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamTransportEquipment Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamTransportEquipment : StringField
    {
        public const int TAG = 41798;

        public UnderlyingDeliveryStreamTransportEquipment()
            : base(Tags.UnderlyingDeliveryStreamTransportEquipment) { }
        public UnderlyingDeliveryStreamTransportEquipment(string val)
            : base(Tags.UnderlyingDeliveryStreamTransportEquipment, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamElectingPartySide Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamElectingPartySide : IntField
    {
        public const int TAG = 41799;

        public UnderlyingDeliveryStreamElectingPartySide()
            : base(Tags.UnderlyingDeliveryStreamElectingPartySide) { }
        public UnderlyingDeliveryStreamElectingPartySide(int val)
            : base(Tags.UnderlyingDeliveryStreamElectingPartySide, val) { }


        // Field Enumerations
        public const int BUYER = 0;
        public const int SELLER = 1;
    }


    /// <summary>
    /// NoUnderlyingStreamAssetAttributes Field
    /// </summary>/
    public sealed class NoUnderlyingStreamAssetAttributes : IntField
    {
        public const int TAG = 41800;

        public NoUnderlyingStreamAssetAttributes()
            : base(Tags.NoUnderlyingStreamAssetAttributes) { }
        public NoUnderlyingStreamAssetAttributes(int val)
            : base(Tags.NoUnderlyingStreamAssetAttributes, val) { }

    }


    /// <summary>
    /// UnderlyingStreamAssetAttributeType Field
    /// </summary>/
    public sealed class UnderlyingStreamAssetAttributeType : StringField
    {
        public const int TAG = 41801;

        public UnderlyingStreamAssetAttributeType()
            : base(Tags.UnderlyingStreamAssetAttributeType) { }
        public UnderlyingStreamAssetAttributeType(string val)
            : base(Tags.UnderlyingStreamAssetAttributeType, val) { }

    }


    /// <summary>
    /// UnderlyingStreamAssetAttributeValue Field
    /// </summary>/
    public sealed class UnderlyingStreamAssetAttributeValue : StringField
    {
        public const int TAG = 41802;

        public UnderlyingStreamAssetAttributeValue()
            : base(Tags.UnderlyingStreamAssetAttributeValue) { }
        public UnderlyingStreamAssetAttributeValue(string val)
            : base(Tags.UnderlyingStreamAssetAttributeValue, val) { }

    }


    /// <summary>
    /// UnderlyingStreamAssetAttributeLimit Field
    /// </summary>/
    public sealed class UnderlyingStreamAssetAttributeLimit : StringField
    {
        public const int TAG = 41803;

        public UnderlyingStreamAssetAttributeLimit()
            : base(Tags.UnderlyingStreamAssetAttributeLimit) { }
        public UnderlyingStreamAssetAttributeLimit(string val)
            : base(Tags.UnderlyingStreamAssetAttributeLimit, val) { }

    }


    /// <summary>
    /// NoUnderlyingDeliveryStreamCycles Field
    /// </summary>/
    public sealed class NoUnderlyingDeliveryStreamCycles : IntField
    {
        public const int TAG = 41804;

        public NoUnderlyingDeliveryStreamCycles()
            : base(Tags.NoUnderlyingDeliveryStreamCycles) { }
        public NoUnderlyingDeliveryStreamCycles(int val)
            : base(Tags.NoUnderlyingDeliveryStreamCycles, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41805;

        public UnderlyingDeliveryStreamCycleDesc()
            : base(Tags.UnderlyingDeliveryStreamCycleDesc) { }
        public UnderlyingDeliveryStreamCycleDesc(string val)
            : base(Tags.UnderlyingDeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingDeliveryStreamCycleDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingDeliveryStreamCycleDescLen : IntField
    {
        public const int TAG = 41806;

        public EncodedUnderlyingDeliveryStreamCycleDescLen()
            : base(Tags.EncodedUnderlyingDeliveryStreamCycleDescLen) { }
        public EncodedUnderlyingDeliveryStreamCycleDescLen(int val)
            : base(Tags.EncodedUnderlyingDeliveryStreamCycleDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingDeliveryStreamCycleDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingDeliveryStreamCycleDesc : StringField
    {
        public const int TAG = 41807;

        public EncodedUnderlyingDeliveryStreamCycleDesc()
            : base(Tags.EncodedUnderlyingDeliveryStreamCycleDesc) { }
        public EncodedUnderlyingDeliveryStreamCycleDesc(string val)
            : base(Tags.EncodedUnderlyingDeliveryStreamCycleDesc, val) { }

    }


    /// <summary>
    /// NoUnderlyingDeliveryStreamCommoditySources Field
    /// </summary>/
    public sealed class NoUnderlyingDeliveryStreamCommoditySources : IntField
    {
        public const int TAG = 41808;

        public NoUnderlyingDeliveryStreamCommoditySources()
            : base(Tags.NoUnderlyingDeliveryStreamCommoditySources) { }
        public NoUnderlyingDeliveryStreamCommoditySources(int val)
            : base(Tags.NoUnderlyingDeliveryStreamCommoditySources, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamCommoditySource Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamCommoditySource : StringField
    {
        public const int TAG = 41809;

        public UnderlyingDeliveryStreamCommoditySource()
            : base(Tags.UnderlyingDeliveryStreamCommoditySource) { }
        public UnderlyingDeliveryStreamCommoditySource(string val)
            : base(Tags.UnderlyingDeliveryStreamCommoditySource, val) { }

    }


    /// <summary>
    /// UnderlyingExerciseDesc Field
    /// </summary>/
    public sealed class UnderlyingExerciseDesc : StringField
    {
        public const int TAG = 41810;

        public UnderlyingExerciseDesc()
            : base(Tags.UnderlyingExerciseDesc) { }
        public UnderlyingExerciseDesc(string val)
            : base(Tags.UnderlyingExerciseDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingExerciseDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingExerciseDescLen : IntField
    {
        public const int TAG = 41811;

        public EncodedUnderlyingExerciseDescLen()
            : base(Tags.EncodedUnderlyingExerciseDescLen) { }
        public EncodedUnderlyingExerciseDescLen(int val)
            : base(Tags.EncodedUnderlyingExerciseDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingExerciseDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingExerciseDesc : StringField
    {
        public const int TAG = 41812;

        public EncodedUnderlyingExerciseDesc()
            : base(Tags.EncodedUnderlyingExerciseDesc) { }
        public EncodedUnderlyingExerciseDesc(string val)
            : base(Tags.EncodedUnderlyingExerciseDesc, val) { }

    }


    /// <summary>
    /// UnderlyingAutomaticExerciseIndicator Field
    /// </summary>/
    public sealed class UnderlyingAutomaticExerciseIndicator : BooleanField
    {
        public const int TAG = 41813;

        public UnderlyingAutomaticExerciseIndicator()
            : base(Tags.UnderlyingAutomaticExerciseIndicator) { }
        public UnderlyingAutomaticExerciseIndicator(Boolean val)
            : base(Tags.UnderlyingAutomaticExerciseIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingAutomaticExerciseThresholdRate Field
    /// </summary>/
    public sealed class UnderlyingAutomaticExerciseThresholdRate : DecimalField
    {
        public const int TAG = 41814;

        public UnderlyingAutomaticExerciseThresholdRate()
            : base(Tags.UnderlyingAutomaticExerciseThresholdRate) { }
        public UnderlyingAutomaticExerciseThresholdRate(Decimal val)
            : base(Tags.UnderlyingAutomaticExerciseThresholdRate, val) { }

    }


    /// <summary>
    /// UnderlyingExerciseConfirmationMethod Field
    /// </summary>/
    public sealed class UnderlyingExerciseConfirmationMethod : IntField
    {
        public const int TAG = 41815;

        public UnderlyingExerciseConfirmationMethod()
            : base(Tags.UnderlyingExerciseConfirmationMethod) { }
        public UnderlyingExerciseConfirmationMethod(int val)
            : base(Tags.UnderlyingExerciseConfirmationMethod, val) { }


        // Field Enumerations
        public const int NOT_REQUIRED = 0;
        public const int NON_ELECTRONIC = 1;
        public const int ELECTRONIC = 2;
        public const int UNKNOWN_AT_TIME_OF_REPORT = 3;
    }


    /// <summary>
    /// UnderlyingManualNoticeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingManualNoticeBusinessCenter : StringField
    {
        public const int TAG = 41816;

        public UnderlyingManualNoticeBusinessCenter()
            : base(Tags.UnderlyingManualNoticeBusinessCenter) { }
        public UnderlyingManualNoticeBusinessCenter(string val)
            : base(Tags.UnderlyingManualNoticeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingFallbackExerciseIndicator Field
    /// </summary>/
    public sealed class UnderlyingFallbackExerciseIndicator : BooleanField
    {
        public const int TAG = 41817;

        public UnderlyingFallbackExerciseIndicator()
            : base(Tags.UnderlyingFallbackExerciseIndicator) { }
        public UnderlyingFallbackExerciseIndicator(Boolean val)
            : base(Tags.UnderlyingFallbackExerciseIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingLimitedRightToConfirmIndicator Field
    /// </summary>/
    public sealed class UnderlyingLimitedRightToConfirmIndicator : BooleanField
    {
        public const int TAG = 41818;

        public UnderlyingLimitedRightToConfirmIndicator()
            : base(Tags.UnderlyingLimitedRightToConfirmIndicator) { }
        public UnderlyingLimitedRightToConfirmIndicator(Boolean val)
            : base(Tags.UnderlyingLimitedRightToConfirmIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingExerciseSplitTicketIndicator Field
    /// </summary>/
    public sealed class UnderlyingExerciseSplitTicketIndicator : BooleanField
    {
        public const int TAG = 41819;

        public UnderlyingExerciseSplitTicketIndicator()
            : base(Tags.UnderlyingExerciseSplitTicketIndicator) { }
        public UnderlyingExerciseSplitTicketIndicator(Boolean val)
            : base(Tags.UnderlyingExerciseSplitTicketIndicator, val) { }

    }


    /// <summary>
    /// NoUnderlyingOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 41820;

        public NoUnderlyingOptionExerciseBusinessCenters()
            : base(Tags.NoUnderlyingOptionExerciseBusinessCenters) { }
        public NoUnderlyingOptionExerciseBusinessCenters(int val)
            : base(Tags.NoUnderlyingOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 41821;

        public UnderlyingOptionExerciseBusinessCenter()
            : base(Tags.UnderlyingOptionExerciseBusinessCenter) { }
        public UnderlyingOptionExerciseBusinessCenter(string val)
            : base(Tags.UnderlyingOptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 41822;

        public UnderlyingOptionExerciseBusinessDayConvention()
            : base(Tags.UnderlyingOptionExerciseBusinessDayConvention) { }
        public UnderlyingOptionExerciseBusinessDayConvention(int val)
            : base(Tags.UnderlyingOptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingOptionExerciseEarliestDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseEarliestDateOffsetDayType : IntField
    {
        public const int TAG = 41823;

        public UnderlyingOptionExerciseEarliestDateOffsetDayType()
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetDayType) { }
        public UnderlyingOptionExerciseEarliestDateOffsetDayType(int val)
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingOptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 41824;

        public UnderlyingOptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetPeriod) { }
        public UnderlyingOptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 41825;

        public UnderlyingOptionExerciseEarliestDateOffsetUnit()
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetUnit) { }
        public UnderlyingOptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.UnderlyingOptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingOptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 41826;

        public UnderlyingOptionExerciseFrequencyPeriod()
            : base(Tags.UnderlyingOptionExerciseFrequencyPeriod) { }
        public UnderlyingOptionExerciseFrequencyPeriod(int val)
            : base(Tags.UnderlyingOptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 41827;

        public UnderlyingOptionExerciseFrequencyUnit()
            : base(Tags.UnderlyingOptionExerciseFrequencyUnit) { }
        public UnderlyingOptionExerciseFrequencyUnit(string val)
            : base(Tags.UnderlyingOptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 41828;

        public UnderlyingOptionExerciseStartDateUnadjusted()
            : base(Tags.UnderlyingOptionExerciseStartDateUnadjusted) { }
        public UnderlyingOptionExerciseStartDateUnadjusted(string val)
            : base(Tags.UnderlyingOptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 41829;

        public UnderlyingOptionExerciseStartDateRelativeTo()
            : base(Tags.UnderlyingOptionExerciseStartDateRelativeTo) { }
        public UnderlyingOptionExerciseStartDateRelativeTo(int val)
            : base(Tags.UnderlyingOptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 41830;

        public UnderlyingOptionExerciseStartDateOffsetPeriod()
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetPeriod) { }
        public UnderlyingOptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 41831;

        public UnderlyingOptionExerciseStartDateOffsetUnit()
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetUnit) { }
        public UnderlyingOptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 41832;

        public UnderlyingOptionExerciseStartDateOffsetDayType()
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetDayType) { }
        public UnderlyingOptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.UnderlyingOptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingOptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 41833;

        public UnderlyingOptionExerciseStartDateAdjusted()
            : base(Tags.UnderlyingOptionExerciseStartDateAdjusted) { }
        public UnderlyingOptionExerciseStartDateAdjusted(string val)
            : base(Tags.UnderlyingOptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseSkip Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseSkip : IntField
    {
        public const int TAG = 41834;

        public UnderlyingOptionExerciseSkip()
            : base(Tags.UnderlyingOptionExerciseSkip) { }
        public UnderlyingOptionExerciseSkip(int val)
            : base(Tags.UnderlyingOptionExerciseSkip, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseNominationDeadline Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseNominationDeadline : StringField
    {
        public const int TAG = 41835;

        public UnderlyingOptionExerciseNominationDeadline()
            : base(Tags.UnderlyingOptionExerciseNominationDeadline) { }
        public UnderlyingOptionExerciseNominationDeadline(string val)
            : base(Tags.UnderlyingOptionExerciseNominationDeadline, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseFirstDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseFirstDateUnadjusted : StringField
    {
        public const int TAG = 41836;

        public UnderlyingOptionExerciseFirstDateUnadjusted()
            : base(Tags.UnderlyingOptionExerciseFirstDateUnadjusted) { }
        public UnderlyingOptionExerciseFirstDateUnadjusted(string val)
            : base(Tags.UnderlyingOptionExerciseFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseLastDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseLastDateUnadjusted : StringField
    {
        public const int TAG = 41837;

        public UnderlyingOptionExerciseLastDateUnadjusted()
            : base(Tags.UnderlyingOptionExerciseLastDateUnadjusted) { }
        public UnderlyingOptionExerciseLastDateUnadjusted(string val)
            : base(Tags.UnderlyingOptionExerciseLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseEarliestTime : StringField
    {
        public const int TAG = 41838;

        public UnderlyingOptionExerciseEarliestTime()
            : base(Tags.UnderlyingOptionExerciseEarliestTime) { }
        public UnderlyingOptionExerciseEarliestTime(string val)
            : base(Tags.UnderlyingOptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseLatestTime Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseLatestTime : StringField
    {
        public const int TAG = 41839;

        public UnderlyingOptionExerciseLatestTime()
            : base(Tags.UnderlyingOptionExerciseLatestTime) { }
        public UnderlyingOptionExerciseLatestTime(string val)
            : base(Tags.UnderlyingOptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseTimeBusinessCenter : StringField
    {
        public const int TAG = 41840;

        public UnderlyingOptionExerciseTimeBusinessCenter()
            : base(Tags.UnderlyingOptionExerciseTimeBusinessCenter) { }
        public UnderlyingOptionExerciseTimeBusinessCenter(string val)
            : base(Tags.UnderlyingOptionExerciseTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingOptionExerciseDates Field
    /// </summary>/
    public sealed class NoUnderlyingOptionExerciseDates : IntField
    {
        public const int TAG = 41841;

        public NoUnderlyingOptionExerciseDates()
            : base(Tags.NoUnderlyingOptionExerciseDates) { }
        public NoUnderlyingOptionExerciseDates(int val)
            : base(Tags.NoUnderlyingOptionExerciseDates, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseDate Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseDate : StringField
    {
        public const int TAG = 41842;

        public UnderlyingOptionExerciseDate()
            : base(Tags.UnderlyingOptionExerciseDate) { }
        public UnderlyingOptionExerciseDate(string val)
            : base(Tags.UnderlyingOptionExerciseDate, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseDateType Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseDateType : IntField
    {
        public const int TAG = 41843;

        public UnderlyingOptionExerciseDateType()
            : base(Tags.UnderlyingOptionExerciseDateType) { }
        public UnderlyingOptionExerciseDateType(int val)
            : base(Tags.UnderlyingOptionExerciseDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoUnderlyingOptionExerciseExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingOptionExerciseExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 41844;

        public NoUnderlyingOptionExerciseExpirationDateBusinessCenters()
            : base(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters) { }
        public NoUnderlyingOptionExerciseExpirationDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingOptionExerciseExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 41845;

        public UnderlyingOptionExerciseExpirationDateBusinessCenter()
            : base(Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter) { }
        public UnderlyingOptionExerciseExpirationDateBusinessCenter(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 41846;

        public UnderlyingOptionExerciseExpirationDateBusinessDayConvention()
            : base(Tags.UnderlyingOptionExerciseExpirationDateBusinessDayConvention) { }
        public UnderlyingOptionExerciseExpirationDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateRelativeTo : IntField
    {
        public const int TAG = 41847;

        public UnderlyingOptionExerciseExpirationDateRelativeTo()
            : base(Tags.UnderlyingOptionExerciseExpirationDateRelativeTo) { }
        public UnderlyingOptionExerciseExpirationDateRelativeTo(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 41848;

        public UnderlyingOptionExerciseExpirationDateOffsetPeriod()
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetPeriod) { }
        public UnderlyingOptionExerciseExpirationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 41849;

        public UnderlyingOptionExerciseExpirationDateOffsetUnit()
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetUnit) { }
        public UnderlyingOptionExerciseExpirationDateOffsetUnit(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationFrequencyPeriod : IntField
    {
        public const int TAG = 41850;

        public UnderlyingOptionExerciseExpirationFrequencyPeriod()
            : base(Tags.UnderlyingOptionExerciseExpirationFrequencyPeriod) { }
        public UnderlyingOptionExerciseExpirationFrequencyPeriod(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationFrequencyUnit : StringField
    {
        public const int TAG = 41851;

        public UnderlyingOptionExerciseExpirationFrequencyUnit()
            : base(Tags.UnderlyingOptionExerciseExpirationFrequencyUnit) { }
        public UnderlyingOptionExerciseExpirationFrequencyUnit(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationRollConvention Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationRollConvention : StringField
    {
        public const int TAG = 41852;

        public UnderlyingOptionExerciseExpirationRollConvention()
            : base(Tags.UnderlyingOptionExerciseExpirationRollConvention) { }
        public UnderlyingOptionExerciseExpirationRollConvention(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 41853;

        public UnderlyingOptionExerciseExpirationDateOffsetDayType()
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetDayType) { }
        public UnderlyingOptionExerciseExpirationDateOffsetDayType(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationTime Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationTime : StringField
    {
        public const int TAG = 41854;

        public UnderlyingOptionExerciseExpirationTime()
            : base(Tags.UnderlyingOptionExerciseExpirationTime) { }
        public UnderlyingOptionExerciseExpirationTime(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationTime, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 41855;

        public UnderlyingOptionExerciseExpirationTimeBusinessCenter()
            : base(Tags.UnderlyingOptionExerciseExpirationTimeBusinessCenter) { }
        public UnderlyingOptionExerciseExpirationTimeBusinessCenter(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingOptionExerciseExpirationDates Field
    /// </summary>/
    public sealed class NoUnderlyingOptionExerciseExpirationDates : IntField
    {
        public const int TAG = 41856;

        public NoUnderlyingOptionExerciseExpirationDates()
            : base(Tags.NoUnderlyingOptionExerciseExpirationDates) { }
        public NoUnderlyingOptionExerciseExpirationDates(int val)
            : base(Tags.NoUnderlyingOptionExerciseExpirationDates, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDate Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDate : StringField
    {
        public const int TAG = 41857;

        public UnderlyingOptionExerciseExpirationDate()
            : base(Tags.UnderlyingOptionExerciseExpirationDate) { }
        public UnderlyingOptionExerciseExpirationDate(string val)
            : base(Tags.UnderlyingOptionExerciseExpirationDate, val) { }

    }


    /// <summary>
    /// UnderlyingOptionExerciseExpirationDateType Field
    /// </summary>/
    public sealed class UnderlyingOptionExerciseExpirationDateType : IntField
    {
        public const int TAG = 41858;

        public UnderlyingOptionExerciseExpirationDateType()
            : base(Tags.UnderlyingOptionExerciseExpirationDateType) { }
        public UnderlyingOptionExerciseExpirationDateType(int val)
            : base(Tags.UnderlyingOptionExerciseExpirationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingMarketDisruptionProvision Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionProvision : IntField
    {
        public const int TAG = 41859;

        public UnderlyingMarketDisruptionProvision()
            : base(Tags.UnderlyingMarketDisruptionProvision) { }
        public UnderlyingMarketDisruptionProvision(int val)
            : base(Tags.UnderlyingMarketDisruptionProvision, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int APPLICABLE = 1;
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 3;
    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackProvision Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackProvision : IntField
    {
        public const int TAG = 41860;

        public UnderlyingMarketDisruptionFallbackProvision()
            : base(Tags.UnderlyingMarketDisruptionFallbackProvision) { }
        public UnderlyingMarketDisruptionFallbackProvision(int val)
            : base(Tags.UnderlyingMarketDisruptionFallbackProvision, val) { }


        // Field Enumerations
        public const int AS_SPECIFIED_IN_MASTER_AGREEMENT = 0;
        public const int AS_SPECIFIED_IN_CONFIRMATION = 1;
    }


    /// <summary>
    /// UnderlyingMarketDisruptionMaximumDays Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionMaximumDays : IntField
    {
        public const int TAG = 41861;

        public UnderlyingMarketDisruptionMaximumDays()
            : base(Tags.UnderlyingMarketDisruptionMaximumDays) { }
        public UnderlyingMarketDisruptionMaximumDays(int val)
            : base(Tags.UnderlyingMarketDisruptionMaximumDays, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionMaterialityPercentage Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionMaterialityPercentage : DecimalField
    {
        public const int TAG = 41862;

        public UnderlyingMarketDisruptionMaterialityPercentage()
            : base(Tags.UnderlyingMarketDisruptionMaterialityPercentage) { }
        public UnderlyingMarketDisruptionMaterialityPercentage(Decimal val)
            : base(Tags.UnderlyingMarketDisruptionMaterialityPercentage, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionMinimumFuturesContracts Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionMinimumFuturesContracts : IntField
    {
        public const int TAG = 41863;

        public UnderlyingMarketDisruptionMinimumFuturesContracts()
            : base(Tags.UnderlyingMarketDisruptionMinimumFuturesContracts) { }
        public UnderlyingMarketDisruptionMinimumFuturesContracts(int val)
            : base(Tags.UnderlyingMarketDisruptionMinimumFuturesContracts, val) { }

    }


    /// <summary>
    /// NoUnderlyingMarketDisruptionEvents Field
    /// </summary>/
    public sealed class NoUnderlyingMarketDisruptionEvents : IntField
    {
        public const int TAG = 41864;

        public NoUnderlyingMarketDisruptionEvents()
            : base(Tags.NoUnderlyingMarketDisruptionEvents) { }
        public NoUnderlyingMarketDisruptionEvents(int val)
            : base(Tags.NoUnderlyingMarketDisruptionEvents, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionEvent Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionEvent : StringField
    {
        public const int TAG = 41865;

        public UnderlyingMarketDisruptionEvent()
            : base(Tags.UnderlyingMarketDisruptionEvent) { }
        public UnderlyingMarketDisruptionEvent(string val)
            : base(Tags.UnderlyingMarketDisruptionEvent, val) { }

    }


    /// <summary>
    /// NoUnderlyingMarketDisruptionFallbacks Field
    /// </summary>/
    public sealed class NoUnderlyingMarketDisruptionFallbacks : IntField
    {
        public const int TAG = 41866;

        public NoUnderlyingMarketDisruptionFallbacks()
            : base(Tags.NoUnderlyingMarketDisruptionFallbacks) { }
        public NoUnderlyingMarketDisruptionFallbacks(int val)
            : base(Tags.NoUnderlyingMarketDisruptionFallbacks, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackType Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackType : StringField
    {
        public const int TAG = 41867;

        public UnderlyingMarketDisruptionFallbackType()
            : base(Tags.UnderlyingMarketDisruptionFallbackType) { }
        public UnderlyingMarketDisruptionFallbackType(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackType, val) { }

    }


    /// <summary>
    /// NoUnderlyingMarketDisruptionFallbackReferencePrices Field
    /// </summary>/
    public sealed class NoUnderlyingMarketDisruptionFallbackReferencePrices : IntField
    {
        public const int TAG = 41868;

        public NoUnderlyingMarketDisruptionFallbackReferencePrices()
            : base(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices) { }
        public NoUnderlyingMarketDisruptionFallbackReferencePrices(int val)
            : base(Tags.NoUnderlyingMarketDisruptionFallbackReferencePrices, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackUnderlierType Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackUnderlierType : IntField
    {
        public const int TAG = 41869;

        public UnderlyingMarketDisruptionFallbackUnderlierType()
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierType) { }
        public UnderlyingMarketDisruptionFallbackUnderlierType(int val)
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierType, val) { }


        // Field Enumerations
        public const int BASKET = 0;
        public const int BOND = 1;
        public const int CASH = 2;
        public const int COMMODITY = 3;
        public const int CONVERTIBLE_BOND = 4;
        public const int EQUITY = 5;
        public const int EXCHANGE_TRADED_FUND = 6;
        public const int FUTURE = 7;
        public const int INDEX = 8;
        public const int LOAN = 9;
        public const int MORTGAGE = 10;
        public const int MUTUAL_FUND = 11;
    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackUnderlierSecurityID Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackUnderlierSecurityID : StringField
    {
        public const int TAG = 41870;

        public UnderlyingMarketDisruptionFallbackUnderlierSecurityID()
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID) { }
        public UnderlyingMarketDisruptionFallbackUnderlierSecurityID(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityID, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource : StringField
    {
        public const int TAG = 41871;

        public UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource()
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource) { }
        public UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41872;

        public UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc) { }
        public UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen : IntField
    {
        public const int TAG = 41873;

        public EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen()
            : base(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen) { }
        public EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen(int val)
            : base(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc : StringField
    {
        public const int TAG = 41874;

        public EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc()
            : base(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc) { }
        public EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(string val)
            : base(Tags.EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackOpenUnits Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackOpenUnits : DecimalField
    {
        public const int TAG = 41875;

        public UnderlyingMarketDisruptionFallbackOpenUnits()
            : base(Tags.UnderlyingMarketDisruptionFallbackOpenUnits) { }
        public UnderlyingMarketDisruptionFallbackOpenUnits(Decimal val)
            : base(Tags.UnderlyingMarketDisruptionFallbackOpenUnits, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackBasketCurrency Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackBasketCurrency : StringField
    {
        public const int TAG = 41876;

        public UnderlyingMarketDisruptionFallbackBasketCurrency()
            : base(Tags.UnderlyingMarketDisruptionFallbackBasketCurrency) { }
        public UnderlyingMarketDisruptionFallbackBasketCurrency(string val)
            : base(Tags.UnderlyingMarketDisruptionFallbackBasketCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingMarketDisruptionFallbackBasketDivisor Field
    /// </summary>/
    public sealed class UnderlyingMarketDisruptionFallbackBasketDivisor : DecimalField
    {
        public const int TAG = 41877;

        public UnderlyingMarketDisruptionFallbackBasketDivisor()
            : base(Tags.UnderlyingMarketDisruptionFallbackBasketDivisor) { }
        public UnderlyingMarketDisruptionFallbackBasketDivisor(Decimal val)
            : base(Tags.UnderlyingMarketDisruptionFallbackBasketDivisor, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentScheduleFixingDays Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentScheduleFixingDays : IntField
    {
        public const int TAG = 41878;

        public NoUnderlyingPaymentScheduleFixingDays()
            : base(Tags.NoUnderlyingPaymentScheduleFixingDays) { }
        public NoUnderlyingPaymentScheduleFixingDays(int val)
            : base(Tags.NoUnderlyingPaymentScheduleFixingDays, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDayOfWeek Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDayOfWeek : IntField
    {
        public const int TAG = 41879;

        public UnderlyingPaymentScheduleFixingDayOfWeek()
            : base(Tags.UnderlyingPaymentScheduleFixingDayOfWeek) { }
        public UnderlyingPaymentScheduleFixingDayOfWeek(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDayNumber Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDayNumber : IntField
    {
        public const int TAG = 41880;

        public UnderlyingPaymentScheduleFixingDayNumber()
            : base(Tags.UnderlyingPaymentScheduleFixingDayNumber) { }
        public UnderlyingPaymentScheduleFixingDayNumber(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDayNumber, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleXID Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleXID : StringField
    {
        public const int TAG = 41881;

        public UnderlyingPaymentScheduleXID()
            : base(Tags.UnderlyingPaymentScheduleXID) { }
        public UnderlyingPaymentScheduleXID(string val)
            : base(Tags.UnderlyingPaymentScheduleXID, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleXIDRef Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleXIDRef : StringField
    {
        public const int TAG = 41882;

        public UnderlyingPaymentScheduleXIDRef()
            : base(Tags.UnderlyingPaymentScheduleXIDRef) { }
        public UnderlyingPaymentScheduleXIDRef(string val)
            : base(Tags.UnderlyingPaymentScheduleXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateCurrency : StringField
    {
        public const int TAG = 41883;

        public UnderlyingPaymentScheduleRateCurrency()
            : base(Tags.UnderlyingPaymentScheduleRateCurrency) { }
        public UnderlyingPaymentScheduleRateCurrency(string val)
            : base(Tags.UnderlyingPaymentScheduleRateCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateUnitOfMeasure : StringField
    {
        public const int TAG = 41884;

        public UnderlyingPaymentScheduleRateUnitOfMeasure()
            : base(Tags.UnderlyingPaymentScheduleRateUnitOfMeasure) { }
        public UnderlyingPaymentScheduleRateUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentScheduleRateUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateConversionFactor Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateConversionFactor : DecimalField
    {
        public const int TAG = 41885;

        public UnderlyingPaymentScheduleRateConversionFactor()
            : base(Tags.UnderlyingPaymentScheduleRateConversionFactor) { }
        public UnderlyingPaymentScheduleRateConversionFactor(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleRateConversionFactor, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleRateSpreadType Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleRateSpreadType : IntField
    {
        public const int TAG = 41886;

        public UnderlyingPaymentScheduleRateSpreadType()
            : base(Tags.UnderlyingPaymentScheduleRateSpreadType) { }
        public UnderlyingPaymentScheduleRateSpreadType(int val)
            : base(Tags.UnderlyingPaymentScheduleRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleSettlPeriodPrice Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleSettlPeriodPrice : DecimalField
    {
        public const int TAG = 41887;

        public UnderlyingPaymentScheduleSettlPeriodPrice()
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPrice) { }
        public UnderlyingPaymentScheduleSettlPeriodPrice(Decimal val)
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPrice, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleSettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleSettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 41888;

        public UnderlyingPaymentScheduleSettlPeriodPriceCurrency()
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency) { }
        public UnderlyingPaymentScheduleSettlPeriodPriceCurrency(string val)
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 41889;

        public UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure()
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure) { }
        public UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleStepUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleStepUnitOfMeasure : StringField
    {
        public const int TAG = 41890;

        public UnderlyingPaymentScheduleStepUnitOfMeasure()
            : base(Tags.UnderlyingPaymentScheduleStepUnitOfMeasure) { }
        public UnderlyingPaymentScheduleStepUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentScheduleStepUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDayDistribution Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDayDistribution : IntField
    {
        public const int TAG = 41891;

        public UnderlyingPaymentScheduleFixingDayDistribution()
            : base(Tags.UnderlyingPaymentScheduleFixingDayDistribution) { }
        public UnderlyingPaymentScheduleFixingDayDistribution(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingDayCount Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingDayCount : IntField
    {
        public const int TAG = 41892;

        public UnderlyingPaymentScheduleFixingDayCount()
            : base(Tags.UnderlyingPaymentScheduleFixingDayCount) { }
        public UnderlyingPaymentScheduleFixingDayCount(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingDayCount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingLagPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingLagPeriod : IntField
    {
        public const int TAG = 41893;

        public UnderlyingPaymentScheduleFixingLagPeriod()
            : base(Tags.UnderlyingPaymentScheduleFixingLagPeriod) { }
        public UnderlyingPaymentScheduleFixingLagPeriod(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingLagPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingLagUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingLagUnit : StringField
    {
        public const int TAG = 41894;

        public UnderlyingPaymentScheduleFixingLagUnit()
            : base(Tags.UnderlyingPaymentScheduleFixingLagUnit) { }
        public UnderlyingPaymentScheduleFixingLagUnit(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41895;

        public UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod) { }
        public UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41896;

        public UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit()
            : base(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit) { }
        public UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamFlatRateIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFlatRateIndicator : BooleanField
    {
        public const int TAG = 41897;

        public UnderlyingPaymentStreamFlatRateIndicator()
            : base(Tags.UnderlyingPaymentStreamFlatRateIndicator) { }
        public UnderlyingPaymentStreamFlatRateIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamFlatRateIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFlatRateAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFlatRateAmount : DecimalField
    {
        public const int TAG = 41898;

        public UnderlyingPaymentStreamFlatRateAmount()
            : base(Tags.UnderlyingPaymentStreamFlatRateAmount) { }
        public UnderlyingPaymentStreamFlatRateAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamFlatRateAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFlatRateCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFlatRateCurrency : StringField
    {
        public const int TAG = 41899;

        public UnderlyingPaymentStreamFlatRateCurrency()
            : base(Tags.UnderlyingPaymentStreamFlatRateCurrency) { }
        public UnderlyingPaymentStreamFlatRateCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamFlatRateCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamMaximumPaymentAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMaximumPaymentAmount : DecimalField
    {
        public const int TAG = 41900;

        public UnderlyingPaymentStreamMaximumPaymentAmount()
            : base(Tags.UnderlyingPaymentStreamMaximumPaymentAmount) { }
        public UnderlyingPaymentStreamMaximumPaymentAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamMaximumPaymentAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamMaximumPaymentCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMaximumPaymentCurrency : StringField
    {
        public const int TAG = 41901;

        public UnderlyingPaymentStreamMaximumPaymentCurrency()
            : base(Tags.UnderlyingPaymentStreamMaximumPaymentCurrency) { }
        public UnderlyingPaymentStreamMaximumPaymentCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamMaximumPaymentCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamMaximumTransactionAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMaximumTransactionAmount : DecimalField
    {
        public const int TAG = 41902;

        public UnderlyingPaymentStreamMaximumTransactionAmount()
            : base(Tags.UnderlyingPaymentStreamMaximumTransactionAmount) { }
        public UnderlyingPaymentStreamMaximumTransactionAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamMaximumTransactionAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamMaximumTransactionCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMaximumTransactionCurrency : StringField
    {
        public const int TAG = 41903;

        public UnderlyingPaymentStreamMaximumTransactionCurrency()
            : base(Tags.UnderlyingPaymentStreamMaximumTransactionCurrency) { }
        public UnderlyingPaymentStreamMaximumTransactionCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamMaximumTransactionCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixedAmountUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixedAmountUnitOfMeasure : StringField
    {
        public const int TAG = 41904;

        public UnderlyingPaymentStreamFixedAmountUnitOfMeasure()
            : base(Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure) { }
        public UnderlyingPaymentStreamFixedAmountUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentStreamFixedAmountUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentStreamTotalFixedAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamTotalFixedAmount : DecimalField
    {
        public const int TAG = 41905;

        public UnderlyingPaymentStreamTotalFixedAmount()
            : base(Tags.UnderlyingPaymentStreamTotalFixedAmount) { }
        public UnderlyingPaymentStreamTotalFixedAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamTotalFixedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamWorldScaleRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamWorldScaleRate : DecimalField
    {
        public const int TAG = 41906;

        public UnderlyingPaymentStreamWorldScaleRate()
            : base(Tags.UnderlyingPaymentStreamWorldScaleRate) { }
        public UnderlyingPaymentStreamWorldScaleRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamWorldScaleRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamContractPrice Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamContractPrice : DecimalField
    {
        public const int TAG = 41907;

        public UnderlyingPaymentStreamContractPrice()
            : base(Tags.UnderlyingPaymentStreamContractPrice) { }
        public UnderlyingPaymentStreamContractPrice(Decimal val)
            : base(Tags.UnderlyingPaymentStreamContractPrice, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamContractPriceCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamContractPriceCurrency : StringField
    {
        public const int TAG = 41908;

        public UnderlyingPaymentStreamContractPriceCurrency()
            : base(Tags.UnderlyingPaymentStreamContractPriceCurrency) { }
        public UnderlyingPaymentStreamContractPriceCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamContractPriceCurrency, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamPricingBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamPricingBusinessCenters : IntField
    {
        public const int TAG = 41909;

        public NoUnderlyingPaymentStreamPricingBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters) { }
        public NoUnderlyingPaymentStreamPricingBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamPricingBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingBusinessCenter : StringField
    {
        public const int TAG = 41910;

        public UnderlyingPaymentStreamPricingBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamPricingBusinessCenter) { }
        public UnderlyingPaymentStreamPricingBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamPricingBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndex2CurveUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndex2CurveUnit : StringField
    {
        public const int TAG = 41911;

        public UnderlyingPaymentStreamRateIndex2CurveUnit()
            : base(Tags.UnderlyingPaymentStreamRateIndex2CurveUnit) { }
        public UnderlyingPaymentStreamRateIndex2CurveUnit(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndex2CurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndex2CurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndex2CurvePeriod : IntField
    {
        public const int TAG = 41912;

        public UnderlyingPaymentStreamRateIndex2CurvePeriod()
            : base(Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod) { }
        public UnderlyingPaymentStreamRateIndex2CurvePeriod(int val)
            : base(Tags.UnderlyingPaymentStreamRateIndex2CurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexLocation Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexLocation : StringField
    {
        public const int TAG = 41913;

        public UnderlyingPaymentStreamRateIndexLocation()
            : base(Tags.UnderlyingPaymentStreamRateIndexLocation) { }
        public UnderlyingPaymentStreamRateIndexLocation(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndexLocation, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexLevel Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexLevel : DecimalField
    {
        public const int TAG = 41914;

        public UnderlyingPaymentStreamRateIndexLevel()
            : base(Tags.UnderlyingPaymentStreamRateIndexLevel) { }
        public UnderlyingPaymentStreamRateIndexLevel(Decimal val)
            : base(Tags.UnderlyingPaymentStreamRateIndexLevel, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexUnitOfMeasure : StringField
    {
        public const int TAG = 41915;

        public UnderlyingPaymentStreamRateIndexUnitOfMeasure()
            : base(Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure) { }
        public UnderlyingPaymentStreamRateIndexUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndexUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentStreamSettlLevel Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamSettlLevel : IntField
    {
        public const int TAG = 41916;

        public UnderlyingPaymentStreamSettlLevel()
            : base(Tags.UnderlyingPaymentStreamSettlLevel) { }
        public UnderlyingPaymentStreamSettlLevel(int val)
            : base(Tags.UnderlyingPaymentStreamSettlLevel, val) { }


        // Field Enumerations
        public const int AVERAGE = 0;
        public const int MAXIMUM = 1;
        public const int MINIMUM = 2;
        public const int CUMULATIVE = 3;
    }


    /// <summary>
    /// UnderlyingPaymentStreamReferenceLevel Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamReferenceLevel : DecimalField
    {
        public const int TAG = 41917;

        public UnderlyingPaymentStreamReferenceLevel()
            : base(Tags.UnderlyingPaymentStreamReferenceLevel) { }
        public UnderlyingPaymentStreamReferenceLevel(Decimal val)
            : base(Tags.UnderlyingPaymentStreamReferenceLevel, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamReferenceLevelUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamReferenceLevelUnitOfMeasure : StringField
    {
        public const int TAG = 41918;

        public UnderlyingPaymentStreamReferenceLevelUnitOfMeasure()
            : base(Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure) { }
        public UnderlyingPaymentStreamReferenceLevelUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentStreamReferenceLevelUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator : BooleanField
    {
        public const int TAG = 41919;

        public UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator()
            : base(Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator) { }
        public UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateSpreadCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateSpreadCurrency : StringField
    {
        public const int TAG = 41920;

        public UnderlyingPaymentStreamRateSpreadCurrency()
            : base(Tags.UnderlyingPaymentStreamRateSpreadCurrency) { }
        public UnderlyingPaymentStreamRateSpreadCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamRateSpreadCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateSpreadUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateSpreadUnitOfMeasure : StringField
    {
        public const int TAG = 41921;

        public UnderlyingPaymentStreamRateSpreadUnitOfMeasure()
            : base(Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure) { }
        public UnderlyingPaymentStreamRateSpreadUnitOfMeasure(string val)
            : base(Tags.UnderlyingPaymentStreamRateSpreadUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateConversionFactor Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateConversionFactor : DecimalField
    {
        public const int TAG = 41922;

        public UnderlyingPaymentStreamRateConversionFactor()
            : base(Tags.UnderlyingPaymentStreamRateConversionFactor) { }
        public UnderlyingPaymentStreamRateConversionFactor(Decimal val)
            : base(Tags.UnderlyingPaymentStreamRateConversionFactor, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateSpreadType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateSpreadType : IntField
    {
        public const int TAG = 41923;

        public UnderlyingPaymentStreamRateSpreadType()
            : base(Tags.UnderlyingPaymentStreamRateSpreadType) { }
        public UnderlyingPaymentStreamRateSpreadType(int val)
            : base(Tags.UnderlyingPaymentStreamRateSpreadType, val) { }


        // Field Enumerations
        public const int ABSOLUTE = 0;
        public const int PERCENTAGE = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamLastResetRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLastResetRate : DecimalField
    {
        public const int TAG = 41924;

        public UnderlyingPaymentStreamLastResetRate()
            : base(Tags.UnderlyingPaymentStreamLastResetRate) { }
        public UnderlyingPaymentStreamLastResetRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamLastResetRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalRate : DecimalField
    {
        public const int TAG = 41925;

        public UnderlyingPaymentStreamFinalRate()
            : base(Tags.UnderlyingPaymentStreamFinalRate) { }
        public UnderlyingPaymentStreamFinalRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamFinalRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCalculationLagPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCalculationLagPeriod : IntField
    {
        public const int TAG = 41926;

        public UnderlyingPaymentStreamCalculationLagPeriod()
            : base(Tags.UnderlyingPaymentStreamCalculationLagPeriod) { }
        public UnderlyingPaymentStreamCalculationLagPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCalculationLagPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCalculationLagUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCalculationLagUnit : StringField
    {
        public const int TAG = 41927;

        public UnderlyingPaymentStreamCalculationLagUnit()
            : base(Tags.UnderlyingPaymentStreamCalculationLagUnit) { }
        public UnderlyingPaymentStreamCalculationLagUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCalculationLagUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateOffsetPeriod : IntField
    {
        public const int TAG = 41928;

        public UnderlyingPaymentStreamFirstObservationDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod) { }
        public UnderlyingPaymentStreamFirstObservationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateOffsetUnit : StringField
    {
        public const int TAG = 41929;

        public UnderlyingPaymentStreamFirstObservationDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit) { }
        public UnderlyingPaymentStreamFirstObservationDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDayType : IntField
    {
        public const int TAG = 41930;

        public UnderlyingPaymentStreamPricingDayType()
            : base(Tags.UnderlyingPaymentStreamPricingDayType) { }
        public UnderlyingPaymentStreamPricingDayType(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDayDistribution Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDayDistribution : IntField
    {
        public const int TAG = 41931;

        public UnderlyingPaymentStreamPricingDayDistribution()
            : base(Tags.UnderlyingPaymentStreamPricingDayDistribution) { }
        public UnderlyingPaymentStreamPricingDayDistribution(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDayDistribution, val) { }


        // Field Enumerations
        public const int ALL = 0;
        public const int FIRST = 1;
        public const int LAST = 2;
        public const int PENULTIMATE = 3;
    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDayCount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDayCount : IntField
    {
        public const int TAG = 41932;

        public UnderlyingPaymentStreamPricingDayCount()
            : base(Tags.UnderlyingPaymentStreamPricingDayCount) { }
        public UnderlyingPaymentStreamPricingDayCount(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDayCount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingBusinessCalendar Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingBusinessCalendar : StringField
    {
        public const int TAG = 41933;

        public UnderlyingPaymentStreamPricingBusinessCalendar()
            : base(Tags.UnderlyingPaymentStreamPricingBusinessCalendar) { }
        public UnderlyingPaymentStreamPricingBusinessCalendar(string val)
            : base(Tags.UnderlyingPaymentStreamPricingBusinessCalendar, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingBusinessDayConvention : IntField
    {
        public const int TAG = 41934;

        public UnderlyingPaymentStreamPricingBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamPricingBusinessDayConvention) { }
        public UnderlyingPaymentStreamPricingBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamPricingBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegStreamCommoditySettlTimeType Field
    /// </summary>/
    public sealed class LegStreamCommoditySettlTimeType : IntField
    {
        public const int TAG = 41935;

        public LegStreamCommoditySettlTimeType()
            : base(Tags.LegStreamCommoditySettlTimeType) { }
        public LegStreamCommoditySettlTimeType(int val)
            : base(Tags.LegStreamCommoditySettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlTimeType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlTimeType : IntField
    {
        public const int TAG = 41936;

        public UnderlyingStreamCommoditySettlTimeType()
            : base(Tags.UnderlyingStreamCommoditySettlTimeType) { }
        public UnderlyingStreamCommoditySettlTimeType(int val)
            : base(Tags.UnderlyingStreamCommoditySettlTimeType, val) { }


        // Field Enumerations
        public const int HOUR_OF_THE_DAY = 0;
        public const int HHMM_TIME_FORMAT = 1;
    }


    /// <summary>
    /// NoUnderlyingPaymentStreamPaymentDates Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamPaymentDates : IntField
    {
        public const int TAG = 41937;

        public NoUnderlyingPaymentStreamPaymentDates()
            : base(Tags.NoUnderlyingPaymentStreamPaymentDates) { }
        public NoUnderlyingPaymentStreamPaymentDates(int val)
            : base(Tags.NoUnderlyingPaymentStreamPaymentDates, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDate : StringField
    {
        public const int TAG = 41938;

        public UnderlyingPaymentStreamPaymentDate()
            : base(Tags.UnderlyingPaymentStreamPaymentDate) { }
        public UnderlyingPaymentStreamPaymentDate(string val)
            : base(Tags.UnderlyingPaymentStreamPaymentDate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPaymentDateType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPaymentDateType : IntField
    {
        public const int TAG = 41939;

        public UnderlyingPaymentStreamPaymentDateType()
            : base(Tags.UnderlyingPaymentStreamPaymentDateType) { }
        public UnderlyingPaymentStreamPaymentDateType(int val)
            : base(Tags.UnderlyingPaymentStreamPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator : BooleanField
    {
        public const int TAG = 41940;

        public UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator()
            : base(Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator) { }
        public UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamPricingDates Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamPricingDates : IntField
    {
        public const int TAG = 41941;

        public NoUnderlyingPaymentStreamPricingDates()
            : base(Tags.NoUnderlyingPaymentStreamPricingDates) { }
        public NoUnderlyingPaymentStreamPricingDates(int val)
            : base(Tags.NoUnderlyingPaymentStreamPricingDates, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDate : StringField
    {
        public const int TAG = 41942;

        public UnderlyingPaymentStreamPricingDate()
            : base(Tags.UnderlyingPaymentStreamPricingDate) { }
        public UnderlyingPaymentStreamPricingDate(string val)
            : base(Tags.UnderlyingPaymentStreamPricingDate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDateType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDateType : IntField
    {
        public const int TAG = 41943;

        public UnderlyingPaymentStreamPricingDateType()
            : base(Tags.UnderlyingPaymentStreamPricingDateType) { }
        public UnderlyingPaymentStreamPricingDateType(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoUnderlyingPaymentStreamPricingDays Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamPricingDays : IntField
    {
        public const int TAG = 41944;

        public NoUnderlyingPaymentStreamPricingDays()
            : base(Tags.NoUnderlyingPaymentStreamPricingDays) { }
        public NoUnderlyingPaymentStreamPricingDays(int val)
            : base(Tags.NoUnderlyingPaymentStreamPricingDays, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDayOfWeek Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDayOfWeek : IntField
    {
        public const int TAG = 41945;

        public UnderlyingPaymentStreamPricingDayOfWeek()
            : base(Tags.UnderlyingPaymentStreamPricingDayOfWeek) { }
        public UnderlyingPaymentStreamPricingDayOfWeek(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDayOfWeek, val) { }


        // Field Enumerations
        public const int EVERY_DAY = 0;
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamPricingDayNumber Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamPricingDayNumber : IntField
    {
        public const int TAG = 41946;

        public UnderlyingPaymentStreamPricingDayNumber()
            : base(Tags.UnderlyingPaymentStreamPricingDayNumber) { }
        public UnderlyingPaymentStreamPricingDayNumber(int val)
            : base(Tags.UnderlyingPaymentStreamPricingDayNumber, val) { }

    }


    /// <summary>
    /// NoUnderlyingPricingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPricingDateBusinessCenters : IntField
    {
        public const int TAG = 41947;

        public NoUnderlyingPricingDateBusinessCenters()
            : base(Tags.NoUnderlyingPricingDateBusinessCenters) { }
        public NoUnderlyingPricingDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPricingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingPricingDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPricingDateBusinessCenter : StringField
    {
        public const int TAG = 41948;

        public UnderlyingPricingDateBusinessCenter()
            : base(Tags.UnderlyingPricingDateBusinessCenter) { }
        public UnderlyingPricingDateBusinessCenter(string val)
            : base(Tags.UnderlyingPricingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPricingDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPricingDateUnadjusted : StringField
    {
        public const int TAG = 41949;

        public UnderlyingPricingDateUnadjusted()
            : base(Tags.UnderlyingPricingDateUnadjusted) { }
        public UnderlyingPricingDateUnadjusted(string val)
            : base(Tags.UnderlyingPricingDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPricingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPricingDateBusinessDayConvention : IntField
    {
        public const int TAG = 41950;

        public UnderlyingPricingDateBusinessDayConvention()
            : base(Tags.UnderlyingPricingDateBusinessDayConvention) { }
        public UnderlyingPricingDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPricingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPricingDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPricingDateAdjusted : StringField
    {
        public const int TAG = 41951;

        public UnderlyingPricingDateAdjusted()
            : base(Tags.UnderlyingPricingDateAdjusted) { }
        public UnderlyingPricingDateAdjusted(string val)
            : base(Tags.UnderlyingPricingDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPricingTime Field
    /// </summary>/
    public sealed class UnderlyingPricingTime : StringField
    {
        public const int TAG = 41952;

        public UnderlyingPricingTime()
            : base(Tags.UnderlyingPricingTime) { }
        public UnderlyingPricingTime(string val)
            : base(Tags.UnderlyingPricingTime, val) { }

    }


    /// <summary>
    /// UnderlyingPricingTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPricingTimeBusinessCenter : StringField
    {
        public const int TAG = 41953;

        public UnderlyingPricingTimeBusinessCenter()
            : base(Tags.UnderlyingPricingTimeBusinessCenter) { }
        public UnderlyingPricingTimeBusinessCenter(string val)
            : base(Tags.UnderlyingPricingTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCalculationPeriodDates Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCalculationPeriodDates : IntField
    {
        public const int TAG = 41954;

        public NoUnderlyingStreamCalculationPeriodDates()
            : base(Tags.NoUnderlyingStreamCalculationPeriodDates) { }
        public NoUnderlyingStreamCalculationPeriodDates(int val)
            : base(Tags.NoUnderlyingStreamCalculationPeriodDates, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodDate Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodDate : StringField
    {
        public const int TAG = 41955;

        public UnderlyingStreamCalculationPeriodDate()
            : base(Tags.UnderlyingStreamCalculationPeriodDate) { }
        public UnderlyingStreamCalculationPeriodDate(string val)
            : base(Tags.UnderlyingStreamCalculationPeriodDate, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodDateType Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodDateType : IntField
    {
        public const int TAG = 41956;

        public UnderlyingStreamCalculationPeriodDateType()
            : base(Tags.UnderlyingStreamCalculationPeriodDateType) { }
        public UnderlyingStreamCalculationPeriodDateType(int val)
            : base(Tags.UnderlyingStreamCalculationPeriodDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodDatesXID Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodDatesXID : StringField
    {
        public const int TAG = 41957;

        public UnderlyingStreamCalculationPeriodDatesXID()
            : base(Tags.UnderlyingStreamCalculationPeriodDatesXID) { }
        public UnderlyingStreamCalculationPeriodDatesXID(string val)
            : base(Tags.UnderlyingStreamCalculationPeriodDatesXID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationPeriodDatesXIDRef Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationPeriodDatesXIDRef : StringField
    {
        public const int TAG = 41958;

        public UnderlyingStreamCalculationPeriodDatesXIDRef()
            : base(Tags.UnderlyingStreamCalculationPeriodDatesXIDRef) { }
        public UnderlyingStreamCalculationPeriodDatesXIDRef(string val)
            : base(Tags.UnderlyingStreamCalculationPeriodDatesXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationBalanceOfFirstPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationBalanceOfFirstPeriod : BooleanField
    {
        public const int TAG = 41959;

        public UnderlyingStreamCalculationBalanceOfFirstPeriod()
            : base(Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod) { }
        public UnderlyingStreamCalculationBalanceOfFirstPeriod(Boolean val)
            : base(Tags.UnderlyingStreamCalculationBalanceOfFirstPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationCorrectionPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationCorrectionPeriod : IntField
    {
        public const int TAG = 41960;

        public UnderlyingStreamCalculationCorrectionPeriod()
            : base(Tags.UnderlyingStreamCalculationCorrectionPeriod) { }
        public UnderlyingStreamCalculationCorrectionPeriod(int val)
            : base(Tags.UnderlyingStreamCalculationCorrectionPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCalculationCorrectionUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamCalculationCorrectionUnit : StringField
    {
        public const int TAG = 41961;

        public UnderlyingStreamCalculationCorrectionUnit()
            : base(Tags.UnderlyingStreamCalculationCorrectionUnit) { }
        public UnderlyingStreamCalculationCorrectionUnit(string val)
            : base(Tags.UnderlyingStreamCalculationCorrectionUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// NoUnderlyingStreamCommoditySettlBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommoditySettlBusinessCenters : IntField
    {
        public const int TAG = 41962;

        public NoUnderlyingStreamCommoditySettlBusinessCenters()
            : base(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters) { }
        public NoUnderlyingStreamCommoditySettlBusinessCenters(int val)
            : base(Tags.NoUnderlyingStreamCommoditySettlBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlBusinessCenter : StringField
    {
        public const int TAG = 41963;

        public UnderlyingStreamCommoditySettlBusinessCenter()
            : base(Tags.UnderlyingStreamCommoditySettlBusinessCenter) { }
        public UnderlyingStreamCommoditySettlBusinessCenter(string val)
            : base(Tags.UnderlyingStreamCommoditySettlBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityBase Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityBase : StringField
    {
        public const int TAG = 41964;

        public UnderlyingStreamCommodityBase()
            : base(Tags.UnderlyingStreamCommodityBase) { }
        public UnderlyingStreamCommodityBase(string val)
            : base(Tags.UnderlyingStreamCommodityBase, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityType : StringField
    {
        public const int TAG = 41965;

        public UnderlyingStreamCommodityType()
            : base(Tags.UnderlyingStreamCommodityType) { }
        public UnderlyingStreamCommodityType(string val)
            : base(Tags.UnderlyingStreamCommodityType, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySecurityID Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySecurityID : StringField
    {
        public const int TAG = 41966;

        public UnderlyingStreamCommoditySecurityID()
            : base(Tags.UnderlyingStreamCommoditySecurityID) { }
        public UnderlyingStreamCommoditySecurityID(string val)
            : base(Tags.UnderlyingStreamCommoditySecurityID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySecurityIDSource Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySecurityIDSource : StringField
    {
        public const int TAG = 41967;

        public UnderlyingStreamCommoditySecurityIDSource()
            : base(Tags.UnderlyingStreamCommoditySecurityIDSource) { }
        public UnderlyingStreamCommoditySecurityIDSource(string val)
            : base(Tags.UnderlyingStreamCommoditySecurityIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingStreamCommodityDesc Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityDesc : StringField
    {
        public const int TAG = 41968;

        public UnderlyingStreamCommodityDesc()
            : base(Tags.UnderlyingStreamCommodityDesc) { }
        public UnderlyingStreamCommodityDesc(string val)
            : base(Tags.UnderlyingStreamCommodityDesc, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingStreamCommodityDescLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingStreamCommodityDescLen : IntField
    {
        public const int TAG = 41969;

        public EncodedUnderlyingStreamCommodityDescLen()
            : base(Tags.EncodedUnderlyingStreamCommodityDescLen) { }
        public EncodedUnderlyingStreamCommodityDescLen(int val)
            : base(Tags.EncodedUnderlyingStreamCommodityDescLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingStreamCommodityDesc Field
    /// </summary>/
    public sealed class EncodedUnderlyingStreamCommodityDesc : StringField
    {
        public const int TAG = 41970;

        public EncodedUnderlyingStreamCommodityDesc()
            : base(Tags.EncodedUnderlyingStreamCommodityDesc) { }
        public EncodedUnderlyingStreamCommodityDesc(string val)
            : base(Tags.EncodedUnderlyingStreamCommodityDesc, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityUnitOfMeasure : StringField
    {
        public const int TAG = 41971;

        public UnderlyingStreamCommodityUnitOfMeasure()
            : base(Tags.UnderlyingStreamCommodityUnitOfMeasure) { }
        public UnderlyingStreamCommodityUnitOfMeasure(string val)
            : base(Tags.UnderlyingStreamCommodityUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingStreamCommodityCurrency Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityCurrency : StringField
    {
        public const int TAG = 41972;

        public UnderlyingStreamCommodityCurrency()
            : base(Tags.UnderlyingStreamCommodityCurrency) { }
        public UnderlyingStreamCommodityCurrency(string val)
            : base(Tags.UnderlyingStreamCommodityCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityExchange Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityExchange : StringField
    {
        public const int TAG = 41973;

        public UnderlyingStreamCommodityExchange()
            : base(Tags.UnderlyingStreamCommodityExchange) { }
        public UnderlyingStreamCommodityExchange(string val)
            : base(Tags.UnderlyingStreamCommodityExchange, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityRateSource Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityRateSource : IntField
    {
        public const int TAG = 41974;

        public UnderlyingStreamCommodityRateSource()
            : base(Tags.UnderlyingStreamCommodityRateSource) { }
        public UnderlyingStreamCommodityRateSource(int val)
            : base(Tags.UnderlyingStreamCommodityRateSource, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityRateReferencePage Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityRateReferencePage : StringField
    {
        public const int TAG = 41975;

        public UnderlyingStreamCommodityRateReferencePage()
            : base(Tags.UnderlyingStreamCommodityRateReferencePage) { }
        public UnderlyingStreamCommodityRateReferencePage(string val)
            : base(Tags.UnderlyingStreamCommodityRateReferencePage, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityRateReferencePageHeading Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityRateReferencePageHeading : StringField
    {
        public const int TAG = 41976;

        public UnderlyingStreamCommodityRateReferencePageHeading()
            : base(Tags.UnderlyingStreamCommodityRateReferencePageHeading) { }
        public UnderlyingStreamCommodityRateReferencePageHeading(string val)
            : base(Tags.UnderlyingStreamCommodityRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// UnderlyingStreamDataProvider Field
    /// </summary>/
    public sealed class UnderlyingStreamDataProvider : StringField
    {
        public const int TAG = 41977;

        public UnderlyingStreamDataProvider()
            : base(Tags.UnderlyingStreamDataProvider) { }
        public UnderlyingStreamDataProvider(string val)
            : base(Tags.UnderlyingStreamDataProvider, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityPricingType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityPricingType : StringField
    {
        public const int TAG = 41978;

        public UnderlyingStreamCommodityPricingType()
            : base(Tags.UnderlyingStreamCommodityPricingType) { }
        public UnderlyingStreamCommodityPricingType(string val)
            : base(Tags.UnderlyingStreamCommodityPricingType, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityNearbySettlDayPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityNearbySettlDayPeriod : IntField
    {
        public const int TAG = 41979;

        public UnderlyingStreamCommodityNearbySettlDayPeriod()
            : base(Tags.UnderlyingStreamCommodityNearbySettlDayPeriod) { }
        public UnderlyingStreamCommodityNearbySettlDayPeriod(int val)
            : base(Tags.UnderlyingStreamCommodityNearbySettlDayPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityNearbySettlDayUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityNearbySettlDayUnit : StringField
    {
        public const int TAG = 41980;

        public UnderlyingStreamCommodityNearbySettlDayUnit()
            : base(Tags.UnderlyingStreamCommodityNearbySettlDayUnit) { }
        public UnderlyingStreamCommodityNearbySettlDayUnit(string val)
            : base(Tags.UnderlyingStreamCommodityNearbySettlDayUnit, val) { }


        // Field Enumerations
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDateUnadjusted : StringField
    {
        public const int TAG = 41981;

        public UnderlyingStreamCommoditySettlDateUnadjusted()
            : base(Tags.UnderlyingStreamCommoditySettlDateUnadjusted) { }
        public UnderlyingStreamCommoditySettlDateUnadjusted(string val)
            : base(Tags.UnderlyingStreamCommoditySettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 41982;

        public UnderlyingStreamCommoditySettlDateBusinessDayConvention()
            : base(Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention) { }
        public UnderlyingStreamCommoditySettlDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingStreamCommoditySettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDateAdjusted : StringField
    {
        public const int TAG = 41983;

        public UnderlyingStreamCommoditySettlDateAdjusted()
            : base(Tags.UnderlyingStreamCommoditySettlDateAdjusted) { }
        public UnderlyingStreamCommoditySettlDateAdjusted(string val)
            : base(Tags.UnderlyingStreamCommoditySettlDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlMonth Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlMonth : IntField
    {
        public const int TAG = 41984;

        public UnderlyingStreamCommoditySettlMonth()
            : base(Tags.UnderlyingStreamCommoditySettlMonth) { }
        public UnderlyingStreamCommoditySettlMonth(int val)
            : base(Tags.UnderlyingStreamCommoditySettlMonth, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDateRollPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDateRollPeriod : IntField
    {
        public const int TAG = 41985;

        public UnderlyingStreamCommoditySettlDateRollPeriod()
            : base(Tags.UnderlyingStreamCommoditySettlDateRollPeriod) { }
        public UnderlyingStreamCommoditySettlDateRollPeriod(int val)
            : base(Tags.UnderlyingStreamCommoditySettlDateRollPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDateRollUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDateRollUnit : StringField
    {
        public const int TAG = 41986;

        public UnderlyingStreamCommoditySettlDateRollUnit()
            : base(Tags.UnderlyingStreamCommoditySettlDateRollUnit) { }
        public UnderlyingStreamCommoditySettlDateRollUnit(string val)
            : base(Tags.UnderlyingStreamCommoditySettlDateRollUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDayType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDayType : IntField
    {
        public const int TAG = 41987;

        public UnderlyingStreamCommoditySettlDayType()
            : base(Tags.UnderlyingStreamCommoditySettlDayType) { }
        public UnderlyingStreamCommoditySettlDayType(int val)
            : base(Tags.UnderlyingStreamCommoditySettlDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingStreamCommodityXID Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityXID : StringField
    {
        public const int TAG = 41988;

        public UnderlyingStreamCommodityXID()
            : base(Tags.UnderlyingStreamCommodityXID) { }
        public UnderlyingStreamCommodityXID(string val)
            : base(Tags.UnderlyingStreamCommodityXID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityXIDRef Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityXIDRef : StringField
    {
        public const int TAG = 41989;

        public UnderlyingStreamCommodityXIDRef()
            : base(Tags.UnderlyingStreamCommodityXIDRef) { }
        public UnderlyingStreamCommodityXIDRef(string val)
            : base(Tags.UnderlyingStreamCommodityXIDRef, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCommodityAltIDs Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommodityAltIDs : IntField
    {
        public const int TAG = 41990;

        public NoUnderlyingStreamCommodityAltIDs()
            : base(Tags.NoUnderlyingStreamCommodityAltIDs) { }
        public NoUnderlyingStreamCommodityAltIDs(int val)
            : base(Tags.NoUnderlyingStreamCommodityAltIDs, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityAltID Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityAltID : StringField
    {
        public const int TAG = 41991;

        public UnderlyingStreamCommodityAltID()
            : base(Tags.UnderlyingStreamCommodityAltID) { }
        public UnderlyingStreamCommodityAltID(string val)
            : base(Tags.UnderlyingStreamCommodityAltID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityAltIDSource Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityAltIDSource : StringField
    {
        public const int TAG = 41992;

        public UnderlyingStreamCommodityAltIDSource()
            : base(Tags.UnderlyingStreamCommodityAltIDSource) { }
        public UnderlyingStreamCommodityAltIDSource(string val)
            : base(Tags.UnderlyingStreamCommodityAltIDSource, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCommodityDataSources Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommodityDataSources : IntField
    {
        public const int TAG = 41993;

        public NoUnderlyingStreamCommodityDataSources()
            : base(Tags.NoUnderlyingStreamCommodityDataSources) { }
        public NoUnderlyingStreamCommodityDataSources(int val)
            : base(Tags.NoUnderlyingStreamCommodityDataSources, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityDataSourceID Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityDataSourceID : StringField
    {
        public const int TAG = 41994;

        public UnderlyingStreamCommodityDataSourceID()
            : base(Tags.UnderlyingStreamCommodityDataSourceID) { }
        public UnderlyingStreamCommodityDataSourceID(string val)
            : base(Tags.UnderlyingStreamCommodityDataSourceID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityDataSourceIDType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityDataSourceIDType : IntField
    {
        public const int TAG = 41995;

        public UnderlyingStreamCommodityDataSourceIDType()
            : base(Tags.UnderlyingStreamCommodityDataSourceIDType) { }
        public UnderlyingStreamCommodityDataSourceIDType(int val)
            : base(Tags.UnderlyingStreamCommodityDataSourceIDType, val) { }


        // Field Enumerations
        public const int CITY = 0;
        public const int AIRPORT = 1;
        public const int WEATHER_STATION_WBAN = 2;
        public const int WEATHER_INDEX_WMO = 3;
    }


    /// <summary>
    /// NoUnderlyingStreamCommoditySettlDays Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommoditySettlDays : IntField
    {
        public const int TAG = 41996;

        public NoUnderlyingStreamCommoditySettlDays()
            : base(Tags.NoUnderlyingStreamCommoditySettlDays) { }
        public NoUnderlyingStreamCommoditySettlDays(int val)
            : base(Tags.NoUnderlyingStreamCommoditySettlDays, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlDay Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlDay : IntField
    {
        public const int TAG = 41997;

        public UnderlyingStreamCommoditySettlDay()
            : base(Tags.UnderlyingStreamCommoditySettlDay) { }
        public UnderlyingStreamCommoditySettlDay(int val)
            : base(Tags.UnderlyingStreamCommoditySettlDay, val) { }


        // Field Enumerations
        public const int MONDAY = 1;
        public const int TUESDAY = 2;
        public const int WEDNESDAY = 3;
        public const int THURSDAY = 4;
        public const int FRIDAY = 5;
        public const int SATURDAY = 6;
        public const int SUNDAY = 7;
        public const int ALL_WEEKDAYS = 8;
        public const int ALL_DAYS = 9;
        public const int ALL_WEEKENDS = 10;
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlTotalHours Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlTotalHours : IntField
    {
        public const int TAG = 41998;

        public UnderlyingStreamCommoditySettlTotalHours()
            : base(Tags.UnderlyingStreamCommoditySettlTotalHours) { }
        public UnderlyingStreamCommoditySettlTotalHours(int val)
            : base(Tags.UnderlyingStreamCommoditySettlTotalHours, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCommoditySettlTimes Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommoditySettlTimes : IntField
    {
        public const int TAG = 41999;

        public NoUnderlyingStreamCommoditySettlTimes()
            : base(Tags.NoUnderlyingStreamCommoditySettlTimes) { }
        public NoUnderlyingStreamCommoditySettlTimes(int val)
            : base(Tags.NoUnderlyingStreamCommoditySettlTimes, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlStart Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlStart : StringField
    {
        public const int TAG = 42000;

        public UnderlyingStreamCommoditySettlStart()
            : base(Tags.UnderlyingStreamCommoditySettlStart) { }
        public UnderlyingStreamCommoditySettlStart(string val)
            : base(Tags.UnderlyingStreamCommoditySettlStart, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlEnd Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlEnd : StringField
    {
        public const int TAG = 42001;

        public UnderlyingStreamCommoditySettlEnd()
            : base(Tags.UnderlyingStreamCommoditySettlEnd) { }
        public UnderlyingStreamCommoditySettlEnd(string val)
            : base(Tags.UnderlyingStreamCommoditySettlEnd, val) { }

    }


    /// <summary>
    /// NoUnderlyingStreamCommoditySettlPeriods Field
    /// </summary>/
    public sealed class NoUnderlyingStreamCommoditySettlPeriods : IntField
    {
        public const int TAG = 42002;

        public NoUnderlyingStreamCommoditySettlPeriods()
            : base(Tags.NoUnderlyingStreamCommoditySettlPeriods) { }
        public NoUnderlyingStreamCommoditySettlPeriods(int val)
            : base(Tags.NoUnderlyingStreamCommoditySettlPeriods, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlCountry Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlCountry : StringField
    {
        public const int TAG = 42003;

        public UnderlyingStreamCommoditySettlCountry()
            : base(Tags.UnderlyingStreamCommoditySettlCountry) { }
        public UnderlyingStreamCommoditySettlCountry(string val)
            : base(Tags.UnderlyingStreamCommoditySettlCountry, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlTimeZone Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlTimeZone : StringField
    {
        public const int TAG = 42004;

        public UnderlyingStreamCommoditySettlTimeZone()
            : base(Tags.UnderlyingStreamCommoditySettlTimeZone) { }
        public UnderlyingStreamCommoditySettlTimeZone(string val)
            : base(Tags.UnderlyingStreamCommoditySettlTimeZone, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlFlowType Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlFlowType : IntField
    {
        public const int TAG = 42005;

        public UnderlyingStreamCommoditySettlFlowType()
            : base(Tags.UnderlyingStreamCommoditySettlFlowType) { }
        public UnderlyingStreamCommoditySettlFlowType(int val)
            : base(Tags.UnderlyingStreamCommoditySettlFlowType, val) { }


        // Field Enumerations
        public const int ALL_TIMES = 0;
        public const int ON_PEAK = 1;
        public const int OFF_PEAK = 2;
        public const int BASE = 3;
        public const int BLOCK_HOURS = 4;
        public const int OTHER = 5;
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodNotional Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodNotional : DecimalField
    {
        public const int TAG = 42006;

        public UnderlyingStreamCommoditySettlPeriodNotional()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodNotional) { }
        public UnderlyingStreamCommoditySettlPeriodNotional(Decimal val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodNotional, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 42007;

        public UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure) { }
        public UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodFrequencyPeriod : IntField
    {
        public const int TAG = 42008;

        public UnderlyingStreamCommoditySettlPeriodFrequencyPeriod()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod) { }
        public UnderlyingStreamCommoditySettlPeriodFrequencyPeriod(int val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodFrequencyUnit : StringField
    {
        public const int TAG = 42009;

        public UnderlyingStreamCommoditySettlPeriodFrequencyUnit()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit) { }
        public UnderlyingStreamCommoditySettlPeriodFrequencyUnit(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodPrice Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodPrice : DecimalField
    {
        public const int TAG = 42010;

        public UnderlyingStreamCommoditySettlPeriodPrice()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPrice) { }
        public UnderlyingStreamCommoditySettlPeriodPrice(Decimal val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPrice, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure : StringField
    {
        public const int TAG = 42011;

        public UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure) { }
        public UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodPriceCurrency Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodPriceCurrency : StringField
    {
        public const int TAG = 42012;

        public UnderlyingStreamCommoditySettlPeriodPriceCurrency()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency) { }
        public UnderlyingStreamCommoditySettlPeriodPriceCurrency(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodPriceCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlHolidaysProcessingInstruction Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlHolidaysProcessingInstruction : IntField
    {
        public const int TAG = 42013;

        public UnderlyingStreamCommoditySettlHolidaysProcessingInstruction()
            : base(Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction) { }
        public UnderlyingStreamCommoditySettlHolidaysProcessingInstruction(int val)
            : base(Tags.UnderlyingStreamCommoditySettlHolidaysProcessingInstruction, val) { }


        // Field Enumerations
        public const int DO_NOT_INCLUDE_HOLIDAYS = 0;
        public const int INCLUDE_HOLIDAYS = 1;
    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodXID Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodXID : StringField
    {
        public const int TAG = 42014;

        public UnderlyingStreamCommoditySettlPeriodXID()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodXID) { }
        public UnderlyingStreamCommoditySettlPeriodXID(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodXID, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommoditySettlPeriodXIDRef Field
    /// </summary>/
    public sealed class UnderlyingStreamCommoditySettlPeriodXIDRef : StringField
    {
        public const int TAG = 42015;

        public UnderlyingStreamCommoditySettlPeriodXIDRef()
            : base(Tags.UnderlyingStreamCommoditySettlPeriodXIDRef) { }
        public UnderlyingStreamCommoditySettlPeriodXIDRef(string val)
            : base(Tags.UnderlyingStreamCommoditySettlPeriodXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingStreamXID Field
    /// </summary>/
    public sealed class UnderlyingStreamXID : StringField
    {
        public const int TAG = 42016;

        public UnderlyingStreamXID()
            : base(Tags.UnderlyingStreamXID) { }
        public UnderlyingStreamXID(string val)
            : base(Tags.UnderlyingStreamXID, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondIssuer : StringField
    {
        public const int TAG = 42017;

        public UnderlyingAdditionalTermBondIssuer()
            : base(Tags.UnderlyingAdditionalTermBondIssuer) { }
        public UnderlyingAdditionalTermBondIssuer(string val)
            : base(Tags.UnderlyingAdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// UnderlyingStreamNotionalXIDRef Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalXIDRef : StringField
    {
        public const int TAG = 42018;

        public UnderlyingStreamNotionalXIDRef()
            : base(Tags.UnderlyingStreamNotionalXIDRef) { }
        public UnderlyingStreamNotionalXIDRef(string val)
            : base(Tags.UnderlyingStreamNotionalXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingStreamNotionalFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalFrequencyPeriod : IntField
    {
        public const int TAG = 42019;

        public UnderlyingStreamNotionalFrequencyPeriod()
            : base(Tags.UnderlyingStreamNotionalFrequencyPeriod) { }
        public UnderlyingStreamNotionalFrequencyPeriod(int val)
            : base(Tags.UnderlyingStreamNotionalFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamNotionalFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalFrequencyUnit : StringField
    {
        public const int TAG = 42020;

        public UnderlyingStreamNotionalFrequencyUnit()
            : base(Tags.UnderlyingStreamNotionalFrequencyUnit) { }
        public UnderlyingStreamNotionalFrequencyUnit(string val)
            : base(Tags.UnderlyingStreamNotionalFrequencyUnit, val) { }


        // Field Enumerations
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string QUARTER = "Q";
    }


    /// <summary>
    /// UnderlyingStreamNotionalCommodityFrequency Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalCommodityFrequency : IntField
    {
        public const int TAG = 42021;

        public UnderlyingStreamNotionalCommodityFrequency()
            : base(Tags.UnderlyingStreamNotionalCommodityFrequency) { }
        public UnderlyingStreamNotionalCommodityFrequency(int val)
            : base(Tags.UnderlyingStreamNotionalCommodityFrequency, val) { }


        // Field Enumerations
        public const int TERM = 0;
        public const int PER_BUSINESS_DAY = 1;
        public const int PER_CALCULATION_PERIOD = 2;
        public const int PER_SETTLEMENT_PERIOD = 3;
        public const int PER_CALENDAR_DAY = 4;
        public const int PER_HOUR = 5;
        public const int PER_MONTH = 6;
    }


    /// <summary>
    /// UnderlyingStreamNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 42022;

        public UnderlyingStreamNotionalUnitOfMeasure()
            : base(Tags.UnderlyingStreamNotionalUnitOfMeasure) { }
        public UnderlyingStreamNotionalUnitOfMeasure(string val)
            : base(Tags.UnderlyingStreamNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// UnderlyingStreamTotalNotional Field
    /// </summary>/
    public sealed class UnderlyingStreamTotalNotional : DecimalField
    {
        public const int TAG = 42023;

        public UnderlyingStreamTotalNotional()
            : base(Tags.UnderlyingStreamTotalNotional) { }
        public UnderlyingStreamTotalNotional(Decimal val)
            : base(Tags.UnderlyingStreamTotalNotional, val) { }

    }


    /// <summary>
    /// UnderlyingStreamTotalNotionalUnitOfMeasure Field
    /// </summary>/
    public sealed class UnderlyingStreamTotalNotionalUnitOfMeasure : StringField
    {
        public const int TAG = 42024;

        public UnderlyingStreamTotalNotionalUnitOfMeasure()
            : base(Tags.UnderlyingStreamTotalNotionalUnitOfMeasure) { }
        public UnderlyingStreamTotalNotionalUnitOfMeasure(string val)
            : base(Tags.UnderlyingStreamTotalNotionalUnitOfMeasure, val) { }


        // Field Enumerations
        public const string BILLION_CUBIC_FEET = "Bcf";
        public const string MILLION_BARRELS = "MMbbl";
        public const string ONE_MILLION_BTU = "MMBtu";
        public const string MEGAWATT_HOURS = "MWh";
        public const string BARRELS = "Bbl";
        public const string BUSHELS = "Bu";
        public const string POUNDS = "lbs";
        public const string GALLONS = "Gal";
        public const string TROY_OUNCES = "oz_tr";
        public const string METRIC_TONS = "t";
        public const string TONS = "tn";
        public const string US_DOLLARS = "USD";
        public const string ALLOWANCES = "Alw";
        public const string CUBIC_METERS = "CBM";
        public const string CERTIFIED_EMISSIONS_REDUCTION = "CER";
        public const string PRINCIPAL_WITH_RELATION_TO_DEBT_INSTRUMENT = "PRINC";
        public const string CLIMATE_RESERVE_TONNES = "CRT";
        public const string AMOUNT_OF_CURRENCY = "Ccy";
        public const string BOARD_FEET = "BDFT";
        public const string INDEX_POINT = "IPNT";
        public const string DAYS = "day";
        public const string HUNDREDWEIGHT = "cwt";
        public const string GRAMS = "g";
        public const string DRY_METRIC_TONS = "dt";
        public const string KILOWATT_HOURS = "kWh";
        public const string ENVIRONMENTAL_OFFSET = "EnvOfst";
        public const string ENVIRONMENTAL_CREDIT = "EnvCrd";
        public const string KILOWATT_MINUTE = "kW-min";
        public const string MEGAWATT_MINUTE = "MW-min";
        public const string KILOWATT_HOUR = "kW-h";
        public const string MEGAWATT_HOUR = "MW-h";
        public const string KILOWATT_DAY = "kW-d";
        public const string MEGAWATT_DAY = "MW-d";
        public const string KILOWATT_MONTH = "kW-M";
        public const string MEGAWATT_MONTH = "MW-M";
        public const string KILOWATT_YEAR = "kW-a";
        public const string MEGAWATT_YEAR = "MW-a";
        public const string THERMS = "thm";
        public const string GIGAJOULES = "GJ";
        public const string LITERS = "L";
        public const string KILOLITERS = "kL";
        public const string KILOGRAMS = "kg";
        public const string GROSS_TONS = "GT";
        public const string COOLING_DEGREE_DAY = "CDD";
        public const string CRITICAL_PRECIPITATION_DAY = "CPD";
        public const string ENVIRONMENTAL_ALLOWANCE_CERTIFICATES = "EnvAllwnc";
        public const string HEATING_DEGREE_DAY = "HDD";
        public const string HEAT_RATE = "kHR";
        public const string MEGA_HEAT_RATE = "MHR";
        public const string TONS_OF_CARBON_DIOXIDE = "tnCO2";
        public const string ARE = "a";
        public const string ACRE = "ac";
        public const string CENTILITER = "cL";
        public const string CENTIMETER = "cM";
        public const string DIESEL_GALLON_EQUIVALENT = "DGE";
        public const string FOOT = "ft";
        public const string GB_GALLON = "Gal_gb";
        public const string GASONLINE_GALLON_EQUIVALENT = "GGE";
        public const string HECTARE = "ha";
        public const string INCH = "in";
        public const string KILOMETER = "kM";
        public const string METER = "M";
        public const string MILE = "mi";
        public const string MILLILITER = "mL";
        public const string MILLIMETER = "mM";
        public const string US_OUNCE = "oz";
        public const string PIECE = "pc";
        public const string US_PINT = "pt";
        public const string GB_PINT = "pt_gb";
        public const string US_QUART = "qt";
        public const string GB_QUART = "qt_gb";
        public const string SQUARE_CENTIMETER = "SqcM";
        public const string SQUARE_FOOT = "Sqft";
        public const string SQUARE_INCH = "Sqin";
        public const string SQUARE_KILOMETER = "SqkM";
        public const string SQUARE_METER = "SqM";
        public const string SQUARE_MILE = "Sqmi";
        public const string SQUARE_MILLIMETER = "SqmM";
        public const string SQUARE_YARD = "Sqyd";
        public const string YARD = "yd";
    }


    /// <summary>
    /// EncodedUnderlyingAdditionalTermBondIssuerLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingAdditionalTermBondIssuerLen : IntField
    {
        public const int TAG = 42025;

        public EncodedUnderlyingAdditionalTermBondIssuerLen()
            : base(Tags.EncodedUnderlyingAdditionalTermBondIssuerLen) { }
        public EncodedUnderlyingAdditionalTermBondIssuerLen(int val)
            : base(Tags.EncodedUnderlyingAdditionalTermBondIssuerLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingAdditionalTermBondIssuer Field
    /// </summary>/
    public sealed class EncodedUnderlyingAdditionalTermBondIssuer : StringField
    {
        public const int TAG = 42026;

        public EncodedUnderlyingAdditionalTermBondIssuer()
            : base(Tags.EncodedUnderlyingAdditionalTermBondIssuer) { }
        public EncodedUnderlyingAdditionalTermBondIssuer(string val)
            : base(Tags.EncodedUnderlyingAdditionalTermBondIssuer, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondSeniority Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondSeniority : StringField
    {
        public const int TAG = 42027;

        public UnderlyingAdditionalTermBondSeniority()
            : base(Tags.UnderlyingAdditionalTermBondSeniority) { }
        public UnderlyingAdditionalTermBondSeniority(string val)
            : base(Tags.UnderlyingAdditionalTermBondSeniority, val) { }


        // Field Enumerations
        public const string SENIOR_SECURED = "SD";
        public const string SENIOR = "SR";
        public const string SUBORDINATED = "SB";
        public const string JUNIOR = "JR";
        public const string MEZZANINE = "MZ";
        public const string SENIOR_NON_PREFERRED = "SN";
    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCouponType Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCouponType : IntField
    {
        public const int TAG = 42028;

        public UnderlyingAdditionalTermBondCouponType()
            : base(Tags.UnderlyingAdditionalTermBondCouponType) { }
        public UnderlyingAdditionalTermBondCouponType(int val)
            : base(Tags.UnderlyingAdditionalTermBondCouponType, val) { }


        // Field Enumerations
        public const int ZERO = 0;
        public const int FIXED_RATE = 1;
        public const int FLOATING_RATE = 2;
        public const int STRUCTURED = 3;
    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCouponRate Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCouponRate : DecimalField
    {
        public const int TAG = 42029;

        public UnderlyingAdditionalTermBondCouponRate()
            : base(Tags.UnderlyingAdditionalTermBondCouponRate) { }
        public UnderlyingAdditionalTermBondCouponRate(Decimal val)
            : base(Tags.UnderlyingAdditionalTermBondCouponRate, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondMaturityDate Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondMaturityDate : StringField
    {
        public const int TAG = 42030;

        public UnderlyingAdditionalTermBondMaturityDate()
            : base(Tags.UnderlyingAdditionalTermBondMaturityDate) { }
        public UnderlyingAdditionalTermBondMaturityDate(string val)
            : base(Tags.UnderlyingAdditionalTermBondMaturityDate, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondParValue Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondParValue : DecimalField
    {
        public const int TAG = 42031;

        public UnderlyingAdditionalTermBondParValue()
            : base(Tags.UnderlyingAdditionalTermBondParValue) { }
        public UnderlyingAdditionalTermBondParValue(Decimal val)
            : base(Tags.UnderlyingAdditionalTermBondParValue, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCurrentTotalIssuedAmount Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCurrentTotalIssuedAmount : DecimalField
    {
        public const int TAG = 42032;

        public UnderlyingAdditionalTermBondCurrentTotalIssuedAmount()
            : base(Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount) { }
        public UnderlyingAdditionalTermBondCurrentTotalIssuedAmount(Decimal val)
            : base(Tags.UnderlyingAdditionalTermBondCurrentTotalIssuedAmount, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCouponFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCouponFrequencyPeriod : IntField
    {
        public const int TAG = 42033;

        public UnderlyingAdditionalTermBondCouponFrequencyPeriod()
            : base(Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod) { }
        public UnderlyingAdditionalTermBondCouponFrequencyPeriod(int val)
            : base(Tags.UnderlyingAdditionalTermBondCouponFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermBondCouponFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondCouponFrequencyUnit : StringField
    {
        public const int TAG = 42034;

        public UnderlyingAdditionalTermBondCouponFrequencyUnit()
            : base(Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit) { }
        public UnderlyingAdditionalTermBondCouponFrequencyUnit(string val)
            : base(Tags.UnderlyingAdditionalTermBondCouponFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingAdditionalTermBondDayCount Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermBondDayCount : IntField
    {
        public const int TAG = 42035;

        public UnderlyingAdditionalTermBondDayCount()
            : base(Tags.UnderlyingAdditionalTermBondDayCount) { }
        public UnderlyingAdditionalTermBondDayCount(int val)
            : base(Tags.UnderlyingAdditionalTermBondDayCount, val) { }


        // Field Enumerations
        public const int VAL_1_1 = 0;
        public const int VAL_30_360_1 = 1;
        public const int VAL_30_360_2 = 2;
        public const int VAL_30_360M = 3;
        public const int VAL_30E_360_4 = 4;
        public const int VAL_30E_360_5 = 5;
        public const int ACT_360 = 6;
        public const int ACT_365 = 7;
        public const int ACT_ACT_8 = 8;
        public const int ACT_ACT_9 = 9;
        public const int ACT_ACT_10 = 10;
        public const int ACT_ACT_11 = 11;
        public const int BUS_252 = 12;
        public const int VAL_30E_PLUS_360 = 13;
        public const int ACT_365L = 14;
        public const int NL365 = 15;
        public const int NL360 = 16;
        public const int ACT_364 = 17;
        public const int VAL_30_365 = 18;
        public const int VAL_30_ACTUAL = 19;
        public const int VAL_30_360_20 = 20;
        public const int VAL_30E2_360 = 21;
        public const int VAL_30E3_360 = 22;
        public const int OTHER = 99;
    }


    /// <summary>
    /// NoUnderlyingAdditionalTerms Field
    /// </summary>/
    public sealed class NoUnderlyingAdditionalTerms : IntField
    {
        public const int TAG = 42036;

        public NoUnderlyingAdditionalTerms()
            : base(Tags.NoUnderlyingAdditionalTerms) { }
        public NoUnderlyingAdditionalTerms(int val)
            : base(Tags.NoUnderlyingAdditionalTerms, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermConditionPrecedentBondIndicator Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermConditionPrecedentBondIndicator : BooleanField
    {
        public const int TAG = 42037;

        public UnderlyingAdditionalTermConditionPrecedentBondIndicator()
            : base(Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator) { }
        public UnderlyingAdditionalTermConditionPrecedentBondIndicator(Boolean val)
            : base(Tags.UnderlyingAdditionalTermConditionPrecedentBondIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalTermDiscrepancyClauseIndicator Field
    /// </summary>/
    public sealed class UnderlyingAdditionalTermDiscrepancyClauseIndicator : BooleanField
    {
        public const int TAG = 42038;

        public UnderlyingAdditionalTermDiscrepancyClauseIndicator()
            : base(Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator) { }
        public UnderlyingAdditionalTermDiscrepancyClauseIndicator(Boolean val)
            : base(Tags.UnderlyingAdditionalTermDiscrepancyClauseIndicator, val) { }

    }


    /// <summary>
    /// NoUnderlyingCashSettlDealers Field
    /// </summary>/
    public sealed class NoUnderlyingCashSettlDealers : IntField
    {
        public const int TAG = 42039;

        public NoUnderlyingCashSettlDealers()
            : base(Tags.NoUnderlyingCashSettlDealers) { }
        public NoUnderlyingCashSettlDealers(int val)
            : base(Tags.NoUnderlyingCashSettlDealers, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDealer Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDealer : StringField
    {
        public const int TAG = 42040;

        public UnderlyingCashSettlDealer()
            : base(Tags.UnderlyingCashSettlDealer) { }
        public UnderlyingCashSettlDealer(string val)
            : base(Tags.UnderlyingCashSettlDealer, val) { }

    }


    /// <summary>
    /// NoUnderlyingCashSettlTerms Field
    /// </summary>/
    public sealed class NoUnderlyingCashSettlTerms : IntField
    {
        public const int TAG = 42041;

        public NoUnderlyingCashSettlTerms()
            : base(Tags.NoUnderlyingCashSettlTerms) { }
        public NoUnderlyingCashSettlTerms(int val)
            : base(Tags.NoUnderlyingCashSettlTerms, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlCurrency Field
    /// </summary>/
    public sealed class UnderlyingCashSettlCurrency : StringField
    {
        public const int TAG = 42042;

        public UnderlyingCashSettlCurrency()
            : base(Tags.UnderlyingCashSettlCurrency) { }
        public UnderlyingCashSettlCurrency(string val)
            : base(Tags.UnderlyingCashSettlCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlValuationFirstBusinessDayOffset Field
    /// </summary>/
    public sealed class UnderlyingCashSettlValuationFirstBusinessDayOffset : IntField
    {
        public const int TAG = 42043;

        public UnderlyingCashSettlValuationFirstBusinessDayOffset()
            : base(Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset) { }
        public UnderlyingCashSettlValuationFirstBusinessDayOffset(int val)
            : base(Tags.UnderlyingCashSettlValuationFirstBusinessDayOffset, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlValuationSubsequentBusinessDaysOffset Field
    /// </summary>/
    public sealed class UnderlyingCashSettlValuationSubsequentBusinessDaysOffset : IntField
    {
        public const int TAG = 42044;

        public UnderlyingCashSettlValuationSubsequentBusinessDaysOffset()
            : base(Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset) { }
        public UnderlyingCashSettlValuationSubsequentBusinessDaysOffset(int val)
            : base(Tags.UnderlyingCashSettlValuationSubsequentBusinessDaysOffset, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlNumOfValuationDates Field
    /// </summary>/
    public sealed class UnderlyingCashSettlNumOfValuationDates : IntField
    {
        public const int TAG = 42045;

        public UnderlyingCashSettlNumOfValuationDates()
            : base(Tags.UnderlyingCashSettlNumOfValuationDates) { }
        public UnderlyingCashSettlNumOfValuationDates(int val)
            : base(Tags.UnderlyingCashSettlNumOfValuationDates, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlValuationTime Field
    /// </summary>/
    public sealed class UnderlyingCashSettlValuationTime : StringField
    {
        public const int TAG = 42046;

        public UnderlyingCashSettlValuationTime()
            : base(Tags.UnderlyingCashSettlValuationTime) { }
        public UnderlyingCashSettlValuationTime(string val)
            : base(Tags.UnderlyingCashSettlValuationTime, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingCashSettlBusinessCenter : StringField
    {
        public const int TAG = 42047;

        public UnderlyingCashSettlBusinessCenter()
            : base(Tags.UnderlyingCashSettlBusinessCenter) { }
        public UnderlyingCashSettlBusinessCenter(string val)
            : base(Tags.UnderlyingCashSettlBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlQuoteMethod Field
    /// </summary>/
    public sealed class UnderlyingCashSettlQuoteMethod : IntField
    {
        public const int TAG = 42048;

        public UnderlyingCashSettlQuoteMethod()
            : base(Tags.UnderlyingCashSettlQuoteMethod) { }
        public UnderlyingCashSettlQuoteMethod(int val)
            : base(Tags.UnderlyingCashSettlQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// UnderlyingCashSettlQuoteAmount Field
    /// </summary>/
    public sealed class UnderlyingCashSettlQuoteAmount : DecimalField
    {
        public const int TAG = 42049;

        public UnderlyingCashSettlQuoteAmount()
            : base(Tags.UnderlyingCashSettlQuoteAmount) { }
        public UnderlyingCashSettlQuoteAmount(Decimal val)
            : base(Tags.UnderlyingCashSettlQuoteAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlQuoteCurrency Field
    /// </summary>/
    public sealed class UnderlyingCashSettlQuoteCurrency : StringField
    {
        public const int TAG = 42050;

        public UnderlyingCashSettlQuoteCurrency()
            : base(Tags.UnderlyingCashSettlQuoteCurrency) { }
        public UnderlyingCashSettlQuoteCurrency(string val)
            : base(Tags.UnderlyingCashSettlQuoteCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlMinimumQuoteAmount Field
    /// </summary>/
    public sealed class UnderlyingCashSettlMinimumQuoteAmount : DecimalField
    {
        public const int TAG = 42051;

        public UnderlyingCashSettlMinimumQuoteAmount()
            : base(Tags.UnderlyingCashSettlMinimumQuoteAmount) { }
        public UnderlyingCashSettlMinimumQuoteAmount(Decimal val)
            : base(Tags.UnderlyingCashSettlMinimumQuoteAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlMinimumQuoteCurrency Field
    /// </summary>/
    public sealed class UnderlyingCashSettlMinimumQuoteCurrency : StringField
    {
        public const int TAG = 42052;

        public UnderlyingCashSettlMinimumQuoteCurrency()
            : base(Tags.UnderlyingCashSettlMinimumQuoteCurrency) { }
        public UnderlyingCashSettlMinimumQuoteCurrency(string val)
            : base(Tags.UnderlyingCashSettlMinimumQuoteCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlBusinessDays Field
    /// </summary>/
    public sealed class UnderlyingCashSettlBusinessDays : IntField
    {
        public const int TAG = 42053;

        public UnderlyingCashSettlBusinessDays()
            : base(Tags.UnderlyingCashSettlBusinessDays) { }
        public UnderlyingCashSettlBusinessDays(int val)
            : base(Tags.UnderlyingCashSettlBusinessDays, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlAmount Field
    /// </summary>/
    public sealed class UnderlyingCashSettlAmount : DecimalField
    {
        public const int TAG = 42054;

        public UnderlyingCashSettlAmount()
            : base(Tags.UnderlyingCashSettlAmount) { }
        public UnderlyingCashSettlAmount(Decimal val)
            : base(Tags.UnderlyingCashSettlAmount, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlRecoveryFactor Field
    /// </summary>/
    public sealed class UnderlyingCashSettlRecoveryFactor : DecimalField
    {
        public const int TAG = 42055;

        public UnderlyingCashSettlRecoveryFactor()
            : base(Tags.UnderlyingCashSettlRecoveryFactor) { }
        public UnderlyingCashSettlRecoveryFactor(Decimal val)
            : base(Tags.UnderlyingCashSettlRecoveryFactor, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlFixedTermIndicator Field
    /// </summary>/
    public sealed class UnderlyingCashSettlFixedTermIndicator : BooleanField
    {
        public const int TAG = 42056;

        public UnderlyingCashSettlFixedTermIndicator()
            : base(Tags.UnderlyingCashSettlFixedTermIndicator) { }
        public UnderlyingCashSettlFixedTermIndicator(Boolean val)
            : base(Tags.UnderlyingCashSettlFixedTermIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlAccruedInterestIndicator Field
    /// </summary>/
    public sealed class UnderlyingCashSettlAccruedInterestIndicator : BooleanField
    {
        public const int TAG = 42057;

        public UnderlyingCashSettlAccruedInterestIndicator()
            : base(Tags.UnderlyingCashSettlAccruedInterestIndicator) { }
        public UnderlyingCashSettlAccruedInterestIndicator(Boolean val)
            : base(Tags.UnderlyingCashSettlAccruedInterestIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlValuationMethod Field
    /// </summary>/
    public sealed class UnderlyingCashSettlValuationMethod : IntField
    {
        public const int TAG = 42058;

        public UnderlyingCashSettlValuationMethod()
            : base(Tags.UnderlyingCashSettlValuationMethod) { }
        public UnderlyingCashSettlValuationMethod(int val)
            : base(Tags.UnderlyingCashSettlValuationMethod, val) { }


        // Field Enumerations
        public const int MARKET = 0;
        public const int HIGHEST = 1;
        public const int AVERAGE_MARKET = 2;
        public const int AVERAGE_HIGHEST = 3;
        public const int BLENDED_MARKET = 4;
        public const int BLENDED_HIGHEST = 5;
        public const int AVERAGE_BLENDED_MARKET = 6;
        public const int AVERAGE_BLENDED_HIGHEST = 7;
    }


    /// <summary>
    /// UnderlyingCashSettlTermXID Field
    /// </summary>/
    public sealed class UnderlyingCashSettlTermXID : StringField
    {
        public const int TAG = 42059;

        public UnderlyingCashSettlTermXID()
            : base(Tags.UnderlyingCashSettlTermXID) { }
        public UnderlyingCashSettlTermXID(string val)
            : base(Tags.UnderlyingCashSettlTermXID, val) { }

    }


    /// <summary>
    /// NoUnderlyingPhysicalSettlTerms Field
    /// </summary>/
    public sealed class NoUnderlyingPhysicalSettlTerms : IntField
    {
        public const int TAG = 42060;

        public NoUnderlyingPhysicalSettlTerms()
            : base(Tags.NoUnderlyingPhysicalSettlTerms) { }
        public NoUnderlyingPhysicalSettlTerms(int val)
            : base(Tags.NoUnderlyingPhysicalSettlTerms, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlCurrency Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlCurrency : StringField
    {
        public const int TAG = 42061;

        public UnderlyingPhysicalSettlCurrency()
            : base(Tags.UnderlyingPhysicalSettlCurrency) { }
        public UnderlyingPhysicalSettlCurrency(string val)
            : base(Tags.UnderlyingPhysicalSettlCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlBusinessDays Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlBusinessDays : IntField
    {
        public const int TAG = 42062;

        public UnderlyingPhysicalSettlBusinessDays()
            : base(Tags.UnderlyingPhysicalSettlBusinessDays) { }
        public UnderlyingPhysicalSettlBusinessDays(int val)
            : base(Tags.UnderlyingPhysicalSettlBusinessDays, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlMaximumBusinessDays Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlMaximumBusinessDays : IntField
    {
        public const int TAG = 42063;

        public UnderlyingPhysicalSettlMaximumBusinessDays()
            : base(Tags.UnderlyingPhysicalSettlMaximumBusinessDays) { }
        public UnderlyingPhysicalSettlMaximumBusinessDays(int val)
            : base(Tags.UnderlyingPhysicalSettlMaximumBusinessDays, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlTermXID Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlTermXID : StringField
    {
        public const int TAG = 42064;

        public UnderlyingPhysicalSettlTermXID()
            : base(Tags.UnderlyingPhysicalSettlTermXID) { }
        public UnderlyingPhysicalSettlTermXID(string val)
            : base(Tags.UnderlyingPhysicalSettlTermXID, val) { }

    }


    /// <summary>
    /// NoUnderlyingPhysicalSettlDeliverableObligations Field
    /// </summary>/
    public sealed class NoUnderlyingPhysicalSettlDeliverableObligations : IntField
    {
        public const int TAG = 42065;

        public NoUnderlyingPhysicalSettlDeliverableObligations()
            : base(Tags.NoUnderlyingPhysicalSettlDeliverableObligations) { }
        public NoUnderlyingPhysicalSettlDeliverableObligations(int val)
            : base(Tags.NoUnderlyingPhysicalSettlDeliverableObligations, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlDeliverableObligationType Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlDeliverableObligationType : StringField
    {
        public const int TAG = 42066;

        public UnderlyingPhysicalSettlDeliverableObligationType()
            : base(Tags.UnderlyingPhysicalSettlDeliverableObligationType) { }
        public UnderlyingPhysicalSettlDeliverableObligationType(string val)
            : base(Tags.UnderlyingPhysicalSettlDeliverableObligationType, val) { }

    }


    /// <summary>
    /// UnderlyingPhysicalSettlDeliverableObligationValue Field
    /// </summary>/
    public sealed class UnderlyingPhysicalSettlDeliverableObligationValue : StringField
    {
        public const int TAG = 42067;

        public UnderlyingPhysicalSettlDeliverableObligationValue()
            : base(Tags.UnderlyingPhysicalSettlDeliverableObligationValue) { }
        public UnderlyingPhysicalSettlDeliverableObligationValue(string val)
            : base(Tags.UnderlyingPhysicalSettlDeliverableObligationValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingProtectionTerms Field
    /// </summary>/
    public sealed class NoUnderlyingProtectionTerms : IntField
    {
        public const int TAG = 42068;

        public NoUnderlyingProtectionTerms()
            : base(Tags.NoUnderlyingProtectionTerms) { }
        public NoUnderlyingProtectionTerms(int val)
            : base(Tags.NoUnderlyingProtectionTerms, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermNotional Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermNotional : DecimalField
    {
        public const int TAG = 42069;

        public UnderlyingProtectionTermNotional()
            : base(Tags.UnderlyingProtectionTermNotional) { }
        public UnderlyingProtectionTermNotional(Decimal val)
            : base(Tags.UnderlyingProtectionTermNotional, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermCurrency Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermCurrency : StringField
    {
        public const int TAG = 42070;

        public UnderlyingProtectionTermCurrency()
            : base(Tags.UnderlyingProtectionTermCurrency) { }
        public UnderlyingProtectionTermCurrency(string val)
            : base(Tags.UnderlyingProtectionTermCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermSellerNotifies Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermSellerNotifies : BooleanField
    {
        public const int TAG = 42071;

        public UnderlyingProtectionTermSellerNotifies()
            : base(Tags.UnderlyingProtectionTermSellerNotifies) { }
        public UnderlyingProtectionTermSellerNotifies(Boolean val)
            : base(Tags.UnderlyingProtectionTermSellerNotifies, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermBuyerNotifies Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermBuyerNotifies : BooleanField
    {
        public const int TAG = 42072;

        public UnderlyingProtectionTermBuyerNotifies()
            : base(Tags.UnderlyingProtectionTermBuyerNotifies) { }
        public UnderlyingProtectionTermBuyerNotifies(Boolean val)
            : base(Tags.UnderlyingProtectionTermBuyerNotifies, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventBusinessCenter : StringField
    {
        public const int TAG = 42073;

        public UnderlyingProtectionTermEventBusinessCenter()
            : base(Tags.UnderlyingProtectionTermEventBusinessCenter) { }
        public UnderlyingProtectionTermEventBusinessCenter(string val)
            : base(Tags.UnderlyingProtectionTermEventBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermStandardSources Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermStandardSources : BooleanField
    {
        public const int TAG = 42074;

        public UnderlyingProtectionTermStandardSources()
            : base(Tags.UnderlyingProtectionTermStandardSources) { }
        public UnderlyingProtectionTermStandardSources(Boolean val)
            : base(Tags.UnderlyingProtectionTermStandardSources, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventMinimumSources Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventMinimumSources : IntField
    {
        public const int TAG = 42075;

        public UnderlyingProtectionTermEventMinimumSources()
            : base(Tags.UnderlyingProtectionTermEventMinimumSources) { }
        public UnderlyingProtectionTermEventMinimumSources(int val)
            : base(Tags.UnderlyingProtectionTermEventMinimumSources, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermXID Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermXID : StringField
    {
        public const int TAG = 42076;

        public UnderlyingProtectionTermXID()
            : base(Tags.UnderlyingProtectionTermXID) { }
        public UnderlyingProtectionTermXID(string val)
            : base(Tags.UnderlyingProtectionTermXID, val) { }

    }


    /// <summary>
    /// NoUnderlyingProtectionTermEvents Field
    /// </summary>/
    public sealed class NoUnderlyingProtectionTermEvents : IntField
    {
        public const int TAG = 42077;

        public NoUnderlyingProtectionTermEvents()
            : base(Tags.NoUnderlyingProtectionTermEvents) { }
        public NoUnderlyingProtectionTermEvents(int val)
            : base(Tags.NoUnderlyingProtectionTermEvents, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventType Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventType : StringField
    {
        public const int TAG = 42078;

        public UnderlyingProtectionTermEventType()
            : base(Tags.UnderlyingProtectionTermEventType) { }
        public UnderlyingProtectionTermEventType(string val)
            : base(Tags.UnderlyingProtectionTermEventType, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventValue Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventValue : StringField
    {
        public const int TAG = 42079;

        public UnderlyingProtectionTermEventValue()
            : base(Tags.UnderlyingProtectionTermEventValue) { }
        public UnderlyingProtectionTermEventValue(string val)
            : base(Tags.UnderlyingProtectionTermEventValue, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventCurrency Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventCurrency : StringField
    {
        public const int TAG = 42080;

        public UnderlyingProtectionTermEventCurrency()
            : base(Tags.UnderlyingProtectionTermEventCurrency) { }
        public UnderlyingProtectionTermEventCurrency(string val)
            : base(Tags.UnderlyingProtectionTermEventCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventPeriod Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventPeriod : IntField
    {
        public const int TAG = 42081;

        public UnderlyingProtectionTermEventPeriod()
            : base(Tags.UnderlyingProtectionTermEventPeriod) { }
        public UnderlyingProtectionTermEventPeriod(int val)
            : base(Tags.UnderlyingProtectionTermEventPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventUnit Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventUnit : StringField
    {
        public const int TAG = 42082;

        public UnderlyingProtectionTermEventUnit()
            : base(Tags.UnderlyingProtectionTermEventUnit) { }
        public UnderlyingProtectionTermEventUnit(string val)
            : base(Tags.UnderlyingProtectionTermEventUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProtectionTermEventDayType Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventDayType : IntField
    {
        public const int TAG = 42083;

        public UnderlyingProtectionTermEventDayType()
            : base(Tags.UnderlyingProtectionTermEventDayType) { }
        public UnderlyingProtectionTermEventDayType(int val)
            : base(Tags.UnderlyingProtectionTermEventDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProtectionTermEventRateSource Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventRateSource : StringField
    {
        public const int TAG = 42084;

        public UnderlyingProtectionTermEventRateSource()
            : base(Tags.UnderlyingProtectionTermEventRateSource) { }
        public UnderlyingProtectionTermEventRateSource(string val)
            : base(Tags.UnderlyingProtectionTermEventRateSource, val) { }

    }


    /// <summary>
    /// NoUnderlyingProtectionTermEventQualifiers Field
    /// </summary>/
    public sealed class NoUnderlyingProtectionTermEventQualifiers : IntField
    {
        public const int TAG = 42085;

        public NoUnderlyingProtectionTermEventQualifiers()
            : base(Tags.NoUnderlyingProtectionTermEventQualifiers) { }
        public NoUnderlyingProtectionTermEventQualifiers(int val)
            : base(Tags.NoUnderlyingProtectionTermEventQualifiers, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventQualifier Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventQualifier : CharField
    {
        public const int TAG = 42086;

        public UnderlyingProtectionTermEventQualifier()
            : base(Tags.UnderlyingProtectionTermEventQualifier) { }
        public UnderlyingProtectionTermEventQualifier(char val)
            : base(Tags.UnderlyingProtectionTermEventQualifier, val) { }


        // Field Enumerations
        public const char RETRUCTURING = 'H';
        public const char RESTRUCTURING = 'E';
        public const char FLOATING_RATE_INTEREST_SHORTFALL = 'C';
    }


    /// <summary>
    /// NoUnderlyingProtectionTermObligations Field
    /// </summary>/
    public sealed class NoUnderlyingProtectionTermObligations : IntField
    {
        public const int TAG = 42087;

        public NoUnderlyingProtectionTermObligations()
            : base(Tags.NoUnderlyingProtectionTermObligations) { }
        public NoUnderlyingProtectionTermObligations(int val)
            : base(Tags.NoUnderlyingProtectionTermObligations, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermObligationType Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermObligationType : StringField
    {
        public const int TAG = 42088;

        public UnderlyingProtectionTermObligationType()
            : base(Tags.UnderlyingProtectionTermObligationType) { }
        public UnderlyingProtectionTermObligationType(string val)
            : base(Tags.UnderlyingProtectionTermObligationType, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermObligationValue Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermObligationValue : StringField
    {
        public const int TAG = 42089;

        public UnderlyingProtectionTermObligationValue()
            : base(Tags.UnderlyingProtectionTermObligationValue) { }
        public UnderlyingProtectionTermObligationValue(string val)
            : base(Tags.UnderlyingProtectionTermObligationValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingProtectionTermEventNewsSources Field
    /// </summary>/
    public sealed class NoUnderlyingProtectionTermEventNewsSources : IntField
    {
        public const int TAG = 42090;

        public NoUnderlyingProtectionTermEventNewsSources()
            : base(Tags.NoUnderlyingProtectionTermEventNewsSources) { }
        public NoUnderlyingProtectionTermEventNewsSources(int val)
            : base(Tags.NoUnderlyingProtectionTermEventNewsSources, val) { }

    }


    /// <summary>
    /// UnderlyingProtectionTermEventNewsSource Field
    /// </summary>/
    public sealed class UnderlyingProtectionTermEventNewsSource : StringField
    {
        public const int TAG = 42091;

        public UnderlyingProtectionTermEventNewsSource()
            : base(Tags.UnderlyingProtectionTermEventNewsSource) { }
        public UnderlyingProtectionTermEventNewsSource(string val)
            : base(Tags.UnderlyingProtectionTermEventNewsSource, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 42092;

        public UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention) { }
        public UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42093;

        public UnderlyingProvisionCashSettlPaymentDateRelativeTo()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo) { }
        public UnderlyingProvisionCashSettlPaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42094;

        public UnderlyingProvisionCashSettlPaymentDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod) { }
        public UnderlyingProvisionCashSettlPaymentDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42095;

        public UnderlyingProvisionCashSettlPaymentDateOffsetUnit()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit) { }
        public UnderlyingProvisionCashSettlPaymentDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42096;

        public UnderlyingProvisionCashSettlPaymentDateOffsetDayType()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType) { }
        public UnderlyingProvisionCashSettlPaymentDateOffsetDayType(int val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateRangeFirst Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateRangeFirst : StringField
    {
        public const int TAG = 42097;

        public UnderlyingProvisionCashSettlPaymentDateRangeFirst()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst) { }
        public UnderlyingProvisionCashSettlPaymentDateRangeFirst(string val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRangeFirst, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateRangeLast Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateRangeLast : StringField
    {
        public const int TAG = 42098;

        public UnderlyingProvisionCashSettlPaymentDateRangeLast()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast) { }
        public UnderlyingProvisionCashSettlPaymentDateRangeLast(string val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateRangeLast, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionCashSettlPaymentDates Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionCashSettlPaymentDates : IntField
    {
        public const int TAG = 42099;

        public NoUnderlyingProvisionCashSettlPaymentDates()
            : base(Tags.NoUnderlyingProvisionCashSettlPaymentDates) { }
        public NoUnderlyingProvisionCashSettlPaymentDates(int val)
            : base(Tags.NoUnderlyingProvisionCashSettlPaymentDates, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDate Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDate : StringField
    {
        public const int TAG = 42100;

        public UnderlyingProvisionCashSettlPaymentDate()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDate) { }
        public UnderlyingProvisionCashSettlPaymentDate(string val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDate, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateType Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateType : IntField
    {
        public const int TAG = 42101;

        public UnderlyingProvisionCashSettlPaymentDateType()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateType) { }
        public UnderlyingProvisionCashSettlPaymentDateType(int val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlQuoteSource Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlQuoteSource : IntField
    {
        public const int TAG = 42102;

        public UnderlyingProvisionCashSettlQuoteSource()
            : base(Tags.UnderlyingProvisionCashSettlQuoteSource) { }
        public UnderlyingProvisionCashSettlQuoteSource(int val)
            : base(Tags.UnderlyingProvisionCashSettlQuoteSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlQuoteReferencePage Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlQuoteReferencePage : StringField
    {
        public const int TAG = 42103;

        public UnderlyingProvisionCashSettlQuoteReferencePage()
            : base(Tags.UnderlyingProvisionCashSettlQuoteReferencePage) { }
        public UnderlyingProvisionCashSettlQuoteReferencePage(string val)
            : base(Tags.UnderlyingProvisionCashSettlQuoteReferencePage, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueTime Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueTime : StringField
    {
        public const int TAG = 42104;

        public UnderlyingProvisionCashSettlValueTime()
            : base(Tags.UnderlyingProvisionCashSettlValueTime) { }
        public UnderlyingProvisionCashSettlValueTime(string val)
            : base(Tags.UnderlyingProvisionCashSettlValueTime, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueTimeBusinessCenter : StringField
    {
        public const int TAG = 42105;

        public UnderlyingProvisionCashSettlValueTimeBusinessCenter()
            : base(Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter) { }
        public UnderlyingProvisionCashSettlValueTimeBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionCashSettlValueTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateBusinessDayConvention : IntField
    {
        public const int TAG = 42106;

        public UnderlyingProvisionCashSettlValueDateBusinessDayConvention()
            : base(Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention) { }
        public UnderlyingProvisionCashSettlValueDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateRelativeTo : IntField
    {
        public const int TAG = 42107;

        public UnderlyingProvisionCashSettlValueDateRelativeTo()
            : base(Tags.UnderlyingProvisionCashSettlValueDateRelativeTo) { }
        public UnderlyingProvisionCashSettlValueDateRelativeTo(int val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateOffsetPeriod : IntField
    {
        public const int TAG = 42108;

        public UnderlyingProvisionCashSettlValueDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod) { }
        public UnderlyingProvisionCashSettlValueDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateOffsetUnit : StringField
    {
        public const int TAG = 42109;

        public UnderlyingProvisionCashSettlValueDateOffsetUnit()
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit) { }
        public UnderlyingProvisionCashSettlValueDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateOffsetDayType : IntField
    {
        public const int TAG = 42110;

        public UnderlyingProvisionCashSettlValueDateOffsetDayType()
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType) { }
        public UnderlyingProvisionCashSettlValueDateOffsetDayType(int val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateAdjusted : StringField
    {
        public const int TAG = 42111;

        public UnderlyingProvisionCashSettlValueDateAdjusted()
            : base(Tags.UnderlyingProvisionCashSettlValueDateAdjusted) { }
        public UnderlyingProvisionCashSettlValueDateAdjusted(string val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionOptionExerciseFixedDates Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionOptionExerciseFixedDates : IntField
    {
        public const int TAG = 42112;

        public NoUnderlyingProvisionOptionExerciseFixedDates()
            : base(Tags.NoUnderlyingProvisionOptionExerciseFixedDates) { }
        public NoUnderlyingProvisionOptionExerciseFixedDates(int val)
            : base(Tags.NoUnderlyingProvisionOptionExerciseFixedDates, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseFixedDate Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseFixedDate : StringField
    {
        public const int TAG = 42113;

        public UnderlyingProvisionOptionExerciseFixedDate()
            : base(Tags.UnderlyingProvisionOptionExerciseFixedDate) { }
        public UnderlyingProvisionOptionExerciseFixedDate(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseFixedDate, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseFixedDateType Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseFixedDateType : IntField
    {
        public const int TAG = 42114;

        public UnderlyingProvisionOptionExerciseFixedDateType()
            : base(Tags.UnderlyingProvisionOptionExerciseFixedDateType) { }
        public UnderlyingProvisionOptionExerciseFixedDateType(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseFixedDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseBusinessDayConvention : IntField
    {
        public const int TAG = 42115;

        public UnderlyingProvisionOptionExerciseBusinessDayConvention()
            : base(Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention) { }
        public UnderlyingProvisionOptionExerciseBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod : IntField
    {
        public const int TAG = 42116;

        public UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod) { }
        public UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit : StringField
    {
        public const int TAG = 42117;

        public UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit()
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit) { }
        public UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseFrequencyPeriod : IntField
    {
        public const int TAG = 42118;

        public UnderlyingProvisionOptionExerciseFrequencyPeriod()
            : base(Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod) { }
        public UnderlyingProvisionOptionExerciseFrequencyPeriod(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseFrequencyUnit : StringField
    {
        public const int TAG = 42119;

        public UnderlyingProvisionOptionExerciseFrequencyUnit()
            : base(Tags.UnderlyingProvisionOptionExerciseFrequencyUnit) { }
        public UnderlyingProvisionOptionExerciseFrequencyUnit(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateUnadjusted : StringField
    {
        public const int TAG = 42120;

        public UnderlyingProvisionOptionExerciseStartDateUnadjusted()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted) { }
        public UnderlyingProvisionOptionExerciseStartDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateRelativeTo : IntField
    {
        public const int TAG = 42121;

        public UnderlyingProvisionOptionExerciseStartDateRelativeTo()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo) { }
        public UnderlyingProvisionOptionExerciseStartDateRelativeTo(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42122;

        public UnderlyingProvisionOptionExerciseStartDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod) { }
        public UnderlyingProvisionOptionExerciseStartDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateOffsetUnit : StringField
    {
        public const int TAG = 42123;

        public UnderlyingProvisionOptionExerciseStartDateOffsetUnit()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit) { }
        public UnderlyingProvisionOptionExerciseStartDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateOffsetDayType : IntField
    {
        public const int TAG = 42124;

        public UnderlyingProvisionOptionExerciseStartDateOffsetDayType()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType) { }
        public UnderlyingProvisionOptionExerciseStartDateOffsetDayType(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStartDateAdjusted : StringField
    {
        public const int TAG = 42125;

        public UnderlyingProvisionOptionExerciseStartDateAdjusted()
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted) { }
        public UnderlyingProvisionOptionExerciseStartDateAdjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseStartDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExercisePeriodSkip Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExercisePeriodSkip : IntField
    {
        public const int TAG = 42126;

        public UnderlyingProvisionOptionExercisePeriodSkip()
            : base(Tags.UnderlyingProvisionOptionExercisePeriodSkip) { }
        public UnderlyingProvisionOptionExercisePeriodSkip(int val)
            : base(Tags.UnderlyingProvisionOptionExercisePeriodSkip, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 42127;

        public UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted()
            : base(Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted) { }
        public UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 42128;

        public UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted()
            : base(Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted) { }
        public UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseEarliestTime Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseEarliestTime : StringField
    {
        public const int TAG = 42129;

        public UnderlyingProvisionOptionExerciseEarliestTime()
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestTime) { }
        public UnderlyingProvisionOptionExerciseEarliestTime(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestTime, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter : StringField
    {
        public const int TAG = 42130;

        public UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter) { }
        public UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseLatestTime Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseLatestTime : StringField
    {
        public const int TAG = 42131;

        public UnderlyingProvisionOptionExerciseLatestTime()
            : base(Tags.UnderlyingProvisionOptionExerciseLatestTime) { }
        public UnderlyingProvisionOptionExerciseLatestTime(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseLatestTime, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter : StringField
    {
        public const int TAG = 42132;

        public UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter) { }
        public UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateUnadjusted : StringField
    {
        public const int TAG = 42133;

        public UnderlyingProvisionOptionExpirationDateUnadjusted()
            : base(Tags.UnderlyingProvisionOptionExpirationDateUnadjusted) { }
        public UnderlyingProvisionOptionExpirationDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateBusinessDayConvention : IntField
    {
        public const int TAG = 42134;

        public UnderlyingProvisionOptionExpirationDateBusinessDayConvention()
            : base(Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention) { }
        public UnderlyingProvisionOptionExpirationDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateRelativeTo : IntField
    {
        public const int TAG = 42135;

        public UnderlyingProvisionOptionExpirationDateRelativeTo()
            : base(Tags.UnderlyingProvisionOptionExpirationDateRelativeTo) { }
        public UnderlyingProvisionOptionExpirationDateRelativeTo(int val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateOffsetPeriod : IntField
    {
        public const int TAG = 42136;

        public UnderlyingProvisionOptionExpirationDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod) { }
        public UnderlyingProvisionOptionExpirationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateOffsetUnit : StringField
    {
        public const int TAG = 42137;

        public UnderlyingProvisionOptionExpirationDateOffsetUnit()
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit) { }
        public UnderlyingProvisionOptionExpirationDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateOffsetDayType : IntField
    {
        public const int TAG = 42138;

        public UnderlyingProvisionOptionExpirationDateOffsetDayType()
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType) { }
        public UnderlyingProvisionOptionExpirationDateOffsetDayType(int val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateAdjusted : StringField
    {
        public const int TAG = 42139;

        public UnderlyingProvisionOptionExpirationDateAdjusted()
            : base(Tags.UnderlyingProvisionOptionExpirationDateAdjusted) { }
        public UnderlyingProvisionOptionExpirationDateAdjusted(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationTime Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationTime : StringField
    {
        public const int TAG = 42140;

        public UnderlyingProvisionOptionExpirationTime()
            : base(Tags.UnderlyingProvisionOptionExpirationTime) { }
        public UnderlyingProvisionOptionExpirationTime(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationTime, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationTimeBusinessCenter : StringField
    {
        public const int TAG = 42141;

        public UnderlyingProvisionOptionExpirationTimeBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter) { }
        public UnderlyingProvisionOptionExpirationTimeBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted : StringField
    {
        public const int TAG = 42142;

        public UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention : IntField
    {
        public const int TAG = 42143;

        public UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo : IntField
    {
        public const int TAG = 42144;

        public UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo(int val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod : IntField
    {
        public const int TAG = 42145;

        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod(int val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit : StringField
    {
        public const int TAG = 42146;

        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit(string val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType : IntField
    {
        public const int TAG = 42147;

        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType(int val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted : StringField
    {
        public const int TAG = 42148;

        public UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted(string val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisions Field
    /// </summary>/
    public sealed class NoUnderlyingProvisions : IntField
    {
        public const int TAG = 42149;

        public NoUnderlyingProvisions()
            : base(Tags.NoUnderlyingProvisions) { }
        public NoUnderlyingProvisions(int val)
            : base(Tags.NoUnderlyingProvisions, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionType Field
    /// </summary>/
    public sealed class UnderlyingProvisionType : IntField
    {
        public const int TAG = 42150;

        public UnderlyingProvisionType()
            : base(Tags.UnderlyingProvisionType) { }
        public UnderlyingProvisionType(int val)
            : base(Tags.UnderlyingProvisionType, val) { }


        // Field Enumerations
        public const int MANDATORY_EARLY_TERMINATION = 0;
        public const int OPTIONAL_EARLY_TERMINATION = 1;
        public const int CANCELABLE = 2;
        public const int EXTENDABLE = 3;
        public const int MUTUAL_EARLY_TERMINATION = 4;
        public const int EVERGREEN = 5;
        public const int CALLABLE = 6;
        public const int PUTTABLE = 7;
    }


    /// <summary>
    /// UnderlyingProvisionDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateUnadjusted : StringField
    {
        public const int TAG = 42151;

        public UnderlyingProvisionDateUnadjusted()
            : base(Tags.UnderlyingProvisionDateUnadjusted) { }
        public UnderlyingProvisionDateUnadjusted(string val)
            : base(Tags.UnderlyingProvisionDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateBusinessDayConvention : IntField
    {
        public const int TAG = 42152;

        public UnderlyingProvisionDateBusinessDayConvention()
            : base(Tags.UnderlyingProvisionDateBusinessDayConvention) { }
        public UnderlyingProvisionDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingProvisionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingProvisionDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateAdjusted : StringField
    {
        public const int TAG = 42153;

        public UnderlyingProvisionDateAdjusted()
            : base(Tags.UnderlyingProvisionDateAdjusted) { }
        public UnderlyingProvisionDateAdjusted(string val)
            : base(Tags.UnderlyingProvisionDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionDateTenorPeriod Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateTenorPeriod : IntField
    {
        public const int TAG = 42154;

        public UnderlyingProvisionDateTenorPeriod()
            : base(Tags.UnderlyingProvisionDateTenorPeriod) { }
        public UnderlyingProvisionDateTenorPeriod(int val)
            : base(Tags.UnderlyingProvisionDateTenorPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionDateTenorUnit Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateTenorUnit : StringField
    {
        public const int TAG = 42155;

        public UnderlyingProvisionDateTenorUnit()
            : base(Tags.UnderlyingProvisionDateTenorUnit) { }
        public UnderlyingProvisionDateTenorUnit(string val)
            : base(Tags.UnderlyingProvisionDateTenorUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingProvisionCalculationAgent Field
    /// </summary>/
    public sealed class UnderlyingProvisionCalculationAgent : IntField
    {
        public const int TAG = 42156;

        public UnderlyingProvisionCalculationAgent()
            : base(Tags.UnderlyingProvisionCalculationAgent) { }
        public UnderlyingProvisionCalculationAgent(int val)
            : base(Tags.UnderlyingProvisionCalculationAgent, val) { }


        // Field Enumerations
        public const int EXERCISING_PARTY = 0;
        public const int NON_EXERCISING_PARTY = 1;
        public const int AS_SPECIFIED_IN_THE_MASTER_AGREEMENT = 2;
        public const int AS_SPECIFIED_IN_THE_STANDARD_TERMS_SUPPLEMENT = 3;
    }


    /// <summary>
    /// UnderlyingProvisionOptionSinglePartyBuyerSide Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionSinglePartyBuyerSide : IntField
    {
        public const int TAG = 42157;

        public UnderlyingProvisionOptionSinglePartyBuyerSide()
            : base(Tags.UnderlyingProvisionOptionSinglePartyBuyerSide) { }
        public UnderlyingProvisionOptionSinglePartyBuyerSide(int val)
            : base(Tags.UnderlyingProvisionOptionSinglePartyBuyerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingProvisionOptionSinglePartySellerSide Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionSinglePartySellerSide : IntField
    {
        public const int TAG = 42158;

        public UnderlyingProvisionOptionSinglePartySellerSide()
            : base(Tags.UnderlyingProvisionOptionSinglePartySellerSide) { }
        public UnderlyingProvisionOptionSinglePartySellerSide(int val)
            : base(Tags.UnderlyingProvisionOptionSinglePartySellerSide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseStyle Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseStyle : IntField
    {
        public const int TAG = 42159;

        public UnderlyingProvisionOptionExerciseStyle()
            : base(Tags.UnderlyingProvisionOptionExerciseStyle) { }
        public UnderlyingProvisionOptionExerciseStyle(int val)
            : base(Tags.UnderlyingProvisionOptionExerciseStyle, val) { }


        // Field Enumerations
        public const int EUROPEAN = 0;
        public const int AMERICAN = 1;
        public const int BERMUDA = 2;
        public const int OTHER = 99;
    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseMultipleNotional Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseMultipleNotional : DecimalField
    {
        public const int TAG = 42160;

        public UnderlyingProvisionOptionExerciseMultipleNotional()
            : base(Tags.UnderlyingProvisionOptionExerciseMultipleNotional) { }
        public UnderlyingProvisionOptionExerciseMultipleNotional(Decimal val)
            : base(Tags.UnderlyingProvisionOptionExerciseMultipleNotional, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseMinimumNotional Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseMinimumNotional : DecimalField
    {
        public const int TAG = 42161;

        public UnderlyingProvisionOptionExerciseMinimumNotional()
            : base(Tags.UnderlyingProvisionOptionExerciseMinimumNotional) { }
        public UnderlyingProvisionOptionExerciseMinimumNotional(Decimal val)
            : base(Tags.UnderlyingProvisionOptionExerciseMinimumNotional, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseMaximumNotional Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseMaximumNotional : DecimalField
    {
        public const int TAG = 42162;

        public UnderlyingProvisionOptionExerciseMaximumNotional()
            : base(Tags.UnderlyingProvisionOptionExerciseMaximumNotional) { }
        public UnderlyingProvisionOptionExerciseMaximumNotional(Decimal val)
            : base(Tags.UnderlyingProvisionOptionExerciseMaximumNotional, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionMinimumNumber Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionMinimumNumber : IntField
    {
        public const int TAG = 42163;

        public UnderlyingProvisionOptionMinimumNumber()
            : base(Tags.UnderlyingProvisionOptionMinimumNumber) { }
        public UnderlyingProvisionOptionMinimumNumber(int val)
            : base(Tags.UnderlyingProvisionOptionMinimumNumber, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionMaximumNumber Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionMaximumNumber : IntField
    {
        public const int TAG = 42164;

        public UnderlyingProvisionOptionMaximumNumber()
            : base(Tags.UnderlyingProvisionOptionMaximumNumber) { }
        public UnderlyingProvisionOptionMaximumNumber(int val)
            : base(Tags.UnderlyingProvisionOptionMaximumNumber, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseConfirmation Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseConfirmation : BooleanField
    {
        public const int TAG = 42165;

        public UnderlyingProvisionOptionExerciseConfirmation()
            : base(Tags.UnderlyingProvisionOptionExerciseConfirmation) { }
        public UnderlyingProvisionOptionExerciseConfirmation(Boolean val)
            : base(Tags.UnderlyingProvisionOptionExerciseConfirmation, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlMethod Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlMethod : IntField
    {
        public const int TAG = 42166;

        public UnderlyingProvisionCashSettlMethod()
            : base(Tags.UnderlyingProvisionCashSettlMethod) { }
        public UnderlyingProvisionCashSettlMethod(int val)
            : base(Tags.UnderlyingProvisionCashSettlMethod, val) { }


        // Field Enumerations
        public const int CASH_PRICE = 0;
        public const int CASH_PRICE_ALTERNATE = 1;
        public const int PAR_YIELD_CURVE_ADJUSTED = 2;
        public const int ZERO_COUPON_YIELD_CURVE_ADJUSTED = 3;
        public const int PAR_YIELD_CURVE_UNADJUSTED = 4;
        public const int CROSS_CURRENCY = 5;
        public const int COLLATERALIZED_PRICE = 6;
    }


    /// <summary>
    /// UnderlyingProvisionCashSettlCurrency Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlCurrency : StringField
    {
        public const int TAG = 42167;

        public UnderlyingProvisionCashSettlCurrency()
            : base(Tags.UnderlyingProvisionCashSettlCurrency) { }
        public UnderlyingProvisionCashSettlCurrency(string val)
            : base(Tags.UnderlyingProvisionCashSettlCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlCurrency2 Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlCurrency2 : StringField
    {
        public const int TAG = 42168;

        public UnderlyingProvisionCashSettlCurrency2()
            : base(Tags.UnderlyingProvisionCashSettlCurrency2) { }
        public UnderlyingProvisionCashSettlCurrency2(string val)
            : base(Tags.UnderlyingProvisionCashSettlCurrency2, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlQuoteType Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlQuoteType : IntField
    {
        public const int TAG = 42169;

        public UnderlyingProvisionCashSettlQuoteType()
            : base(Tags.UnderlyingProvisionCashSettlQuoteType) { }
        public UnderlyingProvisionCashSettlQuoteType(int val)
            : base(Tags.UnderlyingProvisionCashSettlQuoteType, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
        public const int EXERCISING_PARTY_PAYS = 3;
    }


    /// <summary>
    /// UnderlyingProvisionText Field
    /// </summary>/
    public sealed class UnderlyingProvisionText : StringField
    {
        public const int TAG = 42170;

        public UnderlyingProvisionText()
            : base(Tags.UnderlyingProvisionText) { }
        public UnderlyingProvisionText(string val)
            : base(Tags.UnderlyingProvisionText, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingProvisionTextLen Field
    /// </summary>/
    public sealed class EncodedUnderlyingProvisionTextLen : IntField
    {
        public const int TAG = 42171;

        public EncodedUnderlyingProvisionTextLen()
            : base(Tags.EncodedUnderlyingProvisionTextLen) { }
        public EncodedUnderlyingProvisionTextLen(int val)
            : base(Tags.EncodedUnderlyingProvisionTextLen, val) { }

    }


    /// <summary>
    /// EncodedUnderlyingProvisionText Field
    /// </summary>/
    public sealed class EncodedUnderlyingProvisionText : StringField
    {
        public const int TAG = 42172;

        public EncodedUnderlyingProvisionText()
            : base(Tags.EncodedUnderlyingProvisionText) { }
        public EncodedUnderlyingProvisionText(string val)
            : base(Tags.EncodedUnderlyingProvisionText, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionPartyIDs Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionPartyIDs : IntField
    {
        public const int TAG = 42173;

        public NoUnderlyingProvisionPartyIDs()
            : base(Tags.NoUnderlyingProvisionPartyIDs) { }
        public NoUnderlyingProvisionPartyIDs(int val)
            : base(Tags.NoUnderlyingProvisionPartyIDs, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionPartyID Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartyID : StringField
    {
        public const int TAG = 42174;

        public UnderlyingProvisionPartyID()
            : base(Tags.UnderlyingProvisionPartyID) { }
        public UnderlyingProvisionPartyID(string val)
            : base(Tags.UnderlyingProvisionPartyID, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionPartyIDSource Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartyIDSource : CharField
    {
        public const int TAG = 42175;

        public UnderlyingProvisionPartyIDSource()
            : base(Tags.UnderlyingProvisionPartyIDSource) { }
        public UnderlyingProvisionPartyIDSource(char val)
            : base(Tags.UnderlyingProvisionPartyIDSource, val) { }


        // Field Enumerations
        public const char UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER = '6';
        public const char US_SOCIAL_SECURITY_NUMBER = '7';
        public const char US_EMPLOYER_OR_TAX_ID_NUMBER = '8';
        public const char AUSTRALIAN_BUSINESS_NUMBER = '9';
        public const char AUSTRALIAN_TAX_FILE_NUMBER = 'A';
        public const char KOREAN_INVESTOR_ID = '1';
        public const char TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID = '2';
        public const char TAIWANESE_TRADING_ACCT = '3';
        public const char MALAYSIAN_CENTRAL_DEPOSITORY = '4';
        public const char CHINESE_INVESTOR_ID = '5';
        public const char DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT = 'I';
        public const char BIC = 'B';
        public const char GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER = 'C';
        public const char PROPRIETARY = 'D';
        public const char ISO_COUNTRY_CODE = 'E';
        public const char SETTLEMENT_ENTITY_LOCATION = 'F';
        public const char MARKET_IDENTIFIER_CODE = 'G';
        public const char CSD_PARTICIPANT_MEMBER_CODE = 'H';
        public const char TAX_ID = 'J';
        public const char AUSTRALIAN_COMPANY_NUMBER = 'K';
        public const char AUSTRALIAN_REGISTERED_BODY_NUMBER = 'L';
        public const char CFTC_REPORTING_FIRM_IDENTIFIER = 'M';
        public const char LEGAL_ENTITY_IDENTIFIER = 'N';
        public const char INTERIM_IDENTIFIER = 'O';
        public const char SHORT_CODE_IDENTIFIER = 'P';
        public const char NATIONAL_ID_OF_NATURAL_PERSON = 'Q';
        public const char INDIA_PERMANENT_ACCOUNT_NUMBER = 'R';
        public const char FIRM_DESIGNATED_IDENTIFIER = 'S';
        public const char SPECIAL_SEGREGATED_ACCOUNT_ID = 'T';
        public const char MASTER_SPECIAL_SEGREGATED_ACCOUNT_ID = 'U';
    }


    /// <summary>
    /// UnderlyingProvisionPartyRole Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartyRole : IntField
    {
        public const int TAG = 42176;

        public UnderlyingProvisionPartyRole()
            : base(Tags.UnderlyingProvisionPartyRole) { }
        public UnderlyingProvisionPartyRole(int val)
            : base(Tags.UnderlyingProvisionPartyRole, val) { }


        // Field Enumerations
        public const int EXECUTING_FIRM = 1;
        public const int BROKER_OF_CREDIT = 2;
        public const int CLIENT_ID = 3;
        public const int CLEARING_FIRM = 4;
        public const int INVESTOR_ID = 5;
        public const int INTRODUCING_FIRM = 6;
        public const int ENTERING_FIRM = 7;
        public const int LOCATE = 8;
        public const int FUND_MANAGER_CLIENT_ID = 9;
        public const int SETTLEMENT_LOCATION = 10;
        public const int ORDER_ORIGINATION_TRADER = 11;
        public const int EXECUTING_TRADER = 12;
        public const int ORDER_ORIGINATION_FIRM = 13;
        public const int GIVEUP_CLEARING_FIRM = 14;
        public const int CORRESPONDANT_CLEARING_FIRM = 15;
        public const int EXECUTING_SYSTEM = 16;
        public const int CONTRA_FIRM = 17;
        public const int CONTRA_CLEARING_FIRM = 18;
        public const int SPONSORING_FIRM = 19;
        public const int UNDERLYING_CONTRA_FIRM = 20;
        public const int CLEARING_ORGANIZATION = 21;
        public const int EXCHANGE = 22;
        public const int CUSTOMER_ACCOUNT = 24;
        public const int CORRESPONDENT_CLEARING_ORGANIZATION = 25;
        public const int CORRESPONDENT_BROKER = 26;
        public const int BUYER_SELLER = 27;
        public const int CUSTODIAN = 28;
        public const int INTERMEDIARY = 29;
        public const int AGENT = 30;
        public const int SUB_CUSTODIAN = 31;
        public const int BENEFICIARY = 32;
        public const int INTERESTED_PARTY = 33;
        public const int REGULATORY_BODY = 34;
        public const int LIQUIDITY_PROVIDER = 35;
        public const int ENTERING_TRADER = 36;
        public const int CONTRA_TRADER = 37;
        public const int POSITION_ACCOUNT = 38;
        public const int CONTRA_INVESTOR_ID = 39;
        public const int TRANSFER_TO_FIRM = 40;
        public const int CONTRA_POSITION_ACCOUNT = 41;
        public const int CONTRA_EXCHANGE = 42;
        public const int INTERNAL_CARRY_ACCOUNT = 43;
        public const int ORDER_ENTRY_OPERATOR_ID = 44;
        public const int SECONDARY_ACCOUNT_NUMBER = 45;
        public const int FOREIGN_FIRM = 46;
        public const int THIRD_PARTY_ALLOCATION_FIRM = 47;
        public const int CLAIMING_ACCOUNT = 48;
        public const int ASSET_MANAGER = 49;
        public const int PLEDGOR_ACCOUNT = 50;
        public const int PLEDGEE_ACCOUNT = 51;
        public const int LARGE_TRADER_REPORTABLE_ACCOUNT = 52;
        public const int TRADER_MNEMONIC = 53;
        public const int SENDER_LOCATION = 54;
        public const int SESSION_ID = 55;
        public const int ACCEPTABLE_COUNTERPARTY = 56;
        public const int UNACCEPTABLE_COUNTERPARTY = 57;
        public const int ENTERING_UNIT = 58;
        public const int EXECUTING_UNIT = 59;
        public const int INTRODUCING_BROKER = 60;
        public const int QUOTE_ORIGINATOR = 61;
        public const int REPORT_ORIGINATOR = 62;
        public const int SYSTEMATIC_INTERNALISER = 63;
        public const int MULTILATERAL_TRADING_FACILITY = 64;
        public const int REGULATED_MARKET = 65;
        public const int MARKET_MAKER = 66;
        public const int INVESTMENT_FIRM = 67;
        public const int HOST_COMPETENT_AUTHORITY = 68;
        public const int HOME_COMPETENT_AUTHORITY = 69;
        public const int COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY = 70;
        public const int COMPETENT_AUTHORITY_OF_THE_TRANSACTION = 71;
        public const int REPORTING_INTERMEDIARY = 72;
        public const int EXECUTION_VENUE = 73;
        public const int MARKET_DATA_ENTRY_ORIGINATOR = 74;
        public const int LOCATION_ID = 75;
        public const int DESK_ID = 76;
        public const int MARKET_DATA_MARKET = 77;
        public const int ALLOCATION_ENTITY = 78;
        public const int PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES = 79;
        public const int STEP_OUT_FIRM = 80;
        public const int BROKER_CIENT_ID = 81;
        public const int CENTRAL_REGISTRATION_DEPOSITORY = 82;
        public const int CLEARING_ACCOUNT = 83;
        public const int ACCEPTABLE_SETTLING_COUNTERPARTY = 84;
        public const int UNACCEPTABLE_SETTLING_COUNTERPARTY = 85;
        public const int CLS_MEMBER_BANK = 86;
        public const int IN_CONCERT_GROUP = 87;
        public const int IN_CONCERT_CONTROLLING_ENTITY = 88;
        public const int LARGE_POSITIONS_REPORTING_ACCOUNT = 89;
        public const int SETTLEMENT_FIRM = 90;
        public const int SETTLEMENT_ACCOUNT = 91;
        public const int REPORTING_MARKET_CENTER = 92;
        public const int RELATED_REPORTING_MARKET_CENTER = 93;
        public const int AWAY_MARKET = 94;
        public const int GIVE_UP = 95;
        public const int TAKE_UP = 96;
        public const int GIVE_UP_CLEARING_FIRM = 97;
        public const int TAKE_UP_CLEARING_FIRM = 98;
        public const int ORIGINATING_MARKET = 99;
        public const int MARGIN_ACCOUNT = 100;
        public const int COLLATERAL_ASSET_ACCOUNT = 101;
        public const int DATA_REPOSITORY = 102;
        public const int CALCULATION_AGENT = 103;
        public const int SENDER_OF_EXERCISE_NOTICE = 104;
        public const int RECEIVER_OF_EXERCISE_NOTICE = 105;
        public const int RATE_REFERENCE_BANK = 106;
        public const int CORRESPONDENT = 107;
        public const int BENEFICIARYS_BANK_OR_DEPOSITORY_INSTITUTION = 109;
        public const int BORROWER = 110;
        public const int PRIMARY_OBLIGATOR = 111;
        public const int GUARANTOR = 112;
        public const int EXCLUDED_REFERENCE_ENTITY = 113;
        public const int DETERMINING_PARTY = 114;
        public const int HEDGING_PARTY = 115;
        public const int REPORTING_ENTITY = 116;
        public const int SALES_PERSON = 117;
        public const int OPERATOR = 118;
        public const int CENTRAL_SECURITIES_DEPOSITORY_119 = 119;
        public const int INTERNATIONAL_CENTRAL_SECURITIES_DEPOSITORY = 120;
        public const int TRADING_SUB_ACCOUNT = 121;
        public const int INVESTMENT_DECISION_MAKER = 122;
        public const int PUBLISHING_INTERMEDIARY = 123;
        public const int CENTRAL_SECURITIES_DEPOSITORY_124 = 124;
        public const int ISSUER = 125;
        public const int CONTRA_CUSTOMER_ACCOUNT = 126;
        public const int CONTRA_INVESTMENT_DECISION_MAKER = 127;
    }


    /// <summary>
    /// NoUnderlyingProvisionPartySubIDs Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionPartySubIDs : IntField
    {
        public const int TAG = 42177;

        public NoUnderlyingProvisionPartySubIDs()
            : base(Tags.NoUnderlyingProvisionPartySubIDs) { }
        public NoUnderlyingProvisionPartySubIDs(int val)
            : base(Tags.NoUnderlyingProvisionPartySubIDs, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionPartySubID Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartySubID : StringField
    {
        public const int TAG = 42178;

        public UnderlyingProvisionPartySubID()
            : base(Tags.UnderlyingProvisionPartySubID) { }
        public UnderlyingProvisionPartySubID(string val)
            : base(Tags.UnderlyingProvisionPartySubID, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionPartySubIDType Field
    /// </summary>/
    public sealed class UnderlyingProvisionPartySubIDType : IntField
    {
        public const int TAG = 42179;

        public UnderlyingProvisionPartySubIDType()
            : base(Tags.UnderlyingProvisionPartySubIDType) { }
        public UnderlyingProvisionPartySubIDType(int val)
            : base(Tags.UnderlyingProvisionPartySubIDType, val) { }


        // Field Enumerations
        public const int FIRM = 1;
        public const int PERSON = 2;
        public const int SYSTEM = 3;
        public const int APPLICATION = 4;
        public const int FULL_LEGAL_NAME_OF_FIRM = 5;
        public const int POSTAL_ADDRESS = 6;
        public const int PHONE_NUMBER = 7;
        public const int EMAIL_ADDRESS = 8;
        public const int CONTACT_NAME = 9;
        public const int SECURITIES_ACCOUNT_NUMBER = 10;
        public const int REGISTRATION_NUMBER = 11;
        public const int REGISTERED_ADDRESS_12 = 12;
        public const int REGULATORY_STATUS = 13;
        public const int REGISTRATION_NAME = 14;
        public const int CASH_ACCOUNT_NUMBER = 15;
        public const int BIC = 16;
        public const int CSD_PARTICIPANT_MEMBER_CODE = 17;
        public const int REGISTERED_ADDRESS_18 = 18;
        public const int FUND_ACCOUNT_NAME = 19;
        public const int TELEX_NUMBER = 20;
        public const int FAX_NUMBER = 21;
        public const int SECURITIES_ACCOUNT_NAME = 22;
        public const int CASH_ACCOUNT_NAME = 23;
        public const int DEPARTMENT = 24;
        public const int LOCATION_DESK = 25;
        public const int POSITION_ACCOUNT_TYPE = 26;
        public const int SECURITY_LOCATE_ID = 27;
        public const int MARKET_MAKER = 28;
        public const int ELIGIBLE_COUNTERPARTY = 29;
        public const int PROFESSIONAL_CLIENT = 30;
        public const int LOCATION = 31;
        public const int EXECUTION_VENUE = 32;
        public const int CURRENCY_DELIVERY_IDENTIFIER = 33;
        public const int ADDRESS_CITY = 34;
        public const int ADDRESS_STATE_PROVINCE = 35;
        public const int ADDRESS_POSTAL_CODE = 36;
        public const int ADDRESS_STREET = 37;
        public const int ADDRESS_COUNTRY = 38;
        public const int ISO_COUNTRY_CODE = 39;
        public const int MARKET_SEGMENT = 40;
        public const int CUSTOMER_ACCOUNT_TYPE = 41;
        public const int OMNIBUS_ACCOUNT = 42;
        public const int FUNDS_SEGREGATION_TYPE = 43;
        public const int GUARANTEE_FUND = 44;
        public const int SWAP_DEALER = 45;
        public const int MAJOR_PARTICIPANT = 46;
        public const int FINANCIAL_ENTITY = 47;
        public const int US_PERSON = 48;
        public const int REPORTING_ENTITY_INDICATOR = 49;
        public const int ELECTED_CLEARING_REQUIREMENT_EXCEPTION = 50;
        public const int BUSINESS_CENTER = 51;
        public const int REFERENCE_TEXT = 52;
        public const int SHORT_MARKING_EXEMPT_ACCOUNT = 53;
        public const int PARENT_FIRM_IDENTIFIER = 54;
        public const int PARENT_FIRM_NAME = 55;
        public const int DEAL_IDENTIFIER = 56;
        public const int SYSTEM_TRADE_IDENTIFIER = 57;
        public const int SYSTEM_TRADE_SUB_IDENTIFIER = 58;
        public const int FUTURES_COMMISSION_MERCHANT = 59;
        public const int DELIVERY_TERMINAL_CUSTOMER_ACCOUNT_CODE = 60;
        public const int VOLUNTARY_REPORTING_ENTITY = 61;
        public const int REPORTING_OBLIGATION_JURISDICTION = 62;
        public const int VOLUNTARY_REPORTING_JURISDICTION = 63;
        public const int COMPANY_ACTIVITIES = 64;
        public const int EUROPEAN_ECONOMIC_AREA_DOMICILED = 65;
        public const int CONTRACT_LINKED_TO_COMMERCIAL_OR_TREASURY_FINANCING_FOR_THIS_COUNTERPARTY = 66;
        public const int CONTRACT_ABOVE_CLEARING_THRESHOLD_FOR_THIS_COUNTERPARTY = 67;
        public const int VOLUNTARY_REPORTING_PARTY = 68;
        public const int END_USER = 69;
        public const int LOCATION_OR_JURISDICTION = 70;
        public const int DERIVATIVES_DEALER = 71;
        public const int DOMICILE = 72;
        public const int EXEMPT_FROM_RECOGNITION = 73;
        public const int PAYER = 74;
        public const int RECEIVER = 75;
        public const int SYSTEMATIC_INTERNALISER = 76;
        public const int PUBLISHING_ENTITY_INDICATOR = 77;
        public const int FIRST_NAME = 78;
        public const int SURNAME = 79;
        public const int DATE_OF_BIRTH = 80;
        public const int ORDER_TRANSMITTING_FIRM = 81;
        public const int ORDER_TRANSMITTING_FIRM_FOR_BUYER = 82;
        public const int ORDER_TRANSMITTER_FOR_SELLER = 83;
        public const int LEGAL_ENTITY_IDENTIFIER = 84;
        public const int SUB_SECTOR_CLASSIFICATION = 85;
        public const int PARTY_SIDE = 86;
        public const int LEGAL_REGISTRATION_COUNTRY = 87;
    }


    /// <summary>
    /// NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 42180;

        public NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters()
            : base(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters) { }
        public NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionCashSettlPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 42181;

        public UnderlyingProvisionCashSettlPaymentDateBusinessCenter()
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter) { }
        public UnderlyingProvisionCashSettlPaymentDateBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionCashSettlPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionCashSettlValueDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionCashSettlValueDateBusinessCenters : IntField
    {
        public const int TAG = 42182;

        public NoUnderlyingProvisionCashSettlValueDateBusinessCenters()
            : base(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters) { }
        public NoUnderlyingProvisionCashSettlValueDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionCashSettlValueDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionCashSettlValueDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionCashSettlValueDateBusinessCenter : StringField
    {
        public const int TAG = 42183;

        public UnderlyingProvisionCashSettlValueDateBusinessCenter()
            : base(Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter) { }
        public UnderlyingProvisionCashSettlValueDateBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionCashSettlValueDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionOptionExerciseBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionOptionExerciseBusinessCenters : IntField
    {
        public const int TAG = 42184;

        public NoUnderlyingProvisionOptionExerciseBusinessCenters()
            : base(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters) { }
        public NoUnderlyingProvisionOptionExerciseBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionOptionExerciseBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExerciseBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExerciseBusinessCenter : StringField
    {
        public const int TAG = 42185;

        public UnderlyingProvisionOptionExerciseBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionExerciseBusinessCenter) { }
        public UnderlyingProvisionOptionExerciseBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionExerciseBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionOptionExpirationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionOptionExpirationDateBusinessCenters : IntField
    {
        public const int TAG = 42186;

        public NoUnderlyingProvisionOptionExpirationDateBusinessCenters()
            : base(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters) { }
        public NoUnderlyingProvisionOptionExpirationDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionOptionExpirationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionExpirationDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionExpirationDateBusinessCenter : StringField
    {
        public const int TAG = 42187;

        public UnderlyingProvisionOptionExpirationDateBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter) { }
        public UnderlyingProvisionOptionExpirationDateBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionExpirationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters : IntField
    {
        public const int TAG = 42188;

        public NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters()
            : base(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters) { }
        public NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter : StringField
    {
        public const int TAG = 42189;

        public UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter()
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter) { }
        public UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingProvisionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingProvisionDateBusinessCenters : IntField
    {
        public const int TAG = 42190;

        public NoUnderlyingProvisionDateBusinessCenters()
            : base(Tags.NoUnderlyingProvisionDateBusinessCenters) { }
        public NoUnderlyingProvisionDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingProvisionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingProvisionDateBusinessCenter : StringField
    {
        public const int TAG = 42191;

        public UnderlyingProvisionDateBusinessCenter()
            : base(Tags.UnderlyingProvisionDateBusinessCenter) { }
        public UnderlyingProvisionDateBusinessCenter(string val)
            : base(Tags.UnderlyingProvisionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// DeliveryStreamDeliveryPointSource Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryPointSource : IntField
    {
        public const int TAG = 42192;

        public DeliveryStreamDeliveryPointSource()
            : base(Tags.DeliveryStreamDeliveryPointSource) { }
        public DeliveryStreamDeliveryPointSource(int val)
            : base(Tags.DeliveryStreamDeliveryPointSource, val) { }


        // Field Enumerations
        public const int PROPRIETARY = 0;
        public const int ENERGY_IDENTIFICATION_CODE = 1;
    }


    /// <summary>
    /// DeliveryStreamDeliveryPointDesc Field
    /// </summary>/
    public sealed class DeliveryStreamDeliveryPointDesc : StringField
    {
        public const int TAG = 42193;

        public DeliveryStreamDeliveryPointDesc()
            : base(Tags.DeliveryStreamDeliveryPointDesc) { }
        public DeliveryStreamDeliveryPointDesc(string val)
            : base(Tags.DeliveryStreamDeliveryPointDesc, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamDeliveryPointSource Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryPointSource : IntField
    {
        public const int TAG = 42194;

        public LegDeliveryStreamDeliveryPointSource()
            : base(Tags.LegDeliveryStreamDeliveryPointSource) { }
        public LegDeliveryStreamDeliveryPointSource(int val)
            : base(Tags.LegDeliveryStreamDeliveryPointSource, val) { }


        // Field Enumerations
        public const int PROPRIETARY = 0;
        public const int ENERGY_IDENTIFICATION_CODE = 1;
    }


    /// <summary>
    /// LegDeliveryStreamDeliveryPointDesc Field
    /// </summary>/
    public sealed class LegDeliveryStreamDeliveryPointDesc : StringField
    {
        public const int TAG = 42195;

        public LegDeliveryStreamDeliveryPointDesc()
            : base(Tags.LegDeliveryStreamDeliveryPointDesc) { }
        public LegDeliveryStreamDeliveryPointDesc(string val)
            : base(Tags.LegDeliveryStreamDeliveryPointDesc, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryPointSource Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryPointSource : IntField
    {
        public const int TAG = 42196;

        public UnderlyingDeliveryStreamDeliveryPointSource()
            : base(Tags.UnderlyingDeliveryStreamDeliveryPointSource) { }
        public UnderlyingDeliveryStreamDeliveryPointSource(int val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryPointSource, val) { }


        // Field Enumerations
        public const int PROPRIETARY = 0;
        public const int ENERGY_IDENTIFICATION_CODE = 1;
    }


    /// <summary>
    /// UnderlyingDeliveryStreamDeliveryPointDesc Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamDeliveryPointDesc : StringField
    {
        public const int TAG = 42197;

        public UnderlyingDeliveryStreamDeliveryPointDesc()
            : base(Tags.UnderlyingDeliveryStreamDeliveryPointDesc) { }
        public UnderlyingDeliveryStreamDeliveryPointDesc(string val)
            : base(Tags.UnderlyingDeliveryStreamDeliveryPointDesc, val) { }

    }


    /// <summary>
    /// NoLegContractualDefinitions Field
    /// </summary>/
    public sealed class NoLegContractualDefinitions : IntField
    {
        public const int TAG = 42198;

        public NoLegContractualDefinitions()
            : base(Tags.NoLegContractualDefinitions) { }
        public NoLegContractualDefinitions(int val)
            : base(Tags.NoLegContractualDefinitions, val) { }

    }


    /// <summary>
    /// LegContractualDefinition Field
    /// </summary>/
    public sealed class LegContractualDefinition : StringField
    {
        public const int TAG = 42199;

        public LegContractualDefinition()
            : base(Tags.LegContractualDefinition) { }
        public LegContractualDefinition(string val)
            : base(Tags.LegContractualDefinition, val) { }

    }


    /// <summary>
    /// NoLegFinancingTermSupplements Field
    /// </summary>/
    public sealed class NoLegFinancingTermSupplements : IntField
    {
        public const int TAG = 42200;

        public NoLegFinancingTermSupplements()
            : base(Tags.NoLegFinancingTermSupplements) { }
        public NoLegFinancingTermSupplements(int val)
            : base(Tags.NoLegFinancingTermSupplements, val) { }

    }


    /// <summary>
    /// LegFinancingTermSupplementDesc Field
    /// </summary>/
    public sealed class LegFinancingTermSupplementDesc : StringField
    {
        public const int TAG = 42201;

        public LegFinancingTermSupplementDesc()
            : base(Tags.LegFinancingTermSupplementDesc) { }
        public LegFinancingTermSupplementDesc(string val)
            : base(Tags.LegFinancingTermSupplementDesc, val) { }

    }


    /// <summary>
    /// LegFinancingTermSupplementDate Field
    /// </summary>/
    public sealed class LegFinancingTermSupplementDate : StringField
    {
        public const int TAG = 42202;

        public LegFinancingTermSupplementDate()
            : base(Tags.LegFinancingTermSupplementDate) { }
        public LegFinancingTermSupplementDate(string val)
            : base(Tags.LegFinancingTermSupplementDate, val) { }

    }


    /// <summary>
    /// NoLegContractualMatrices Field
    /// </summary>/
    public sealed class NoLegContractualMatrices : IntField
    {
        public const int TAG = 42203;

        public NoLegContractualMatrices()
            : base(Tags.NoLegContractualMatrices) { }
        public NoLegContractualMatrices(int val)
            : base(Tags.NoLegContractualMatrices, val) { }

    }


    /// <summary>
    /// LegContractualMatrixSource Field
    /// </summary>/
    public sealed class LegContractualMatrixSource : StringField
    {
        public const int TAG = 42204;

        public LegContractualMatrixSource()
            : base(Tags.LegContractualMatrixSource) { }
        public LegContractualMatrixSource(string val)
            : base(Tags.LegContractualMatrixSource, val) { }

    }


    /// <summary>
    /// LegContractualMatrixDate Field
    /// </summary>/
    public sealed class LegContractualMatrixDate : StringField
    {
        public const int TAG = 42205;

        public LegContractualMatrixDate()
            : base(Tags.LegContractualMatrixDate) { }
        public LegContractualMatrixDate(string val)
            : base(Tags.LegContractualMatrixDate, val) { }

    }


    /// <summary>
    /// LegContractualMatrixTerm Field
    /// </summary>/
    public sealed class LegContractualMatrixTerm : StringField
    {
        public const int TAG = 42206;

        public LegContractualMatrixTerm()
            : base(Tags.LegContractualMatrixTerm) { }
        public LegContractualMatrixTerm(string val)
            : base(Tags.LegContractualMatrixTerm, val) { }

    }


    /// <summary>
    /// CashSettlDateUnadjusted Field
    /// </summary>/
    public sealed class CashSettlDateUnadjusted : StringField
    {
        public const int TAG = 42207;

        public CashSettlDateUnadjusted()
            : base(Tags.CashSettlDateUnadjusted) { }
        public CashSettlDateUnadjusted(string val)
            : base(Tags.CashSettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// CashSettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class CashSettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 42208;

        public CashSettlDateBusinessDayConvention()
            : base(Tags.CashSettlDateBusinessDayConvention) { }
        public CashSettlDateBusinessDayConvention(int val)
            : base(Tags.CashSettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// CashSettlDateRelativeTo Field
    /// </summary>/
    public sealed class CashSettlDateRelativeTo : IntField
    {
        public const int TAG = 42209;

        public CashSettlDateRelativeTo()
            : base(Tags.CashSettlDateRelativeTo) { }
        public CashSettlDateRelativeTo(int val)
            : base(Tags.CashSettlDateRelativeTo, val) { }

    }


    /// <summary>
    /// CashSettlDateOffsetPeriod Field
    /// </summary>/
    public sealed class CashSettlDateOffsetPeriod : IntField
    {
        public const int TAG = 42210;

        public CashSettlDateOffsetPeriod()
            : base(Tags.CashSettlDateOffsetPeriod) { }
        public CashSettlDateOffsetPeriod(int val)
            : base(Tags.CashSettlDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// CashSettlDateOffsetUnit Field
    /// </summary>/
    public sealed class CashSettlDateOffsetUnit : StringField
    {
        public const int TAG = 42211;

        public CashSettlDateOffsetUnit()
            : base(Tags.CashSettlDateOffsetUnit) { }
        public CashSettlDateOffsetUnit(string val)
            : base(Tags.CashSettlDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// CashSettlDateOffsetDayType Field
    /// </summary>/
    public sealed class CashSettlDateOffsetDayType : IntField
    {
        public const int TAG = 42212;

        public CashSettlDateOffsetDayType()
            : base(Tags.CashSettlDateOffsetDayType) { }
        public CashSettlDateOffsetDayType(int val)
            : base(Tags.CashSettlDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// CashSettlDateAdjusted Field
    /// </summary>/
    public sealed class CashSettlDateAdjusted : StringField
    {
        public const int TAG = 42213;

        public CashSettlDateAdjusted()
            : base(Tags.CashSettlDateAdjusted) { }
        public CashSettlDateAdjusted(string val)
            : base(Tags.CashSettlDateAdjusted, val) { }

    }


    /// <summary>
    /// NoCashSettlDateBusinessCenters Field
    /// </summary>/
    public sealed class NoCashSettlDateBusinessCenters : IntField
    {
        public const int TAG = 42214;

        public NoCashSettlDateBusinessCenters()
            : base(Tags.NoCashSettlDateBusinessCenters) { }
        public NoCashSettlDateBusinessCenters(int val)
            : base(Tags.NoCashSettlDateBusinessCenters, val) { }

    }


    /// <summary>
    /// CashSettlDateBusinessCenter Field
    /// </summary>/
    public sealed class CashSettlDateBusinessCenter : StringField
    {
        public const int TAG = 42215;

        public CashSettlDateBusinessCenter()
            : base(Tags.CashSettlDateBusinessCenter) { }
        public CashSettlDateBusinessCenter(string val)
            : base(Tags.CashSettlDateBusinessCenter, val) { }

    }


    /// <summary>
    /// CashSettlPriceSource Field
    /// </summary>/
    public sealed class CashSettlPriceSource : StringField
    {
        public const int TAG = 42216;

        public CashSettlPriceSource()
            : base(Tags.CashSettlPriceSource) { }
        public CashSettlPriceSource(string val)
            : base(Tags.CashSettlPriceSource, val) { }

    }


    /// <summary>
    /// CashSettlPriceDefault Field
    /// </summary>/
    public sealed class CashSettlPriceDefault : IntField
    {
        public const int TAG = 42217;

        public CashSettlPriceDefault()
            : base(Tags.CashSettlPriceDefault) { }
        public CashSettlPriceDefault(int val)
            : base(Tags.CashSettlPriceDefault, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE = 1;
    }


    /// <summary>
    /// DividendFloatingRateIndex Field
    /// </summary>/
    public sealed class DividendFloatingRateIndex : StringField
    {
        public const int TAG = 42218;

        public DividendFloatingRateIndex()
            : base(Tags.DividendFloatingRateIndex) { }
        public DividendFloatingRateIndex(string val)
            : base(Tags.DividendFloatingRateIndex, val) { }

    }


    /// <summary>
    /// DividendFloatingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class DividendFloatingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42219;

        public DividendFloatingRateIndexCurvePeriod()
            : base(Tags.DividendFloatingRateIndexCurvePeriod) { }
        public DividendFloatingRateIndexCurvePeriod(int val)
            : base(Tags.DividendFloatingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// DividendFloatingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class DividendFloatingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42220;

        public DividendFloatingRateIndexCurveUnit()
            : base(Tags.DividendFloatingRateIndexCurveUnit) { }
        public DividendFloatingRateIndexCurveUnit(string val)
            : base(Tags.DividendFloatingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// DividendFloatingRateMultiplier Field
    /// </summary>/
    public sealed class DividendFloatingRateMultiplier : DecimalField
    {
        public const int TAG = 42221;

        public DividendFloatingRateMultiplier()
            : base(Tags.DividendFloatingRateMultiplier) { }
        public DividendFloatingRateMultiplier(Decimal val)
            : base(Tags.DividendFloatingRateMultiplier, val) { }

    }


    /// <summary>
    /// DividendFloatingRateSpread Field
    /// </summary>/
    public sealed class DividendFloatingRateSpread : DecimalField
    {
        public const int TAG = 42222;

        public DividendFloatingRateSpread()
            : base(Tags.DividendFloatingRateSpread) { }
        public DividendFloatingRateSpread(Decimal val)
            : base(Tags.DividendFloatingRateSpread, val) { }

    }


    /// <summary>
    /// DividendFloatingRateSpreadPositionType Field
    /// </summary>/
    public sealed class DividendFloatingRateSpreadPositionType : IntField
    {
        public const int TAG = 42223;

        public DividendFloatingRateSpreadPositionType()
            : base(Tags.DividendFloatingRateSpreadPositionType) { }
        public DividendFloatingRateSpreadPositionType(int val)
            : base(Tags.DividendFloatingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// DividendFloatingRateTreatment Field
    /// </summary>/
    public sealed class DividendFloatingRateTreatment : IntField
    {
        public const int TAG = 42224;

        public DividendFloatingRateTreatment()
            : base(Tags.DividendFloatingRateTreatment) { }
        public DividendFloatingRateTreatment(int val)
            : base(Tags.DividendFloatingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// DividendCapRate Field
    /// </summary>/
    public sealed class DividendCapRate : DecimalField
    {
        public const int TAG = 42225;

        public DividendCapRate()
            : base(Tags.DividendCapRate) { }
        public DividendCapRate(Decimal val)
            : base(Tags.DividendCapRate, val) { }

    }


    /// <summary>
    /// DividendCapRateBuySide Field
    /// </summary>/
    public sealed class DividendCapRateBuySide : IntField
    {
        public const int TAG = 42226;

        public DividendCapRateBuySide()
            : base(Tags.DividendCapRateBuySide) { }
        public DividendCapRateBuySide(int val)
            : base(Tags.DividendCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// DividendCapRateSellSide Field
    /// </summary>/
    public sealed class DividendCapRateSellSide : IntField
    {
        public const int TAG = 42227;

        public DividendCapRateSellSide()
            : base(Tags.DividendCapRateSellSide) { }
        public DividendCapRateSellSide(int val)
            : base(Tags.DividendCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// DividendFloorRate Field
    /// </summary>/
    public sealed class DividendFloorRate : DecimalField
    {
        public const int TAG = 42228;

        public DividendFloorRate()
            : base(Tags.DividendFloorRate) { }
        public DividendFloorRate(Decimal val)
            : base(Tags.DividendFloorRate, val) { }

    }


    /// <summary>
    /// DividendFloorRateBuySide Field
    /// </summary>/
    public sealed class DividendFloorRateBuySide : IntField
    {
        public const int TAG = 42229;

        public DividendFloorRateBuySide()
            : base(Tags.DividendFloorRateBuySide) { }
        public DividendFloorRateBuySide(int val)
            : base(Tags.DividendFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// DividendFloorRateSellSide Field
    /// </summary>/
    public sealed class DividendFloorRateSellSide : IntField
    {
        public const int TAG = 42230;

        public DividendFloorRateSellSide()
            : base(Tags.DividendFloorRateSellSide) { }
        public DividendFloorRateSellSide(int val)
            : base(Tags.DividendFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// DividendInitialRate Field
    /// </summary>/
    public sealed class DividendInitialRate : DecimalField
    {
        public const int TAG = 42231;

        public DividendInitialRate()
            : base(Tags.DividendInitialRate) { }
        public DividendInitialRate(Decimal val)
            : base(Tags.DividendInitialRate, val) { }

    }


    /// <summary>
    /// DividendFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class DividendFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42232;

        public DividendFinalRateRoundingDirection()
            : base(Tags.DividendFinalRateRoundingDirection) { }
        public DividendFinalRateRoundingDirection(char val)
            : base(Tags.DividendFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// DividendFinalRatePrecision Field
    /// </summary>/
    public sealed class DividendFinalRatePrecision : IntField
    {
        public const int TAG = 42233;

        public DividendFinalRatePrecision()
            : base(Tags.DividendFinalRatePrecision) { }
        public DividendFinalRatePrecision(int val)
            : base(Tags.DividendFinalRatePrecision, val) { }

    }


    /// <summary>
    /// DividendAveragingMethod Field
    /// </summary>/
    public sealed class DividendAveragingMethod : IntField
    {
        public const int TAG = 42234;

        public DividendAveragingMethod()
            : base(Tags.DividendAveragingMethod) { }
        public DividendAveragingMethod(int val)
            : base(Tags.DividendAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// DividendNegativeRateTreatment Field
    /// </summary>/
    public sealed class DividendNegativeRateTreatment : IntField
    {
        public const int TAG = 42235;

        public DividendNegativeRateTreatment()
            : base(Tags.DividendNegativeRateTreatment) { }
        public DividendNegativeRateTreatment(int val)
            : base(Tags.DividendNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// NoDividendAccrualPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoDividendAccrualPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 42236;

        public NoDividendAccrualPaymentDateBusinessCenters()
            : base(Tags.NoDividendAccrualPaymentDateBusinessCenters) { }
        public NoDividendAccrualPaymentDateBusinessCenters(int val)
            : base(Tags.NoDividendAccrualPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// DividendAccrualPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 42237;

        public DividendAccrualPaymentDateBusinessCenter()
            : base(Tags.DividendAccrualPaymentDateBusinessCenter) { }
        public DividendAccrualPaymentDateBusinessCenter(string val)
            : base(Tags.DividendAccrualPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// DividendAccrualPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42238;

        public DividendAccrualPaymentDateRelativeTo()
            : base(Tags.DividendAccrualPaymentDateRelativeTo) { }
        public DividendAccrualPaymentDateRelativeTo(int val)
            : base(Tags.DividendAccrualPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// DividendAccrualPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42239;

        public DividendAccrualPaymentDateOffsetPeriod()
            : base(Tags.DividendAccrualPaymentDateOffsetPeriod) { }
        public DividendAccrualPaymentDateOffsetPeriod(int val)
            : base(Tags.DividendAccrualPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// DividendAccrualPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42240;

        public DividendAccrualPaymentDateOffsetUnit()
            : base(Tags.DividendAccrualPaymentDateOffsetUnit) { }
        public DividendAccrualPaymentDateOffsetUnit(string val)
            : base(Tags.DividendAccrualPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// DividendAccrualPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42241;

        public DividendAccrualPaymentDateOffsetDayType()
            : base(Tags.DividendAccrualPaymentDateOffsetDayType) { }
        public DividendAccrualPaymentDateOffsetDayType(int val)
            : base(Tags.DividendAccrualPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// DividendAccrualPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42242;

        public DividendAccrualPaymentDateUnadjusted()
            : base(Tags.DividendAccrualPaymentDateUnadjusted) { }
        public DividendAccrualPaymentDateUnadjusted(string val)
            : base(Tags.DividendAccrualPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendAccrualPaymeentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class DividendAccrualPaymeentDateBusinessDayConvention : IntField
    {
        public const int TAG = 42243;

        public DividendAccrualPaymeentDateBusinessDayConvention()
            : base(Tags.DividendAccrualPaymeentDateBusinessDayConvention) { }
        public DividendAccrualPaymeentDateBusinessDayConvention(int val)
            : base(Tags.DividendAccrualPaymeentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// DividendAccrualPaymentDateAdjusted Field
    /// </summary>/
    public sealed class DividendAccrualPaymentDateAdjusted : StringField
    {
        public const int TAG = 42244;

        public DividendAccrualPaymentDateAdjusted()
            : base(Tags.DividendAccrualPaymentDateAdjusted) { }
        public DividendAccrualPaymentDateAdjusted(string val)
            : base(Tags.DividendAccrualPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// DividendReinvestmentIndicator Field
    /// </summary>/
    public sealed class DividendReinvestmentIndicator : BooleanField
    {
        public const int TAG = 42245;

        public DividendReinvestmentIndicator()
            : base(Tags.DividendReinvestmentIndicator) { }
        public DividendReinvestmentIndicator(Boolean val)
            : base(Tags.DividendReinvestmentIndicator, val) { }

    }


    /// <summary>
    /// DividendEntitlementEvent Field
    /// </summary>/
    public sealed class DividendEntitlementEvent : IntField
    {
        public const int TAG = 42246;

        public DividendEntitlementEvent()
            : base(Tags.DividendEntitlementEvent) { }
        public DividendEntitlementEvent(int val)
            : base(Tags.DividendEntitlementEvent, val) { }


        // Field Enumerations
        public const int EX_DATE = 0;
        public const int RECORD_DATE = 1;
    }


    /// <summary>
    /// DividendAmountType Field
    /// </summary>/
    public sealed class DividendAmountType : IntField
    {
        public const int TAG = 42247;

        public DividendAmountType()
            : base(Tags.DividendAmountType) { }
        public DividendAmountType(int val)
            : base(Tags.DividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// DividendUnderlierRefID Field
    /// </summary>/
    public sealed class DividendUnderlierRefID : StringField
    {
        public const int TAG = 42248;

        public DividendUnderlierRefID()
            : base(Tags.DividendUnderlierRefID) { }
        public DividendUnderlierRefID(string val)
            : base(Tags.DividendUnderlierRefID, val) { }

    }


    /// <summary>
    /// ExtraordinaryDividendPartySide Field
    /// </summary>/
    public sealed class ExtraordinaryDividendPartySide : IntField
    {
        public const int TAG = 42249;

        public ExtraordinaryDividendPartySide()
            : base(Tags.ExtraordinaryDividendPartySide) { }
        public ExtraordinaryDividendPartySide(int val)
            : base(Tags.ExtraordinaryDividendPartySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// ExtraordinaryDividendAmountType Field
    /// </summary>/
    public sealed class ExtraordinaryDividendAmountType : IntField
    {
        public const int TAG = 42250;

        public ExtraordinaryDividendAmountType()
            : base(Tags.ExtraordinaryDividendAmountType) { }
        public ExtraordinaryDividendAmountType(int val)
            : base(Tags.ExtraordinaryDividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// ExtraordinaryDividendCurrency Field
    /// </summary>/
    public sealed class ExtraordinaryDividendCurrency : StringField
    {
        public const int TAG = 42251;

        public ExtraordinaryDividendCurrency()
            : base(Tags.ExtraordinaryDividendCurrency) { }
        public ExtraordinaryDividendCurrency(string val)
            : base(Tags.ExtraordinaryDividendCurrency, val) { }

    }


    /// <summary>
    /// ExtraordinaryDividendDeterminationMethod Field
    /// </summary>/
    public sealed class ExtraordinaryDividendDeterminationMethod : StringField
    {
        public const int TAG = 42252;

        public ExtraordinaryDividendDeterminationMethod()
            : base(Tags.ExtraordinaryDividendDeterminationMethod) { }
        public ExtraordinaryDividendDeterminationMethod(string val)
            : base(Tags.ExtraordinaryDividendDeterminationMethod, val) { }

    }


    /// <summary>
    /// DividendAccrualFixedRate Field
    /// </summary>/
    public sealed class DividendAccrualFixedRate : DecimalField
    {
        public const int TAG = 42253;

        public DividendAccrualFixedRate()
            : base(Tags.DividendAccrualFixedRate) { }
        public DividendAccrualFixedRate(Decimal val)
            : base(Tags.DividendAccrualFixedRate, val) { }

    }


    /// <summary>
    /// DividendCompoundingMethod Field
    /// </summary>/
    public sealed class DividendCompoundingMethod : IntField
    {
        public const int TAG = 42254;

        public DividendCompoundingMethod()
            : base(Tags.DividendCompoundingMethod) { }
        public DividendCompoundingMethod(int val)
            : base(Tags.DividendCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// DividendNumOfIndexUnits Field
    /// </summary>/
    public sealed class DividendNumOfIndexUnits : IntField
    {
        public const int TAG = 42255;

        public DividendNumOfIndexUnits()
            : base(Tags.DividendNumOfIndexUnits) { }
        public DividendNumOfIndexUnits(int val)
            : base(Tags.DividendNumOfIndexUnits, val) { }

    }


    /// <summary>
    /// DividendCashPercentage Field
    /// </summary>/
    public sealed class DividendCashPercentage : DecimalField
    {
        public const int TAG = 42256;

        public DividendCashPercentage()
            : base(Tags.DividendCashPercentage) { }
        public DividendCashPercentage(Decimal val)
            : base(Tags.DividendCashPercentage, val) { }

    }


    /// <summary>
    /// DividendCashEquivalentPercentage Field
    /// </summary>/
    public sealed class DividendCashEquivalentPercentage : DecimalField
    {
        public const int TAG = 42257;

        public DividendCashEquivalentPercentage()
            : base(Tags.DividendCashEquivalentPercentage) { }
        public DividendCashEquivalentPercentage(Decimal val)
            : base(Tags.DividendCashEquivalentPercentage, val) { }

    }


    /// <summary>
    /// NonCashDividendTreatment Field
    /// </summary>/
    public sealed class NonCashDividendTreatment : IntField
    {
        public const int TAG = 42258;

        public NonCashDividendTreatment()
            : base(Tags.NonCashDividendTreatment) { }
        public NonCashDividendTreatment(int val)
            : base(Tags.NonCashDividendTreatment, val) { }


        // Field Enumerations
        public const int POTENTIAL_ADJUSTMENT_EVENT = 0;
        public const int CASH_EQUIVALENT = 1;
    }


    /// <summary>
    /// DividendComposition Field
    /// </summary>/
    public sealed class DividendComposition : IntField
    {
        public const int TAG = 42259;

        public DividendComposition()
            : base(Tags.DividendComposition) { }
        public DividendComposition(int val)
            : base(Tags.DividendComposition, val) { }


        // Field Enumerations
        public const int EQUITY_AMOUNT_RECEIVER_ELECTION = 0;
        public const int CALCULATION_AGENT_ELECTION = 1;
    }


    /// <summary>
    /// SpecialDividendsIndicator Field
    /// </summary>/
    public sealed class SpecialDividendsIndicator : BooleanField
    {
        public const int TAG = 42260;

        public SpecialDividendsIndicator()
            : base(Tags.SpecialDividendsIndicator) { }
        public SpecialDividendsIndicator(Boolean val)
            : base(Tags.SpecialDividendsIndicator, val) { }

    }


    /// <summary>
    /// MaterialDividendsIndicator Field
    /// </summary>/
    public sealed class MaterialDividendsIndicator : BooleanField
    {
        public const int TAG = 42261;

        public MaterialDividendsIndicator()
            : base(Tags.MaterialDividendsIndicator) { }
        public MaterialDividendsIndicator(Boolean val)
            : base(Tags.MaterialDividendsIndicator, val) { }

    }


    /// <summary>
    /// OptionsExchangeDividendsIndicator Field
    /// </summary>/
    public sealed class OptionsExchangeDividendsIndicator : BooleanField
    {
        public const int TAG = 42262;

        public OptionsExchangeDividendsIndicator()
            : base(Tags.OptionsExchangeDividendsIndicator) { }
        public OptionsExchangeDividendsIndicator(Boolean val)
            : base(Tags.OptionsExchangeDividendsIndicator, val) { }

    }


    /// <summary>
    /// AdditionalDividendsIndicator Field
    /// </summary>/
    public sealed class AdditionalDividendsIndicator : BooleanField
    {
        public const int TAG = 42263;

        public AdditionalDividendsIndicator()
            : base(Tags.AdditionalDividendsIndicator) { }
        public AdditionalDividendsIndicator(Boolean val)
            : base(Tags.AdditionalDividendsIndicator, val) { }

    }


    /// <summary>
    /// AllDividendsIndicator Field
    /// </summary>/
    public sealed class AllDividendsIndicator : BooleanField
    {
        public const int TAG = 42264;

        public AllDividendsIndicator()
            : base(Tags.AllDividendsIndicator) { }
        public AllDividendsIndicator(Boolean val)
            : base(Tags.AllDividendsIndicator, val) { }

    }


    /// <summary>
    /// DividendFXTriggerDateRelativeTo Field
    /// </summary>/
    public sealed class DividendFXTriggerDateRelativeTo : IntField
    {
        public const int TAG = 42265;

        public DividendFXTriggerDateRelativeTo()
            : base(Tags.DividendFXTriggerDateRelativeTo) { }
        public DividendFXTriggerDateRelativeTo(int val)
            : base(Tags.DividendFXTriggerDateRelativeTo, val) { }

    }


    /// <summary>
    /// DividendFXTriggerDateOffsetPeriod Field
    /// </summary>/
    public sealed class DividendFXTriggerDateOffsetPeriod : IntField
    {
        public const int TAG = 42266;

        public DividendFXTriggerDateOffsetPeriod()
            : base(Tags.DividendFXTriggerDateOffsetPeriod) { }
        public DividendFXTriggerDateOffsetPeriod(int val)
            : base(Tags.DividendFXTriggerDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// DividendFXTriggerDateOffsetUnit Field
    /// </summary>/
    public sealed class DividendFXTriggerDateOffsetUnit : StringField
    {
        public const int TAG = 42267;

        public DividendFXTriggerDateOffsetUnit()
            : base(Tags.DividendFXTriggerDateOffsetUnit) { }
        public DividendFXTriggerDateOffsetUnit(string val)
            : base(Tags.DividendFXTriggerDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// DividendFXTriggerDateOffsetDayType Field
    /// </summary>/
    public sealed class DividendFXTriggerDateOffsetDayType : IntField
    {
        public const int TAG = 42268;

        public DividendFXTriggerDateOffsetDayType()
            : base(Tags.DividendFXTriggerDateOffsetDayType) { }
        public DividendFXTriggerDateOffsetDayType(int val)
            : base(Tags.DividendFXTriggerDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// DividendFXTriggerDateUnadjusted Field
    /// </summary>/
    public sealed class DividendFXTriggerDateUnadjusted : StringField
    {
        public const int TAG = 42269;

        public DividendFXTriggerDateUnadjusted()
            : base(Tags.DividendFXTriggerDateUnadjusted) { }
        public DividendFXTriggerDateUnadjusted(string val)
            : base(Tags.DividendFXTriggerDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendFXTriggerDateBusinessDayConvention Field
    /// </summary>/
    public sealed class DividendFXTriggerDateBusinessDayConvention : IntField
    {
        public const int TAG = 42270;

        public DividendFXTriggerDateBusinessDayConvention()
            : base(Tags.DividendFXTriggerDateBusinessDayConvention) { }
        public DividendFXTriggerDateBusinessDayConvention(int val)
            : base(Tags.DividendFXTriggerDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// DividendFXTriggerDateAdjusted Field
    /// </summary>/
    public sealed class DividendFXTriggerDateAdjusted : StringField
    {
        public const int TAG = 42271;

        public DividendFXTriggerDateAdjusted()
            : base(Tags.DividendFXTriggerDateAdjusted) { }
        public DividendFXTriggerDateAdjusted(string val)
            : base(Tags.DividendFXTriggerDateAdjusted, val) { }

    }


    /// <summary>
    /// NoDividendFXTriggerDateBusinessCenters Field
    /// </summary>/
    public sealed class NoDividendFXTriggerDateBusinessCenters : IntField
    {
        public const int TAG = 42272;

        public NoDividendFXTriggerDateBusinessCenters()
            : base(Tags.NoDividendFXTriggerDateBusinessCenters) { }
        public NoDividendFXTriggerDateBusinessCenters(int val)
            : base(Tags.NoDividendFXTriggerDateBusinessCenters, val) { }

    }


    /// <summary>
    /// DividendFXTriggerDateBusinessCenter Field
    /// </summary>/
    public sealed class DividendFXTriggerDateBusinessCenter : StringField
    {
        public const int TAG = 42273;

        public DividendFXTriggerDateBusinessCenter()
            : base(Tags.DividendFXTriggerDateBusinessCenter) { }
        public DividendFXTriggerDateBusinessCenter(string val)
            : base(Tags.DividendFXTriggerDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoDividendPeriods Field
    /// </summary>/
    public sealed class NoDividendPeriods : IntField
    {
        public const int TAG = 42274;

        public NoDividendPeriods()
            : base(Tags.NoDividendPeriods) { }
        public NoDividendPeriods(int val)
            : base(Tags.NoDividendPeriods, val) { }

    }


    /// <summary>
    /// DividendPeriodSequence Field
    /// </summary>/
    public sealed class DividendPeriodSequence : IntField
    {
        public const int TAG = 42275;

        public DividendPeriodSequence()
            : base(Tags.DividendPeriodSequence) { }
        public DividendPeriodSequence(int val)
            : base(Tags.DividendPeriodSequence, val) { }

    }


    /// <summary>
    /// DividendPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class DividendPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 42276;

        public DividendPeriodStartDateUnadjusted()
            : base(Tags.DividendPeriodStartDateUnadjusted) { }
        public DividendPeriodStartDateUnadjusted(string val)
            : base(Tags.DividendPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class DividendPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 42277;

        public DividendPeriodEndDateUnadjusted()
            : base(Tags.DividendPeriodEndDateUnadjusted) { }
        public DividendPeriodEndDateUnadjusted(string val)
            : base(Tags.DividendPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodUnderlierRefID Field
    /// </summary>/
    public sealed class DividendPeriodUnderlierRefID : StringField
    {
        public const int TAG = 42278;

        public DividendPeriodUnderlierRefID()
            : base(Tags.DividendPeriodUnderlierRefID) { }
        public DividendPeriodUnderlierRefID(string val)
            : base(Tags.DividendPeriodUnderlierRefID, val) { }

    }


    /// <summary>
    /// DividendPeriodStrikePrice Field
    /// </summary>/
    public sealed class DividendPeriodStrikePrice : DecimalField
    {
        public const int TAG = 42279;

        public DividendPeriodStrikePrice()
            : base(Tags.DividendPeriodStrikePrice) { }
        public DividendPeriodStrikePrice(Decimal val)
            : base(Tags.DividendPeriodStrikePrice, val) { }

    }


    /// <summary>
    /// DividendPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class DividendPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 42280;

        public DividendPeriodBusinessDayConvention()
            : base(Tags.DividendPeriodBusinessDayConvention) { }
        public DividendPeriodBusinessDayConvention(int val)
            : base(Tags.DividendPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// DividendPeriodValuationDateUnadjusted Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateUnadjusted : StringField
    {
        public const int TAG = 42281;

        public DividendPeriodValuationDateUnadjusted()
            : base(Tags.DividendPeriodValuationDateUnadjusted) { }
        public DividendPeriodValuationDateUnadjusted(string val)
            : base(Tags.DividendPeriodValuationDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodValuationDateRelativeTo Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateRelativeTo : IntField
    {
        public const int TAG = 42282;

        public DividendPeriodValuationDateRelativeTo()
            : base(Tags.DividendPeriodValuationDateRelativeTo) { }
        public DividendPeriodValuationDateRelativeTo(int val)
            : base(Tags.DividendPeriodValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// DividendPeriodValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 42283;

        public DividendPeriodValuationDateOffsetPeriod()
            : base(Tags.DividendPeriodValuationDateOffsetPeriod) { }
        public DividendPeriodValuationDateOffsetPeriod(int val)
            : base(Tags.DividendPeriodValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// DividendPeriodValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateOffsetUnit : StringField
    {
        public const int TAG = 42284;

        public DividendPeriodValuationDateOffsetUnit()
            : base(Tags.DividendPeriodValuationDateOffsetUnit) { }
        public DividendPeriodValuationDateOffsetUnit(string val)
            : base(Tags.DividendPeriodValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// DividendPeriodValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateOffsetDayType : IntField
    {
        public const int TAG = 42285;

        public DividendPeriodValuationDateOffsetDayType()
            : base(Tags.DividendPeriodValuationDateOffsetDayType) { }
        public DividendPeriodValuationDateOffsetDayType(int val)
            : base(Tags.DividendPeriodValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// DividendPeriodValuationDateAdjusted Field
    /// </summary>/
    public sealed class DividendPeriodValuationDateAdjusted : StringField
    {
        public const int TAG = 42286;

        public DividendPeriodValuationDateAdjusted()
            : base(Tags.DividendPeriodValuationDateAdjusted) { }
        public DividendPeriodValuationDateAdjusted(string val)
            : base(Tags.DividendPeriodValuationDateAdjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42287;

        public DividendPeriodPaymentDateUnadjusted()
            : base(Tags.DividendPeriodPaymentDateUnadjusted) { }
        public DividendPeriodPaymentDateUnadjusted(string val)
            : base(Tags.DividendPeriodPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42288;

        public DividendPeriodPaymentDateRelativeTo()
            : base(Tags.DividendPeriodPaymentDateRelativeTo) { }
        public DividendPeriodPaymentDateRelativeTo(int val)
            : base(Tags.DividendPeriodPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// DividendPeriodPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42289;

        public DividendPeriodPaymentDateOffsetPeriod()
            : base(Tags.DividendPeriodPaymentDateOffsetPeriod) { }
        public DividendPeriodPaymentDateOffsetPeriod(int val)
            : base(Tags.DividendPeriodPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// DividendPeriodPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42290;

        public DividendPeriodPaymentDateOffsetUnit()
            : base(Tags.DividendPeriodPaymentDateOffsetUnit) { }
        public DividendPeriodPaymentDateOffsetUnit(string val)
            : base(Tags.DividendPeriodPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// DividendPeriodPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42291;

        public DividendPeriodPaymentDateOffsetDayType()
            : base(Tags.DividendPeriodPaymentDateOffsetDayType) { }
        public DividendPeriodPaymentDateOffsetDayType(int val)
            : base(Tags.DividendPeriodPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// DividendPeriodPaymentDateAdjusted Field
    /// </summary>/
    public sealed class DividendPeriodPaymentDateAdjusted : StringField
    {
        public const int TAG = 42292;

        public DividendPeriodPaymentDateAdjusted()
            : base(Tags.DividendPeriodPaymentDateAdjusted) { }
        public DividendPeriodPaymentDateAdjusted(string val)
            : base(Tags.DividendPeriodPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// DividendPeriodXID Field
    /// </summary>/
    public sealed class DividendPeriodXID : StringField
    {
        public const int TAG = 42293;

        public DividendPeriodXID()
            : base(Tags.DividendPeriodXID) { }
        public DividendPeriodXID(string val)
            : base(Tags.DividendPeriodXID, val) { }

    }


    /// <summary>
    /// NoDividendPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoDividendPeriodBusinessCenters : IntField
    {
        public const int TAG = 42294;

        public NoDividendPeriodBusinessCenters()
            : base(Tags.NoDividendPeriodBusinessCenters) { }
        public NoDividendPeriodBusinessCenters(int val)
            : base(Tags.NoDividendPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// DividendPeriodBusinessCenter Field
    /// </summary>/
    public sealed class DividendPeriodBusinessCenter : StringField
    {
        public const int TAG = 42295;

        public DividendPeriodBusinessCenter()
            : base(Tags.DividendPeriodBusinessCenter) { }
        public DividendPeriodBusinessCenter(string val)
            : base(Tags.DividendPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// NoExtraordinaryEvents Field
    /// </summary>/
    public sealed class NoExtraordinaryEvents : IntField
    {
        public const int TAG = 42296;

        public NoExtraordinaryEvents()
            : base(Tags.NoExtraordinaryEvents) { }
        public NoExtraordinaryEvents(int val)
            : base(Tags.NoExtraordinaryEvents, val) { }

    }


    /// <summary>
    /// ExtraordinaryEventType Field
    /// </summary>/
    public sealed class ExtraordinaryEventType : StringField
    {
        public const int TAG = 42297;

        public ExtraordinaryEventType()
            : base(Tags.ExtraordinaryEventType) { }
        public ExtraordinaryEventType(string val)
            : base(Tags.ExtraordinaryEventType, val) { }

    }


    /// <summary>
    /// ExtraordinaryEventValue Field
    /// </summary>/
    public sealed class ExtraordinaryEventValue : StringField
    {
        public const int TAG = 42298;

        public ExtraordinaryEventValue()
            : base(Tags.ExtraordinaryEventValue) { }
        public ExtraordinaryEventValue(string val)
            : base(Tags.ExtraordinaryEventValue, val) { }

    }


    /// <summary>
    /// LegCashSettlDateUnadjusted Field
    /// </summary>/
    public sealed class LegCashSettlDateUnadjusted : StringField
    {
        public const int TAG = 42299;

        public LegCashSettlDateUnadjusted()
            : base(Tags.LegCashSettlDateUnadjusted) { }
        public LegCashSettlDateUnadjusted(string val)
            : base(Tags.LegCashSettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegCashSettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegCashSettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 42300;

        public LegCashSettlDateBusinessDayConvention()
            : base(Tags.LegCashSettlDateBusinessDayConvention) { }
        public LegCashSettlDateBusinessDayConvention(int val)
            : base(Tags.LegCashSettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegCashSettlDateRelativeTo Field
    /// </summary>/
    public sealed class LegCashSettlDateRelativeTo : IntField
    {
        public const int TAG = 42301;

        public LegCashSettlDateRelativeTo()
            : base(Tags.LegCashSettlDateRelativeTo) { }
        public LegCashSettlDateRelativeTo(int val)
            : base(Tags.LegCashSettlDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegCashSettlDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegCashSettlDateOffsetPeriod : IntField
    {
        public const int TAG = 42302;

        public LegCashSettlDateOffsetPeriod()
            : base(Tags.LegCashSettlDateOffsetPeriod) { }
        public LegCashSettlDateOffsetPeriod(int val)
            : base(Tags.LegCashSettlDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegCashSettlDateOffsetUnit Field
    /// </summary>/
    public sealed class LegCashSettlDateOffsetUnit : StringField
    {
        public const int TAG = 42303;

        public LegCashSettlDateOffsetUnit()
            : base(Tags.LegCashSettlDateOffsetUnit) { }
        public LegCashSettlDateOffsetUnit(string val)
            : base(Tags.LegCashSettlDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegCashSettlDateOffsetDayType Field
    /// </summary>/
    public sealed class LegCashSettlDateOffsetDayType : IntField
    {
        public const int TAG = 42304;

        public LegCashSettlDateOffsetDayType()
            : base(Tags.LegCashSettlDateOffsetDayType) { }
        public LegCashSettlDateOffsetDayType(int val)
            : base(Tags.LegCashSettlDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegCashSettlDateAdjusted Field
    /// </summary>/
    public sealed class LegCashSettlDateAdjusted : StringField
    {
        public const int TAG = 42305;

        public LegCashSettlDateAdjusted()
            : base(Tags.LegCashSettlDateAdjusted) { }
        public LegCashSettlDateAdjusted(string val)
            : base(Tags.LegCashSettlDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegCashSettlDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegCashSettlDateBusinessCenters : IntField
    {
        public const int TAG = 42306;

        public NoLegCashSettlDateBusinessCenters()
            : base(Tags.NoLegCashSettlDateBusinessCenters) { }
        public NoLegCashSettlDateBusinessCenters(int val)
            : base(Tags.NoLegCashSettlDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegCashSettlDateBusinessCenter Field
    /// </summary>/
    public sealed class LegCashSettlDateBusinessCenter : StringField
    {
        public const int TAG = 42307;

        public LegCashSettlDateBusinessCenter()
            : base(Tags.LegCashSettlDateBusinessCenter) { }
        public LegCashSettlDateBusinessCenter(string val)
            : base(Tags.LegCashSettlDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegCashSettlPriceSource Field
    /// </summary>/
    public sealed class LegCashSettlPriceSource : StringField
    {
        public const int TAG = 42308;

        public LegCashSettlPriceSource()
            : base(Tags.LegCashSettlPriceSource) { }
        public LegCashSettlPriceSource(string val)
            : base(Tags.LegCashSettlPriceSource, val) { }

    }


    /// <summary>
    /// LegCashSettlPriceDefault Field
    /// </summary>/
    public sealed class LegCashSettlPriceDefault : IntField
    {
        public const int TAG = 42309;

        public LegCashSettlPriceDefault()
            : base(Tags.LegCashSettlPriceDefault) { }
        public LegCashSettlPriceDefault(int val)
            : base(Tags.LegCashSettlPriceDefault, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE = 1;
    }


    /// <summary>
    /// NoLegDividendAccrualPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegDividendAccrualPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 42310;

        public NoLegDividendAccrualPaymentDateBusinessCenters()
            : base(Tags.NoLegDividendAccrualPaymentDateBusinessCenters) { }
        public NoLegDividendAccrualPaymentDateBusinessCenters(int val)
            : base(Tags.NoLegDividendAccrualPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegDividendAccrualPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 42311;

        public LegDividendAccrualPaymentDateBusinessCenter()
            : base(Tags.LegDividendAccrualPaymentDateBusinessCenter) { }
        public LegDividendAccrualPaymentDateBusinessCenter(string val)
            : base(Tags.LegDividendAccrualPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegDividendFloatingRateIndex Field
    /// </summary>/
    public sealed class LegDividendFloatingRateIndex : StringField
    {
        public const int TAG = 42312;

        public LegDividendFloatingRateIndex()
            : base(Tags.LegDividendFloatingRateIndex) { }
        public LegDividendFloatingRateIndex(string val)
            : base(Tags.LegDividendFloatingRateIndex, val) { }

    }


    /// <summary>
    /// LegDividendFloatingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class LegDividendFloatingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42313;

        public LegDividendFloatingRateIndexCurvePeriod()
            : base(Tags.LegDividendFloatingRateIndexCurvePeriod) { }
        public LegDividendFloatingRateIndexCurvePeriod(int val)
            : base(Tags.LegDividendFloatingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// LegDividendFloatingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class LegDividendFloatingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42314;

        public LegDividendFloatingRateIndexCurveUnit()
            : base(Tags.LegDividendFloatingRateIndexCurveUnit) { }
        public LegDividendFloatingRateIndexCurveUnit(string val)
            : base(Tags.LegDividendFloatingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegDividendFloatingRateMultiplier Field
    /// </summary>/
    public sealed class LegDividendFloatingRateMultiplier : DecimalField
    {
        public const int TAG = 42315;

        public LegDividendFloatingRateMultiplier()
            : base(Tags.LegDividendFloatingRateMultiplier) { }
        public LegDividendFloatingRateMultiplier(Decimal val)
            : base(Tags.LegDividendFloatingRateMultiplier, val) { }

    }


    /// <summary>
    /// LegDividendFloatingRateSpread Field
    /// </summary>/
    public sealed class LegDividendFloatingRateSpread : DecimalField
    {
        public const int TAG = 42316;

        public LegDividendFloatingRateSpread()
            : base(Tags.LegDividendFloatingRateSpread) { }
        public LegDividendFloatingRateSpread(Decimal val)
            : base(Tags.LegDividendFloatingRateSpread, val) { }

    }


    /// <summary>
    /// LegDividendFloatingRateSpreadPositionType Field
    /// </summary>/
    public sealed class LegDividendFloatingRateSpreadPositionType : IntField
    {
        public const int TAG = 42317;

        public LegDividendFloatingRateSpreadPositionType()
            : base(Tags.LegDividendFloatingRateSpreadPositionType) { }
        public LegDividendFloatingRateSpreadPositionType(int val)
            : base(Tags.LegDividendFloatingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegDividendFloatingRateTreatment Field
    /// </summary>/
    public sealed class LegDividendFloatingRateTreatment : IntField
    {
        public const int TAG = 42318;

        public LegDividendFloatingRateTreatment()
            : base(Tags.LegDividendFloatingRateTreatment) { }
        public LegDividendFloatingRateTreatment(int val)
            : base(Tags.LegDividendFloatingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegDividendCapRate Field
    /// </summary>/
    public sealed class LegDividendCapRate : DecimalField
    {
        public const int TAG = 42319;

        public LegDividendCapRate()
            : base(Tags.LegDividendCapRate) { }
        public LegDividendCapRate(Decimal val)
            : base(Tags.LegDividendCapRate, val) { }

    }


    /// <summary>
    /// LegDividendCapRateBuySide Field
    /// </summary>/
    public sealed class LegDividendCapRateBuySide : IntField
    {
        public const int TAG = 42320;

        public LegDividendCapRateBuySide()
            : base(Tags.LegDividendCapRateBuySide) { }
        public LegDividendCapRateBuySide(int val)
            : base(Tags.LegDividendCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegDividendCapRateSellSide Field
    /// </summary>/
    public sealed class LegDividendCapRateSellSide : IntField
    {
        public const int TAG = 42321;

        public LegDividendCapRateSellSide()
            : base(Tags.LegDividendCapRateSellSide) { }
        public LegDividendCapRateSellSide(int val)
            : base(Tags.LegDividendCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegDividendFloorRate Field
    /// </summary>/
    public sealed class LegDividendFloorRate : DecimalField
    {
        public const int TAG = 42322;

        public LegDividendFloorRate()
            : base(Tags.LegDividendFloorRate) { }
        public LegDividendFloorRate(Decimal val)
            : base(Tags.LegDividendFloorRate, val) { }

    }


    /// <summary>
    /// LegDividendFloorRateBuySide Field
    /// </summary>/
    public sealed class LegDividendFloorRateBuySide : IntField
    {
        public const int TAG = 42323;

        public LegDividendFloorRateBuySide()
            : base(Tags.LegDividendFloorRateBuySide) { }
        public LegDividendFloorRateBuySide(int val)
            : base(Tags.LegDividendFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegDividendFloorRateSellSide Field
    /// </summary>/
    public sealed class LegDividendFloorRateSellSide : IntField
    {
        public const int TAG = 42324;

        public LegDividendFloorRateSellSide()
            : base(Tags.LegDividendFloorRateSellSide) { }
        public LegDividendFloorRateSellSide(int val)
            : base(Tags.LegDividendFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegDividendInitialRate Field
    /// </summary>/
    public sealed class LegDividendInitialRate : DecimalField
    {
        public const int TAG = 42325;

        public LegDividendInitialRate()
            : base(Tags.LegDividendInitialRate) { }
        public LegDividendInitialRate(Decimal val)
            : base(Tags.LegDividendInitialRate, val) { }

    }


    /// <summary>
    /// LegDividendFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class LegDividendFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42326;

        public LegDividendFinalRateRoundingDirection()
            : base(Tags.LegDividendFinalRateRoundingDirection) { }
        public LegDividendFinalRateRoundingDirection(char val)
            : base(Tags.LegDividendFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// LegDividendFinalRatePrecision Field
    /// </summary>/
    public sealed class LegDividendFinalRatePrecision : IntField
    {
        public const int TAG = 42327;

        public LegDividendFinalRatePrecision()
            : base(Tags.LegDividendFinalRatePrecision) { }
        public LegDividendFinalRatePrecision(int val)
            : base(Tags.LegDividendFinalRatePrecision, val) { }

    }


    /// <summary>
    /// LegDividendAveragingMethod Field
    /// </summary>/
    public sealed class LegDividendAveragingMethod : IntField
    {
        public const int TAG = 42328;

        public LegDividendAveragingMethod()
            : base(Tags.LegDividendAveragingMethod) { }
        public LegDividendAveragingMethod(int val)
            : base(Tags.LegDividendAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// LegDividendNegativeRateTreatment Field
    /// </summary>/
    public sealed class LegDividendNegativeRateTreatment : IntField
    {
        public const int TAG = 42329;

        public LegDividendNegativeRateTreatment()
            : base(Tags.LegDividendNegativeRateTreatment) { }
        public LegDividendNegativeRateTreatment(int val)
            : base(Tags.LegDividendNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// LegDividendAccrualPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42330;

        public LegDividendAccrualPaymentDateRelativeTo()
            : base(Tags.LegDividendAccrualPaymentDateRelativeTo) { }
        public LegDividendAccrualPaymentDateRelativeTo(int val)
            : base(Tags.LegDividendAccrualPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegDividendAccrualPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42331;

        public LegDividendAccrualPaymentDateOffsetPeriod()
            : base(Tags.LegDividendAccrualPaymentDateOffsetPeriod) { }
        public LegDividendAccrualPaymentDateOffsetPeriod(int val)
            : base(Tags.LegDividendAccrualPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegDividendAccrualPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42332;

        public LegDividendAccrualPaymentDateOffsetUnit()
            : base(Tags.LegDividendAccrualPaymentDateOffsetUnit) { }
        public LegDividendAccrualPaymentDateOffsetUnit(string val)
            : base(Tags.LegDividendAccrualPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegDividendAccrualPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42333;

        public LegDividendAccrualPaymentDateOffsetDayType()
            : base(Tags.LegDividendAccrualPaymentDateOffsetDayType) { }
        public LegDividendAccrualPaymentDateOffsetDayType(int val)
            : base(Tags.LegDividendAccrualPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegDividendAccrualPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42334;

        public LegDividendAccrualPaymentDateUnadjusted()
            : base(Tags.LegDividendAccrualPaymentDateUnadjusted) { }
        public LegDividendAccrualPaymentDateUnadjusted(string val)
            : base(Tags.LegDividendAccrualPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendAccrualPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 42335;

        public LegDividendAccrualPaymentDateBusinessDayConvention()
            : base(Tags.LegDividendAccrualPaymentDateBusinessDayConvention) { }
        public LegDividendAccrualPaymentDateBusinessDayConvention(int val)
            : base(Tags.LegDividendAccrualPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegDividendAccrualPaymentDateAdjusted Field
    /// </summary>/
    public sealed class LegDividendAccrualPaymentDateAdjusted : StringField
    {
        public const int TAG = 42336;

        public LegDividendAccrualPaymentDateAdjusted()
            : base(Tags.LegDividendAccrualPaymentDateAdjusted) { }
        public LegDividendAccrualPaymentDateAdjusted(string val)
            : base(Tags.LegDividendAccrualPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// LegDividendReinvestmentIndicator Field
    /// </summary>/
    public sealed class LegDividendReinvestmentIndicator : BooleanField
    {
        public const int TAG = 42337;

        public LegDividendReinvestmentIndicator()
            : base(Tags.LegDividendReinvestmentIndicator) { }
        public LegDividendReinvestmentIndicator(Boolean val)
            : base(Tags.LegDividendReinvestmentIndicator, val) { }

    }


    /// <summary>
    /// LegDividendEntitlementEvent Field
    /// </summary>/
    public sealed class LegDividendEntitlementEvent : IntField
    {
        public const int TAG = 42338;

        public LegDividendEntitlementEvent()
            : base(Tags.LegDividendEntitlementEvent) { }
        public LegDividendEntitlementEvent(int val)
            : base(Tags.LegDividendEntitlementEvent, val) { }


        // Field Enumerations
        public const int EX_DATE = 0;
        public const int RECORD_DATE = 1;
    }


    /// <summary>
    /// LegDividendAmountType Field
    /// </summary>/
    public sealed class LegDividendAmountType : IntField
    {
        public const int TAG = 42339;

        public LegDividendAmountType()
            : base(Tags.LegDividendAmountType) { }
        public LegDividendAmountType(int val)
            : base(Tags.LegDividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// LegDividendUnderlierRefID Field
    /// </summary>/
    public sealed class LegDividendUnderlierRefID : StringField
    {
        public const int TAG = 42340;

        public LegDividendUnderlierRefID()
            : base(Tags.LegDividendUnderlierRefID) { }
        public LegDividendUnderlierRefID(string val)
            : base(Tags.LegDividendUnderlierRefID, val) { }

    }


    /// <summary>
    /// LegExtraordinaryDividendPartySide Field
    /// </summary>/
    public sealed class LegExtraordinaryDividendPartySide : IntField
    {
        public const int TAG = 42341;

        public LegExtraordinaryDividendPartySide()
            : base(Tags.LegExtraordinaryDividendPartySide) { }
        public LegExtraordinaryDividendPartySide(int val)
            : base(Tags.LegExtraordinaryDividendPartySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegExtraordinaryDividendAmountType Field
    /// </summary>/
    public sealed class LegExtraordinaryDividendAmountType : IntField
    {
        public const int TAG = 42342;

        public LegExtraordinaryDividendAmountType()
            : base(Tags.LegExtraordinaryDividendAmountType) { }
        public LegExtraordinaryDividendAmountType(int val)
            : base(Tags.LegExtraordinaryDividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// LegExtraordinaryDividendCurrency Field
    /// </summary>/
    public sealed class LegExtraordinaryDividendCurrency : StringField
    {
        public const int TAG = 42343;

        public LegExtraordinaryDividendCurrency()
            : base(Tags.LegExtraordinaryDividendCurrency) { }
        public LegExtraordinaryDividendCurrency(string val)
            : base(Tags.LegExtraordinaryDividendCurrency, val) { }

    }


    /// <summary>
    /// LegExtraordinaryDividendDeterminationMethod Field
    /// </summary>/
    public sealed class LegExtraordinaryDividendDeterminationMethod : StringField
    {
        public const int TAG = 42344;

        public LegExtraordinaryDividendDeterminationMethod()
            : base(Tags.LegExtraordinaryDividendDeterminationMethod) { }
        public LegExtraordinaryDividendDeterminationMethod(string val)
            : base(Tags.LegExtraordinaryDividendDeterminationMethod, val) { }

    }


    /// <summary>
    /// LegDividendAccrualFixedRate Field
    /// </summary>/
    public sealed class LegDividendAccrualFixedRate : DecimalField
    {
        public const int TAG = 42345;

        public LegDividendAccrualFixedRate()
            : base(Tags.LegDividendAccrualFixedRate) { }
        public LegDividendAccrualFixedRate(Decimal val)
            : base(Tags.LegDividendAccrualFixedRate, val) { }

    }


    /// <summary>
    /// LegDividendCompoundingMethod Field
    /// </summary>/
    public sealed class LegDividendCompoundingMethod : IntField
    {
        public const int TAG = 42346;

        public LegDividendCompoundingMethod()
            : base(Tags.LegDividendCompoundingMethod) { }
        public LegDividendCompoundingMethod(int val)
            : base(Tags.LegDividendCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// LegDividendNumOfIndexUnits Field
    /// </summary>/
    public sealed class LegDividendNumOfIndexUnits : IntField
    {
        public const int TAG = 42347;

        public LegDividendNumOfIndexUnits()
            : base(Tags.LegDividendNumOfIndexUnits) { }
        public LegDividendNumOfIndexUnits(int val)
            : base(Tags.LegDividendNumOfIndexUnits, val) { }

    }


    /// <summary>
    /// LegDividendCashPercentage Field
    /// </summary>/
    public sealed class LegDividendCashPercentage : DecimalField
    {
        public const int TAG = 42348;

        public LegDividendCashPercentage()
            : base(Tags.LegDividendCashPercentage) { }
        public LegDividendCashPercentage(Decimal val)
            : base(Tags.LegDividendCashPercentage, val) { }

    }


    /// <summary>
    /// LegDividendCashEquivalentPercentage Field
    /// </summary>/
    public sealed class LegDividendCashEquivalentPercentage : DecimalField
    {
        public const int TAG = 42349;

        public LegDividendCashEquivalentPercentage()
            : base(Tags.LegDividendCashEquivalentPercentage) { }
        public LegDividendCashEquivalentPercentage(Decimal val)
            : base(Tags.LegDividendCashEquivalentPercentage, val) { }

    }


    /// <summary>
    /// LegNonCashDividendTreatment Field
    /// </summary>/
    public sealed class LegNonCashDividendTreatment : IntField
    {
        public const int TAG = 42350;

        public LegNonCashDividendTreatment()
            : base(Tags.LegNonCashDividendTreatment) { }
        public LegNonCashDividendTreatment(int val)
            : base(Tags.LegNonCashDividendTreatment, val) { }


        // Field Enumerations
        public const int POTENTIAL_ADJUSTMENT_EVENT = 0;
        public const int CASH_EQUIVALENT = 1;
    }


    /// <summary>
    /// LegDividendComposition Field
    /// </summary>/
    public sealed class LegDividendComposition : IntField
    {
        public const int TAG = 42351;

        public LegDividendComposition()
            : base(Tags.LegDividendComposition) { }
        public LegDividendComposition(int val)
            : base(Tags.LegDividendComposition, val) { }


        // Field Enumerations
        public const int EQUITY_AMOUNT_RECEIVER_ELECTION = 0;
        public const int CALCULATION_AGENT_ELECTION = 1;
    }


    /// <summary>
    /// LegSpecialDividendsIndicator Field
    /// </summary>/
    public sealed class LegSpecialDividendsIndicator : BooleanField
    {
        public const int TAG = 42352;

        public LegSpecialDividendsIndicator()
            : base(Tags.LegSpecialDividendsIndicator) { }
        public LegSpecialDividendsIndicator(Boolean val)
            : base(Tags.LegSpecialDividendsIndicator, val) { }

    }


    /// <summary>
    /// LegMaterialDividendsIndicator Field
    /// </summary>/
    public sealed class LegMaterialDividendsIndicator : BooleanField
    {
        public const int TAG = 42353;

        public LegMaterialDividendsIndicator()
            : base(Tags.LegMaterialDividendsIndicator) { }
        public LegMaterialDividendsIndicator(Boolean val)
            : base(Tags.LegMaterialDividendsIndicator, val) { }

    }


    /// <summary>
    /// LegOptionsExchangeDividendsIndicator Field
    /// </summary>/
    public sealed class LegOptionsExchangeDividendsIndicator : BooleanField
    {
        public const int TAG = 42354;

        public LegOptionsExchangeDividendsIndicator()
            : base(Tags.LegOptionsExchangeDividendsIndicator) { }
        public LegOptionsExchangeDividendsIndicator(Boolean val)
            : base(Tags.LegOptionsExchangeDividendsIndicator, val) { }

    }


    /// <summary>
    /// LegAdditionalDividendsIndicator Field
    /// </summary>/
    public sealed class LegAdditionalDividendsIndicator : BooleanField
    {
        public const int TAG = 42355;

        public LegAdditionalDividendsIndicator()
            : base(Tags.LegAdditionalDividendsIndicator) { }
        public LegAdditionalDividendsIndicator(Boolean val)
            : base(Tags.LegAdditionalDividendsIndicator, val) { }

    }


    /// <summary>
    /// LegAllDividendsIndicator Field
    /// </summary>/
    public sealed class LegAllDividendsIndicator : BooleanField
    {
        public const int TAG = 42356;

        public LegAllDividendsIndicator()
            : base(Tags.LegAllDividendsIndicator) { }
        public LegAllDividendsIndicator(Boolean val)
            : base(Tags.LegAllDividendsIndicator, val) { }

    }


    /// <summary>
    /// LegDividendFXTriggerDateRelativeTo Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateRelativeTo : IntField
    {
        public const int TAG = 42357;

        public LegDividendFXTriggerDateRelativeTo()
            : base(Tags.LegDividendFXTriggerDateRelativeTo) { }
        public LegDividendFXTriggerDateRelativeTo(int val)
            : base(Tags.LegDividendFXTriggerDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegDividendFXTriggerDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateOffsetPeriod : IntField
    {
        public const int TAG = 42358;

        public LegDividendFXTriggerDateOffsetPeriod()
            : base(Tags.LegDividendFXTriggerDateOffsetPeriod) { }
        public LegDividendFXTriggerDateOffsetPeriod(int val)
            : base(Tags.LegDividendFXTriggerDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegDividendFXTriggerDateOffsetUnit Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateOffsetUnit : StringField
    {
        public const int TAG = 42359;

        public LegDividendFXTriggerDateOffsetUnit()
            : base(Tags.LegDividendFXTriggerDateOffsetUnit) { }
        public LegDividendFXTriggerDateOffsetUnit(string val)
            : base(Tags.LegDividendFXTriggerDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegDividendFXTriggerDateOffsetDayType Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateOffsetDayType : IntField
    {
        public const int TAG = 42360;

        public LegDividendFXTriggerDateOffsetDayType()
            : base(Tags.LegDividendFXTriggerDateOffsetDayType) { }
        public LegDividendFXTriggerDateOffsetDayType(int val)
            : base(Tags.LegDividendFXTriggerDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegDividendFXTriggerDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateUnadjusted : StringField
    {
        public const int TAG = 42361;

        public LegDividendFXTriggerDateUnadjusted()
            : base(Tags.LegDividendFXTriggerDateUnadjusted) { }
        public LegDividendFXTriggerDateUnadjusted(string val)
            : base(Tags.LegDividendFXTriggerDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendFXTriggerDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateBusinessDayConvention : IntField
    {
        public const int TAG = 42362;

        public LegDividendFXTriggerDateBusinessDayConvention()
            : base(Tags.LegDividendFXTriggerDateBusinessDayConvention) { }
        public LegDividendFXTriggerDateBusinessDayConvention(int val)
            : base(Tags.LegDividendFXTriggerDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegDividendFXTriggerDateAdjusted Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateAdjusted : StringField
    {
        public const int TAG = 42363;

        public LegDividendFXTriggerDateAdjusted()
            : base(Tags.LegDividendFXTriggerDateAdjusted) { }
        public LegDividendFXTriggerDateAdjusted(string val)
            : base(Tags.LegDividendFXTriggerDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegDividendFXTriggerDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegDividendFXTriggerDateBusinessCenters : IntField
    {
        public const int TAG = 42364;

        public NoLegDividendFXTriggerDateBusinessCenters()
            : base(Tags.NoLegDividendFXTriggerDateBusinessCenters) { }
        public NoLegDividendFXTriggerDateBusinessCenters(int val)
            : base(Tags.NoLegDividendFXTriggerDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegDividendFXTriggerDateBusinessCenter Field
    /// </summary>/
    public sealed class LegDividendFXTriggerDateBusinessCenter : StringField
    {
        public const int TAG = 42365;

        public LegDividendFXTriggerDateBusinessCenter()
            : base(Tags.LegDividendFXTriggerDateBusinessCenter) { }
        public LegDividendFXTriggerDateBusinessCenter(string val)
            : base(Tags.LegDividendFXTriggerDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegDividendPeriods Field
    /// </summary>/
    public sealed class NoLegDividendPeriods : IntField
    {
        public const int TAG = 42366;

        public NoLegDividendPeriods()
            : base(Tags.NoLegDividendPeriods) { }
        public NoLegDividendPeriods(int val)
            : base(Tags.NoLegDividendPeriods, val) { }

    }


    /// <summary>
    /// LegDividendPeriodSequence Field
    /// </summary>/
    public sealed class LegDividendPeriodSequence : IntField
    {
        public const int TAG = 42367;

        public LegDividendPeriodSequence()
            : base(Tags.LegDividendPeriodSequence) { }
        public LegDividendPeriodSequence(int val)
            : base(Tags.LegDividendPeriodSequence, val) { }

    }


    /// <summary>
    /// LegDividendPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 42368;

        public LegDividendPeriodStartDateUnadjusted()
            : base(Tags.LegDividendPeriodStartDateUnadjusted) { }
        public LegDividendPeriodStartDateUnadjusted(string val)
            : base(Tags.LegDividendPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 42369;

        public LegDividendPeriodEndDateUnadjusted()
            : base(Tags.LegDividendPeriodEndDateUnadjusted) { }
        public LegDividendPeriodEndDateUnadjusted(string val)
            : base(Tags.LegDividendPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodUnderlierRefID Field
    /// </summary>/
    public sealed class LegDividendPeriodUnderlierRefID : StringField
    {
        public const int TAG = 42370;

        public LegDividendPeriodUnderlierRefID()
            : base(Tags.LegDividendPeriodUnderlierRefID) { }
        public LegDividendPeriodUnderlierRefID(string val)
            : base(Tags.LegDividendPeriodUnderlierRefID, val) { }

    }


    /// <summary>
    /// LegDividendPeriodStrikePrice Field
    /// </summary>/
    public sealed class LegDividendPeriodStrikePrice : DecimalField
    {
        public const int TAG = 42371;

        public LegDividendPeriodStrikePrice()
            : base(Tags.LegDividendPeriodStrikePrice) { }
        public LegDividendPeriodStrikePrice(Decimal val)
            : base(Tags.LegDividendPeriodStrikePrice, val) { }

    }


    /// <summary>
    /// LegDividendPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class LegDividendPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 42372;

        public LegDividendPeriodBusinessDayConvention()
            : base(Tags.LegDividendPeriodBusinessDayConvention) { }
        public LegDividendPeriodBusinessDayConvention(int val)
            : base(Tags.LegDividendPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegDividendPeriodValuationDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateUnadjusted : StringField
    {
        public const int TAG = 42373;

        public LegDividendPeriodValuationDateUnadjusted()
            : base(Tags.LegDividendPeriodValuationDateUnadjusted) { }
        public LegDividendPeriodValuationDateUnadjusted(string val)
            : base(Tags.LegDividendPeriodValuationDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodValuationDateRelativeTo Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateRelativeTo : IntField
    {
        public const int TAG = 42374;

        public LegDividendPeriodValuationDateRelativeTo()
            : base(Tags.LegDividendPeriodValuationDateRelativeTo) { }
        public LegDividendPeriodValuationDateRelativeTo(int val)
            : base(Tags.LegDividendPeriodValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegDividendPeriodValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 42375;

        public LegDividendPeriodValuationDateOffsetPeriod()
            : base(Tags.LegDividendPeriodValuationDateOffsetPeriod) { }
        public LegDividendPeriodValuationDateOffsetPeriod(int val)
            : base(Tags.LegDividendPeriodValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegDividendPeriodValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateOffsetUnit : StringField
    {
        public const int TAG = 42376;

        public LegDividendPeriodValuationDateOffsetUnit()
            : base(Tags.LegDividendPeriodValuationDateOffsetUnit) { }
        public LegDividendPeriodValuationDateOffsetUnit(string val)
            : base(Tags.LegDividendPeriodValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegDividendPeriodValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateOffsetDayType : IntField
    {
        public const int TAG = 42377;

        public LegDividendPeriodValuationDateOffsetDayType()
            : base(Tags.LegDividendPeriodValuationDateOffsetDayType) { }
        public LegDividendPeriodValuationDateOffsetDayType(int val)
            : base(Tags.LegDividendPeriodValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegDividendPeriodValuationDateAdjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodValuationDateAdjusted : StringField
    {
        public const int TAG = 42378;

        public LegDividendPeriodValuationDateAdjusted()
            : base(Tags.LegDividendPeriodValuationDateAdjusted) { }
        public LegDividendPeriodValuationDateAdjusted(string val)
            : base(Tags.LegDividendPeriodValuationDateAdjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42379;

        public LegDividendPeriodPaymentDateUnadjusted()
            : base(Tags.LegDividendPeriodPaymentDateUnadjusted) { }
        public LegDividendPeriodPaymentDateUnadjusted(string val)
            : base(Tags.LegDividendPeriodPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42380;

        public LegDividendPeriodPaymentDateRelativeTo()
            : base(Tags.LegDividendPeriodPaymentDateRelativeTo) { }
        public LegDividendPeriodPaymentDateRelativeTo(int val)
            : base(Tags.LegDividendPeriodPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegDividendPeriodPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42381;

        public LegDividendPeriodPaymentDateOffsetPeriod()
            : base(Tags.LegDividendPeriodPaymentDateOffsetPeriod) { }
        public LegDividendPeriodPaymentDateOffsetPeriod(int val)
            : base(Tags.LegDividendPeriodPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegDividendPeriodPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42382;

        public LegDividendPeriodPaymentDateOffsetUnit()
            : base(Tags.LegDividendPeriodPaymentDateOffsetUnit) { }
        public LegDividendPeriodPaymentDateOffsetUnit(string val)
            : base(Tags.LegDividendPeriodPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegDividendPeriodPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42383;

        public LegDividendPeriodPaymentDateOffsetDayType()
            : base(Tags.LegDividendPeriodPaymentDateOffsetDayType) { }
        public LegDividendPeriodPaymentDateOffsetDayType(int val)
            : base(Tags.LegDividendPeriodPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegDividendPeriodPaymentDateAdjusted Field
    /// </summary>/
    public sealed class LegDividendPeriodPaymentDateAdjusted : StringField
    {
        public const int TAG = 42384;

        public LegDividendPeriodPaymentDateAdjusted()
            : base(Tags.LegDividendPeriodPaymentDateAdjusted) { }
        public LegDividendPeriodPaymentDateAdjusted(string val)
            : base(Tags.LegDividendPeriodPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// LegDividendPeriodXID Field
    /// </summary>/
    public sealed class LegDividendPeriodXID : StringField
    {
        public const int TAG = 42385;

        public LegDividendPeriodXID()
            : base(Tags.LegDividendPeriodXID) { }
        public LegDividendPeriodXID(string val)
            : base(Tags.LegDividendPeriodXID, val) { }

    }


    /// <summary>
    /// NoLegDividendPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoLegDividendPeriodBusinessCenters : IntField
    {
        public const int TAG = 42386;

        public NoLegDividendPeriodBusinessCenters()
            : base(Tags.NoLegDividendPeriodBusinessCenters) { }
        public NoLegDividendPeriodBusinessCenters(int val)
            : base(Tags.NoLegDividendPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// LegDividendPeriodBusinessCenter Field
    /// </summary>/
    public sealed class LegDividendPeriodBusinessCenter : StringField
    {
        public const int TAG = 42387;

        public LegDividendPeriodBusinessCenter()
            : base(Tags.LegDividendPeriodBusinessCenter) { }
        public LegDividendPeriodBusinessCenter(string val)
            : base(Tags.LegDividendPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegExtraordinaryEvents Field
    /// </summary>/
    public sealed class NoLegExtraordinaryEvents : IntField
    {
        public const int TAG = 42388;

        public NoLegExtraordinaryEvents()
            : base(Tags.NoLegExtraordinaryEvents) { }
        public NoLegExtraordinaryEvents(int val)
            : base(Tags.NoLegExtraordinaryEvents, val) { }

    }


    /// <summary>
    /// LegExtraordinaryEventType Field
    /// </summary>/
    public sealed class LegExtraordinaryEventType : StringField
    {
        public const int TAG = 42389;

        public LegExtraordinaryEventType()
            : base(Tags.LegExtraordinaryEventType) { }
        public LegExtraordinaryEventType(string val)
            : base(Tags.LegExtraordinaryEventType, val) { }

    }


    /// <summary>
    /// LegExtraordinaryEventValue Field
    /// </summary>/
    public sealed class LegExtraordinaryEventValue : StringField
    {
        public const int TAG = 42390;

        public LegExtraordinaryEventValue()
            : base(Tags.LegExtraordinaryEventValue) { }
        public LegExtraordinaryEventValue(string val)
            : base(Tags.LegExtraordinaryEventValue, val) { }

    }


    /// <summary>
    /// LegSettlMethodElectingPartySide Field
    /// </summary>/
    public sealed class LegSettlMethodElectingPartySide : IntField
    {
        public const int TAG = 42391;

        public LegSettlMethodElectingPartySide()
            : base(Tags.LegSettlMethodElectingPartySide) { }
        public LegSettlMethodElectingPartySide(int val)
            : base(Tags.LegSettlMethodElectingPartySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// LegMakeWholeDate Field
    /// </summary>/
    public sealed class LegMakeWholeDate : StringField
    {
        public const int TAG = 42392;

        public LegMakeWholeDate()
            : base(Tags.LegMakeWholeDate) { }
        public LegMakeWholeDate(string val)
            : base(Tags.LegMakeWholeDate, val) { }

    }


    /// <summary>
    /// LegMakeWholeAmount Field
    /// </summary>/
    public sealed class LegMakeWholeAmount : DecimalField
    {
        public const int TAG = 42393;

        public LegMakeWholeAmount()
            : base(Tags.LegMakeWholeAmount) { }
        public LegMakeWholeAmount(Decimal val)
            : base(Tags.LegMakeWholeAmount, val) { }

    }


    /// <summary>
    /// LegMakeWholeBenchmarkCurveName Field
    /// </summary>/
    public sealed class LegMakeWholeBenchmarkCurveName : StringField
    {
        public const int TAG = 42394;

        public LegMakeWholeBenchmarkCurveName()
            : base(Tags.LegMakeWholeBenchmarkCurveName) { }
        public LegMakeWholeBenchmarkCurveName(string val)
            : base(Tags.LegMakeWholeBenchmarkCurveName, val) { }

    }


    /// <summary>
    /// LegMakeWholeBenchmarkCurvePoint Field
    /// </summary>/
    public sealed class LegMakeWholeBenchmarkCurvePoint : StringField
    {
        public const int TAG = 42395;

        public LegMakeWholeBenchmarkCurvePoint()
            : base(Tags.LegMakeWholeBenchmarkCurvePoint) { }
        public LegMakeWholeBenchmarkCurvePoint(string val)
            : base(Tags.LegMakeWholeBenchmarkCurvePoint, val) { }

    }


    /// <summary>
    /// LegMakeWholeRecallSpread Field
    /// </summary>/
    public sealed class LegMakeWholeRecallSpread : DecimalField
    {
        public const int TAG = 42396;

        public LegMakeWholeRecallSpread()
            : base(Tags.LegMakeWholeRecallSpread) { }
        public LegMakeWholeRecallSpread(Decimal val)
            : base(Tags.LegMakeWholeRecallSpread, val) { }

    }


    /// <summary>
    /// LegMakeWholeBenchmarkQuote Field
    /// </summary>/
    public sealed class LegMakeWholeBenchmarkQuote : IntField
    {
        public const int TAG = 42397;

        public LegMakeWholeBenchmarkQuote()
            : base(Tags.LegMakeWholeBenchmarkQuote) { }
        public LegMakeWholeBenchmarkQuote(int val)
            : base(Tags.LegMakeWholeBenchmarkQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// LegMakeWholeInterpolationMethod Field
    /// </summary>/
    public sealed class LegMakeWholeInterpolationMethod : IntField
    {
        public const int TAG = 42398;

        public LegMakeWholeInterpolationMethod()
            : base(Tags.LegMakeWholeInterpolationMethod) { }
        public LegMakeWholeInterpolationMethod(int val)
            : base(Tags.LegMakeWholeInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStreamCashSettlIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamCashSettlIndicator : BooleanField
    {
        public const int TAG = 42399;

        public LegPaymentStreamCashSettlIndicator()
            : base(Tags.LegPaymentStreamCashSettlIndicator) { }
        public LegPaymentStreamCashSettlIndicator(Boolean val)
            : base(Tags.LegPaymentStreamCashSettlIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingXIDRef Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingXIDRef : StringField
    {
        public const int TAG = 42400;

        public LegPaymentStreamCompoundingXIDRef()
            : base(Tags.LegPaymentStreamCompoundingXIDRef) { }
        public LegPaymentStreamCompoundingXIDRef(string val)
            : base(Tags.LegPaymentStreamCompoundingXIDRef, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingSpread Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingSpread : DecimalField
    {
        public const int TAG = 42401;

        public LegPaymentStreamCompoundingSpread()
            : base(Tags.LegPaymentStreamCompoundingSpread) { }
        public LegPaymentStreamCompoundingSpread(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingSpread, val) { }

    }


    /// <summary>
    /// LegPaymentStreamInterpolationMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamInterpolationMethod : IntField
    {
        public const int TAG = 42402;

        public LegPaymentStreamInterpolationMethod()
            : base(Tags.LegPaymentStreamInterpolationMethod) { }
        public LegPaymentStreamInterpolationMethod(int val)
            : base(Tags.LegPaymentStreamInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStreamInterpolationPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamInterpolationPeriod : IntField
    {
        public const int TAG = 42403;

        public LegPaymentStreamInterpolationPeriod()
            : base(Tags.LegPaymentStreamInterpolationPeriod) { }
        public LegPaymentStreamInterpolationPeriod(int val)
            : base(Tags.LegPaymentStreamInterpolationPeriod, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INITIAL_AND_FINAL = 1;
        public const int FINAL = 2;
        public const int ANY_PERIOD = 3;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingFixedRate Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFixedRate : DecimalField
    {
        public const int TAG = 42404;

        public LegPaymentStreamCompoundingFixedRate()
            : base(Tags.LegPaymentStreamCompoundingFixedRate) { }
        public LegPaymentStreamCompoundingFixedRate(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingFixedRate, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamCompoundingDates Field
    /// </summary>/
    public sealed class NoLegPaymentStreamCompoundingDates : IntField
    {
        public const int TAG = 42405;

        public NoLegPaymentStreamCompoundingDates()
            : base(Tags.NoLegPaymentStreamCompoundingDates) { }
        public NoLegPaymentStreamCompoundingDates(int val)
            : base(Tags.NoLegPaymentStreamCompoundingDates, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingDate Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDate : StringField
    {
        public const int TAG = 42406;

        public LegPaymentStreamCompoundingDate()
            : base(Tags.LegPaymentStreamCompoundingDate) { }
        public LegPaymentStreamCompoundingDate(string val)
            : base(Tags.LegPaymentStreamCompoundingDate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingDateType Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDateType : IntField
    {
        public const int TAG = 42407;

        public LegPaymentStreamCompoundingDateType()
            : base(Tags.LegPaymentStreamCompoundingDateType) { }
        public LegPaymentStreamCompoundingDateType(int val)
            : base(Tags.LegPaymentStreamCompoundingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 42408;

        public LegPaymentStreamCompoundingDatesBusinessDayConvention()
            : base(Tags.LegPaymentStreamCompoundingDatesBusinessDayConvention) { }
        public LegPaymentStreamCompoundingDatesBusinessDayConvention(int val)
            : base(Tags.LegPaymentStreamCompoundingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesRelativeTo : IntField
    {
        public const int TAG = 42409;

        public LegPaymentStreamCompoundingDatesRelativeTo()
            : base(Tags.LegPaymentStreamCompoundingDatesRelativeTo) { }
        public LegPaymentStreamCompoundingDatesRelativeTo(int val)
            : base(Tags.LegPaymentStreamCompoundingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesOffsetPeriod : IntField
    {
        public const int TAG = 42410;

        public LegPaymentStreamCompoundingDatesOffsetPeriod()
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetPeriod) { }
        public LegPaymentStreamCompoundingDatesOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesOffsetUnit : StringField
    {
        public const int TAG = 42411;

        public LegPaymentStreamCompoundingDatesOffsetUnit()
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetUnit) { }
        public LegPaymentStreamCompoundingDatesOffsetUnit(string val)
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesOffsetDayType : IntField
    {
        public const int TAG = 42412;

        public LegPaymentStreamCompoundingDatesOffsetDayType()
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetDayType) { }
        public LegPaymentStreamCompoundingDatesOffsetDayType(int val)
            : base(Tags.LegPaymentStreamCompoundingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingPeriodSkip Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingPeriodSkip : IntField
    {
        public const int TAG = 42413;

        public LegPaymentStreamCompoundingPeriodSkip()
            : base(Tags.LegPaymentStreamCompoundingPeriodSkip) { }
        public LegPaymentStreamCompoundingPeriodSkip(int val)
            : base(Tags.LegPaymentStreamCompoundingPeriodSkip, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingFrequencyPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFrequencyPeriod : IntField
    {
        public const int TAG = 42414;

        public LegPaymentStreamCompoundingFrequencyPeriod()
            : base(Tags.LegPaymentStreamCompoundingFrequencyPeriod) { }
        public LegPaymentStreamCompoundingFrequencyPeriod(int val)
            : base(Tags.LegPaymentStreamCompoundingFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingFrequencyUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFrequencyUnit : StringField
    {
        public const int TAG = 42415;

        public LegPaymentStreamCompoundingFrequencyUnit()
            : base(Tags.LegPaymentStreamCompoundingFrequencyUnit) { }
        public LegPaymentStreamCompoundingFrequencyUnit(string val)
            : base(Tags.LegPaymentStreamCompoundingFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegPaymentStreamCompoundingRollConvention Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRollConvention : StringField
    {
        public const int TAG = 42416;

        public LegPaymentStreamCompoundingRollConvention()
            : base(Tags.LegPaymentStreamCompoundingRollConvention) { }
        public LegPaymentStreamCompoundingRollConvention(string val)
            : base(Tags.LegPaymentStreamCompoundingRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// LegPaymentStreamBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 42417;

        public LegPaymentStreamBoundsFirstDateUnadjusted()
            : base(Tags.LegPaymentStreamBoundsFirstDateUnadjusted) { }
        public LegPaymentStreamBoundsFirstDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 42418;

        public LegPaymentStreamBoundsLastDateUnadjusted()
            : base(Tags.LegPaymentStreamBoundsLastDateUnadjusted) { }
        public LegPaymentStreamBoundsLastDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamCompoundingDatesBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStreamCompoundingDatesBusinessCenters : IntField
    {
        public const int TAG = 42419;

        public NoLegPaymentStreamCompoundingDatesBusinessCenters()
            : base(Tags.NoLegPaymentStreamCompoundingDatesBusinessCenters) { }
        public NoLegPaymentStreamCompoundingDatesBusinessCenters(int val)
            : base(Tags.NoLegPaymentStreamCompoundingDatesBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingDatesBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingDatesBusinessCenter : StringField
    {
        public const int TAG = 42420;

        public LegPaymentStreamCompoundingDatesBusinessCenter()
            : base(Tags.LegPaymentStreamCompoundingDatesBusinessCenter) { }
        public LegPaymentStreamCompoundingDatesBusinessCenter(string val)
            : base(Tags.LegPaymentStreamCompoundingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateUnadjusted : StringField
    {
        public const int TAG = 42421;

        public LegPaymentStreamCompoundingEndDateUnadjusted()
            : base(Tags.LegPaymentStreamCompoundingEndDateUnadjusted) { }
        public LegPaymentStreamCompoundingEndDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamCompoundingEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateRelativeTo : IntField
    {
        public const int TAG = 42422;

        public LegPaymentStreamCompoundingEndDateRelativeTo()
            : base(Tags.LegPaymentStreamCompoundingEndDateRelativeTo) { }
        public LegPaymentStreamCompoundingEndDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamCompoundingEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42423;

        public LegPaymentStreamCompoundingEndDateOffsetPeriod()
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetPeriod) { }
        public LegPaymentStreamCompoundingEndDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateOffsetUnit : StringField
    {
        public const int TAG = 42424;

        public LegPaymentStreamCompoundingEndDateOffsetUnit()
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetUnit) { }
        public LegPaymentStreamCompoundingEndDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateOffsetDayType : IntField
    {
        public const int TAG = 42425;

        public LegPaymentStreamCompoundingEndDateOffsetDayType()
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetDayType) { }
        public LegPaymentStreamCompoundingEndDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamCompoundingEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingEndDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingEndDateAdjusted : StringField
    {
        public const int TAG = 42426;

        public LegPaymentStreamCompoundingEndDateAdjusted()
            : base(Tags.LegPaymentStreamCompoundingEndDateAdjusted) { }
        public LegPaymentStreamCompoundingEndDateAdjusted(string val)
            : base(Tags.LegPaymentStreamCompoundingEndDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateIndex Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateIndex : StringField
    {
        public const int TAG = 42427;

        public LegPaymentStreamCompoundingRateIndex()
            : base(Tags.LegPaymentStreamCompoundingRateIndex) { }
        public LegPaymentStreamCompoundingRateIndex(string val)
            : base(Tags.LegPaymentStreamCompoundingRateIndex, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42428;

        public LegPaymentStreamCompoundingRateIndexCurvePeriod()
            : base(Tags.LegPaymentStreamCompoundingRateIndexCurvePeriod) { }
        public LegPaymentStreamCompoundingRateIndexCurvePeriod(int val)
            : base(Tags.LegPaymentStreamCompoundingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42429;

        public LegPaymentStreamCompoundingRateIndexCurveUnit()
            : base(Tags.LegPaymentStreamCompoundingRateIndexCurveUnit) { }
        public LegPaymentStreamCompoundingRateIndexCurveUnit(string val)
            : base(Tags.LegPaymentStreamCompoundingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateMultiplier Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateMultiplier : DecimalField
    {
        public const int TAG = 42430;

        public LegPaymentStreamCompoundingRateMultiplier()
            : base(Tags.LegPaymentStreamCompoundingRateMultiplier) { }
        public LegPaymentStreamCompoundingRateMultiplier(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingRateMultiplier, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateSpread Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateSpread : DecimalField
    {
        public const int TAG = 42431;

        public LegPaymentStreamCompoundingRateSpread()
            : base(Tags.LegPaymentStreamCompoundingRateSpread) { }
        public LegPaymentStreamCompoundingRateSpread(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingRateSpread, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateSpreadPositionType Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateSpreadPositionType : IntField
    {
        public const int TAG = 42432;

        public LegPaymentStreamCompoundingRateSpreadPositionType()
            : base(Tags.LegPaymentStreamCompoundingRateSpreadPositionType) { }
        public LegPaymentStreamCompoundingRateSpreadPositionType(int val)
            : base(Tags.LegPaymentStreamCompoundingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingRateTreatment : IntField
    {
        public const int TAG = 42433;

        public LegPaymentStreamCompoundingRateTreatment()
            : base(Tags.LegPaymentStreamCompoundingRateTreatment) { }
        public LegPaymentStreamCompoundingRateTreatment(int val)
            : base(Tags.LegPaymentStreamCompoundingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingCapRate Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingCapRate : DecimalField
    {
        public const int TAG = 42434;

        public LegPaymentStreamCompoundingCapRate()
            : base(Tags.LegPaymentStreamCompoundingCapRate) { }
        public LegPaymentStreamCompoundingCapRate(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingCapRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingCapRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingCapRateBuySide : IntField
    {
        public const int TAG = 42435;

        public LegPaymentStreamCompoundingCapRateBuySide()
            : base(Tags.LegPaymentStreamCompoundingCapRateBuySide) { }
        public LegPaymentStreamCompoundingCapRateBuySide(int val)
            : base(Tags.LegPaymentStreamCompoundingCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingCapRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingCapRateSellSide : IntField
    {
        public const int TAG = 42436;

        public LegPaymentStreamCompoundingCapRateSellSide()
            : base(Tags.LegPaymentStreamCompoundingCapRateSellSide) { }
        public LegPaymentStreamCompoundingCapRateSellSide(int val)
            : base(Tags.LegPaymentStreamCompoundingCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingFloorRate Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFloorRate : DecimalField
    {
        public const int TAG = 42437;

        public LegPaymentStreamCompoundingFloorRate()
            : base(Tags.LegPaymentStreamCompoundingFloorRate) { }
        public LegPaymentStreamCompoundingFloorRate(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingFloorRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingFloorRateBuySide Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFloorRateBuySide : IntField
    {
        public const int TAG = 42438;

        public LegPaymentStreamCompoundingFloorRateBuySide()
            : base(Tags.LegPaymentStreamCompoundingFloorRateBuySide) { }
        public LegPaymentStreamCompoundingFloorRateBuySide(int val)
            : base(Tags.LegPaymentStreamCompoundingFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingFloorRateSellSide Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFloorRateSellSide : IntField
    {
        public const int TAG = 42439;

        public LegPaymentStreamCompoundingFloorRateSellSide()
            : base(Tags.LegPaymentStreamCompoundingFloorRateSellSide) { }
        public LegPaymentStreamCompoundingFloorRateSellSide(int val)
            : base(Tags.LegPaymentStreamCompoundingFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingInitialRate Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingInitialRate : DecimalField
    {
        public const int TAG = 42440;

        public LegPaymentStreamCompoundingInitialRate()
            : base(Tags.LegPaymentStreamCompoundingInitialRate) { }
        public LegPaymentStreamCompoundingInitialRate(Decimal val)
            : base(Tags.LegPaymentStreamCompoundingInitialRate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42441;

        public LegPaymentStreamCompoundingFinalRateRoundingDirection()
            : base(Tags.LegPaymentStreamCompoundingFinalRateRoundingDirection) { }
        public LegPaymentStreamCompoundingFinalRateRoundingDirection(char val)
            : base(Tags.LegPaymentStreamCompoundingFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// LegPaymentStreamCompoundingFinalRatePrecision Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingFinalRatePrecision : IntField
    {
        public const int TAG = 42442;

        public LegPaymentStreamCompoundingFinalRatePrecision()
            : base(Tags.LegPaymentStreamCompoundingFinalRatePrecision) { }
        public LegPaymentStreamCompoundingFinalRatePrecision(int val)
            : base(Tags.LegPaymentStreamCompoundingFinalRatePrecision, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingAveragingMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingAveragingMethod : IntField
    {
        public const int TAG = 42443;

        public LegPaymentStreamCompoundingAveragingMethod()
            : base(Tags.LegPaymentStreamCompoundingAveragingMethod) { }
        public LegPaymentStreamCompoundingAveragingMethod(int val)
            : base(Tags.LegPaymentStreamCompoundingAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingNegativeRateTreatment Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingNegativeRateTreatment : IntField
    {
        public const int TAG = 42444;

        public LegPaymentStreamCompoundingNegativeRateTreatment()
            : base(Tags.LegPaymentStreamCompoundingNegativeRateTreatment) { }
        public LegPaymentStreamCompoundingNegativeRateTreatment(int val)
            : base(Tags.LegPaymentStreamCompoundingNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateUnadjusted : StringField
    {
        public const int TAG = 42445;

        public LegPaymentStreamCompoundingStartDateUnadjusted()
            : base(Tags.LegPaymentStreamCompoundingStartDateUnadjusted) { }
        public LegPaymentStreamCompoundingStartDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamCompoundingStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateRelativeTo : IntField
    {
        public const int TAG = 42446;

        public LegPaymentStreamCompoundingStartDateRelativeTo()
            : base(Tags.LegPaymentStreamCompoundingStartDateRelativeTo) { }
        public LegPaymentStreamCompoundingStartDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamCompoundingStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42447;

        public LegPaymentStreamCompoundingStartDateOffsetPeriod()
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetPeriod) { }
        public LegPaymentStreamCompoundingStartDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateOffsetUnit : StringField
    {
        public const int TAG = 42448;

        public LegPaymentStreamCompoundingStartDateOffsetUnit()
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetUnit) { }
        public LegPaymentStreamCompoundingStartDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateOffsetDayType : IntField
    {
        public const int TAG = 42449;

        public LegPaymentStreamCompoundingStartDateOffsetDayType()
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetDayType) { }
        public LegPaymentStreamCompoundingStartDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamCompoundingStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamCompoundingStartDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamCompoundingStartDateAdjusted : StringField
    {
        public const int TAG = 42450;

        public LegPaymentStreamCompoundingStartDateAdjusted()
            : base(Tags.LegPaymentStreamCompoundingStartDateAdjusted) { }
        public LegPaymentStreamCompoundingStartDateAdjusted(string val)
            : base(Tags.LegPaymentStreamCompoundingStartDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaImageLength Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaImageLength : IntField
    {
        public const int TAG = 42451;

        public LegPaymentStreamFormulaImageLength()
            : base(Tags.LegPaymentStreamFormulaImageLength) { }
        public LegPaymentStreamFormulaImageLength(int val)
            : base(Tags.LegPaymentStreamFormulaImageLength, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaImage Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaImage : StringField
    {
        public const int TAG = 42452;

        public LegPaymentStreamFormulaImage()
            : base(Tags.LegPaymentStreamFormulaImage) { }
        public LegPaymentStreamFormulaImage(string val)
            : base(Tags.LegPaymentStreamFormulaImage, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateUnadjusted : StringField
    {
        public const int TAG = 42453;

        public LegPaymentStreamFinalPricePaymentDateUnadjusted()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateUnadjusted) { }
        public LegPaymentStreamFinalPricePaymentDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateRelativeTo : IntField
    {
        public const int TAG = 42454;

        public LegPaymentStreamFinalPricePaymentDateRelativeTo()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateRelativeTo) { }
        public LegPaymentStreamFinalPricePaymentDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42455;

        public LegPaymentStreamFinalPricePaymentDateOffsetPeriod()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetPeriod) { }
        public LegPaymentStreamFinalPricePaymentDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42456;

        public LegPaymentStreamFinalPricePaymentDateOffsetUnit()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetUnit) { }
        public LegPaymentStreamFinalPricePaymentDateOffsetUnit(string val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42457;

        public LegPaymentStreamFinalPricePaymentDateOffsetDayType()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetDayType) { }
        public LegPaymentStreamFinalPricePaymentDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamFinalPricePaymentDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFinalPricePaymentDateAdjusted : StringField
    {
        public const int TAG = 42458;

        public LegPaymentStreamFinalPricePaymentDateAdjusted()
            : base(Tags.LegPaymentStreamFinalPricePaymentDateAdjusted) { }
        public LegPaymentStreamFinalPricePaymentDateAdjusted(string val)
            : base(Tags.LegPaymentStreamFinalPricePaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamFixingDates Field
    /// </summary>/
    public sealed class NoLegPaymentStreamFixingDates : IntField
    {
        public const int TAG = 42459;

        public NoLegPaymentStreamFixingDates()
            : base(Tags.NoLegPaymentStreamFixingDates) { }
        public NoLegPaymentStreamFixingDates(int val)
            : base(Tags.NoLegPaymentStreamFixingDates, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDate Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDate : StringField
    {
        public const int TAG = 42460;

        public LegPaymentStreamFixingDate()
            : base(Tags.LegPaymentStreamFixingDate) { }
        public LegPaymentStreamFixingDate(string val)
            : base(Tags.LegPaymentStreamFixingDate, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFixingDateType Field
    /// </summary>/
    public sealed class LegPaymentStreamFixingDateType : IntField
    {
        public const int TAG = 42461;

        public LegPaymentStreamFixingDateType()
            : base(Tags.LegPaymentStreamFixingDateType) { }
        public LegPaymentStreamFixingDateType(int val)
            : base(Tags.LegPaymentStreamFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateUnadjusted : StringField
    {
        public const int TAG = 42462;

        public LegPaymentStreamFirstObservationDateUnadjusted()
            : base(Tags.LegPaymentStreamFirstObservationDateUnadjusted) { }
        public LegPaymentStreamFirstObservationDateUnadjusted(string val)
            : base(Tags.LegPaymentStreamFirstObservationDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateRelativeTo : IntField
    {
        public const int TAG = 42463;

        public LegPaymentStreamFirstObservationDateRelativeTo()
            : base(Tags.LegPaymentStreamFirstObservationDateRelativeTo) { }
        public LegPaymentStreamFirstObservationDateRelativeTo(int val)
            : base(Tags.LegPaymentStreamFirstObservationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateOffsetDayType : IntField
    {
        public const int TAG = 42464;

        public LegPaymentStreamFirstObservationDateOffsetDayType()
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetDayType) { }
        public LegPaymentStreamFirstObservationDateOffsetDayType(int val)
            : base(Tags.LegPaymentStreamFirstObservationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStreamFirstObservationDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStreamFirstObservationDateAdjusted : StringField
    {
        public const int TAG = 42465;

        public LegPaymentStreamFirstObservationDateAdjusted()
            : base(Tags.LegPaymentStreamFirstObservationDateAdjusted) { }
        public LegPaymentStreamFirstObservationDateAdjusted(string val)
            : base(Tags.LegPaymentStreamFirstObservationDateAdjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStreamUnderlierRefID Field
    /// </summary>/
    public sealed class LegPaymentStreamUnderlierRefID : StringField
    {
        public const int TAG = 42466;

        public LegPaymentStreamUnderlierRefID()
            : base(Tags.LegPaymentStreamUnderlierRefID) { }
        public LegPaymentStreamUnderlierRefID(string val)
            : base(Tags.LegPaymentStreamUnderlierRefID, val) { }

    }


    /// <summary>
    /// LegReturnRateNotionalReset Field
    /// </summary>/
    public sealed class LegReturnRateNotionalReset : BooleanField
    {
        public const int TAG = 42467;

        public LegReturnRateNotionalReset()
            : base(Tags.LegReturnRateNotionalReset) { }
        public LegReturnRateNotionalReset(Boolean val)
            : base(Tags.LegReturnRateNotionalReset, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkInitialLevel Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkInitialLevel : DecimalField
    {
        public const int TAG = 42468;

        public LegPaymentStreamLinkInitialLevel()
            : base(Tags.LegPaymentStreamLinkInitialLevel) { }
        public LegPaymentStreamLinkInitialLevel(Decimal val)
            : base(Tags.LegPaymentStreamLinkInitialLevel, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkClosingLevelIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkClosingLevelIndicator : BooleanField
    {
        public const int TAG = 42469;

        public LegPaymentStreamLinkClosingLevelIndicator()
            : base(Tags.LegPaymentStreamLinkClosingLevelIndicator) { }
        public LegPaymentStreamLinkClosingLevelIndicator(Boolean val)
            : base(Tags.LegPaymentStreamLinkClosingLevelIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkExpiringLevelIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkExpiringLevelIndicator : BooleanField
    {
        public const int TAG = 42470;

        public LegPaymentStreamLinkExpiringLevelIndicator()
            : base(Tags.LegPaymentStreamLinkExpiringLevelIndicator) { }
        public LegPaymentStreamLinkExpiringLevelIndicator(Boolean val)
            : base(Tags.LegPaymentStreamLinkExpiringLevelIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkEstimatedTradingDays Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkEstimatedTradingDays : IntField
    {
        public const int TAG = 42471;

        public LegPaymentStreamLinkEstimatedTradingDays()
            : base(Tags.LegPaymentStreamLinkEstimatedTradingDays) { }
        public LegPaymentStreamLinkEstimatedTradingDays(int val)
            : base(Tags.LegPaymentStreamLinkEstimatedTradingDays, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkStrikePrice Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkStrikePrice : DecimalField
    {
        public const int TAG = 42472;

        public LegPaymentStreamLinkStrikePrice()
            : base(Tags.LegPaymentStreamLinkStrikePrice) { }
        public LegPaymentStreamLinkStrikePrice(Decimal val)
            : base(Tags.LegPaymentStreamLinkStrikePrice, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkStrikePriceType Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkStrikePriceType : IntField
    {
        public const int TAG = 42473;

        public LegPaymentStreamLinkStrikePriceType()
            : base(Tags.LegPaymentStreamLinkStrikePriceType) { }
        public LegPaymentStreamLinkStrikePriceType(int val)
            : base(Tags.LegPaymentStreamLinkStrikePriceType, val) { }


        // Field Enumerations
        public const int VOLATILITY = 0;
        public const int VARIANCE = 1;
    }


    /// <summary>
    /// LegPaymentStreamLinkMaximumBoundary Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkMaximumBoundary : DecimalField
    {
        public const int TAG = 42474;

        public LegPaymentStreamLinkMaximumBoundary()
            : base(Tags.LegPaymentStreamLinkMaximumBoundary) { }
        public LegPaymentStreamLinkMaximumBoundary(Decimal val)
            : base(Tags.LegPaymentStreamLinkMaximumBoundary, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkMinimumBoundary Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkMinimumBoundary : DecimalField
    {
        public const int TAG = 42475;

        public LegPaymentStreamLinkMinimumBoundary()
            : base(Tags.LegPaymentStreamLinkMinimumBoundary) { }
        public LegPaymentStreamLinkMinimumBoundary(Decimal val)
            : base(Tags.LegPaymentStreamLinkMinimumBoundary, val) { }

    }


    /// <summary>
    /// LegPaymentStreamLinkNumberOfDataSeries Field
    /// </summary>/
    public sealed class LegPaymentStreamLinkNumberOfDataSeries : IntField
    {
        public const int TAG = 42476;

        public LegPaymentStreamLinkNumberOfDataSeries()
            : base(Tags.LegPaymentStreamLinkNumberOfDataSeries) { }
        public LegPaymentStreamLinkNumberOfDataSeries(int val)
            : base(Tags.LegPaymentStreamLinkNumberOfDataSeries, val) { }

    }


    /// <summary>
    /// LegPaymentStreamVarianceUnadjustedCap Field
    /// </summary>/
    public sealed class LegPaymentStreamVarianceUnadjustedCap : DecimalField
    {
        public const int TAG = 42477;

        public LegPaymentStreamVarianceUnadjustedCap()
            : base(Tags.LegPaymentStreamVarianceUnadjustedCap) { }
        public LegPaymentStreamVarianceUnadjustedCap(Decimal val)
            : base(Tags.LegPaymentStreamVarianceUnadjustedCap, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRealizedVarianceMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamRealizedVarianceMethod : IntField
    {
        public const int TAG = 42478;

        public LegPaymentStreamRealizedVarianceMethod()
            : base(Tags.LegPaymentStreamRealizedVarianceMethod) { }
        public LegPaymentStreamRealizedVarianceMethod(int val)
            : base(Tags.LegPaymentStreamRealizedVarianceMethod, val) { }


        // Field Enumerations
        public const int PREVIOUS = 0;
        public const int LAST = 1;
        public const int BOTH = 2;
    }


    /// <summary>
    /// LegPaymentStreamDaysAdjustmentIndicator Field
    /// </summary>/
    public sealed class LegPaymentStreamDaysAdjustmentIndicator : BooleanField
    {
        public const int TAG = 42479;

        public LegPaymentStreamDaysAdjustmentIndicator()
            : base(Tags.LegPaymentStreamDaysAdjustmentIndicator) { }
        public LegPaymentStreamDaysAdjustmentIndicator(Boolean val)
            : base(Tags.LegPaymentStreamDaysAdjustmentIndicator, val) { }

    }


    /// <summary>
    /// LegPaymentStreamNearestExchangeContractRefID Field
    /// </summary>/
    public sealed class LegPaymentStreamNearestExchangeContractRefID : StringField
    {
        public const int TAG = 42480;

        public LegPaymentStreamNearestExchangeContractRefID()
            : base(Tags.LegPaymentStreamNearestExchangeContractRefID) { }
        public LegPaymentStreamNearestExchangeContractRefID(string val)
            : base(Tags.LegPaymentStreamNearestExchangeContractRefID, val) { }

    }


    /// <summary>
    /// LegPaymentStreamVegaNotionalAmount Field
    /// </summary>/
    public sealed class LegPaymentStreamVegaNotionalAmount : DecimalField
    {
        public const int TAG = 42481;

        public LegPaymentStreamVegaNotionalAmount()
            : base(Tags.LegPaymentStreamVegaNotionalAmount) { }
        public LegPaymentStreamVegaNotionalAmount(Decimal val)
            : base(Tags.LegPaymentStreamVegaNotionalAmount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaCurrency Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaCurrency : StringField
    {
        public const int TAG = 42482;

        public LegPaymentStreamFormulaCurrency()
            : base(Tags.LegPaymentStreamFormulaCurrency) { }
        public LegPaymentStreamFormulaCurrency(string val)
            : base(Tags.LegPaymentStreamFormulaCurrency, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaCurrencyDeterminationMethod Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaCurrencyDeterminationMethod : StringField
    {
        public const int TAG = 42483;

        public LegPaymentStreamFormulaCurrencyDeterminationMethod()
            : base(Tags.LegPaymentStreamFormulaCurrencyDeterminationMethod) { }
        public LegPaymentStreamFormulaCurrencyDeterminationMethod(string val)
            : base(Tags.LegPaymentStreamFormulaCurrencyDeterminationMethod, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaReferenceAmount Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaReferenceAmount : IntField
    {
        public const int TAG = 42484;

        public LegPaymentStreamFormulaReferenceAmount()
            : base(Tags.LegPaymentStreamFormulaReferenceAmount) { }
        public LegPaymentStreamFormulaReferenceAmount(int val)
            : base(Tags.LegPaymentStreamFormulaReferenceAmount, val) { }

    }


    /// <summary>
    /// NoLegPaymentStreamFormulas Field
    /// </summary>/
    public sealed class NoLegPaymentStreamFormulas : IntField
    {
        public const int TAG = 42485;

        public NoLegPaymentStreamFormulas()
            : base(Tags.NoLegPaymentStreamFormulas) { }
        public NoLegPaymentStreamFormulas(int val)
            : base(Tags.NoLegPaymentStreamFormulas, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormula Field
    /// </summary>/
    public sealed class LegPaymentStreamFormula : StringField
    {
        public const int TAG = 42486;

        public LegPaymentStreamFormula()
            : base(Tags.LegPaymentStreamFormula) { }
        public LegPaymentStreamFormula(string val)
            : base(Tags.LegPaymentStreamFormula, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaDesc Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaDesc : StringField
    {
        public const int TAG = 42487;

        public LegPaymentStreamFormulaDesc()
            : base(Tags.LegPaymentStreamFormulaDesc) { }
        public LegPaymentStreamFormulaDesc(string val)
            : base(Tags.LegPaymentStreamFormulaDesc, val) { }

    }


    /// <summary>
    /// LegPaymentStubEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateUnadjusted : StringField
    {
        public const int TAG = 42488;

        public LegPaymentStubEndDateUnadjusted()
            : base(Tags.LegPaymentStubEndDateUnadjusted) { }
        public LegPaymentStubEndDateUnadjusted(string val)
            : base(Tags.LegPaymentStubEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStubEndDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateBusinessDayConvention : IntField
    {
        public const int TAG = 42489;

        public LegPaymentStubEndDateBusinessDayConvention()
            : base(Tags.LegPaymentStubEndDateBusinessDayConvention) { }
        public LegPaymentStubEndDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStubEndDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStubEndDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateRelativeTo : IntField
    {
        public const int TAG = 42490;

        public LegPaymentStubEndDateRelativeTo()
            : base(Tags.LegPaymentStubEndDateRelativeTo) { }
        public LegPaymentStubEndDateRelativeTo(int val)
            : base(Tags.LegPaymentStubEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStubEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42491;

        public LegPaymentStubEndDateOffsetPeriod()
            : base(Tags.LegPaymentStubEndDateOffsetPeriod) { }
        public LegPaymentStubEndDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStubEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStubEndDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateOffsetUnit : StringField
    {
        public const int TAG = 42492;

        public LegPaymentStubEndDateOffsetUnit()
            : base(Tags.LegPaymentStubEndDateOffsetUnit) { }
        public LegPaymentStubEndDateOffsetUnit(string val)
            : base(Tags.LegPaymentStubEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStubEndDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateOffsetDayType : IntField
    {
        public const int TAG = 42493;

        public LegPaymentStubEndDateOffsetDayType()
            : base(Tags.LegPaymentStubEndDateOffsetDayType) { }
        public LegPaymentStubEndDateOffsetDayType(int val)
            : base(Tags.LegPaymentStubEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStubEndDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateAdjusted : StringField
    {
        public const int TAG = 42494;

        public LegPaymentStubEndDateAdjusted()
            : base(Tags.LegPaymentStubEndDateAdjusted) { }
        public LegPaymentStubEndDateAdjusted(string val)
            : base(Tags.LegPaymentStubEndDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegPaymentStubEndDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStubEndDateBusinessCenters : IntField
    {
        public const int TAG = 42495;

        public NoLegPaymentStubEndDateBusinessCenters()
            : base(Tags.NoLegPaymentStubEndDateBusinessCenters) { }
        public NoLegPaymentStubEndDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStubEndDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPaymentStubEndDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStubEndDateBusinessCenter : StringField
    {
        public const int TAG = 42496;

        public LegPaymentStubEndDateBusinessCenter()
            : base(Tags.LegPaymentStubEndDateBusinessCenter) { }
        public LegPaymentStubEndDateBusinessCenter(string val)
            : base(Tags.LegPaymentStubEndDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegPaymentStubStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateUnadjusted : StringField
    {
        public const int TAG = 42497;

        public LegPaymentStubStartDateUnadjusted()
            : base(Tags.LegPaymentStubStartDateUnadjusted) { }
        public LegPaymentStubStartDateUnadjusted(string val)
            : base(Tags.LegPaymentStubStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegPaymentStubStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 42498;

        public LegPaymentStubStartDateBusinessDayConvention()
            : base(Tags.LegPaymentStubStartDateBusinessDayConvention) { }
        public LegPaymentStubStartDateBusinessDayConvention(int val)
            : base(Tags.LegPaymentStubStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegPaymentStubStartDateRelativeTo Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateRelativeTo : IntField
    {
        public const int TAG = 42499;

        public LegPaymentStubStartDateRelativeTo()
            : base(Tags.LegPaymentStubStartDateRelativeTo) { }
        public LegPaymentStubStartDateRelativeTo(int val)
            : base(Tags.LegPaymentStubStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegPaymentStubStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42500;

        public LegPaymentStubStartDateOffsetPeriod()
            : base(Tags.LegPaymentStubStartDateOffsetPeriod) { }
        public LegPaymentStubStartDateOffsetPeriod(int val)
            : base(Tags.LegPaymentStubStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegPaymentStubStartDateOffsetUnit Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateOffsetUnit : StringField
    {
        public const int TAG = 42501;

        public LegPaymentStubStartDateOffsetUnit()
            : base(Tags.LegPaymentStubStartDateOffsetUnit) { }
        public LegPaymentStubStartDateOffsetUnit(string val)
            : base(Tags.LegPaymentStubStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegPaymentStubStartDateOffsetDayType Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateOffsetDayType : IntField
    {
        public const int TAG = 42502;

        public LegPaymentStubStartDateOffsetDayType()
            : base(Tags.LegPaymentStubStartDateOffsetDayType) { }
        public LegPaymentStubStartDateOffsetDayType(int val)
            : base(Tags.LegPaymentStubStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegPaymentStubStartDateAdjusted Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateAdjusted : StringField
    {
        public const int TAG = 42503;

        public LegPaymentStubStartDateAdjusted()
            : base(Tags.LegPaymentStubStartDateAdjusted) { }
        public LegPaymentStubStartDateAdjusted(string val)
            : base(Tags.LegPaymentStubStartDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegPaymentStubStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegPaymentStubStartDateBusinessCenters : IntField
    {
        public const int TAG = 42504;

        public NoLegPaymentStubStartDateBusinessCenters()
            : base(Tags.NoLegPaymentStubStartDateBusinessCenters) { }
        public NoLegPaymentStubStartDateBusinessCenters(int val)
            : base(Tags.NoLegPaymentStubStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegPaymentStubStartDateBusinessCenter Field
    /// </summary>/
    public sealed class LegPaymentStubStartDateBusinessCenter : StringField
    {
        public const int TAG = 42505;

        public LegPaymentStubStartDateBusinessCenter()
            : base(Tags.LegPaymentStubStartDateBusinessCenter) { }
        public LegPaymentStubStartDateBusinessCenter(string val)
            : base(Tags.LegPaymentStubStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegProvisionBreakFeeElection Field
    /// </summary>/
    public sealed class LegProvisionBreakFeeElection : IntField
    {
        public const int TAG = 42506;

        public LegProvisionBreakFeeElection()
            : base(Tags.LegProvisionBreakFeeElection) { }
        public LegProvisionBreakFeeElection(int val)
            : base(Tags.LegProvisionBreakFeeElection, val) { }


        // Field Enumerations
        public const int FLAT_FEE = 0;
        public const int AMORTIZED_FEE = 1;
        public const int FUNDING_FEE = 2;
        public const int FLAT_FEE_AND_FUNDING_FEE = 3;
        public const int AMORTIZED_FEE_AND_FUNDING_FEE = 4;
    }


    /// <summary>
    /// LegProvisionBreakFeeRate Field
    /// </summary>/
    public sealed class LegProvisionBreakFeeRate : DecimalField
    {
        public const int TAG = 42507;

        public LegProvisionBreakFeeRate()
            : base(Tags.LegProvisionBreakFeeRate) { }
        public LegProvisionBreakFeeRate(Decimal val)
            : base(Tags.LegProvisionBreakFeeRate, val) { }

    }


    /// <summary>
    /// NoLegReturnRateDates Field
    /// </summary>/
    public sealed class NoLegReturnRateDates : IntField
    {
        public const int TAG = 42508;

        public NoLegReturnRateDates()
            : base(Tags.NoLegReturnRateDates) { }
        public NoLegReturnRateDates(int val)
            : base(Tags.NoLegReturnRateDates, val) { }

    }


    /// <summary>
    /// LegReturnRateDateMode Field
    /// </summary>/
    public sealed class LegReturnRateDateMode : IntField
    {
        public const int TAG = 42509;

        public LegReturnRateDateMode()
            : base(Tags.LegReturnRateDateMode) { }
        public LegReturnRateDateMode(int val)
            : base(Tags.LegReturnRateDateMode, val) { }


        // Field Enumerations
        public const int PRICE_VALUATION = 0;
        public const int DIVIDEND_VALUATION = 1;
    }


    /// <summary>
    /// LegReturnRateValuationDateRelativeTo Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateRelativeTo : IntField
    {
        public const int TAG = 42510;

        public LegReturnRateValuationDateRelativeTo()
            : base(Tags.LegReturnRateValuationDateRelativeTo) { }
        public LegReturnRateValuationDateRelativeTo(int val)
            : base(Tags.LegReturnRateValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 42511;

        public LegReturnRateValuationDateOffsetPeriod()
            : base(Tags.LegReturnRateValuationDateOffsetPeriod) { }
        public LegReturnRateValuationDateOffsetPeriod(int val)
            : base(Tags.LegReturnRateValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateOffsetUnit : StringField
    {
        public const int TAG = 42512;

        public LegReturnRateValuationDateOffsetUnit()
            : base(Tags.LegReturnRateValuationDateOffsetUnit) { }
        public LegReturnRateValuationDateOffsetUnit(string val)
            : base(Tags.LegReturnRateValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegReturnRateValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateOffsetDayType : IntField
    {
        public const int TAG = 42513;

        public LegReturnRateValuationDateOffsetDayType()
            : base(Tags.LegReturnRateValuationDateOffsetDayType) { }
        public LegReturnRateValuationDateOffsetDayType(int val)
            : base(Tags.LegReturnRateValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegReturnRateValuationStartDateUnadjusted Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateUnadjusted : StringField
    {
        public const int TAG = 42514;

        public LegReturnRateValuationStartDateUnadjusted()
            : base(Tags.LegReturnRateValuationStartDateUnadjusted) { }
        public LegReturnRateValuationStartDateUnadjusted(string val)
            : base(Tags.LegReturnRateValuationStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationStartDateRelativeTo Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateRelativeTo : IntField
    {
        public const int TAG = 42515;

        public LegReturnRateValuationStartDateRelativeTo()
            : base(Tags.LegReturnRateValuationStartDateRelativeTo) { }
        public LegReturnRateValuationStartDateRelativeTo(int val)
            : base(Tags.LegReturnRateValuationStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42516;

        public LegReturnRateValuationStartDateOffsetPeriod()
            : base(Tags.LegReturnRateValuationStartDateOffsetPeriod) { }
        public LegReturnRateValuationStartDateOffsetPeriod(int val)
            : base(Tags.LegReturnRateValuationStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationStartDateOffsetUnit Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateOffsetUnit : StringField
    {
        public const int TAG = 42517;

        public LegReturnRateValuationStartDateOffsetUnit()
            : base(Tags.LegReturnRateValuationStartDateOffsetUnit) { }
        public LegReturnRateValuationStartDateOffsetUnit(string val)
            : base(Tags.LegReturnRateValuationStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegReturnRateValuationStartDateOffsetDayType Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateOffsetDayType : IntField
    {
        public const int TAG = 42518;

        public LegReturnRateValuationStartDateOffsetDayType()
            : base(Tags.LegReturnRateValuationStartDateOffsetDayType) { }
        public LegReturnRateValuationStartDateOffsetDayType(int val)
            : base(Tags.LegReturnRateValuationStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegReturnRateValuationStartDateAdjusted Field
    /// </summary>/
    public sealed class LegReturnRateValuationStartDateAdjusted : StringField
    {
        public const int TAG = 42519;

        public LegReturnRateValuationStartDateAdjusted()
            : base(Tags.LegReturnRateValuationStartDateAdjusted) { }
        public LegReturnRateValuationStartDateAdjusted(string val)
            : base(Tags.LegReturnRateValuationStartDateAdjusted, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationEndDateUnadjusted Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateUnadjusted : StringField
    {
        public const int TAG = 42520;

        public LegReturnRateValuationEndDateUnadjusted()
            : base(Tags.LegReturnRateValuationEndDateUnadjusted) { }
        public LegReturnRateValuationEndDateUnadjusted(string val)
            : base(Tags.LegReturnRateValuationEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationEndDateRelativeTo Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateRelativeTo : IntField
    {
        public const int TAG = 42521;

        public LegReturnRateValuationEndDateRelativeTo()
            : base(Tags.LegReturnRateValuationEndDateRelativeTo) { }
        public LegReturnRateValuationEndDateRelativeTo(int val)
            : base(Tags.LegReturnRateValuationEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42522;

        public LegReturnRateValuationEndDateOffsetPeriod()
            : base(Tags.LegReturnRateValuationEndDateOffsetPeriod) { }
        public LegReturnRateValuationEndDateOffsetPeriod(int val)
            : base(Tags.LegReturnRateValuationEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationEndDateOffsetUnit Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateOffsetUnit : StringField
    {
        public const int TAG = 42523;

        public LegReturnRateValuationEndDateOffsetUnit()
            : base(Tags.LegReturnRateValuationEndDateOffsetUnit) { }
        public LegReturnRateValuationEndDateOffsetUnit(string val)
            : base(Tags.LegReturnRateValuationEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegReturnRateValuationEndDateOffsetDayType Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateOffsetDayType : IntField
    {
        public const int TAG = 42524;

        public LegReturnRateValuationEndDateOffsetDayType()
            : base(Tags.LegReturnRateValuationEndDateOffsetDayType) { }
        public LegReturnRateValuationEndDateOffsetDayType(int val)
            : base(Tags.LegReturnRateValuationEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegReturnRateValuationEndDateAdjusted Field
    /// </summary>/
    public sealed class LegReturnRateValuationEndDateAdjusted : StringField
    {
        public const int TAG = 42525;

        public LegReturnRateValuationEndDateAdjusted()
            : base(Tags.LegReturnRateValuationEndDateAdjusted) { }
        public LegReturnRateValuationEndDateAdjusted(string val)
            : base(Tags.LegReturnRateValuationEndDateAdjusted, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationFrequencyPeriod Field
    /// </summary>/
    public sealed class LegReturnRateValuationFrequencyPeriod : IntField
    {
        public const int TAG = 42526;

        public LegReturnRateValuationFrequencyPeriod()
            : base(Tags.LegReturnRateValuationFrequencyPeriod) { }
        public LegReturnRateValuationFrequencyPeriod(int val)
            : base(Tags.LegReturnRateValuationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationFrequencyUnit Field
    /// </summary>/
    public sealed class LegReturnRateValuationFrequencyUnit : StringField
    {
        public const int TAG = 42527;

        public LegReturnRateValuationFrequencyUnit()
            : base(Tags.LegReturnRateValuationFrequencyUnit) { }
        public LegReturnRateValuationFrequencyUnit(string val)
            : base(Tags.LegReturnRateValuationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// LegReturnRateValuationFrequencyRollConvention Field
    /// </summary>/
    public sealed class LegReturnRateValuationFrequencyRollConvention : StringField
    {
        public const int TAG = 42528;

        public LegReturnRateValuationFrequencyRollConvention()
            : base(Tags.LegReturnRateValuationFrequencyRollConvention) { }
        public LegReturnRateValuationFrequencyRollConvention(string val)
            : base(Tags.LegReturnRateValuationFrequencyRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// LegReturnRateValuationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateBusinessDayConvention : IntField
    {
        public const int TAG = 42529;

        public LegReturnRateValuationDateBusinessDayConvention()
            : base(Tags.LegReturnRateValuationDateBusinessDayConvention) { }
        public LegReturnRateValuationDateBusinessDayConvention(int val)
            : base(Tags.LegReturnRateValuationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// NoLegReturnRateFXConversions Field
    /// </summary>/
    public sealed class NoLegReturnRateFXConversions : IntField
    {
        public const int TAG = 42530;

        public NoLegReturnRateFXConversions()
            : base(Tags.NoLegReturnRateFXConversions) { }
        public NoLegReturnRateFXConversions(int val)
            : base(Tags.NoLegReturnRateFXConversions, val) { }

    }


    /// <summary>
    /// LegReturnRateFXCurrencySymbol Field
    /// </summary>/
    public sealed class LegReturnRateFXCurrencySymbol : StringField
    {
        public const int TAG = 42531;

        public LegReturnRateFXCurrencySymbol()
            : base(Tags.LegReturnRateFXCurrencySymbol) { }
        public LegReturnRateFXCurrencySymbol(string val)
            : base(Tags.LegReturnRateFXCurrencySymbol, val) { }

    }


    /// <summary>
    /// LegReturnRateFXRate Field
    /// </summary>/
    public sealed class LegReturnRateFXRate : DecimalField
    {
        public const int TAG = 42532;

        public LegReturnRateFXRate()
            : base(Tags.LegReturnRateFXRate) { }
        public LegReturnRateFXRate(Decimal val)
            : base(Tags.LegReturnRateFXRate, val) { }

    }


    /// <summary>
    /// LegReturnRateFXRateCalc Field
    /// </summary>/
    public sealed class LegReturnRateFXRateCalc : CharField
    {
        public const int TAG = 42533;

        public LegReturnRateFXRateCalc()
            : base(Tags.LegReturnRateFXRateCalc) { }
        public LegReturnRateFXRateCalc(char val)
            : base(Tags.LegReturnRateFXRateCalc, val) { }


        // Field Enumerations
        public const char MULTIPLY = 'M';
        public const char DIVIDE = 'D';
    }


    /// <summary>
    /// NoLegReturnRates Field
    /// </summary>/
    public sealed class NoLegReturnRates : IntField
    {
        public const int TAG = 42534;

        public NoLegReturnRates()
            : base(Tags.NoLegReturnRates) { }
        public NoLegReturnRates(int val)
            : base(Tags.NoLegReturnRates, val) { }

    }


    /// <summary>
    /// LegReturnRatePriceSequence Field
    /// </summary>/
    public sealed class LegReturnRatePriceSequence : IntField
    {
        public const int TAG = 42535;

        public LegReturnRatePriceSequence()
            : base(Tags.LegReturnRatePriceSequence) { }
        public LegReturnRatePriceSequence(int val)
            : base(Tags.LegReturnRatePriceSequence, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INTERIM = 1;
        public const int FINAL = 2;
    }


    /// <summary>
    /// LegReturnRateCommissionBasis Field
    /// </summary>/
    public sealed class LegReturnRateCommissionBasis : CharField
    {
        public const int TAG = 42536;

        public LegReturnRateCommissionBasis()
            : base(Tags.LegReturnRateCommissionBasis) { }
        public LegReturnRateCommissionBasis(char val)
            : base(Tags.LegReturnRateCommissionBasis, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
    }


    /// <summary>
    /// LegReturnRateCommissionAmount Field
    /// </summary>/
    public sealed class LegReturnRateCommissionAmount : DecimalField
    {
        public const int TAG = 42537;

        public LegReturnRateCommissionAmount()
            : base(Tags.LegReturnRateCommissionAmount) { }
        public LegReturnRateCommissionAmount(Decimal val)
            : base(Tags.LegReturnRateCommissionAmount, val) { }

    }


    /// <summary>
    /// LegReturnRateCommissionCurrency Field
    /// </summary>/
    public sealed class LegReturnRateCommissionCurrency : StringField
    {
        public const int TAG = 42538;

        public LegReturnRateCommissionCurrency()
            : base(Tags.LegReturnRateCommissionCurrency) { }
        public LegReturnRateCommissionCurrency(string val)
            : base(Tags.LegReturnRateCommissionCurrency, val) { }

    }


    /// <summary>
    /// LegReturnRateTotalCommissionPerTrade Field
    /// </summary>/
    public sealed class LegReturnRateTotalCommissionPerTrade : DecimalField
    {
        public const int TAG = 42539;

        public LegReturnRateTotalCommissionPerTrade()
            : base(Tags.LegReturnRateTotalCommissionPerTrade) { }
        public LegReturnRateTotalCommissionPerTrade(Decimal val)
            : base(Tags.LegReturnRateTotalCommissionPerTrade, val) { }

    }


    /// <summary>
    /// LegReturnRateDeterminationMethod Field
    /// </summary>/
    public sealed class LegReturnRateDeterminationMethod : StringField
    {
        public const int TAG = 42540;

        public LegReturnRateDeterminationMethod()
            : base(Tags.LegReturnRateDeterminationMethod) { }
        public LegReturnRateDeterminationMethod(string val)
            : base(Tags.LegReturnRateDeterminationMethod, val) { }

    }


    /// <summary>
    /// LegReturnRateAmountRelativeTo Field
    /// </summary>/
    public sealed class LegReturnRateAmountRelativeTo : IntField
    {
        public const int TAG = 42541;

        public LegReturnRateAmountRelativeTo()
            : base(Tags.LegReturnRateAmountRelativeTo) { }
        public LegReturnRateAmountRelativeTo(int val)
            : base(Tags.LegReturnRateAmountRelativeTo, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteMeasureType Field
    /// </summary>/
    public sealed class LegReturnRateQuoteMeasureType : StringField
    {
        public const int TAG = 42542;

        public LegReturnRateQuoteMeasureType()
            : base(Tags.LegReturnRateQuoteMeasureType) { }
        public LegReturnRateQuoteMeasureType(string val)
            : base(Tags.LegReturnRateQuoteMeasureType, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteUnits Field
    /// </summary>/
    public sealed class LegReturnRateQuoteUnits : StringField
    {
        public const int TAG = 42543;

        public LegReturnRateQuoteUnits()
            : base(Tags.LegReturnRateQuoteUnits) { }
        public LegReturnRateQuoteUnits(string val)
            : base(Tags.LegReturnRateQuoteUnits, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteMethod Field
    /// </summary>/
    public sealed class LegReturnRateQuoteMethod : IntField
    {
        public const int TAG = 42544;

        public LegReturnRateQuoteMethod()
            : base(Tags.LegReturnRateQuoteMethod) { }
        public LegReturnRateQuoteMethod(int val)
            : base(Tags.LegReturnRateQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// LegReturnRateQuoteCurrency Field
    /// </summary>/
    public sealed class LegReturnRateQuoteCurrency : StringField
    {
        public const int TAG = 42545;

        public LegReturnRateQuoteCurrency()
            : base(Tags.LegReturnRateQuoteCurrency) { }
        public LegReturnRateQuoteCurrency(string val)
            : base(Tags.LegReturnRateQuoteCurrency, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteCurrencyType Field
    /// </summary>/
    public sealed class LegReturnRateQuoteCurrencyType : StringField
    {
        public const int TAG = 42546;

        public LegReturnRateQuoteCurrencyType()
            : base(Tags.LegReturnRateQuoteCurrencyType) { }
        public LegReturnRateQuoteCurrencyType(string val)
            : base(Tags.LegReturnRateQuoteCurrencyType, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteTimeType Field
    /// </summary>/
    public sealed class LegReturnRateQuoteTimeType : IntField
    {
        public const int TAG = 42547;

        public LegReturnRateQuoteTimeType()
            : base(Tags.LegReturnRateQuoteTimeType) { }
        public LegReturnRateQuoteTimeType(int val)
            : base(Tags.LegReturnRateQuoteTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// LegReturnRateQuoteTime Field
    /// </summary>/
    public sealed class LegReturnRateQuoteTime : StringField
    {
        public const int TAG = 42548;

        public LegReturnRateQuoteTime()
            : base(Tags.LegReturnRateQuoteTime) { }
        public LegReturnRateQuoteTime(string val)
            : base(Tags.LegReturnRateQuoteTime, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteDate Field
    /// </summary>/
    public sealed class LegReturnRateQuoteDate : StringField
    {
        public const int TAG = 42549;

        public LegReturnRateQuoteDate()
            : base(Tags.LegReturnRateQuoteDate) { }
        public LegReturnRateQuoteDate(string val)
            : base(Tags.LegReturnRateQuoteDate, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteExpirationTime Field
    /// </summary>/
    public sealed class LegReturnRateQuoteExpirationTime : StringField
    {
        public const int TAG = 42550;

        public LegReturnRateQuoteExpirationTime()
            : base(Tags.LegReturnRateQuoteExpirationTime) { }
        public LegReturnRateQuoteExpirationTime(string val)
            : base(Tags.LegReturnRateQuoteExpirationTime, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteBusinessCenter Field
    /// </summary>/
    public sealed class LegReturnRateQuoteBusinessCenter : StringField
    {
        public const int TAG = 42551;

        public LegReturnRateQuoteBusinessCenter()
            : base(Tags.LegReturnRateQuoteBusinessCenter) { }
        public LegReturnRateQuoteBusinessCenter(string val)
            : base(Tags.LegReturnRateQuoteBusinessCenter, val) { }

    }


    /// <summary>
    /// LegReturnRateQuoteExchange Field
    /// </summary>/
    public sealed class LegReturnRateQuoteExchange : StringField
    {
        public const int TAG = 42552;

        public LegReturnRateQuoteExchange()
            : base(Tags.LegReturnRateQuoteExchange) { }
        public LegReturnRateQuoteExchange(string val)
            : base(Tags.LegReturnRateQuoteExchange, val) { }

    }


    /// <summary>
    /// LegReturnRateQuotePricingModel Field
    /// </summary>/
    public sealed class LegReturnRateQuotePricingModel : StringField
    {
        public const int TAG = 42553;

        public LegReturnRateQuotePricingModel()
            : base(Tags.LegReturnRateQuotePricingModel) { }
        public LegReturnRateQuotePricingModel(string val)
            : base(Tags.LegReturnRateQuotePricingModel, val) { }

    }


    /// <summary>
    /// LegReturnRateCashFlowType Field
    /// </summary>/
    public sealed class LegReturnRateCashFlowType : StringField
    {
        public const int TAG = 42554;

        public LegReturnRateCashFlowType()
            : base(Tags.LegReturnRateCashFlowType) { }
        public LegReturnRateCashFlowType(string val)
            : base(Tags.LegReturnRateCashFlowType, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationTimeType Field
    /// </summary>/
    public sealed class LegReturnRateValuationTimeType : IntField
    {
        public const int TAG = 42555;

        public LegReturnRateValuationTimeType()
            : base(Tags.LegReturnRateValuationTimeType) { }
        public LegReturnRateValuationTimeType(int val)
            : base(Tags.LegReturnRateValuationTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// LegReturnRateValuationTime Field
    /// </summary>/
    public sealed class LegReturnRateValuationTime : StringField
    {
        public const int TAG = 42556;

        public LegReturnRateValuationTime()
            : base(Tags.LegReturnRateValuationTime) { }
        public LegReturnRateValuationTime(string val)
            : base(Tags.LegReturnRateValuationTime, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationTimeBusinessCenter Field
    /// </summary>/
    public sealed class LegReturnRateValuationTimeBusinessCenter : StringField
    {
        public const int TAG = 42557;

        public LegReturnRateValuationTimeBusinessCenter()
            : base(Tags.LegReturnRateValuationTimeBusinessCenter) { }
        public LegReturnRateValuationTimeBusinessCenter(string val)
            : base(Tags.LegReturnRateValuationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationPriceOption Field
    /// </summary>/
    public sealed class LegReturnRateValuationPriceOption : IntField
    {
        public const int TAG = 42558;

        public LegReturnRateValuationPriceOption()
            : base(Tags.LegReturnRateValuationPriceOption) { }
        public LegReturnRateValuationPriceOption(int val)
            : base(Tags.LegReturnRateValuationPriceOption, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FUTURES_PRICE = 1;
        public const int OPTIONS_PRICE = 2;
    }


    /// <summary>
    /// LegReturnRateFinalPriceFallback Field
    /// </summary>/
    public sealed class LegReturnRateFinalPriceFallback : IntField
    {
        public const int TAG = 42559;

        public LegReturnRateFinalPriceFallback()
            : base(Tags.LegReturnRateFinalPriceFallback) { }
        public LegReturnRateFinalPriceFallback(int val)
            : base(Tags.LegReturnRateFinalPriceFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// NoLegReturnRateInformationSources Field
    /// </summary>/
    public sealed class NoLegReturnRateInformationSources : IntField
    {
        public const int TAG = 42560;

        public NoLegReturnRateInformationSources()
            : base(Tags.NoLegReturnRateInformationSources) { }
        public NoLegReturnRateInformationSources(int val)
            : base(Tags.NoLegReturnRateInformationSources, val) { }

    }


    /// <summary>
    /// LegReturnRateInformationSource Field
    /// </summary>/
    public sealed class LegReturnRateInformationSource : IntField
    {
        public const int TAG = 42561;

        public LegReturnRateInformationSource()
            : base(Tags.LegReturnRateInformationSource) { }
        public LegReturnRateInformationSource(int val)
            : base(Tags.LegReturnRateInformationSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// LegReturnRateReferencePage Field
    /// </summary>/
    public sealed class LegReturnRateReferencePage : StringField
    {
        public const int TAG = 42562;

        public LegReturnRateReferencePage()
            : base(Tags.LegReturnRateReferencePage) { }
        public LegReturnRateReferencePage(string val)
            : base(Tags.LegReturnRateReferencePage, val) { }

    }


    /// <summary>
    /// LegReturnRateReferencePageHeading Field
    /// </summary>/
    public sealed class LegReturnRateReferencePageHeading : StringField
    {
        public const int TAG = 42563;

        public LegReturnRateReferencePageHeading()
            : base(Tags.LegReturnRateReferencePageHeading) { }
        public LegReturnRateReferencePageHeading(string val)
            : base(Tags.LegReturnRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoLegReturnRatePrices Field
    /// </summary>/
    public sealed class NoLegReturnRatePrices : IntField
    {
        public const int TAG = 42564;

        public NoLegReturnRatePrices()
            : base(Tags.NoLegReturnRatePrices) { }
        public NoLegReturnRatePrices(int val)
            : base(Tags.NoLegReturnRatePrices, val) { }

    }


    /// <summary>
    /// LegReturnRatePriceBasis Field
    /// </summary>/
    public sealed class LegReturnRatePriceBasis : IntField
    {
        public const int TAG = 42565;

        public LegReturnRatePriceBasis()
            : base(Tags.LegReturnRatePriceBasis) { }
        public LegReturnRatePriceBasis(int val)
            : base(Tags.LegReturnRatePriceBasis, val) { }


        // Field Enumerations
        public const int GROSS = 0;
        public const int NET = 1;
        public const int ACCRUED = 2;
        public const int CLEAN_NET = 3;
    }


    /// <summary>
    /// LegReturnRatePrice Field
    /// </summary>/
    public sealed class LegReturnRatePrice : DecimalField
    {
        public const int TAG = 42566;

        public LegReturnRatePrice()
            : base(Tags.LegReturnRatePrice) { }
        public LegReturnRatePrice(Decimal val)
            : base(Tags.LegReturnRatePrice, val) { }

    }


    /// <summary>
    /// LegReturnRatePriceCurrency Field
    /// </summary>/
    public sealed class LegReturnRatePriceCurrency : StringField
    {
        public const int TAG = 42567;

        public LegReturnRatePriceCurrency()
            : base(Tags.LegReturnRatePriceCurrency) { }
        public LegReturnRatePriceCurrency(string val)
            : base(Tags.LegReturnRatePriceCurrency, val) { }

    }


    /// <summary>
    /// LegReturnRatePriceType Field
    /// </summary>/
    public sealed class LegReturnRatePriceType : IntField
    {
        public const int TAG = 42568;

        public LegReturnRatePriceType()
            : base(Tags.LegReturnRatePriceType) { }
        public LegReturnRatePriceType(int val)
            : base(Tags.LegReturnRatePriceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE_TERMS = 0;
        public const int PERCENTAGE_OF_NOTIONAL = 1;
    }


    /// <summary>
    /// NoLegReturnRateValuationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegReturnRateValuationDateBusinessCenters : IntField
    {
        public const int TAG = 42569;

        public NoLegReturnRateValuationDateBusinessCenters()
            : base(Tags.NoLegReturnRateValuationDateBusinessCenters) { }
        public NoLegReturnRateValuationDateBusinessCenters(int val)
            : base(Tags.NoLegReturnRateValuationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationDateBusinessCenter Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateBusinessCenter : StringField
    {
        public const int TAG = 42570;

        public LegReturnRateValuationDateBusinessCenter()
            : base(Tags.LegReturnRateValuationDateBusinessCenter) { }
        public LegReturnRateValuationDateBusinessCenter(string val)
            : base(Tags.LegReturnRateValuationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoLegReturnRateValuationDates Field
    /// </summary>/
    public sealed class NoLegReturnRateValuationDates : IntField
    {
        public const int TAG = 42571;

        public NoLegReturnRateValuationDates()
            : base(Tags.NoLegReturnRateValuationDates) { }
        public NoLegReturnRateValuationDates(int val)
            : base(Tags.NoLegReturnRateValuationDates, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationDate Field
    /// </summary>/
    public sealed class LegReturnRateValuationDate : StringField
    {
        public const int TAG = 42572;

        public LegReturnRateValuationDate()
            : base(Tags.LegReturnRateValuationDate) { }
        public LegReturnRateValuationDate(string val)
            : base(Tags.LegReturnRateValuationDate, val) { }

    }


    /// <summary>
    /// LegReturnRateValuationDateType Field
    /// </summary>/
    public sealed class LegReturnRateValuationDateType : IntField
    {
        public const int TAG = 42573;

        public LegReturnRateValuationDateType()
            : base(Tags.LegReturnRateValuationDateType) { }
        public LegReturnRateValuationDateType(int val)
            : base(Tags.LegReturnRateValuationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// LegSettlMethodElectionDateUnadjusted Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateUnadjusted : StringField
    {
        public const int TAG = 42574;

        public LegSettlMethodElectionDateUnadjusted()
            : base(Tags.LegSettlMethodElectionDateUnadjusted) { }
        public LegSettlMethodElectionDateUnadjusted(string val)
            : base(Tags.LegSettlMethodElectionDateUnadjusted, val) { }

    }


    /// <summary>
    /// LegSettlMethodElectionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateBusinessDayConvention : IntField
    {
        public const int TAG = 42575;

        public LegSettlMethodElectionDateBusinessDayConvention()
            : base(Tags.LegSettlMethodElectionDateBusinessDayConvention) { }
        public LegSettlMethodElectionDateBusinessDayConvention(int val)
            : base(Tags.LegSettlMethodElectionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// LegSettlMethodElectionDateRelativeTo Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateRelativeTo : IntField
    {
        public const int TAG = 42576;

        public LegSettlMethodElectionDateRelativeTo()
            : base(Tags.LegSettlMethodElectionDateRelativeTo) { }
        public LegSettlMethodElectionDateRelativeTo(int val)
            : base(Tags.LegSettlMethodElectionDateRelativeTo, val) { }

    }


    /// <summary>
    /// LegSettlMethodElectionDateOffsetPeriod Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateOffsetPeriod : IntField
    {
        public const int TAG = 42577;

        public LegSettlMethodElectionDateOffsetPeriod()
            : base(Tags.LegSettlMethodElectionDateOffsetPeriod) { }
        public LegSettlMethodElectionDateOffsetPeriod(int val)
            : base(Tags.LegSettlMethodElectionDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// LegSettlMethodElectionDateOffsetUnit Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateOffsetUnit : StringField
    {
        public const int TAG = 42578;

        public LegSettlMethodElectionDateOffsetUnit()
            : base(Tags.LegSettlMethodElectionDateOffsetUnit) { }
        public LegSettlMethodElectionDateOffsetUnit(string val)
            : base(Tags.LegSettlMethodElectionDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// LegSettlMethodElectionDateOffsetDayType Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateOffsetDayType : IntField
    {
        public const int TAG = 42579;

        public LegSettlMethodElectionDateOffsetDayType()
            : base(Tags.LegSettlMethodElectionDateOffsetDayType) { }
        public LegSettlMethodElectionDateOffsetDayType(int val)
            : base(Tags.LegSettlMethodElectionDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// LegSettlMethodElectionDateAdjusted Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateAdjusted : StringField
    {
        public const int TAG = 42580;

        public LegSettlMethodElectionDateAdjusted()
            : base(Tags.LegSettlMethodElectionDateAdjusted) { }
        public LegSettlMethodElectionDateAdjusted(string val)
            : base(Tags.LegSettlMethodElectionDateAdjusted, val) { }

    }


    /// <summary>
    /// NoLegSettlMethodElectionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoLegSettlMethodElectionDateBusinessCenters : IntField
    {
        public const int TAG = 42581;

        public NoLegSettlMethodElectionDateBusinessCenters()
            : base(Tags.NoLegSettlMethodElectionDateBusinessCenters) { }
        public NoLegSettlMethodElectionDateBusinessCenters(int val)
            : base(Tags.NoLegSettlMethodElectionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// LegSettlMethodElectionDateBusinessCenter Field
    /// </summary>/
    public sealed class LegSettlMethodElectionDateBusinessCenter : StringField
    {
        public const int TAG = 42582;

        public LegSettlMethodElectionDateBusinessCenter()
            : base(Tags.LegSettlMethodElectionDateBusinessCenter) { }
        public LegSettlMethodElectionDateBusinessCenter(string val)
            : base(Tags.LegSettlMethodElectionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// LegStreamVersion Field
    /// </summary>/
    public sealed class LegStreamVersion : StringField
    {
        public const int TAG = 42583;

        public LegStreamVersion()
            : base(Tags.LegStreamVersion) { }
        public LegStreamVersion(string val)
            : base(Tags.LegStreamVersion, val) { }

    }


    /// <summary>
    /// LegStreamVersionEffectiveDate Field
    /// </summary>/
    public sealed class LegStreamVersionEffectiveDate : StringField
    {
        public const int TAG = 42584;

        public LegStreamVersionEffectiveDate()
            : base(Tags.LegStreamVersionEffectiveDate) { }
        public LegStreamVersionEffectiveDate(string val)
            : base(Tags.LegStreamVersionEffectiveDate, val) { }

    }


    /// <summary>
    /// LegStreamNotionalDeterminationMethod Field
    /// </summary>/
    public sealed class LegStreamNotionalDeterminationMethod : StringField
    {
        public const int TAG = 42585;

        public LegStreamNotionalDeterminationMethod()
            : base(Tags.LegStreamNotionalDeterminationMethod) { }
        public LegStreamNotionalDeterminationMethod(string val)
            : base(Tags.LegStreamNotionalDeterminationMethod, val) { }

    }


    /// <summary>
    /// LegStreamNotionalAdjustments Field
    /// </summary>/
    public sealed class LegStreamNotionalAdjustments : IntField
    {
        public const int TAG = 42586;

        public LegStreamNotionalAdjustments()
            : base(Tags.LegStreamNotionalAdjustments) { }
        public LegStreamNotionalAdjustments(int val)
            : base(Tags.LegStreamNotionalAdjustments, val) { }


        // Field Enumerations
        public const int EXECUTION = 0;
        public const int PORTFOLIO_REBALANCING = 1;
        public const int STANDARD = 2;
    }


    /// <summary>
    /// StreamCommodityDeliveryPricingRegion Field
    /// </summary>/
    public sealed class StreamCommodityDeliveryPricingRegion : StringField
    {
        public const int TAG = 42587;

        public StreamCommodityDeliveryPricingRegion()
            : base(Tags.StreamCommodityDeliveryPricingRegion) { }
        public StreamCommodityDeliveryPricingRegion(string val)
            : base(Tags.StreamCommodityDeliveryPricingRegion, val) { }

    }


    /// <summary>
    /// LegStreamCommodityDeliveryPricingRegion Field
    /// </summary>/
    public sealed class LegStreamCommodityDeliveryPricingRegion : StringField
    {
        public const int TAG = 42588;

        public LegStreamCommodityDeliveryPricingRegion()
            : base(Tags.LegStreamCommodityDeliveryPricingRegion) { }
        public LegStreamCommodityDeliveryPricingRegion(string val)
            : base(Tags.LegStreamCommodityDeliveryPricingRegion, val) { }

    }


    /// <summary>
    /// UnderlyingStreamCommodityDeliveryPricingRegion Field
    /// </summary>/
    public sealed class UnderlyingStreamCommodityDeliveryPricingRegion : StringField
    {
        public const int TAG = 42589;

        public UnderlyingStreamCommodityDeliveryPricingRegion()
            : base(Tags.UnderlyingStreamCommodityDeliveryPricingRegion) { }
        public UnderlyingStreamCommodityDeliveryPricingRegion(string val)
            : base(Tags.UnderlyingStreamCommodityDeliveryPricingRegion, val) { }

    }


    /// <summary>
    /// SettlMethodElectingPartySide Field
    /// </summary>/
    public sealed class SettlMethodElectingPartySide : IntField
    {
        public const int TAG = 42590;

        public SettlMethodElectingPartySide()
            : base(Tags.SettlMethodElectingPartySide) { }
        public SettlMethodElectingPartySide(int val)
            : base(Tags.SettlMethodElectingPartySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// MakeWholeDate Field
    /// </summary>/
    public sealed class MakeWholeDate : StringField
    {
        public const int TAG = 42591;

        public MakeWholeDate()
            : base(Tags.MakeWholeDate) { }
        public MakeWholeDate(string val)
            : base(Tags.MakeWholeDate, val) { }

    }


    /// <summary>
    /// MakeWholeAmount Field
    /// </summary>/
    public sealed class MakeWholeAmount : DecimalField
    {
        public const int TAG = 42592;

        public MakeWholeAmount()
            : base(Tags.MakeWholeAmount) { }
        public MakeWholeAmount(Decimal val)
            : base(Tags.MakeWholeAmount, val) { }

    }


    /// <summary>
    /// MakeWholeBenchmarkCurveName Field
    /// </summary>/
    public sealed class MakeWholeBenchmarkCurveName : StringField
    {
        public const int TAG = 42593;

        public MakeWholeBenchmarkCurveName()
            : base(Tags.MakeWholeBenchmarkCurveName) { }
        public MakeWholeBenchmarkCurveName(string val)
            : base(Tags.MakeWholeBenchmarkCurveName, val) { }

    }


    /// <summary>
    /// MakeWholeBenchmarkCurvePoint Field
    /// </summary>/
    public sealed class MakeWholeBenchmarkCurvePoint : StringField
    {
        public const int TAG = 42594;

        public MakeWholeBenchmarkCurvePoint()
            : base(Tags.MakeWholeBenchmarkCurvePoint) { }
        public MakeWholeBenchmarkCurvePoint(string val)
            : base(Tags.MakeWholeBenchmarkCurvePoint, val) { }

    }


    /// <summary>
    /// MakeWholeRecallSpread Field
    /// </summary>/
    public sealed class MakeWholeRecallSpread : DecimalField
    {
        public const int TAG = 42595;

        public MakeWholeRecallSpread()
            : base(Tags.MakeWholeRecallSpread) { }
        public MakeWholeRecallSpread(Decimal val)
            : base(Tags.MakeWholeRecallSpread, val) { }

    }


    /// <summary>
    /// MakeWholeBenchmarkQuote Field
    /// </summary>/
    public sealed class MakeWholeBenchmarkQuote : IntField
    {
        public const int TAG = 42596;

        public MakeWholeBenchmarkQuote()
            : base(Tags.MakeWholeBenchmarkQuote) { }
        public MakeWholeBenchmarkQuote(int val)
            : base(Tags.MakeWholeBenchmarkQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// MakeWholeInterpolationMethod Field
    /// </summary>/
    public sealed class MakeWholeInterpolationMethod : IntField
    {
        public const int TAG = 42597;

        public MakeWholeInterpolationMethod()
            : base(Tags.MakeWholeInterpolationMethod) { }
        public MakeWholeInterpolationMethod(int val)
            : base(Tags.MakeWholeInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// PaymentAmountRelativeTo Field
    /// </summary>/
    public sealed class PaymentAmountRelativeTo : IntField
    {
        public const int TAG = 42598;

        public PaymentAmountRelativeTo()
            : base(Tags.PaymentAmountRelativeTo) { }
        public PaymentAmountRelativeTo(int val)
            : base(Tags.PaymentAmountRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentAmountDeterminationMethod Field
    /// </summary>/
    public sealed class PaymentAmountDeterminationMethod : StringField
    {
        public const int TAG = 42599;

        public PaymentAmountDeterminationMethod()
            : base(Tags.PaymentAmountDeterminationMethod) { }
        public PaymentAmountDeterminationMethod(string val)
            : base(Tags.PaymentAmountDeterminationMethod, val) { }

    }


    /// <summary>
    /// PaymentStreamCashSettlIndicator Field
    /// </summary>/
    public sealed class PaymentStreamCashSettlIndicator : BooleanField
    {
        public const int TAG = 42600;

        public PaymentStreamCashSettlIndicator()
            : base(Tags.PaymentStreamCashSettlIndicator) { }
        public PaymentStreamCashSettlIndicator(Boolean val)
            : base(Tags.PaymentStreamCashSettlIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingXIDRef Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingXIDRef : StringField
    {
        public const int TAG = 42601;

        public PaymentStreamCompoundingXIDRef()
            : base(Tags.PaymentStreamCompoundingXIDRef) { }
        public PaymentStreamCompoundingXIDRef(string val)
            : base(Tags.PaymentStreamCompoundingXIDRef, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingSpread Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingSpread : DecimalField
    {
        public const int TAG = 42602;

        public PaymentStreamCompoundingSpread()
            : base(Tags.PaymentStreamCompoundingSpread) { }
        public PaymentStreamCompoundingSpread(Decimal val)
            : base(Tags.PaymentStreamCompoundingSpread, val) { }

    }


    /// <summary>
    /// PaymentStreamInterpolationMethod Field
    /// </summary>/
    public sealed class PaymentStreamInterpolationMethod : IntField
    {
        public const int TAG = 42603;

        public PaymentStreamInterpolationMethod()
            : base(Tags.PaymentStreamInterpolationMethod) { }
        public PaymentStreamInterpolationMethod(int val)
            : base(Tags.PaymentStreamInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// PaymentStreamInterpolationPeriod Field
    /// </summary>/
    public sealed class PaymentStreamInterpolationPeriod : IntField
    {
        public const int TAG = 42604;

        public PaymentStreamInterpolationPeriod()
            : base(Tags.PaymentStreamInterpolationPeriod) { }
        public PaymentStreamInterpolationPeriod(int val)
            : base(Tags.PaymentStreamInterpolationPeriod, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INITIAL_AND_FINAL = 1;
        public const int FINAL = 2;
        public const int ANY_PERIOD = 3;
    }


    /// <summary>
    /// PaymentStreamCompoundingFixedRate Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFixedRate : DecimalField
    {
        public const int TAG = 42605;

        public PaymentStreamCompoundingFixedRate()
            : base(Tags.PaymentStreamCompoundingFixedRate) { }
        public PaymentStreamCompoundingFixedRate(Decimal val)
            : base(Tags.PaymentStreamCompoundingFixedRate, val) { }

    }


    /// <summary>
    /// NoPaymentStreamCompoundingDates Field
    /// </summary>/
    public sealed class NoPaymentStreamCompoundingDates : IntField
    {
        public const int TAG = 42606;

        public NoPaymentStreamCompoundingDates()
            : base(Tags.NoPaymentStreamCompoundingDates) { }
        public NoPaymentStreamCompoundingDates(int val)
            : base(Tags.NoPaymentStreamCompoundingDates, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingDate Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDate : StringField
    {
        public const int TAG = 42607;

        public PaymentStreamCompoundingDate()
            : base(Tags.PaymentStreamCompoundingDate) { }
        public PaymentStreamCompoundingDate(string val)
            : base(Tags.PaymentStreamCompoundingDate, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingDateType Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDateType : IntField
    {
        public const int TAG = 42608;

        public PaymentStreamCompoundingDateType()
            : base(Tags.PaymentStreamCompoundingDateType) { }
        public PaymentStreamCompoundingDateType(int val)
            : base(Tags.PaymentStreamCompoundingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// PaymentStreamCompoundingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 42609;

        public PaymentStreamCompoundingDatesBusinessDayConvention()
            : base(Tags.PaymentStreamCompoundingDatesBusinessDayConvention) { }
        public PaymentStreamCompoundingDatesBusinessDayConvention(int val)
            : base(Tags.PaymentStreamCompoundingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStreamCompoundingDatesRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesRelativeTo : IntField
    {
        public const int TAG = 42610;

        public PaymentStreamCompoundingDatesRelativeTo()
            : base(Tags.PaymentStreamCompoundingDatesRelativeTo) { }
        public PaymentStreamCompoundingDatesRelativeTo(int val)
            : base(Tags.PaymentStreamCompoundingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesOffsetPeriod : IntField
    {
        public const int TAG = 42611;

        public PaymentStreamCompoundingDatesOffsetPeriod()
            : base(Tags.PaymentStreamCompoundingDatesOffsetPeriod) { }
        public PaymentStreamCompoundingDatesOffsetPeriod(int val)
            : base(Tags.PaymentStreamCompoundingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingDatesOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesOffsetUnit : StringField
    {
        public const int TAG = 42612;

        public PaymentStreamCompoundingDatesOffsetUnit()
            : base(Tags.PaymentStreamCompoundingDatesOffsetUnit) { }
        public PaymentStreamCompoundingDatesOffsetUnit(string val)
            : base(Tags.PaymentStreamCompoundingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamCompoundingDatesOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesOffsetDayType : IntField
    {
        public const int TAG = 42613;

        public PaymentStreamCompoundingDatesOffsetDayType()
            : base(Tags.PaymentStreamCompoundingDatesOffsetDayType) { }
        public PaymentStreamCompoundingDatesOffsetDayType(int val)
            : base(Tags.PaymentStreamCompoundingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamCompoundingPeriodSkip Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingPeriodSkip : IntField
    {
        public const int TAG = 42614;

        public PaymentStreamCompoundingPeriodSkip()
            : base(Tags.PaymentStreamCompoundingPeriodSkip) { }
        public PaymentStreamCompoundingPeriodSkip(int val)
            : base(Tags.PaymentStreamCompoundingPeriodSkip, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFrequencyPeriod : IntField
    {
        public const int TAG = 42615;

        public PaymentStreamCompoundingFrequencyPeriod()
            : base(Tags.PaymentStreamCompoundingFrequencyPeriod) { }
        public PaymentStreamCompoundingFrequencyPeriod(int val)
            : base(Tags.PaymentStreamCompoundingFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFrequencyUnit : StringField
    {
        public const int TAG = 42616;

        public PaymentStreamCompoundingFrequencyUnit()
            : base(Tags.PaymentStreamCompoundingFrequencyUnit) { }
        public PaymentStreamCompoundingFrequencyUnit(string val)
            : base(Tags.PaymentStreamCompoundingFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// PaymentStreamCompoundingRollConvention Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRollConvention : StringField
    {
        public const int TAG = 42617;

        public PaymentStreamCompoundingRollConvention()
            : base(Tags.PaymentStreamCompoundingRollConvention) { }
        public PaymentStreamCompoundingRollConvention(string val)
            : base(Tags.PaymentStreamCompoundingRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// PaymentStreamBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 42618;

        public PaymentStreamBoundsFirstDateUnadjusted()
            : base(Tags.PaymentStreamBoundsFirstDateUnadjusted) { }
        public PaymentStreamBoundsFirstDateUnadjusted(string val)
            : base(Tags.PaymentStreamBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 42619;

        public PaymentStreamBoundsLastDateUnadjusted()
            : base(Tags.PaymentStreamBoundsLastDateUnadjusted) { }
        public PaymentStreamBoundsLastDateUnadjusted(string val)
            : base(Tags.PaymentStreamBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// NoPaymentStreamCompoundingDatesBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStreamCompoundingDatesBusinessCenters : IntField
    {
        public const int TAG = 42620;

        public NoPaymentStreamCompoundingDatesBusinessCenters()
            : base(Tags.NoPaymentStreamCompoundingDatesBusinessCenters) { }
        public NoPaymentStreamCompoundingDatesBusinessCenters(int val)
            : base(Tags.NoPaymentStreamCompoundingDatesBusinessCenters, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingDatesBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingDatesBusinessCenter : StringField
    {
        public const int TAG = 42621;

        public PaymentStreamCompoundingDatesBusinessCenter()
            : base(Tags.PaymentStreamCompoundingDatesBusinessCenter) { }
        public PaymentStreamCompoundingDatesBusinessCenter(string val)
            : base(Tags.PaymentStreamCompoundingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateUnadjusted : StringField
    {
        public const int TAG = 42622;

        public PaymentStreamCompoundingEndDateUnadjusted()
            : base(Tags.PaymentStreamCompoundingEndDateUnadjusted) { }
        public PaymentStreamCompoundingEndDateUnadjusted(string val)
            : base(Tags.PaymentStreamCompoundingEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateRelativeTo : IntField
    {
        public const int TAG = 42623;

        public PaymentStreamCompoundingEndDateRelativeTo()
            : base(Tags.PaymentStreamCompoundingEndDateRelativeTo) { }
        public PaymentStreamCompoundingEndDateRelativeTo(int val)
            : base(Tags.PaymentStreamCompoundingEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42624;

        public PaymentStreamCompoundingEndDateOffsetPeriod()
            : base(Tags.PaymentStreamCompoundingEndDateOffsetPeriod) { }
        public PaymentStreamCompoundingEndDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamCompoundingEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateOffsetUnit : StringField
    {
        public const int TAG = 42625;

        public PaymentStreamCompoundingEndDateOffsetUnit()
            : base(Tags.PaymentStreamCompoundingEndDateOffsetUnit) { }
        public PaymentStreamCompoundingEndDateOffsetUnit(string val)
            : base(Tags.PaymentStreamCompoundingEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateOffsetDayType : IntField
    {
        public const int TAG = 42626;

        public PaymentStreamCompoundingEndDateOffsetDayType()
            : base(Tags.PaymentStreamCompoundingEndDateOffsetDayType) { }
        public PaymentStreamCompoundingEndDateOffsetDayType(int val)
            : base(Tags.PaymentStreamCompoundingEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamCompoundingEndDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingEndDateAdjusted : StringField
    {
        public const int TAG = 42627;

        public PaymentStreamCompoundingEndDateAdjusted()
            : base(Tags.PaymentStreamCompoundingEndDateAdjusted) { }
        public PaymentStreamCompoundingEndDateAdjusted(string val)
            : base(Tags.PaymentStreamCompoundingEndDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingRateIndex Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateIndex : StringField
    {
        public const int TAG = 42628;

        public PaymentStreamCompoundingRateIndex()
            : base(Tags.PaymentStreamCompoundingRateIndex) { }
        public PaymentStreamCompoundingRateIndex(string val)
            : base(Tags.PaymentStreamCompoundingRateIndex, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42629;

        public PaymentStreamCompoundingRateIndexCurvePeriod()
            : base(Tags.PaymentStreamCompoundingRateIndexCurvePeriod) { }
        public PaymentStreamCompoundingRateIndexCurvePeriod(int val)
            : base(Tags.PaymentStreamCompoundingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42630;

        public PaymentStreamCompoundingRateIndexCurveUnit()
            : base(Tags.PaymentStreamCompoundingRateIndexCurveUnit) { }
        public PaymentStreamCompoundingRateIndexCurveUnit(string val)
            : base(Tags.PaymentStreamCompoundingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamCompoundingRateMultiplier Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateMultiplier : DecimalField
    {
        public const int TAG = 42631;

        public PaymentStreamCompoundingRateMultiplier()
            : base(Tags.PaymentStreamCompoundingRateMultiplier) { }
        public PaymentStreamCompoundingRateMultiplier(Decimal val)
            : base(Tags.PaymentStreamCompoundingRateMultiplier, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingRateSpread Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateSpread : DecimalField
    {
        public const int TAG = 42632;

        public PaymentStreamCompoundingRateSpread()
            : base(Tags.PaymentStreamCompoundingRateSpread) { }
        public PaymentStreamCompoundingRateSpread(Decimal val)
            : base(Tags.PaymentStreamCompoundingRateSpread, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingRateSpreadPositionType Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateSpreadPositionType : IntField
    {
        public const int TAG = 42633;

        public PaymentStreamCompoundingRateSpreadPositionType()
            : base(Tags.PaymentStreamCompoundingRateSpreadPositionType) { }
        public PaymentStreamCompoundingRateSpreadPositionType(int val)
            : base(Tags.PaymentStreamCompoundingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// PaymentStreamCompoundingRateTreatment Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingRateTreatment : IntField
    {
        public const int TAG = 42634;

        public PaymentStreamCompoundingRateTreatment()
            : base(Tags.PaymentStreamCompoundingRateTreatment) { }
        public PaymentStreamCompoundingRateTreatment(int val)
            : base(Tags.PaymentStreamCompoundingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// PaymentStreamCompoundingCapRate Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingCapRate : DecimalField
    {
        public const int TAG = 42635;

        public PaymentStreamCompoundingCapRate()
            : base(Tags.PaymentStreamCompoundingCapRate) { }
        public PaymentStreamCompoundingCapRate(Decimal val)
            : base(Tags.PaymentStreamCompoundingCapRate, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingCapRateBuySide Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingCapRateBuySide : IntField
    {
        public const int TAG = 42636;

        public PaymentStreamCompoundingCapRateBuySide()
            : base(Tags.PaymentStreamCompoundingCapRateBuySide) { }
        public PaymentStreamCompoundingCapRateBuySide(int val)
            : base(Tags.PaymentStreamCompoundingCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamCompoundingCapRateSellSide Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingCapRateSellSide : IntField
    {
        public const int TAG = 42637;

        public PaymentStreamCompoundingCapRateSellSide()
            : base(Tags.PaymentStreamCompoundingCapRateSellSide) { }
        public PaymentStreamCompoundingCapRateSellSide(int val)
            : base(Tags.PaymentStreamCompoundingCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamCompoundingFloorRate Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFloorRate : DecimalField
    {
        public const int TAG = 42638;

        public PaymentStreamCompoundingFloorRate()
            : base(Tags.PaymentStreamCompoundingFloorRate) { }
        public PaymentStreamCompoundingFloorRate(Decimal val)
            : base(Tags.PaymentStreamCompoundingFloorRate, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingFloorRateBuySide Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFloorRateBuySide : IntField
    {
        public const int TAG = 42639;

        public PaymentStreamCompoundingFloorRateBuySide()
            : base(Tags.PaymentStreamCompoundingFloorRateBuySide) { }
        public PaymentStreamCompoundingFloorRateBuySide(int val)
            : base(Tags.PaymentStreamCompoundingFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamCompoundingFloorRateSellSide Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFloorRateSellSide : IntField
    {
        public const int TAG = 42640;

        public PaymentStreamCompoundingFloorRateSellSide()
            : base(Tags.PaymentStreamCompoundingFloorRateSellSide) { }
        public PaymentStreamCompoundingFloorRateSellSide(int val)
            : base(Tags.PaymentStreamCompoundingFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// PaymentStreamCompoundingInitialRate Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingInitialRate : DecimalField
    {
        public const int TAG = 42641;

        public PaymentStreamCompoundingInitialRate()
            : base(Tags.PaymentStreamCompoundingInitialRate) { }
        public PaymentStreamCompoundingInitialRate(Decimal val)
            : base(Tags.PaymentStreamCompoundingInitialRate, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42642;

        public PaymentStreamCompoundingFinalRateRoundingDirection()
            : base(Tags.PaymentStreamCompoundingFinalRateRoundingDirection) { }
        public PaymentStreamCompoundingFinalRateRoundingDirection(char val)
            : base(Tags.PaymentStreamCompoundingFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// PaymentStreamCompoundingFinalRatePrecision Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingFinalRatePrecision : IntField
    {
        public const int TAG = 42643;

        public PaymentStreamCompoundingFinalRatePrecision()
            : base(Tags.PaymentStreamCompoundingFinalRatePrecision) { }
        public PaymentStreamCompoundingFinalRatePrecision(int val)
            : base(Tags.PaymentStreamCompoundingFinalRatePrecision, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingAveragingMethod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingAveragingMethod : IntField
    {
        public const int TAG = 42644;

        public PaymentStreamCompoundingAveragingMethod()
            : base(Tags.PaymentStreamCompoundingAveragingMethod) { }
        public PaymentStreamCompoundingAveragingMethod(int val)
            : base(Tags.PaymentStreamCompoundingAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// PaymentStreamCompoundingNegativeRateTreatment Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingNegativeRateTreatment : IntField
    {
        public const int TAG = 42645;

        public PaymentStreamCompoundingNegativeRateTreatment()
            : base(Tags.PaymentStreamCompoundingNegativeRateTreatment) { }
        public PaymentStreamCompoundingNegativeRateTreatment(int val)
            : base(Tags.PaymentStreamCompoundingNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateUnadjusted : StringField
    {
        public const int TAG = 42646;

        public PaymentStreamCompoundingStartDateUnadjusted()
            : base(Tags.PaymentStreamCompoundingStartDateUnadjusted) { }
        public PaymentStreamCompoundingStartDateUnadjusted(string val)
            : base(Tags.PaymentStreamCompoundingStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateRelativeTo : IntField
    {
        public const int TAG = 42647;

        public PaymentStreamCompoundingStartDateRelativeTo()
            : base(Tags.PaymentStreamCompoundingStartDateRelativeTo) { }
        public PaymentStreamCompoundingStartDateRelativeTo(int val)
            : base(Tags.PaymentStreamCompoundingStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42648;

        public PaymentStreamCompoundingStartDateOffsetPeriod()
            : base(Tags.PaymentStreamCompoundingStartDateOffsetPeriod) { }
        public PaymentStreamCompoundingStartDateOffsetPeriod(int val)
            : base(Tags.PaymentStreamCompoundingStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateOffsetUnit : StringField
    {
        public const int TAG = 42649;

        public PaymentStreamCompoundingStartDateOffsetUnit()
            : base(Tags.PaymentStreamCompoundingStartDateOffsetUnit) { }
        public PaymentStreamCompoundingStartDateOffsetUnit(string val)
            : base(Tags.PaymentStreamCompoundingStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateOffsetDayType : IntField
    {
        public const int TAG = 42650;

        public PaymentStreamCompoundingStartDateOffsetDayType()
            : base(Tags.PaymentStreamCompoundingStartDateOffsetDayType) { }
        public PaymentStreamCompoundingStartDateOffsetDayType(int val)
            : base(Tags.PaymentStreamCompoundingStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamCompoundingStartDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamCompoundingStartDateAdjusted : StringField
    {
        public const int TAG = 42651;

        public PaymentStreamCompoundingStartDateAdjusted()
            : base(Tags.PaymentStreamCompoundingStartDateAdjusted) { }
        public PaymentStreamCompoundingStartDateAdjusted(string val)
            : base(Tags.PaymentStreamCompoundingStartDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaImageLength Field
    /// </summary>/
    public sealed class PaymentStreamFormulaImageLength : IntField
    {
        public const int TAG = 42652;

        public PaymentStreamFormulaImageLength()
            : base(Tags.PaymentStreamFormulaImageLength) { }
        public PaymentStreamFormulaImageLength(int val)
            : base(Tags.PaymentStreamFormulaImageLength, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaImage Field
    /// </summary>/
    public sealed class PaymentStreamFormulaImage : StringField
    {
        public const int TAG = 42653;

        public PaymentStreamFormulaImage()
            : base(Tags.PaymentStreamFormulaImage) { }
        public PaymentStreamFormulaImage(string val)
            : base(Tags.PaymentStreamFormulaImage, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateUnadjusted : StringField
    {
        public const int TAG = 42654;

        public PaymentStreamFinalPricePaymentDateUnadjusted()
            : base(Tags.PaymentStreamFinalPricePaymentDateUnadjusted) { }
        public PaymentStreamFinalPricePaymentDateUnadjusted(string val)
            : base(Tags.PaymentStreamFinalPricePaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateRelativeTo : IntField
    {
        public const int TAG = 42655;

        public PaymentStreamFinalPricePaymentDateRelativeTo()
            : base(Tags.PaymentStreamFinalPricePaymentDateRelativeTo) { }
        public PaymentStreamFinalPricePaymentDateRelativeTo(int val)
            : base(Tags.PaymentStreamFinalPricePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateOffsetfPeriod Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateOffsetfPeriod : IntField
    {
        public const int TAG = 42656;

        public PaymentStreamFinalPricePaymentDateOffsetfPeriod()
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetfPeriod) { }
        public PaymentStreamFinalPricePaymentDateOffsetfPeriod(int val)
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetfPeriod, val) { }

    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42657;

        public PaymentStreamFinalPricePaymentDateOffsetUnit()
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetUnit) { }
        public PaymentStreamFinalPricePaymentDateOffsetUnit(string val)
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42658;

        public PaymentStreamFinalPricePaymentDateOffsetDayType()
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetDayType) { }
        public PaymentStreamFinalPricePaymentDateOffsetDayType(int val)
            : base(Tags.PaymentStreamFinalPricePaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamFinalPricePaymentDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamFinalPricePaymentDateAdjusted : StringField
    {
        public const int TAG = 42659;

        public PaymentStreamFinalPricePaymentDateAdjusted()
            : base(Tags.PaymentStreamFinalPricePaymentDateAdjusted) { }
        public PaymentStreamFinalPricePaymentDateAdjusted(string val)
            : base(Tags.PaymentStreamFinalPricePaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// NoPaymentStreamFixingDates Field
    /// </summary>/
    public sealed class NoPaymentStreamFixingDates : IntField
    {
        public const int TAG = 42660;

        public NoPaymentStreamFixingDates()
            : base(Tags.NoPaymentStreamFixingDates) { }
        public NoPaymentStreamFixingDates(int val)
            : base(Tags.NoPaymentStreamFixingDates, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDate Field
    /// </summary>/
    public sealed class PaymentStreamFixingDate : StringField
    {
        public const int TAG = 42661;

        public PaymentStreamFixingDate()
            : base(Tags.PaymentStreamFixingDate) { }
        public PaymentStreamFixingDate(string val)
            : base(Tags.PaymentStreamFixingDate, val) { }

    }


    /// <summary>
    /// PaymentStreamFixingDateType Field
    /// </summary>/
    public sealed class PaymentStreamFixingDateType : IntField
    {
        public const int TAG = 42662;

        public PaymentStreamFixingDateType()
            : base(Tags.PaymentStreamFixingDateType) { }
        public PaymentStreamFixingDateType(int val)
            : base(Tags.PaymentStreamFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// PaymentStreamFirstObservationDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateUnadjusted : StringField
    {
        public const int TAG = 42663;

        public PaymentStreamFirstObservationDateUnadjusted()
            : base(Tags.PaymentStreamFirstObservationDateUnadjusted) { }
        public PaymentStreamFirstObservationDateUnadjusted(string val)
            : base(Tags.PaymentStreamFirstObservationDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamFirstObservationDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateRelativeTo : IntField
    {
        public const int TAG = 42664;

        public PaymentStreamFirstObservationDateRelativeTo()
            : base(Tags.PaymentStreamFirstObservationDateRelativeTo) { }
        public PaymentStreamFirstObservationDateRelativeTo(int val)
            : base(Tags.PaymentStreamFirstObservationDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStreamFirstObservationDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateOffsetDayType : IntField
    {
        public const int TAG = 42665;

        public PaymentStreamFirstObservationDateOffsetDayType()
            : base(Tags.PaymentStreamFirstObservationDateOffsetDayType) { }
        public PaymentStreamFirstObservationDateOffsetDayType(int val)
            : base(Tags.PaymentStreamFirstObservationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStreamFirstObservationDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStreamFirstObservationDateAdjusted : StringField
    {
        public const int TAG = 42666;

        public PaymentStreamFirstObservationDateAdjusted()
            : base(Tags.PaymentStreamFirstObservationDateAdjusted) { }
        public PaymentStreamFirstObservationDateAdjusted(string val)
            : base(Tags.PaymentStreamFirstObservationDateAdjusted, val) { }

    }


    /// <summary>
    /// PaymentStreamUnderlierRefID Field
    /// </summary>/
    public sealed class PaymentStreamUnderlierRefID : StringField
    {
        public const int TAG = 42667;

        public PaymentStreamUnderlierRefID()
            : base(Tags.PaymentStreamUnderlierRefID) { }
        public PaymentStreamUnderlierRefID(string val)
            : base(Tags.PaymentStreamUnderlierRefID, val) { }

    }


    /// <summary>
    /// ReturnRateNotionalReset Field
    /// </summary>/
    public sealed class ReturnRateNotionalReset : BooleanField
    {
        public const int TAG = 42668;

        public ReturnRateNotionalReset()
            : base(Tags.ReturnRateNotionalReset) { }
        public ReturnRateNotionalReset(Boolean val)
            : base(Tags.ReturnRateNotionalReset, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkInitialLevel Field
    /// </summary>/
    public sealed class PaymentStreamLinkInitialLevel : DecimalField
    {
        public const int TAG = 42669;

        public PaymentStreamLinkInitialLevel()
            : base(Tags.PaymentStreamLinkInitialLevel) { }
        public PaymentStreamLinkInitialLevel(Decimal val)
            : base(Tags.PaymentStreamLinkInitialLevel, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkClosingLevelIndicator Field
    /// </summary>/
    public sealed class PaymentStreamLinkClosingLevelIndicator : BooleanField
    {
        public const int TAG = 42670;

        public PaymentStreamLinkClosingLevelIndicator()
            : base(Tags.PaymentStreamLinkClosingLevelIndicator) { }
        public PaymentStreamLinkClosingLevelIndicator(Boolean val)
            : base(Tags.PaymentStreamLinkClosingLevelIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkExpiringLevelIndicator Field
    /// </summary>/
    public sealed class PaymentStreamLinkExpiringLevelIndicator : BooleanField
    {
        public const int TAG = 42671;

        public PaymentStreamLinkExpiringLevelIndicator()
            : base(Tags.PaymentStreamLinkExpiringLevelIndicator) { }
        public PaymentStreamLinkExpiringLevelIndicator(Boolean val)
            : base(Tags.PaymentStreamLinkExpiringLevelIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkEstimatedTradingDays Field
    /// </summary>/
    public sealed class PaymentStreamLinkEstimatedTradingDays : IntField
    {
        public const int TAG = 42672;

        public PaymentStreamLinkEstimatedTradingDays()
            : base(Tags.PaymentStreamLinkEstimatedTradingDays) { }
        public PaymentStreamLinkEstimatedTradingDays(int val)
            : base(Tags.PaymentStreamLinkEstimatedTradingDays, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkStrikePrice Field
    /// </summary>/
    public sealed class PaymentStreamLinkStrikePrice : DecimalField
    {
        public const int TAG = 42673;

        public PaymentStreamLinkStrikePrice()
            : base(Tags.PaymentStreamLinkStrikePrice) { }
        public PaymentStreamLinkStrikePrice(Decimal val)
            : base(Tags.PaymentStreamLinkStrikePrice, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkStrikePriceType Field
    /// </summary>/
    public sealed class PaymentStreamLinkStrikePriceType : IntField
    {
        public const int TAG = 42674;

        public PaymentStreamLinkStrikePriceType()
            : base(Tags.PaymentStreamLinkStrikePriceType) { }
        public PaymentStreamLinkStrikePriceType(int val)
            : base(Tags.PaymentStreamLinkStrikePriceType, val) { }


        // Field Enumerations
        public const int VOLATILITY = 0;
        public const int VARIANCE = 1;
    }


    /// <summary>
    /// PaymentStreamLinkMaximumBoundary Field
    /// </summary>/
    public sealed class PaymentStreamLinkMaximumBoundary : DecimalField
    {
        public const int TAG = 42675;

        public PaymentStreamLinkMaximumBoundary()
            : base(Tags.PaymentStreamLinkMaximumBoundary) { }
        public PaymentStreamLinkMaximumBoundary(Decimal val)
            : base(Tags.PaymentStreamLinkMaximumBoundary, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkMinimumBoundary Field
    /// </summary>/
    public sealed class PaymentStreamLinkMinimumBoundary : DecimalField
    {
        public const int TAG = 42676;

        public PaymentStreamLinkMinimumBoundary()
            : base(Tags.PaymentStreamLinkMinimumBoundary) { }
        public PaymentStreamLinkMinimumBoundary(Decimal val)
            : base(Tags.PaymentStreamLinkMinimumBoundary, val) { }

    }


    /// <summary>
    /// PaymentStreamLinkNumberOfDataSeries Field
    /// </summary>/
    public sealed class PaymentStreamLinkNumberOfDataSeries : IntField
    {
        public const int TAG = 42677;

        public PaymentStreamLinkNumberOfDataSeries()
            : base(Tags.PaymentStreamLinkNumberOfDataSeries) { }
        public PaymentStreamLinkNumberOfDataSeries(int val)
            : base(Tags.PaymentStreamLinkNumberOfDataSeries, val) { }

    }


    /// <summary>
    /// PaymentStreamVarianceUnadjustedCap Field
    /// </summary>/
    public sealed class PaymentStreamVarianceUnadjustedCap : DecimalField
    {
        public const int TAG = 42678;

        public PaymentStreamVarianceUnadjustedCap()
            : base(Tags.PaymentStreamVarianceUnadjustedCap) { }
        public PaymentStreamVarianceUnadjustedCap(Decimal val)
            : base(Tags.PaymentStreamVarianceUnadjustedCap, val) { }

    }


    /// <summary>
    /// PaymentStreamRealizedVarianceMethod Field
    /// </summary>/
    public sealed class PaymentStreamRealizedVarianceMethod : IntField
    {
        public const int TAG = 42679;

        public PaymentStreamRealizedVarianceMethod()
            : base(Tags.PaymentStreamRealizedVarianceMethod) { }
        public PaymentStreamRealizedVarianceMethod(int val)
            : base(Tags.PaymentStreamRealizedVarianceMethod, val) { }


        // Field Enumerations
        public const int PREVIOUS = 0;
        public const int LAST = 1;
        public const int BOTH = 2;
    }


    /// <summary>
    /// PaymentStreamDaysAdjustmentIndicator Field
    /// </summary>/
    public sealed class PaymentStreamDaysAdjustmentIndicator : BooleanField
    {
        public const int TAG = 42680;

        public PaymentStreamDaysAdjustmentIndicator()
            : base(Tags.PaymentStreamDaysAdjustmentIndicator) { }
        public PaymentStreamDaysAdjustmentIndicator(Boolean val)
            : base(Tags.PaymentStreamDaysAdjustmentIndicator, val) { }

    }


    /// <summary>
    /// PaymentStreamNearestExchangeContractRefID Field
    /// </summary>/
    public sealed class PaymentStreamNearestExchangeContractRefID : StringField
    {
        public const int TAG = 42681;

        public PaymentStreamNearestExchangeContractRefID()
            : base(Tags.PaymentStreamNearestExchangeContractRefID) { }
        public PaymentStreamNearestExchangeContractRefID(string val)
            : base(Tags.PaymentStreamNearestExchangeContractRefID, val) { }

    }


    /// <summary>
    /// PaymentStreamVegaNotionalAmount Field
    /// </summary>/
    public sealed class PaymentStreamVegaNotionalAmount : DecimalField
    {
        public const int TAG = 42682;

        public PaymentStreamVegaNotionalAmount()
            : base(Tags.PaymentStreamVegaNotionalAmount) { }
        public PaymentStreamVegaNotionalAmount(Decimal val)
            : base(Tags.PaymentStreamVegaNotionalAmount, val) { }

    }


    /// <summary>
    /// NoPaymentStreamFormulas Field
    /// </summary>/
    public sealed class NoPaymentStreamFormulas : IntField
    {
        public const int TAG = 42683;

        public NoPaymentStreamFormulas()
            : base(Tags.NoPaymentStreamFormulas) { }
        public NoPaymentStreamFormulas(int val)
            : base(Tags.NoPaymentStreamFormulas, val) { }

    }


    /// <summary>
    /// PaymentStreamFormula Field
    /// </summary>/
    public sealed class PaymentStreamFormula : StringField
    {
        public const int TAG = 42684;

        public PaymentStreamFormula()
            : base(Tags.PaymentStreamFormula) { }
        public PaymentStreamFormula(string val)
            : base(Tags.PaymentStreamFormula, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaDesc Field
    /// </summary>/
    public sealed class PaymentStreamFormulaDesc : StringField
    {
        public const int TAG = 42685;

        public PaymentStreamFormulaDesc()
            : base(Tags.PaymentStreamFormulaDesc) { }
        public PaymentStreamFormulaDesc(string val)
            : base(Tags.PaymentStreamFormulaDesc, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaCurrency Field
    /// </summary>/
    public sealed class PaymentStreamFormulaCurrency : StringField
    {
        public const int TAG = 42686;

        public PaymentStreamFormulaCurrency()
            : base(Tags.PaymentStreamFormulaCurrency) { }
        public PaymentStreamFormulaCurrency(string val)
            : base(Tags.PaymentStreamFormulaCurrency, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaCurrencyDeterminationMethod Field
    /// </summary>/
    public sealed class PaymentStreamFormulaCurrencyDeterminationMethod : StringField
    {
        public const int TAG = 42687;

        public PaymentStreamFormulaCurrencyDeterminationMethod()
            : base(Tags.PaymentStreamFormulaCurrencyDeterminationMethod) { }
        public PaymentStreamFormulaCurrencyDeterminationMethod(string val)
            : base(Tags.PaymentStreamFormulaCurrencyDeterminationMethod, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaReferenceAmount Field
    /// </summary>/
    public sealed class PaymentStreamFormulaReferenceAmount : IntField
    {
        public const int TAG = 42688;

        public PaymentStreamFormulaReferenceAmount()
            : base(Tags.PaymentStreamFormulaReferenceAmount) { }
        public PaymentStreamFormulaReferenceAmount(int val)
            : base(Tags.PaymentStreamFormulaReferenceAmount, val) { }

    }


    /// <summary>
    /// PaymentStubEndDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStubEndDateUnadjusted : StringField
    {
        public const int TAG = 42689;

        public PaymentStubEndDateUnadjusted()
            : base(Tags.PaymentStubEndDateUnadjusted) { }
        public PaymentStubEndDateUnadjusted(string val)
            : base(Tags.PaymentStubEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStubEndDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStubEndDateBusinessDayConvention : IntField
    {
        public const int TAG = 42690;

        public PaymentStubEndDateBusinessDayConvention()
            : base(Tags.PaymentStubEndDateBusinessDayConvention) { }
        public PaymentStubEndDateBusinessDayConvention(int val)
            : base(Tags.PaymentStubEndDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStubEndDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStubEndDateRelativeTo : IntField
    {
        public const int TAG = 42691;

        public PaymentStubEndDateRelativeTo()
            : base(Tags.PaymentStubEndDateRelativeTo) { }
        public PaymentStubEndDateRelativeTo(int val)
            : base(Tags.PaymentStubEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStubEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStubEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42692;

        public PaymentStubEndDateOffsetPeriod()
            : base(Tags.PaymentStubEndDateOffsetPeriod) { }
        public PaymentStubEndDateOffsetPeriod(int val)
            : base(Tags.PaymentStubEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStubEndDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStubEndDateOffsetUnit : StringField
    {
        public const int TAG = 42693;

        public PaymentStubEndDateOffsetUnit()
            : base(Tags.PaymentStubEndDateOffsetUnit) { }
        public PaymentStubEndDateOffsetUnit(string val)
            : base(Tags.PaymentStubEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStubEndDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStubEndDateOffsetDayType : IntField
    {
        public const int TAG = 42694;

        public PaymentStubEndDateOffsetDayType()
            : base(Tags.PaymentStubEndDateOffsetDayType) { }
        public PaymentStubEndDateOffsetDayType(int val)
            : base(Tags.PaymentStubEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStubEndDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStubEndDateAdjusted : StringField
    {
        public const int TAG = 42695;

        public PaymentStubEndDateAdjusted()
            : base(Tags.PaymentStubEndDateAdjusted) { }
        public PaymentStubEndDateAdjusted(string val)
            : base(Tags.PaymentStubEndDateAdjusted, val) { }

    }


    /// <summary>
    /// NoPaymentStubEndDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStubEndDateBusinessCenters : IntField
    {
        public const int TAG = 42696;

        public NoPaymentStubEndDateBusinessCenters()
            : base(Tags.NoPaymentStubEndDateBusinessCenters) { }
        public NoPaymentStubEndDateBusinessCenters(int val)
            : base(Tags.NoPaymentStubEndDateBusinessCenters, val) { }

    }


    /// <summary>
    /// PaymentStubEndDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStubEndDateBusinessCenter : StringField
    {
        public const int TAG = 42697;

        public PaymentStubEndDateBusinessCenter()
            : base(Tags.PaymentStubEndDateBusinessCenter) { }
        public PaymentStubEndDateBusinessCenter(string val)
            : base(Tags.PaymentStubEndDateBusinessCenter, val) { }

    }


    /// <summary>
    /// PaymentStubStartDateUnadjusted Field
    /// </summary>/
    public sealed class PaymentStubStartDateUnadjusted : StringField
    {
        public const int TAG = 42698;

        public PaymentStubStartDateUnadjusted()
            : base(Tags.PaymentStubStartDateUnadjusted) { }
        public PaymentStubStartDateUnadjusted(string val)
            : base(Tags.PaymentStubStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// PaymentStubStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class PaymentStubStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 42699;

        public PaymentStubStartDateBusinessDayConvention()
            : base(Tags.PaymentStubStartDateBusinessDayConvention) { }
        public PaymentStubStartDateBusinessDayConvention(int val)
            : base(Tags.PaymentStubStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// PaymentStubStartDateRelativeTo Field
    /// </summary>/
    public sealed class PaymentStubStartDateRelativeTo : IntField
    {
        public const int TAG = 42700;

        public PaymentStubStartDateRelativeTo()
            : base(Tags.PaymentStubStartDateRelativeTo) { }
        public PaymentStubStartDateRelativeTo(int val)
            : base(Tags.PaymentStubStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// PaymentStubStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class PaymentStubStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42701;

        public PaymentStubStartDateOffsetPeriod()
            : base(Tags.PaymentStubStartDateOffsetPeriod) { }
        public PaymentStubStartDateOffsetPeriod(int val)
            : base(Tags.PaymentStubStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// PaymentStubStartDateOffsetUnit Field
    /// </summary>/
    public sealed class PaymentStubStartDateOffsetUnit : StringField
    {
        public const int TAG = 42702;

        public PaymentStubStartDateOffsetUnit()
            : base(Tags.PaymentStubStartDateOffsetUnit) { }
        public PaymentStubStartDateOffsetUnit(string val)
            : base(Tags.PaymentStubStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStubStartDateOffsetDayType Field
    /// </summary>/
    public sealed class PaymentStubStartDateOffsetDayType : IntField
    {
        public const int TAG = 42703;

        public PaymentStubStartDateOffsetDayType()
            : base(Tags.PaymentStubStartDateOffsetDayType) { }
        public PaymentStubStartDateOffsetDayType(int val)
            : base(Tags.PaymentStubStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// PaymentStubStartDateAdjusted Field
    /// </summary>/
    public sealed class PaymentStubStartDateAdjusted : StringField
    {
        public const int TAG = 42704;

        public PaymentStubStartDateAdjusted()
            : base(Tags.PaymentStubStartDateAdjusted) { }
        public PaymentStubStartDateAdjusted(string val)
            : base(Tags.PaymentStubStartDateAdjusted, val) { }

    }


    /// <summary>
    /// NoPaymentStubStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoPaymentStubStartDateBusinessCenters : IntField
    {
        public const int TAG = 42705;

        public NoPaymentStubStartDateBusinessCenters()
            : base(Tags.NoPaymentStubStartDateBusinessCenters) { }
        public NoPaymentStubStartDateBusinessCenters(int val)
            : base(Tags.NoPaymentStubStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// PaymentStubStartDateBusinessCenter Field
    /// </summary>/
    public sealed class PaymentStubStartDateBusinessCenter : StringField
    {
        public const int TAG = 42706;

        public PaymentStubStartDateBusinessCenter()
            : base(Tags.PaymentStubStartDateBusinessCenter) { }
        public PaymentStubStartDateBusinessCenter(string val)
            : base(Tags.PaymentStubStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// ProvisionBreakFeeElection Field
    /// </summary>/
    public sealed class ProvisionBreakFeeElection : IntField
    {
        public const int TAG = 42707;

        public ProvisionBreakFeeElection()
            : base(Tags.ProvisionBreakFeeElection) { }
        public ProvisionBreakFeeElection(int val)
            : base(Tags.ProvisionBreakFeeElection, val) { }


        // Field Enumerations
        public const int FLAT_FEE = 0;
        public const int AMORTIZED_FEE = 1;
        public const int FUNDING_FEE = 2;
        public const int FLAT_FEE_AND_FUNDING_FEE = 3;
        public const int AMORTIZED_FEE_AND_FUNDING_FEE = 4;
    }


    /// <summary>
    /// ProvisionBreakFeeRate Field
    /// </summary>/
    public sealed class ProvisionBreakFeeRate : DecimalField
    {
        public const int TAG = 42708;

        public ProvisionBreakFeeRate()
            : base(Tags.ProvisionBreakFeeRate) { }
        public ProvisionBreakFeeRate(Decimal val)
            : base(Tags.ProvisionBreakFeeRate, val) { }

    }


    /// <summary>
    /// NoReturnRateDates Field
    /// </summary>/
    public sealed class NoReturnRateDates : IntField
    {
        public const int TAG = 42709;

        public NoReturnRateDates()
            : base(Tags.NoReturnRateDates) { }
        public NoReturnRateDates(int val)
            : base(Tags.NoReturnRateDates, val) { }

    }


    /// <summary>
    /// ReturnRateDateMode Field
    /// </summary>/
    public sealed class ReturnRateDateMode : IntField
    {
        public const int TAG = 42710;

        public ReturnRateDateMode()
            : base(Tags.ReturnRateDateMode) { }
        public ReturnRateDateMode(int val)
            : base(Tags.ReturnRateDateMode, val) { }


        // Field Enumerations
        public const int PRICE_VALUATION = 0;
        public const int DIVIDEND_VALUATION = 1;
    }


    /// <summary>
    /// ReturnRateValuationDateRelativeTo Field
    /// </summary>/
    public sealed class ReturnRateValuationDateRelativeTo : IntField
    {
        public const int TAG = 42711;

        public ReturnRateValuationDateRelativeTo()
            : base(Tags.ReturnRateValuationDateRelativeTo) { }
        public ReturnRateValuationDateRelativeTo(int val)
            : base(Tags.ReturnRateValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// ReturnRateValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class ReturnRateValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 42712;

        public ReturnRateValuationDateOffsetPeriod()
            : base(Tags.ReturnRateValuationDateOffsetPeriod) { }
        public ReturnRateValuationDateOffsetPeriod(int val)
            : base(Tags.ReturnRateValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ReturnRateValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class ReturnRateValuationDateOffsetUnit : StringField
    {
        public const int TAG = 42713;

        public ReturnRateValuationDateOffsetUnit()
            : base(Tags.ReturnRateValuationDateOffsetUnit) { }
        public ReturnRateValuationDateOffsetUnit(string val)
            : base(Tags.ReturnRateValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ReturnRateValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class ReturnRateValuationDateOffsetDayType : IntField
    {
        public const int TAG = 42714;

        public ReturnRateValuationDateOffsetDayType()
            : base(Tags.ReturnRateValuationDateOffsetDayType) { }
        public ReturnRateValuationDateOffsetDayType(int val)
            : base(Tags.ReturnRateValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ReturnRateValuationStartDateUnadjusted Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateUnadjusted : StringField
    {
        public const int TAG = 42715;

        public ReturnRateValuationStartDateUnadjusted()
            : base(Tags.ReturnRateValuationStartDateUnadjusted) { }
        public ReturnRateValuationStartDateUnadjusted(string val)
            : base(Tags.ReturnRateValuationStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// ReturnRateValuationStartDateRelativeTo Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateRelativeTo : IntField
    {
        public const int TAG = 42716;

        public ReturnRateValuationStartDateRelativeTo()
            : base(Tags.ReturnRateValuationStartDateRelativeTo) { }
        public ReturnRateValuationStartDateRelativeTo(int val)
            : base(Tags.ReturnRateValuationStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// ReturnRateValuationStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42717;

        public ReturnRateValuationStartDateOffsetPeriod()
            : base(Tags.ReturnRateValuationStartDateOffsetPeriod) { }
        public ReturnRateValuationStartDateOffsetPeriod(int val)
            : base(Tags.ReturnRateValuationStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ReturnRateValuationStartDateOffsetUnit Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateOffsetUnit : StringField
    {
        public const int TAG = 42718;

        public ReturnRateValuationStartDateOffsetUnit()
            : base(Tags.ReturnRateValuationStartDateOffsetUnit) { }
        public ReturnRateValuationStartDateOffsetUnit(string val)
            : base(Tags.ReturnRateValuationStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ReturnRateValuationStartDateOffsetDayType Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateOffsetDayType : IntField
    {
        public const int TAG = 42719;

        public ReturnRateValuationStartDateOffsetDayType()
            : base(Tags.ReturnRateValuationStartDateOffsetDayType) { }
        public ReturnRateValuationStartDateOffsetDayType(int val)
            : base(Tags.ReturnRateValuationStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ReturnRateValuationStartDateAdjusted Field
    /// </summary>/
    public sealed class ReturnRateValuationStartDateAdjusted : StringField
    {
        public const int TAG = 42720;

        public ReturnRateValuationStartDateAdjusted()
            : base(Tags.ReturnRateValuationStartDateAdjusted) { }
        public ReturnRateValuationStartDateAdjusted(string val)
            : base(Tags.ReturnRateValuationStartDateAdjusted, val) { }

    }


    /// <summary>
    /// ReturnRateValuationEndDateUnadjusted Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateUnadjusted : StringField
    {
        public const int TAG = 42721;

        public ReturnRateValuationEndDateUnadjusted()
            : base(Tags.ReturnRateValuationEndDateUnadjusted) { }
        public ReturnRateValuationEndDateUnadjusted(string val)
            : base(Tags.ReturnRateValuationEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// ReturnRateValuationEndDateRelativeTo Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateRelativeTo : IntField
    {
        public const int TAG = 42722;

        public ReturnRateValuationEndDateRelativeTo()
            : base(Tags.ReturnRateValuationEndDateRelativeTo) { }
        public ReturnRateValuationEndDateRelativeTo(int val)
            : base(Tags.ReturnRateValuationEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// ReturnRateValuationEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42723;

        public ReturnRateValuationEndDateOffsetPeriod()
            : base(Tags.ReturnRateValuationEndDateOffsetPeriod) { }
        public ReturnRateValuationEndDateOffsetPeriod(int val)
            : base(Tags.ReturnRateValuationEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// ReturnRateValuationEndDateOffsetUnit Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateOffsetUnit : StringField
    {
        public const int TAG = 42724;

        public ReturnRateValuationEndDateOffsetUnit()
            : base(Tags.ReturnRateValuationEndDateOffsetUnit) { }
        public ReturnRateValuationEndDateOffsetUnit(string val)
            : base(Tags.ReturnRateValuationEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// ReturnRateValuationEndDateOffsetDayType Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateOffsetDayType : IntField
    {
        public const int TAG = 42725;

        public ReturnRateValuationEndDateOffsetDayType()
            : base(Tags.ReturnRateValuationEndDateOffsetDayType) { }
        public ReturnRateValuationEndDateOffsetDayType(int val)
            : base(Tags.ReturnRateValuationEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// ReturnRateValuationEndDateAdjusted Field
    /// </summary>/
    public sealed class ReturnRateValuationEndDateAdjusted : StringField
    {
        public const int TAG = 42726;

        public ReturnRateValuationEndDateAdjusted()
            : base(Tags.ReturnRateValuationEndDateAdjusted) { }
        public ReturnRateValuationEndDateAdjusted(string val)
            : base(Tags.ReturnRateValuationEndDateAdjusted, val) { }

    }


    /// <summary>
    /// ReturnRateValuationFrequencyPeriod Field
    /// </summary>/
    public sealed class ReturnRateValuationFrequencyPeriod : IntField
    {
        public const int TAG = 42727;

        public ReturnRateValuationFrequencyPeriod()
            : base(Tags.ReturnRateValuationFrequencyPeriod) { }
        public ReturnRateValuationFrequencyPeriod(int val)
            : base(Tags.ReturnRateValuationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// ReturnRateValuationFrequencyUnit Field
    /// </summary>/
    public sealed class ReturnRateValuationFrequencyUnit : StringField
    {
        public const int TAG = 42728;

        public ReturnRateValuationFrequencyUnit()
            : base(Tags.ReturnRateValuationFrequencyUnit) { }
        public ReturnRateValuationFrequencyUnit(string val)
            : base(Tags.ReturnRateValuationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// ReturnRateValuationFrequencyRollConvention Field
    /// </summary>/
    public sealed class ReturnRateValuationFrequencyRollConvention : StringField
    {
        public const int TAG = 42729;

        public ReturnRateValuationFrequencyRollConvention()
            : base(Tags.ReturnRateValuationFrequencyRollConvention) { }
        public ReturnRateValuationFrequencyRollConvention(string val)
            : base(Tags.ReturnRateValuationFrequencyRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// ReturnRateValuationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class ReturnRateValuationDateBusinessDayConvention : IntField
    {
        public const int TAG = 42730;

        public ReturnRateValuationDateBusinessDayConvention()
            : base(Tags.ReturnRateValuationDateBusinessDayConvention) { }
        public ReturnRateValuationDateBusinessDayConvention(int val)
            : base(Tags.ReturnRateValuationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// NoReturnRateFXConversions Field
    /// </summary>/
    public sealed class NoReturnRateFXConversions : IntField
    {
        public const int TAG = 42731;

        public NoReturnRateFXConversions()
            : base(Tags.NoReturnRateFXConversions) { }
        public NoReturnRateFXConversions(int val)
            : base(Tags.NoReturnRateFXConversions, val) { }

    }


    /// <summary>
    /// ReturnRateFXCurrencySymbol Field
    /// </summary>/
    public sealed class ReturnRateFXCurrencySymbol : StringField
    {
        public const int TAG = 42732;

        public ReturnRateFXCurrencySymbol()
            : base(Tags.ReturnRateFXCurrencySymbol) { }
        public ReturnRateFXCurrencySymbol(string val)
            : base(Tags.ReturnRateFXCurrencySymbol, val) { }

    }


    /// <summary>
    /// ReturnRateFXRate Field
    /// </summary>/
    public sealed class ReturnRateFXRate : DecimalField
    {
        public const int TAG = 42733;

        public ReturnRateFXRate()
            : base(Tags.ReturnRateFXRate) { }
        public ReturnRateFXRate(Decimal val)
            : base(Tags.ReturnRateFXRate, val) { }

    }


    /// <summary>
    /// ReturnRateFXRateCalc Field
    /// </summary>/
    public sealed class ReturnRateFXRateCalc : CharField
    {
        public const int TAG = 42734;

        public ReturnRateFXRateCalc()
            : base(Tags.ReturnRateFXRateCalc) { }
        public ReturnRateFXRateCalc(char val)
            : base(Tags.ReturnRateFXRateCalc, val) { }


        // Field Enumerations
        public const char MULTIPLY = 'M';
        public const char DIVIDE = 'D';
    }


    /// <summary>
    /// NoReturnRates Field
    /// </summary>/
    public sealed class NoReturnRates : IntField
    {
        public const int TAG = 42735;

        public NoReturnRates()
            : base(Tags.NoReturnRates) { }
        public NoReturnRates(int val)
            : base(Tags.NoReturnRates, val) { }

    }


    /// <summary>
    /// ReturnRatePriceSequence Field
    /// </summary>/
    public sealed class ReturnRatePriceSequence : IntField
    {
        public const int TAG = 42736;

        public ReturnRatePriceSequence()
            : base(Tags.ReturnRatePriceSequence) { }
        public ReturnRatePriceSequence(int val)
            : base(Tags.ReturnRatePriceSequence, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INTERIM = 1;
        public const int FINAL = 2;
    }


    /// <summary>
    /// ReturnRateCommissionBasis Field
    /// </summary>/
    public sealed class ReturnRateCommissionBasis : CharField
    {
        public const int TAG = 42737;

        public ReturnRateCommissionBasis()
            : base(Tags.ReturnRateCommissionBasis) { }
        public ReturnRateCommissionBasis(char val)
            : base(Tags.ReturnRateCommissionBasis, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
    }


    /// <summary>
    /// ReturnRateCommissionAmount Field
    /// </summary>/
    public sealed class ReturnRateCommissionAmount : DecimalField
    {
        public const int TAG = 42738;

        public ReturnRateCommissionAmount()
            : base(Tags.ReturnRateCommissionAmount) { }
        public ReturnRateCommissionAmount(Decimal val)
            : base(Tags.ReturnRateCommissionAmount, val) { }

    }


    /// <summary>
    /// ReturnRateCommissionCurrency Field
    /// </summary>/
    public sealed class ReturnRateCommissionCurrency : StringField
    {
        public const int TAG = 42739;

        public ReturnRateCommissionCurrency()
            : base(Tags.ReturnRateCommissionCurrency) { }
        public ReturnRateCommissionCurrency(string val)
            : base(Tags.ReturnRateCommissionCurrency, val) { }

    }


    /// <summary>
    /// ReturnRateTotalCommissionPerTrade Field
    /// </summary>/
    public sealed class ReturnRateTotalCommissionPerTrade : DecimalField
    {
        public const int TAG = 42740;

        public ReturnRateTotalCommissionPerTrade()
            : base(Tags.ReturnRateTotalCommissionPerTrade) { }
        public ReturnRateTotalCommissionPerTrade(Decimal val)
            : base(Tags.ReturnRateTotalCommissionPerTrade, val) { }

    }


    /// <summary>
    /// ReturnRateDeterminationMethod Field
    /// </summary>/
    public sealed class ReturnRateDeterminationMethod : StringField
    {
        public const int TAG = 42741;

        public ReturnRateDeterminationMethod()
            : base(Tags.ReturnRateDeterminationMethod) { }
        public ReturnRateDeterminationMethod(string val)
            : base(Tags.ReturnRateDeterminationMethod, val) { }

    }


    /// <summary>
    /// ReturnRateAmountRelativeTo Field
    /// </summary>/
    public sealed class ReturnRateAmountRelativeTo : IntField
    {
        public const int TAG = 42742;

        public ReturnRateAmountRelativeTo()
            : base(Tags.ReturnRateAmountRelativeTo) { }
        public ReturnRateAmountRelativeTo(int val)
            : base(Tags.ReturnRateAmountRelativeTo, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteMeasureType Field
    /// </summary>/
    public sealed class ReturnRateQuoteMeasureType : StringField
    {
        public const int TAG = 42743;

        public ReturnRateQuoteMeasureType()
            : base(Tags.ReturnRateQuoteMeasureType) { }
        public ReturnRateQuoteMeasureType(string val)
            : base(Tags.ReturnRateQuoteMeasureType, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteUnits Field
    /// </summary>/
    public sealed class ReturnRateQuoteUnits : StringField
    {
        public const int TAG = 42744;

        public ReturnRateQuoteUnits()
            : base(Tags.ReturnRateQuoteUnits) { }
        public ReturnRateQuoteUnits(string val)
            : base(Tags.ReturnRateQuoteUnits, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteMethod Field
    /// </summary>/
    public sealed class ReturnRateQuoteMethod : IntField
    {
        public const int TAG = 42745;

        public ReturnRateQuoteMethod()
            : base(Tags.ReturnRateQuoteMethod) { }
        public ReturnRateQuoteMethod(int val)
            : base(Tags.ReturnRateQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// ReturnRateQuoteCurrency Field
    /// </summary>/
    public sealed class ReturnRateQuoteCurrency : StringField
    {
        public const int TAG = 42746;

        public ReturnRateQuoteCurrency()
            : base(Tags.ReturnRateQuoteCurrency) { }
        public ReturnRateQuoteCurrency(string val)
            : base(Tags.ReturnRateQuoteCurrency, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteCurrencyType Field
    /// </summary>/
    public sealed class ReturnRateQuoteCurrencyType : StringField
    {
        public const int TAG = 42747;

        public ReturnRateQuoteCurrencyType()
            : base(Tags.ReturnRateQuoteCurrencyType) { }
        public ReturnRateQuoteCurrencyType(string val)
            : base(Tags.ReturnRateQuoteCurrencyType, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteTimeType Field
    /// </summary>/
    public sealed class ReturnRateQuoteTimeType : IntField
    {
        public const int TAG = 42748;

        public ReturnRateQuoteTimeType()
            : base(Tags.ReturnRateQuoteTimeType) { }
        public ReturnRateQuoteTimeType(int val)
            : base(Tags.ReturnRateQuoteTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// ReturnRateQuoteTime Field
    /// </summary>/
    public sealed class ReturnRateQuoteTime : StringField
    {
        public const int TAG = 42749;

        public ReturnRateQuoteTime()
            : base(Tags.ReturnRateQuoteTime) { }
        public ReturnRateQuoteTime(string val)
            : base(Tags.ReturnRateQuoteTime, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteDate Field
    /// </summary>/
    public sealed class ReturnRateQuoteDate : StringField
    {
        public const int TAG = 42750;

        public ReturnRateQuoteDate()
            : base(Tags.ReturnRateQuoteDate) { }
        public ReturnRateQuoteDate(string val)
            : base(Tags.ReturnRateQuoteDate, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteExpirationTime Field
    /// </summary>/
    public sealed class ReturnRateQuoteExpirationTime : StringField
    {
        public const int TAG = 42751;

        public ReturnRateQuoteExpirationTime()
            : base(Tags.ReturnRateQuoteExpirationTime) { }
        public ReturnRateQuoteExpirationTime(string val)
            : base(Tags.ReturnRateQuoteExpirationTime, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteBusinessCenter Field
    /// </summary>/
    public sealed class ReturnRateQuoteBusinessCenter : StringField
    {
        public const int TAG = 42752;

        public ReturnRateQuoteBusinessCenter()
            : base(Tags.ReturnRateQuoteBusinessCenter) { }
        public ReturnRateQuoteBusinessCenter(string val)
            : base(Tags.ReturnRateQuoteBusinessCenter, val) { }

    }


    /// <summary>
    /// ReturnRateQuoteExchange Field
    /// </summary>/
    public sealed class ReturnRateQuoteExchange : StringField
    {
        public const int TAG = 42753;

        public ReturnRateQuoteExchange()
            : base(Tags.ReturnRateQuoteExchange) { }
        public ReturnRateQuoteExchange(string val)
            : base(Tags.ReturnRateQuoteExchange, val) { }

    }


    /// <summary>
    /// ReturnRateQuotePricingModel Field
    /// </summary>/
    public sealed class ReturnRateQuotePricingModel : StringField
    {
        public const int TAG = 42754;

        public ReturnRateQuotePricingModel()
            : base(Tags.ReturnRateQuotePricingModel) { }
        public ReturnRateQuotePricingModel(string val)
            : base(Tags.ReturnRateQuotePricingModel, val) { }

    }


    /// <summary>
    /// ReturnRateCashFlowType Field
    /// </summary>/
    public sealed class ReturnRateCashFlowType : StringField
    {
        public const int TAG = 42755;

        public ReturnRateCashFlowType()
            : base(Tags.ReturnRateCashFlowType) { }
        public ReturnRateCashFlowType(string val)
            : base(Tags.ReturnRateCashFlowType, val) { }

    }


    /// <summary>
    /// ReturnRateValuationTimeType Field
    /// </summary>/
    public sealed class ReturnRateValuationTimeType : IntField
    {
        public const int TAG = 42756;

        public ReturnRateValuationTimeType()
            : base(Tags.ReturnRateValuationTimeType) { }
        public ReturnRateValuationTimeType(int val)
            : base(Tags.ReturnRateValuationTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// ReturnRateValuationTime Field
    /// </summary>/
    public sealed class ReturnRateValuationTime : StringField
    {
        public const int TAG = 42757;

        public ReturnRateValuationTime()
            : base(Tags.ReturnRateValuationTime) { }
        public ReturnRateValuationTime(string val)
            : base(Tags.ReturnRateValuationTime, val) { }

    }


    /// <summary>
    /// ReturnRateValuationTimeBusinessCenter Field
    /// </summary>/
    public sealed class ReturnRateValuationTimeBusinessCenter : StringField
    {
        public const int TAG = 42758;

        public ReturnRateValuationTimeBusinessCenter()
            : base(Tags.ReturnRateValuationTimeBusinessCenter) { }
        public ReturnRateValuationTimeBusinessCenter(string val)
            : base(Tags.ReturnRateValuationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// ReturnRateValuationPriceOption Field
    /// </summary>/
    public sealed class ReturnRateValuationPriceOption : IntField
    {
        public const int TAG = 42759;

        public ReturnRateValuationPriceOption()
            : base(Tags.ReturnRateValuationPriceOption) { }
        public ReturnRateValuationPriceOption(int val)
            : base(Tags.ReturnRateValuationPriceOption, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FUTURES_PRICE = 1;
        public const int OPTIONS_PRICE = 2;
    }


    /// <summary>
    /// ReturnRateFinalPriceFallback Field
    /// </summary>/
    public sealed class ReturnRateFinalPriceFallback : IntField
    {
        public const int TAG = 42760;

        public ReturnRateFinalPriceFallback()
            : base(Tags.ReturnRateFinalPriceFallback) { }
        public ReturnRateFinalPriceFallback(int val)
            : base(Tags.ReturnRateFinalPriceFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// NoReturnRateInformationSources Field
    /// </summary>/
    public sealed class NoReturnRateInformationSources : IntField
    {
        public const int TAG = 42761;

        public NoReturnRateInformationSources()
            : base(Tags.NoReturnRateInformationSources) { }
        public NoReturnRateInformationSources(int val)
            : base(Tags.NoReturnRateInformationSources, val) { }

    }


    /// <summary>
    /// ReturnRateInformationSource Field
    /// </summary>/
    public sealed class ReturnRateInformationSource : IntField
    {
        public const int TAG = 42762;

        public ReturnRateInformationSource()
            : base(Tags.ReturnRateInformationSource) { }
        public ReturnRateInformationSource(int val)
            : base(Tags.ReturnRateInformationSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// ReturnRateReferencePage Field
    /// </summary>/
    public sealed class ReturnRateReferencePage : StringField
    {
        public const int TAG = 42763;

        public ReturnRateReferencePage()
            : base(Tags.ReturnRateReferencePage) { }
        public ReturnRateReferencePage(string val)
            : base(Tags.ReturnRateReferencePage, val) { }

    }


    /// <summary>
    /// ReturnRateReferencePageHeading Field
    /// </summary>/
    public sealed class ReturnRateReferencePageHeading : StringField
    {
        public const int TAG = 42764;

        public ReturnRateReferencePageHeading()
            : base(Tags.ReturnRateReferencePageHeading) { }
        public ReturnRateReferencePageHeading(string val)
            : base(Tags.ReturnRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoReturnRatePrices Field
    /// </summary>/
    public sealed class NoReturnRatePrices : IntField
    {
        public const int TAG = 42765;

        public NoReturnRatePrices()
            : base(Tags.NoReturnRatePrices) { }
        public NoReturnRatePrices(int val)
            : base(Tags.NoReturnRatePrices, val) { }

    }


    /// <summary>
    /// ReturnRatePriceBasis Field
    /// </summary>/
    public sealed class ReturnRatePriceBasis : IntField
    {
        public const int TAG = 42766;

        public ReturnRatePriceBasis()
            : base(Tags.ReturnRatePriceBasis) { }
        public ReturnRatePriceBasis(int val)
            : base(Tags.ReturnRatePriceBasis, val) { }


        // Field Enumerations
        public const int GROSS = 0;
        public const int NET = 1;
        public const int ACCRUED = 2;
        public const int CLEAN_NET = 3;
    }


    /// <summary>
    /// ReturnRatePrice Field
    /// </summary>/
    public sealed class ReturnRatePrice : DecimalField
    {
        public const int TAG = 42767;

        public ReturnRatePrice()
            : base(Tags.ReturnRatePrice) { }
        public ReturnRatePrice(Decimal val)
            : base(Tags.ReturnRatePrice, val) { }

    }


    /// <summary>
    /// ReturnRatePriceCurrency Field
    /// </summary>/
    public sealed class ReturnRatePriceCurrency : StringField
    {
        public const int TAG = 42768;

        public ReturnRatePriceCurrency()
            : base(Tags.ReturnRatePriceCurrency) { }
        public ReturnRatePriceCurrency(string val)
            : base(Tags.ReturnRatePriceCurrency, val) { }

    }


    /// <summary>
    /// ReturnRatePriceType Field
    /// </summary>/
    public sealed class ReturnRatePriceType : IntField
    {
        public const int TAG = 42769;

        public ReturnRatePriceType()
            : base(Tags.ReturnRatePriceType) { }
        public ReturnRatePriceType(int val)
            : base(Tags.ReturnRatePriceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE_TERMS = 0;
        public const int PERCENTAGE_OF_NOTIONAL = 1;
    }


    /// <summary>
    /// NoReturnRateValuationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoReturnRateValuationDateBusinessCenters : IntField
    {
        public const int TAG = 42770;

        public NoReturnRateValuationDateBusinessCenters()
            : base(Tags.NoReturnRateValuationDateBusinessCenters) { }
        public NoReturnRateValuationDateBusinessCenters(int val)
            : base(Tags.NoReturnRateValuationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// ReturnRateValuationDateBusinessCenter Field
    /// </summary>/
    public sealed class ReturnRateValuationDateBusinessCenter : StringField
    {
        public const int TAG = 42771;

        public ReturnRateValuationDateBusinessCenter()
            : base(Tags.ReturnRateValuationDateBusinessCenter) { }
        public ReturnRateValuationDateBusinessCenter(string val)
            : base(Tags.ReturnRateValuationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoReturnRateValuationDates Field
    /// </summary>/
    public sealed class NoReturnRateValuationDates : IntField
    {
        public const int TAG = 42772;

        public NoReturnRateValuationDates()
            : base(Tags.NoReturnRateValuationDates) { }
        public NoReturnRateValuationDates(int val)
            : base(Tags.NoReturnRateValuationDates, val) { }

    }


    /// <summary>
    /// ReturnRateValuationDate Field
    /// </summary>/
    public sealed class ReturnRateValuationDate : StringField
    {
        public const int TAG = 42773;

        public ReturnRateValuationDate()
            : base(Tags.ReturnRateValuationDate) { }
        public ReturnRateValuationDate(string val)
            : base(Tags.ReturnRateValuationDate, val) { }

    }


    /// <summary>
    /// ReturnRateValuationDateType Field
    /// </summary>/
    public sealed class ReturnRateValuationDateType : IntField
    {
        public const int TAG = 42774;

        public ReturnRateValuationDateType()
            : base(Tags.ReturnRateValuationDateType) { }
        public ReturnRateValuationDateType(int val)
            : base(Tags.ReturnRateValuationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoSettlMethodElectionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoSettlMethodElectionDateBusinessCenters : IntField
    {
        public const int TAG = 42775;

        public NoSettlMethodElectionDateBusinessCenters()
            : base(Tags.NoSettlMethodElectionDateBusinessCenters) { }
        public NoSettlMethodElectionDateBusinessCenters(int val)
            : base(Tags.NoSettlMethodElectionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// SettlMethodElectionDateBusinessCenter Field
    /// </summary>/
    public sealed class SettlMethodElectionDateBusinessCenter : StringField
    {
        public const int TAG = 42776;

        public SettlMethodElectionDateBusinessCenter()
            : base(Tags.SettlMethodElectionDateBusinessCenter) { }
        public SettlMethodElectionDateBusinessCenter(string val)
            : base(Tags.SettlMethodElectionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// SettlMethodElectionDateUnadjusted Field
    /// </summary>/
    public sealed class SettlMethodElectionDateUnadjusted : StringField
    {
        public const int TAG = 42777;

        public SettlMethodElectionDateUnadjusted()
            : base(Tags.SettlMethodElectionDateUnadjusted) { }
        public SettlMethodElectionDateUnadjusted(string val)
            : base(Tags.SettlMethodElectionDateUnadjusted, val) { }

    }


    /// <summary>
    /// SettlMethodElectionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class SettlMethodElectionDateBusinessDayConvention : IntField
    {
        public const int TAG = 42778;

        public SettlMethodElectionDateBusinessDayConvention()
            : base(Tags.SettlMethodElectionDateBusinessDayConvention) { }
        public SettlMethodElectionDateBusinessDayConvention(int val)
            : base(Tags.SettlMethodElectionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// SettlMethodElectionDateRelativeTo Field
    /// </summary>/
    public sealed class SettlMethodElectionDateRelativeTo : IntField
    {
        public const int TAG = 42779;

        public SettlMethodElectionDateRelativeTo()
            : base(Tags.SettlMethodElectionDateRelativeTo) { }
        public SettlMethodElectionDateRelativeTo(int val)
            : base(Tags.SettlMethodElectionDateRelativeTo, val) { }

    }


    /// <summary>
    /// SettlMethodElectionDateOffsetPeriod Field
    /// </summary>/
    public sealed class SettlMethodElectionDateOffsetPeriod : IntField
    {
        public const int TAG = 42780;

        public SettlMethodElectionDateOffsetPeriod()
            : base(Tags.SettlMethodElectionDateOffsetPeriod) { }
        public SettlMethodElectionDateOffsetPeriod(int val)
            : base(Tags.SettlMethodElectionDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// SettlMethodElectionDateOffsetUnit Field
    /// </summary>/
    public sealed class SettlMethodElectionDateOffsetUnit : StringField
    {
        public const int TAG = 42781;

        public SettlMethodElectionDateOffsetUnit()
            : base(Tags.SettlMethodElectionDateOffsetUnit) { }
        public SettlMethodElectionDateOffsetUnit(string val)
            : base(Tags.SettlMethodElectionDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// SettlMethodElectionDateOffsetDayType Field
    /// </summary>/
    public sealed class SettlMethodElectionDateOffsetDayType : IntField
    {
        public const int TAG = 42782;

        public SettlMethodElectionDateOffsetDayType()
            : base(Tags.SettlMethodElectionDateOffsetDayType) { }
        public SettlMethodElectionDateOffsetDayType(int val)
            : base(Tags.SettlMethodElectionDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// SettlMethodElectionDateAdjusted Field
    /// </summary>/
    public sealed class SettlMethodElectionDateAdjusted : StringField
    {
        public const int TAG = 42783;

        public SettlMethodElectionDateAdjusted()
            : base(Tags.SettlMethodElectionDateAdjusted) { }
        public SettlMethodElectionDateAdjusted(string val)
            : base(Tags.SettlMethodElectionDateAdjusted, val) { }

    }


    /// <summary>
    /// StreamVersion Field
    /// </summary>/
    public sealed class StreamVersion : StringField
    {
        public const int TAG = 42784;

        public StreamVersion()
            : base(Tags.StreamVersion) { }
        public StreamVersion(string val)
            : base(Tags.StreamVersion, val) { }

    }


    /// <summary>
    /// StreamVersionEffectiveDate Field
    /// </summary>/
    public sealed class StreamVersionEffectiveDate : StringField
    {
        public const int TAG = 42785;

        public StreamVersionEffectiveDate()
            : base(Tags.StreamVersionEffectiveDate) { }
        public StreamVersionEffectiveDate(string val)
            : base(Tags.StreamVersionEffectiveDate, val) { }

    }


    /// <summary>
    /// StreamNotionalDeterminationMethod Field
    /// </summary>/
    public sealed class StreamNotionalDeterminationMethod : StringField
    {
        public const int TAG = 42786;

        public StreamNotionalDeterminationMethod()
            : base(Tags.StreamNotionalDeterminationMethod) { }
        public StreamNotionalDeterminationMethod(string val)
            : base(Tags.StreamNotionalDeterminationMethod, val) { }

    }


    /// <summary>
    /// StreamNotionalAdjustments Field
    /// </summary>/
    public sealed class StreamNotionalAdjustments : IntField
    {
        public const int TAG = 42787;

        public StreamNotionalAdjustments()
            : base(Tags.StreamNotionalAdjustments) { }
        public StreamNotionalAdjustments(int val)
            : base(Tags.StreamNotionalAdjustments, val) { }


        // Field Enumerations
        public const int EXECUTION = 0;
        public const int PORTFOLIO_REBALANCING = 1;
        public const int STANDARD = 2;
    }


    /// <summary>
    /// NoUnderlyingCashSettlDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingCashSettlDateBusinessCenters : IntField
    {
        public const int TAG = 42788;

        public NoUnderlyingCashSettlDateBusinessCenters()
            : base(Tags.NoUnderlyingCashSettlDateBusinessCenters) { }
        public NoUnderlyingCashSettlDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingCashSettlDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateBusinessCenter : StringField
    {
        public const int TAG = 42789;

        public UnderlyingCashSettlDateBusinessCenter()
            : base(Tags.UnderlyingCashSettlDateBusinessCenter) { }
        public UnderlyingCashSettlDateBusinessCenter(string val)
            : base(Tags.UnderlyingCashSettlDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateUnadjusted : StringField
    {
        public const int TAG = 42790;

        public UnderlyingCashSettlDateUnadjusted()
            : base(Tags.UnderlyingCashSettlDateUnadjusted) { }
        public UnderlyingCashSettlDateUnadjusted(string val)
            : base(Tags.UnderlyingCashSettlDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateBusinessDayConvention : IntField
    {
        public const int TAG = 42791;

        public UnderlyingCashSettlDateBusinessDayConvention()
            : base(Tags.UnderlyingCashSettlDateBusinessDayConvention) { }
        public UnderlyingCashSettlDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingCashSettlDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingCashSettlDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateRelativeTo : IntField
    {
        public const int TAG = 42792;

        public UnderlyingCashSettlDateRelativeTo()
            : base(Tags.UnderlyingCashSettlDateRelativeTo) { }
        public UnderlyingCashSettlDateRelativeTo(int val)
            : base(Tags.UnderlyingCashSettlDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateOffsetPeriod : IntField
    {
        public const int TAG = 42793;

        public UnderlyingCashSettlDateOffsetPeriod()
            : base(Tags.UnderlyingCashSettlDateOffsetPeriod) { }
        public UnderlyingCashSettlDateOffsetPeriod(int val)
            : base(Tags.UnderlyingCashSettlDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateOffsetUnit : StringField
    {
        public const int TAG = 42794;

        public UnderlyingCashSettlDateOffsetUnit()
            : base(Tags.UnderlyingCashSettlDateOffsetUnit) { }
        public UnderlyingCashSettlDateOffsetUnit(string val)
            : base(Tags.UnderlyingCashSettlDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingCashSettlDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateOffsetDayType : IntField
    {
        public const int TAG = 42795;

        public UnderlyingCashSettlDateOffsetDayType()
            : base(Tags.UnderlyingCashSettlDateOffsetDayType) { }
        public UnderlyingCashSettlDateOffsetDayType(int val)
            : base(Tags.UnderlyingCashSettlDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingCashSettlDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingCashSettlDateAdjusted : StringField
    {
        public const int TAG = 42796;

        public UnderlyingCashSettlDateAdjusted()
            : base(Tags.UnderlyingCashSettlDateAdjusted) { }
        public UnderlyingCashSettlDateAdjusted(string val)
            : base(Tags.UnderlyingCashSettlDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlPriceSource Field
    /// </summary>/
    public sealed class UnderlyingCashSettlPriceSource : StringField
    {
        public const int TAG = 42797;

        public UnderlyingCashSettlPriceSource()
            : base(Tags.UnderlyingCashSettlPriceSource) { }
        public UnderlyingCashSettlPriceSource(string val)
            : base(Tags.UnderlyingCashSettlPriceSource, val) { }

    }


    /// <summary>
    /// UnderlyingCashSettlPriceDefault Field
    /// </summary>/
    public sealed class UnderlyingCashSettlPriceDefault : IntField
    {
        public const int TAG = 42798;

        public UnderlyingCashSettlPriceDefault()
            : base(Tags.UnderlyingCashSettlPriceDefault) { }
        public UnderlyingCashSettlPriceDefault(int val)
            : base(Tags.UnderlyingCashSettlPriceDefault, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE = 1;
    }


    /// <summary>
    /// NoUnderlyingDividendAccrualPaymentDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingDividendAccrualPaymentDateBusinessCenters : IntField
    {
        public const int TAG = 42799;

        public NoUnderlyingDividendAccrualPaymentDateBusinessCenters()
            : base(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters) { }
        public NoUnderlyingDividendAccrualPaymentDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingDividendAccrualPaymentDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateBusinessCenter : StringField
    {
        public const int TAG = 42800;

        public UnderlyingDividendAccrualPaymentDateBusinessCenter()
            : base(Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter) { }
        public UnderlyingDividendAccrualPaymentDateBusinessCenter(string val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloatingRateIndex Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateIndex : StringField
    {
        public const int TAG = 42801;

        public UnderlyingDividendFloatingRateIndex()
            : base(Tags.UnderlyingDividendFloatingRateIndex) { }
        public UnderlyingDividendFloatingRateIndex(string val)
            : base(Tags.UnderlyingDividendFloatingRateIndex, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloatingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42802;

        public UnderlyingDividendFloatingRateIndexCurvePeriod()
            : base(Tags.UnderlyingDividendFloatingRateIndexCurvePeriod) { }
        public UnderlyingDividendFloatingRateIndexCurvePeriod(int val)
            : base(Tags.UnderlyingDividendFloatingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloatingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42803;

        public UnderlyingDividendFloatingRateIndexCurveUnit()
            : base(Tags.UnderlyingDividendFloatingRateIndexCurveUnit) { }
        public UnderlyingDividendFloatingRateIndexCurveUnit(string val)
            : base(Tags.UnderlyingDividendFloatingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingDividendFloatingRateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateMultiplier : DecimalField
    {
        public const int TAG = 42804;

        public UnderlyingDividendFloatingRateMultiplier()
            : base(Tags.UnderlyingDividendFloatingRateMultiplier) { }
        public UnderlyingDividendFloatingRateMultiplier(Decimal val)
            : base(Tags.UnderlyingDividendFloatingRateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloatingRateSpread Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateSpread : DecimalField
    {
        public const int TAG = 42805;

        public UnderlyingDividendFloatingRateSpread()
            : base(Tags.UnderlyingDividendFloatingRateSpread) { }
        public UnderlyingDividendFloatingRateSpread(Decimal val)
            : base(Tags.UnderlyingDividendFloatingRateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloatingRateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateSpreadPositionType : IntField
    {
        public const int TAG = 42806;

        public UnderlyingDividendFloatingRateSpreadPositionType()
            : base(Tags.UnderlyingDividendFloatingRateSpreadPositionType) { }
        public UnderlyingDividendFloatingRateSpreadPositionType(int val)
            : base(Tags.UnderlyingDividendFloatingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingDividendFloatingRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingDividendFloatingRateTreatment : IntField
    {
        public const int TAG = 42807;

        public UnderlyingDividendFloatingRateTreatment()
            : base(Tags.UnderlyingDividendFloatingRateTreatment) { }
        public UnderlyingDividendFloatingRateTreatment(int val)
            : base(Tags.UnderlyingDividendFloatingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingDividendCapRate Field
    /// </summary>/
    public sealed class UnderlyingDividendCapRate : DecimalField
    {
        public const int TAG = 42808;

        public UnderlyingDividendCapRate()
            : base(Tags.UnderlyingDividendCapRate) { }
        public UnderlyingDividendCapRate(Decimal val)
            : base(Tags.UnderlyingDividendCapRate, val) { }

    }


    /// <summary>
    /// UnderlyingDividendCapRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingDividendCapRateBuySide : IntField
    {
        public const int TAG = 42809;

        public UnderlyingDividendCapRateBuySide()
            : base(Tags.UnderlyingDividendCapRateBuySide) { }
        public UnderlyingDividendCapRateBuySide(int val)
            : base(Tags.UnderlyingDividendCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingDividendCapRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingDividendCapRateSellSide : IntField
    {
        public const int TAG = 42810;

        public UnderlyingDividendCapRateSellSide()
            : base(Tags.UnderlyingDividendCapRateSellSide) { }
        public UnderlyingDividendCapRateSellSide(int val)
            : base(Tags.UnderlyingDividendCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingDividendFloorRate Field
    /// </summary>/
    public sealed class UnderlyingDividendFloorRate : DecimalField
    {
        public const int TAG = 42811;

        public UnderlyingDividendFloorRate()
            : base(Tags.UnderlyingDividendFloorRate) { }
        public UnderlyingDividendFloorRate(Decimal val)
            : base(Tags.UnderlyingDividendFloorRate, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFloorRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingDividendFloorRateBuySide : IntField
    {
        public const int TAG = 42812;

        public UnderlyingDividendFloorRateBuySide()
            : base(Tags.UnderlyingDividendFloorRateBuySide) { }
        public UnderlyingDividendFloorRateBuySide(int val)
            : base(Tags.UnderlyingDividendFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingDividendFloorRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingDividendFloorRateSellSide : IntField
    {
        public const int TAG = 42813;

        public UnderlyingDividendFloorRateSellSide()
            : base(Tags.UnderlyingDividendFloorRateSellSide) { }
        public UnderlyingDividendFloorRateSellSide(int val)
            : base(Tags.UnderlyingDividendFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingDividendInitialRate Field
    /// </summary>/
    public sealed class UnderlyingDividendInitialRate : DecimalField
    {
        public const int TAG = 42814;

        public UnderlyingDividendInitialRate()
            : base(Tags.UnderlyingDividendInitialRate) { }
        public UnderlyingDividendInitialRate(Decimal val)
            : base(Tags.UnderlyingDividendInitialRate, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class UnderlyingDividendFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42815;

        public UnderlyingDividendFinalRateRoundingDirection()
            : base(Tags.UnderlyingDividendFinalRateRoundingDirection) { }
        public UnderlyingDividendFinalRateRoundingDirection(char val)
            : base(Tags.UnderlyingDividendFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// UnderlyingDividendFinalRatePrecision Field
    /// </summary>/
    public sealed class UnderlyingDividendFinalRatePrecision : IntField
    {
        public const int TAG = 42816;

        public UnderlyingDividendFinalRatePrecision()
            : base(Tags.UnderlyingDividendFinalRatePrecision) { }
        public UnderlyingDividendFinalRatePrecision(int val)
            : base(Tags.UnderlyingDividendFinalRatePrecision, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAveragingMethod Field
    /// </summary>/
    public sealed class UnderlyingDividendAveragingMethod : IntField
    {
        public const int TAG = 42817;

        public UnderlyingDividendAveragingMethod()
            : base(Tags.UnderlyingDividendAveragingMethod) { }
        public UnderlyingDividendAveragingMethod(int val)
            : base(Tags.UnderlyingDividendAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// UnderlyingDividendNegativeRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingDividendNegativeRateTreatment : IntField
    {
        public const int TAG = 42818;

        public UnderlyingDividendNegativeRateTreatment()
            : base(Tags.UnderlyingDividendNegativeRateTreatment) { }
        public UnderlyingDividendNegativeRateTreatment(int val)
            : base(Tags.UnderlyingDividendNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42819;

        public UnderlyingDividendAccrualPaymentDateRelativeTo()
            : base(Tags.UnderlyingDividendAccrualPaymentDateRelativeTo) { }
        public UnderlyingDividendAccrualPaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42820;

        public UnderlyingDividendAccrualPaymentDateOffsetPeriod()
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod) { }
        public UnderlyingDividendAccrualPaymentDateOffsetPeriod(int val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42821;

        public UnderlyingDividendAccrualPaymentDateOffsetUnit()
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit) { }
        public UnderlyingDividendAccrualPaymentDateOffsetUnit(string val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42822;

        public UnderlyingDividendAccrualPaymentDateOffsetDayType()
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType) { }
        public UnderlyingDividendAccrualPaymentDateOffsetDayType(int val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42823;

        public UnderlyingDividendAccrualPaymentDateUnadjusted()
            : base(Tags.UnderlyingDividendAccrualPaymentDateUnadjusted) { }
        public UnderlyingDividendAccrualPaymentDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateBusinessDayConvention : IntField
    {
        public const int TAG = 42824;

        public UnderlyingDividendAccrualPaymentDateBusinessDayConvention()
            : base(Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention) { }
        public UnderlyingDividendAccrualPaymentDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingDividendAccrualPaymentDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualPaymentDateAdjusted : StringField
    {
        public const int TAG = 42825;

        public UnderlyingDividendAccrualPaymentDateAdjusted()
            : base(Tags.UnderlyingDividendAccrualPaymentDateAdjusted) { }
        public UnderlyingDividendAccrualPaymentDateAdjusted(string val)
            : base(Tags.UnderlyingDividendAccrualPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendReinvestmentIndicator Field
    /// </summary>/
    public sealed class UnderlyingDividendReinvestmentIndicator : BooleanField
    {
        public const int TAG = 42826;

        public UnderlyingDividendReinvestmentIndicator()
            : base(Tags.UnderlyingDividendReinvestmentIndicator) { }
        public UnderlyingDividendReinvestmentIndicator(Boolean val)
            : base(Tags.UnderlyingDividendReinvestmentIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingDividendEntitlementEvent Field
    /// </summary>/
    public sealed class UnderlyingDividendEntitlementEvent : IntField
    {
        public const int TAG = 42827;

        public UnderlyingDividendEntitlementEvent()
            : base(Tags.UnderlyingDividendEntitlementEvent) { }
        public UnderlyingDividendEntitlementEvent(int val)
            : base(Tags.UnderlyingDividendEntitlementEvent, val) { }


        // Field Enumerations
        public const int EX_DATE = 0;
        public const int RECORD_DATE = 1;
    }


    /// <summary>
    /// UnderlyingDividendAmountType Field
    /// </summary>/
    public sealed class UnderlyingDividendAmountType : IntField
    {
        public const int TAG = 42828;

        public UnderlyingDividendAmountType()
            : base(Tags.UnderlyingDividendAmountType) { }
        public UnderlyingDividendAmountType(int val)
            : base(Tags.UnderlyingDividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// UnderlyingDividendUnderlierRefID Field
    /// </summary>/
    public sealed class UnderlyingDividendUnderlierRefID : StringField
    {
        public const int TAG = 42829;

        public UnderlyingDividendUnderlierRefID()
            : base(Tags.UnderlyingDividendUnderlierRefID) { }
        public UnderlyingDividendUnderlierRefID(string val)
            : base(Tags.UnderlyingDividendUnderlierRefID, val) { }

    }


    /// <summary>
    /// UnderlyingExtraordinaryDividendPartySide Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryDividendPartySide : IntField
    {
        public const int TAG = 42830;

        public UnderlyingExtraordinaryDividendPartySide()
            : base(Tags.UnderlyingExtraordinaryDividendPartySide) { }
        public UnderlyingExtraordinaryDividendPartySide(int val)
            : base(Tags.UnderlyingExtraordinaryDividendPartySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingExtraordinaryDividendAmountType Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryDividendAmountType : IntField
    {
        public const int TAG = 42831;

        public UnderlyingExtraordinaryDividendAmountType()
            : base(Tags.UnderlyingExtraordinaryDividendAmountType) { }
        public UnderlyingExtraordinaryDividendAmountType(int val)
            : base(Tags.UnderlyingExtraordinaryDividendAmountType, val) { }


        // Field Enumerations
        public const int RECORD_AMOUNT = 0;
        public const int EX_AMOUNT = 1;
        public const int PAID_AMOUNT = 2;
        public const int AS_SPECIFIED_IN_MASTER_CONFIRMATION = 3;
    }


    /// <summary>
    /// UnderlyingExtraordinaryDividendCurrency Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryDividendCurrency : StringField
    {
        public const int TAG = 42832;

        public UnderlyingExtraordinaryDividendCurrency()
            : base(Tags.UnderlyingExtraordinaryDividendCurrency) { }
        public UnderlyingExtraordinaryDividendCurrency(string val)
            : base(Tags.UnderlyingExtraordinaryDividendCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingExtraordinaryDividendDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryDividendDeterminationMethod : StringField
    {
        public const int TAG = 42833;

        public UnderlyingExtraordinaryDividendDeterminationMethod()
            : base(Tags.UnderlyingExtraordinaryDividendDeterminationMethod) { }
        public UnderlyingExtraordinaryDividendDeterminationMethod(string val)
            : base(Tags.UnderlyingExtraordinaryDividendDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccrualFixedRate Field
    /// </summary>/
    public sealed class UnderlyingDividendAccrualFixedRate : DecimalField
    {
        public const int TAG = 42834;

        public UnderlyingDividendAccrualFixedRate()
            : base(Tags.UnderlyingDividendAccrualFixedRate) { }
        public UnderlyingDividendAccrualFixedRate(Decimal val)
            : base(Tags.UnderlyingDividendAccrualFixedRate, val) { }

    }


    /// <summary>
    /// UnderlyingDividendCompoundingMethod Field
    /// </summary>/
    public sealed class UnderlyingDividendCompoundingMethod : IntField
    {
        public const int TAG = 42835;

        public UnderlyingDividendCompoundingMethod()
            : base(Tags.UnderlyingDividendCompoundingMethod) { }
        public UnderlyingDividendCompoundingMethod(int val)
            : base(Tags.UnderlyingDividendCompoundingMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FLAT = 1;
        public const int STRAIGHT = 2;
        public const int SPREAD_EXCLUSIVE = 3;
    }


    /// <summary>
    /// UnderlyingDividendNumOfIndexUnits Field
    /// </summary>/
    public sealed class UnderlyingDividendNumOfIndexUnits : IntField
    {
        public const int TAG = 42836;

        public UnderlyingDividendNumOfIndexUnits()
            : base(Tags.UnderlyingDividendNumOfIndexUnits) { }
        public UnderlyingDividendNumOfIndexUnits(int val)
            : base(Tags.UnderlyingDividendNumOfIndexUnits, val) { }

    }


    /// <summary>
    /// UnderlyingDividendCashPercentage Field
    /// </summary>/
    public sealed class UnderlyingDividendCashPercentage : DecimalField
    {
        public const int TAG = 42837;

        public UnderlyingDividendCashPercentage()
            : base(Tags.UnderlyingDividendCashPercentage) { }
        public UnderlyingDividendCashPercentage(Decimal val)
            : base(Tags.UnderlyingDividendCashPercentage, val) { }

    }


    /// <summary>
    /// UnderlyingDividendCashEquivalentPercentage Field
    /// </summary>/
    public sealed class UnderlyingDividendCashEquivalentPercentage : DecimalField
    {
        public const int TAG = 42838;

        public UnderlyingDividendCashEquivalentPercentage()
            : base(Tags.UnderlyingDividendCashEquivalentPercentage) { }
        public UnderlyingDividendCashEquivalentPercentage(Decimal val)
            : base(Tags.UnderlyingDividendCashEquivalentPercentage, val) { }

    }


    /// <summary>
    /// UnderlyingNonCashDividendTreatment Field
    /// </summary>/
    public sealed class UnderlyingNonCashDividendTreatment : IntField
    {
        public const int TAG = 42839;

        public UnderlyingNonCashDividendTreatment()
            : base(Tags.UnderlyingNonCashDividendTreatment) { }
        public UnderlyingNonCashDividendTreatment(int val)
            : base(Tags.UnderlyingNonCashDividendTreatment, val) { }


        // Field Enumerations
        public const int POTENTIAL_ADJUSTMENT_EVENT = 0;
        public const int CASH_EQUIVALENT = 1;
    }


    /// <summary>
    /// UnderlyingDividendComposition Field
    /// </summary>/
    public sealed class UnderlyingDividendComposition : IntField
    {
        public const int TAG = 42840;

        public UnderlyingDividendComposition()
            : base(Tags.UnderlyingDividendComposition) { }
        public UnderlyingDividendComposition(int val)
            : base(Tags.UnderlyingDividendComposition, val) { }


        // Field Enumerations
        public const int EQUITY_AMOUNT_RECEIVER_ELECTION = 0;
        public const int CALCULATION_AGENT_ELECTION = 1;
    }


    /// <summary>
    /// UnderlyingSpecialDividendsIndicator Field
    /// </summary>/
    public sealed class UnderlyingSpecialDividendsIndicator : BooleanField
    {
        public const int TAG = 42841;

        public UnderlyingSpecialDividendsIndicator()
            : base(Tags.UnderlyingSpecialDividendsIndicator) { }
        public UnderlyingSpecialDividendsIndicator(Boolean val)
            : base(Tags.UnderlyingSpecialDividendsIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingMaterialDividendsIndicator Field
    /// </summary>/
    public sealed class UnderlyingMaterialDividendsIndicator : BooleanField
    {
        public const int TAG = 42842;

        public UnderlyingMaterialDividendsIndicator()
            : base(Tags.UnderlyingMaterialDividendsIndicator) { }
        public UnderlyingMaterialDividendsIndicator(Boolean val)
            : base(Tags.UnderlyingMaterialDividendsIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingOptionsExchangeDividendsIndicator Field
    /// </summary>/
    public sealed class UnderlyingOptionsExchangeDividendsIndicator : BooleanField
    {
        public const int TAG = 42843;

        public UnderlyingOptionsExchangeDividendsIndicator()
            : base(Tags.UnderlyingOptionsExchangeDividendsIndicator) { }
        public UnderlyingOptionsExchangeDividendsIndicator(Boolean val)
            : base(Tags.UnderlyingOptionsExchangeDividendsIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingAdditionalDividendsIndicator Field
    /// </summary>/
    public sealed class UnderlyingAdditionalDividendsIndicator : BooleanField
    {
        public const int TAG = 42844;

        public UnderlyingAdditionalDividendsIndicator()
            : base(Tags.UnderlyingAdditionalDividendsIndicator) { }
        public UnderlyingAdditionalDividendsIndicator(Boolean val)
            : base(Tags.UnderlyingAdditionalDividendsIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingAllDividendsIndicator Field
    /// </summary>/
    public sealed class UnderlyingAllDividendsIndicator : BooleanField
    {
        public const int TAG = 42845;

        public UnderlyingAllDividendsIndicator()
            : base(Tags.UnderlyingAllDividendsIndicator) { }
        public UnderlyingAllDividendsIndicator(Boolean val)
            : base(Tags.UnderlyingAllDividendsIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateRelativeTo : IntField
    {
        public const int TAG = 42846;

        public UnderlyingDividendFXTriggerDateRelativeTo()
            : base(Tags.UnderlyingDividendFXTriggerDateRelativeTo) { }
        public UnderlyingDividendFXTriggerDateRelativeTo(int val)
            : base(Tags.UnderlyingDividendFXTriggerDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateOffsetPeriod : IntField
    {
        public const int TAG = 42847;

        public UnderlyingDividendFXTriggerDateOffsetPeriod()
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetPeriod) { }
        public UnderlyingDividendFXTriggerDateOffsetPeriod(int val)
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateOffsetUnit : StringField
    {
        public const int TAG = 42848;

        public UnderlyingDividendFXTriggerDateOffsetUnit()
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetUnit) { }
        public UnderlyingDividendFXTriggerDateOffsetUnit(string val)
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateOffsetDayType : IntField
    {
        public const int TAG = 42849;

        public UnderlyingDividendFXTriggerDateOffsetDayType()
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetDayType) { }
        public UnderlyingDividendFXTriggerDateOffsetDayType(int val)
            : base(Tags.UnderlyingDividendFXTriggerDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateUnadjusted : StringField
    {
        public const int TAG = 42850;

        public UnderlyingDividendFXTriggerDateUnadjusted()
            : base(Tags.UnderlyingDividendFXTriggerDateUnadjusted) { }
        public UnderlyingDividendFXTriggerDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendFXTriggerDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateBusinessDayConvention : IntField
    {
        public const int TAG = 42851;

        public UnderlyingDividendFXTriggerDateBusinessDayConvention()
            : base(Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention) { }
        public UnderlyingDividendFXTriggerDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingDividendFXTriggerDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateAdjusted : StringField
    {
        public const int TAG = 42852;

        public UnderlyingDividendFXTriggerDateAdjusted()
            : base(Tags.UnderlyingDividendFXTriggerDateAdjusted) { }
        public UnderlyingDividendFXTriggerDateAdjusted(string val)
            : base(Tags.UnderlyingDividendFXTriggerDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingDividendFXTriggerDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingDividendFXTriggerDateBusinessCenters : IntField
    {
        public const int TAG = 42853;

        public NoUnderlyingDividendFXTriggerDateBusinessCenters()
            : base(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters) { }
        public NoUnderlyingDividendFXTriggerDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingDividendFXTriggerDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingDividendFXTriggerDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingDividendFXTriggerDateBusinessCenter : StringField
    {
        public const int TAG = 42854;

        public UnderlyingDividendFXTriggerDateBusinessCenter()
            : base(Tags.UnderlyingDividendFXTriggerDateBusinessCenter) { }
        public UnderlyingDividendFXTriggerDateBusinessCenter(string val)
            : base(Tags.UnderlyingDividendFXTriggerDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingDividendPayments Field
    /// </summary>/
    public sealed class NoUnderlyingDividendPayments : IntField
    {
        public const int TAG = 42855;

        public NoUnderlyingDividendPayments()
            : base(Tags.NoUnderlyingDividendPayments) { }
        public NoUnderlyingDividendPayments(int val)
            : base(Tags.NoUnderlyingDividendPayments, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPaymentDate Field
    /// </summary>/
    public sealed class UnderlyingDividendPaymentDate : StringField
    {
        public const int TAG = 42856;

        public UnderlyingDividendPaymentDate()
            : base(Tags.UnderlyingDividendPaymentDate) { }
        public UnderlyingDividendPaymentDate(string val)
            : base(Tags.UnderlyingDividendPaymentDate, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPaymentAmount Field
    /// </summary>/
    public sealed class UnderlyingDividendPaymentAmount : DecimalField
    {
        public const int TAG = 42857;

        public UnderlyingDividendPaymentAmount()
            : base(Tags.UnderlyingDividendPaymentAmount) { }
        public UnderlyingDividendPaymentAmount(Decimal val)
            : base(Tags.UnderlyingDividendPaymentAmount, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPaymentCurrency Field
    /// </summary>/
    public sealed class UnderlyingDividendPaymentCurrency : StringField
    {
        public const int TAG = 42858;

        public UnderlyingDividendPaymentCurrency()
            : base(Tags.UnderlyingDividendPaymentCurrency) { }
        public UnderlyingDividendPaymentCurrency(string val)
            : base(Tags.UnderlyingDividendPaymentCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingDividendAccruedInterest Field
    /// </summary>/
    public sealed class UnderlyingDividendAccruedInterest : DecimalField
    {
        public const int TAG = 42859;

        public UnderlyingDividendAccruedInterest()
            : base(Tags.UnderlyingDividendAccruedInterest) { }
        public UnderlyingDividendAccruedInterest(Decimal val)
            : base(Tags.UnderlyingDividendAccruedInterest, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPayoutRatio Field
    /// </summary>/
    public sealed class UnderlyingDividendPayoutRatio : DecimalField
    {
        public const int TAG = 42860;

        public UnderlyingDividendPayoutRatio()
            : base(Tags.UnderlyingDividendPayoutRatio) { }
        public UnderlyingDividendPayoutRatio(Decimal val)
            : base(Tags.UnderlyingDividendPayoutRatio, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPayoutConditions Field
    /// </summary>/
    public sealed class UnderlyingDividendPayoutConditions : StringField
    {
        public const int TAG = 42861;

        public UnderlyingDividendPayoutConditions()
            : base(Tags.UnderlyingDividendPayoutConditions) { }
        public UnderlyingDividendPayoutConditions(string val)
            : base(Tags.UnderlyingDividendPayoutConditions, val) { }

    }


    /// <summary>
    /// NoUnderlyingDividendPeriods Field
    /// </summary>/
    public sealed class NoUnderlyingDividendPeriods : IntField
    {
        public const int TAG = 42862;

        public NoUnderlyingDividendPeriods()
            : base(Tags.NoUnderlyingDividendPeriods) { }
        public NoUnderlyingDividendPeriods(int val)
            : base(Tags.NoUnderlyingDividendPeriods, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodSequence Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodSequence : IntField
    {
        public const int TAG = 42863;

        public UnderlyingDividendPeriodSequence()
            : base(Tags.UnderlyingDividendPeriodSequence) { }
        public UnderlyingDividendPeriodSequence(int val)
            : base(Tags.UnderlyingDividendPeriodSequence, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodStartDateUnadjusted : StringField
    {
        public const int TAG = 42864;

        public UnderlyingDividendPeriodStartDateUnadjusted()
            : base(Tags.UnderlyingDividendPeriodStartDateUnadjusted) { }
        public UnderlyingDividendPeriodStartDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendPeriodStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodEndDateUnadjusted : StringField
    {
        public const int TAG = 42865;

        public UnderlyingDividendPeriodEndDateUnadjusted()
            : base(Tags.UnderlyingDividendPeriodEndDateUnadjusted) { }
        public UnderlyingDividendPeriodEndDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendPeriodEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodUnderlierRefID Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodUnderlierRefID : StringField
    {
        public const int TAG = 42866;

        public UnderlyingDividendPeriodUnderlierRefID()
            : base(Tags.UnderlyingDividendPeriodUnderlierRefID) { }
        public UnderlyingDividendPeriodUnderlierRefID(string val)
            : base(Tags.UnderlyingDividendPeriodUnderlierRefID, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodStrikePrice Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodStrikePrice : DecimalField
    {
        public const int TAG = 42867;

        public UnderlyingDividendPeriodStrikePrice()
            : base(Tags.UnderlyingDividendPeriodStrikePrice) { }
        public UnderlyingDividendPeriodStrikePrice(Decimal val)
            : base(Tags.UnderlyingDividendPeriodStrikePrice, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodBusinessDayConvention : IntField
    {
        public const int TAG = 42868;

        public UnderlyingDividendPeriodBusinessDayConvention()
            : base(Tags.UnderlyingDividendPeriodBusinessDayConvention) { }
        public UnderlyingDividendPeriodBusinessDayConvention(int val)
            : base(Tags.UnderlyingDividendPeriodBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateUnadjusted : StringField
    {
        public const int TAG = 42869;

        public UnderlyingDividendPeriodValuationDateUnadjusted()
            : base(Tags.UnderlyingDividendPeriodValuationDateUnadjusted) { }
        public UnderlyingDividendPeriodValuationDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendPeriodValuationDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateRelativeTo : IntField
    {
        public const int TAG = 42870;

        public UnderlyingDividendPeriodValuationDateRelativeTo()
            : base(Tags.UnderlyingDividendPeriodValuationDateRelativeTo) { }
        public UnderlyingDividendPeriodValuationDateRelativeTo(int val)
            : base(Tags.UnderlyingDividendPeriodValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 42871;

        public UnderlyingDividendPeriodValuationDateOffsetPeriod()
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod) { }
        public UnderlyingDividendPeriodValuationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateOffsetUnit : StringField
    {
        public const int TAG = 42872;

        public UnderlyingDividendPeriodValuationDateOffsetUnit()
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetUnit) { }
        public UnderlyingDividendPeriodValuationDateOffsetUnit(string val)
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateOffsetDayType : IntField
    {
        public const int TAG = 42873;

        public UnderlyingDividendPeriodValuationDateOffsetDayType()
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetDayType) { }
        public UnderlyingDividendPeriodValuationDateOffsetDayType(int val)
            : base(Tags.UnderlyingDividendPeriodValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingDividendPeriodValuationDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodValuationDateAdjusted : StringField
    {
        public const int TAG = 42874;

        public UnderlyingDividendPeriodValuationDateAdjusted()
            : base(Tags.UnderlyingDividendPeriodValuationDateAdjusted) { }
        public UnderlyingDividendPeriodValuationDateAdjusted(string val)
            : base(Tags.UnderlyingDividendPeriodValuationDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateUnadjusted : StringField
    {
        public const int TAG = 42875;

        public UnderlyingDividendPeriodPaymentDateUnadjusted()
            : base(Tags.UnderlyingDividendPeriodPaymentDateUnadjusted) { }
        public UnderlyingDividendPeriodPaymentDateUnadjusted(string val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateRelativeTo : IntField
    {
        public const int TAG = 42876;

        public UnderlyingDividendPeriodPaymentDateRelativeTo()
            : base(Tags.UnderlyingDividendPeriodPaymentDateRelativeTo) { }
        public UnderlyingDividendPeriodPaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42877;

        public UnderlyingDividendPeriodPaymentDateOffsetPeriod()
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod) { }
        public UnderlyingDividendPeriodPaymentDateOffsetPeriod(int val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42878;

        public UnderlyingDividendPeriodPaymentDateOffsetUnit()
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit) { }
        public UnderlyingDividendPeriodPaymentDateOffsetUnit(string val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42879;

        public UnderlyingDividendPeriodPaymentDateOffsetDayType()
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType) { }
        public UnderlyingDividendPeriodPaymentDateOffsetDayType(int val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingDividendPeriodPaymentDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodPaymentDateAdjusted : StringField
    {
        public const int TAG = 42880;

        public UnderlyingDividendPeriodPaymentDateAdjusted()
            : base(Tags.UnderlyingDividendPeriodPaymentDateAdjusted) { }
        public UnderlyingDividendPeriodPaymentDateAdjusted(string val)
            : base(Tags.UnderlyingDividendPeriodPaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodXID Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodXID : StringField
    {
        public const int TAG = 42881;

        public UnderlyingDividendPeriodXID()
            : base(Tags.UnderlyingDividendPeriodXID) { }
        public UnderlyingDividendPeriodXID(string val)
            : base(Tags.UnderlyingDividendPeriodXID, val) { }

    }


    /// <summary>
    /// NoUnderlyingDividendPeriodBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingDividendPeriodBusinessCenters : IntField
    {
        public const int TAG = 42882;

        public NoUnderlyingDividendPeriodBusinessCenters()
            : base(Tags.NoUnderlyingDividendPeriodBusinessCenters) { }
        public NoUnderlyingDividendPeriodBusinessCenters(int val)
            : base(Tags.NoUnderlyingDividendPeriodBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingDividendPeriodBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingDividendPeriodBusinessCenter : StringField
    {
        public const int TAG = 42883;

        public UnderlyingDividendPeriodBusinessCenter()
            : base(Tags.UnderlyingDividendPeriodBusinessCenter) { }
        public UnderlyingDividendPeriodBusinessCenter(string val)
            : base(Tags.UnderlyingDividendPeriodBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingExtraordinaryEvents Field
    /// </summary>/
    public sealed class NoUnderlyingExtraordinaryEvents : IntField
    {
        public const int TAG = 42884;

        public NoUnderlyingExtraordinaryEvents()
            : base(Tags.NoUnderlyingExtraordinaryEvents) { }
        public NoUnderlyingExtraordinaryEvents(int val)
            : base(Tags.NoUnderlyingExtraordinaryEvents, val) { }

    }


    /// <summary>
    /// UnderlyingExtraordinaryEventType Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryEventType : StringField
    {
        public const int TAG = 42885;

        public UnderlyingExtraordinaryEventType()
            : base(Tags.UnderlyingExtraordinaryEventType) { }
        public UnderlyingExtraordinaryEventType(string val)
            : base(Tags.UnderlyingExtraordinaryEventType, val) { }

    }


    /// <summary>
    /// UnderlyingExtraordinaryEventValue Field
    /// </summary>/
    public sealed class UnderlyingExtraordinaryEventValue : StringField
    {
        public const int TAG = 42886;

        public UnderlyingExtraordinaryEventValue()
            : base(Tags.UnderlyingExtraordinaryEventValue) { }
        public UnderlyingExtraordinaryEventValue(string val)
            : base(Tags.UnderlyingExtraordinaryEventValue, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectingPartySide Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectingPartySide : IntField
    {
        public const int TAG = 42887;

        public UnderlyingSettlMethodElectingPartySide()
            : base(Tags.UnderlyingSettlMethodElectingPartySide) { }
        public UnderlyingSettlMethodElectingPartySide(int val)
            : base(Tags.UnderlyingSettlMethodElectingPartySide, val) { }


        // Field Enumerations
        public const int BUY = 1;
        public const int SELL = 2;
    }


    /// <summary>
    /// UnderlyingMakeWholeDate Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeDate : StringField
    {
        public const int TAG = 42888;

        public UnderlyingMakeWholeDate()
            : base(Tags.UnderlyingMakeWholeDate) { }
        public UnderlyingMakeWholeDate(string val)
            : base(Tags.UnderlyingMakeWholeDate, val) { }

    }


    /// <summary>
    /// UnderlyingMakeWholeAmount Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeAmount : DecimalField
    {
        public const int TAG = 42889;

        public UnderlyingMakeWholeAmount()
            : base(Tags.UnderlyingMakeWholeAmount) { }
        public UnderlyingMakeWholeAmount(Decimal val)
            : base(Tags.UnderlyingMakeWholeAmount, val) { }

    }


    /// <summary>
    /// UnderlyingMakeWholeBenchmarkCurveName Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeBenchmarkCurveName : StringField
    {
        public const int TAG = 42890;

        public UnderlyingMakeWholeBenchmarkCurveName()
            : base(Tags.UnderlyingMakeWholeBenchmarkCurveName) { }
        public UnderlyingMakeWholeBenchmarkCurveName(string val)
            : base(Tags.UnderlyingMakeWholeBenchmarkCurveName, val) { }

    }


    /// <summary>
    /// UnderlyingMakeWholeBenchmarkCurvePoint Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeBenchmarkCurvePoint : StringField
    {
        public const int TAG = 42891;

        public UnderlyingMakeWholeBenchmarkCurvePoint()
            : base(Tags.UnderlyingMakeWholeBenchmarkCurvePoint) { }
        public UnderlyingMakeWholeBenchmarkCurvePoint(string val)
            : base(Tags.UnderlyingMakeWholeBenchmarkCurvePoint, val) { }

    }


    /// <summary>
    /// UnderlyingMakeWholeRecallSpread Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeRecallSpread : DecimalField
    {
        public const int TAG = 42892;

        public UnderlyingMakeWholeRecallSpread()
            : base(Tags.UnderlyingMakeWholeRecallSpread) { }
        public UnderlyingMakeWholeRecallSpread(Decimal val)
            : base(Tags.UnderlyingMakeWholeRecallSpread, val) { }

    }


    /// <summary>
    /// UnderlyingMakeWholeBenchmarkQuote Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeBenchmarkQuote : IntField
    {
        public const int TAG = 42893;

        public UnderlyingMakeWholeBenchmarkQuote()
            : base(Tags.UnderlyingMakeWholeBenchmarkQuote) { }
        public UnderlyingMakeWholeBenchmarkQuote(int val)
            : base(Tags.UnderlyingMakeWholeBenchmarkQuote, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// UnderlyingMakeWholeInterpolationMethod Field
    /// </summary>/
    public sealed class UnderlyingMakeWholeInterpolationMethod : IntField
    {
        public const int TAG = 42894;

        public UnderlyingMakeWholeInterpolationMethod()
            : base(Tags.UnderlyingMakeWholeInterpolationMethod) { }
        public UnderlyingMakeWholeInterpolationMethod(int val)
            : base(Tags.UnderlyingMakeWholeInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCashSettlIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCashSettlIndicator : BooleanField
    {
        public const int TAG = 42895;

        public UnderlyingPaymentStreamCashSettlIndicator()
            : base(Tags.UnderlyingPaymentStreamCashSettlIndicator) { }
        public UnderlyingPaymentStreamCashSettlIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamCashSettlIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingXIDRef Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingXIDRef : StringField
    {
        public const int TAG = 42896;

        public UnderlyingPaymentStreamCompoundingXIDRef()
            : base(Tags.UnderlyingPaymentStreamCompoundingXIDRef) { }
        public UnderlyingPaymentStreamCompoundingXIDRef(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingXIDRef, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingSpread : DecimalField
    {
        public const int TAG = 42897;

        public UnderlyingPaymentStreamCompoundingSpread()
            : base(Tags.UnderlyingPaymentStreamCompoundingSpread) { }
        public UnderlyingPaymentStreamCompoundingSpread(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamInterpolationMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInterpolationMethod : IntField
    {
        public const int TAG = 42898;

        public UnderlyingPaymentStreamInterpolationMethod()
            : base(Tags.UnderlyingPaymentStreamInterpolationMethod) { }
        public UnderlyingPaymentStreamInterpolationMethod(int val)
            : base(Tags.UnderlyingPaymentStreamInterpolationMethod, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int LINEAR_ZERO_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamInterpolationPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamInterpolationPeriod : IntField
    {
        public const int TAG = 42899;

        public UnderlyingPaymentStreamInterpolationPeriod()
            : base(Tags.UnderlyingPaymentStreamInterpolationPeriod) { }
        public UnderlyingPaymentStreamInterpolationPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamInterpolationPeriod, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INITIAL_AND_FINAL = 1;
        public const int FINAL = 2;
        public const int ANY_PERIOD = 3;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFixedRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFixedRate : DecimalField
    {
        public const int TAG = 42900;

        public UnderlyingPaymentStreamCompoundingFixedRate()
            : base(Tags.UnderlyingPaymentStreamCompoundingFixedRate) { }
        public UnderlyingPaymentStreamCompoundingFixedRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFixedRate, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamCompoundingDates Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamCompoundingDates : IntField
    {
        public const int TAG = 42901;

        public NoUnderlyingPaymentStreamCompoundingDates()
            : base(Tags.NoUnderlyingPaymentStreamCompoundingDates) { }
        public NoUnderlyingPaymentStreamCompoundingDates(int val)
            : base(Tags.NoUnderlyingPaymentStreamCompoundingDates, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDate : StringField
    {
        public const int TAG = 42902;

        public UnderlyingPaymentStreamCompoundingDate()
            : base(Tags.UnderlyingPaymentStreamCompoundingDate) { }
        public UnderlyingPaymentStreamCompoundingDate(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDateType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDateType : IntField
    {
        public const int TAG = 42903;

        public UnderlyingPaymentStreamCompoundingDateType()
            : base(Tags.UnderlyingPaymentStreamCompoundingDateType) { }
        public UnderlyingPaymentStreamCompoundingDateType(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention : IntField
    {
        public const int TAG = 42904;

        public UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention) { }
        public UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesRelativeTo : IntField
    {
        public const int TAG = 42905;

        public UnderlyingPaymentStreamCompoundingDatesRelativeTo()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo) { }
        public UnderlyingPaymentStreamCompoundingDatesRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesOffsetPeriod : IntField
    {
        public const int TAG = 42906;

        public UnderlyingPaymentStreamCompoundingDatesOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod) { }
        public UnderlyingPaymentStreamCompoundingDatesOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesOffsetUnit : StringField
    {
        public const int TAG = 42907;

        public UnderlyingPaymentStreamCompoundingDatesOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit) { }
        public UnderlyingPaymentStreamCompoundingDatesOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesOffsetDayType : IntField
    {
        public const int TAG = 42908;

        public UnderlyingPaymentStreamCompoundingDatesOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType) { }
        public UnderlyingPaymentStreamCompoundingDatesOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingPeriodSkip Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingPeriodSkip : IntField
    {
        public const int TAG = 42909;

        public UnderlyingPaymentStreamCompoundingPeriodSkip()
            : base(Tags.UnderlyingPaymentStreamCompoundingPeriodSkip) { }
        public UnderlyingPaymentStreamCompoundingPeriodSkip(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingPeriodSkip, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFrequencyPeriod : IntField
    {
        public const int TAG = 42910;

        public UnderlyingPaymentStreamCompoundingFrequencyPeriod()
            : base(Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod) { }
        public UnderlyingPaymentStreamCompoundingFrequencyPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFrequencyUnit : StringField
    {
        public const int TAG = 42911;

        public UnderlyingPaymentStreamCompoundingFrequencyUnit()
            : base(Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit) { }
        public UnderlyingPaymentStreamCompoundingFrequencyUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRollConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRollConvention : StringField
    {
        public const int TAG = 42912;

        public UnderlyingPaymentStreamCompoundingRollConvention()
            : base(Tags.UnderlyingPaymentStreamCompoundingRollConvention) { }
        public UnderlyingPaymentStreamCompoundingRollConvention(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingPaymentStreamBoundsFirstDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamBoundsFirstDateUnadjusted : StringField
    {
        public const int TAG = 42913;

        public UnderlyingPaymentStreamBoundsFirstDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted) { }
        public UnderlyingPaymentStreamBoundsFirstDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamBoundsFirstDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamBoundsLastDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamBoundsLastDateUnadjusted : StringField
    {
        public const int TAG = 42914;

        public UnderlyingPaymentStreamBoundsLastDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted) { }
        public UnderlyingPaymentStreamBoundsLastDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamBoundsLastDateUnadjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters : IntField
    {
        public const int TAG = 42915;

        public NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters) { }
        public NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStreamCompoundingDatesBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingDatesBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingDatesBusinessCenter : StringField
    {
        public const int TAG = 42916;

        public UnderlyingPaymentStreamCompoundingDatesBusinessCenter()
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter) { }
        public UnderlyingPaymentStreamCompoundingDatesBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingDatesBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateUnadjusted : StringField
    {
        public const int TAG = 42917;

        public UnderlyingPaymentStreamCompoundingEndDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted) { }
        public UnderlyingPaymentStreamCompoundingEndDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateRelativeTo : IntField
    {
        public const int TAG = 42918;

        public UnderlyingPaymentStreamCompoundingEndDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo) { }
        public UnderlyingPaymentStreamCompoundingEndDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42919;

        public UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod) { }
        public UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateOffsetUnit : StringField
    {
        public const int TAG = 42920;

        public UnderlyingPaymentStreamCompoundingEndDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit) { }
        public UnderlyingPaymentStreamCompoundingEndDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateOffsetDayType : IntField
    {
        public const int TAG = 42921;

        public UnderlyingPaymentStreamCompoundingEndDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType) { }
        public UnderlyingPaymentStreamCompoundingEndDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingEndDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingEndDateAdjusted : StringField
    {
        public const int TAG = 42922;

        public UnderlyingPaymentStreamCompoundingEndDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted) { }
        public UnderlyingPaymentStreamCompoundingEndDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingEndDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateIndex Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateIndex : StringField
    {
        public const int TAG = 42923;

        public UnderlyingPaymentStreamCompoundingRateIndex()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndex) { }
        public UnderlyingPaymentStreamCompoundingRateIndex(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndex, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 42924;

        public UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod) { }
        public UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateIndexCurveUnit : StringField
    {
        public const int TAG = 42925;

        public UnderlyingPaymentStreamCompoundingRateIndexCurveUnit()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit) { }
        public UnderlyingPaymentStreamCompoundingRateIndexCurveUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateMultiplier Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateMultiplier : DecimalField
    {
        public const int TAG = 42926;

        public UnderlyingPaymentStreamCompoundingRateMultiplier()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateMultiplier) { }
        public UnderlyingPaymentStreamCompoundingRateMultiplier(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateMultiplier, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateSpread Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateSpread : DecimalField
    {
        public const int TAG = 42927;

        public UnderlyingPaymentStreamCompoundingRateSpread()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateSpread) { }
        public UnderlyingPaymentStreamCompoundingRateSpread(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateSpread, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateSpreadPositionType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateSpreadPositionType : IntField
    {
        public const int TAG = 42928;

        public UnderlyingPaymentStreamCompoundingRateSpreadPositionType()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType) { }
        public UnderlyingPaymentStreamCompoundingRateSpreadPositionType(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateSpreadPositionType, val) { }


        // Field Enumerations
        public const int SHORT = 0;
        public const int LONG = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingRateTreatment : IntField
    {
        public const int TAG = 42929;

        public UnderlyingPaymentStreamCompoundingRateTreatment()
            : base(Tags.UnderlyingPaymentStreamCompoundingRateTreatment) { }
        public UnderlyingPaymentStreamCompoundingRateTreatment(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingRateTreatment, val) { }


        // Field Enumerations
        public const int BOND_EQUIVALENT_YIELD = 0;
        public const int MONEY_MARKET_YIELD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingCapRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingCapRate : DecimalField
    {
        public const int TAG = 42930;

        public UnderlyingPaymentStreamCompoundingCapRate()
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRate) { }
        public UnderlyingPaymentStreamCompoundingCapRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingCapRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingCapRateBuySide : IntField
    {
        public const int TAG = 42931;

        public UnderlyingPaymentStreamCompoundingCapRateBuySide()
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide) { }
        public UnderlyingPaymentStreamCompoundingCapRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingCapRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingCapRateSellSide : IntField
    {
        public const int TAG = 42932;

        public UnderlyingPaymentStreamCompoundingCapRateSellSide()
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide) { }
        public UnderlyingPaymentStreamCompoundingCapRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingCapRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFloorRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFloorRate : DecimalField
    {
        public const int TAG = 42933;

        public UnderlyingPaymentStreamCompoundingFloorRate()
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRate) { }
        public UnderlyingPaymentStreamCompoundingFloorRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFloorRateBuySide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFloorRateBuySide : IntField
    {
        public const int TAG = 42934;

        public UnderlyingPaymentStreamCompoundingFloorRateBuySide()
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide) { }
        public UnderlyingPaymentStreamCompoundingFloorRateBuySide(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRateBuySide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFloorRateSellSide Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFloorRateSellSide : IntField
    {
        public const int TAG = 42935;

        public UnderlyingPaymentStreamCompoundingFloorRateSellSide()
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide) { }
        public UnderlyingPaymentStreamCompoundingFloorRateSellSide(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFloorRateSellSide, val) { }


        // Field Enumerations
        public const int BUYER_OF_THE_TRADE = 1;
        public const int SELLER_OF_THE_TRADE = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingInitialRate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingInitialRate : DecimalField
    {
        public const int TAG = 42936;

        public UnderlyingPaymentStreamCompoundingInitialRate()
            : base(Tags.UnderlyingPaymentStreamCompoundingInitialRate) { }
        public UnderlyingPaymentStreamCompoundingInitialRate(Decimal val)
            : base(Tags.UnderlyingPaymentStreamCompoundingInitialRate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection : CharField
    {
        public const int TAG = 42937;

        public UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection()
            : base(Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection) { }
        public UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection(char val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection, val) { }


        // Field Enumerations
        public const char ROUND_TO_NEAREST = '0';
        public const char ROUND_DOWN = '1';
        public const char ROUND_UP = '2';
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingFinalRatePrecision Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingFinalRatePrecision : IntField
    {
        public const int TAG = 42938;

        public UnderlyingPaymentStreamCompoundingFinalRatePrecision()
            : base(Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision) { }
        public UnderlyingPaymentStreamCompoundingFinalRatePrecision(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingFinalRatePrecision, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingAveragingMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingAveragingMethod : IntField
    {
        public const int TAG = 42939;

        public UnderlyingPaymentStreamCompoundingAveragingMethod()
            : base(Tags.UnderlyingPaymentStreamCompoundingAveragingMethod) { }
        public UnderlyingPaymentStreamCompoundingAveragingMethod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingAveragingMethod, val) { }


        // Field Enumerations
        public const int UNWEIGHTED = 0;
        public const int WEIGHTED = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingNegativeRateTreatment Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingNegativeRateTreatment : IntField
    {
        public const int TAG = 42940;

        public UnderlyingPaymentStreamCompoundingNegativeRateTreatment()
            : base(Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment) { }
        public UnderlyingPaymentStreamCompoundingNegativeRateTreatment(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingNegativeRateTreatment, val) { }


        // Field Enumerations
        public const int ZERO_INTEREST_RATE_METHOD = 0;
        public const int NEGATIVE_INTEREST_RATE_METHOD = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateUnadjusted : StringField
    {
        public const int TAG = 42941;

        public UnderlyingPaymentStreamCompoundingStartDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted) { }
        public UnderlyingPaymentStreamCompoundingStartDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateRelativeTo : IntField
    {
        public const int TAG = 42942;

        public UnderlyingPaymentStreamCompoundingStartDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo) { }
        public UnderlyingPaymentStreamCompoundingStartDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42943;

        public UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod) { }
        public UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateOffsetUnit : StringField
    {
        public const int TAG = 42944;

        public UnderlyingPaymentStreamCompoundingStartDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit) { }
        public UnderlyingPaymentStreamCompoundingStartDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateOffsetDayType : IntField
    {
        public const int TAG = 42945;

        public UnderlyingPaymentStreamCompoundingStartDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType) { }
        public UnderlyingPaymentStreamCompoundingStartDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamCompoundingStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamCompoundingStartDateAdjusted : StringField
    {
        public const int TAG = 42946;

        public UnderlyingPaymentStreamCompoundingStartDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted) { }
        public UnderlyingPaymentStreamCompoundingStartDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamCompoundingStartDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaImageLength Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaImageLength : IntField
    {
        public const int TAG = 42947;

        public UnderlyingPaymentStreamFormulaImageLength()
            : base(Tags.UnderlyingPaymentStreamFormulaImageLength) { }
        public UnderlyingPaymentStreamFormulaImageLength(int val)
            : base(Tags.UnderlyingPaymentStreamFormulaImageLength, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaImage Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaImage : StringField
    {
        public const int TAG = 42948;

        public UnderlyingPaymentStreamFormulaImage()
            : base(Tags.UnderlyingPaymentStreamFormulaImage) { }
        public UnderlyingPaymentStreamFormulaImage(string val)
            : base(Tags.UnderlyingPaymentStreamFormulaImage, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted : StringField
    {
        public const int TAG = 42949;

        public UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo : IntField
    {
        public const int TAG = 42950;

        public UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod : IntField
    {
        public const int TAG = 42951;

        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit : StringField
    {
        public const int TAG = 42952;

        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType : IntField
    {
        public const int TAG = 42953;

        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFinalPricePaymentDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFinalPricePaymentDateAdjusted : StringField
    {
        public const int TAG = 42954;

        public UnderlyingPaymentStreamFinalPricePaymentDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted) { }
        public UnderlyingPaymentStreamFinalPricePaymentDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFinalPricePaymentDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamFixingDates Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamFixingDates : IntField
    {
        public const int TAG = 42955;

        public NoUnderlyingPaymentStreamFixingDates()
            : base(Tags.NoUnderlyingPaymentStreamFixingDates) { }
        public NoUnderlyingPaymentStreamFixingDates(int val)
            : base(Tags.NoUnderlyingPaymentStreamFixingDates, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDate Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDate : StringField
    {
        public const int TAG = 42956;

        public UnderlyingPaymentStreamFixingDate()
            : base(Tags.UnderlyingPaymentStreamFixingDate) { }
        public UnderlyingPaymentStreamFixingDate(string val)
            : base(Tags.UnderlyingPaymentStreamFixingDate, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFixingDateType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFixingDateType : IntField
    {
        public const int TAG = 42957;

        public UnderlyingPaymentStreamFixingDateType()
            : base(Tags.UnderlyingPaymentStreamFixingDateType) { }
        public UnderlyingPaymentStreamFixingDateType(int val)
            : base(Tags.UnderlyingPaymentStreamFixingDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateUnadjusted : StringField
    {
        public const int TAG = 42958;

        public UnderlyingPaymentStreamFirstObservationDateUnadjusted()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted) { }
        public UnderlyingPaymentStreamFirstObservationDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateRelativeTo : IntField
    {
        public const int TAG = 42959;

        public UnderlyingPaymentStreamFirstObservationDateRelativeTo()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo) { }
        public UnderlyingPaymentStreamFirstObservationDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateOffsetDayType : IntField
    {
        public const int TAG = 42960;

        public UnderlyingPaymentStreamFirstObservationDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType) { }
        public UnderlyingPaymentStreamFirstObservationDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStreamFirstObservationDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFirstObservationDateAdjusted : StringField
    {
        public const int TAG = 42961;

        public UnderlyingPaymentStreamFirstObservationDateAdjusted()
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted) { }
        public UnderlyingPaymentStreamFirstObservationDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStreamFirstObservationDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamUnderlierRefID Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamUnderlierRefID : StringField
    {
        public const int TAG = 42962;

        public UnderlyingPaymentStreamUnderlierRefID()
            : base(Tags.UnderlyingPaymentStreamUnderlierRefID) { }
        public UnderlyingPaymentStreamUnderlierRefID(string val)
            : base(Tags.UnderlyingPaymentStreamUnderlierRefID, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateNotionalReset Field
    /// </summary>/
    public sealed class UnderlyingReturnRateNotionalReset : BooleanField
    {
        public const int TAG = 42963;

        public UnderlyingReturnRateNotionalReset()
            : base(Tags.UnderlyingReturnRateNotionalReset) { }
        public UnderlyingReturnRateNotionalReset(Boolean val)
            : base(Tags.UnderlyingReturnRateNotionalReset, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkInitialLevel Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkInitialLevel : DecimalField
    {
        public const int TAG = 42964;

        public UnderlyingPaymentStreamLinkInitialLevel()
            : base(Tags.UnderlyingPaymentStreamLinkInitialLevel) { }
        public UnderlyingPaymentStreamLinkInitialLevel(Decimal val)
            : base(Tags.UnderlyingPaymentStreamLinkInitialLevel, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkClosingLevelIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkClosingLevelIndicator : BooleanField
    {
        public const int TAG = 42965;

        public UnderlyingPaymentStreamLinkClosingLevelIndicator()
            : base(Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator) { }
        public UnderlyingPaymentStreamLinkClosingLevelIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamLinkClosingLevelIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkExpiringLevelIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkExpiringLevelIndicator : BooleanField
    {
        public const int TAG = 42966;

        public UnderlyingPaymentStreamLinkExpiringLevelIndicator()
            : base(Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator) { }
        public UnderlyingPaymentStreamLinkExpiringLevelIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamLinkExpiringLevelIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkEstimatedTradingDays Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkEstimatedTradingDays : IntField
    {
        public const int TAG = 42967;

        public UnderlyingPaymentStreamLinkEstimatedTradingDays()
            : base(Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays) { }
        public UnderlyingPaymentStreamLinkEstimatedTradingDays(int val)
            : base(Tags.UnderlyingPaymentStreamLinkEstimatedTradingDays, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkStrikePrice Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkStrikePrice : DecimalField
    {
        public const int TAG = 42968;

        public UnderlyingPaymentStreamLinkStrikePrice()
            : base(Tags.UnderlyingPaymentStreamLinkStrikePrice) { }
        public UnderlyingPaymentStreamLinkStrikePrice(Decimal val)
            : base(Tags.UnderlyingPaymentStreamLinkStrikePrice, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkStrikePriceType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkStrikePriceType : IntField
    {
        public const int TAG = 42969;

        public UnderlyingPaymentStreamLinkStrikePriceType()
            : base(Tags.UnderlyingPaymentStreamLinkStrikePriceType) { }
        public UnderlyingPaymentStreamLinkStrikePriceType(int val)
            : base(Tags.UnderlyingPaymentStreamLinkStrikePriceType, val) { }


        // Field Enumerations
        public const int VOLATILITY = 0;
        public const int VARIANCE = 1;
    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkMaximumBoundary Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkMaximumBoundary : DecimalField
    {
        public const int TAG = 42970;

        public UnderlyingPaymentStreamLinkMaximumBoundary()
            : base(Tags.UnderlyingPaymentStreamLinkMaximumBoundary) { }
        public UnderlyingPaymentStreamLinkMaximumBoundary(Decimal val)
            : base(Tags.UnderlyingPaymentStreamLinkMaximumBoundary, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkMinimumBoundary Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkMinimumBoundary : DecimalField
    {
        public const int TAG = 42971;

        public UnderlyingPaymentStreamLinkMinimumBoundary()
            : base(Tags.UnderlyingPaymentStreamLinkMinimumBoundary) { }
        public UnderlyingPaymentStreamLinkMinimumBoundary(Decimal val)
            : base(Tags.UnderlyingPaymentStreamLinkMinimumBoundary, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamLinkNumberOfDataSeries Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamLinkNumberOfDataSeries : IntField
    {
        public const int TAG = 42972;

        public UnderlyingPaymentStreamLinkNumberOfDataSeries()
            : base(Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries) { }
        public UnderlyingPaymentStreamLinkNumberOfDataSeries(int val)
            : base(Tags.UnderlyingPaymentStreamLinkNumberOfDataSeries, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamVarianceUnadjustedCap Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamVarianceUnadjustedCap : DecimalField
    {
        public const int TAG = 42973;

        public UnderlyingPaymentStreamVarianceUnadjustedCap()
            : base(Tags.UnderlyingPaymentStreamVarianceUnadjustedCap) { }
        public UnderlyingPaymentStreamVarianceUnadjustedCap(Decimal val)
            : base(Tags.UnderlyingPaymentStreamVarianceUnadjustedCap, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRealizedVarianceMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRealizedVarianceMethod : IntField
    {
        public const int TAG = 42974;

        public UnderlyingPaymentStreamRealizedVarianceMethod()
            : base(Tags.UnderlyingPaymentStreamRealizedVarianceMethod) { }
        public UnderlyingPaymentStreamRealizedVarianceMethod(int val)
            : base(Tags.UnderlyingPaymentStreamRealizedVarianceMethod, val) { }


        // Field Enumerations
        public const int PREVIOUS = 0;
        public const int LAST = 1;
        public const int BOTH = 2;
    }


    /// <summary>
    /// UnderlyingPaymentStreamDaysAdjustmentIndicator Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamDaysAdjustmentIndicator : BooleanField
    {
        public const int TAG = 42975;

        public UnderlyingPaymentStreamDaysAdjustmentIndicator()
            : base(Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator) { }
        public UnderlyingPaymentStreamDaysAdjustmentIndicator(Boolean val)
            : base(Tags.UnderlyingPaymentStreamDaysAdjustmentIndicator, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamNearestExchangeContractRefID Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamNearestExchangeContractRefID : StringField
    {
        public const int TAG = 42976;

        public UnderlyingPaymentStreamNearestExchangeContractRefID()
            : base(Tags.UnderlyingPaymentStreamNearestExchangeContractRefID) { }
        public UnderlyingPaymentStreamNearestExchangeContractRefID(string val)
            : base(Tags.UnderlyingPaymentStreamNearestExchangeContractRefID, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamVegaNotionalAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamVegaNotionalAmount : DecimalField
    {
        public const int TAG = 42977;

        public UnderlyingPaymentStreamVegaNotionalAmount()
            : base(Tags.UnderlyingPaymentStreamVegaNotionalAmount) { }
        public UnderlyingPaymentStreamVegaNotionalAmount(Decimal val)
            : base(Tags.UnderlyingPaymentStreamVegaNotionalAmount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaCurrency Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaCurrency : StringField
    {
        public const int TAG = 42978;

        public UnderlyingPaymentStreamFormulaCurrency()
            : base(Tags.UnderlyingPaymentStreamFormulaCurrency) { }
        public UnderlyingPaymentStreamFormulaCurrency(string val)
            : base(Tags.UnderlyingPaymentStreamFormulaCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod : StringField
    {
        public const int TAG = 42979;

        public UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod()
            : base(Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod) { }
        public UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod(string val)
            : base(Tags.UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaReferenceAmount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaReferenceAmount : IntField
    {
        public const int TAG = 42980;

        public UnderlyingPaymentStreamFormulaReferenceAmount()
            : base(Tags.UnderlyingPaymentStreamFormulaReferenceAmount) { }
        public UnderlyingPaymentStreamFormulaReferenceAmount(int val)
            : base(Tags.UnderlyingPaymentStreamFormulaReferenceAmount, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStreamFormulas Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStreamFormulas : IntField
    {
        public const int TAG = 42981;

        public NoUnderlyingPaymentStreamFormulas()
            : base(Tags.NoUnderlyingPaymentStreamFormulas) { }
        public NoUnderlyingPaymentStreamFormulas(int val)
            : base(Tags.NoUnderlyingPaymentStreamFormulas, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormula Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormula : StringField
    {
        public const int TAG = 42982;

        public UnderlyingPaymentStreamFormula()
            : base(Tags.UnderlyingPaymentStreamFormula) { }
        public UnderlyingPaymentStreamFormula(string val)
            : base(Tags.UnderlyingPaymentStreamFormula, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaDesc Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaDesc : StringField
    {
        public const int TAG = 42983;

        public UnderlyingPaymentStreamFormulaDesc()
            : base(Tags.UnderlyingPaymentStreamFormulaDesc) { }
        public UnderlyingPaymentStreamFormulaDesc(string val)
            : base(Tags.UnderlyingPaymentStreamFormulaDesc, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateUnadjusted : StringField
    {
        public const int TAG = 42984;

        public UnderlyingPaymentStubEndDateUnadjusted()
            : base(Tags.UnderlyingPaymentStubEndDateUnadjusted) { }
        public UnderlyingPaymentStubEndDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStubEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateBusinessDayConvention : IntField
    {
        public const int TAG = 42985;

        public UnderlyingPaymentStubEndDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStubEndDateBusinessDayConvention) { }
        public UnderlyingPaymentStubEndDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStubEndDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateRelativeTo : IntField
    {
        public const int TAG = 42986;

        public UnderlyingPaymentStubEndDateRelativeTo()
            : base(Tags.UnderlyingPaymentStubEndDateRelativeTo) { }
        public UnderlyingPaymentStubEndDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStubEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateOffsetPeriod : IntField
    {
        public const int TAG = 42987;

        public UnderlyingPaymentStubEndDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStubEndDateOffsetPeriod) { }
        public UnderlyingPaymentStubEndDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStubEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateOffsetUnit : StringField
    {
        public const int TAG = 42988;

        public UnderlyingPaymentStubEndDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStubEndDateOffsetUnit) { }
        public UnderlyingPaymentStubEndDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStubEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateOffsetDayType : IntField
    {
        public const int TAG = 42989;

        public UnderlyingPaymentStubEndDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStubEndDateOffsetDayType) { }
        public UnderlyingPaymentStubEndDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStubEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateAdjusted : StringField
    {
        public const int TAG = 42990;

        public UnderlyingPaymentStubEndDateAdjusted()
            : base(Tags.UnderlyingPaymentStubEndDateAdjusted) { }
        public UnderlyingPaymentStubEndDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStubEndDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStubEndDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStubEndDateBusinessCenters : IntField
    {
        public const int TAG = 42991;

        public NoUnderlyingPaymentStubEndDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters) { }
        public NoUnderlyingPaymentStubEndDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStubEndDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubEndDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubEndDateBusinessCenter : StringField
    {
        public const int TAG = 42992;

        public UnderlyingPaymentStubEndDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStubEndDateBusinessCenter) { }
        public UnderlyingPaymentStubEndDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStubEndDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateUnadjusted : StringField
    {
        public const int TAG = 42993;

        public UnderlyingPaymentStubStartDateUnadjusted()
            : base(Tags.UnderlyingPaymentStubStartDateUnadjusted) { }
        public UnderlyingPaymentStubStartDateUnadjusted(string val)
            : base(Tags.UnderlyingPaymentStubStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateBusinessDayConvention : IntField
    {
        public const int TAG = 42994;

        public UnderlyingPaymentStubStartDateBusinessDayConvention()
            : base(Tags.UnderlyingPaymentStubStartDateBusinessDayConvention) { }
        public UnderlyingPaymentStubStartDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingPaymentStubStartDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateRelativeTo : IntField
    {
        public const int TAG = 42995;

        public UnderlyingPaymentStubStartDateRelativeTo()
            : base(Tags.UnderlyingPaymentStubStartDateRelativeTo) { }
        public UnderlyingPaymentStubStartDateRelativeTo(int val)
            : base(Tags.UnderlyingPaymentStubStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateOffsetPeriod : IntField
    {
        public const int TAG = 42996;

        public UnderlyingPaymentStubStartDateOffsetPeriod()
            : base(Tags.UnderlyingPaymentStubStartDateOffsetPeriod) { }
        public UnderlyingPaymentStubStartDateOffsetPeriod(int val)
            : base(Tags.UnderlyingPaymentStubStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateOffsetUnit : StringField
    {
        public const int TAG = 42997;

        public UnderlyingPaymentStubStartDateOffsetUnit()
            : base(Tags.UnderlyingPaymentStubStartDateOffsetUnit) { }
        public UnderlyingPaymentStubStartDateOffsetUnit(string val)
            : base(Tags.UnderlyingPaymentStubStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateOffsetDayType : IntField
    {
        public const int TAG = 42998;

        public UnderlyingPaymentStubStartDateOffsetDayType()
            : base(Tags.UnderlyingPaymentStubStartDateOffsetDayType) { }
        public UnderlyingPaymentStubStartDateOffsetDayType(int val)
            : base(Tags.UnderlyingPaymentStubStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateAdjusted : StringField
    {
        public const int TAG = 42999;

        public UnderlyingPaymentStubStartDateAdjusted()
            : base(Tags.UnderlyingPaymentStubStartDateAdjusted) { }
        public UnderlyingPaymentStubStartDateAdjusted(string val)
            : base(Tags.UnderlyingPaymentStubStartDateAdjusted, val) { }

    }


    /// <summary>
    /// NoUnderlyingPaymentStubStartDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingPaymentStubStartDateBusinessCenters : IntField
    {
        public const int TAG = 43000;

        public NoUnderlyingPaymentStubStartDateBusinessCenters()
            : base(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters) { }
        public NoUnderlyingPaymentStubStartDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingPaymentStubStartDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStubStartDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingPaymentStubStartDateBusinessCenter : StringField
    {
        public const int TAG = 43001;

        public UnderlyingPaymentStubStartDateBusinessCenter()
            : base(Tags.UnderlyingPaymentStubStartDateBusinessCenter) { }
        public UnderlyingPaymentStubStartDateBusinessCenter(string val)
            : base(Tags.UnderlyingPaymentStubStartDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingProvisionBreakFeeElection Field
    /// </summary>/
    public sealed class UnderlyingProvisionBreakFeeElection : IntField
    {
        public const int TAG = 43002;

        public UnderlyingProvisionBreakFeeElection()
            : base(Tags.UnderlyingProvisionBreakFeeElection) { }
        public UnderlyingProvisionBreakFeeElection(int val)
            : base(Tags.UnderlyingProvisionBreakFeeElection, val) { }


        // Field Enumerations
        public const int FLAT_FEE = 0;
        public const int AMORTIZED_FEE = 1;
        public const int FUNDING_FEE = 2;
        public const int FLAT_FEE_AND_FUNDING_FEE = 3;
        public const int AMORTIZED_FEE_AND_FUNDING_FEE = 4;
    }


    /// <summary>
    /// UnderlyingProvisionBreakFeeRate Field
    /// </summary>/
    public sealed class UnderlyingProvisionBreakFeeRate : DecimalField
    {
        public const int TAG = 43003;

        public UnderlyingProvisionBreakFeeRate()
            : base(Tags.UnderlyingProvisionBreakFeeRate) { }
        public UnderlyingProvisionBreakFeeRate(Decimal val)
            : base(Tags.UnderlyingProvisionBreakFeeRate, val) { }

    }


    /// <summary>
    /// UnderlyingRateSpreadInitialValue Field
    /// </summary>/
    public sealed class UnderlyingRateSpreadInitialValue : DecimalField
    {
        public const int TAG = 43004;

        public UnderlyingRateSpreadInitialValue()
            : base(Tags.UnderlyingRateSpreadInitialValue) { }
        public UnderlyingRateSpreadInitialValue(Decimal val)
            : base(Tags.UnderlyingRateSpreadInitialValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingRateSpreadSteps Field
    /// </summary>/
    public sealed class NoUnderlyingRateSpreadSteps : IntField
    {
        public const int TAG = 43005;

        public NoUnderlyingRateSpreadSteps()
            : base(Tags.NoUnderlyingRateSpreadSteps) { }
        public NoUnderlyingRateSpreadSteps(int val)
            : base(Tags.NoUnderlyingRateSpreadSteps, val) { }

    }


    /// <summary>
    /// UnderlyingRateSpreadStepDate Field
    /// </summary>/
    public sealed class UnderlyingRateSpreadStepDate : StringField
    {
        public const int TAG = 43006;

        public UnderlyingRateSpreadStepDate()
            : base(Tags.UnderlyingRateSpreadStepDate) { }
        public UnderlyingRateSpreadStepDate(string val)
            : base(Tags.UnderlyingRateSpreadStepDate, val) { }

    }


    /// <summary>
    /// UnderlyingRateSpreadStepValue Field
    /// </summary>/
    public sealed class UnderlyingRateSpreadStepValue : DecimalField
    {
        public const int TAG = 43007;

        public UnderlyingRateSpreadStepValue()
            : base(Tags.UnderlyingRateSpreadStepValue) { }
        public UnderlyingRateSpreadStepValue(Decimal val)
            : base(Tags.UnderlyingRateSpreadStepValue, val) { }

    }


    /// <summary>
    /// NoUnderlyingReturnRateDates Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRateDates : IntField
    {
        public const int TAG = 43008;

        public NoUnderlyingReturnRateDates()
            : base(Tags.NoUnderlyingReturnRateDates) { }
        public NoUnderlyingReturnRateDates(int val)
            : base(Tags.NoUnderlyingReturnRateDates, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateDateMode Field
    /// </summary>/
    public sealed class UnderlyingReturnRateDateMode : IntField
    {
        public const int TAG = 43009;

        public UnderlyingReturnRateDateMode()
            : base(Tags.UnderlyingReturnRateDateMode) { }
        public UnderlyingReturnRateDateMode(int val)
            : base(Tags.UnderlyingReturnRateDateMode, val) { }


        // Field Enumerations
        public const int PRICE_VALUATION = 0;
        public const int DIVIDEND_VALUATION = 1;
    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateRelativeTo : IntField
    {
        public const int TAG = 43010;

        public UnderlyingReturnRateValuationDateRelativeTo()
            : base(Tags.UnderlyingReturnRateValuationDateRelativeTo) { }
        public UnderlyingReturnRateValuationDateRelativeTo(int val)
            : base(Tags.UnderlyingReturnRateValuationDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateOffsetPeriod : IntField
    {
        public const int TAG = 43011;

        public UnderlyingReturnRateValuationDateOffsetPeriod()
            : base(Tags.UnderlyingReturnRateValuationDateOffsetPeriod) { }
        public UnderlyingReturnRateValuationDateOffsetPeriod(int val)
            : base(Tags.UnderlyingReturnRateValuationDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateOffsetUnit : StringField
    {
        public const int TAG = 43012;

        public UnderlyingReturnRateValuationDateOffsetUnit()
            : base(Tags.UnderlyingReturnRateValuationDateOffsetUnit) { }
        public UnderlyingReturnRateValuationDateOffsetUnit(string val)
            : base(Tags.UnderlyingReturnRateValuationDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateOffsetDayType : IntField
    {
        public const int TAG = 43013;

        public UnderlyingReturnRateValuationDateOffsetDayType()
            : base(Tags.UnderlyingReturnRateValuationDateOffsetDayType) { }
        public UnderlyingReturnRateValuationDateOffsetDayType(int val)
            : base(Tags.UnderlyingReturnRateValuationDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateUnadjusted : StringField
    {
        public const int TAG = 43014;

        public UnderlyingReturnRateValuationStartDateUnadjusted()
            : base(Tags.UnderlyingReturnRateValuationStartDateUnadjusted) { }
        public UnderlyingReturnRateValuationStartDateUnadjusted(string val)
            : base(Tags.UnderlyingReturnRateValuationStartDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateRelativeTo : IntField
    {
        public const int TAG = 43015;

        public UnderlyingReturnRateValuationStartDateRelativeTo()
            : base(Tags.UnderlyingReturnRateValuationStartDateRelativeTo) { }
        public UnderlyingReturnRateValuationStartDateRelativeTo(int val)
            : base(Tags.UnderlyingReturnRateValuationStartDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateOffsetPeriod : IntField
    {
        public const int TAG = 43016;

        public UnderlyingReturnRateValuationStartDateOffsetPeriod()
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod) { }
        public UnderlyingReturnRateValuationStartDateOffsetPeriod(int val)
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateOffsetUnit : StringField
    {
        public const int TAG = 43017;

        public UnderlyingReturnRateValuationStartDateOffsetUnit()
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetUnit) { }
        public UnderlyingReturnRateValuationStartDateOffsetUnit(string val)
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateOffsetDayType : IntField
    {
        public const int TAG = 43018;

        public UnderlyingReturnRateValuationStartDateOffsetDayType()
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetDayType) { }
        public UnderlyingReturnRateValuationStartDateOffsetDayType(int val)
            : base(Tags.UnderlyingReturnRateValuationStartDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingReturnRateValuationStartDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationStartDateAdjusted : StringField
    {
        public const int TAG = 43019;

        public UnderlyingReturnRateValuationStartDateAdjusted()
            : base(Tags.UnderlyingReturnRateValuationStartDateAdjusted) { }
        public UnderlyingReturnRateValuationStartDateAdjusted(string val)
            : base(Tags.UnderlyingReturnRateValuationStartDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateUnadjusted : StringField
    {
        public const int TAG = 43020;

        public UnderlyingReturnRateValuationEndDateUnadjusted()
            : base(Tags.UnderlyingReturnRateValuationEndDateUnadjusted) { }
        public UnderlyingReturnRateValuationEndDateUnadjusted(string val)
            : base(Tags.UnderlyingReturnRateValuationEndDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateRelativeTo : IntField
    {
        public const int TAG = 43021;

        public UnderlyingReturnRateValuationEndDateRelativeTo()
            : base(Tags.UnderlyingReturnRateValuationEndDateRelativeTo) { }
        public UnderlyingReturnRateValuationEndDateRelativeTo(int val)
            : base(Tags.UnderlyingReturnRateValuationEndDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateOffsetPeriod : IntField
    {
        public const int TAG = 43022;

        public UnderlyingReturnRateValuationEndDateOffsetPeriod()
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod) { }
        public UnderlyingReturnRateValuationEndDateOffsetPeriod(int val)
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateOffsetUnit : StringField
    {
        public const int TAG = 43023;

        public UnderlyingReturnRateValuationEndDateOffsetUnit()
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetUnit) { }
        public UnderlyingReturnRateValuationEndDateOffsetUnit(string val)
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateOffsetDayType : IntField
    {
        public const int TAG = 43024;

        public UnderlyingReturnRateValuationEndDateOffsetDayType()
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetDayType) { }
        public UnderlyingReturnRateValuationEndDateOffsetDayType(int val)
            : base(Tags.UnderlyingReturnRateValuationEndDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingReturnRateValuationEndDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationEndDateAdjusted : StringField
    {
        public const int TAG = 43025;

        public UnderlyingReturnRateValuationEndDateAdjusted()
            : base(Tags.UnderlyingReturnRateValuationEndDateAdjusted) { }
        public UnderlyingReturnRateValuationEndDateAdjusted(string val)
            : base(Tags.UnderlyingReturnRateValuationEndDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationFrequencyPeriod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationFrequencyPeriod : IntField
    {
        public const int TAG = 43026;

        public UnderlyingReturnRateValuationFrequencyPeriod()
            : base(Tags.UnderlyingReturnRateValuationFrequencyPeriod) { }
        public UnderlyingReturnRateValuationFrequencyPeriod(int val)
            : base(Tags.UnderlyingReturnRateValuationFrequencyPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationFrequencyUnit Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationFrequencyUnit : StringField
    {
        public const int TAG = 43027;

        public UnderlyingReturnRateValuationFrequencyUnit()
            : base(Tags.UnderlyingReturnRateValuationFrequencyUnit) { }
        public UnderlyingReturnRateValuationFrequencyUnit(string val)
            : base(Tags.UnderlyingReturnRateValuationFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
        public const string HOUR = "H";
        public const string MINUTE = "Min";
        public const string SECOND = "S";
        public const string TERM = "T";
    }


    /// <summary>
    /// UnderlyingReturnRateValuationFrequencyRollConvention Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationFrequencyRollConvention : StringField
    {
        public const int TAG = 43028;

        public UnderlyingReturnRateValuationFrequencyRollConvention()
            : base(Tags.UnderlyingReturnRateValuationFrequencyRollConvention) { }
        public UnderlyingReturnRateValuationFrequencyRollConvention(string val)
            : base(Tags.UnderlyingReturnRateValuationFrequencyRollConvention, val) { }


        // Field Enumerations
        public const string VAL_1ST_DAY_OF_THE_MONTH = "1";
        public const string VAL_2ND_DAY_OF_THE_MONTH = "2";
        public const string VAL_3RD_DAY_OF_THE_MONTH = "3";
        public const string VAL_4TH_DAY_OF_THE_MONTH = "4";
        public const string VAL_5TH_DAY_OF_THE_MONTH = "5";
        public const string VAL_6THD_DAY_OF_THE_MONTH = "6";
        public const string VAL_7TH_DAY_OF_THE_MONTH = "7";
        public const string VAL_8TH_DAY_OF_THE_MONTH = "8";
        public const string VAL_9TH_DAY_OF_THE_MONTH = "9";
        public const string VAL_10TH_DAY_OF_THE_MONTH = "10";
        public const string VAL_11TH_DAY_OF_THE_MONTH = "11";
        public const string VAL_12TH_DAY_OF_THE_MONTH = "12";
        public const string VAL_13TH_DAY_OF_THE_MONTH = "13";
        public const string VAL_14TH_DAY_OF_THE_MONTH = "14";
        public const string VAL_15TH_DAY_OF_THE_MONTH = "15";
        public const string VAL_16TH_DAY_OF_THE_MONTH = "16";
        public const string VAL_17TH_DAY_OF_THE_MONTH = "17";
        public const string VAL_18TH_DAY_OF_THE_MONTH = "18";
        public const string VAL_19TH_DAY_OF_THE_MONTH = "19";
        public const string VAL_20TH_DAY_OF_THE_MONTH = "20";
        public const string VAL_21ST_DAY_OF_THE_MONTH = "21";
        public const string VAL_22ND_DAY_OF_THE_MONTH = "22";
        public const string VAL_23RD_DAY_OF_THE_MONTH = "23";
        public const string VAL_24TH_DAY_OF_THE_MONTH = "24";
        public const string VAL_25TH_DAY_OF_THE_MONTH = "25";
        public const string VAL_26TH_DAY_OF_THE_MONTH = "26";
        public const string VAL_27TH_DAY_OF_THE_MONTH = "27";
        public const string VAL_28TH_DAY_OF_THE_MONTH = "28";
        public const string VAL_29TH_DAY_OF_THE_MONTH = "29";
        public const string VAL_30TH_DAY_OF_THE_MONTH = "30";
        public const string THE_END_OF_THE_MONTH = "EOM";
        public const string THE_FLOATING_RATE_NOTE_CONVENTION_OR_EURODOLLAR_CONVENTION = "FRN";
        public const string THE_INTERNATIONAL_MONEY_MARKET_SETTLEMENT_DATE_IE_THE_3RD_WEDNESDAY_OF_THE_MONTH = "IMM";
        public const string THE_LAST_TRADING_DAY_EXPIRATION_DAY_OF_THE_CANADIAN_DERIVATIVES_EXCHANGE = "IMMCAD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_AUSTRALIAN_90_DAY_BANK_ACCEPTED_BILL_FUTURES_CONTRACT = "IMMAUD";
        public const string THE_LAST_TRADING_DAY_OF_THE_SYDNEY_FUTURES_EXCHANGE_NEW_ZEALAND_90_DAY_BANK_BILL_FUTURES_CONTRACT = "IMMNZD";
        public const string THE_SYDNEY_FUTURES_EXCHANGE_90_DAY_BANK_ACCEPTED_BILL_FUTURES_SETTLEMENT_DATES = "SFE";
        public const string NO_ADJUSTMENT = "NONE";
        public const string THE_13_WEEK_AND_26_WEEK_US_TREASURY_BILL_AUCTION_DATES = "TBILL";
        public const string MONDAY = "MON";
        public const string TUESDAY = "TUE";
        public const string WEDNESDAY = "WED";
        public const string THURSDAY = "THU";
        public const string FRIDAY = "FRI";
        public const string SATURDAY = "SAT";
        public const string SUNDAY = "SUN";
    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateBusinessDayConvention : IntField
    {
        public const int TAG = 43029;

        public UnderlyingReturnRateValuationDateBusinessDayConvention()
            : base(Tags.UnderlyingReturnRateValuationDateBusinessDayConvention) { }
        public UnderlyingReturnRateValuationDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingReturnRateValuationDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// NoUnderlyingReturnRateFXConversions Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRateFXConversions : IntField
    {
        public const int TAG = 43030;

        public NoUnderlyingReturnRateFXConversions()
            : base(Tags.NoUnderlyingReturnRateFXConversions) { }
        public NoUnderlyingReturnRateFXConversions(int val)
            : base(Tags.NoUnderlyingReturnRateFXConversions, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateFXCurrencySymbol Field
    /// </summary>/
    public sealed class UnderlyingReturnRateFXCurrencySymbol : StringField
    {
        public const int TAG = 43031;

        public UnderlyingReturnRateFXCurrencySymbol()
            : base(Tags.UnderlyingReturnRateFXCurrencySymbol) { }
        public UnderlyingReturnRateFXCurrencySymbol(string val)
            : base(Tags.UnderlyingReturnRateFXCurrencySymbol, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateFXRate Field
    /// </summary>/
    public sealed class UnderlyingReturnRateFXRate : DecimalField
    {
        public const int TAG = 43032;

        public UnderlyingReturnRateFXRate()
            : base(Tags.UnderlyingReturnRateFXRate) { }
        public UnderlyingReturnRateFXRate(Decimal val)
            : base(Tags.UnderlyingReturnRateFXRate, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateFXRateCalc Field
    /// </summary>/
    public sealed class UnderlyingReturnRateFXRateCalc : CharField
    {
        public const int TAG = 43033;

        public UnderlyingReturnRateFXRateCalc()
            : base(Tags.UnderlyingReturnRateFXRateCalc) { }
        public UnderlyingReturnRateFXRateCalc(char val)
            : base(Tags.UnderlyingReturnRateFXRateCalc, val) { }


        // Field Enumerations
        public const char MULTIPLY = 'M';
        public const char DIVIDE = 'D';
    }


    /// <summary>
    /// NoUnderlyingReturnRates Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRates : IntField
    {
        public const int TAG = 43034;

        public NoUnderlyingReturnRates()
            : base(Tags.NoUnderlyingReturnRates) { }
        public NoUnderlyingReturnRates(int val)
            : base(Tags.NoUnderlyingReturnRates, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRatePriceSequence Field
    /// </summary>/
    public sealed class UnderlyingReturnRatePriceSequence : IntField
    {
        public const int TAG = 43035;

        public UnderlyingReturnRatePriceSequence()
            : base(Tags.UnderlyingReturnRatePriceSequence) { }
        public UnderlyingReturnRatePriceSequence(int val)
            : base(Tags.UnderlyingReturnRatePriceSequence, val) { }


        // Field Enumerations
        public const int INITIAL = 0;
        public const int INTERIM = 1;
        public const int FINAL = 2;
    }


    /// <summary>
    /// UnderlyingReturnRateCommissionBasis Field
    /// </summary>/
    public sealed class UnderlyingReturnRateCommissionBasis : CharField
    {
        public const int TAG = 43036;

        public UnderlyingReturnRateCommissionBasis()
            : base(Tags.UnderlyingReturnRateCommissionBasis) { }
        public UnderlyingReturnRateCommissionBasis(char val)
            : base(Tags.UnderlyingReturnRateCommissionBasis, val) { }


        // Field Enumerations
        public const char AMOUNT_PER_UNIT = '1';
        public const char PERCENT = '2';
        public const char ABSOLUTE = '3';
        public const char PERCENTAGE_WAIVED_CASH_DISCOUNT_BASIS = '4';
        public const char PERCENTAGE_WAIVED_ENHANCED_UNITS_BASIS = '5';
        public const char POINTS_PER_BOND_OR_CONTRACT = '6';
        public const char AMOUNT_PER_CONTRACT = '8';
        public const char BASIS_POINTS = '7';
    }


    /// <summary>
    /// UnderlyingReturnRateCommissionAmount Field
    /// </summary>/
    public sealed class UnderlyingReturnRateCommissionAmount : DecimalField
    {
        public const int TAG = 43037;

        public UnderlyingReturnRateCommissionAmount()
            : base(Tags.UnderlyingReturnRateCommissionAmount) { }
        public UnderlyingReturnRateCommissionAmount(Decimal val)
            : base(Tags.UnderlyingReturnRateCommissionAmount, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateCommissionCurrency Field
    /// </summary>/
    public sealed class UnderlyingReturnRateCommissionCurrency : StringField
    {
        public const int TAG = 43038;

        public UnderlyingReturnRateCommissionCurrency()
            : base(Tags.UnderlyingReturnRateCommissionCurrency) { }
        public UnderlyingReturnRateCommissionCurrency(string val)
            : base(Tags.UnderlyingReturnRateCommissionCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateTotalCommissionPerTrade Field
    /// </summary>/
    public sealed class UnderlyingReturnRateTotalCommissionPerTrade : DecimalField
    {
        public const int TAG = 43039;

        public UnderlyingReturnRateTotalCommissionPerTrade()
            : base(Tags.UnderlyingReturnRateTotalCommissionPerTrade) { }
        public UnderlyingReturnRateTotalCommissionPerTrade(Decimal val)
            : base(Tags.UnderlyingReturnRateTotalCommissionPerTrade, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateDeterminationMethod : StringField
    {
        public const int TAG = 43040;

        public UnderlyingReturnRateDeterminationMethod()
            : base(Tags.UnderlyingReturnRateDeterminationMethod) { }
        public UnderlyingReturnRateDeterminationMethod(string val)
            : base(Tags.UnderlyingReturnRateDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateAmountRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingReturnRateAmountRelativeTo : IntField
    {
        public const int TAG = 43041;

        public UnderlyingReturnRateAmountRelativeTo()
            : base(Tags.UnderlyingReturnRateAmountRelativeTo) { }
        public UnderlyingReturnRateAmountRelativeTo(int val)
            : base(Tags.UnderlyingReturnRateAmountRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteMeasureType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteMeasureType : StringField
    {
        public const int TAG = 43042;

        public UnderlyingReturnRateQuoteMeasureType()
            : base(Tags.UnderlyingReturnRateQuoteMeasureType) { }
        public UnderlyingReturnRateQuoteMeasureType(string val)
            : base(Tags.UnderlyingReturnRateQuoteMeasureType, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteUnits Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteUnits : StringField
    {
        public const int TAG = 43043;

        public UnderlyingReturnRateQuoteUnits()
            : base(Tags.UnderlyingReturnRateQuoteUnits) { }
        public UnderlyingReturnRateQuoteUnits(string val)
            : base(Tags.UnderlyingReturnRateQuoteUnits, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteMethod Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteMethod : IntField
    {
        public const int TAG = 43044;

        public UnderlyingReturnRateQuoteMethod()
            : base(Tags.UnderlyingReturnRateQuoteMethod) { }
        public UnderlyingReturnRateQuoteMethod(int val)
            : base(Tags.UnderlyingReturnRateQuoteMethod, val) { }


        // Field Enumerations
        public const int BID = 0;
        public const int MID = 1;
        public const int OFFER = 2;
    }


    /// <summary>
    /// UnderlyingReturnRateQuoteCurrency Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteCurrency : StringField
    {
        public const int TAG = 43045;

        public UnderlyingReturnRateQuoteCurrency()
            : base(Tags.UnderlyingReturnRateQuoteCurrency) { }
        public UnderlyingReturnRateQuoteCurrency(string val)
            : base(Tags.UnderlyingReturnRateQuoteCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteCurrencyType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteCurrencyType : StringField
    {
        public const int TAG = 43046;

        public UnderlyingReturnRateQuoteCurrencyType()
            : base(Tags.UnderlyingReturnRateQuoteCurrencyType) { }
        public UnderlyingReturnRateQuoteCurrencyType(string val)
            : base(Tags.UnderlyingReturnRateQuoteCurrencyType, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteTimeType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteTimeType : IntField
    {
        public const int TAG = 43047;

        public UnderlyingReturnRateQuoteTimeType()
            : base(Tags.UnderlyingReturnRateQuoteTimeType) { }
        public UnderlyingReturnRateQuoteTimeType(int val)
            : base(Tags.UnderlyingReturnRateQuoteTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// UnderlyingReturnRateQuoteTime Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteTime : StringField
    {
        public const int TAG = 43048;

        public UnderlyingReturnRateQuoteTime()
            : base(Tags.UnderlyingReturnRateQuoteTime) { }
        public UnderlyingReturnRateQuoteTime(string val)
            : base(Tags.UnderlyingReturnRateQuoteTime, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteDate Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteDate : StringField
    {
        public const int TAG = 43049;

        public UnderlyingReturnRateQuoteDate()
            : base(Tags.UnderlyingReturnRateQuoteDate) { }
        public UnderlyingReturnRateQuoteDate(string val)
            : base(Tags.UnderlyingReturnRateQuoteDate, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteExpirationTime Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteExpirationTime : StringField
    {
        public const int TAG = 43050;

        public UnderlyingReturnRateQuoteExpirationTime()
            : base(Tags.UnderlyingReturnRateQuoteExpirationTime) { }
        public UnderlyingReturnRateQuoteExpirationTime(string val)
            : base(Tags.UnderlyingReturnRateQuoteExpirationTime, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteBusinessCenter : StringField
    {
        public const int TAG = 43051;

        public UnderlyingReturnRateQuoteBusinessCenter()
            : base(Tags.UnderlyingReturnRateQuoteBusinessCenter) { }
        public UnderlyingReturnRateQuoteBusinessCenter(string val)
            : base(Tags.UnderlyingReturnRateQuoteBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuoteExchange Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuoteExchange : StringField
    {
        public const int TAG = 43052;

        public UnderlyingReturnRateQuoteExchange()
            : base(Tags.UnderlyingReturnRateQuoteExchange) { }
        public UnderlyingReturnRateQuoteExchange(string val)
            : base(Tags.UnderlyingReturnRateQuoteExchange, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateQuotePricingModel Field
    /// </summary>/
    public sealed class UnderlyingReturnRateQuotePricingModel : StringField
    {
        public const int TAG = 43053;

        public UnderlyingReturnRateQuotePricingModel()
            : base(Tags.UnderlyingReturnRateQuotePricingModel) { }
        public UnderlyingReturnRateQuotePricingModel(string val)
            : base(Tags.UnderlyingReturnRateQuotePricingModel, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateCashFlowType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateCashFlowType : StringField
    {
        public const int TAG = 43054;

        public UnderlyingReturnRateCashFlowType()
            : base(Tags.UnderlyingReturnRateCashFlowType) { }
        public UnderlyingReturnRateCashFlowType(string val)
            : base(Tags.UnderlyingReturnRateCashFlowType, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationTimeType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationTimeType : IntField
    {
        public const int TAG = 43055;

        public UnderlyingReturnRateValuationTimeType()
            : base(Tags.UnderlyingReturnRateValuationTimeType) { }
        public UnderlyingReturnRateValuationTimeType(int val)
            : base(Tags.UnderlyingReturnRateValuationTimeType, val) { }


        // Field Enumerations
        public const int OPEN = 0;
        public const int OFFICIAL_SETTLEMENT_PRICE_TIME = 1;
        public const int XETRA = 2;
        public const int CLOSE = 3;
        public const int DERIVATIVES_CLOSE = 4;
        public const int HIGH = 5;
        public const int LOW = 6;
        public const int AS_SPECIFIED_IN_THE_MASTER_CONFIRMATION = 7;
    }


    /// <summary>
    /// UnderlyingReturnRateValuationTime Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationTime : StringField
    {
        public const int TAG = 43056;

        public UnderlyingReturnRateValuationTime()
            : base(Tags.UnderlyingReturnRateValuationTime) { }
        public UnderlyingReturnRateValuationTime(string val)
            : base(Tags.UnderlyingReturnRateValuationTime, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationTimeBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationTimeBusinessCenter : StringField
    {
        public const int TAG = 43057;

        public UnderlyingReturnRateValuationTimeBusinessCenter()
            : base(Tags.UnderlyingReturnRateValuationTimeBusinessCenter) { }
        public UnderlyingReturnRateValuationTimeBusinessCenter(string val)
            : base(Tags.UnderlyingReturnRateValuationTimeBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationPriceOption Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationPriceOption : IntField
    {
        public const int TAG = 43058;

        public UnderlyingReturnRateValuationPriceOption()
            : base(Tags.UnderlyingReturnRateValuationPriceOption) { }
        public UnderlyingReturnRateValuationPriceOption(int val)
            : base(Tags.UnderlyingReturnRateValuationPriceOption, val) { }


        // Field Enumerations
        public const int NONE = 0;
        public const int FUTURES_PRICE = 1;
        public const int OPTIONS_PRICE = 2;
    }


    /// <summary>
    /// UnderlyingReturnRateFinalPriceFallback Field
    /// </summary>/
    public sealed class UnderlyingReturnRateFinalPriceFallback : IntField
    {
        public const int TAG = 43059;

        public UnderlyingReturnRateFinalPriceFallback()
            : base(Tags.UnderlyingReturnRateFinalPriceFallback) { }
        public UnderlyingReturnRateFinalPriceFallback(int val)
            : base(Tags.UnderlyingReturnRateFinalPriceFallback, val) { }


        // Field Enumerations
        public const int CLOSE = 0;
        public const int HEDGE_ELECTION = 1;
    }


    /// <summary>
    /// NoUnderlyingReturnRateInformationSources Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRateInformationSources : IntField
    {
        public const int TAG = 43060;

        public NoUnderlyingReturnRateInformationSources()
            : base(Tags.NoUnderlyingReturnRateInformationSources) { }
        public NoUnderlyingReturnRateInformationSources(int val)
            : base(Tags.NoUnderlyingReturnRateInformationSources, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateInformationSource Field
    /// </summary>/
    public sealed class UnderlyingReturnRateInformationSource : IntField
    {
        public const int TAG = 43061;

        public UnderlyingReturnRateInformationSource()
            : base(Tags.UnderlyingReturnRateInformationSource) { }
        public UnderlyingReturnRateInformationSource(int val)
            : base(Tags.UnderlyingReturnRateInformationSource, val) { }


        // Field Enumerations
        public const int BLOOMBERG = 0;
        public const int REUTERS = 1;
        public const int TELERATE = 2;
        public const int OTHER = 99;
        public const int ISDA_SETTLEMENT_RATE_OPTION = 3;
    }


    /// <summary>
    /// UnderlyingReturnRateReferencePage Field
    /// </summary>/
    public sealed class UnderlyingReturnRateReferencePage : StringField
    {
        public const int TAG = 43062;

        public UnderlyingReturnRateReferencePage()
            : base(Tags.UnderlyingReturnRateReferencePage) { }
        public UnderlyingReturnRateReferencePage(string val)
            : base(Tags.UnderlyingReturnRateReferencePage, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateReferencePageHeading Field
    /// </summary>/
    public sealed class UnderlyingReturnRateReferencePageHeading : StringField
    {
        public const int TAG = 43063;

        public UnderlyingReturnRateReferencePageHeading()
            : base(Tags.UnderlyingReturnRateReferencePageHeading) { }
        public UnderlyingReturnRateReferencePageHeading(string val)
            : base(Tags.UnderlyingReturnRateReferencePageHeading, val) { }

    }


    /// <summary>
    /// NoUnderlyingReturnRatePrices Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRatePrices : IntField
    {
        public const int TAG = 43064;

        public NoUnderlyingReturnRatePrices()
            : base(Tags.NoUnderlyingReturnRatePrices) { }
        public NoUnderlyingReturnRatePrices(int val)
            : base(Tags.NoUnderlyingReturnRatePrices, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRatePriceBasis Field
    /// </summary>/
    public sealed class UnderlyingReturnRatePriceBasis : IntField
    {
        public const int TAG = 43065;

        public UnderlyingReturnRatePriceBasis()
            : base(Tags.UnderlyingReturnRatePriceBasis) { }
        public UnderlyingReturnRatePriceBasis(int val)
            : base(Tags.UnderlyingReturnRatePriceBasis, val) { }


        // Field Enumerations
        public const int GROSS = 0;
        public const int NET = 1;
        public const int ACCRUED = 2;
        public const int CLEAN_NET = 3;
    }


    /// <summary>
    /// UnderlyingReturnRatePrice Field
    /// </summary>/
    public sealed class UnderlyingReturnRatePrice : DecimalField
    {
        public const int TAG = 43066;

        public UnderlyingReturnRatePrice()
            : base(Tags.UnderlyingReturnRatePrice) { }
        public UnderlyingReturnRatePrice(Decimal val)
            : base(Tags.UnderlyingReturnRatePrice, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRatePriceCurrency Field
    /// </summary>/
    public sealed class UnderlyingReturnRatePriceCurrency : StringField
    {
        public const int TAG = 43067;

        public UnderlyingReturnRatePriceCurrency()
            : base(Tags.UnderlyingReturnRatePriceCurrency) { }
        public UnderlyingReturnRatePriceCurrency(string val)
            : base(Tags.UnderlyingReturnRatePriceCurrency, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRatePriceType Field
    /// </summary>/
    public sealed class UnderlyingReturnRatePriceType : IntField
    {
        public const int TAG = 43068;

        public UnderlyingReturnRatePriceType()
            : base(Tags.UnderlyingReturnRatePriceType) { }
        public UnderlyingReturnRatePriceType(int val)
            : base(Tags.UnderlyingReturnRatePriceType, val) { }


        // Field Enumerations
        public const int ABSOLUTE_TERMS = 0;
        public const int PERCENTAGE_OF_NOTIONAL = 1;
    }


    /// <summary>
    /// NoUnderlyingReturnRateValuationDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRateValuationDateBusinessCenters : IntField
    {
        public const int TAG = 43069;

        public NoUnderlyingReturnRateValuationDateBusinessCenters()
            : base(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters) { }
        public NoUnderlyingReturnRateValuationDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingReturnRateValuationDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateBusinessCenter : StringField
    {
        public const int TAG = 43070;

        public UnderlyingReturnRateValuationDateBusinessCenter()
            : base(Tags.UnderlyingReturnRateValuationDateBusinessCenter) { }
        public UnderlyingReturnRateValuationDateBusinessCenter(string val)
            : base(Tags.UnderlyingReturnRateValuationDateBusinessCenter, val) { }

    }


    /// <summary>
    /// NoUnderlyingReturnRateValuationDates Field
    /// </summary>/
    public sealed class NoUnderlyingReturnRateValuationDates : IntField
    {
        public const int TAG = 43071;

        public NoUnderlyingReturnRateValuationDates()
            : base(Tags.NoUnderlyingReturnRateValuationDates) { }
        public NoUnderlyingReturnRateValuationDates(int val)
            : base(Tags.NoUnderlyingReturnRateValuationDates, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationDate Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDate : StringField
    {
        public const int TAG = 43072;

        public UnderlyingReturnRateValuationDate()
            : base(Tags.UnderlyingReturnRateValuationDate) { }
        public UnderlyingReturnRateValuationDate(string val)
            : base(Tags.UnderlyingReturnRateValuationDate, val) { }

    }


    /// <summary>
    /// UnderlyingReturnRateValuationDateType Field
    /// </summary>/
    public sealed class UnderlyingReturnRateValuationDateType : IntField
    {
        public const int TAG = 43073;

        public UnderlyingReturnRateValuationDateType()
            : base(Tags.UnderlyingReturnRateValuationDateType) { }
        public UnderlyingReturnRateValuationDateType(int val)
            : base(Tags.UnderlyingReturnRateValuationDateType, val) { }


        // Field Enumerations
        public const int UNADJUSTED = 0;
        public const int ADJUSTED = 1;
    }


    /// <summary>
    /// NoUnderlyingSettlMethodElectionDateBusinessCenters Field
    /// </summary>/
    public sealed class NoUnderlyingSettlMethodElectionDateBusinessCenters : IntField
    {
        public const int TAG = 43074;

        public NoUnderlyingSettlMethodElectionDateBusinessCenters()
            : base(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters) { }
        public NoUnderlyingSettlMethodElectionDateBusinessCenters(int val)
            : base(Tags.NoUnderlyingSettlMethodElectionDateBusinessCenters, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateBusinessCenter Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateBusinessCenter : StringField
    {
        public const int TAG = 43075;

        public UnderlyingSettlMethodElectionDateBusinessCenter()
            : base(Tags.UnderlyingSettlMethodElectionDateBusinessCenter) { }
        public UnderlyingSettlMethodElectionDateBusinessCenter(string val)
            : base(Tags.UnderlyingSettlMethodElectionDateBusinessCenter, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateUnadjusted Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateUnadjusted : StringField
    {
        public const int TAG = 43076;

        public UnderlyingSettlMethodElectionDateUnadjusted()
            : base(Tags.UnderlyingSettlMethodElectionDateUnadjusted) { }
        public UnderlyingSettlMethodElectionDateUnadjusted(string val)
            : base(Tags.UnderlyingSettlMethodElectionDateUnadjusted, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateBusinessDayConvention Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateBusinessDayConvention : IntField
    {
        public const int TAG = 43077;

        public UnderlyingSettlMethodElectionDateBusinessDayConvention()
            : base(Tags.UnderlyingSettlMethodElectionDateBusinessDayConvention) { }
        public UnderlyingSettlMethodElectionDateBusinessDayConvention(int val)
            : base(Tags.UnderlyingSettlMethodElectionDateBusinessDayConvention, val) { }


        // Field Enumerations
        public const int NOT_APPLICABLE = 0;
        public const int NONE = 1;
        public const int FOLLOWING_DAY = 2;
        public const int FLOATING_RATE_NOTE = 3;
        public const int MODIFIED_FOLLOWING_DAY = 4;
        public const int PRECEDING_DAY = 5;
        public const int MODIFIED_PRECEDING_DAY = 6;
        public const int NEAREST_DAY = 7;
    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateRelativeTo Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateRelativeTo : IntField
    {
        public const int TAG = 43078;

        public UnderlyingSettlMethodElectionDateRelativeTo()
            : base(Tags.UnderlyingSettlMethodElectionDateRelativeTo) { }
        public UnderlyingSettlMethodElectionDateRelativeTo(int val)
            : base(Tags.UnderlyingSettlMethodElectionDateRelativeTo, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateOffsetPeriod Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateOffsetPeriod : IntField
    {
        public const int TAG = 43079;

        public UnderlyingSettlMethodElectionDateOffsetPeriod()
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetPeriod) { }
        public UnderlyingSettlMethodElectionDateOffsetPeriod(int val)
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetPeriod, val) { }

    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateOffsetUnit Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateOffsetUnit : StringField
    {
        public const int TAG = 43080;

        public UnderlyingSettlMethodElectionDateOffsetUnit()
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetUnit) { }
        public UnderlyingSettlMethodElectionDateOffsetUnit(string val)
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateOffsetDayType Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateOffsetDayType : IntField
    {
        public const int TAG = 43081;

        public UnderlyingSettlMethodElectionDateOffsetDayType()
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetDayType) { }
        public UnderlyingSettlMethodElectionDateOffsetDayType(int val)
            : base(Tags.UnderlyingSettlMethodElectionDateOffsetDayType, val) { }


        // Field Enumerations
        public const int BUSINESS = 0;
        public const int CALENDAR = 1;
        public const int COMMODITY_BUSINESS = 2;
        public const int CURRENCY_BUSINESS = 3;
        public const int EXCHANGE_BUSINESS = 4;
        public const int SCHEDULED_TRADING_DAY = 5;
    }


    /// <summary>
    /// UnderlyingSettlMethodElectionDateAdjusted Field
    /// </summary>/
    public sealed class UnderlyingSettlMethodElectionDateAdjusted : StringField
    {
        public const int TAG = 43082;

        public UnderlyingSettlMethodElectionDateAdjusted()
            : base(Tags.UnderlyingSettlMethodElectionDateAdjusted) { }
        public UnderlyingSettlMethodElectionDateAdjusted(string val)
            : base(Tags.UnderlyingSettlMethodElectionDateAdjusted, val) { }

    }


    /// <summary>
    /// UnderlyingStreamVersion Field
    /// </summary>/
    public sealed class UnderlyingStreamVersion : StringField
    {
        public const int TAG = 43083;

        public UnderlyingStreamVersion()
            : base(Tags.UnderlyingStreamVersion) { }
        public UnderlyingStreamVersion(string val)
            : base(Tags.UnderlyingStreamVersion, val) { }

    }


    /// <summary>
    /// UnderlyingStreamVersionEffectiveDate Field
    /// </summary>/
    public sealed class UnderlyingStreamVersionEffectiveDate : StringField
    {
        public const int TAG = 43084;

        public UnderlyingStreamVersionEffectiveDate()
            : base(Tags.UnderlyingStreamVersionEffectiveDate) { }
        public UnderlyingStreamVersionEffectiveDate(string val)
            : base(Tags.UnderlyingStreamVersionEffectiveDate, val) { }

    }


    /// <summary>
    /// UnderlyingStreamNotionalDeterminationMethod Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalDeterminationMethod : StringField
    {
        public const int TAG = 43085;

        public UnderlyingStreamNotionalDeterminationMethod()
            : base(Tags.UnderlyingStreamNotionalDeterminationMethod) { }
        public UnderlyingStreamNotionalDeterminationMethod(string val)
            : base(Tags.UnderlyingStreamNotionalDeterminationMethod, val) { }

    }


    /// <summary>
    /// UnderlyingStreamNotionalAdjustments Field
    /// </summary>/
    public sealed class UnderlyingStreamNotionalAdjustments : IntField
    {
        public const int TAG = 43086;

        public UnderlyingStreamNotionalAdjustments()
            : base(Tags.UnderlyingStreamNotionalAdjustments) { }
        public UnderlyingStreamNotionalAdjustments(int val)
            : base(Tags.UnderlyingStreamNotionalAdjustments, val) { }


        // Field Enumerations
        public const int EXECUTION = 0;
        public const int PORTFOLIO_REBALANCING = 1;
        public const int STANDARD = 2;
    }


    /// <summary>
    /// PaymentDesc Field
    /// </summary>/
    public sealed class PaymentDesc : StringField
    {
        public const int TAG = 43087;

        public PaymentDesc()
            : base(Tags.PaymentDesc) { }
        public PaymentDesc(string val)
            : base(Tags.PaymentDesc, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexID Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexID : StringField
    {
        public const int TAG = 43088;

        public LegPaymentStreamRateIndexID()
            : base(Tags.LegPaymentStreamRateIndexID) { }
        public LegPaymentStreamRateIndexID(string val)
            : base(Tags.LegPaymentStreamRateIndexID, val) { }

    }


    /// <summary>
    /// LegPaymentStreamRateIndexIDSource Field
    /// </summary>/
    public sealed class LegPaymentStreamRateIndexIDSource : StringField
    {
        public const int TAG = 43089;

        public LegPaymentStreamRateIndexIDSource()
            : base(Tags.LegPaymentStreamRateIndexIDSource) { }
        public LegPaymentStreamRateIndexIDSource(string val)
            : base(Tags.LegPaymentStreamRateIndexIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// PaymentStreamRateIndexID Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexID : StringField
    {
        public const int TAG = 43090;

        public PaymentStreamRateIndexID()
            : base(Tags.PaymentStreamRateIndexID) { }
        public PaymentStreamRateIndexID(string val)
            : base(Tags.PaymentStreamRateIndexID, val) { }

    }


    /// <summary>
    /// PaymentStreamRateIndexIDSource Field
    /// </summary>/
    public sealed class PaymentStreamRateIndexIDSource : StringField
    {
        public const int TAG = 43091;

        public PaymentStreamRateIndexIDSource()
            : base(Tags.PaymentStreamRateIndexIDSource) { }
        public PaymentStreamRateIndexIDSource(string val)
            : base(Tags.PaymentStreamRateIndexIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexID Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexID : StringField
    {
        public const int TAG = 43092;

        public UnderlyingPaymentStreamRateIndexID()
            : base(Tags.UnderlyingPaymentStreamRateIndexID) { }
        public UnderlyingPaymentStreamRateIndexID(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndexID, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamRateIndexIDSource Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamRateIndexIDSource : StringField
    {
        public const int TAG = 43093;

        public UnderlyingPaymentStreamRateIndexIDSource()
            : base(Tags.UnderlyingPaymentStreamRateIndexIDSource) { }
        public UnderlyingPaymentStreamRateIndexIDSource(string val)
            : base(Tags.UnderlyingPaymentStreamRateIndexIDSource, val) { }


        // Field Enumerations
        public const string CUSIP = "1";
        public const string SEDOL = "2";
        public const string QUIK = "3";
        public const string ISIN = "4";
        public const string RIC = "5";
        public const string ISO_CURRENCY_CODE = "6";
        public const string ISO_COUNTRY_CODE = "7";
        public const string EXCHANGE_SYMBOL = "8";
        public const string CONSOLIDATED_TAPE_ASSOCIATION = "9";
        public const string BLOOMBERG_SYMBOL = "A";
        public const string WERTPAPIER = "B";
        public const string DUTCH = "C";
        public const string VALOREN = "D";
        public const string SICOVAM = "E";
        public const string BELGIAN = "F";
        public const string COMMON = "G";
        public const string CLEARING_HOUSE = "H";
        public const string ISDA_FPML_PRODUCT_SPECIFICATION = "I";
        public const string OPTION_PRICE_REPORTING_AUTHORITY = "J";
        public const string ISDA_FPML_PRODUCT_URL = "K";
        public const string LETTER_OF_CREDIT = "L";
        public const string MARKETPLACE_ASSIGNED_IDENTIFIER = "M";
        public const string MARKIT_RED_ENTITY_CLIP = "N";
        public const string MARKIT_RED_PAIR_CLIP = "P";
        public const string CFTC_COMMODITY_CODE = "Q";
        public const string ISDA_COMMODITY_REFERENCE_PRICE = "R";
        public const string FINANCIAL_INSTRUMENT_GLOBAL_IDENTIFIER = "S";
        public const string LEGAL_ENTITY_IDENTIFIER = "T";
        public const string SYNTHETIC = "U";
        public const string FIDESSA_INSTRUMENT_MNEMONIC = "V";
        public const string INDEX_NAME = "W";
        public const string UNIFORM_SYMBOL = "X";
    }


    /// <summary>
    /// DeliveryStreamRouteOrCharter Field
    /// </summary>/
    public sealed class DeliveryStreamRouteOrCharter : StringField
    {
        public const int TAG = 43094;

        public DeliveryStreamRouteOrCharter()
            : base(Tags.DeliveryStreamRouteOrCharter) { }
        public DeliveryStreamRouteOrCharter(string val)
            : base(Tags.DeliveryStreamRouteOrCharter, val) { }

    }


    /// <summary>
    /// LegDeliveryStreamRouteOrCharter Field
    /// </summary>/
    public sealed class LegDeliveryStreamRouteOrCharter : StringField
    {
        public const int TAG = 43095;

        public LegDeliveryStreamRouteOrCharter()
            : base(Tags.LegDeliveryStreamRouteOrCharter) { }
        public LegDeliveryStreamRouteOrCharter(string val)
            : base(Tags.LegDeliveryStreamRouteOrCharter, val) { }

    }


    /// <summary>
    /// UnderlyingDeliveryStreamRouteOrCharter Field
    /// </summary>/
    public sealed class UnderlyingDeliveryStreamRouteOrCharter : StringField
    {
        public const int TAG = 43096;

        public UnderlyingDeliveryStreamRouteOrCharter()
            : base(Tags.UnderlyingDeliveryStreamRouteOrCharter) { }
        public UnderlyingDeliveryStreamRouteOrCharter(string val)
            : base(Tags.UnderlyingDeliveryStreamRouteOrCharter, val) { }

    }


    /// <summary>
    /// PaymentFixedRate Field
    /// </summary>/
    public sealed class PaymentFixedRate : DecimalField
    {
        public const int TAG = 43097;

        public PaymentFixedRate()
            : base(Tags.PaymentFixedRate) { }
        public PaymentFixedRate(Decimal val)
            : base(Tags.PaymentFixedRate, val) { }

    }


    /// <summary>
    /// PaymentFloatingRateIndex Field
    /// </summary>/
    public sealed class PaymentFloatingRateIndex : StringField
    {
        public const int TAG = 43098;

        public PaymentFloatingRateIndex()
            : base(Tags.PaymentFloatingRateIndex) { }
        public PaymentFloatingRateIndex(string val)
            : base(Tags.PaymentFloatingRateIndex, val) { }

    }


    /// <summary>
    /// PaymentFloatingRateIndexCurvePeriod Field
    /// </summary>/
    public sealed class PaymentFloatingRateIndexCurvePeriod : IntField
    {
        public const int TAG = 43099;

        public PaymentFloatingRateIndexCurvePeriod()
            : base(Tags.PaymentFloatingRateIndexCurvePeriod) { }
        public PaymentFloatingRateIndexCurvePeriod(int val)
            : base(Tags.PaymentFloatingRateIndexCurvePeriod, val) { }

    }


    /// <summary>
    /// PaymentFloatingRateIndexCurveUnit Field
    /// </summary>/
    public sealed class PaymentFloatingRateIndexCurveUnit : StringField
    {
        public const int TAG = 43100;

        public PaymentFloatingRateIndexCurveUnit()
            : base(Tags.PaymentFloatingRateIndexCurveUnit) { }
        public PaymentFloatingRateIndexCurveUnit(string val)
            : base(Tags.PaymentFloatingRateIndexCurveUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentFloatingRateSpread Field
    /// </summary>/
    public sealed class PaymentFloatingRateSpread : DecimalField
    {
        public const int TAG = 43101;

        public PaymentFloatingRateSpread()
            : base(Tags.PaymentFloatingRateSpread) { }
        public PaymentFloatingRateSpread(Decimal val)
            : base(Tags.PaymentFloatingRateSpread, val) { }

    }


    /// <summary>
    /// PaymentFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentFrequencyPeriod : IntField
    {
        public const int TAG = 43102;

        public PaymentFrequencyPeriod()
            : base(Tags.PaymentFrequencyPeriod) { }
        public PaymentFrequencyPeriod(int val)
            : base(Tags.PaymentFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentFrequencyUnit : StringField
    {
        public const int TAG = 43103;

        public PaymentFrequencyUnit()
            : base(Tags.PaymentFrequencyUnit) { }
        public PaymentFrequencyUnit(string val)
            : base(Tags.PaymentFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentRateResetFrequencyPeriod Field
    /// </summary>/
    public sealed class PaymentRateResetFrequencyPeriod : IntField
    {
        public const int TAG = 43104;

        public PaymentRateResetFrequencyPeriod()
            : base(Tags.PaymentRateResetFrequencyPeriod) { }
        public PaymentRateResetFrequencyPeriod(int val)
            : base(Tags.PaymentRateResetFrequencyPeriod, val) { }

    }


    /// <summary>
    /// PaymentRateResetFrequencyUnit Field
    /// </summary>/
    public sealed class PaymentRateResetFrequencyUnit : StringField
    {
        public const int TAG = 43105;

        public PaymentRateResetFrequencyUnit()
            : base(Tags.PaymentRateResetFrequencyUnit) { }
        public PaymentRateResetFrequencyUnit(string val)
            : base(Tags.PaymentRateResetFrequencyUnit, val) { }


        // Field Enumerations
        public const string DAY = "D";
        public const string WEEK = "Wk";
        public const string MONTH = "Mo";
        public const string YEAR = "Yr";
    }


    /// <summary>
    /// PaymentStreamOtherDayCount Field
    /// </summary>/
    public sealed class PaymentStreamOtherDayCount : StringField
    {
        public const int TAG = 43106;

        public PaymentStreamOtherDayCount()
            : base(Tags.PaymentStreamOtherDayCount) { }
        public PaymentStreamOtherDayCount(string val)
            : base(Tags.PaymentStreamOtherDayCount, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamOtherDayCount Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamOtherDayCount : StringField
    {
        public const int TAG = 43107;

        public UnderlyingPaymentStreamOtherDayCount()
            : base(Tags.UnderlyingPaymentStreamOtherDayCount) { }
        public UnderlyingPaymentStreamOtherDayCount(string val)
            : base(Tags.UnderlyingPaymentStreamOtherDayCount, val) { }

    }


    /// <summary>
    /// LegPaymentStreamOtherDayCount Field
    /// </summary>/
    public sealed class LegPaymentStreamOtherDayCount : StringField
    {
        public const int TAG = 43108;

        public LegPaymentStreamOtherDayCount()
            : base(Tags.LegPaymentStreamOtherDayCount) { }
        public LegPaymentStreamOtherDayCount(string val)
            : base(Tags.LegPaymentStreamOtherDayCount, val) { }

    }


    /// <summary>
    /// PaymentStreamFormulaLength Field
    /// </summary>/
    public sealed class PaymentStreamFormulaLength : IntField
    {
        public const int TAG = 43109;

        public PaymentStreamFormulaLength()
            : base(Tags.PaymentStreamFormulaLength) { }
        public PaymentStreamFormulaLength(int val)
            : base(Tags.PaymentStreamFormulaLength, val) { }

    }


    /// <summary>
    /// LegPaymentStreamFormulaLength Field
    /// </summary>/
    public sealed class LegPaymentStreamFormulaLength : IntField
    {
        public const int TAG = 43110;

        public LegPaymentStreamFormulaLength()
            : base(Tags.LegPaymentStreamFormulaLength) { }
        public LegPaymentStreamFormulaLength(int val)
            : base(Tags.LegPaymentStreamFormulaLength, val) { }

    }


    /// <summary>
    /// UnderlyingPaymentStreamFormulaLength Field
    /// </summary>/
    public sealed class UnderlyingPaymentStreamFormulaLength : IntField
    {
        public const int TAG = 43111;

        public UnderlyingPaymentStreamFormulaLength()
            : base(Tags.UnderlyingPaymentStreamFormulaLength) { }
        public UnderlyingPaymentStreamFormulaLength(int val)
            : base(Tags.UnderlyingPaymentStreamFormulaLength, val) { }

    }


    /// <summary>
    /// BatchID Field
    /// </summary>/
    public sealed class BatchID : StringField
    {
        public const int TAG = 50000;

        public BatchID()
            : base(Tags.BatchID) { }
        public BatchID(string val)
            : base(Tags.BatchID, val) { }

    }


    /// <summary>
    /// BatchTotalMessages Field
    /// </summary>/
    public sealed class BatchTotalMessages : IntField
    {
        public const int TAG = 50001;

        public BatchTotalMessages()
            : base(Tags.BatchTotalMessages) { }
        public BatchTotalMessages(int val)
            : base(Tags.BatchTotalMessages, val) { }

    }


    /// <summary>
    /// BatchProcessMode Field
    /// </summary>/
    public sealed class BatchProcessMode : IntField
    {
        public const int TAG = 50002;

        public BatchProcessMode()
            : base(Tags.BatchProcessMode) { }
        public BatchProcessMode(int val)
            : base(Tags.BatchProcessMode, val) { }


        // Field Enumerations
        public const int UPDATE_INCREMENTAL = 0;
        public const int SNAPSHOT = 1;
    }


}
